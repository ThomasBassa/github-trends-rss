<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Kotlin, This week</title><link>https://github.com/trending/kotlin?since=weekly</link><description>The top repositories on GitHub for kotlin, measured weekly</description><pubDate>Fri, 31 Jan 2020 01:07:32 GMT</pubDate><lastBuildDate>Fri, 31 Jan 2020 01:07:32 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>specialprojects-experiments/envelope #1 in Kotlin, This week</title><link>https://github.com/specialprojects-experiments/envelope</link><description>&lt;p&gt;&lt;i&gt;An experimental app which temporarily transforms your phone into a simpler, calmer device. Currently supports Pixel 3a&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-envelope" class="anchor" aria-hidden="true" href="#envelope"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Envelope&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://youtu.be/Au14zEGkRaQ" rel="nofollow"&gt;https://youtu.be/Au14zEGkRaQ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A set of envelopes which temporarily transform your phone into a simpler, calmer device, helping you take a break away from your digital world.
One envelope turns your phone into a very basic device which can only make and receive calls, while the other turns your phone into a photo and video camera with no screen, helping you focus on what’s in front of you.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="48677491947_a06fae30bc_kz.jpg"&gt;&lt;img src="48677491947_a06fae30bc_kz.jpg" alt="Envelope Image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Please note this currently only works on the Google Pixel 3a&lt;/p&gt;
&lt;p&gt;This code is for an app which lets you use an envelope to make and receive calls only.
Once inside an envelope your device will act as a simple phone, which only allows you to make and receive calls.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="48677490747_2eb7ffc006_k.jpg"&gt;&lt;img src="48677490747_2eb7ffc006_k.jpg" alt="Envelope Image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We hope this little experiment can help you try a digital detox from technology and help you focus on the things that matter the most.&lt;/p&gt;
&lt;p&gt;Envelope is an experimental open source Android app which is available to try right now. All of the code is available on Github for people to play with and hopefully adapt and evolve!&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="49413920108_e256778ce2_k.jpg"&gt;&lt;img src="49413920108_e256778ce2_k.jpg" alt="Envelope Image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/specialprojects-experiments/envelope/blob/master/google-unplugged-envelope-instructions.pdf"&gt;Download the DIY envelope pdf for the Pixel 3a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.specialprojects.experiments.envelopecall" rel="nofollow"&gt;Try the app on the Google Play Store&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://specialprojects.studio/project/envelope" rel="nofollow"&gt;Find out even more on our site&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>specialprojects-experiments</author><guid isPermaLink="false">https://github.com/specialprojects-experiments/envelope</guid><pubDate>Fri, 31 Jan 2020 00:01:00 GMT</pubDate></item><item><title>topjohnwu/Magisk #2 in Kotlin, This week</title><link>https://github.com/topjohnwu/Magisk</link><description>&lt;p&gt;&lt;i&gt;A Magic Mask to Alter Android System Systemless-ly&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="MD" data-path="README.MD"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-magisk" class="anchor" aria-hidden="true" href="#magisk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Magisk&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/topjohnwu/Magisk/releases"&gt;Downloads&lt;/a&gt; | &lt;a href="https://topjohnwu.github.io/Magisk/" rel="nofollow"&gt;Documentation&lt;/a&gt; | &lt;a href="https://forum.xda-developers.com/apps/magisk/official-magisk-v7-universal-systemless-t3473445" rel="nofollow"&gt;XDA Thread&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Magisk is a suite of open source tools for customizing Android, supporting devices higher than Android 4.2 (API 17). It covers the fundamental parts for Android customization: root, boot scripts, SELinux patches, AVB2.0 / dm-verity / forceencrypt removals etc.&lt;/p&gt;
&lt;p&gt;Furthermore, Magisk provides a &lt;strong&gt;Systemless Interface&lt;/strong&gt; to alter the system (or vendor) arbitrarily while the actual partitions stay completely intact. With its systemless nature along with several other hacks, Magisk can hide modifications from nearly any system integrity verifications used in banking apps, corporation monitoring apps, game cheat detections, and most importantly &lt;a href="https://developer.android.com/training/safetynet/index.html" rel="nofollow"&gt;Google's SafetyNet API&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bug-reports" class="anchor" aria-hidden="true" href="#bug-reports"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bug Reports&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Make sure to install the latest &lt;a href="https://forum.xda-developers.com/apps/magisk/dev-magisk-canary-channel-bleeding-edge-t3839337" rel="nofollow"&gt;Canary Build&lt;/a&gt; before reporting any bugs!&lt;/strong&gt; &lt;strong&gt;DO NOT&lt;/strong&gt; report bugs that are already fixed upstream. Follow the instructions in the &lt;a href="https://forum.xda-developers.com/apps/magisk/dev-magisk-canary-channel-bleeding-edge-t3839337" rel="nofollow"&gt;Canary Channel XDA Thread&lt;/a&gt;, and report a bug either by &lt;a href="https://github.com/topjohnwu/Magisk/issues"&gt;opening an issue on GitHub&lt;/a&gt; or directly in the thread.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-environment-requirements" class="anchor" aria-hidden="true" href="#building-environment-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Environment Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Python 3: run &lt;code&gt;build.py&lt;/code&gt; script&lt;/li&gt;
&lt;li&gt;Java Development Kit (JDK) 8: Compile Magisk Manager and sign zips&lt;/li&gt;
&lt;li&gt;Latest Android SDK: set &lt;code&gt;ANDROID_HOME&lt;/code&gt; environment variable to the path to Android SDK&lt;/li&gt;
&lt;li&gt;Android NDK: Install NDK along with SDK (&lt;code&gt;$ANDROID_HOME/ndk-bundle&lt;/code&gt;), or optionally specify a custom path &lt;code&gt;ANDROID_NDK_HOME&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;(Windows Only) Python package Colorama: Install with &lt;code&gt;pip install colorama&lt;/code&gt;, used for ANSI color codes&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building-notes-and-instructions" class="anchor" aria-hidden="true" href="#building-notes-and-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Notes and Instructions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Clone sources with submodules: &lt;code&gt;git clone --recurse-submodules https://github.com/topjohnwu/Magisk.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Building is supported on macOS, Linux, and Windows. Official releases are built and tested with &lt;a href="https://github.com/topjohnwu/FrankeNDK"&gt;FrankeNDK&lt;/a&gt;; point &lt;code&gt;ANDROID_NDK_HOME&lt;/code&gt; to FrankeNDK if you want to use it for compiling.&lt;/li&gt;
&lt;li&gt;Set configurations in &lt;code&gt;config.prop&lt;/code&gt;. A sample file &lt;code&gt;config.prop.sample&lt;/code&gt; is provided as an example.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;build.py&lt;/code&gt; with argument &lt;code&gt;-h&lt;/code&gt; to see the built-in help message. The &lt;code&gt;-h&lt;/code&gt; option also works for each supported actions, e.g. &lt;code&gt;./build.py binary -h&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;By default, &lt;code&gt;build.py&lt;/code&gt; build binaries and Magisk Manager in debug mode. If you want to build Magisk Manager in release mode (via the &lt;code&gt;-r, --release&lt;/code&gt; flag), you need a Java Keystore file &lt;code&gt;release-key.jks&lt;/code&gt; (only &lt;code&gt;JKS&lt;/code&gt; format is supported) to sign APKs and zips. For more information, check out &lt;a href="https://developer.android.com/studio/publish/app-signing.html#signing-manually" rel="nofollow"&gt;Google's Official Documentation&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-translations" class="anchor" aria-hidden="true" href="#translations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Translations&lt;/h2&gt;
&lt;p&gt;Default string resources for Magisk Manager and its stub APK are located here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;app/src/main/res/values/strings.xml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;stub/src/main/res/values/strings.xml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Translate each and place them in the respective locations (&lt;code&gt;[module]/src/main/res/values-[lang]/strings.xml&lt;/code&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-signature-verification" class="anchor" aria-hidden="true" href="#signature-verification"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Signature Verification&lt;/h2&gt;
&lt;p&gt;Official release zips and APKs are signed with my personal private key. You can verify the key certificate to make sure the binaries you downloaded are not manipulated in anyway.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Use the keytool command from JDK to print certificates&lt;/span&gt;
keytool -printcert -jarfile &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;APK or Magisk zip&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The output should contain the following signature&lt;/span&gt;
Owner: CN=John Wu, L=Taipei, C=TW
Issuer: CN=John Wu, L=Taipei, C=TW
Serial number: 50514879
Valid from: Sun Aug 14 13:23:44 EDT 2016 until: Tue Jul 21 13:23:44 EDT 2116
Certificate fingerprints:
	 MD5:  CE:DA:68:C1:E1:74:71:0A:EF:58:89:7D:AE:6E:AB:4F
	 SHA1: DC:0F:2B:61:CB:D7:E9:D3:DB:BE:06:0B:2B:87:0D:46:BB:06:02:11
	 SHA256: B4:CB:83:B4:DA:D9:9F:99:7D:BE:87:2F:01:3A:A1:6C:14:EE:C4:1D:16:70:21:F3:71:F7:E1:33:0F:27:3E:E6
	 Signature algorithm name: SHA256withRSA
	 Version: 3&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Magisk, including all git submodules are free software:
you can redistribute it and/or modify it under the terms of the
GNU General Public License as published by the Free Software Foundation,
either version 3 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>topjohnwu</author><guid isPermaLink="false">https://github.com/topjohnwu/Magisk</guid><pubDate>Fri, 31 Jan 2020 00:02:00 GMT</pubDate></item><item><title>arturbosch/detekt #3 in Kotlin, This week</title><link>https://github.com/arturbosch/detekt</link><description>&lt;p&gt;&lt;i&gt;Static code analysis for Kotlin&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-detekt" class="anchor" aria-hidden="true" href="#detekt"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;detekt&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://kotlinlang.slack.com/messages/C88E12QH4/convo/C0BQ5GZ0S-1511956674.000289/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2d0597f5aa9fb869b5a06de0c585518ab51e1825/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d6f6e5f736c61636b2d7265642e7376673f7374796c653d666c61742d737175617265" alt="Join the chat at https://kotlinlang.slack.com/messages/C88E12QH4/convo/C0BQ5GZ0S-1511956674.000289/" data-canonical-src="https://img.shields.io/badge/chat-on_slack-red.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://arturbosch.github.io/detekt/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bfa154918b549d9ef86b4d1f37a5354faa79a557/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f76697369742d776562736974652d7265642e7376673f7374796c653d666c61742d737175617265" alt="Visit the website at https://arturbosch.github.io/detekt/" data-canonical-src="https://img.shields.io/badge/visit-website-red.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bintray.com/arturbosch/code-analysis/detekt/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/40cddc8394da2f174aee79a7dc9b68c2d7baf151/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f6172747572626f7363682f636f64652d616e616c797369732f646574656b742f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/arturbosch/code-analysis/detekt/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;
&lt;a href="https://plugins.gradle.org/plugin/io.gitlab.arturbosch.detekt" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7496401c4c4189148aa628ab1cacce3c281e331b/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d6d657461646174612f762f68747470732f706c7567696e732e677261646c652e6f72672f6d322f696f2f6769746c61622f6172747572626f7363682f646574656b742f696f2e6769746c61622e6172747572626f7363682e646574656b742e677261646c652e706c7567696e2f6d6176656e2d6d657461646174612e786d6c2e7376673f6c6162656c3d477261646c65267374796c653d666c61742d737175617265" alt="gradle plugin" data-canonical-src="https://img.shields.io/maven-metadata/v/https/plugins.gradle.org/m2/io/gitlab/arturbosch/detekt/io.gitlab.arturbosch.detekt.gradle.plugin/maven-metadata.xml.svg?label=Gradle&amp;amp;style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/arturbosch/detekt" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ab771bc0f1633ad8a0658f3c96a9fb9fd417e057/68747470733a2f2f7472617669732d63692e6f72672f6172747572626f7363682f646574656b742e7376673f6272616e63683d6d6173746572" alt="build status" data-canonical-src="https://travis-ci.org/arturbosch/detekt.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/arturbosch/detekt" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2e77608d3050726a00da67b16244d7ba6419194c/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f33713967393876766569756c377975742f6272616e63682f6d61737465723f7376673d74727565" alt="build status windows" data-canonical-src="https://ci.appveyor.com/api/projects/status/3q9g98vveiul7yut/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/arturbosch/detekt" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fcbc936f557db3a0c069ac026bb808e76100fc33/68747470733a2f2f636f6465636f762e696f2f67682f6172747572626f7363682f646574656b742f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/arturbosch/detekt/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.codefactor.io/repository/github/arturbosch/detekt" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2139fc6ffd5236f628c793e7278df80cdbd40da7/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f6172747572626f7363682f646574656b742f6261646765" alt="CodeFactor" data-canonical-src="https://www.codefactor.io/repository/github/arturbosch/detekt/badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://app.fossa.io/projects/git%2Bgithub.com%2Farturbosch%2Fdetekt?ref=badge_shield" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9c01a4d26147dd796cbbd54f80f3ec2152ca2f66/68747470733a2f2f6170702e666f7373612e696f2f6170692f70726f6a656374732f6769742532426769746875622e636f6d2532466172747572626f736368253246646574656b742d696e74656c6c696a2d706c7567696e2e7376673f747970653d736869656c64" alt="FOSSA Status" data-canonical-src="https://app.fossa.io/api/projects/git%2Bgithub.com%2Farturbosch%2Fdetekt-intellij-plugin.svg?type=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/KotlinBy/awesome-kotlin"&gt;&lt;img src="https://camo.githubusercontent.com/a0afa2c788fcce72a8d0983a6d6c11cfeaf7f5a9/68747470733a2f2f6b6f746c696e2e6c696e6b2f617765736f6d652d6b6f746c696e2e737667" alt="Awesome Kotlin Badge" data-canonical-src="https://kotlin.link/awesome-kotlin.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Meet &lt;em&gt;detekt&lt;/em&gt;, a static code analysis tool for the &lt;em&gt;Kotlin&lt;/em&gt; programming language.
It operates on the abstract syntax tree provided by the Kotlin compiler.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/images/detekt_in_action.png"&gt;&lt;img src="docs/images/detekt_in_action.png" alt="detekt in action" title="detekt in action" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Code smell analysis for your Kotlin projects&lt;/li&gt;
&lt;li&gt;Complexity reports based on lines of code, cyclomatic complexity and amount of code smells&lt;/li&gt;
&lt;li&gt;Highly configurable rule sets&lt;/li&gt;
&lt;li&gt;Suppression of findings with Kotlin's &lt;code&gt;@Suppress&lt;/code&gt; and Java's &lt;code&gt;@SuppressWarnings&lt;/code&gt; annotations&lt;/li&gt;
&lt;li&gt;Specification of quality gates which will break your build&lt;/li&gt;
&lt;li&gt;Code Smell baseline and whitelisting for legacy projects&lt;/li&gt;
&lt;li&gt;&lt;a href="#with-gradle"&gt;Gradle plugin&lt;/a&gt; for code analysis via Gradle builds&lt;/li&gt;
&lt;li&gt;Gradle tasks to use local &lt;code&gt;IntelliJ&lt;/code&gt; distribution for formatting and inspecting Kotlin code&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arturbosch/sonar-kotlin"&gt;SonarQube integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Extensibility by enabling incorporation of personal rule sets, &lt;code&gt;FileProcessListener's&lt;/code&gt; and &lt;code&gt;OutputReport's&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arturbosch/detekt-intellij-plugin"&gt;IntelliJ integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Unofficial &lt;a href="https://github.com/Ozsie/detekt-maven-plugin"&gt;Maven plugin&lt;/a&gt; by &lt;a href="https://github.com/Ozsie"&gt;Ozsie&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-project-website" class="anchor" aria-hidden="true" href="#project-website"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Website&lt;/h3&gt;
&lt;p&gt;Visit &lt;a href="https://arturbosch.github.io/detekt/" rel="nofollow"&gt;the project website&lt;/a&gt; for installation guides, release notes, migration guides, rule descriptions and configuration options.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-quick-links" class="anchor" aria-hidden="true" href="#quick-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick-Links&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arturbosch.github.io/detekt/changelog.html" rel="nofollow"&gt;Changelog and migration guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arturbosch.github.io/detekt/cli.html" rel="nofollow"&gt;Available CLI options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arturbosch.github.io/detekt/complexity.html" rel="nofollow"&gt;Rule set and rule descriptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arturbosch.github.io/detekt/extensions.html" rel="nofollow"&gt;Writing custom rules and extending detekt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arturbosch.github.io/detekt/suppressing-rules.html" rel="nofollow"&gt;Suppressing issues in code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arturbosch.github.io/detekt/baseline.html" rel="nofollow"&gt;Suppressing issues via baseline file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arturbosch.github.io/detekt/configurations.html" rel="nofollow"&gt;Configuring detekt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sample Gradle integrations examples:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/arturbosch/detekt/blob/master/build.gradle.kts"&gt;multi project (Kotlin DSL)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arturbosch/kutils/blob/master/build.gradle"&gt;single project (Groovy DSL)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arturbosch/sonar-kotlin/blob/master/pom.xml"&gt;single project (Unofficial Maven plugin)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arturbosch/detekt/blob/3357abba87e1550c65b6610012bb291e0fbb64ce/build.gradle.kts#L280-L295"&gt;setup additional detekt task for all modules (Kotlin DSL)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arturbosch/detekt/blob/3357abba87e1550c65b6610012bb291e0fbb64ce/build.gradle.kts#L262-L278"&gt;setup additional formatting task for all modules (Kotlin DSL)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-quick-start-" class="anchor" aria-hidden="true" href="#quick-start-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start ...&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-with-the-command-line-interface" class="anchor" aria-hidden="true" href="#with-the-command-line-interface"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;with the command-line interface&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/arturbosch/detekt
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; detekt
./gradlew build shadowJar
java -jar detekt-cli/build/libs/detekt-cli-[version]-all.jar --help&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-with-gradle" class="anchor" aria-hidden="true" href="#with-gradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;with Gradle&lt;/h4&gt;
&lt;p&gt;Gradle 5.0+ is required:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;buildscript {
    repositories {
        jcenter()
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or&lt;/span&gt;

    mavenCentral()
    jcenter {
        content {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; just allow to include kotlinx projects&lt;/span&gt;
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; detekt needs 'kotlinx-html' for the html report&lt;/span&gt;
            includeGroup &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlinx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }
    }
}

plugins {
    id(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.gitlab.arturbosch.detekt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).version(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[version]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

detekt {
    failFast &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fail build on any finding&lt;/span&gt;
    buildUponDefaultConfig &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; preconfigure defaults&lt;/span&gt;
    config &lt;span class="pl-k"&gt;=&lt;/span&gt; files(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$projectDir/config/detekt.yml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; point to your custom config defining rules to run, overwriting default behavior&lt;/span&gt;
    baseline &lt;span class="pl-k"&gt;=&lt;/span&gt; file(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$projectDir/config/baseline.xml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a way of suppressing issues before introducing detekt&lt;/span&gt;

    reports {
        html.enabled &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; observe findings in your browser with structure and code snippets&lt;/span&gt;
        xml.enabled &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; checkstyle like format mainly for integrations like Jenkins&lt;/span&gt;
        txt.enabled &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; similar to the console output, contains issue signature to manually edit baseline files&lt;/span&gt;
    }
}

tasks {
    withType&amp;lt;&lt;span class="pl-en"&gt;Detekt&lt;/span&gt;&amp;gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Target version of the generated JVM bytecode. It is used for type resolution.&lt;/span&gt;
        &lt;span class="pl-c1"&gt;this&lt;/span&gt;.jvmTarget &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="https://bintray.com/arturbosch/code-analysis/detekt" rel="nofollow"&gt;bintray&lt;/a&gt; for releases and &lt;a href="https://oss.jfrog.org/artifactory/webapp/#/artifacts/browse/tree/General/oss-snapshot-local/io/gitlab/arturbosch/detekt/detekt-cli/" rel="nofollow"&gt;artifactory&lt;/a&gt; for snapshots.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-adding-more-rule-sets" class="anchor" aria-hidden="true" href="#adding-more-rule-sets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding more rule sets&lt;/h3&gt;
&lt;p&gt;detekt itself provides a wrapper over &lt;a href="https://github.com/shyiko/ktlint"&gt;KtLint&lt;/a&gt; as a &lt;code&gt;formatting&lt;/code&gt; rule set
which can be easily added to the Gradle configuration:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;dependencies {
    detektPlugins &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.gitlab.arturbosch.detekt:detekt-formatting:[version]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Likewise custom &lt;a href="https://arturbosch.github.io/detekt/extensions.html" rel="nofollow"&gt;extensions&lt;/a&gt; can be added to detekt.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h3&gt;
&lt;p&gt;If you contributed to detekt but your name is not in the list, please feel free to add yourself to it!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/arturbosch"&gt;Artur Bosch&lt;/a&gt; - Maintainer&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Mauin"&gt;Marvin Ramin&lt;/a&gt; - Collaborator, Bunch of rules, Active on Issues, refactorings, MultiRule&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/schalkms"&gt;schalks&lt;/a&gt; - Collaborator, Active on Issues, Bunch of rules, Project metrics&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vanniktech"&gt;Niklas Baudy&lt;/a&gt; - Active on Issues, Bunch of rules, Bug fixes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lummax"&gt;lummax&lt;/a&gt; - Cli enhancements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MyDogTom"&gt;Svyatoslav Chatchenko&lt;/a&gt; - Active on Issues, NamingConventions and UnusedImport fixes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/seanf"&gt;Sean Flanigan&lt;/a&gt; - Config from classpath resource&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sschuberth"&gt;Sebastian Schuberth&lt;/a&gt; - Active on Issues, Windows support&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/olivierlemasle"&gt;Olivier Lemasle&lt;/a&gt; - NP-Bugfix, rules fixes, Gradle plugin improvement&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/winterDroid"&gt;Marc Prengemann&lt;/a&gt; - Support for custom output formats, prototyped Rule-Context-Issue separation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rock3r"&gt;Sebastiano Poggi&lt;/a&gt; - Enhanced milestone report script, Magic number fixes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jvilya"&gt;Ilya Tretyakov&lt;/a&gt; - Sonar runs should not auto correct formatting.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mr-procrastinator"&gt;Andrey T&lt;/a&gt; - Readme fix&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tagantroy"&gt;Ivan Balaksha&lt;/a&gt; - Rules: UnsafeCast, SpreadOperator, UnsafeCallOnNullableType, LabeledExpression&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nevvea7"&gt;Anna Y&lt;/a&gt; - Readme fix&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/koral--"&gt;Karol Wrótniak&lt;/a&gt; - Treat comments as not empty blocks&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/radimvaculik"&gt;Radim Vaculik&lt;/a&gt; - VariableMaxLength - bugfix&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mnonnenmacher"&gt;Martin Nonnenmacher&lt;/a&gt; - UndocumentedPublicClass - enum support&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DmytroTroynikov"&gt;Dmytro Troynikov&lt;/a&gt; - Updated Magic Number rule to ignore Named Arguments&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aochsner"&gt;Andrew Ochsner&lt;/a&gt; - Updated Readme for &lt;code&gt;failFast&lt;/code&gt; option&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eskatos"&gt;Paul Merlin&lt;/a&gt; - Gradle build improvements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vacxe"&gt;Konstantin Aksenov&lt;/a&gt; - Coding improvement&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/3flex"&gt;Matthew Haughton&lt;/a&gt; - Added type resolution, Dependency updates, Coding + Documentation improvements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jbaginski"&gt;Janusz Bagiński&lt;/a&gt; - Fixed line number reporting for MaxLineLengthRule&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mkobit"&gt;Mike Kobit&lt;/a&gt; - Gradle build improvements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/philipphofmann"&gt;Philipp Hofmann&lt;/a&gt; - Readme improvements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/olivierperez"&gt;Olivier PEREZ&lt;/a&gt; - Fixed Typo in Readme&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pocmo"&gt;Sebastian Kaspari&lt;/a&gt; - Html-Output-Format, Documentation fix&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/geralt-encore"&gt;Ilya Zorin&lt;/a&gt; - Rule improvement: UnnecessaryAbstractClass&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/markov"&gt;Gesh Markov&lt;/a&gt; - Improve error message for incorrect configuration file&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/patrickpilch"&gt;Patrick Pilch&lt;/a&gt; - Rule improvement: ReturnCount&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serj-lotutovici"&gt;Serj Lotutovici&lt;/a&gt; - Rule improvement: LongParameterList&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/deeprim"&gt;Dmitry Primshyts&lt;/a&gt; - Rule improvement: MagicNumber&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/egor-n"&gt;Egor Neliuba&lt;/a&gt; - Rule improvement: EmptyFunctionBlock, EmptyClassBlock&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tasomaniac/"&gt;Said Tahsin Dane&lt;/a&gt; - Gradle plugin improvements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/misaelmt"&gt;Misa Torres&lt;/a&gt; - Added: TrailingWhitespace and NoTabs rules&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/coyotesqrl"&gt;R.A. Porter&lt;/a&gt; - Updated Readme links to RuleSets&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rvoortman"&gt;Robbin Voortman&lt;/a&gt; - Rule improvement: MaxLineLength&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/Miha-x64/"&gt;Mike Gorunov&lt;/a&gt; — Rule improvement: UndocumentedPublicFunction&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jkaan"&gt;Joey Kaan&lt;/a&gt; - New rule: MandatoryBracesIfStatements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/samarjan92"&gt;Dmitriy Samaryan&lt;/a&gt; - Rule fix: SerialVersionUIDInSerializableClass&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marianosimone"&gt;Mariano Simone&lt;/a&gt; - Rule improvement: UnusedPrivateMember. New Rules: UnusedPrivateClass, VarCouldBeVal&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/duck8823"&gt;Shunsuke Maeda&lt;/a&gt; - Fix: to work on multi module project using &lt;a href="https://github.com/Ozsie/detekt-maven-plugin"&gt;maven plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mishkun"&gt;Mikhail Levchenko&lt;/a&gt; - New rules: Unnecessary let, ExplicitItLambdaParameter&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scottkennedy"&gt;Scott Kennedy&lt;/a&gt; - Minor fixes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mickele"&gt;Mickele Moriconi&lt;/a&gt; - Added: ConstructorParameterNaming and FunctionParameterNaming rules&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ljazgar"&gt;Lukasz Jazgar&lt;/a&gt; - Fixed configuring formatting rules&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pavlospt"&gt;Pavlos-Petros Tournaris&lt;/a&gt; - Lazy evaluation of Regex in Rules&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/epeee"&gt;Erhard Pointl&lt;/a&gt; - Kotlin DSL and Gradle enhancements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/snowe2010"&gt;Tyler Thrailkill&lt;/a&gt; - FunctionNaming rule enhancements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tokou"&gt;Tarek Belkahia&lt;/a&gt; - TooManyFunctions rule options&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/karimkod"&gt;Bournane Abdelkrim&lt;/a&gt; - Fix typos&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rafaeltoledo"&gt;Rafael Toledo&lt;/a&gt; - Fix Gradle plugin badge&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aballano"&gt;Alberto Ballano&lt;/a&gt; - ExceptionRaisedInUnexpectedLocation rule improvements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gmariotti"&gt;Guido Pio Mariotti&lt;/a&gt; - Documentation improvement&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Mygod"&gt;Mygod&lt;/a&gt; - UnusedImports rule improvement&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AndreasVolkmann"&gt;Andreas Volkmann&lt;/a&gt; - yaml code comments&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/glammers"&gt;glammers&lt;/a&gt; - Documentation improvement&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mlegy"&gt;Ahmad El-Melegy&lt;/a&gt; - yaml syntax fix&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arjank"&gt;Arjan Kleene&lt;/a&gt; - Add unnecessary apply rule&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pawegio"&gt;Paweł Gajda&lt;/a&gt; - Rule improvement: FunctionParameterNaming&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alistairsykes"&gt;Alistair Sykes&lt;/a&gt; - Doc improvement&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andrew-arnott"&gt;Andrew Arnott&lt;/a&gt; - UnusedPrivateMember improvement&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tylerbwong"&gt;Tyler Wong&lt;/a&gt; - UnderscoresInNumericLiterals rule&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fourlastor"&gt;Daniele Conti&lt;/a&gt; - ObjectPropertyNaming improvement&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cortinico"&gt;Nicola Corti&lt;/a&gt; - Fixed Suppress of MaxLineLenght&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DownMoney"&gt;Michael Lotkowski&lt;/a&gt; - Rule improvement: False positive UnusedImport for componentN&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Pak3nuh"&gt;Nuno Caro&lt;/a&gt; - Adds TXT report support on Gradle plugin&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/boxresin"&gt;Minsuk Eom&lt;/a&gt; - Rule fix: PackageNaming&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-mentions" class="anchor" aria-hidden="true" href="#mentions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mentions&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://androidweekly.net/issues/issue-259" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fa593137dbff51627e4d8c3649ac274551064e89/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616e64726f69647765656b6c792e6e65742d3235392d6f72616e67652e7376673f7374796c653d666c61742d737175617265" alt="androidweekly" data-canonical-src="https://img.shields.io/badge/androidweekly.net-259-orange.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://androidweekly.cn/android-dev-wekly-issue-154/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7a5a32c8803fe231487350ec347083dd78ac4bc1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616e64726f69647765656b6c792e636e2d3135342d6f72616e67652e7376673f7374796c653d666c61742d737175617265" alt="androidweekly" data-canonical-src="https://img.shields.io/badge/androidweekly.cn-154-orange.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As mentioned in...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://doi.org/10.1145/3267183.3267186" rel="nofollow"&gt;SBCARS '18 -  Are you still smelling it?: A comparative study between Java and Kotlin language&lt;/a&gt; by &lt;a href="https://github.com/matheusflauzino/smells-experiment-Kotlin-and-Java"&gt;Flauzino et al.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=yjhQiP0329M" rel="nofollow"&gt;KotlinConf 2018 - Safe(r) Kotlin Code - Static Analysis Tools for Kotlin by Marvin Ramin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=LT6m5_LO2DQ" rel="nofollow"&gt;droidcon NYC 2018 - Static Code Analysis For Kotlin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kotlin on Code Quality Tools - by @vanniktech &lt;a href="https://docs.google.com/presentation/d/1sUoQCRHTR01JfaS67Qkd7K1rdRLOhO6QGCelZZwxOKs/edit" rel="nofollow"&gt;Slides&lt;/a&gt; &lt;a href="https://www.youtube.com/watch?v=FKDNE6PPTTE" rel="nofollow"&gt;Presentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@acerezoluna/static-code-analysis-tools-for-kotlin-in-android-fa072125fd50" rel="nofollow"&gt;@medium/acerezoluna/static-code-analysis-tools-for-kotlin-in-android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://proandroiddev.com/writing-custom-lint-rules-for-your-kotlin-project-with-detekt-653e4dbbe8b9" rel="nofollow"&gt;@medium/annayan/writing-custom-lint-rules-for-your-kotlin-project-with-detekt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tips.seebrock3r.me/free-continuous-integration-for-modern-android-apps-with-circleci-940e33451c83" rel="nofollow"&gt;Free Continuous Integration for modern Android apps with CircleCI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.thefuntasty.com/static-code-analysis-for-kotlin-in-android-8676c8d6a3c5" rel="nofollow"&gt;Static code analysis for Kotlin in Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.undabot.com/the-art-of-android-devops-fa29396bc9ee" rel="nofollow"&gt;The Art of Android DevOps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://academy.realm.io/posts/360-andev-2017-mark-scheel-continuous-integration-android/" rel="nofollow"&gt;Android Basics: Continuous Integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://proandroiddev.com/kotlin-static-analysis-why-and-how-a12042e34a98" rel="nofollow"&gt;Kotlin Static Analysis — why and how?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.frankel.ch/check-quality-kotlin-code/" rel="nofollow"&gt;Check the quality of Kotlin code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://smyachenkov.com/posts/kotlin-static-analysis-tools/" rel="nofollow"&gt;Kotlin Static Analysis Tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Integrations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.sonarqube.org/display/PLUG/SonarKotlin" rel="nofollow"&gt;SonarKotlin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codacy.com" rel="nofollow"&gt;Codacy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vanniktech/gradle-code-quality-tools-plugin"&gt;Gradle plugin that generates ErrorProne, Findbugs, Checkstyle, PMD, CPD, Lint, Detekt &amp;amp; Ktlint Tasks for every subproject&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tomasbjerre/violations-lib"&gt;Java library for parsing report files from static code analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TouK/sputnik"&gt;sputnik is a free tool for static code review and provides support for detekt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/novoda/gradle-static-analysis-plugin"&gt;Novoda Gradle Static Analysis plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ozsie/detekt-maven-plugin"&gt;Maven plugin that wraps the Detekt CLI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/btkelly/gnag"&gt;Gradle plugin that helps facilitate GitHub PR checking and automatic commenting of violations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://codefactor.io/" rel="nofollow"&gt;Codefactor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jetbrains/"&gt;JetBrains&lt;/a&gt; - Creating IntelliJ + Kotlin&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pmd/pmd"&gt;PMD&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/checkstyle/checkstyle"&gt;Checkstyle&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/shyiko/ktlint"&gt;KtLint&lt;/a&gt; - Ideas for threshold values and style rules&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>arturbosch</author><guid isPermaLink="false">https://github.com/arturbosch/detekt</guid><pubDate>Fri, 31 Jan 2020 00:03:00 GMT</pubDate></item><item><title>JetBrains/kotlin-native #4 in Kotlin, This week</title><link>https://github.com/JetBrains/kotlin-native</link><description>&lt;p&gt;&lt;i&gt;Kotlin/Native infrastructure&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c558aa8079c9095e7e944ab3db6d8e69ea01af97/687474703a2f2f6a622e67672f6261646765732f6f6666696369616c2e737667" alt="official project" data-canonical-src="http://jb.gg/badges/official.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/JetBrains/kotlin-native/releases/latest"&gt;&lt;img src="https://camo.githubusercontent.com/9b3ad4e71f9c0d93cbf196a0a765ff26b7c8dc33/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f64796e616d69632f6a736f6e2e7376673f636f6c6f723d6f72616e6765266c6162656c3d6c617465737425323076657273696f6e2671756572793d2532342e7461675f6e616d652675726c3d68747470732533412532462532466769746875622e636f6d2532464a6574427261696e732532466b6f746c696e2d6e617469766525324672656c65617365732532466c6174657374" alt="version" data-canonical-src="https://img.shields.io/badge/dynamic/json.svg?color=orange&amp;amp;label=latest%20version&amp;amp;query=%24.tag_name&amp;amp;url=https%3A%2F%2Fgithub.com%2FJetBrains%2Fkotlin-native%2Freleases%2Flatest" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-kotlinnative" class="anchor" aria-hidden="true" href="#kotlinnative"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Kotlin/Native&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Kotlin/Native&lt;/em&gt; is an LLVM backend for the Kotlin compiler, runtime
implementation, and native code generation facility using the LLVM toolchain.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kotlin/Native&lt;/em&gt; is primarily designed to allow compilation for platforms where
virtual machines are not desirable or possible (such as iOS or embedded targets),
or where a developer is willing to produce a reasonably-sized self-contained program
without the need to ship an additional execution runtime.&lt;/p&gt;
&lt;p&gt;Prerequisites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;install JDK for your platform, instead of JRE. The build requires &lt;code&gt;tools.jar&lt;/code&gt;, which is not included in JRE;&lt;/li&gt;
&lt;li&gt;on macOS install Xcode 11&lt;/li&gt;
&lt;li&gt;on Fedora 26+ &lt;code&gt;yum install ncurses-compat-libs&lt;/code&gt; may be needed&lt;/li&gt;
&lt;li&gt;on recent Ubuntu &lt;code&gt;apt install libncurses5&lt;/code&gt; is needed&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To compile from sources use following steps:&lt;/p&gt;
&lt;p&gt;First, download dependencies:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew dependencies:update
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then, build the compiler and libraries:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew bundle
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To build with experimental targets support compile with &lt;code&gt;-Porg.jetbrains.kotlin.native.experimentalTargets&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The build can take about an hour on a Macbook Pro.
To run a shorter build with only the host compiler and libraries, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew dist distPlatformLibs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To include Kotlin compiler in &lt;a href="https://docs.gradle.org/current/userguide/composite_builds.html" rel="nofollow"&gt;composite build&lt;/a&gt; and build
against it, use the &lt;code&gt;kotlinProjectPath&lt;/code&gt; project property:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew dist -PkotlinProjectPath=path/to/kotlin/project
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It's possible to include in a composite build both Kotlin compiler and Kotlin/Native Shared simultaneously.&lt;/p&gt;
&lt;p&gt;After that, you should be able to compile your programs like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export PATH=./dist/bin:$PATH
kotlinc hello.kt -o hello
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For an optimized compilation, use &lt;code&gt;-opt&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kotlinc hello.kt -o hello -opt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For tests, use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew backend.native:tests:run
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To generate interoperability stubs, create a library definition file
(refer to &lt;a href="https://github.com/JetBrains/kotlin-native/blob/master/samples/tetris/src/nativeInterop/cinterop/sdl.def"&gt;&lt;code&gt;samples/tetris/.../sdl.def&lt;/code&gt;&lt;/a&gt;), and run the &lt;code&gt;cinterop&lt;/code&gt; tool like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cinterop -def lib.def
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See the provided &lt;a href="https://github.com/JetBrains/kotlin-native/tree/master/samples"&gt;samples&lt;/a&gt; and &lt;a href="https://github.com/JetBrains/kotlin-native/blob/master/INTEROP.md"&gt;&lt;code&gt;INTEROP.md&lt;/code&gt;&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;The Interop tool generates a library in the &lt;code&gt;.klib&lt;/code&gt; library format. See &lt;a href="https://github.com/JetBrains/kotlin-native/blob/master/LIBRARIES.md"&gt;&lt;code&gt;LIBRARIES.md&lt;/code&gt;&lt;/a&gt;
for more details on this file format.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>JetBrains</author><guid isPermaLink="false">https://github.com/JetBrains/kotlin-native</guid><pubDate>Fri, 31 Jan 2020 00:04:00 GMT</pubDate></item><item><title>Kotlin/kotlinx.coroutines #5 in Kotlin, This week</title><link>https://github.com/Kotlin/kotlinx.coroutines</link><description>&lt;p&gt;&lt;i&gt;Library support for Kotlin coroutines &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-kotlinxcoroutines" class="anchor" aria-hidden="true" href="#kotlinxcoroutines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;kotlinx.coroutines&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2457c980f81ed19481871fcda0c94991c01b3e49/68747470733a2f2f6a622e67672f6261646765732f6f6666696369616c2e737667" alt="official JetBrains project" data-canonical-src="https://jb.gg/badges/official.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8e7da7b6b632d5ef4bce9a550a5d5cfe400ca1fe/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652532304c6963656e7365253230322e302d626c75652e7376673f7374796c653d666c6174" alt="GitHub license" data-canonical-src="https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bintray.com/kotlin/kotlinx/kotlinx.coroutines/1.3.3" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/100bb71a7d486cd56523fa6a1413a319afa53e51/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f6b6f746c696e2f6b6f746c696e782f6b6f746c696e782e636f726f7574696e65732f696d616765732f646f776e6c6f61642e7376673f76657273696f6e3d312e332e33" alt="Download" data-canonical-src="https://api.bintray.com/packages/kotlin/kotlinx/kotlinx.coroutines/images/download.svg?version=1.3.3" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Library support for Kotlin coroutines with &lt;a href="#multiplatform"&gt;multiplatform&lt;/a&gt; support.
This is a companion version for Kotlin &lt;code&gt;1.3.61&lt;/code&gt; release.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;suspend&lt;/span&gt; &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() &lt;span class="pl-k"&gt;=&lt;/span&gt; coroutineScope {
    launch { 
       delay(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)
       &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Kotlin Coroutines World!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) 
    }
    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Play with coroutines online &lt;a href="https://pl.kotl.in/hG_tKbid_" rel="nofollow"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-modules" class="anchor" aria-hidden="true" href="#modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modules&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="kotlinx-coroutines-core/README.md"&gt;core&lt;/a&gt; — common coroutines across all platforms:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/launch.html" rel="nofollow"&gt;launch&lt;/a&gt; and &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/async.html" rel="nofollow"&gt;async&lt;/a&gt; coroutine builders returning &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/index.html" rel="nofollow"&gt;Job&lt;/a&gt; and &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/index.html" rel="nofollow"&gt;Deferred&lt;/a&gt; light-weight futures with cancellation support;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/index.html" rel="nofollow"&gt;Dispatchers&lt;/a&gt; object with &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-main.html" rel="nofollow"&gt;Main&lt;/a&gt; dispatcher for Android/Swing/JavaFx, and &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-default.html" rel="nofollow"&gt;Default&lt;/a&gt; dispatcher for background coroutines;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/delay.html" rel="nofollow"&gt;delay&lt;/a&gt; and &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/yield.html" rel="nofollow"&gt;yield&lt;/a&gt; top-level suspending functions;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/-flow/index.html" rel="nofollow"&gt;Flow&lt;/a&gt; — cold asynchronous stream with &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/flow.html" rel="nofollow"&gt;flow&lt;/a&gt; builder and comprehensive operator set (&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/filter.html" rel="nofollow"&gt;filter&lt;/a&gt;, &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/map.html" rel="nofollow"&gt;map&lt;/a&gt;, etc);&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-channel/index.html" rel="nofollow"&gt;Channel&lt;/a&gt;, &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.sync/-mutex/index.html" rel="nofollow"&gt;Mutex&lt;/a&gt;, and &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.sync/-semaphore/index.html" rel="nofollow"&gt;Semaphore&lt;/a&gt; communication and synchronization primitives;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/coroutine-scope.html" rel="nofollow"&gt;coroutineScope&lt;/a&gt;, &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/supervisor-scope.html" rel="nofollow"&gt;supervisorScope&lt;/a&gt;, &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/with-context.html" rel="nofollow"&gt;withContext&lt;/a&gt;, and &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/with-timeout.html" rel="nofollow"&gt;withTimeout&lt;/a&gt; scope builders;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-main-scope.html" rel="nofollow"&gt;MainScope()&lt;/a&gt; for Android and UI applications;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-supervisor-job.html" rel="nofollow"&gt;SupervisorJob()&lt;/a&gt; and &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-coroutine-exception-handler/index.html" rel="nofollow"&gt;CoroutineExceptionHandler&lt;/a&gt; for supervision of coroutines hierarchies;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.selects/select.html" rel="nofollow"&gt;select&lt;/a&gt; expression support and more.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="kotlinx-coroutines-core/jvm/"&gt;core/jvm&lt;/a&gt; — additional core features available on Kotlin/JVM:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-i-o.html" rel="nofollow"&gt;Dispatchers.IO&lt;/a&gt; dispatcher for blocking coroutines;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/java.util.concurrent.-executor/as-coroutine-dispatcher.html" rel="nofollow"&gt;Executor.asCoroutineDispatcher&lt;/a&gt; extension, custom thread pools, and more.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="kotlinx-coroutines-core/js/"&gt;core/js&lt;/a&gt; — additional core features available on Kotlin/JS:
&lt;ul&gt;
&lt;li&gt;Integration with &lt;code&gt;Promise&lt;/code&gt; via &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/kotlin.js.-promise/await.html" rel="nofollow"&gt;Promise.await&lt;/a&gt; and &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/promise.html" rel="nofollow"&gt;promise&lt;/a&gt; builder;&lt;/li&gt;
&lt;li&gt;Integration with &lt;code&gt;Window&lt;/code&gt; via &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/org.w3c.dom.-window/as-coroutine-dispatcher.html" rel="nofollow"&gt;Window.asCoroutineDispatcher&lt;/a&gt;, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="kotlinx-coroutines-test/README.md"&gt;test&lt;/a&gt; — test utilities for coroutines:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-test/kotlinx.coroutines.test/kotlinx.coroutines.-dispatchers/set-main.html" rel="nofollow"&gt;Dispatchers.setMain&lt;/a&gt; to override &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-main.html" rel="nofollow"&gt;Dispatchers.Main&lt;/a&gt; in tests;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-test/kotlinx.coroutines.test/-test-coroutine-scope/index.html" rel="nofollow"&gt;TestCoroutineScope&lt;/a&gt; to test suspending functions and coroutines.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="kotlinx-coroutines-debug/README.md"&gt;debug&lt;/a&gt; — debug utilities for coroutines:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-debug/kotlinx.coroutines.debug/-debug-probes/index.html" rel="nofollow"&gt;DebugProbes&lt;/a&gt; API to probe, keep track of, print and dump active coroutines;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-debug/kotlinx.coroutines.debug.junit4/-coroutines-timeout/index.html" rel="nofollow"&gt;CoroutinesTimeout&lt;/a&gt; test rule to automatically dump coroutines on test timeout.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="reactive/README.md"&gt;reactive&lt;/a&gt; — modules that provide builders and iteration support for various reactive streams libraries:
&lt;ul&gt;
&lt;li&gt;Reactive Streams (&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-reactive/kotlinx.coroutines.reactive/org.reactivestreams.-publisher/collect.html" rel="nofollow"&gt;Publisher.collect&lt;/a&gt;, &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-reactive/kotlinx.coroutines.reactive/org.reactivestreams.-publisher/await-single.html" rel="nofollow"&gt;Publisher.awaitSingle&lt;/a&gt;, &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-reactive/kotlinx.coroutines.reactive/publish.html" rel="nofollow"&gt;publish&lt;/a&gt;, etc),
RxJava 2.x (&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-rx2/kotlinx.coroutines.rx2/rx-flowable.html" rel="nofollow"&gt;rxFlowable&lt;/a&gt;, &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-rx2/kotlinx.coroutines.rx2/rx-single.html" rel="nofollow"&gt;rxSingle&lt;/a&gt;, etc), and
Project Reactor (&lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-reactor/kotlinx.coroutines.reactor/flux.html" rel="nofollow"&gt;flux&lt;/a&gt;, &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-reactor/kotlinx.coroutines.reactor/mono.html" rel="nofollow"&gt;mono&lt;/a&gt;, etc).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="ui/README.md"&gt;ui&lt;/a&gt; — modules that provide coroutine dispatchers for various single-threaded UI libraries:
&lt;ul&gt;
&lt;li&gt;Android, JavaFX, and Swing.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="integration/README.md"&gt;integration&lt;/a&gt; — modules that provide integration with various asynchronous callback- and future-based libraries:
&lt;ul&gt;
&lt;li&gt;JDK8 &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-jdk8/kotlinx.coroutines.future/java.util.concurrent.-completion-stage/await.html" rel="nofollow"&gt;CompletionStage.await&lt;/a&gt;, Guava &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-guava/kotlinx.coroutines.guava/com.google.common.util.concurrent.-listenable-future/await.html" rel="nofollow"&gt;ListenableFuture.await&lt;/a&gt;, and Google Play Services [Task.await];&lt;/li&gt;
&lt;li&gt;SLF4J MDC integration via &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-slf4j/kotlinx.coroutines.slf4j/-m-d-c-context/index.html" rel="nofollow"&gt;MDCContext&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Presentations and videos:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=_hfBv0a09Jc" rel="nofollow"&gt;Introduction to Coroutines&lt;/a&gt; (Roman Elizarov at KotlinConf 2017, &lt;a href="https://www.slideshare.net/elizarov/introduction-to-coroutines-kotlinconf-2017" rel="nofollow"&gt;slides&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=YrrUCSi72E8" rel="nofollow"&gt;Deep dive into Coroutines&lt;/a&gt; (Roman Elizarov at KotlinConf 2017, &lt;a href="https://www.slideshare.net/elizarov/deep-dive-into-coroutines-on-jvm-kotlinconf-2017" rel="nofollow"&gt;slides&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=a3agLJQ6vt8" rel="nofollow"&gt;Kotlin Coroutines in Practice&lt;/a&gt; (Roman Elizarov at KotlinConf 2018, &lt;a href="https://www.slideshare.net/elizarov/kotlin-coroutines-in-practice-kotlinconf-2018" rel="nofollow"&gt;slides&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Guides and manuals:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kotlinlang.org/docs/reference/coroutines/coroutines-guide.html" rel="nofollow"&gt;Guide to kotlinx.coroutines by example&lt;/a&gt; (&lt;strong&gt;read it first&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="ui/coroutines-guide-ui.md"&gt;Guide to UI programming with coroutines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/debugging.md"&gt;Debugging capabilities in kotlinx.coroutines&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/compatibility.md"&gt;Compatibility policy and experimental annotations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="CHANGES.md"&gt;Change log for kotlinx.coroutines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kotlin/KEEP/blob/master/proposals/coroutines.md"&gt;Coroutines design document (KEEP)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlin.github.io/kotlinx.coroutines" rel="nofollow"&gt;Full kotlinx.coroutines API reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-using-in-your-projects" class="anchor" aria-hidden="true" href="#using-in-your-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using in your projects&lt;/h2&gt;
&lt;p&gt;The libraries are published to &lt;a href="https://bintray.com/kotlin/kotlinx/kotlinx.coroutines" rel="nofollow"&gt;kotlinx&lt;/a&gt; bintray repository,
linked to &lt;a href="https://bintray.com/bintray/jcenter?filterByPkgName=kotlinx.coroutines" rel="nofollow"&gt;JCenter&lt;/a&gt; and
pushed to &lt;a href="https://search.maven.org/#search%7Cga%7C1%7Cg%3Aorg.jetbrains.kotlinx%20a%3Akotlinx-coroutines*" rel="nofollow"&gt;Maven Central&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-maven" class="anchor" aria-hidden="true" href="#maven"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maven&lt;/h3&gt;
&lt;p&gt;Add dependencies (you can also add other modules that you need):&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.jetbrains.kotlinx&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;kotlinx-coroutines-core&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;1.3.3&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And make sure that you use the latest Kotlin version:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;properties&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;kotlin&lt;/span&gt;.version&amp;gt;1.3.61&amp;lt;/&lt;span class="pl-ent"&gt;kotlin&lt;/span&gt;.version&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;properties&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-gradle" class="anchor" aria-hidden="true" href="#gradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle&lt;/h3&gt;
&lt;p&gt;Add dependencies (you can also add other modules that you need):&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;dependencies {
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And make sure that you use the latest Kotlin version:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;buildscript {
    ext&lt;span class="pl-k"&gt;.&lt;/span&gt;kotlin_version &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;1.3.61&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make sure that you have either &lt;code&gt;jcenter()&lt;/code&gt; or &lt;code&gt;mavenCentral()&lt;/code&gt; in the list of repositories:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;repository {
    jcenter()
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-gradle-kotlin-dsl" class="anchor" aria-hidden="true" href="#gradle-kotlin-dsl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle Kotlin DSL&lt;/h3&gt;
&lt;p&gt;Add dependencies (you can also add other modules that you need):&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;dependencies {
    implementation(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And make sure that you use the latest Kotlin version:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;plugins {
    kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jvm&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) version &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.3.61&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make sure that you have either &lt;code&gt;jcenter()&lt;/code&gt; or &lt;code&gt;mavenCentral()&lt;/code&gt; in the list of repositories.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-multiplatform" class="anchor" aria-hidden="true" href="#multiplatform"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multiplatform&lt;/h3&gt;
&lt;p&gt;Core modules of &lt;code&gt;kotlinx.coroutines&lt;/code&gt; are also available for
&lt;a href="#js"&gt;Kotlin/JS&lt;/a&gt; and &lt;a href="#native"&gt;Kotlin/Native&lt;/a&gt;.
In common code that should get compiled for different platforms, add dependency to&lt;br&gt;
&lt;a href="https://search.maven.org/artifact/org.jetbrains.kotlinx/kotlinx-coroutines-core-common/1.3.3/jar" rel="nofollow"&gt;&lt;code&gt;kotlinx-coroutines-core-common&lt;/code&gt;&lt;/a&gt;
(follow the link to get the dependency declaration snippet).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-android" class="anchor" aria-hidden="true" href="#android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android&lt;/h3&gt;
&lt;p&gt;Add &lt;a href="ui/kotlinx-coroutines-android"&gt;&lt;code&gt;kotlinx-coroutines-android&lt;/code&gt;&lt;/a&gt;
module as dependency when using &lt;code&gt;kotlinx.coroutines&lt;/code&gt; on Android:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This gives you access to Android &lt;a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-dispatchers/-main.html" rel="nofollow"&gt;Dispatchers.Main&lt;/a&gt;
coroutine dispatcher and also makes sure that in case of crashed coroutine with unhandled exception this
exception is logged before crashing Android application, similarly to the way uncaught exceptions in
threads are handled by Android runtime.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-r8-and-proguard" class="anchor" aria-hidden="true" href="#r8-and-proguard"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;R8 and ProGuard&lt;/h4&gt;
&lt;p&gt;For R8 no actions required, it will take obfuscation rules from the jar.&lt;/p&gt;
&lt;p&gt;For Proguard  you need to add options from &lt;a href="kotlinx-coroutines-core/jvm/resources/META-INF/proguard/coroutines.pro"&gt;coroutines.pro&lt;/a&gt; to your rules manually.&lt;/p&gt;
&lt;p&gt;R8 is a replacement for ProGuard in Android ecosystem, it is enabled by default since Android gradle plugin 3.4.0 (3.3.0-beta also had it enabled).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-js" class="anchor" aria-hidden="true" href="#js"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JS&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://kotlinlang.org/docs/reference/js-overview.html" rel="nofollow"&gt;Kotlin/JS&lt;/a&gt; version of &lt;code&gt;kotlinx.coroutines&lt;/code&gt; is published as
&lt;a href="https://search.maven.org/artifact/org.jetbrains.kotlinx/kotlinx-coroutines-core-js/1.3.3/jar" rel="nofollow"&gt;&lt;code&gt;kotlinx-coroutines-core-js&lt;/code&gt;&lt;/a&gt;
(follow the link to get the dependency declaration snippet).&lt;/p&gt;
&lt;p&gt;You can also use &lt;a href="https://www.npmjs.com/package/kotlinx-coroutines-core" rel="nofollow"&gt;&lt;code&gt;kotlinx-coroutines-core&lt;/code&gt;&lt;/a&gt; package via NPM.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-native" class="anchor" aria-hidden="true" href="#native"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Native&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://kotlinlang.org/docs/reference/native-overview.html" rel="nofollow"&gt;Kotlin/Native&lt;/a&gt; version of &lt;code&gt;kotlinx.coroutines&lt;/code&gt; is published as
&lt;a href="https://search.maven.org/artifact/org.jetbrains.kotlinx/kotlinx-coroutines-core-native/1.3.3/jar" rel="nofollow"&gt;&lt;code&gt;kotlinx-coroutines-core-native&lt;/code&gt;&lt;/a&gt;
(follow the link to get the dependency declaration snippet).&lt;/p&gt;
&lt;p&gt;Only single-threaded code (JS-style) on Kotlin/Native is currently supported.
Kotlin/Native supports only Gradle version 4.10 and you need to enable Gradle metadata in your
&lt;code&gt;settings.gradle&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;enableFeaturePreview(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GRADLE_METADATA&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since Kotlin/Native does not generally provide binary compatibility between versions,
you should use the same version of Kotlin/Native compiler as was used to build &lt;code&gt;kotlinx.coroutines&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;This library is built with Gradle. To build it, use &lt;code&gt;./gradlew build&lt;/code&gt;.
You can import this project into IDEA, but you have to delegate build actions
to Gradle (in Preferences -&amp;gt; Build, Execution, Deployment -&amp;gt; Build Tools -&amp;gt; Gradle -&amp;gt; Runner)&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;JDK &amp;gt;= 1.8 referred to by the &lt;code&gt;JAVA_HOME&lt;/code&gt; environment variable. JDK must include JavaFX.&lt;/li&gt;
&lt;li&gt;JDK 1.6 referred to by the &lt;code&gt;JDK_16&lt;/code&gt; environment variable. It is okay to have &lt;code&gt;JDK_16&lt;/code&gt; pointing to &lt;code&gt;JAVA_HOME&lt;/code&gt; for external contributions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributions-and-releases" class="anchor" aria-hidden="true" href="#contributions-and-releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions and releases&lt;/h2&gt;
&lt;p&gt;All development (both new features and bug fixes) is performed in &lt;code&gt;develop&lt;/code&gt; branch.
This way &lt;code&gt;master&lt;/code&gt; sources always contain sources of the most recently released version.
Please send PRs with bug fixes to &lt;code&gt;develop&lt;/code&gt; branch.
Fixes to documentation in markdown files are an exception to this rule. They are updated directly in &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;develop&lt;/code&gt; branch is pushed to &lt;code&gt;master&lt;/code&gt; during release.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Full release procedure checklist is &lt;a href="RELEASE.md"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Steps for contributing new integration modules are explained &lt;a href="integration/README.md#Contributing"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


























&lt;/article&gt;&lt;/div&gt;</description><author>Kotlin</author><guid isPermaLink="false">https://github.com/Kotlin/kotlinx.coroutines</guid><pubDate>Fri, 31 Jan 2020 00:05:00 GMT</pubDate></item><item><title>arrow-kt/arrow #6 in Kotlin, This week</title><link>https://github.com/arrow-kt/arrow</link><description>&lt;p&gt;&lt;i&gt;Functional companion to Kotlin's Standard Library&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/29458023?v=4&amp;amp;s=200"&gt;&lt;img height="100" src="https://avatars2.githubusercontent.com/u/29458023?v=4&amp;amp;s=200" width="100" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://maven-badges.herokuapp.com/maven-central/io.arrow-kt/arrow-core" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bf50b2fbfd2ba7c879e9f43391f6c63247d74185/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d63656e7472616c2f762f696f2e6172726f772d6b742f6172726f772d636f72653f636f6c6f723d253233346361663530" alt="Maven Central" data-canonical-src="https://img.shields.io/maven-central/v/io.arrow-kt/arrow-core?color=%234caf50" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://oss.jfrog.org/artifactory/oss-snapshot-local/io/arrow-kt/arrow-core/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fb0da2732dee730ef409c793a7ae48d7278741c8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6174657374253230736e617073686f742d76302e31302e352d2d534e415053484f542d626c7565" alt="Latest snapshot" data-canonical-src="https://img.shields.io/badge/latest%20snapshot-v0.10.5--SNAPSHOT-blue" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://oss.jfrog.org/artifactory/oss-snapshot-local/io/arrow-kt/arrow-core/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b46ea35f62207c130869f6e41b50238d6d452f24/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d6d657461646174612f763f6c6162656c3d6c6174657374253230736e617073686f74266d6574616461746155726c3d68747470732533412532462532466f73732e6a66726f672e6f726725324661727469666163746f72792532466f73732d736e617073686f742d6c6f63616c253246696f2532466172726f772d6b742532466172726f772d636f72652532466d6176656e2d6d657461646174612e786d6c" alt="Latest snapshot" data-canonical-src="https://img.shields.io/maven-metadata/v?label=latest%20snapshot&amp;amp;metadataUrl=https%3A%2F%2Foss.jfrog.org%2Fartifactory%2Foss-snapshot-local%2Fio%2Farrow-kt%2Farrow-core%2Fmaven-metadata.xml" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/arrow-kt/arrow/actions?query=workflow%3ARelease+branch%3Amaster"&gt;&lt;img src="https://github.com/arrow-kt/arrow/workflows/Release/badge.svg" alt="Release Status" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://kotlinlang.org/docs/reference/whatsnew13.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b603eed9e5a08b6223ab35f7190a6a8f7c3ce3d1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6b6f746c696e2d312e332d626c75652e737667" alt="Kotlin version badge" data-canonical-src="https://img.shields.io/badge/kotlin-1.3-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8051e9938a1ab39cf002818dfceb6b6092f34d68/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667" alt="License" data-canonical-src="https://img.shields.io/badge/License-Apache%202.0-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://stackoverflow.com/questions/tagged/arrow-kt" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5aa6b0cb4fe2c4db4daf2dd8d7cfc7f70aa2674d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6172726f772d2d6b742d626c61636b2e7376673f6c6f676f3d737461636b6f766572666c6f77" alt="StackOverflow" data-canonical-src="https://img.shields.io/badge/arrow--kt-black.svg?logo=stackoverflow" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Λrrow is a library for Typed Functional Programming in Kotlin.&lt;/p&gt;
&lt;p&gt;Arrow aims to provide a &lt;a href="https://en.wikipedia.org/wiki/Lingua_franca" rel="nofollow"&gt;&lt;em&gt;lingua franca&lt;/em&gt;&lt;/a&gt; of interfaces and abstractions across Kotlin libraries.
For this, it includes the most popular data types, type classes and abstractions such as &lt;code&gt;Option&lt;/code&gt;, &lt;code&gt;Try&lt;/code&gt;, &lt;code&gt;Either&lt;/code&gt;, &lt;code&gt;IO&lt;/code&gt;, &lt;code&gt;Functor&lt;/code&gt;, &lt;code&gt;Applicative&lt;/code&gt;, &lt;code&gt;Monad&lt;/code&gt; to empower users to write pure FP apps and libraries built atop higher order abstractions.&lt;/p&gt;
&lt;p&gt;Use the list below to learn more about Λrrow's main features.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://arrow-kt.io" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://arrow-kt.io/docs/patterns/glossary/" rel="nofollow"&gt;Patterns&lt;/a&gt;: tutorials and approaches to day-to-day challenges using FP&lt;/li&gt;
&lt;li&gt;&lt;a href="http://arrow-kt.io/docs/quickstart/libraries/" rel="nofollow"&gt;Libraries&lt;/a&gt;: all the libraries provided by Λrrow&lt;/li&gt;
&lt;li&gt;&lt;a href="http://arrow-kt.io/docs/typeclasses/intro/" rel="nofollow"&gt;Type classes&lt;/a&gt;: defining behaviors for data&lt;/li&gt;
&lt;li&gt;&lt;a href="http://arrow-kt.io/docs/datatypes/intro/" rel="nofollow"&gt;Data types&lt;/a&gt;: common abstractions&lt;/li&gt;
&lt;li&gt;&lt;a href="http://arrow-kt.io/docs/effects/io/" rel="nofollow"&gt;Effects&lt;/a&gt;: interfacing with external systems&lt;/li&gt;
&lt;li&gt;&lt;a href="http://arrow-kt.io/docs/optics/iso/" rel="nofollow"&gt;Optics&lt;/a&gt;: inspecting and modifying data structures&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-curated-external-links" class="anchor" aria-hidden="true" href="#curated-external-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Curated external links&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://arrow-kt.io/docs/quickstart/projects/" rel="nofollow"&gt;Projects and Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://arrow-kt.io/docs/quickstart/blogs/" rel="nofollow"&gt;Blogs and Presentations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-join-us" class="anchor" aria-hidden="true" href="#join-us"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Join Us&lt;/h2&gt;
&lt;p&gt;Arrow is an inclusive community powered by awesome individuals like you. As an actively growing ecosystem, Arrow and its associated libraries and toolsets are in need of new contributors! We have issues suited for all levels, from entry to advanced, and our maintainers are happy to provide 1:1 mentoring. All are welcome in Arrow.&lt;/p&gt;
&lt;p&gt;If you’re looking to contribute, have questions, or want to keep up-to-date about what’s happening, please follow us here and say hello!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/arrow_kt" rel="nofollow"&gt;Arrow on Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlinlang.slack.com/messages/C5UPMM0A0" rel="nofollow"&gt;#Arrow on Kotlin Slack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitter.im/arrow-kt/Lobby" rel="nofollow"&gt;Arrow on Gitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-next-development-version" class="anchor" aria-hidden="true" href="#next-development-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Next development version&lt;/h3&gt;
&lt;p&gt;If you want to try the last features, replace &lt;code&gt;0.10.4&lt;/code&gt; by &lt;code&gt;0.10.5-SNAPSHOT&lt;/code&gt; in the following guideline.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-jdk" class="anchor" aria-hidden="true" href="#jdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JDK&lt;/h3&gt;
&lt;p&gt;Make sure to have the latest version of JDK 1.8 installed.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-android" class="anchor" aria-hidden="true" href="#android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android&lt;/h3&gt;
&lt;p&gt;Arrow supports Android out of the box starting on API 21 and up.&lt;/p&gt;
&lt;p&gt;We'll be working on a Arrow-Android integration module that adds some helpers and integrations.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-gradle" class="anchor" aria-hidden="true" href="#gradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-basic-setup" class="anchor" aria-hidden="true" href="#basic-setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic Setup&lt;/h4&gt;
&lt;p&gt;In your project's root &lt;code&gt;build.gradle&lt;/code&gt; append these repositories to your list:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;allprojects {
    repositories {
        mavenCentral()
        jcenter()
        maven { url &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://dl.bintray.com/arrow-kt/arrow-kt/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; } 
        maven { url &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://oss.jfrog.org/artifactory/oss-snapshot-local/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; for SNAPSHOT builds&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add the dependencies into the project's &lt;code&gt;build.gradle&lt;/code&gt;:&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-λrrow-core" class="anchor" aria-hidden="true" href="#λrrow-core"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Λrrow Core&lt;/h5&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;kotlin-kapt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;def&lt;/span&gt; arrow_version &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.10.4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
dependencies {
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-core:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-syntax:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    kapt    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-meta:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-λrrow-core--λrrow-optics" class="anchor" aria-hidden="true" href="#λrrow-core--λrrow-optics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Λrrow Core + Λrrow Optics&lt;/h5&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;kotlin-kapt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;def&lt;/span&gt; arrow_version &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.10.4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
dependencies {
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-optics:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-syntax:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    kapt    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-meta:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-λrrow-core--λrrow-fx" class="anchor" aria-hidden="true" href="#λrrow-core--λrrow-fx"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Λrrow Core + Λrrow Fx&lt;/h5&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;kotlin-kapt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;def&lt;/span&gt; arrow_version &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.10.4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
dependencies {
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-fx:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-syntax:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    kapt    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-meta:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-λrrow-core--λrrow-optics--λrrow-fx" class="anchor" aria-hidden="true" href="#λrrow-core--λrrow-optics--λrrow-fx"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Λrrow Core + Λrrow Optics + Λrrow Fx&lt;/h5&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;kotlin-kapt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;def&lt;/span&gt; arrow_version &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.10.4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
dependencies {
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-fx:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-optics:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-syntax:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    kapt    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-meta:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-other-libraries" class="anchor" aria-hidden="true" href="#other-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other libraries&lt;/h5&gt;
&lt;p&gt;Here is the complete [library list]({{ '/docs/quickstart/libraries/' | relative_url }}) for a more granular dependency set-up.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-additional-setup" class="anchor" aria-hidden="true" href="#additional-setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional Setup&lt;/h4&gt;
&lt;p&gt;For projects that wish to use their own &lt;code&gt;@higherkind&lt;/code&gt;, &lt;code&gt;@optics&lt;/code&gt; and other meta programming facilities provided by Λrrow
the setup below is also required:&lt;/p&gt;
&lt;p&gt;Add the dependencies into the project's &lt;code&gt;build.gradle&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;kotlin-kapt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;optional&lt;/span&gt;
apply &lt;span class="pl-c1"&gt;from&lt;/span&gt;: rootProject&lt;span class="pl-k"&gt;.&lt;/span&gt;file(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;gradle/generated-kotlin-sources.gradle&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;only for Android projects&lt;/span&gt;

&lt;span class="pl-k"&gt;def&lt;/span&gt; arrow_version &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.10.4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
dependencies {
    &lt;span class="pl-k"&gt;..&lt;/span&gt;.
    kapt    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;io.arrow-kt:arrow-meta:&lt;span class="pl-smi"&gt;$a&lt;span class="pl-smi"&gt;rrow_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;optional&lt;/span&gt;
    &lt;span class="pl-k"&gt;..&lt;/span&gt;.
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;gradle/generated-kotlin-sources.gradle&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;idea&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

idea {
    module {
        sourceDirs &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; files(
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/generated/source/kapt/main&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/generated/source/kapt/debug&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/generated/source/kapt/release&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/generated/source/kaptKotlin/main&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/generated/source/kaptKotlin/debug&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/generated/source/kaptKotlin/release&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/tmp/kapt/main/kotlinGenerated&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
        generatedSourceDirs &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; files(
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/generated/source/kapt/main&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/generated/source/kapt/debug&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/generated/source/kapt/release&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/generated/source/kaptKotlin/main&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/generated/source/kaptKotlin/debug&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/generated/source/kaptKotlin/release&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;build/tmp/kapt/main/kotlinGenerated&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-maven" class="anchor" aria-hidden="true" href="#maven"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maven&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-basic-setup-1" class="anchor" aria-hidden="true" href="#basic-setup-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic Setup&lt;/h4&gt;
&lt;p&gt;Add to your &lt;code&gt;pom.xml&lt;/code&gt; file the following properties:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;properties&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;kotlin&lt;/span&gt;.version&amp;gt;1.3.0&amp;lt;/&lt;span class="pl-ent"&gt;kotlin&lt;/span&gt;.version&amp;gt;
     &amp;lt;&lt;span class="pl-ent"&gt;arrow&lt;/span&gt;.version&amp;gt;0.10.4&amp;lt;/&lt;span class="pl-ent"&gt;arrow&lt;/span&gt;.version&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;properties&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add the dependencies that you want to use&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;io.arrow-kt&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;arrow-core&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${arrow.version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;io.arrow-kt&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;arrow-syntax&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${arrow.version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-enabling-kapt" class="anchor" aria-hidden="true" href="#enabling-kapt"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enabling kapt&lt;/h4&gt;
&lt;p&gt;Enable annotation processing using kotlin plugin&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.jetbrains.kotlin&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;kotlin-maven-plugin&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${kotlin.version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;executions&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;kapt&amp;lt;/&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;kapt&amp;lt;/&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;sourceDirs&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;sourceDir&lt;/span&gt;&amp;gt;src/main/kotlin&amp;lt;/&lt;span class="pl-ent"&gt;sourceDir&lt;/span&gt;&amp;gt;
                &amp;lt;/&lt;span class="pl-ent"&gt;sourceDirs&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;annotationProcessorPaths&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;annotationProcessorPath&lt;/span&gt;&amp;gt;
                        &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;io.arrow-kt&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
                        &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;arrow-meta&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
                        &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${arrow.version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
                    &amp;lt;/&lt;span class="pl-ent"&gt;annotationProcessorPath&lt;/span&gt;&amp;gt;
                &amp;lt;/&lt;span class="pl-ent"&gt;annotationProcessorPaths&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;compile&amp;lt;/&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;phase&lt;/span&gt;&amp;gt;compile&amp;lt;/&lt;span class="pl-ent"&gt;phase&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;compile&amp;lt;/&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;sourceDirs&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;sourceDir&lt;/span&gt;&amp;gt;src/main/kotlin&amp;lt;/&lt;span class="pl-ent"&gt;sourceDir&lt;/span&gt;&amp;gt;
                &amp;lt;/&lt;span class="pl-ent"&gt;sourceDirs&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;test-compile&amp;lt;/&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;phase&lt;/span&gt;&amp;gt;test-compile&amp;lt;/&lt;span class="pl-ent"&gt;phase&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;test-compile&amp;lt;/&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;executions&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Copyright (C) 2017 The Λrrow Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>arrow-kt</author><guid isPermaLink="false">https://github.com/arrow-kt/arrow</guid><pubDate>Fri, 31 Jan 2020 00:06:00 GMT</pubDate></item><item><title>google-developer-training/android-kotlin-fundamentals-apps #7 in Kotlin, This week</title><link>https://github.com/google-developer-training/android-kotlin-fundamentals-apps</link><description>&lt;p&gt;&lt;i&gt;android-kotlin-fundamentals-apps&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-android-fundamentals-in-kotlin-solution-apps" class="anchor" aria-hidden="true" href="#android-fundamentals-in-kotlin-solution-apps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android Fundamentals in Kotlin Solution Apps&lt;/h1&gt;
&lt;p&gt;This repository contains the solution code for the apps for the
Android Fundamentals in Kotlin course, published by the Google Developer Training Team.
See &lt;a href="https://developer.android.com/courses" rel="nofollow"&gt;Android Training&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A “solution app” is an app that contains the code for a completed codelab.&lt;/p&gt;
&lt;p&gt;Code for the starter apps in this course are in a different repository.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Each of the samples in this repository is associated with a codelab exercise
from the Android Fundamentals in Kotlin course.&lt;/p&gt;
&lt;p&gt;The Android Fundamentals in Kotlin course can be used for self-study, or as the
basis of an instructor-led training. It is targeted towards beginning Android
developers with a background in software development or computer science with
at least two years of experience with a modern, object-oriented programming
language, such as the Java programming language,
and familiarity with basic software architecture principles.&lt;/p&gt;
&lt;p&gt;Since this course is in Kotlin, it is assumed you know Kotlin at the level
taught in the Udacity course,
&lt;a href="https://www.udacity.com/course/kotlin-bootcamp-for-programmers--ud9011" rel="nofollow"&gt;Kotlin Bootcamp for Programmers&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-pre-requisites" class="anchor" aria-hidden="true" href="#pre-requisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pre-requisites&lt;/h2&gt;
&lt;p&gt;The samples, along with the course, assume basic competence in software
design and development, as well as some background in computer science.&lt;/p&gt;
&lt;p&gt;Specifically, to get started you need:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Familiarity with the general software development process for object-oriented
applications using an IDE (Integrated Development Environment).&lt;/li&gt;
&lt;li&gt;At least 1-3 years of experience with object-oriented programming and
the Java programming language, or a comparable modern language.&lt;/li&gt;
&lt;li&gt;Familiarity with the Kotlin programming language.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-android-studio-version" class="anchor" aria-hidden="true" href="#android-studio-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android Studio Version&lt;/h2&gt;
&lt;p&gt;During development of this course, all samples were built using Android Studio 3.3,
and the codelabs assume you are using Android Studio 3.3 with corresponding libraries
and available features. See the
&lt;a href="https://developer.android.com/studio" rel="nofollow"&gt;Android Studio download page&lt;/a&gt; for details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/studio/install.html" rel="nofollow"&gt;Install Android Studio&lt;/a&gt;,
if you don't already have it. (If you are just starting the course, you will be guided
through this process.)&lt;/li&gt;
&lt;li&gt;Download the starter sample for the codelab.&lt;/li&gt;
&lt;li&gt;Open the sample into Android Studio.&lt;/li&gt;
&lt;li&gt;Build and run the sample. You may need to update gradle and library versions.
Follow the guidance provided by Android Studio.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright 2018 Google, Inc.&lt;/p&gt;
&lt;p&gt;All image and audio files (including *.png, *.jpg, *.svg, *.mp3, *.wav
and *.ogg) are licensed under the CC BY 4.0 license. All other files are
licensed under the Apache 2 license.&lt;/p&gt;
&lt;p&gt;Licensed to the Apache Software Foundation (ASF) under one or more contributor
license agreements.  See the LICENSE file distributed with this work for
additional information regarding copyright ownership.  The ASF licenses this
file to you under the Apache License, Version 2.0 (the "License"); you may not
use this file except in compliance with the License.  You may obtain a copy of
the License at&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
License for the specific language governing permissions and limitations under
the License.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>google-developer-training</author><guid isPermaLink="false">https://github.com/google-developer-training/android-kotlin-fundamentals-apps</guid><pubDate>Fri, 31 Jan 2020 00:07:00 GMT</pubDate></item><item><title>cashapp/sqldelight #8 in Kotlin, This week</title><link>https://github.com/cashapp/sqldelight</link><description>&lt;p&gt;&lt;i&gt;SQLDelight - Generates typesafe Kotlin APIs from SQL https://cashapp.github.io/sqldelight/&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-sqldelight" class="anchor" aria-hidden="true" href="#sqldelight"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQLDelight&lt;/h1&gt;
&lt;p&gt;See the &lt;a href="https://cashapp.github.io/sqldelight/" rel="nofollow"&gt;project website&lt;/a&gt; for documentation and APIs.&lt;/p&gt;
&lt;p&gt;SQLDelight generates typesafe APIs from your SQL statements. It compile-time verifies your schema, statements, and migrations and provides IDE features like autocomplete and refactoring which make writing and maintaining SQL simple. SQLDelight currently supports the SQLite dialect and there are supported SQLite drivers on Android, JVM, iOS, and Windows.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h2&gt;
&lt;p&gt;To use SQLDelight, apply the &lt;a href="https://github.com/square/sqldelight#gradle"&gt;gradle plugin&lt;/a&gt; and put your SQL statements in a &lt;code&gt;.sq&lt;/code&gt; file in &lt;code&gt;src/main/sqldelight&lt;/code&gt;.  Typically the first statement in the SQL file creates a table.&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; src/main/sqldelight/com/example/sqldelight/hockey/data/Player.sq&lt;/span&gt;

&lt;span class="pl-k"&gt;CREATE&lt;/span&gt; &lt;span class="pl-k"&gt;TABLE&lt;/span&gt; &lt;span class="pl-en"&gt;hockeyPlayer&lt;/span&gt; (
  player_number &lt;span class="pl-k"&gt;INTEGER&lt;/span&gt; &lt;span class="pl-k"&gt;NOT NULL&lt;/span&gt;,
  full_name &lt;span class="pl-k"&gt;TEXT&lt;/span&gt; &lt;span class="pl-k"&gt;NOT NULL&lt;/span&gt;
);

&lt;span class="pl-k"&gt;CREATE&lt;/span&gt; &lt;span class="pl-k"&gt;INDEX&lt;/span&gt; &lt;span class="pl-en"&gt;hockeyPlayer_full_name&lt;/span&gt; &lt;span class="pl-k"&gt;ON&lt;/span&gt; hockeyPlayer(full_name);

&lt;span class="pl-k"&gt;INSERT INTO&lt;/span&gt; hockeyPlayer (player_number, full_name)
&lt;span class="pl-k"&gt;VALUES&lt;/span&gt; (&lt;span class="pl-c1"&gt;15&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Ryan Getzlaf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From this SQLDelight will generate a &lt;code&gt;Database&lt;/code&gt; Kotlin class with an associated &lt;code&gt;Schema&lt;/code&gt; object that can be used to create your database and run your statements on it. Doing this also requires a driver, which SQLDelight provides implementations of:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-android" class="anchor" aria-hidden="true" href="#android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android&lt;/h4&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;dependencies {
  implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.squareup.sqldelight:android-driver:1.2.2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; driver&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;SqlDriver&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;AndroidSqliteDriver&lt;/span&gt;(&lt;span class="pl-en"&gt;Database&lt;/span&gt;.&lt;span class="pl-en"&gt;Schema&lt;/span&gt;, context, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test.db&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-ios-or-windows-using-kotlinnative" class="anchor" aria-hidden="true" href="#ios-or-windows-using-kotlinnative"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iOS, or Windows (Using Kotlin/Native)&lt;/h4&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;dependencies {
  implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.squareup.sqldelight:native-driver:1.2.2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; You'll also need to have SQLite linked via -lsqlite3 during compilation.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; driver&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;SqlDriver&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;NativeSqliteDriver&lt;/span&gt;(&lt;span class="pl-en"&gt;Database&lt;/span&gt;.&lt;span class="pl-en"&gt;Schema&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test.db&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-jvm" class="anchor" aria-hidden="true" href="#jvm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JVM&lt;/h4&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;dependencies {
  implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.squareup.sqldelight:sqlite-driver:1.2.2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; driver&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;SqlDriver&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;JdbcSqliteDriver&lt;/span&gt;(&lt;span class="pl-en"&gt;IN_MEMORY&lt;/span&gt;)
&lt;span class="pl-en"&gt;Database&lt;/span&gt;.&lt;span class="pl-en"&gt;Schema&lt;/span&gt;.create(driver)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SQL statements inside a &lt;code&gt;.sq&lt;/code&gt; file can be labeled to have a typesafe function generated for them available at runtime.&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;selectAll:
&lt;span class="pl-k"&gt;SELECT&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;
&lt;span class="pl-k"&gt;FROM&lt;/span&gt; hockeyPlayer;

insert:
&lt;span class="pl-k"&gt;INSERT INTO&lt;/span&gt; hockeyPlayer(player_number, full_name)
&lt;span class="pl-k"&gt;VALUES&lt;/span&gt; (?, ?);

insertFullPlayerObject:
&lt;span class="pl-k"&gt;INSERT INTO&lt;/span&gt; hockeyPlayer(player_number, full_name)
&lt;span class="pl-k"&gt;VALUES&lt;/span&gt; ?;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Files with labeled statements in them will have a queries file generated from them that matches the &lt;code&gt;.sq&lt;/code&gt; file name - putting the above sql into &lt;code&gt;Player.sq&lt;/code&gt; generates &lt;code&gt;PlayerQueries.kt&lt;/code&gt;. To get a reference to &lt;code&gt;PlayerQueries&lt;/code&gt; you need to wrap the driver we made above:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; In reality the database and driver above should be created a single time&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; and passed around using your favourite dependency injection/service locator/singleton pattern.&lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; database &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Database&lt;/span&gt;(driver)

&lt;span class="pl-k"&gt;val&lt;/span&gt; playerQueries&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerQueries&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; database.playerQueries

&lt;span class="pl-c1"&gt;println&lt;/span&gt;(playerQueries.selectAll().executeAsList())
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints [HockeyPlayer.Impl(15, "Ryan Getzlaf")]&lt;/span&gt;

playerQueries.insert(player_number &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, full_name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Corey Perry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c1"&gt;println&lt;/span&gt;(playerQueries.selectAll().executeAsList())
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints [HockeyPlayer.Impl(15, "Ryan Getzlaf"), HockeyPlayer.Impl(10, "Corey Perry")]&lt;/span&gt;

&lt;span class="pl-k"&gt;val&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;HockeyPlayer&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Ronald McDonald&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
playerQueries.insertFullPlayerObject(player)&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-gradle" class="anchor" aria-hidden="true" href="#gradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle&lt;/h1&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;buildscript {
  repositories {
    google()
    mavenCentral()
  }
  dependencies {
    classpath &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.squareup.sqldelight:gradle-plugin:1.2.2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  }
}

apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.squareup.sqldelight&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;Copyright 2016 Square, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>cashapp</author><guid isPermaLink="false">https://github.com/cashapp/sqldelight</guid><pubDate>Fri, 31 Jan 2020 00:08:00 GMT</pubDate></item><item><title>2dust/v2rayNG #9 in Kotlin, This week</title><link>https://github.com/2dust/v2rayNG</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-v2rayng" class="anchor" aria-hidden="true" href="#v2rayng"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;v2rayNG&lt;/h1&gt;
&lt;a href="https://play.google.com/store/apps/details?id=com.v2ray.ang" rel="nofollow"&gt;
&lt;img alt="Get it on Google Play" src="https://camo.githubusercontent.com/59c5c810fc8363f8488c3a36fc78f89990d13e99/68747470733a2f2f706c61792e676f6f676c652e636f6d2f696e746c2f656e5f75732f6261646765732f696d616765732f67656e657269632f656e5f62616467655f7765625f67656e657269632e706e67" width="165" height="64" data-canonical-src="https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>2dust</author><guid isPermaLink="false">https://github.com/2dust/v2rayNG</guid><pubDate>Fri, 31 Jan 2020 00:09:00 GMT</pubDate></item><item><title>JetBrains/kotlin #10 in Kotlin, This week</title><link>https://github.com/JetBrains/kotlin</link><description>&lt;p&gt;&lt;i&gt;The Kotlin Programming Language&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="ReadMe.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2457c980f81ed19481871fcda0c94991c01b3e49/68747470733a2f2f6a622e67672f6261646765732f6f6666696369616c2e737667" alt="official project" data-canonical-src="https://jb.gg/badges/official.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://teamcity.jetbrains.com/viewType.html?buildTypeId=Kotlin_dev_Compiler&amp;amp;branch_Kotlin_dev=%3Cdefault%3E&amp;amp;tab=buildTypeStatusDiv" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/52a3cf6ce926d0e417c28c0a9a1e01632a87ec89/68747470733a2f2f696d672e736869656c64732e696f2f7465616d636974792f687474702f7465616d636974792e6a6574627261696e732e636f6d2f732f4b6f746c696e5f6465765f436f6d70696c65722e737667" alt="TeamCity (simple build status)" data-canonical-src="https://img.shields.io/teamcity/http/teamcity.jetbrains.com/s/Kotlin_dev_Compiler.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.jetbrains.kotlin%22" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6b7d19be49c665fd5d9640d0376e2a434039bf6a/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d63656e7472616c2f762f6f72672e6a6574627261696e732e6b6f746c696e2f6b6f746c696e2d6d6176656e2d706c7567696e2e737667" alt="Maven Central" data-canonical-src="https://img.shields.io/maven-central/v/org.jetbrains.kotlin/kotlin-maven-plugin.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8e7da7b6b632d5ef4bce9a550a5d5cfe400ca1fe/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652532304c6963656e7365253230322e302d626c75652e7376673f7374796c653d666c6174" alt="GitHub license" data-canonical-src="https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-kotlin-programming-language" class="anchor" aria-hidden="true" href="#kotlin-programming-language"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Kotlin Programming Language&lt;/h1&gt;
&lt;p&gt;Welcome to &lt;a href="https://kotlinlang.org/" rel="nofollow"&gt;Kotlin&lt;/a&gt;! Some handy links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kotlinlang.org/" rel="nofollow"&gt;Kotlin Site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlinlang.org/docs/tutorials/getting-started.html" rel="nofollow"&gt;Getting Started Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.kotlinlang.org/" rel="nofollow"&gt;Try Kotlin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlinlang.org/api/latest/jvm/stdlib/index.html" rel="nofollow"&gt;Kotlin Standard Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtrack.jetbrains.com/issues/KT" rel="nofollow"&gt;Issue Tracker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discuss.kotlinlang.org/" rel="nofollow"&gt;Forum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.jetbrains.com/kotlin/" rel="nofollow"&gt;Kotlin Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/kotlin" rel="nofollow"&gt;Follow Kotlin on Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://slack.kotlinlang.org/" rel="nofollow"&gt;Public Slack channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teamcity.jetbrains.com/project.html?tab=projectOverview&amp;amp;projectId=Kotlin" rel="nofollow"&gt;TeamCity CI build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-editing-kotlin" class="anchor" aria-hidden="true" href="#editing-kotlin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Editing Kotlin&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kotlinlang.org/docs/tutorials/getting-started.html" rel="nofollow"&gt;Kotlin IntelliJ IDEA Plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlinlang.org/docs/tutorials/getting-started-eclipse.html" rel="nofollow"&gt;Kotlin Eclipse Plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vkostyukov/kotlin-sublime-package"&gt;Kotlin Sublime Text Package&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-build-environment-requirements" class="anchor" aria-hidden="true" href="#build-environment-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build environment requirements&lt;/h2&gt;
&lt;p&gt;In order to build Kotlin distribution you need to have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;JDK 1.6, 1.7, 1.8 and 9&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Setup environment variables as following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  JAVA_HOME="path to JDK 1.8"
  JDK_16="path to JDK 1.6"
  JDK_17="path to JDK 1.7"
  JDK_18="path to JDK 1.8"
  JDK_9="path to JDK 9"
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For local development, if you're not working on bytecode generation or the standard library, it's OK to have only JDK 1.8 and JDK 9 installed, and to point JDK_16 and JDK_17 environment variables to your JDK 1.8 installation.&lt;/p&gt;
&lt;p&gt;You also can use &lt;a href="https://docs.gradle.org/current/userguide/build_environment.html#sec:gradle_properties_and_system_properties" rel="nofollow"&gt;Gradle properties&lt;/a&gt; to setup JDK_* variables.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: The JDK 6 for MacOS is not available on Oracle's site. You can &lt;a href="https://support.apple.com/kb/DL1572" rel="nofollow"&gt;download it here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;On Windows you might need to add long paths setting to the repo:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git config core.longpaths true 
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;The project is built with Gradle. Run Gradle to build the project and to run the tests
using the following command on Unix/macOS:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew &amp;lt;tasks-and-options&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or the following command on Windows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gradlew &amp;lt;tasks-and-options&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On the first project configuration gradle will download and setup the dependencies on&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;intellij-core&lt;/code&gt; is a part of command line compiler and contains only necessary APIs.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;idea-full&lt;/code&gt; is a full blown IntelliJ IDEA Community Edition to be used in the plugin module.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These dependencies are quite large, so depending on the quality of your internet connection
you might face timeouts getting them. In this case you can increase timeout by specifying the following
command line parameters on the first run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew -Dhttp.socketTimeout=60000 -Dhttp.connectionTimeout=60000
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-important-gradle-tasks" class="anchor" aria-hidden="true" href="#important-gradle-tasks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Important gradle tasks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;clean&lt;/code&gt; - clean build results&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dist&lt;/code&gt; - assembles the compiler distribution into &lt;code&gt;dist/kotlinc/&lt;/code&gt; folder&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ideaPlugin&lt;/code&gt; - assembles the Kotlin IDEA plugin distribution into &lt;code&gt;dist/artifacts/Kotlin&lt;/code&gt; folder&lt;/li&gt;
&lt;li&gt;&lt;code&gt;install&lt;/code&gt; - build and install all public artifacts into local maven repository&lt;/li&gt;
&lt;li&gt;&lt;code&gt;runIde&lt;/code&gt; - build IDEA plugin and run IDEA with it&lt;/li&gt;
&lt;li&gt;&lt;code&gt;coreLibsTest&lt;/code&gt; - build and run stdlib, reflect and kotlin-test tests&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gradlePluginTest&lt;/code&gt; - build and run gradle plugin tests&lt;/li&gt;
&lt;li&gt;&lt;code&gt;compilerTest&lt;/code&gt; - build and run all compiler tests&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ideaPluginTest&lt;/code&gt; - build and run all IDEA plugin tests&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;OPTIONAL:&lt;/strong&gt; Some artifacts, mainly Maven plugin ones, are built separately with Maven.
Refer to &lt;a href="libraries/ReadMe.md"&gt;libraries/ReadMe.md&lt;/a&gt; for details.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-for-different-versions-of-intellij-idea-and-android-studio" class="anchor" aria-hidden="true" href="#building-for-different-versions-of-intellij-idea-and-android-studio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building for different versions of IntelliJ IDEA and Android Studio&lt;/h3&gt;
&lt;p&gt;Kotlin plugin is intended to work with several recent versions of IntelliJ IDEA and Android Studio. Each platform is allowed to have a different set of features and might provide a slightly different API. Instead of using several parallel Git branches, project stores everything in a single branch, but files may have counterparts with version extensions (*.as32, *.172, *.181). The primary file is expected to be replaced with its counterpart when targeting non-default platform.&lt;/p&gt;
&lt;p&gt;More detailed description of this scheme can be found at &lt;a href="https://github.com/JetBrains/bunches/blob/master/ReadMe.md"&gt;https://github.com/JetBrains/bunches/blob/master/ReadMe.md&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Usually, there's no need to care about multiple platforms as all features are enabled everywhere by default. Additional counterparts should be created if there's an expected difference in behavior or an incompatible API usage is required &lt;strong&gt;and&lt;/strong&gt; there's no reasonable workaround to save source compatibility. Kotlin plugin contains a pre-commit check that shows a warning if a file has been updated without its counterparts.&lt;/p&gt;
&lt;p&gt;Development for some particular platform is possible after 'switching' that can be done with &lt;a href="https://github.com/JetBrains/bunches/releases"&gt;Bunch Tool&lt;/a&gt; from the command line.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; kotlin-project-dir

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; switching to IntelliJ Idea 2019.1&lt;/span&gt;
bunch switch 191&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content--working-with-the-project-in-intellij-idea" class="anchor" aria-hidden="true" href="#-working-with-the-project-in-intellij-idea"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-working-in-idea"&gt;&lt;/a&gt; Working with the project in IntelliJ IDEA&lt;/h2&gt;
&lt;p&gt;Working with the Kotlin project requires at least IntelliJ IDEA 2019.1. You can download IntelliJ IDEA 2019.1 &lt;a href="https://www.jetbrains.com/idea/download" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After cloning the project, to import the project in Intellij choose the project directory in the Open project dialog. Then, after project opened, Select
&lt;code&gt;File&lt;/code&gt; -&amp;gt; &lt;code&gt;New...&lt;/code&gt; -&amp;gt; &lt;code&gt;Module from Existing Sources&lt;/code&gt; in the menu, and select &lt;code&gt;build.gradle.kts&lt;/code&gt; file in the project's root folder.&lt;/p&gt;
&lt;p&gt;In the import dialog, select &lt;code&gt;use default gradle wrapper&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To be able to run tests from IntelliJ easily, check &lt;code&gt;Delegate IDE build/run actions to Gradle&lt;/code&gt; and choose &lt;code&gt;Gradle Test Runner&lt;/code&gt; in the Gradle runner settings after importing the project.&lt;/p&gt;
&lt;p&gt;At this time, you can use the latest released 1.3.x version of the Kotlin plugin for working with the code. To make sure you have the latest version installed, use Tools | Kotlin | Configure Kotlin Plugin Updates and press "Check for updates now".&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-compiling-and-running" class="anchor" aria-hidden="true" href="#compiling-and-running"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling and running&lt;/h3&gt;
&lt;p&gt;From this root project there are Run/Debug Configurations for running IDEA or the Compiler Tests for example; so if you want to try out the latest and greatest IDEA plugin&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VCS -&amp;gt; Git -&amp;gt; Pull&lt;/li&gt;
&lt;li&gt;Run the "IDEA" run configuration in the project&lt;/li&gt;
&lt;li&gt;a child IntelliJ IDEA with the Kotlin plugin will then startup&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-including-into-composite-build" class="anchor" aria-hidden="true" href="#including-into-composite-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Including into composite build&lt;/h3&gt;
&lt;p&gt;To include kotlin compiler into &lt;a href="https://docs.gradle.org/current/userguide/composite_builds.html" rel="nofollow"&gt;composite build&lt;/a&gt; you need to define &lt;code&gt;dependencySubstitution&lt;/code&gt; for &lt;code&gt;kotlin-compiler&lt;/code&gt; module in &lt;code&gt;settings.gradle&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;includeBuild('/path/to/kotlin') {
    dependencySubstitution {
        substitute module('org.jetbrains.kotlin:kotlin-compiler') with project(':include:kotlin-compiler')
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;Kotlin is distributed under the terms of the Apache License (Version 2.0). See &lt;a href="license/README.md"&gt;license folder&lt;/a&gt; for details.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;Please be sure to review Kotlin's &lt;a href="docs/contributing.md"&gt;contributing guidelines&lt;/a&gt; to learn how to help the project.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>JetBrains</author><guid isPermaLink="false">https://github.com/JetBrains/kotlin</guid><pubDate>Fri, 31 Jan 2020 00:10:00 GMT</pubDate></item><item><title>Kotlin/kotlinx.serialization #11 in Kotlin, This week</title><link>https://github.com/Kotlin/kotlinx.serialization</link><description>&lt;p&gt;&lt;i&gt;Kotlin multiplatform / multi-format serialization &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-kotlin-cross-platform--multi-format-reflectionless-serialization" class="anchor" aria-hidden="true" href="#kotlin-cross-platform--multi-format-reflectionless-serialization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Kotlin cross-platform / multi-format reflectionless serialization&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ffbc2cf12975da475694a83019dce310c45ddd32/68747470733a2f2f6a622e67672f6261646765732f696e63756261746f722e737667" alt="JetBrains incubator project" data-canonical-src="https://jb.gg/badges/incubator.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8e7da7b6b632d5ef4bce9a550a5d5cfe400ca1fe/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652532304c6963656e7365253230322e302d626c75652e7376673f7374796c653d666c6174" alt="GitHub license" data-canonical-src="https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://teamcity.jetbrains.com/viewType.html?buildTypeId=KotlinTools_KotlinxSerialization_Ko&amp;amp;guest=1" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/24b79a2682cf6998fba9870f2507e2df8c701bb5/68747470733a2f2f696d672e736869656c64732e696f2f7465616d636974792f687474702f7465616d636974792e6a6574627261696e732e636f6d2f732f4b6f746c696e546f6f6c735f4b6f746c696e7853657269616c697a6174696f6e5f4b6f2e737667" alt="TeamCity build" data-canonical-src="https://img.shields.io/teamcity/http/teamcity.jetbrains.com/s/KotlinTools_KotlinxSerialization_Ko.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bintray.com/kotlin/kotlinx/kotlinx.serialization.runtime/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4d87843548743546c9106826021a1f42c95ad60d/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f6b6f746c696e2f6b6f746c696e782f6b6f746c696e782e73657269616c697a6174696f6e2e72756e74696d652f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/kotlin/kotlinx/kotlinx.serialization.runtime/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Kotlin serialization consists of a compiler plugin, which automatically produces visitor code for classes, and runtime library, which uses generated code to serialize objects without reflection.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Supports Kotlin classes marked as &lt;code&gt;@Serializable&lt;/code&gt; and standard collections.&lt;/li&gt;
&lt;li&gt;Supports JSON, CBOR, and Protobuf formats out-of-the-box.&lt;/li&gt;
&lt;li&gt;The same code works on Kotlin/JVM, Kotlin/JS and Kotlin/Native&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-runtime-overview" class="anchor" aria-hidden="true" href="#runtime-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Runtime overview&lt;/h2&gt;
&lt;p&gt;This project contains the runtime library. Runtime library provides:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Interfaces which are called by compiler-generated code (&lt;code&gt;Encoder&lt;/code&gt;, &lt;code&gt;Decoder&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Basic skeleton implementations of these interfaces in which you should override some methods if you want to
implement custom data format.&lt;/li&gt;
&lt;li&gt;Some internal classes like built-ins and collections serializers.&lt;/li&gt;
&lt;li&gt;Ready-to-use serialization formats.&lt;/li&gt;
&lt;li&gt;Other useful classes that benefit from serialization framework (e.g. object-to-Map transformer)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can open example projects for &lt;a href="examples/example-js"&gt;JS&lt;/a&gt;, &lt;a href="examples/example-jvm"&gt;JVM&lt;/a&gt; or &lt;a href="examples/example-native"&gt;Native&lt;/a&gt; to get started playing with it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#quick-example"&gt;Quick example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#current-project-status"&gt;Current status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#setup"&gt;Library installing&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#gradle"&gt;Gradle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gradle-with-plugins-block"&gt;Gradle (with &lt;code&gt;plugins&lt;/code&gt; block)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#androidjvm"&gt;Android/JVM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#multiplatform-common-js-native"&gt;Multiplatform (common, JS, Native)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mavenjvm"&gt;Maven/JVM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#incompatible-changes"&gt;Incompatible changes from older versions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#troubleshooting-intellij-idea"&gt;Troubleshooting IntelliJ IDEA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/runtime_usage.md"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/examples.md"&gt;More examples of supported Kotlin classes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/custom_serializers.md"&gt;Writing custom serializers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/polymorphism.md"&gt;Multiplatform polymorphic serialization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="formats/README.md"&gt;Add-on formats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/building.md"&gt;Building library and compiler plugin from source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/old12.md"&gt;Instructions for old versions under Kotlin 1.2 and migration guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-quick-example" class="anchor" aria-hidden="true" href="#quick-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick example&lt;/h2&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;kotlinx.serialization.*&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;kotlinx.serialization.json.*&lt;/span&gt;

&lt;span class="pl-k"&gt;@Serializable&lt;/span&gt;
&lt;span class="pl-k"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Data&lt;/span&gt;(&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;42&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Json also has .Default configuration which provides more reasonable settings,&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; but is subject to change in future versions&lt;/span&gt;
    &lt;span class="pl-k"&gt;val&lt;/span&gt; json &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Json&lt;/span&gt;(&lt;span class="pl-en"&gt;JsonConfiguration&lt;/span&gt;.&lt;span class="pl-en"&gt;Stable&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; serializing objects&lt;/span&gt;
    &lt;span class="pl-k"&gt;val&lt;/span&gt; jsonData &lt;span class="pl-k"&gt;=&lt;/span&gt; json.stringify(&lt;span class="pl-en"&gt;Data&lt;/span&gt;.serializer(), &lt;span class="pl-en"&gt;Data&lt;/span&gt;(&lt;span class="pl-c1"&gt;42&lt;/span&gt;))
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; serializing lists&lt;/span&gt;
    &lt;span class="pl-k"&gt;val&lt;/span&gt; jsonList &lt;span class="pl-k"&gt;=&lt;/span&gt; json.stringify(&lt;span class="pl-en"&gt;Data&lt;/span&gt;.serializer().list, &lt;span class="pl-c1"&gt;listOf&lt;/span&gt;(&lt;span class="pl-en"&gt;Data&lt;/span&gt;(&lt;span class="pl-c1"&gt;42&lt;/span&gt;)))
    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(jsonData) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {"a": 42, "b": "42"}&lt;/span&gt;
    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(jsonList) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [{"a": 42, "b": "42"}]&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; parsing data back&lt;/span&gt;
    &lt;span class="pl-k"&gt;val&lt;/span&gt; obj &lt;span class="pl-k"&gt;=&lt;/span&gt; json.parse(&lt;span class="pl-en"&gt;Data&lt;/span&gt;.serializer(), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;{"a":42}&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; b is optional since it has default value&lt;/span&gt;
    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(obj) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Data(a=42, b="42")&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To learn more about JSON usage and other formats, see &lt;a href="docs/runtime_usage.md"&gt;usage&lt;/a&gt;.
More examples of various kinds of Kotlin classes that can be serialized can be found &lt;a href="docs/examples.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-current-project-status" class="anchor" aria-hidden="true" href="#current-project-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Current project status&lt;/h2&gt;
&lt;p&gt;Starting from Kotlin 1.3-RC2, serialization plugin is shipped with the rest of Kotlin compiler distribution, and the IDEA plugin is bundled into the Kotlin plugin.&lt;/p&gt;
&lt;p&gt;Runtime library is under reconstruction to match the corresponding &lt;a href="https://github.com/Kotlin/KEEP/blob/serialization/proposals/extensions/serialization.md"&gt;KEEP&lt;/a&gt;, so some features described there can be not implemented yet. While library is stable and has successfully been used in various scenarios, there is no API compatibility guarantees between versions, that's why it is called experimental.
This document describes setup for Kotlin 1.3 and higher. To watch instructions regarding 1.2, follow &lt;a href="docs/old12.md"&gt;this document&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup&lt;/h2&gt;
&lt;p&gt;Using Kotlin Serialization requires Kotlin compiler &lt;code&gt;1.3.30&lt;/code&gt; or higher.
Make sure that you have corresponding Kotlin plugin installed in the IDE.
Since serialization is now bundled into Kotlin plugin, no additional plugins for IDE are required (but make sure you have deleted old additional plugin for 1.2, if you had one).
Example projects on JVM are available for &lt;a href="examples/example-jvm/build.gradle"&gt;Gradle&lt;/a&gt; and &lt;a href="examples/example-jvm/pom.xml"&gt;Maven&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-gradle" class="anchor" aria-hidden="true" href="#gradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle&lt;/h3&gt;
&lt;p&gt;You have to add the serialization plugin as the other &lt;a href="https://kotlinlang.org/docs/reference/compiler-plugins.html" rel="nofollow"&gt;compiler plugins&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;buildscript&lt;/span&gt; {
    ext&lt;span class="pl-k"&gt;.&lt;/span&gt;kotlin_version &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;1.3.60&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    repositories { jcenter() }

    dependencies {
        classpath &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlin:kotlin-gradle-plugin:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;otlin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        classpath &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlin:kotlin-serialization:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;otlin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don't forget to apply the plugin:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;kotlin&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or 'kotlin-multiplatform' for multiplatform projects&lt;/span&gt;
apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;kotlinx-serialization&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, you have to add dependency on the serialization runtime library. Note that while plugin have version the same as compiler one, runtime library has different coordinates, repository and versioning.&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;repositories&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; artifacts are published to JCenter&lt;/span&gt;
    jcenter()
}

&lt;span class="pl-en"&gt;dependencies&lt;/span&gt; {
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlin:kotlin-stdlib:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;otlin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.14.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; JVM dependency&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-gradle-with-plugins-block" class="anchor" aria-hidden="true" href="#gradle-with-plugins-block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle (with &lt;code&gt;plugins&lt;/code&gt; block)&lt;/h3&gt;
&lt;p&gt;You can setup serialization plugin with the kotlin plugin using &lt;a href="https://docs.gradle.org/current/userguide/plugins.html#sec:plugins_block" rel="nofollow"&gt;Gradle plugins DSL&lt;/a&gt; &lt;strong&gt;instead&lt;/strong&gt; of traditional &lt;code&gt;apply plugin&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;plugins&lt;/span&gt; {
    id &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;org.jetbrains.kotlin.multiplatform&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; version &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;1.3.60&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or any other kotlin plugin&lt;/span&gt;
    id &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;org.jetbrains.kotlin.plugin.serialization&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; version &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;1.3.60&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: plugin marker for serialization has been published in Kotlin 1.3.50. If you need to use the earlier Kotlin version, see &lt;a href="https://youtrack.jetbrains.com/issue/KT-27612" rel="nofollow"&gt;KT-27612&lt;/a&gt; for workaround with &lt;a href="https://docs.gradle.org/current/userguide/plugins.html#sec:plugin_resolution_rules" rel="nofollow"&gt;plugin resolution rules&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Runtime library should be added to dependencies the same way as before.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-androidjvm" class="anchor" aria-hidden="true" href="#androidjvm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android/JVM&lt;/h3&gt;
&lt;p&gt;Library should work on Android "as is". If you're using proguard, you need
to add this to your &lt;code&gt;proguard-rules.pro&lt;/code&gt;:&lt;/p&gt;
&lt;pre lang="proguard"&gt;&lt;code&gt;-keepattributes *Annotation*, InnerClasses
-dontnote kotlinx.serialization.SerializationKt
-keep,includedescriptorclasses class com.yourcompany.yourpackage.**$$serializer { *; } # &amp;lt;-- change package name to your app's
-keepclassmembers class com.yourcompany.yourpackage.** { # &amp;lt;-- change package name to your app's
    *** Companion;
}
-keepclasseswithmembers class com.yourcompany.yourpackage.** { # &amp;lt;-- change package name to your app's
    kotlinx.serialization.KSerializer serializer(...);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You may also want to keep all custom serializers you've defined.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-multiplatform-common-js-native" class="anchor" aria-hidden="true" href="#multiplatform-common-js-native"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multiplatform (common, JS, Native)&lt;/h3&gt;
&lt;p&gt;Platform artifacts have the same names as JVM one, but with additional suffix (e.g. &lt;code&gt;org.jetbrains.kotlinx:kotlinx-serialization-runtime-native&lt;/code&gt;). For Native artifact, Gradle metadata is required (put the line &lt;code&gt;enableFeaturePreview('GRADLE_METADATA')&lt;/code&gt; in your &lt;code&gt;gradle.properties&lt;/code&gt;) and minimal supported version of Gradle is 5.3.&lt;/p&gt;
&lt;p&gt;Typically, you need the following dependencies in your multiplatform project (don't forget to rename &lt;a href="https://kotlinlang.org/docs/reference/building-mpp-with-gradle.html#configuring-source-sets" rel="nofollow"&gt;source sets&lt;/a&gt; according to your setup):&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;sourceSets&lt;/span&gt; {
    commonMain {
        dependencies {
            implementation kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;stdlib-common&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
            implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:&lt;span class="pl-smi"&gt;$s&lt;span class="pl-smi"&gt;erialization_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }
    }
    commonTest {
        dependencies {
            implementation kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test-common&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
            implementation kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test-annotations-common&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
        }
    }
    jvmMain {
        dependencies {
            implementation kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;stdlib-jdk8&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
            implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlinx:kotlinx-serialization-runtime:&lt;span class="pl-smi"&gt;$s&lt;span class="pl-smi"&gt;erialization_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }
    }
    jvmTest {
        dependencies {
            implementation kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
            implementation kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test-junit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
        }
    }
    jsMain {
        dependencies {
            implementation kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;stdlib-js&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
            implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:&lt;span class="pl-smi"&gt;$s&lt;span class="pl-smi"&gt;erialization_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }
    }
    jsTest {
        dependencies {
            implementation kotlin(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test-js&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
        }
    }
    nativeMain {
        dependencies {
            implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:&lt;span class="pl-smi"&gt;$s&lt;span class="pl-smi"&gt;erialization_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }
    }
    nativeTest {}
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;JavaScript example is located at &lt;a href="examples/example-js"&gt;&lt;code&gt;example-js&lt;/code&gt;&lt;/a&gt; folder.
Multiplatform example is located at &lt;a href="examples/example-multiplatform"&gt;&lt;code&gt;example-multiplatform&lt;/code&gt;&lt;/a&gt; folder.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mavenjvm" class="anchor" aria-hidden="true" href="#mavenjvm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maven/JVM&lt;/h3&gt;
&lt;p&gt;Ensure the proper version of Kotlin and serialization version:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;properties&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;kotlin&lt;/span&gt;.version&amp;gt;1.3.60&amp;lt;/&lt;span class="pl-ent"&gt;kotlin&lt;/span&gt;.version&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;serialization&lt;/span&gt;.version&amp;gt;0.14.0&amp;lt;/&lt;span class="pl-ent"&gt;serialization&lt;/span&gt;.version&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;properties&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Include kotlinx bintray repository for library:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;repositories&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;repository&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;bintray-kotlin-kotlinx&amp;lt;/&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;name&lt;/span&gt;&amp;gt;bintray&amp;lt;/&lt;span class="pl-ent"&gt;name&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;url&lt;/span&gt;&amp;gt;https://kotlin.bintray.com/kotlinx&amp;lt;/&lt;span class="pl-ent"&gt;url&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;repository&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;repositories&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You also can use JCenter.&lt;/p&gt;
&lt;p&gt;Add serialization plugin to Kotlin compiler plugin:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;build&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;plugins&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.jetbrains.kotlin&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;kotlin-maven-plugin&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${kotlin.version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;executions&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;compile&amp;lt;/&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;phase&lt;/span&gt;&amp;gt;compile&amp;lt;/&lt;span class="pl-ent"&gt;phase&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
                        &amp;lt;&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;compile&amp;lt;/&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;
                    &amp;lt;/&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
                &amp;lt;/&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;executions&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;compilerPlugins&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;kotlinx-serialization&amp;lt;/&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;
                &amp;lt;/&lt;span class="pl-ent"&gt;compilerPlugins&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;dependencies&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.jetbrains.kotlin&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;kotlin-maven-serialization&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${kotlin.version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
                &amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;dependencies&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;plugins&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;build&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add dependency on serialization runtime library:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.jetbrains.kotlinx&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;kotlinx-serialization-runtime&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${serialization.version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-incompatible-changes" class="anchor" aria-hidden="true" href="#incompatible-changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Incompatible changes&lt;/h3&gt;
&lt;p&gt;Library versions &lt;code&gt;0.14.0&lt;/code&gt; and higher require Kotlin 1.3.60 and higher and incompatible with previous versions.&lt;/p&gt;
&lt;p&gt;All versions of library before &lt;code&gt;0.13.0&lt;/code&gt; are using Gradle metadata v0.4 and therefore it is recommended to use Gradle 4.8-5.1 to build.&lt;/p&gt;
&lt;p&gt;Library versions &lt;code&gt;0.11.0&lt;/code&gt; and higher require Kotlin 1.3.30 and higher and incompatible with previous versions.&lt;/p&gt;
&lt;p&gt;All versions of library before &lt;code&gt;0.10.0&lt;/code&gt; are using Gradle metadata v0.3 and therefore require Gradle 4.7 for build.&lt;/p&gt;
&lt;p&gt;Maven plugin coordinates before Kotlin 1.3.20 were &lt;code&gt;kotlinx-maven-serialization-plugin&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For deprecated &lt;code&gt;kotlin-platform-native&lt;/code&gt; plugin, you need to use &lt;code&gt;kotlinx-serialization-native&lt;/code&gt; plugin (see &lt;a href="https://github.com/JetBrains/kotlin-native/issues/2210#issuecomment-429753168"&gt;#2210&lt;/a&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting-intellij-idea" class="anchor" aria-hidden="true" href="#troubleshooting-intellij-idea"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting IntelliJ IDEA&lt;/h2&gt;
&lt;p&gt;Serialization support should work out of the box, if you have 1.3.x Kotlin plugin installed and have imported the project from Maven or Gradle with serialization enabled in their buildscripts. If you have Kotlin 1.3.10 or lower, you have to delegate build to Gradle (&lt;code&gt;Settings - Build, Execution, Deployment - Build Tools - Gradle - Runner -&lt;/code&gt; tick &lt;code&gt;Delegate IDE build/run actions to gradle&lt;/code&gt;). Starting from 1.3.11, no delegation is required.
In case of problems, force project re-import from Gradle.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Kotlin</author><guid isPermaLink="false">https://github.com/Kotlin/kotlinx.serialization</guid><pubDate>Fri, 31 Jan 2020 00:11:00 GMT</pubDate></item><item><title>inorichi/tachiyomi #12 in Kotlin, This week</title><link>https://github.com/inorichi/tachiyomi</link><description>&lt;p&gt;&lt;i&gt;Free and open source manga reader for Android&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Build&lt;/th&gt;
&lt;th&gt;Stable&lt;/th&gt;
&lt;th&gt;Dev&lt;/th&gt;
&lt;th&gt;Contribute&lt;/th&gt;
&lt;th&gt;Support Server&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://travis-ci.org/inorichi/tachiyomi" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d2380d5f9141d2cb96d56c714abff9e4581ddbb4/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f696e6f72696368692f7461636869796f6d692e737667" alt="Travis" data-canonical-src="https://img.shields.io/travis/inorichi/tachiyomi.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/inorichi/tachiyomi/releases"&gt;&lt;img src="https://camo.githubusercontent.com/980e27bfb8abe848ec864c314607526499584b50/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f696e6f72696368692f7461636869796f6d692e7376673f6d61784167653d33363030266c6162656c3d646f776e6c6f6164" alt="stable release" data-canonical-src="https://img.shields.io/github/release/inorichi/tachiyomi.svg?maxAge=3600&amp;amp;label=download" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="http://tachiyomi.kanade.eu/latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/80c2475b774313af0a7189c24659e2a134d0d41a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f776e6c6f61642d6c61746573742532306275696c642d626c75652e737667" alt="latest dev build" data-canonical-src="https://img.shields.io/badge/download-latest%20build-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://hosted.weblate.org/engage/tachiyomi/?utm_source=widget" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c6c64b42b30d1860a060d81a9b1a85e70e265397/68747470733a2f2f686f737465642e7765626c6174652e6f72672f776964676574732f7461636869796f6d692f2d2f7376672d62616467652e737667" alt="Translation status" data-canonical-src="https://hosted.weblate.org/widgets/tachiyomi/-/svg-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://discord.gg/tachiyomi" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c7f9c87fc8b4c5be84a5e7bee5881a6f5ee357a9/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3334393433363537363033373733323335332e737667" alt="Discord" data-canonical-src="https://img.shields.io/discord/349436576037732353.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-tachiyomi" class="anchor" aria-hidden="true" href="#tachiyomi"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./.github/readme-images/app-icon.png"&gt;&lt;img src="./.github/readme-images/app-icon.png" alt="app icon" style="max-width:100%;"&gt;&lt;/a&gt;Tachiyomi&lt;/h1&gt;
&lt;p&gt;Tachiyomi is a free and open source manga reader for Android 5.0 and above.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./.github/readme-images/screens.png"&gt;&lt;img src="./.github/readme-images/screens.png" alt="screenshots of app" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;Features include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Online reading from sources such as KissManga, MangaDex, &lt;a href="https://github.com/inorichi/tachiyomi-extensions"&gt;and more&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Local reading of downloaded manga&lt;/li&gt;
&lt;li&gt;A configurable reader with multiple viewers, reading directions and other settings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://myanimelist.net/" rel="nofollow"&gt;MyAnimeList&lt;/a&gt;, &lt;a href="https://anilist.co/" rel="nofollow"&gt;AniList&lt;/a&gt;, &lt;a href="https://kitsu.io/explore/anime" rel="nofollow"&gt;Kitsu&lt;/a&gt;, and &lt;a href="https://shikimori.one" rel="nofollow"&gt;Shikimori&lt;/a&gt; support&lt;/li&gt;
&lt;li&gt;Categories to organize your library&lt;/li&gt;
&lt;li&gt;Light and dark themes&lt;/li&gt;
&lt;li&gt;Schedule updating your library for new chapters&lt;/li&gt;
&lt;li&gt;Create backups locally to read offline or to your desired cloud service&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-download" class="anchor" aria-hidden="true" href="#download"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download&lt;/h2&gt;
&lt;p&gt;Get the app from our &lt;a href="https://github.com/inorichi/tachiyomi/releases"&gt;releases page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you want to try new features before they get to the stable release, you can download the dev version &lt;a href="http://tachiyomi.kanade.eu/latest" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-issues-feature-requests-and-contributing" class="anchor" aria-hidden="true" href="#issues-feature-requests-and-contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issues, Feature Requests and Contributing&lt;/h2&gt;
&lt;p&gt;Please make sure to read the full guidelines. Your issue may be closed without warning if you do not.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Issues&lt;/summary&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Before reporting a new issue, take a look at the &lt;a href="https://github.com/inorichi/tachiyomi/wiki/FAQ"&gt;FAQ&lt;/a&gt;, the &lt;a href="https://github.com/inorichi/tachiyomi/releases"&gt;changelog&lt;/a&gt; and the already opened &lt;a href="https://github.com/inorichi/tachiyomi/issues"&gt;issues&lt;/a&gt;.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;If you are unsure, ask here: &lt;a href="https://discord.gg/tachiyomi" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c7f9c87fc8b4c5be84a5e7bee5881a6f5ee357a9/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3334393433363537363033373733323335332e737667" alt="Discord" data-canonical-src="https://img.shields.io/discord/349436576037732353.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;Bugs&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;Include version (Setting &amp;gt; About &amp;gt; Version)&lt;/li&gt;
&lt;li&gt;If not latest, try updating, it may have already been solved&lt;/li&gt;
&lt;li&gt;Dev version is equal to the number of commits as seen in the main page&lt;/li&gt;
&lt;li&gt;Include steps to reproduce (if not obvious from description)&lt;/li&gt;
&lt;li&gt;Include screenshot (if needed)&lt;/li&gt;
&lt;li&gt;If it could be device-dependent, try reproducing on another device (if possible)&lt;/li&gt;
&lt;li&gt;For large logs use &lt;a href="http://pastebin.com/" rel="nofollow"&gt;http://pastebin.com/&lt;/a&gt; (or similar)&lt;/li&gt;
&lt;li&gt;Don't group unrelated requests into one issue&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DO: &lt;a href="https://github.com/inorichi/tachiyomi/issues/24"&gt;https://github.com/inorichi/tachiyomi/issues/24&lt;/a&gt; &lt;a href="https://github.com/inorichi/tachiyomi/issues/71"&gt;https://github.com/inorichi/tachiyomi/issues/71&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DON'T: &lt;a href="https://github.com/inorichi/tachiyomi/issues/75"&gt;https://github.com/inorichi/tachiyomi/issues/75&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;Feature Requests&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;Write a detailed issue, explaning what it should do or how. Avoid writing just "like X app does"&lt;/li&gt;
&lt;li&gt;Include screenshot (if needed)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Catalogue requests should be created at &lt;a href="https://github.com/inorichi/tachiyomi-extensions"&gt;https://github.com/inorichi/tachiyomi-extensions&lt;/a&gt;, they do not belong in this repository.&lt;/p&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://tachiyomi.org/" rel="nofollow"&gt;See our website.&lt;/a&gt;
You can also reach out to us on &lt;a href="https://discord.gg/tachiyomi" rel="nofollow"&gt;Discord&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Copyright 2015 Javier Tomás

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-disclaimer" class="anchor" aria-hidden="true" href="#disclaimer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disclaimer&lt;/h2&gt;
&lt;p&gt;The developer of this application does not have any affiliation with the content providers available.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>inorichi</author><guid isPermaLink="false">https://github.com/inorichi/tachiyomi</guid><pubDate>Fri, 31 Jan 2020 00:12:00 GMT</pubDate></item><item><title>mozilla-mobile/fenix #13 in Kotlin, This week</title><link>https://github.com/mozilla-mobile/fenix</link><description>&lt;p&gt;&lt;i&gt;Firefox Preview&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-firefox-preview" class="anchor" aria-hidden="true" href="#firefox-preview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Firefox Preview&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.taskcluster.net/v1/repository/mozilla-mobile/fenix/master/latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1835136d08ba4c510626395138944123dda328d1/68747470733a2f2f6769746875622e7461736b636c75737465722e6e65742f76312f7265706f7369746f72792f6d6f7a696c6c612d6d6f62696c652f66656e69782f6d61737465722f62616467652e737667" alt="Task Status" data-canonical-src="https://github.taskcluster.net/v1/repository/mozilla-mobile/fenix/master/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/mozilla-mobile/fenix" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d2ad1822a429dec60799cc6be5096bd0e5e81909/68747470733a2f2f636f6465636f762e696f2f67682f6d6f7a696c6c612d6d6f62696c652f66656e69782f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/mozilla-mobile/fenix/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Firefox Preview (internal code name: "Fenix") is an all-new browser for Android, based on &lt;a href="https://mozilla.github.io/geckoview/" rel="nofollow"&gt;GeckoView&lt;/a&gt; and &lt;a href="https://mozac.org/" rel="nofollow"&gt;Mozilla Android Components&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;** Note: The team is currently experiencing heavy triage and review load, so when triaging issues, we will mainly be looking to identify &lt;a href="https://github.com/mozilla-mobile/fenix/labels/S1"&gt;S1 (high severity)&lt;/a&gt; issues. See our triage process &lt;a href="https://github.com/mozilla-mobile/fenix/wiki/Triage-Process"&gt;here&lt;/a&gt;. Please be patient if you don't hear back from us immediately on your issue! **&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-i-want-to-open-a-pull-request" class="anchor" aria-hidden="true" href="#i-want-to-open-a-pull-request"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;I want to open a Pull Request!&lt;/h2&gt;
&lt;p&gt;We encourage you to participate in this open source project. We love Pull Requests, Bug Reports, ideas, (security) code reviews or any other kind of positive contribution.&lt;/p&gt;
&lt;p&gt;Since we are a small team, however, &lt;strong&gt;we do not have the bandwidth to review unsolicited PRs&lt;/strong&gt;. Please follow our &lt;a href="https://github.com/mozilla-mobile/shared-docs/blob/master/android/CONTRIBUTING_code.md#creating-a-pull-request"&gt;Pull Request guidelines&lt;/a&gt;, or &lt;strong&gt;we may close the PR&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;To make it easier to review, we have these PR requirements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Every PR must have &lt;strong&gt;exactly&lt;/strong&gt; one issue associated with it.&lt;/li&gt;
&lt;li&gt;Write a clear explanation of what the code is doing when opening the pull request, and optionally add comments to the PR.&lt;/li&gt;
&lt;li&gt;Make sure there are tests - or ask for help on how the code should be tested in the Issue!&lt;/li&gt;
&lt;li&gt;Keep PRs small and to the point. For extra code-health changes, either file a separate issue, or make it a separate PR that can be easily reviewed.&lt;/li&gt;
&lt;li&gt;Use micro-commits. This makes it easier and faster to review.&lt;/li&gt;
&lt;li&gt;Add a screenshot for UX changes (this is part of the PR checklist)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As a small team, we have to prioritize our work, and reviewing PRs takes time. We receive lots of PRs every day, so if you can keep your PRs small, it helps our small team review and merge code faster, minimizing stale code.&lt;/p&gt;
&lt;p&gt;Keep in mind that the team is very overloaded, so PRs sometimes wait
for a &lt;em&gt;very&lt;/em&gt; long time. However this is not for lack of interest, but
because we find ourselves in a constant need to prioritize
certain issues/PRs over others. If you think your issue/PR is very important,
try to popularize it by getting other users to comment and share their point of view.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-involved" class="anchor" aria-hidden="true" href="#getting-involved"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Involved&lt;/h2&gt;
&lt;p&gt;Before you attempt to make a contribution please read the &lt;a href="https://www.mozilla.org/en-US/about/governance/policies/participation/" rel="nofollow"&gt;Community Participation Guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/mozilla-mobile/shared-docs/blob/master/android/CONTRIBUTING.md"&gt;Guide to Contributing&lt;/a&gt; (&lt;strong&gt;New contributors start here!&lt;/strong&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Browse our &lt;a href="https://github.com/mozilla-mobile/fenix/issues"&gt;current Issues&lt;/a&gt;, or &lt;a href="https://bugzilla.mozilla.org/enter_bug.cgi?assigned_to=nobody%40mozilla.org&amp;amp;bug_ignored=0&amp;amp;bug_severity=normal&amp;amp;bug_status=NEW&amp;amp;cf_fx_iteration=---&amp;amp;cf_fx_points=---&amp;amp;component=Security%3A%20Android&amp;amp;contenttypemethod=list&amp;amp;contenttypeselection=text%2Fplain&amp;amp;defined_groups=1&amp;amp;flag_type-4=X&amp;amp;flag_type-607=X&amp;amp;flag_type-791=X&amp;amp;flag_type-800=X&amp;amp;flag_type-803=X&amp;amp;flag_type-936=X&amp;amp;flag_type-937=X&amp;amp;form_name=enter_bug&amp;amp;groups=mobile-core-security&amp;amp;maketemplate=Remember%20values%20as%20bookmarkable%20template&amp;amp;op_sys=Unspecified&amp;amp;priority=--&amp;amp;product=Fenix&amp;amp;rep_platform=Unspecified&amp;amp;target_milestone=---&amp;amp;version=unspecified" rel="nofollow"&gt;file a security issue&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Matrix: &lt;a href="https://chat.mozilla.org/#/room/#fenix:mozilla.org" rel="nofollow"&gt;#fenix:mozilla.org channel&lt;/a&gt; (&lt;strong&gt;We're available Monday-Friday, GMT and PST working hours&lt;/strong&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check out the &lt;a href="https://github.com/mozilla-mobile/fenix/wiki"&gt;project wiki&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Localization happens on &lt;a href="https://pontoon.mozilla.org/projects/android-l10n/" rel="nofollow"&gt;Pontoon&lt;/a&gt;. Please get in touch with delphine (at) mozilla (dot) com directly for more information.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Beginners!&lt;/strong&gt; - Watch out for &lt;a href="https://github.com/mozilla-mobile/fenix/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22"&gt;Issues with the "Good First Issue" label&lt;/a&gt;. These are easy bugs that have been left for first timers to have a go, get involved and make a positive contribution to the project!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-build-instructions" class="anchor" aria-hidden="true" href="#build-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Instructions&lt;/h2&gt;
&lt;p&gt;Note: Both Android SDK and NDK are required.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clone or Download the repository:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/mozilla-mobile/fenix&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;&lt;strong&gt;Import&lt;/strong&gt; the project into Android Studio &lt;strong&gt;or&lt;/strong&gt; build on the command line:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./gradlew clean app:assembleGeckoBetaDebug&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use app:assembleGeckoNightlyDebug to build with the Gecko Nightly version instead.&lt;/p&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Make sure to select the correct build variant in Android Studio. See the next section.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-guide-to-build-variants" class="anchor" aria-hidden="true" href="#guide-to-build-variants"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Guide to Build Variants&lt;/h3&gt;
&lt;p&gt;We have a lot of build variants. Each variant is composed of two flavors. One flavor is the version of Gecko to use and the other describes
which app id and settings to use. Here is a description of what each means:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;geckoBeta&lt;/strong&gt; (recommended) uses the Beta variant of the Gecko rendering engine, which corresponds to the next version of Gecko which will go to production&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;geckoNightly&lt;/strong&gt; uses the Nightly variant of the Gecko rendering engine, which is the version which will arrive after beta and is less stable&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;debug&lt;/strong&gt; uses debug symbols and debug signing, adds tools like LeakCanary for troubleshooting, and does not strip unused or wasteful code&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;fenixNightly&lt;/strong&gt; is a release build with nightly signing which uses the org.mozilla.fenix.nightly app id for nightly releases to Google Play&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;fenixBeta&lt;/strong&gt; is a release build with beta signing which uses the org.mozilla.fenix.beta app id for beta releases to Google Play&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;fenixProduction&lt;/strong&gt; is a release build with release signing which uses the org.mozilla.fenix app id for production releases to Google Play&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;fennecProduction&lt;/strong&gt; is an experimental build with release signing which uses the org.mozilla.firefox app id and supports upgrading the older Firefox. &lt;strong&gt;WARNING&lt;/strong&gt; Pre-production versions of this may result in data loss.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;forPerformanceTest&lt;/strong&gt;: see "Performance Build Variants" below.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-performance-build-variants" class="anchor" aria-hidden="true" href="#performance-build-variants"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance Build Variants&lt;/h4&gt;
&lt;p&gt;For accurate performance measurements, read this section!&lt;/p&gt;
&lt;p&gt;If you want to analyze performance during &lt;strong&gt;local development&lt;/strong&gt; (note: there is a non-trivial performance impact - see caveats):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Recommendation: use a &lt;code&gt;forPerformanceTest&lt;/code&gt; variant with local Leanplum, Adjust, &amp;amp; Sentry API tokens: contact the front-end perf group for access to them&lt;/li&gt;
&lt;li&gt;Rationale: &lt;code&gt;forPerformanceTest&lt;/code&gt; is a release variant with &lt;code&gt;debuggable&lt;/code&gt; set to true. There are numerous performance-impacting differences between debug and release variants so we need a release variant. To profile, we also need debuggable, which is disabled on other release variants. If API tokens are not provided, the SDKs may change their behavior in non-trivial ways.&lt;/li&gt;
&lt;li&gt;Caveats:
&lt;ul&gt;
&lt;li&gt;debuggable has a non-trivial &amp;amp; variable impact on performance but is needed to take profiles.&lt;/li&gt;
&lt;li&gt;Random experiment opt-in &amp;amp; feature flags may impact performance (see &lt;a href="https://github.com/mozilla-mobile/perf-frontend-issues/issues/45"&gt;perf-frontend-issues#45&lt;/a&gt; for mitigation).&lt;/li&gt;
&lt;li&gt;This is slower to build than debug builds because it does additional tasks (e.g. minification) similar to other release builds&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nightly &lt;code&gt;forPerformanceTest&lt;/code&gt; variants with API tokens already added &lt;a href="https://firefox-ci-tc.services.mozilla.com/tasks/index/project.mobile.fenix.v2.performance-test/" rel="nofollow"&gt;are also available from Taskcluster&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you want to run &lt;strong&gt;performance tests/benchmarks&lt;/strong&gt; in automation or locally:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Recommendation: production builds. If debuggable is required, use recommendation above but note the caveat above. If your needs are not met, please contact the front-end perf group to identify a new solution.&lt;/li&gt;
&lt;li&gt;Rationale: like the rationale above, we need release variants so the choice is based on the debuggable flag.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For additional context on these recommendations, see &lt;a href="https://docs.google.com/document/d/1aW-m0HYncTDDiRz_2x6EjcYkjBpL9SHhhYix13Vil30/edit#" rel="nofollow"&gt;the perf build variant analysis&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You will &lt;strong&gt;need to sign &lt;code&gt;forPerformanceTest&lt;/code&gt; variants.&lt;/strong&gt; For local development, our recommendation is to add the following configuration to &lt;code&gt;app/build.gradle&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;android { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; this line already exists&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;

    buildTypes { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; this line already exists&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;

        forPerformanceTest releaseTemplate &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; this line already exists.&lt;/span&gt;
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;

            signingConfig signingConfigs&lt;span class="pl-k"&gt;.&lt;/span&gt;debug
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This recommendation will let you use AS just like you do with debug builds but &lt;strong&gt;please do not check in these changes.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://github.com/mozilla-mobile/perf-frontend-issues/issues/44"&gt;perf-frontend-issues#44&lt;/a&gt; for efforts to make performance signing easier.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-pre-push-hooks" class="anchor" aria-hidden="true" href="#pre-push-hooks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pre-push hooks&lt;/h2&gt;
&lt;p&gt;To reduce review turn-around time, we'd like all pushes to run tests locally. We'd
recommend you use our provided pre-push hook in &lt;code&gt;config/pre-push-recommended.sh&lt;/code&gt;.
Using this hook will guarantee your hook gets updated as the repository changes.
This hook tries to run as much as possible without taking too much time.&lt;/p&gt;
&lt;p&gt;To add it on Mac/Linux, run this command from the project root:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;ln -s ../../config/pre-push-recommended.sh .git/hooks/pre-push&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or for Windows run this command using the Command Prompt with administrative privileges:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mklink .git&lt;span class="pl-cce"&gt;\h&lt;/span&gt;ooks&lt;span class="pl-cce"&gt;\p&lt;/span&gt;re-push ..&lt;span class="pl-cce"&gt;\.&lt;/span&gt;.&lt;span class="pl-cce"&gt;\c&lt;/span&gt;onfig&lt;span class="pl-cce"&gt;\p&lt;/span&gt;re-push-recommended.sh&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or using PowerShell:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;New-Item -ItemType SymbolicLink -Path .git&lt;span class="pl-cce"&gt;\h&lt;/span&gt;ooks&lt;span class="pl-cce"&gt;\p&lt;/span&gt;re-push -Value (Resolve-Path config&lt;span class="pl-cce"&gt;\p&lt;/span&gt;re-push-recommended.sh)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To push without running the pre-push hook (e.g. doc updates):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git push &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;remote&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; --no-verify&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-localproperties-helpers" class="anchor" aria-hidden="true" href="#localproperties-helpers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;local.properties helpers&lt;/h2&gt;
&lt;p&gt;There are multiple helper flags available via &lt;code&gt;local.properties&lt;/code&gt; that will help speed up local development workflow
when working across multiple layers of the dependency stack - specifically, with android-components, geckoview or application-services.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-android-components-auto-publication-workflow" class="anchor" aria-hidden="true" href="#android-components-auto-publication-workflow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;android-components auto-publication workflow&lt;/h3&gt;
&lt;p&gt;Specify a relative path to your local &lt;code&gt;android-components&lt;/code&gt; checkout via &lt;code&gt;autoPublish.android-components.dir&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If enabled, during a Fenix build android-components will be compiled and locally published if it has been modified,
and published versions of android-components modules will be automatically used instead of whatever is declared in Dependencies.kt.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-application-services-composite-builds" class="anchor" aria-hidden="true" href="#application-services-composite-builds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;application-services composite builds&lt;/h3&gt;
&lt;p&gt;Specify a relative path to your local &lt;code&gt;application-services&lt;/code&gt; checkout via &lt;code&gt;substitutions.application-services.dir&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If enabled, a multi-project gradle build will be configured, and any application-services dependency will be substituted
for the local version. Any changes to &lt;code&gt;application-services&lt;/code&gt; will be automatically included in Fenix builds.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-geckoview" class="anchor" aria-hidden="true" href="#geckoview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GeckoView&lt;/h3&gt;
&lt;p&gt;Specify a relative path to your local &lt;code&gt;mozilla-central&lt;/code&gt; checkout via &lt;code&gt;dependencySubstitutions.geckoviewTopsrcdir&lt;/code&gt;,
and optional a path to m-c object directory via &lt;code&gt;dependencySubstitutions.geckoviewTopobjdir&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If these are configured, local builds of GeckoView will be used instead of what's configured in Dependencies.kt.
For more details, see &lt;a href="https://mozilla.github.io/geckoview/contributor/geckoview-quick-start#include-geckoview-as-a-dependency" rel="nofollow"&gt;https://mozilla.github.io/geckoview/contributor/geckoview-quick-start#include-geckoview-as-a-dependency&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;This Source Code Form is subject to the terms of the Mozilla Public
License, v. 2.0. If a copy of the MPL was not distributed with this
file, You can obtain one at http://mozilla.org/MPL/2.0/
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>mozilla-mobile</author><guid isPermaLink="false">https://github.com/mozilla-mobile/fenix</guid><pubDate>Fri, 31 Jan 2020 00:13:00 GMT</pubDate></item><item><title>ahmedeltaher/MVVM-Kotlin-Android-Architecture #14 in Kotlin, This week</title><link>https://github.com/ahmedeltaher/MVVM-Kotlin-Android-Architecture</link><description>&lt;p&gt;&lt;i&gt;MVVM + Kotlin + Retrofit2 + Dagger2 + Coroutines + MVP + Kotlin-Android-Extensions + RX-java + Mockk + Espresso + Junit5&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-model-view-viewmodel-ie-mvvm" class="anchor" aria-hidden="true" href="#model-view-viewmodel-ie-mvvm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/ahmedeltaher/Android-MVVM-architecture"&gt;Model-View-ViewModel (ie MVVM)&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://android-arsenal.com/details/3/4975" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ba058e1c87e7f4902243a34acba8badbbeb5764c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f416e64726f6964253230417273656e616c2d616e64726f69642d2d626573742d2d7072616374696365732d627269676874677265656e2e7376673f7374796c653d666c6174" alt="Android Arsenal" data-canonical-src="https://img.shields.io/badge/Android%20Arsenal-android--best--practices-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;  &lt;a href="https://kotlinlang.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/623b9cfc69530420b49a48d51acb5f925072d35d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4b6f746c696e2d312e332e7878782d627269676874677265656e2e737667" alt="kotlin" data-canonical-src="https://img.shields.io/badge/Kotlin-1.3.xxx-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;  &lt;a href="https://kotlinlang.org/docs/reference/coroutines-overview.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6ce8bea7df7f2ebe2de1db2c34fc6c014a5927e1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f726f7574696e65732d6173796e6368726f6e6f75732d7265642e737667" alt="coroutines" data-canonical-src="https://img.shields.io/badge/coroutines-asynchronous-red.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/Kotlin/anko"&gt;&lt;img src="https://camo.githubusercontent.com/165d861a55c9ad6a5beeb87763f67e57764e8f7c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f416e6b6f2d636f6d6d6f6e732d626c75652e737667" alt="ANKO" data-canonical-src="https://img.shields.io/badge/Anko-commons-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://mockk.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9d8ed9e02a70bcc40454acd619fe6abdb2ed1583/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d6f636b6b2d74657374696e672d79656c6c6f772e737667" alt="Mockk" data-canonical-src="https://img.shields.io/badge/Mockk-testing-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt;      &lt;a href="https://junit.org/junit5/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6c348188beb18b07f4418eb256f776069fbeb5cc/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a756e6974352d74657374696e672d79656c6c6f77677265656e2e737667" alt="Junit5" data-canonical-src="https://img.shields.io/badge/Junit5-testing-yellowgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;   &lt;a href="https://developer.android.com/training/testing/espresso/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2931de4fed7b36125aa8a661993ee2197d189d27/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f457370726573736f2d74657374696e672d6c69676874677265792e737667" alt="Espresso" data-canonical-src="https://img.shields.io/badge/Espresso-testing-lightgrey.svg" style="max-width:100%;"&gt;&lt;/a&gt;  &lt;a href="https://google.github.io/dagger/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f5f27c5223b311978f325533e2b4c04950fdb379/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4461676765722d322e78782d6f72616e67652e737667" alt="Dagger 2" data-canonical-src="https://img.shields.io/badge/Dagger-2.xx-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;  &lt;a href="https://kotlinlang.org/docs/tutorials/android-plugin.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/50fb168bd650df60b12d37d33f28147ad83b8d41/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4b6f746c696e2d2d416e64726f69642d2d457874656e73696f6e732d706c7567696e2d7265642e737667" alt="Kotlin-Android-Extensions " data-canonical-src="https://img.shields.io/badge/Kotlin--Android--Extensions-plugin-red.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/googlesamples/android-architecture"&gt;&lt;img src="https://camo.githubusercontent.com/179064287739742c8503f66f15119ba6a13c657e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436c65616e2d2d436f64652d4d56564d2d627269676874677265656e2e737667" alt="MVVM " data-canonical-src="https://img.shields.io/badge/Clean--Code-MVVM-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/10d83c2494986d11438b0607dcc5c3ab55dc7153/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436c65616e2d2d436f64652d4d56502d627269676874677265656e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/10d83c2494986d11438b0607dcc5c3ab55dc7153/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436c65616e2d2d436f64652d4d56502d627269676874677265656e2e737667" alt="MVP " data-canonical-src="https://img.shields.io/badge/Clean--Code-MVP-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1812129/68319232-446cf900-00be-11ea-92cf-cad817b2af2c.png"&gt;&lt;img src="https://user-images.githubusercontent.com/1812129/68319232-446cf900-00be-11ea-92cf-cad817b2af2c.png" alt="MVVM3" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Model-View-ViewModel (ie MVVM) is a template of a client application architecture, proposed by John Gossman as an alternative to MVC and MVP patterns when using Data Binding technology. Its concept is to separate data presentation logic from business logic by moving it into particular class for a clear distinction.&lt;br&gt;
You can also check &lt;a href="https://github.com/ahmedeltaher/Android-MVP-Architecture"&gt;&lt;strong&gt;MVP&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why Promoting MVVM VS MVP:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ViewModel has Built in LifeCycleOwerness, on the other hand Presenter not, and you have to take this responsiblty in your side.&lt;/li&gt;
&lt;li&gt;ViewModel doesn't have a reference for View, on the other hand Presenter still hold a reference for view, even if you made it as weakreference.&lt;/li&gt;
&lt;li&gt;ViewModel survive configuration changes, while it is your own responsiblities to survive the configuration changes in case of Presenter. (Saving and restoring the UI state)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;MVVM Best Pratice:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Avoid references to Views in ViewModels.&lt;/li&gt;
&lt;li&gt;Instead of pushing data to the UI, let the UI observe changes to it.&lt;/li&gt;
&lt;li&gt;Distribute responsibilities, add a domain layer if needed.&lt;/li&gt;
&lt;li&gt;Add a data repository as the single-point entry to your data.&lt;/li&gt;
&lt;li&gt;Expose information about the state of your data using a wrapper or another LiveData.&lt;/li&gt;
&lt;li&gt;Consider edge cases, leaks and how long-running operations can affect the instances in your architecture.&lt;/li&gt;
&lt;li&gt;Don’t put logic in the ViewModel that is critical to saving clean state or related to data. Any call you make from a ViewModel can be the last one.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-coroutines-" class="anchor" aria-hidden="true" href="#what-is-coroutines-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;What is Coroutines ?&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Coroutines :&lt;/strong&gt;&lt;br&gt;
Is light wight threads for asynchronous programming, Coroutines not only open the doors to&lt;br&gt;
asynchronous programming, but also provide a wealth of other possibilities such as concurrency, actors, etc.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-coroutines-vs-rxjava" class="anchor" aria-hidden="true" href="#coroutines-vs-rxjava"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Coroutines VS RXJava&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;They're different tools with different strengths. Like a tank and a cannon, they have a lot of overlap but are more or less desirable under different circumstances.&lt;br&gt;
- Coroutines Is light wight threads for asynchronous programming.&lt;br&gt;
- RX-Kotlin/RX-Java is functional reactive programming, its core pattern relay on&lt;br&gt;
observer design pattern, so you can use it to handle user interaction with UI while you&lt;br&gt;
still using coroutines as main core for background work.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-does-coroutines-concept-work-" class="anchor" aria-hidden="true" href="#how-does-coroutines-concept-work-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;How does Coroutines concept work ?&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Kotlin coroutine is a way of doing things asynchronously in a sequential manner. Creating a coroutine is a lot cheaper vs creating a thread.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-when-i-can-choose-coroutines-or-rx-kotlin-to-do-some-behaviour-" class="anchor" aria-hidden="true" href="#when-i-can-choose-coroutines-or-rx-kotlin-to-do-some-behaviour-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;When I can choose Coroutines or RX-Kotlin to do some behaviour ?&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Coroutines : &lt;em&gt;When we have concurrent tasks , like you would fetch data from Remote connections&lt;br&gt;
, database , any background processes , sure you can use RX in such cases too, but it looks like&lt;br&gt;
you use a tank to kill ant.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;RX-Kotlin : &lt;em&gt;When you would to handle stream of UI actions like : user scrolling , clicks ,&lt;br&gt;
update UI upon some events .....ect .&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-the-coroutines-benefits" class="anchor" aria-hidden="true" href="#what-is-the-coroutines-benefits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;What is the Coroutines benefits?&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Writing an asynchronous code is sequential manner.&lt;/li&gt;
&lt;li&gt;Costing of create coroutines are much cheaper to crate threads.&lt;/li&gt;
&lt;li&gt;Don't be over engineered to use observable pattern, when no need to use it.&lt;/li&gt;
&lt;li&gt;parent coroutine can automatically manage the life cycle of its child coroutines for you.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-handle-retrofit-with-coroutines" class="anchor" aria-hidden="true" href="#handle-retrofit-with-coroutines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Handle Retrofit with Coroutines&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1812129/68318999-e93b0680-00bd-11ea-9d76-058222c7a654.png"&gt;&lt;img src="https://user-images.githubusercontent.com/1812129/68318999-e93b0680-00bd-11ea-9d76-058222c7a654.png" alt="8399" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add Coroutines to your gradle file&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;// Add Coroutines  
implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2'  
implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2'  
implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core-common:1.3.2'  
// Add Retrofit2  
implementation 'com.squareup.retrofit2:retrofit:2.6.2'  
implementation 'com.squareup.retrofit2:converter-gson:2.6.2'  
implementation 'com.squareup.okhttp3:okhttp:4.2.2'  
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Make Retrofit Calls.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;     &lt;span class="pl-k"&gt;@GET&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;topstories/v2/home.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)  
     &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;fetchNews&lt;/span&gt;()&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Call&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;NewsModel&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;With &lt;code&gt;async&lt;/code&gt; we create new coroutine and returns its future result as an implementation of [Deferred].&lt;/li&gt;
&lt;li&gt;The coroutine builder called &lt;code&gt;launch&lt;/code&gt; allow us to start a coroutine in background and keep working in the meantime.&lt;/li&gt;
&lt;li&gt;so async will run in background then return its promised result to parent coroutine which&lt;br&gt;
created by launch.&lt;/li&gt;
&lt;li&gt;when we get a result, it is up to us to do handle the result.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;     launch {  
       &lt;span class="pl-k"&gt;try&lt;/span&gt; {  
             &lt;span class="pl-k"&gt;val&lt;/span&gt; serviceResponse&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Data?&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; withContext(&lt;span class="pl-en"&gt;Dispatchers&lt;/span&gt;.&lt;span class="pl-en"&gt;IO&lt;/span&gt;) { dataRepository.requestNews()  
            }  
       &lt;span class="pl-k"&gt;if&lt;/span&gt; (service&lt;span class="pl-en"&gt;Response?&lt;/span&gt;.code &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-en"&gt;Error&lt;/span&gt;.&lt;span class="pl-en"&gt;SUCCESS_CODE&lt;/span&gt;) {  
                 &lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-k"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; serviceResponse.&lt;span class="pl-k"&gt;data&lt;/span&gt;  
                 callback.onSuccess(&lt;span class="pl-k"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-en"&gt;NewsModel&lt;/span&gt;)  
             } &lt;span class="pl-k"&gt;else&lt;/span&gt; {  
                 callback.onFail(service&lt;span class="pl-en"&gt;Response?&lt;/span&gt;.error)  
             }  
         } &lt;span class="pl-k"&gt;catch&lt;/span&gt; (&lt;span class="pl-smi"&gt;e&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Exception&lt;/span&gt;) {  
                 callback.onFail(&lt;span class="pl-en"&gt;Error&lt;/span&gt;(e))  
         }  
     }  &lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-keep-your-code-clean-according-to-mvvm" class="anchor" aria-hidden="true" href="#keep-your-code-clean-according-to-mvvm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Keep your code clean according to MVVM&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Yes , liveData is easy , powerful , but you should know how to use.&lt;/li&gt;
&lt;li&gt;For livedate which will emit data stream , it has to be in your&lt;br&gt;
data layer , and don't inform those observables any thing else like&lt;br&gt;
in which thread those will consume , cause it is another&lt;/li&gt;
&lt;li&gt;For livedata which will emit UI binding events, it has to be in your ViewModel Layer.&lt;/li&gt;
&lt;li&gt;Observers in UI Consume and react to live data values and bind it.&lt;br&gt;
responsibility , and according to &lt;code&gt;Single responsibility principle&lt;/code&gt;&lt;br&gt;
in &lt;code&gt;SOLID (object-oriented design)&lt;/code&gt; , so don't break this concept by&lt;br&gt;
mixing the responsibilities .&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1812129/68319008-e9d39d00-00bd-11ea-9245-ebedd2a2c067.png"&gt;&lt;img src="https://user-images.githubusercontent.com/1812129/68319008-e9d39d00-00bd-11ea-9245-ebedd2a2c067.png" alt="mvvm2" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LICENSE&lt;/h2&gt;
&lt;p&gt;Copyright [2016] [Ahmed Eltaher]&lt;br&gt;
Licensed under the Apache License, Version 2.0 (the "License");&lt;br&gt;
you may not use this file except in compliance with the License.&lt;br&gt;
You may obtain a copy of the License at&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;br&gt;
Unless required by applicable law or agreed to in writing, software&lt;br&gt;
distributed under the License is distributed on an "AS IS" BASIS,&lt;br&gt;
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;br&gt;
See the License for the specific language governing permissions and&lt;br&gt;
limitations under the License.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ahmedeltaher</author><guid isPermaLink="false">https://github.com/ahmedeltaher/MVVM-Kotlin-Android-Architecture</guid><pubDate>Fri, 31 Jan 2020 00:14:00 GMT</pubDate></item><item><title>Szaki/XiaomiADBFastbootTools #15 in Kotlin, This week</title><link>https://github.com/Szaki/XiaomiADBFastbootTools</link><description>&lt;p&gt;&lt;i&gt;A simple tool for managing Xiaomi devices on desktop using ADB and Fastboot&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-xiaomi-adbfastboot-tools-" class="anchor" aria-hidden="true" href="#xiaomi-adbfastboot-tools-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Xiaomi ADB/Fastboot Tools &lt;g-emoji class="g-emoji" alias="blush" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60a.png"&gt;😊&lt;/g-emoji&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/8338f562fe8db464edfe68c8426d27e8ce546428/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f537a616b692f5869616f6d6941444246617374626f6f74546f6f6c732f746f74616c2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/8338f562fe8db464edfe68c8426d27e8ce546428/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f537a616b692f5869616f6d6941444246617374626f6f74546f6f6c732f746f74616c2e737667" alt="" data-canonical-src="https://img.shields.io/github/downloads/Szaki/XiaomiADBFastbootTools/total.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ad24db0f981be5607399cabf0c9325e516a3cba5/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f537a616b692f5869616f6d6941444246617374626f6f74546f6f6c732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/ad24db0f981be5607399cabf0c9325e516a3cba5/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f537a616b692f5869616f6d6941444246617374626f6f74546f6f6c732e737667" alt="" data-canonical-src="https://img.shields.io/github/license/Szaki/XiaomiADBFastbootTools.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/Szaki_EU" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c86cf4a5ec8353544e7c12a4855dc2555f3116cb/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f68747470732f6769746875622e636f6d2f537a616b692f5869616f6d6941444246617374626f6f74546f6f6c732e7376673f7374796c653d736f6369616c" alt="" data-canonical-src="https://img.shields.io/twitter/url/https/github.com/Szaki/XiaomiADBFastbootTools.svg?style=social" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-modules" class="anchor" aria-hidden="true" href="#modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modules&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;App Manager&lt;/strong&gt; - Uninstall/reinstall/disable/enable system apps and services on demand&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Camera2&lt;/strong&gt; - Enable Camera2 and EIS (TWRP required)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;File Explorer&lt;/strong&gt; - Transfer files between a device and a computer using ADB&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Screen density&lt;/strong&gt; - Tweak screen density by overriding the DPI value&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Screen resolution&lt;/strong&gt; - Tweak screen resolution by overriding the width and height values&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Device properties&lt;/strong&gt; - Retrieve tons of statistics and information about your device&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Flasher&lt;/strong&gt; - Flash any partition with an image, boot to any image or flash a Fastboot ROM (unlocked bootloader required)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Wiper&lt;/strong&gt; - Wipe the cache or perform a factory reset&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OEM Unlocker &amp;amp; Locker&lt;/strong&gt; - Lock or unlock the bootloader (Unlocking is only supported by Android One devices)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ROM Downloader&lt;/strong&gt; - Get links to the latest MIUI Fastboot ROMs or download them right away&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rebooter&lt;/strong&gt; - Advanced rebooting options using ADB/Fastboot&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshot.png"&gt;&lt;img src="screenshot.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-downloads" class="anchor" aria-hidden="true" href="#downloads"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Downloads&lt;/h2&gt;
&lt;p&gt;Available downloads:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Executable JAR&lt;/li&gt;
&lt;li&gt;OS-specific ZIP (JAR with ADB and Fastboot binaries included)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you have ADB and Fastboot in &lt;code&gt;PATH&lt;/code&gt; (installed system-wide), you can use just the JAR, otherwise download the OS-specific ZIP.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-latest-release" class="anchor" aria-hidden="true" href="#latest-release"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/Szaki/XiaomiADBFastbootTools/releases/latest"&gt;Latest release&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Warning: Use the program at your own risk!&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-instructions" class="anchor" aria-hidden="true" href="#instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Instructions&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-connecting-a-device-in-adb-mode" class="anchor" aria-hidden="true" href="#connecting-a-device-in-adb-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Connecting a device in ADB mode&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Enable developer options in Android.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MIUI: Go to Settings &amp;gt; About device and tap ‘MIUI version’ seven times to enable developer options.&lt;/li&gt;
&lt;li&gt;Android One: Go to Settings &amp;gt; System &amp;gt; About device and tap ‘Build number’ seven times to enable developer options.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enable USB debugging in Android.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MIUI: Go to Settings &amp;gt; Additional settings &amp;gt; Developer options and enable USB debugging.
&lt;ul&gt;
&lt;li&gt;In order to use the Screen density and Screen resolution modules, enable USB debugging (Security settings) as well.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Android One: Go to Settings &amp;gt; System &amp;gt; Developer options and enable USB debugging.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Connect your device to the computer and launch the application. The device is going to ask for authorisation, which you'll have to allow.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wait for the application to detect your device. The device info should appear in the top left section.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-connecting-a-device-in-fastboot-mode" class="anchor" aria-hidden="true" href="#connecting-a-device-in-fastboot-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Connecting a device in Fastboot mode&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Put your device into Fastboot mode by holding power and volume down simultaneously until the Fastboot splash screen comes up.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If your device is loaded in ADB mode, you can enter Fastboot mode by clicking Menu &amp;gt; Reboot device to Fastboot.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Connect your device to the computer and launch the application.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wait for the application to detect your device. The device info should appear in the top left section.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-faq--troubleshooting" class="anchor" aria-hidden="true" href="#faq--troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ &amp;amp; Troubleshooting&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;The application doesn't work. Is there anything I should have installed?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Yes, the Xiaomi ADB/Fastboot Tools was developed in Kotlin for the Java Virtual Machine so it needs the JRE to run, version 11 or later.&lt;/p&gt;
&lt;p&gt;On Windows/MacOS, install Oracle Java from &lt;a href="https://www.oracle.com/technetwork/java/javase/downloads/index.html" rel="nofollow"&gt;here&lt;/a&gt; or OpenJDK from &lt;a href="https://adoptopenjdk.net/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;On Linux distributions, install &lt;code&gt;openjdk-11-jdk&lt;/code&gt;, &lt;code&gt;openjdk-11-jre&lt;/code&gt; or later.&lt;/p&gt;
&lt;p&gt;If the application says that it cannot find ADB/Fastboot even though you have downloaded the OS-specific ZIP, open a terminal inside the extracted folder and enter &lt;code&gt;java -jar XiaomiADBFastbootTools.jar&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The app on Windows doesn't detect my device even though it's connected and USB debugging is enabled. What could be the issue?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Windows most likely doesn't recognise your device in ADB mode. Install the universal ADB drivers from &lt;a href="http://dl.adbdriver.com/upload/adbdriver.zip" rel="nofollow"&gt;here&lt;/a&gt;, reboot your PC and try again.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Do I need an unlocked bootloader or root access to use the app?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Flasher, Wiper and Camera2 modules require an unlocked bootloader but everything else works without rooting or unlocking.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What apps are safe to uninstall?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;All applications in the list are safe to uninstall. You might lose access to some services but the device will keep working just fine. Some apps, like Gallery, aren't listed because uninstalling them would soft brick your device.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Do uninstalled system apps affect OTA updates?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;No, you are free to install updates without the fear of bricking your device or losing data.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Do uninstalled system apps come back with updates?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;No, uninstalled apps should only come back when you reinstall them or factory reset your device.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why does the Uninstaller hang on some apps?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There are many factory apps Global MIUI doesn't let you uninstall but China MIUI does. If you try to uninstall an app like that, the tool will hang. If that happens, close the tools, disconnect your device, uninstall the app manually, then launch the tools again and reconnect your device to proceed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How do I regain uninstalled system apps?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Simply reinstall them using the Reinstaller module when connected in ADB mode.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The app is called Xiaomi ADB/Fastboot Tools. Does that mean that it only works with Xiaomi devices?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ADB and Fastboot are universal interfaces on Android but some of the algorithms and methods used in the app are specific to Xiaomi devices, so yes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Does this replace MiFlash or MiUnlock?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;No. Fastboot ROM flashing is available so MiFlash can mostly be substituted but implementing EDL flashing or MIUI unlocking would only make the program unnecessarily complex.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Szaki</author><guid isPermaLink="false">https://github.com/Szaki/XiaomiADBFastbootTools</guid><pubDate>Fri, 31 Jan 2020 00:15:00 GMT</pubDate></item><item><title>android10/Android-CleanArchitecture-Kotlin #16 in Kotlin, This week</title><link>https://github.com/android10/Android-CleanArchitecture-Kotlin</link><description>&lt;p&gt;&lt;i&gt;This is a movies sample app in Kotlin, which is part of a serie of blog posts I have written about architecting android application using different approaches.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/37318022/40349145-3e0c8d8a-5dd8-11e8-8654-5784f9ab7554.png"&gt;&lt;img src="https://user-images.githubusercontent.com/37318022/40349145-3e0c8d8a-5dd8-11e8-8654-5784f9ab7554.png" alt="banner" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-android---clean-architecture---kotlin-" class="anchor" aria-hidden="true" href="#android---clean-architecture---kotlin-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android - Clean Architecture - Kotlin &lt;a href="https://travis-ci.org/android10/Android-CleanArchitecture-Kotlin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e6c55dcddd2dcfefec85f0153df58b97ab017449/68747470733a2f2f7472617669732d63692e6f72672f616e64726f696431302f416e64726f69642d436c65616e4172636869746563747572652d4b6f746c696e2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/android10/Android-CleanArchitecture-Kotlin.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The purpose of this repo is to follow up Clean Architecture principles by bringing them to Android. It is worth saying that the idea is to take advantage of the Kotlin Programming Language features plus also pull in lessons learned and ideas from other interesting aproaches like Functional Programming.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-blog-post-with-implementation-details-explanation" class="anchor" aria-hidden="true" href="#blog-post-with-implementation-details-explanation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blog post with implementation details explanation:&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://fernandocejas.com/2018/05/07/architecting-android-reloaded/" rel="nofollow"&gt;Architecting Android… Reloaded&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-android---clean-architecture---java" class="anchor" aria-hidden="true" href="#android---clean-architecture---java"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android - Clean Architecture - Java:&lt;/h2&gt;
&lt;p&gt;There is another Android Clean Architecture repository written in Java: &lt;a href="https://github.com/android10/Android-CleanArchitecture"&gt;https://github.com/android10/Android-CleanArchitecture&lt;/a&gt; with really nice discussions: &lt;a href="https://github.com/android10/Android-CleanArchitecture/issues"&gt;https://github.com/android10/Android-CleanArchitecture/issues&lt;/a&gt;.
Article, lessons learned and some more material coming up. Check the following known bugs and TODO list.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-other-material-worth-reading" class="anchor" aria-hidden="true" href="#other-material-worth-reading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other material worth reading:&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://fernandocejas.com/2014/09/03/architecting-android-the-clean-way/" rel="nofollow"&gt;Architecting Android…The clean way?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fernandocejas.com/2015/07/18/architecting-android-the-evolution/" rel="nofollow"&gt;Architecting Android…The evolution&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fernandocejas.com/2015/04/11/tasting-dagger-2-on-android/" rel="nofollow"&gt;Tasting Dagger 2 on Android&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fernandocejas.com/2016/12/24/clean-architecture-dynamic-parameters-in-use-cases/" rel="nofollow"&gt;Clean Architecture…Dynamic Parameters in Use Cases&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-----------------------------------------------------------------------------------------------" class="anchor" aria-hidden="true" href="#----------------------------------------------------------------------------------------------"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;----------------------------------------------------------------------------------------------&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-sample-app" class="anchor" aria-hidden="true" href="#sample-app"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sample app&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1360604/31345866-679a221a-ad17-11e7-8097-7800edb677fa.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/1360604/31345866-679a221a-ad17-11e7-8097-7800edb677fa.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content------------------------------------------------------------------------------------------------1" class="anchor" aria-hidden="true" href="#-----------------------------------------------------------------------------------------------1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;----------------------------------------------------------------------------------------------&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-clean-architecture" class="anchor" aria-hidden="true" href="#clean-architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clean Architecture&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/android10/Sample-Data/blob/master/Android-CleanArchitecture-Kotlin/architecture/clean_architecture_reloaded_main.png"&gt;&lt;img src="https://github.com/android10/Sample-Data/raw/master/Android-CleanArchitecture-Kotlin/architecture/clean_architecture_reloaded_main.png" alt="https://fernandocejas.com/2018/05/07/architecting-android-reloaded/" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content------------------------------------------------------------------------------------------------2" class="anchor" aria-hidden="true" href="#-----------------------------------------------------------------------------------------------2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;----------------------------------------------------------------------------------------------&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-android-3-layers-architecture" class="anchor" aria-hidden="true" href="#android-3-layers-architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android 3 Layers Architecture&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/android10/Sample-Data/blob/master/Android-CleanArchitecture-Kotlin/architecture/clean_architecture_reloaded_layers.png"&gt;&lt;img src="https://github.com/android10/Sample-Data/raw/master/Android-CleanArchitecture-Kotlin/architecture/clean_architecture_reloaded_layers.png" alt="https://fernandocejas.com/2018/05/07/architecting-android-reloaded/" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content------------------------------------------------------------------------------------------------3" class="anchor" aria-hidden="true" href="#-----------------------------------------------------------------------------------------------3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;----------------------------------------------------------------------------------------------&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-ui-layer-mvvm" class="anchor" aria-hidden="true" href="#ui-layer-mvvm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UI Layer: MVVM&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/android10/Sample-Data/blob/master/Android-CleanArchitecture-Kotlin/architecture/clean_architecture_reloaded_mvvm_app.png"&gt;&lt;img src="https://github.com/android10/Sample-Data/raw/master/Android-CleanArchitecture-Kotlin/architecture/clean_architecture_reloaded_mvvm_app.png" alt="https://fernandocejas.com/2018/05/07/architecting-android-reloaded/" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content------------------------------------------------------------------------------------------------4" class="anchor" aria-hidden="true" href="#-----------------------------------------------------------------------------------------------4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;----------------------------------------------------------------------------------------------&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-data-layer-repository" class="anchor" aria-hidden="true" href="#data-layer-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Layer: Repository&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/android10/Sample-Data/blob/master/Android-CleanArchitecture-Kotlin/architecture/clean_archictecture_reloaded_repository.png"&gt;&lt;img src="https://github.com/android10/Sample-Data/raw/master/Android-CleanArchitecture-Kotlin/architecture/clean_archictecture_reloaded_repository.png" alt="https://fernandocejas.com/2018/05/07/architecting-android-reloaded/" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content------------------------------------------------------------------------------------------------5" class="anchor" aria-hidden="true" href="#-----------------------------------------------------------------------------------------------5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;----------------------------------------------------------------------------------------------&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-local-development" class="anchor" aria-hidden="true" href="#local-development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Local Development&lt;/h2&gt;
&lt;p&gt;Here are some useful Gradle/adb commands for executing this example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;./gradlew deployDebug&lt;/code&gt; - Builds and install the debug apk on the current connected device.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./gradlew runUnitTests&lt;/code&gt; - Execute all unit tests (both unit and integration).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-discussions" class="anchor" aria-hidden="true" href="#discussions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Discussions&lt;/h2&gt;
&lt;p&gt;Refer to the issues section: &lt;a href="https://github.com/android10/Android-CleanArchitecture-Kotlin/issues"&gt;https://github.com/android10/Android-CleanArchitecture-Kotlin/issues&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-code-style" class="anchor" aria-hidden="true" href="#code-style"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code style&lt;/h2&gt;
&lt;p&gt;Here you can download and install the java codestyle.
&lt;a href="https://github.com/android10/java-code-styles"&gt;https://github.com/android10/java-code-styles&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Copyright 2018 Fernando Cejas

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/android10/Sample-Data/blob/master/android10/android10_logo_big.png"&gt;&lt;img src="https://github.com/android10/Sample-Data/raw/master/android10/android10_logo_big.png" alt="http://www.fernandocejas.com" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/android10" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/031fc5a134cdca5ae3460822aba371e63f794233/68747470733a2f2f7777772e6275796d6561636f666665652e636f6d2f6173736574732f696d672f637573746f6d5f696d616765732f6f72616e67655f696d672e706e67" alt="Buy Me A Coffee" data-canonical-src="https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>android10</author><guid isPermaLink="false">https://github.com/android10/Android-CleanArchitecture-Kotlin</guid><pubDate>Fri, 31 Jan 2020 00:16:00 GMT</pubDate></item><item><title>nhaarman/mockito-kotlin #17 in Kotlin, This week</title><link>https://github.com/nhaarman/mockito-kotlin</link><description>&lt;p&gt;&lt;i&gt;Using Mockito with Kotlin&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-mockito-kotlin" class="anchor" aria-hidden="true" href="#mockito-kotlin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mockito-Kotlin&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://maven-badges.herokuapp.com/maven-central/com.nhaarman.mockitokotlin2/mockito-kotlin" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/2cabef32cf24397397d8e1f658fda2a369136e8a/68747470733a2f2f6d6176656e2d6261646765732e6865726f6b756170702e636f6d2f6d6176656e2d63656e7472616c2f636f6d2e6e686161726d616e2e6d6f636b69746f6b6f746c696e322f6d6f636b69746f2d6b6f746c696e2f62616467652e737667" alt="Download" data-canonical-src="https://maven-badges.herokuapp.com/maven-central/com.nhaarman.mockitokotlin2/mockito-kotlin/badge.svg" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A small library that provides helper functions to work with &lt;a href="https://github.com/mockito/mockito"&gt;Mockito&lt;/a&gt; in Kotlin.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;p&gt;Mockito-Kotlin is available on Maven Central and JCenter.
For Gradle users, add the following to your &lt;code&gt;build.gradle&lt;/code&gt;, replacing &lt;code&gt;x.x.x&lt;/code&gt; with the latest version:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;testImplementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.nhaarman.mockitokotlin2:mockito-kotlin:x.x.x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h2&gt;
&lt;p&gt;A test using Mockito-Kotlin typically looks like the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@Test&lt;/span&gt;
&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;doAction_doesSomething&lt;/span&gt;(){ 
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Given &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;val&lt;/span&gt; mock &lt;span class="pl-k"&gt;=&lt;/span&gt; mock&amp;lt;&lt;span class="pl-en"&gt;MyClass&lt;/span&gt;&amp;gt; {
    on { getText() } doReturn &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  }
  &lt;span class="pl-k"&gt;val&lt;/span&gt; classUnderTest &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;ClassUnderTest&lt;/span&gt;(mock)
  
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; When &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  classUnderTest.doAction()
  
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Then &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  verify(mock).doSomething(any())
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more info and samples, see the &lt;a href="https://github.com/nhaarman/mockito-kotlin/wiki"&gt;Wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;Mockito-Kotlin is built with Gradle.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;./gradlew build&lt;/code&gt; builds the project&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./gradlew publishToMavenLocal&lt;/code&gt; installs the maven artifacts in your local repository&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./gradlew assemble &amp;amp;&amp;amp; ./gradlew test&lt;/code&gt; runs the test suite (See Testing below)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-versioning" class="anchor" aria-hidden="true" href="#versioning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Versioning&lt;/h3&gt;
&lt;p&gt;Mockito-Kotlin roughly follows SEMVER; version names are parsed from
git tags using &lt;code&gt;git describe&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h3&gt;
&lt;p&gt;Mockito-Kotlin's test suite is located in a separate &lt;code&gt;tests&lt;/code&gt; module,
to allow running the tests using several Kotlin versions whilst still
keeping the base module at a recent version.&lt;/p&gt;
&lt;p&gt;Testing thus must be done in two stages: one to build the base artifact
to test against, and the actual execution of the tests against the
built artifact:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;./gradlew assemble&lt;/code&gt; builds the base artifact&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./gradlew test&lt;/code&gt; runs the tests against the built artifact.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Usually it is enough to test only using the default Kotlin versions;
CI will test against multiple versions.
If you want to test using a different Kotlin version locally, set
an environment variable &lt;code&gt;KOTLIN_VERSION&lt;/code&gt; and run the tests.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>nhaarman</author><guid isPermaLink="false">https://github.com/nhaarman/mockito-kotlin</guid><pubDate>Fri, 31 Jan 2020 00:17:00 GMT</pubDate></item><item><title>android/architecture-samples #18 in Kotlin, This week</title><link>https://github.com/android/architecture-samples</link><description>&lt;p&gt;&lt;i&gt;A collection of samples to discuss and showcase different architectural tools and patterns for Android apps.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-android-architecture-blueprints-v2" class="anchor" aria-hidden="true" href="#android-architecture-blueprints-v2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android Architecture Blueprints v2&lt;/h1&gt;
&lt;p align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/googlesamples/android-architecture/wiki/images/aab-logov2.png"&gt;&lt;img src="https://github.com/googlesamples/android-architecture/wiki/images/aab-logov2.png" alt="Illustration by Virginia Poltrack" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Android Architecture Blueprints is a project to showcase different architectural approaches to developing Android apps. In its different branches you'll find the same app (a TODO app) implemented with small differences.&lt;/p&gt;
&lt;p&gt;In this branch you'll find:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kotlin &lt;strong&gt;&lt;a href="https://kotlinlang.org/docs/reference/coroutines-overview.html" rel="nofollow"&gt;Coroutines&lt;/a&gt;&lt;/strong&gt; for background operations.&lt;/li&gt;
&lt;li&gt;A single-activity architecture, using the &lt;strong&gt;&lt;a href="https://developer.android.com/guide/navigation/navigation-getting-started" rel="nofollow"&gt;Navigation component&lt;/a&gt;&lt;/strong&gt; to manage fragment operations.&lt;/li&gt;
&lt;li&gt;A presentation layer that contains a fragment (View) and a &lt;strong&gt;ViewModel&lt;/strong&gt; per screen (or feature).&lt;/li&gt;
&lt;li&gt;Reactive UIs using &lt;strong&gt;LiveData&lt;/strong&gt; observables and &lt;strong&gt;Data Binding&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;data layer&lt;/strong&gt; with a repository and two data sources (local using Room and remote) that are queried with one-shot operations (no listeners or data streams).&lt;/li&gt;
&lt;li&gt;Two &lt;strong&gt;product flavors&lt;/strong&gt;, &lt;code&gt;mock&lt;/code&gt; and &lt;code&gt;prod&lt;/code&gt;, &lt;a href="https://android-developers.googleblog.com/2015/12/leveraging-product-flavors-in-android.html" rel="nofollow"&gt;to ease development and testing&lt;/a&gt; (except in the Dagger branch).&lt;/li&gt;
&lt;li&gt;A collection of unit, integration and e2e &lt;strong&gt;tests&lt;/strong&gt;, including "shared" tests that can be run on emulator/device or Robolectric.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-variations" class="anchor" aria-hidden="true" href="#variations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Variations&lt;/h2&gt;
&lt;p&gt;This project hosts each sample app in separate repository branches. For more information, see the &lt;code&gt;README.md&lt;/code&gt; file in each branch.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-stable-samples---kotlin" class="anchor" aria-hidden="true" href="#stable-samples---kotlin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Stable samples - Kotlin&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Sample&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/googlesamples/android-architecture/tree/master"&gt;master&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;The base for the rest of the branches. &lt;br&gt;Uses Kotlin, Architecture Components, coroutines, Data Binding, etc. and uses Room as source of truth, with a reactive UI.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/googlesamples/android-architecture/tree/dagger-android"&gt;dagger-android&lt;/a&gt;&lt;br&gt;[&lt;a href="https://github.com/googlesamples/android-architecture/compare/dagger-android#files_bucket"&gt;compare&lt;/a&gt;]&lt;/td&gt;
&lt;td&gt;A simple Dagger setup that uses &lt;code&gt;dagger-android&lt;/code&gt; and removes the two flavors.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/googlesamples/android-architecture/tree/usecases"&gt;usecases&lt;/a&gt;&lt;br&gt;[&lt;a href="https://github.com/googlesamples/android-architecture/compare/usecases#files_bucket"&gt;compare&lt;/a&gt;]&lt;/td&gt;
&lt;td&gt;Adds a new domain layer that uses UseCases for business logic.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-old-samples---kotlin-and-java" class="anchor" aria-hidden="true" href="#old-samples---kotlin-and-java"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Old samples - Kotlin and Java&lt;/h3&gt;
&lt;p&gt;Blueprints v1 had a collection of samples that are not maintained anymore, but can still be useful. See &lt;a href="https://github.com/googlesamples/android-architecture/branches"&gt;all project branches&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-why-a-to-do-app" class="anchor" aria-hidden="true" href="#why-a-to-do-app"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why a to-do app?&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/googlesamples/android-architecture/wiki/images/todoapp.gif"&gt;&lt;img align="right" src="https://github.com/googlesamples/android-architecture/wiki/images/todoapp.gif" alt="A demo illustraating the UI of the app" width="288" height="512" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The app in this project aims to be simple enough that you can understand it quickly, but complex enough to showcase difficult design decisions and testing scenarios. For more information, see the &lt;a href="https://github.com/googlesamples/android-architecture/wiki/To-do-app-specification"&gt;app's specification&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-it-not" class="anchor" aria-hidden="true" href="#what-is-it-not"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is it not?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A UI/Material Design sample. The interface of the app is deliberately kept simple to focus on architecture. Check out &lt;a href="https://github.com/android/plaid"&gt;Plaid&lt;/a&gt; instead.&lt;/li&gt;
&lt;li&gt;A complete Jetpack sample covering all libraries. Check out &lt;a href="https://github.com/googlesamples/android-sunflower"&gt;Android Sunflower&lt;/a&gt; or the advanced &lt;a href="https://github.com/googlesamples/android-architecture-components/tree/master/GithubBrowserSample"&gt;Github Browser Sample&lt;/a&gt; instead.&lt;/li&gt;
&lt;li&gt;A real production app with network access, user authentication, etc. Check out the &lt;a href="https://github.com/google/iosched"&gt;Google I/O app&lt;/a&gt;, &lt;a href="https://github.com/google/santa-tracker-android"&gt;Santa Tracker&lt;/a&gt; or &lt;a href="https://github.com/chrisbanes/tivi"&gt;Tivi&lt;/a&gt; for that.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-who-is-it-for" class="anchor" aria-hidden="true" href="#who-is-it-for"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Who is it for?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Intermediate developers and beginners looking for a way to structure their app in a testable and maintainable way.&lt;/li&gt;
&lt;li&gt;Advanced developers looking for quick reference.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-opening-a-sample-in-android-studio" class="anchor" aria-hidden="true" href="#opening-a-sample-in-android-studio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Opening a sample in Android Studio&lt;/h2&gt;
&lt;p&gt;To open one of the samples in Android Studio, begin by checking out one of the sample branches, and then open the root directory in Android Studio. The following series of steps illustrate how to open the &lt;a href="tree/usecases/"&gt;usecases&lt;/a&gt; sample.&lt;/p&gt;
&lt;p&gt;Clone the repository:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone git@github.com:googlesamples/android-architecture.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This step checks out the master branch. If you want to change to a different sample:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git checkout usecases
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; To review a different sample, replace &lt;code&gt;usecases&lt;/code&gt; with the name of sample you want to check out.&lt;/p&gt;
&lt;p&gt;Finally open the &lt;code&gt;android-architecture/&lt;/code&gt; directory in Android Studio.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Copyright 2019 Google, Inc.

Licensed to the Apache Software Foundation (ASF) under one or more contributor
license agreements. See the NOTICE file distributed with this work for
additional information regarding copyright ownership. The ASF licenses this
file to you under the Apache License, Version 2.0 (the "License"); you may not
use this file except in compliance with the License. You may obtain a copy of
the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations under
the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>android</author><guid isPermaLink="false">https://github.com/android/architecture-samples</guid><pubDate>Fri, 31 Jan 2020 00:18:00 GMT</pubDate></item><item><title>pinterest/ktlint #19 in Kotlin, This week</title><link>https://github.com/pinterest/ktlint</link><description>&lt;p&gt;&lt;i&gt;An anti-bikeshedding Kotlin linter with built-in formatter&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1 align="center"&gt;&lt;a id="user-content---" class="anchor" aria-hidden="true" href="#--"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;
&lt;a href="https://ktlint.github.io/" rel="nofollow"&gt;
  &lt;img src="https://cloud.githubusercontent.com/assets/370176/26518284/38b680da-4262-11e7-8d27-2b9e849fb55f.png" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;/h1&gt;
&lt;p align="center"&gt;
&lt;a href="https://travis-ci.org/pinterest/ktlint" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/50b73eb45b31e1c1d3d88fe78460444532ea3c62/68747470733a2f2f7472617669732d63692e6f72672f70696e7465726573742f6b746c696e742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/pinterest/ktlint.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.pinterest%22%20AND%20a%3A%22ktlint%22" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3780c0933a020b54b5e469be14566af509036763/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d63656e7472616c2f762f636f6d2e70696e7465726573742f6b746c696e742e737667" alt="Maven Central" data-canonical-src="https://img.shields.io/maven-central/v/com.pinterest/ktlint.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ktlint.github.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5652fd33142bf88d0f46018325126931fe65d01d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d2545322539442541342d4646343038312e737667" alt="ktlint" data-canonical-src="https://img.shields.io/badge/code%20style-%E2%9D%A4-FF4081.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
&lt;a href="https://kotlinlang.org/" rel="nofollow"&gt;Kotlin&lt;/a&gt; linter in spirit of &lt;a href="https://github.com/feross/standard"&gt;feross/standard&lt;/a&gt; (JavaScript) and &lt;a href="https://golang.org/cmd/gofmt/" rel="nofollow"&gt;gofmt&lt;/a&gt; (Go).  
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;No configuration.&lt;/strong&gt;&lt;a href="https://github.com/pinterest/ktlint#how-do-i-globally-disable-a-rule"&gt;*&lt;/a&gt; Which means no decisions to make, nothing to argue about and no special files to manage.&lt;br&gt;
While this might sound extreme, keep in mind that &lt;code&gt;ktlint&lt;/code&gt; tries to capture (reflect) &lt;strong&gt;official code style&lt;/strong&gt;&lt;a href="https://github.com/pinterest/ktlint/issues/284#issuecomment-425177186"&gt;*&lt;/a&gt; from &lt;a href="https://kotlinlang.org/docs/reference/coding-conventions.html" rel="nofollow"&gt;kotlinlang.org&lt;/a&gt; and &lt;a href="https://android.github.io/kotlin-guides/style.html" rel="nofollow"&gt;Android Kotlin Style Guide&lt;/a&gt;
(+ &lt;a href="#editorconfig"&gt;we respect your .editorconfig&lt;/a&gt; and support additional &lt;a href="#creating-a-ruleset"&gt;ruleset&lt;/a&gt;|s).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Built-in formatter.&lt;/strong&gt; So that you wouldn't have to fix all style violations by hand.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Customizable output.&lt;/strong&gt; &lt;code&gt;plain&lt;/code&gt; (+ &lt;code&gt;plain?group_by_file&lt;/code&gt;), &lt;code&gt;json&lt;/code&gt; and &lt;code&gt;checkstyle&lt;/code&gt; reporters are available out-of-the-box.
It's also &lt;a href="#creating-a-reporter"&gt;easy to create your own&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;A single executable jar with all dependencies included.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p align="center"&gt;
&lt;a href="#installation"&gt;Installation&lt;/a&gt; | &lt;a href="#usage"&gt;Usage&lt;/a&gt; | &lt;a href="#integration"&gt;Integration&lt;/a&gt; with &lt;a href="#-with-maven"&gt;Maven&lt;/a&gt; / &lt;a href="#-with-gradle"&gt;Gradle&lt;/a&gt; / &lt;a href="#-with-intellij-idea"&gt;IntelliJ IDEA&lt;/a&gt; / &lt;a href="#-with-emacs"&gt;Emacs&lt;/a&gt; | Creating &lt;a href="#creating-a-ruleset"&gt;a ruleset&lt;/a&gt; | &lt;a href="#creating-a-reporter"&gt;a reporter&lt;/a&gt; | &lt;a href="#badge"&gt;Badge&lt;/a&gt; | &lt;a href="#faq"&gt;FAQ&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-standard-rules" class="anchor" aria-hidden="true" href="#standard-rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Standard rules&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;4 spaces for indentation&lt;br&gt;
(unless a different &lt;code&gt;indent_size&lt;/code&gt; value is set in .editorconfig (see &lt;a href="#editorconfig"&gt;EditorConfig&lt;/a&gt; section for more))&lt;/li&gt;
&lt;li&gt;No semicolons (unless used to separate multiple statements on the same line)&lt;/li&gt;
&lt;li&gt;No unused &lt;code&gt;import&lt;/code&gt;s&lt;/li&gt;
&lt;li&gt;No consecutive blank lines&lt;/li&gt;
&lt;li&gt;No blank lines before &lt;code&gt;}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;No trailing whitespaces&lt;/li&gt;
&lt;li&gt;No &lt;code&gt;Unit&lt;/code&gt; returns (&lt;code&gt;fun fn {}&lt;/code&gt; instead of &lt;code&gt;fun fn: Unit {}&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;No empty (&lt;code&gt;{}&lt;/code&gt;) class bodies&lt;/li&gt;
&lt;li&gt;No spaces around range (&lt;code&gt;..&lt;/code&gt;) operator&lt;/li&gt;
&lt;li&gt;No newline before (binary) &lt;code&gt;+&lt;/code&gt; &amp;amp; &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;, &lt;code&gt;||&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;No wildcard &lt;code&gt;import&lt;/code&gt;s&lt;/li&gt;
&lt;li&gt;When wrapping chained calls &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;?.&lt;/code&gt; and &lt;code&gt;?:&lt;/code&gt; should be placed on the next line&lt;/li&gt;
&lt;li&gt;When a line is broken at an assignment (&lt;code&gt;=&lt;/code&gt;) operator the break comes after the symbol&lt;/li&gt;
&lt;li&gt;When class/function signature doesn't fit on a single line, each parameter must be on a separate line&lt;/li&gt;
&lt;li&gt;Consistent string templates (&lt;code&gt;$v&lt;/code&gt; instead of &lt;code&gt;${v}&lt;/code&gt;, &lt;code&gt;${p.v}&lt;/code&gt; instead of &lt;code&gt;${p.v.toString()}&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Consistent order of modifiers&lt;/li&gt;
&lt;li&gt;Consistent spacing after keywords, commas; around colons, curly braces, parens, infix operators, comments, etc&lt;/li&gt;
&lt;li&gt;Newline at the end of each file (enabled by default)
(set &lt;code&gt;insert_final_newline=false&lt;/code&gt; in .editorconfig to disable (see &lt;a href="#editorconfig"&gt;EditorConfig&lt;/a&gt; section for more)).&lt;/li&gt;
&lt;li&gt;Imports ordered in alphabetic order with no spaces between major groups&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-experimental-rules" class="anchor" aria-hidden="true" href="#experimental-rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Experimental rules&lt;/h2&gt;
&lt;p&gt;New rules will be added into the &lt;a href="https://github.com/pinterest/ktlint/tree/master/ktlint-ruleset-experimental"&gt;experimental ruleset&lt;/a&gt;, which can be enabled
by passing the &lt;code&gt;--experimental&lt;/code&gt; flag to &lt;code&gt;ktlint&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Indentation formatting - respects &lt;code&gt;.editorconfig&lt;/code&gt; &lt;code&gt;indent_size&lt;/code&gt; with no continuation indent&lt;/li&gt;
&lt;li&gt;Annotation formatting - multiple annotations should be on a separate line than the annotated declaration; annotations with parameters should each be on separate lines; annotations should be followed by a space&lt;/li&gt;
&lt;li&gt;No underscores in package names&lt;/li&gt;
&lt;li&gt;Braces required for multiline if/else statements&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-editorconfig" class="anchor" aria-hidden="true" href="#editorconfig"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;EditorConfig&lt;/h2&gt;
&lt;p&gt;ktlint recognizes the following &lt;a href="http://editorconfig.org/" rel="nofollow"&gt;.editorconfig&lt;/a&gt; properties (provided they are specified under &lt;code&gt;[*.{kt,kts}]&lt;/code&gt;):&lt;br&gt;
(values shown below are the defaults and do not need to be specified explicitly)&lt;/p&gt;
&lt;div class="highlight highlight-source-ini"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;[*.{kt,kts}]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; possible values: number (e.g. 2), "unset" (makes ktlint ignore indentation completely)  &lt;/span&gt;
&lt;span class="pl-k"&gt;indent_size&lt;/span&gt;=4
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; true (recommended) / false&lt;/span&gt;
&lt;span class="pl-k"&gt;insert_final_newline&lt;/span&gt;=true
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; possible values: number (e.g. 120) (package name, imports &amp;amp; comments are ignored), "off"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; it's automatically set to 100 on `ktlint --android ...` (per Android Kotlin Style Guide)&lt;/span&gt;
&lt;span class="pl-k"&gt;max_line_length&lt;/span&gt;=off&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-custom-editorconfig-properties" class="anchor" aria-hidden="true" href="#custom-editorconfig-properties"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom EditorConfig properties&lt;/h3&gt;
&lt;div class="highlight highlight-source-ini"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Comma-separated list of rules to disable (Since 0.34.0)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Note that rules in any ruleset other than the standard ruleset will need to be prefixed &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; by the ruleset identifier.&lt;/span&gt;
&lt;span class="pl-k"&gt;disabled_rules&lt;/span&gt;=no-wildcard-imports,experimental:annotation,my-custom-ruleset:my-custom-rule&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Skip all the way to the "Integration" section if you don't plan to use &lt;code&gt;ktlint&lt;/code&gt;'s command line interface.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;curl -sSLO https://github.com/pinterest/ktlint/releases/download/0.36.0/ktlint &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
  chmod a+x ktlint &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
  sudo mv ktlint /usr/local/bin/&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... or just download &lt;code&gt;ktlint&lt;/code&gt; from the &lt;a href="https://github.com/pinterest/ktlint/releases"&gt;releases&lt;/a&gt; page  (&lt;code&gt;ktlint.asc&lt;/code&gt; contains PGP signature which you can verify with &lt;code&gt;curl -sS https://keybase.io/pinterestandroid/pgp_keys.asc | gpg --import &amp;amp;&amp;amp; gpg --verify ktlint.asc&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;On macOS (&lt;a href="http://linuxbrew.sh/" rel="nofollow"&gt;or Linux&lt;/a&gt;) you can also use &lt;a href="https://brew.sh/" rel="nofollow"&gt;brew&lt;/a&gt; - &lt;code&gt;brew install ktlint&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you don't have curl installed - replace &lt;code&gt;curl -sL&lt;/code&gt; with &lt;code&gt;wget -qO-&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;If you are behind a proxy see -
&lt;a href="https://curl.haxx.se/docs/manpage.html#ENVIRONMENT" rel="nofollow"&gt;curl&lt;/a&gt; /
&lt;a href="https://www.gnu.org/software/wget/manual/wget.html#Proxies" rel="nofollow"&gt;wget&lt;/a&gt; manpage.
Usually simple &lt;code&gt;http_proxy=http://proxy-server:port https_proxy=http://proxy-server:port curl -sL ...&lt;/code&gt; is enough.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; check the style of all Kotlin files inside the current dir (recursively)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; (hidden folders will be skipped)&lt;/span&gt;
$ ktlint --color [--color-name&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RED&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
  src/main/kotlin/Main.kt:10:10: Unused import
  
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; check only certain locations (prepend ! to negate the pattern,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Ktlint uses .gitignore pattern style syntax)&lt;/span&gt;
$ ktlint &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src/**/*.kt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;!src/**/*Test.kt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; auto-correct style violations&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; (if some errors cannot be fixed automatically they will be printed to stderr) &lt;/span&gt;
$ ktlint -F &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src/**/*.kt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; print style violations grouped by file&lt;/span&gt;
$ ktlint --reporter=plain&lt;span class="pl-k"&gt;?&lt;/span&gt;group_by_file
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; print style violations as usual + create report in checkstyle format &lt;/span&gt;
$ ktlint --reporter=plain --reporter=checkstyle,output=ktlint-report-in-checkstyle-format.xml

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install git hook to automatically check files for style violations on commit&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Run "ktlint installGitPrePushHook" if you wish to run ktlint on push instead&lt;/span&gt;
$ ktlint installGitPreCommitHook&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;on Windows you'll have to use &lt;code&gt;java -jar ktlint ...&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;ktlint --help&lt;/code&gt; for more.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-integration" class="anchor" aria-hidden="true" href="#integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integration&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content--with-maven" class="anchor" aria-hidden="true" href="#-with-maven"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... with &lt;a href="https://github.com/shyiko/mvnw"&gt;Maven&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;pom.xml&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;...
&amp;lt;&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.apache.maven.plugins&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;maven-antrun-plugin&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;1.8&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;executions&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;ktlint&amp;lt;/&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;phase&lt;/span&gt;&amp;gt;verify&amp;lt;/&lt;span class="pl-ent"&gt;phase&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;target&lt;/span&gt; &lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ktlint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;java&lt;/span&gt; &lt;span class="pl-e"&gt;taskname&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ktlint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;dir&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;${basedir}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;fork&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;true&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;failonerror&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;true&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                    &lt;span class="pl-e"&gt;classpathref&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;maven.plugin.classpath&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;classname&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.pinterest.ktlint.Main&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;arg&lt;/span&gt; &lt;span class="pl-e"&gt;value&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src/**/*.kt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;/&amp;gt;
                    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; to generate report in checkstyle format prepend following args: &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
                    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; &lt;/span&gt;
&lt;span class="pl-c"&gt;                    &amp;lt;arg value="--reporter=plain"/&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;                    &amp;lt;arg value="--reporter=checkstyle,output=${project.build.directory}/ktlint.xml"/&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;                    &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
                    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; see https://github.com/shyiko/ktlint#usage for more &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;                    
                &amp;lt;/&lt;span class="pl-ent"&gt;java&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;target&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;run&amp;lt;/&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;ktlint-format&amp;lt;/&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;target&lt;/span&gt; &lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ktlint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;java&lt;/span&gt; &lt;span class="pl-e"&gt;taskname&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ktlint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;dir&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;${basedir}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;fork&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;true&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;failonerror&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;true&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                    &lt;span class="pl-e"&gt;classpathref&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;maven.plugin.classpath&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;classname&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.pinterest.ktlint.Main&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;arg&lt;/span&gt; &lt;span class="pl-e"&gt;value&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-F&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;/&amp;gt;
                    &amp;lt;&lt;span class="pl-ent"&gt;arg&lt;/span&gt; &lt;span class="pl-e"&gt;value&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src/**/*.kt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;/&amp;gt;
                &amp;lt;/&lt;span class="pl-ent"&gt;java&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;target&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;&amp;lt;&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;run&amp;lt;/&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;executions&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;dependencies&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;com.pinterest&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;ktlint&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;0.36.0&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; additional 3rd party ruleset(s) can be specified here &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;dependencies&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;
...&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;If you want ktlint to run before code compilation takes place - change &lt;code&gt;&amp;lt;phase&amp;gt;verify&amp;lt;/phase&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;phase&amp;gt;validate&amp;lt;/phase&amp;gt;&lt;/code&gt; (see &lt;a href="https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html" rel="nofollow"&gt;Maven Build Lifecycle&lt;/a&gt; for more).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To check code style - &lt;code&gt;mvn antrun:run@ktlint&lt;/code&gt; (it's also bound to &lt;code&gt;mvn verify&lt;/code&gt;).&lt;br&gt;
To run formatter - &lt;code&gt;mvn antrun:run@ktlint-format&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Another option&lt;/strong&gt; is to use a dedicated Maven plugin - &lt;a href="https://github.com/gantsign/ktlint-maven-plugin"&gt;gantsign/ktlint-maven-plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content--with-gradle" class="anchor" aria-hidden="true" href="#-with-gradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... with &lt;a href="https://gradle.org/" rel="nofollow"&gt;Gradle&lt;/a&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;a id="user-content-with-a-plugin---recommended" class="anchor" aria-hidden="true" href="#with-a-plugin---recommended"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;(with a plugin - Recommended)&lt;/h4&gt;
&lt;p&gt;Gradle plugins (in order of appearance):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jlleitschuh/ktlint-gradle"&gt;jlleitschuh/ktlint-gradle&lt;/a&gt;&lt;br&gt;
Gradle plugin that automatically creates check and format tasks for project Kotlin sources,
supports different kotlin plugins and Gradle build caching.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jeremymailen/kotlinter-gradle"&gt;jeremymailen/kotlinter-gradle&lt;/a&gt;&lt;br&gt;
Gradle plugin featuring incremental build support, file reports, and &lt;code&gt;*.kts&lt;/code&gt; source support.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You might also want to take a look at &lt;a href="https://github.com/diffplug/spotless/tree/master/plugin-gradle#applying-ktlint-to-kotlin-files"&gt;diffplug/spotless&lt;/a&gt; or &lt;a href="https://github.com/autostyle/autostyle/tree/master/plugin-gradle#applying-ktlint-to-kotlin-files"&gt;autostyle/autostyle&lt;/a&gt; that have a built-in support for ktlint. In addition to linting/formatting kotlin code it allows you to keep license headers, markdown documentation, etc. in check.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-without-a-plugin" class="anchor" aria-hidden="true" href="#without-a-plugin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;(without a plugin)&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;build.gradle&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; kotlin-gradle-plugin must be applied for configuration below to work&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (see https://kotlinlang.org/docs/reference/using-gradle.html)&lt;/span&gt;

apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;java&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

repositories {
    jcenter()
}

configurations {
    ktlint
}

dependencies {
    ktlint &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.pinterest:ktlint:0.36.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; additional 3rd party ruleset(s) can be specified here&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; just add them to the classpath (e.g. ktlint 'groupId:artifactId:version') and &lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ktlint will pick them up&lt;/span&gt;
}

task ktlint(&lt;span class="pl-c1"&gt;type&lt;/span&gt;: &lt;span class="pl-k"&gt;JavaExec&lt;/span&gt;, &lt;span class="pl-c1"&gt;group&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;verification&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    description &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Check Kotlin code style.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    classpath &lt;span class="pl-k"&gt;=&lt;/span&gt; configurations&lt;span class="pl-k"&gt;.&lt;/span&gt;ktlint
    main &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.pinterest.ktlint.Main&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    args &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src/**/*.kt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; to generate report in checkstyle format prepend following args:&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; see https://github.com/pinterest/ktlint#usage for more&lt;/span&gt;
}
check&lt;span class="pl-k"&gt;.&lt;/span&gt;dependsOn ktlint

task ktlintFormat(&lt;span class="pl-c1"&gt;type&lt;/span&gt;: &lt;span class="pl-k"&gt;JavaExec&lt;/span&gt;, &lt;span class="pl-c1"&gt;group&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;formatting&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    description &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Fix Kotlin code style deviations.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    classpath &lt;span class="pl-k"&gt;=&lt;/span&gt; configurations&lt;span class="pl-k"&gt;.&lt;/span&gt;ktlint
    main &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.pinterest.ktlint.Main&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    args &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-F&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src/**/*.kt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To check code style - &lt;code&gt;gradle ktlint&lt;/code&gt; (it's also bound to &lt;code&gt;gradle check&lt;/code&gt;).&lt;br&gt;
To run formatter - &lt;code&gt;gradle ktlintFormat&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://proandroiddev.com/making-your-gradle-tasks-incremental-7f26e4ef09c3" rel="nofollow"&gt;Making your Gradle tasks incremental&lt;/a&gt; by &lt;a href="https://github.com/vanniktech"&gt;Niklas Baudy&lt;/a&gt; on how to make tasks above incremental.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content--with-intellij-idea" class="anchor" aria-hidden="true" href="#-with-intellij-idea"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... with &lt;a href="https://www.jetbrains.com/idea/" rel="nofollow"&gt;IntelliJ IDEA&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;While this is not strictly necessary it makes Intellij IDEA's built-in formatter produce 100% ktlint-compatible
code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;&lt;a id="user-content-option-1-recommended" class="anchor" aria-hidden="true" href="#option-1-recommended"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Option #1 (recommended)&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;(inside project's root directory)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;ktlint applyToIDEAProject
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or if you want to be compliant with Android Kotlin Style Guide&lt;/span&gt;
ktlint --android applyToIDEAProject&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-option-2" class="anchor" aria-hidden="true" href="#option-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Option #2&lt;/h5&gt;
&lt;p&gt;Apply to all IDEA projects:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./ktlint applyToIDEA&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or if you want to use android specific code style:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./ktlint --android applyToIDEA&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-option-3" class="anchor" aria-hidden="true" href="#option-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Option #3&lt;/h5&gt;
&lt;p&gt;Go to &lt;kbd&gt;File&lt;/kbd&gt; -&amp;gt; &lt;kbd&gt;Settings...&lt;/kbd&gt; -&amp;gt; &lt;kbd&gt;Editor&lt;/kbd&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;kbd&gt;General&lt;/kbd&gt; -&amp;gt; &lt;kbd&gt;Auto Import&lt;/kbd&gt;
&lt;ul&gt;
&lt;li&gt;check &lt;code&gt;Optimize imports on the fly (for current project)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;Code Style&lt;/kbd&gt; -&amp;gt; &lt;kbd&gt;Kotlin&lt;/kbd&gt;
&lt;ul&gt;
&lt;li&gt;&lt;kbd&gt;Set from...&lt;/kbd&gt; -&amp;gt; &lt;kbd&gt;Predefined style&lt;/kbd&gt; -&amp;gt; &lt;kbd&gt;Kotlin style guide&lt;/kbd&gt; (Kotlin plugin 1.2.20+).&lt;/li&gt;
&lt;li&gt;open &lt;kbd&gt;Code Generation&lt;/kbd&gt; tab
&lt;ul&gt;
&lt;li&gt;uncheck &lt;code&gt;Line comment at first column&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;select &lt;code&gt;Add a space at comment start&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;open &lt;kbd&gt;Imports&lt;/kbd&gt; tab
&lt;ul&gt;
&lt;li&gt;select &lt;code&gt;Use single name import&lt;/code&gt; (all of them);&lt;/li&gt;
&lt;li&gt;remove &lt;code&gt;import java.util.*&lt;/code&gt; from &lt;code&gt;Packages to Use Import with '*'&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;open &lt;kbd&gt;Blank Lines&lt;/kbd&gt; tab
&lt;ul&gt;
&lt;li&gt;change &lt;code&gt;Keep Maximum Blank Lines&lt;/code&gt; / &lt;code&gt;In declarations&lt;/code&gt; &amp;amp; &lt;code&gt;In code&lt;/code&gt; to 1 and &lt;code&gt;Before '}'&lt;/code&gt; to 0.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(optional but recommended) open &lt;kbd&gt;Wrapping and Braces&lt;/kbd&gt; tab
&lt;ul&gt;
&lt;li&gt;uncheck &lt;code&gt;Method declaration parameters&lt;/code&gt; / &lt;code&gt;Align when multiline&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(optional but recommended) open &lt;kbd&gt;Tabs and Indents&lt;/kbd&gt; tab
&lt;ul&gt;
&lt;li&gt;change &lt;code&gt;Continuation indent&lt;/code&gt; to the same value as &lt;code&gt;Indent&lt;/code&gt; (4 by default).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;Inspections&lt;/kbd&gt;
&lt;ul&gt;
&lt;li&gt;change &lt;code&gt;Severity&lt;/code&gt; level of &lt;code&gt;Unused import directive&lt;/code&gt; and &lt;code&gt;Redundant semicolon&lt;/code&gt; to &lt;code&gt;ERROR&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content--with-gnu-emacs" class="anchor" aria-hidden="true" href="#-with-gnu-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... with &lt;a href="https://www.gnu.org/software/emacs/" rel="nofollow"&gt;GNU Emacs&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;See &lt;a href="https://github.com/whirm/flycheck-kotlin"&gt;whirm/flycheck-kotlin&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content--with-vim" class="anchor" aria-hidden="true" href="#-with-vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... with &lt;a href="https://www.vim.org/" rel="nofollow"&gt;Vim&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;See &lt;a href="https://github.com/w0rp/ale"&gt;w0rp/ale&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Integrated with something else? Send a PR.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-creating-a-ruleset" class="anchor" aria-hidden="true" href="#creating-a-ruleset"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating a ruleset&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;See also &lt;a href="https://medium.com/@vanniktech/writing-your-first-ktlint-rule-5a1707f4ca5b" rel="nofollow"&gt;Writing your first ktlint rule&lt;/a&gt; by &lt;a href="https://github.com/vanniktech"&gt;Niklas Baudy&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In a nutshell: "ruleset" is a JAR containing one or more &lt;a href="ktlint-core/src/main/kotlin/com/pinterest/ktlint/core/Rule.kt"&gt;Rule&lt;/a&gt;s gathered together in a &lt;a href="ktlint-core/src/main/kotlin/com/github/shyiko/ktlint/core/RuleSet.kt"&gt;RuleSet&lt;/a&gt;. &lt;code&gt;ktlint&lt;/code&gt; is relying on
&lt;a href="https://docs.oracle.com/javase/8/docs/api/java/util/ServiceLoader.html" rel="nofollow"&gt;ServiceLoader&lt;/a&gt; to discover all available "RuleSet"s
on the classpath (as a ruleset author, all you need to do is to include a &lt;code&gt;META-INF/services/com.pinterest.ktlint.core.RuleSetProvider&lt;/code&gt; file
containing a fully qualified name of your &lt;a href="ktlint-core/src/main/kotlin/com/pinterest/ktlint/core/RuleSetProvider.kt"&gt;RuleSetProvider&lt;/a&gt; implementation).&lt;/p&gt;
&lt;p&gt;Once packaged in a JAR &lt;sup&gt;&lt;a href="https://github.com/pinterest/ktlint/issues/300#issuecomment-432408753"&gt;e.g. via &lt;code&gt;./gradlew build&lt;/code&gt;&lt;/a&gt;&lt;/sup&gt; you can load it with&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; enable additional 3rd party ruleset by pointing ktlint to its location on the file system&lt;/span&gt;
$ ktlint -R /path/to/custom/rulseset.jar &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src/test/**/*.kt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Loading custom (3rd party) ruleset via built-in maven dependency resolver is deprecated,
see &lt;a href="https://github.com/pinterest/ktlint/issues/451"&gt;https://github.com/pinterest/ktlint/issues/451&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A complete sample project (with tests and build files) is included in this repo under the &lt;a href="ktlint-ruleset-template"&gt;ktlint-ruleset-template&lt;/a&gt; directory
(make sure to check &lt;a href="ktlint-ruleset-template/src/test/kotlin/yourpkgname/NoVarRuleTest.kt"&gt;NoVarRuleTest&lt;/a&gt; as it contains some useful information).&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-ast" class="anchor" aria-hidden="true" href="#ast"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AST&lt;/h4&gt;
&lt;p&gt;While writing/debugging &lt;a href="ktlint-core/src/main/kotlin/com/pinterest/ktlint/core/Rule.kt"&gt;Rule&lt;/a&gt;s it's often helpful to have an AST
printed out to see the structure rules have to work with. ktlint &amp;gt;= 0.15.0 has a &lt;code&gt;printAST&lt;/code&gt; subcommand (or &lt;code&gt;--print-ast&lt;/code&gt; flag for ktlint &amp;lt; 0.34.0) specifically for this purpose
(usage: &lt;code&gt;ktlint --color printAST &amp;lt;file&amp;gt;&lt;/code&gt;).
An example of the output is shown below.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;printf&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fun main() {}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; ktlint --color printAST --stdin

1: &lt;span class="pl-k"&gt;~&lt;/span&gt;.psi.KtFile (~.psi.stubs.elements.KtFileElementType.kotlin.FILE)
1:   &lt;span class="pl-k"&gt;~&lt;/span&gt;.psi.KtPackageDirective (~.psi.stubs.elements.KtPlaceHolderStubElementType.PACKAGE_DIRECTIVE) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
1:   &lt;span class="pl-k"&gt;~&lt;/span&gt;.psi.KtImportList (~.psi.stubs.elements.KtPlaceHolderStubElementType.IMPORT_LIST) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
1:   &lt;span class="pl-k"&gt;~&lt;/span&gt;.psi.KtScript (~.psi.stubs.elements.KtScriptElementType.SCRIPT)
1:     &lt;span class="pl-k"&gt;~&lt;/span&gt;.psi.KtBlockExpression (~.KtNodeType.BLOCK)
1:       &lt;span class="pl-k"&gt;~&lt;/span&gt;.psi.KtNamedFunction (~.psi.stubs.elements.KtFunctionElementType.FUN)
1:         &lt;span class="pl-k"&gt;~&lt;/span&gt;.c.i.p.impl.source.tree.LeafPsiElement (~.lexer.KtKeywordToken.fun) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fun&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
1:         &lt;span class="pl-k"&gt;~&lt;/span&gt;.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (~.c.i.p.tree.IElementType.WHITE_SPACE) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
1:         &lt;span class="pl-k"&gt;~&lt;/span&gt;.c.i.p.impl.source.tree.LeafPsiElement (~.lexer.KtToken.IDENTIFIER) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;main&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
1:         &lt;span class="pl-k"&gt;~&lt;/span&gt;.psi.KtParameterList 
  (~.psi.stubs.elements.KtPlaceHolderStubElementType.VALUE_PARAMETER_LIST)
1:           &lt;span class="pl-k"&gt;~&lt;/span&gt;.c.i.p.impl.source.tree.LeafPsiElement (~.lexer.KtSingleValueToken.LPAR) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
1:           &lt;span class="pl-k"&gt;~&lt;/span&gt;.c.i.p.impl.source.tree.LeafPsiElement (~.lexer.KtSingleValueToken.RPAR) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
1:         &lt;span class="pl-k"&gt;~&lt;/span&gt;.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (~.c.i.p.tree.IElementType.WHITE_SPACE) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
1:         &lt;span class="pl-k"&gt;~&lt;/span&gt;.psi.KtBlockExpression (~.KtNodeType.BLOCK)
1:           &lt;span class="pl-k"&gt;~&lt;/span&gt;.c.i.p.impl.source.tree.LeafPsiElement (~.lexer.KtSingleValueToken.LBRACE) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
1:           &lt;span class="pl-k"&gt;~&lt;/span&gt;.c.i.p.impl.source.tree.LeafPsiElement (~.lexer.KtSingleValueToken.RBRACE) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

   format: &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;line_number:&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;node.psi::class&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;node.elementType&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;) &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;node.text&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
   legend: &lt;span class="pl-k"&gt;~&lt;/span&gt; = org.jetbrains.kotlin, c.i.p = com.intellij.psi
   &lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-creating-a-reporter" class="anchor" aria-hidden="true" href="#creating-a-reporter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating a reporter&lt;/h2&gt;
&lt;p&gt;Take a look at &lt;a href="ktlint-reporter-plain"&gt;ktlint-reporter-plain&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In short, all you need to do is to implement a
&lt;a href="ktlint-core/src/main/kotlin/com/pinterest/ktlint/core/Reporter.kt"&gt;Reporter&lt;/a&gt; and make it available by registering
a custom &lt;a href="ktlint-core/src/main/kotlin/com/pinterest/ktlint/core/ReporterProvider.kt"&gt;ReporterProvider&lt;/a&gt; using
&lt;code&gt;META-INF/services/com.pinterest.ktlint.core.ReporterProvider&lt;/code&gt;. Pack all of that into a JAR and you're done.&lt;/p&gt;
&lt;p&gt;To load a custom (3rd party) reporter use &lt;code&gt;ktlint --reporter=name,artifact=/path/to/custom-ktlint-reporter.jar&lt;/code&gt;
(see &lt;code&gt;ktlint --help&lt;/code&gt; for more).&lt;/p&gt;
&lt;p&gt;Loading custom (3rd party) reporter via built-in maven dependency resolver is deprecated,
see &lt;a href="https://github.com/pinterest/ktlint/issues/451"&gt;https://github.com/pinterest/ktlint/issues/451&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Third-party:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mcassiano/ktlint-html-reporter"&gt;mcassiano/ktlint-html-reporter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-badge" class="anchor" aria-hidden="true" href="#badge"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Badge&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://ktlint.github.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5652fd33142bf88d0f46018325126931fe65d01d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d2545322539442541342d4646343038312e737667" alt="ktlint" data-canonical-src="https://img.shields.io/badge/code%20style-%E2%9D%A4-FF4081.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-lisp"&gt;&lt;pre&gt;[![ktlint](https://img.shields.io/badge/code%20style-%E2%9D%A4-FF4081.svg)](https://ktlint.github.io/)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-why-should-i-use-ktlint" class="anchor" aria-hidden="true" href="#why-should-i-use-ktlint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why should I use ktlint?&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Simplicity&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Spending time on configuration (&amp;amp; maintenance down the road) of hundred-line long style config file(s) is counter-productive. Instead of wasting your energy on something that has no business value - focus on what really matters (not debating whether to use tabs or spaces).&lt;/p&gt;
&lt;p&gt;By using ktlint you put the importance of code clarity and community conventions over personal preferences. This makes things easier for people reading your code as well as frees you from having to document &amp;amp; explain what style potential contributor(s) have to follow.&lt;/p&gt;
&lt;p&gt;ktlint is a single binary with both linter &amp;amp; formatter included. All you need is to drop it in (no need to get &lt;a href="https://en.wikipedia.org/wiki/Decision_fatigue" rel="nofollow"&gt;overwhelmed&lt;/a&gt; while choosing among &lt;a href="http://checkstyle.sourceforge.net/checks.html" rel="nofollow"&gt;dozens of code style options&lt;/a&gt;).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-can-i-have-my-own-rules-on-top-of-ktlint" class="anchor" aria-hidden="true" href="#can-i-have-my-own-rules-on-top-of-ktlint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Can I have my own rules on top of ktlint?&lt;/h3&gt;
&lt;p&gt;Absolutely, "no configuration" doesn't mean "no extensibility". You can add your own ruleset(s) to discover potential bugs, check for anti-patterns, etc.&lt;/p&gt;
&lt;p&gt;See &lt;a href="#creating-a-ruleset"&gt;Creating A Ruleset&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-how-do-i-suppress-an-error-for-a-lineblockfile" class="anchor" aria-hidden="true" href="#how-do-i-suppress-an-error-for-a-lineblockfile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I suppress an error for a line/block/file?&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;This is meant primarily as an escape latch for the rare cases when &lt;strong&gt;ktlint&lt;/strong&gt; is not able
to produce the correct result (please report any such instances using &lt;a href="https://github.com/pinterest/ktlint/issues"&gt;GitHub Issues&lt;/a&gt;).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To disable a specific rule you'll need to turn on the verbose mode (&lt;code&gt;ktlint --verbose ...&lt;/code&gt;). At the end of each line
you'll see an error code. Use it as an argument for &lt;code&gt;ktlint-disable&lt;/code&gt; directive (shown below).&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;package.*&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ktlint-disable no-wildcard-imports&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; ktlint-disable no-wildcard-imports &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;package.a.*&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;package.b.*&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; ktlint-enable no-wildcard-imports &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To disable all checks:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;package.*&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ktlint-disable&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-how-do-i-globally-disable-a-rule" class="anchor" aria-hidden="true" href="#how-do-i-globally-disable-a-rule"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I globally disable a rule?&lt;/h3&gt;
&lt;p&gt;See the &lt;a href="https://github.com/pinterest/ktlint#editorconfig"&gt;EditorConfig section&lt;/a&gt; for details on how to use the &lt;code&gt;disabled_rules&lt;/code&gt; property.&lt;/p&gt;
&lt;p&gt;You may also pass a list of disabled rules via the &lt;code&gt;--disabled_rules&lt;/code&gt; command line flag. It has the same syntax as the EditorConfig property.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Make sure to read &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/pinterest/ktlint &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-c1"&gt;cd&lt;/span&gt; ktlint
./mvnw &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; shows how to build, test, run, etc. project&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;To open ktlint in Intellij IDEA:&lt;br&gt;
&lt;kbd&gt;File&lt;/kbd&gt; -&amp;gt; &lt;kbd&gt;Open...&lt;/kbd&gt; (you may need to right-click on &lt;code&gt;pom.xml&lt;/code&gt; (in the project dir) and then &lt;kbd&gt;Maven&lt;/kbd&gt; -&amp;gt; &lt;kbd&gt;Reimport&lt;/kbd&gt;).&lt;br&gt;
You'll also need to set "Project SDK" to &lt;a href="https://github.com/shyiko/jabba#usage"&gt;1.8&lt;/a&gt;, "Project language level" to 8 in "Project Settings" (&lt;kbd&gt;File&lt;/kbd&gt; -&amp;gt; &lt;kbd&gt;Project Structure...&lt;/kbd&gt;).&lt;br&gt;
To run &lt;code&gt;ktlint&lt;/code&gt; - right-click on &lt;code&gt;ktlint/src/main/kotlin/com/pinterest/ktlint/Main.kt&lt;/code&gt; -&amp;gt; &lt;kbd&gt;Run&lt;/kbd&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-access-to-the-latest-master-snapshot" class="anchor" aria-hidden="true" href="#access-to-the-latest-master-snapshot"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Access to the latest &lt;code&gt;master&lt;/code&gt; snapshot&lt;/h4&gt;
&lt;p&gt;Whenever a commit is added to the &lt;code&gt;master&lt;/code&gt; branch a snapshot build is automatically uploaded to &lt;a href="https://oss.sonatype.org/content/repositories/snapshots/com/pinterest/ktlint/" rel="nofollow"&gt;Sonatype's snapshots repository&lt;/a&gt;.
If you are eager to try upcoming changes (that might or might not be included in the next stable release) you can do
so by changing version of ktlint to &lt;code&gt;&amp;lt;latest-version&amp;gt;-SNAPSHOT&lt;/code&gt; + adding a repo:&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-maven" class="anchor" aria-hidden="true" href="#maven"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maven&lt;/h5&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;...
&amp;lt;&lt;span class="pl-ent"&gt;repository&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;sonatype-snapshots&amp;lt;/&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;url&lt;/span&gt;&amp;gt;https://oss.sonatype.org/content/repositories/snapshots&amp;lt;/&lt;span class="pl-ent"&gt;url&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;snapshots&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;enabled&lt;/span&gt;&amp;gt;true&amp;lt;/&lt;span class="pl-ent"&gt;enabled&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;snapshots&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;releases&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;enabled&lt;/span&gt;&amp;gt;false&amp;lt;/&lt;span class="pl-ent"&gt;enabled&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;releases&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;repository&lt;/span&gt;&amp;gt;
...&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-gradle" class="anchor" aria-hidden="true" href="#gradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle&lt;/h5&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;repositories {
  maven {
    url &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://oss.sonatype.org/content/repositories/snapshots&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-legal" class="anchor" aria-hidden="true" href="#legal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Legal&lt;/h2&gt;
&lt;p&gt;This project is not affiliated with nor endorsed by JetBrains.&lt;br&gt;
All code, unless specified otherwise, is licensed under the &lt;a href="https://opensource.org/licenses/MIT" rel="nofollow"&gt;MIT&lt;/a&gt; license.&lt;br&gt;
Copyright (c) 2019 Pinterest, Inc.&lt;br&gt;
Copyright (c) 2016-2019 Stanley Shyiko.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>pinterest</author><guid isPermaLink="false">https://github.com/pinterest/ktlint</guid><pubDate>Fri, 31 Jan 2020 00:19:00 GMT</pubDate></item><item><title>InsertKoinIO/koin #20 in Kotlin, This week</title><link>https://github.com/InsertKoinIO/koin</link><description>&lt;p&gt;&lt;i&gt;Koin - a pragmatic lightweight dependency injection framework for Kotlin&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/koin_2.0.jpg"&gt;&lt;img src="./img/koin_2.0.jpg" alt="logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-koin" class="anchor" aria-hidden="true" href="#what-is-koin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is KOIN?&lt;/h2&gt;
&lt;p&gt;A pragmatic lightweight dependency injection framework for Kotlin developers.&lt;/p&gt;
&lt;p&gt;Written in pure Kotlin, using functional resolution only: no proxy, no code generation, no reflection.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Koin is a DSL, a light container and a pragmatic API&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-official-website--httpsinsert-koinio" class="anchor" aria-hidden="true" href="#official-website--httpsinsert-koinio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Official Website &lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;👉&lt;/g-emoji&gt; &lt;a href="https://insert-koin.io" rel="nofollow"&gt;https://insert-koin.io&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-latest-news-" class="anchor" aria-hidden="true" href="#latest-news-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Latest News &lt;g-emoji class="g-emoji" alias="globe_with_meridians" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f310.png"&gt;🌐&lt;/g-emoji&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Follow us on Twitter for latest news: &lt;a href="https://twitter.com/insertkoin_io" rel="nofollow"&gt;@insertkoin_io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Koin developers on Medium: &lt;a href="https://medium.com/koin-developers" rel="nofollow"&gt;koin developers hub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-getting-help-" class="anchor" aria-hidden="true" href="#getting-help-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help &lt;g-emoji class="g-emoji" alias="fire_engine" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f692.png"&gt;🚒&lt;/g-emoji&gt;&lt;/h3&gt;
&lt;p&gt;Documentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://start.insert-koin.io/" rel="nofollow"&gt;Getting Stared&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://doc.insert-koin.io/" rel="nofollow"&gt;Documentation References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Any question about Koin usage?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Come talk on slack &lt;a href="https://kotlinlang.slack.com/?redir=%2Fmessages%2Fkoin" rel="nofollow"&gt;#koin&lt;/a&gt; channel&lt;/li&gt;
&lt;li&gt;Post your question on &lt;a href="https://stackoverflow.com/questions/tagged/koin" rel="nofollow"&gt;Stackoverflow - #koin tag&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-articles-videos--other-resources-" class="anchor" aria-hidden="true" href="#articles-videos--other-resources-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Articles, Videos &amp;amp; other resources &lt;g-emoji class="g-emoji" alias="tada" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png"&gt;🎉&lt;/g-emoji&gt;&lt;/h3&gt;
&lt;p&gt;Online resources about Koin - &lt;a href="https://github.com/InsertKoinIO/koin/blob/master/README.md#talking-about-koin"&gt;Talking about Koin&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-reporting-issues-" class="anchor" aria-hidden="true" href="#reporting-issues-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting issues &lt;g-emoji class="g-emoji" alias="ambulance" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f691.png"&gt;🚑&lt;/g-emoji&gt;&lt;/h3&gt;
&lt;p&gt;Found a bug or a problem on a specific feature? Open an issue on &lt;a href="https://github.com/InsertKoinIO/koin/issues"&gt;Github issues&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-contributing-" class="anchor" aria-hidden="true" href="#contributing-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing &lt;g-emoji class="g-emoji" alias="hammer_and_wrench" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6e0.png"&gt;🛠&lt;/g-emoji&gt;&lt;/h3&gt;
&lt;p&gt;Want to help or share a proposal about Koin? problem on a specific feature?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open an issue to explain the issue you want to solve &lt;a href="https://github.com/InsertKoinIO/koin/issues"&gt;Open an issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Come talk on slack &lt;a href="https://kotlinlang.slack.com/?redir=%2Fmessages%2Fkoin-dev" rel="nofollow"&gt;#koin-dev&lt;/a&gt; channel&lt;/li&gt;
&lt;li&gt;After discussion to validate your ideas, you can open a PR or even a draft PR if the contribution is a big one &lt;a href="https://github.com/InsertKoinIO/koin/pulls"&gt;Current PRs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additional readings about basic setup: &lt;a href="https://github.com/InsertKoinIO/koin/blob/master/CONTRIBUTING.adoc"&gt;https://github.com/InsertKoinIO/koin/blob/master/CONTRIBUTING.adoc&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-current-version" class="anchor" aria-hidden="true" href="#current-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Current Version&lt;/h2&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; latest stable&lt;/span&gt;
koin_version &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2.0.1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; latest unstable&lt;/span&gt;
koin_version &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2.1.0-alpha-10&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-gradle" class="anchor" aria-hidden="true" href="#gradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-jcenter" class="anchor" aria-hidden="true" href="#jcenter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Jcenter&lt;/h3&gt;
&lt;p&gt;Check that you have the &lt;code&gt;jcenter&lt;/code&gt; repository.&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Add Jcenter to your repositories if needed&lt;/span&gt;
&lt;span class="pl-en"&gt;repositories&lt;/span&gt; {
	jcenter()    
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h3&gt;
&lt;p&gt;Pick one of your Koin dependency:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-core-features" class="anchor" aria-hidden="true" href="#core-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core features&lt;/h4&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Koin for Kotlin&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.koin:koin-core:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;oin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Koin extended &amp;amp; experimental features&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.koin:koin-core-ext:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;oin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Koin for Unit tests&lt;/span&gt;
testImplementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.koin:koin-test:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;oin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Koin for Java developers&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.koin:koin-java:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;oin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-android" class="anchor" aria-hidden="true" href="#android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android&lt;/h4&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Koin for Android&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.koin:koin-android:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;oin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Koin Android Scope features&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.koin:koin-android-scope:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;oin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Koin Android ViewModel features&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.koin:koin-android-viewmodel:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;oin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Koin Android Experimental features&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.koin:koin-android-ext:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;oin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-androidx" class="anchor" aria-hidden="true" href="#androidx"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AndroidX&lt;/h4&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Koin AndroidX Scope features&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.koin:koin-androidx-scope:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;oin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Koin AndroidX ViewModel features&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.koin:koin-androidx-viewmodel:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;oin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Koin AndroidX Fragment features&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.koin:koin-androidx-fragment:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;oin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Koin AndroidX Experimental features&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.koin:koin-androidx-ext:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;oin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-ktor" class="anchor" aria-hidden="true" href="#ktor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ktor&lt;/h4&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Koin for Ktor Kotlin&lt;/span&gt;
implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.koin:koin-ktor:&lt;span class="pl-smi"&gt;$k&lt;span class="pl-smi"&gt;oin_version&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-declare-a-koin-module" class="anchor" aria-hidden="true" href="#declare-a-koin-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Declare a Koin module&lt;/h2&gt;
&lt;p&gt;Write with the Koin DSL what you need to assemble:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Given some classes &lt;/span&gt;
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Controller&lt;/span&gt;(&lt;span class="pl-k"&gt;val&lt;/span&gt; service &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;BusinessService&lt;/span&gt;) 
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;BusinessService&lt;/span&gt;() 

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; just declare it &lt;/span&gt;
&lt;span class="pl-k"&gt;val&lt;/span&gt; myModule &lt;span class="pl-k"&gt;=&lt;/span&gt; module { 
  single { &lt;span class="pl-en"&gt;Controller&lt;/span&gt;(get()) } 
  single { &lt;span class="pl-en"&gt;BusinessService&lt;/span&gt;() } 
} &lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-starting-koin" class="anchor" aria-hidden="true" href="#starting-koin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Starting Koin&lt;/h2&gt;
&lt;p&gt;Use the startKoin() function to start Koin in your application.&lt;/p&gt;
&lt;p&gt;In a Kotlin app:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;vararg&lt;/span&gt; args &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;) { 
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; start Koin!&lt;/span&gt;
  startKoin {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; your modules&lt;/span&gt;
    modules(myModule)
  }
} &lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In an Android app:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyApplication&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;Application&lt;/span&gt;() {
  &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;onCreate&lt;/span&gt;(){
    &lt;span class="pl-c1"&gt;super&lt;/span&gt;.onCreate()
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; start Koin!&lt;/span&gt;
    startKoin {
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Android context&lt;/span&gt;
      androidContext(&lt;span class="pl-c1"&gt;this&lt;/span&gt;&lt;span class="pl-k"&gt;@MyApplication)&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; modules&lt;/span&gt;
      modules(myModule)
    }
  } 
} &lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-talking-about-koin" class="anchor" aria-hidden="true" href="#talking-about-koin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Talking about Koin&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-articles" class="anchor" aria-hidden="true" href="#articles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Articles&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/pulse/dagger-dead-long-live-koin-yordan-olave-cordero" rel="nofollow"&gt;Dagger is dead. Long live Koin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kerooker/testing-koin-applications-with-kotlintest-1iip" rel="nofollow"&gt;Testing a Koin application with KotlinTest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/koin-developers/ready-for-koin-2-0-2722ab59cac3" rel="nofollow"&gt;Ready for Koin 2.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://proandroiddev.com/migrating-from-dagger2-to-koin-3b2b3f5285e9" rel="nofollow"&gt;Migration from Dagger2 to Koin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@giuliani.arnaud/the-thermosiphon-app-from-dagger-to-koin-step-by-step-a09af7f5b5b1" rel="nofollow"&gt;From Dagger to Koin, a step by step migration guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://proandroiddev.com/koin-in-feature-modules-project-6329f069f943" rel="nofollow"&gt;Koin in Feature Modules Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://overflow.buffer.com/2018/09/13/a-brief-look-at-koin-on-android/" rel="nofollow"&gt;A brief look at Koin on Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@charbgr/bye-bye-dagger-1494118dcd41" rel="nofollow"&gt;Bye bye Dagger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://proandroiddev.com/testing-with-koin-ade8a46eb4d" rel="nofollow"&gt;Testing with Koin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://android.jlelse.eu/painless-android-testing-with-room-koin-bb949eefcbee" rel="nofollow"&gt;Painless Android testing with Room &amp;amp; Koin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@giuliani.arnaud/unlock-your-android-viewmodel-power-with-koin-23eda8f493be" rel="nofollow"&gt;Unlock your Android ViewModel power with Koin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/mindorks/using-dependency-injection-with-koin-bee0b461714a" rel="nofollow"&gt;Using dependency injection with Koin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=""&gt;Koin + Spark = &lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/koin-developers/pushing-sparkjava-to-the-next-level-with-koin-ed1f0b80953e" rel="nofollow"&gt;Push SparkJava to the next level&lt;/a&gt; (&lt;a href="http://mailchi.mp/kotlinweekly/kotlin-weekly-73" rel="nofollow"&gt;Kotlin Weekly issue 73&lt;/a&gt;, &lt;a href="https://dzone.com/articles/push-sparkjava-to-the-next-level-with-koin" rel="nofollow"&gt;DZone.com&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/koin-developers/when-koin-met-ktor-c3b2395662bf" rel="nofollow"&gt;When Koin met Ktor ...&lt;/a&gt; (&lt;a href="https://us12.campaign-archive.com/?u=f39692e245b94f7fb693b6d82&amp;amp;id=3135ae0cf5" rel="nofollow"&gt;Kotlin Weekly issue 72&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nan-labs.com/blog/android-dependency-injection-moved-dagger-2-koin/" rel="nofollow"&gt;Android Dependency Injection – Why we moved from Dagger 2 to Koin?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@giuliani.arnaud/moving-from-dagger-to-koin-simplify-your-android-development-e8c61d80cddb" rel="nofollow"&gt;Moving from Dagger to Koin - Simplify your Android development&lt;/a&gt; - (&lt;a href="http://mailchi.mp/kotlinweekly/kotlin-weekly-66?e=e8a57c719f" rel="nofollow"&gt;Kotlin Weekly issue 66&lt;/a&gt; &amp;amp; &lt;a href="http://androidweekly.net/issues/issue-282" rel="nofollow"&gt;Android Weekly issue 282&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mailchi.mp/kotlinweekly/kotlin-weekly-64?e=e8a57c719f" rel="nofollow"&gt;Kotlin Weekly #64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=""&gt;Insert Koin for dependency injection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://proandroiddev.com/better-dependency-injection-for-android-567b93353ad" rel="nofollow"&gt;Better dependency injection for Android&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-videos--podcasts" class="anchor" aria-hidden="true" href="#videos--podcasts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Videos &amp;amp; Podcasts&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=mt9yoWScgb8&amp;amp;list=PLnYRVL0Cw1FSUJ-WdhV2Ija9kA9q0qP3e&amp;amp;index=6" rel="nofollow"&gt;Dependency Injection from zero to hero with Koin, Kotliners 2019 &amp;amp; Budapest, Hungary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=chCsNkjotfc" rel="nofollow"&gt;Dependency Injection from zero to hero with Koin, AndroidMakers 2019 &amp;amp; Paris, France&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=KzQbJFVjr9w&amp;amp;t=1s" rel="nofollow"&gt;Simplify your Android development with Koin - Mobilization @ Lodz, Poland&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://talkingkotlin.com/dependency-injection-with-koin/" rel="nofollow"&gt;Talking Kotlin - Dependency injection with Koin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://androidleakspodcast.com/2018/08/05/episode-42-linjection-de-poireaux-avec-koin/" rel="nofollow"&gt;L'injection de poireaux avec Koin - AndroidLeaks ep42 (French)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/HrTz5jToQkk" rel="nofollow"&gt;Insert Koin. Mobile Fest 2018, Kiev, Urkaine (Russian)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-koin-developers-hub" class="anchor" aria-hidden="true" href="#koin-developers-hub"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Koin Developers Hub&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/koin-developers/ready-for-koin-2-0-2722ab59cac3" rel="nofollow"&gt;Ready for Koin 2.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/koin-developers/news-from-the-trenches-whats-next-for-koin-994791d572d5" rel="nofollow"&gt;News from the trenches, What's next for Koin?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/koin-developers/koin-1-0-0-unleashed-dcc15b293a3a" rel="nofollow"&gt;Koin 1.0.0 Unleashed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/koin-developers/opening-the-koin-1-0-0-beta-version-99cb8be1c308" rel="nofollow"&gt;Opening Koin 1.0.0 Beta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/koin-developers/on-the-road-to-koin-1-0-0-a624af55d07" rel="nofollow"&gt;On the road to Koin 1.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/koin-developers/koin-0-9-2-maintenance-fixes-new-branding-roadmap-for-1-0-0-some-other-nice-announces-94f14648e4ad" rel="nofollow"&gt;Koin 0.9.2 — Maintenance fixes, new branding, roadmap for 1.0.0 &amp;amp; some other nice announces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/koin-developers/koin-0-9-1-bug-fixes-improvements-bug-fixes-d257cd2766fa" rel="nofollow"&gt;Koin 0.9.1 - Bug fixes &amp;amp; Improvments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/koin-developers/koin-0-9-0-getting-close-to-stable-release-74df9bb9e181" rel="nofollow"&gt;Koin 0.9.0 - Getting close to stable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@giuliani.arnaud/unlock-your-android-viewmodel-power-with-koin-23eda8f493be" rel="nofollow"&gt;Unlock your Android ViewModel power with Koin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/koin-developers/koin-0-8-2-improvements-bugfixes-and-crash-fix-6b6809fc1dd2" rel="nofollow"&gt;koin 0.8.2 Improvements bugfixes and crash fix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/koin-developers/koin-released-in-0-8-0-welcome-to-koin-spark-koin-android-architecture-f6270a7d4808" rel="nofollow"&gt;Koin release 0.8.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;p&gt;This project exists thanks to all the people who contribute. [&lt;a href="CONTRIBUTING.adoc"&gt;Contribute&lt;/a&gt;].
&lt;a href="https://github.com/InsertKoinIO/koin/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/ef6b7b212273f5ab106d721176a0e82c0a6c78b0/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f636f6e7472696275746f72732e7376673f77696474683d38393026627574746f6e3d66616c7365" data-canonical-src="https://opencollective.com/koin/contributors.svg?width=890&amp;amp;button=false" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-opencollective" class="anchor" aria-hidden="true" href="#opencollective"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenCollective&lt;/h2&gt;
&lt;p&gt;&lt;a href="#backers"&gt;&lt;img src="https://camo.githubusercontent.com/8db604944b68a6f55fb4e6d1a5095f8497d9c118/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f6261636b6572732f62616467652e737667" alt="Backers on Open Collective" data-canonical-src="https://opencollective.com/koin/backers/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="#sponsors"&gt;&lt;img src="https://camo.githubusercontent.com/86fc2b1251f3773ff54b3464080d009ac37eb413/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f73706f6e736f72732f62616467652e737667" alt="Sponsors on Open Collective" data-canonical-src="https://opencollective.com/koin/sponsors/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-backers" class="anchor" aria-hidden="true" href="#backers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backers&lt;/h3&gt;
&lt;p&gt;Thank you to all our backers! &lt;g-emoji class="g-emoji" alias="pray" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png"&gt;🙏&lt;/g-emoji&gt; [&lt;a href="https://opencollective.com/koin#backer" rel="nofollow"&gt;Become a backer&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/koin#backers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9114cc284288b180d983bd082acb1edc0b31dc47/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f6261636b6572732e7376673f77696474683d383930" data-canonical-src="https://opencollective.com/koin/backers.svg?width=890" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sponsors" class="anchor" aria-hidden="true" href="#sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsors&lt;/h3&gt;
&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [&lt;a href="https://opencollective.com/koin#sponsor" rel="nofollow"&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/koin/sponsor/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c24e93330c8a04b552069856f223f159a6afe4cc/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f73706f6e736f722f302f6176617461722e737667" data-canonical-src="https://opencollective.com/koin/sponsor/0/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/koin/sponsor/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cda393798de182565c32bba4cc5b7b97f8921fd1/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f73706f6e736f722f312f6176617461722e737667" data-canonical-src="https://opencollective.com/koin/sponsor/1/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/koin/sponsor/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/23d2708ba2d97b3e2c237b03721f1d95df596f9e/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f73706f6e736f722f322f6176617461722e737667" data-canonical-src="https://opencollective.com/koin/sponsor/2/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/koin/sponsor/3/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/457acb3a788212d50f85c30dba9705ff21774279/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f73706f6e736f722f332f6176617461722e737667" data-canonical-src="https://opencollective.com/koin/sponsor/3/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/koin/sponsor/4/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dfac2b20d4be0e636ca781c1c3e4ced9e58fd7ee/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f73706f6e736f722f342f6176617461722e737667" data-canonical-src="https://opencollective.com/koin/sponsor/4/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/koin/sponsor/5/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/41fe024a7228000415ed4c6a3a6c1749a19c13cc/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f73706f6e736f722f352f6176617461722e737667" data-canonical-src="https://opencollective.com/koin/sponsor/5/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/koin/sponsor/6/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4a89046fe2fb3648fe1707d7dcf4f79ef2c84a72/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f73706f6e736f722f362f6176617461722e737667" data-canonical-src="https://opencollective.com/koin/sponsor/6/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/koin/sponsor/7/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/08ab59bcf015e31855373347e6688689ff71d4f9/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f73706f6e736f722f372f6176617461722e737667" data-canonical-src="https://opencollective.com/koin/sponsor/7/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/koin/sponsor/8/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a4f543617a20f5a067d66188a2607d34b5e77eab/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f73706f6e736f722f382f6176617461722e737667" data-canonical-src="https://opencollective.com/koin/sponsor/8/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/koin/sponsor/9/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e96e7632fe93f4299c0bcffd431258d3e24e1b8b/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b6f696e2f73706f6e736f722f392f6176617461722e737667" data-canonical-src="https://opencollective.com/koin/sponsor/9/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>InsertKoinIO</author><guid isPermaLink="false">https://github.com/InsertKoinIO/koin</guid><pubDate>Fri, 31 Jan 2020 00:20:00 GMT</pubDate></item><item><title>Eli-Fox/LEGO-Catalog #21 in Kotlin, This week</title><link>https://github.com/Eli-Fox/LEGO-Catalog</link><description>&lt;p&gt;&lt;i&gt;A LEGO® Catalog app illustrating current Android Architecture state using Android development best practices.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-lego-catalog" class="anchor" aria-hidden="true" href="#lego-catalog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LEGO® Catalog&lt;/h1&gt;
&lt;p&gt;A LEGO® Catalog app illustrating current Android Architecture state using Android development best
practices.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@eli.fox/android-architecture-starring-kotlin-coroutines-jetpack-mvvm-room-paging-retrofit-and-dagger-7749b2bae5f7?sk=9c5a7af2fbf5d4a04e72322bfb245489" rel="nofollow"&gt;To get started you can find project and Architecture overview in the Medium article&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;NOTE: LEGO® and the LEGO® logo are trademarks of the LEGO® Group, which does not sponsor, authorize
or endorse this app.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The application uses Clean Architecture based on MVVM and Repository patterns. Implemented
Architecture principles follow Google recommended &lt;a href="https://developer.android.com/jetpack/docs/guide" rel="nofollow"&gt;Guide to app architecture&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/guide-to-app-architecture.png"&gt;&lt;img src="screenshots/guide-to-app-architecture.png" alt="Guide to app architecture" title="Guide to app architecture" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The application is written entirely in Kotlin.&lt;/p&gt;
&lt;p&gt;Android Jetpack is used as an Architecture glue including but not limited to ViewModel, LiveData,
Lifecycles, Navigation, Room and Data Binding. See a complete list in "Libraries used" section.&lt;/p&gt;
&lt;p&gt;The application does network HTTP requests via Retrofit, OkHttp and GSON. Loaded data is saved to
SQL based database Room, which serves as single source of truth and support offline mode.
Paging library is used for data pagination online and offline.&lt;/p&gt;
&lt;p&gt;Kotlin Coroutines manage background threads with simplified code and reducing needs for callbacks.
Combination of Coroutines and Kotlin build in functions (transformation, collections) are preferred
over RxJava 2.&lt;/p&gt;
&lt;p&gt;Work manager does synchronisation job being compatible with Doze Mode and using battery efficiently.
Navigation component manages in-app navigation.&lt;/p&gt;
&lt;p&gt;Dagger 2 is used for dependency injection.&lt;/p&gt;
&lt;p&gt;Glide is used for image loading and Timber for logging.&lt;/p&gt;
&lt;p&gt;Stetho is used to empower debugging skills (like Network calls log, Database content overview,
UI Hierarchy view, etc).&lt;/p&gt;
&lt;p&gt;A sample app consist of 3 screens: List of LEGO® themes, list of sets and set details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;This project uses the Gradle build system. To build this project, use the
&lt;code&gt;gradlew build&lt;/code&gt; command or use "Import Project" in Android Studio.&lt;/p&gt;
&lt;p&gt;There are two Gradle tasks for testing the project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;connectedAndroidTest&lt;/code&gt; - for running Espresso on a connected device&lt;/li&gt;
&lt;li&gt;&lt;code&gt;test&lt;/code&gt; - for running unit tests&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-screenshots" class="anchor" aria-hidden="true" href="#screenshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/phone_legotheme.png"&gt;&lt;img src="screenshots/phone_legotheme.png" alt="LegoThemeFragment" title="Browse Themes " style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/phone_legosets_grid.png"&gt;&lt;img src="screenshots/phone_legosets_grid.png" alt="LegoSetsFragment Grid" title="Browse sets in grid view" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/phone_legoset.png"&gt;&lt;img src="screenshots/phone_legoset.png" alt="LegoSetFragment" title="Lego set" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-libraries-used" class="anchor" aria-hidden="true" href="#libraries-used"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Libraries Used&lt;/h2&gt;
&lt;p&gt;The application goal is to show case current Android Architecture state using out of box
Android tools made by Google (Android Jetpack) and 3rd party community driven libraries.&lt;/p&gt;
&lt;p&gt;Android Jetpack is a set of components, tools and guidance to make great Android apps. They bring
together the existing Support Library and Architecture Components and arranges them into four
categories:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/jetpack_donut.png"&gt;&lt;img src="screenshots/jetpack_donut.png" alt="Android Jetpack" title="Android Jetpack Components" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/jetpack/components" rel="nofollow"&gt;Foundation&lt;/a&gt; - Components for core system capabilities, Kotlin extensions and support for
multidex and automated testing.
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/support-library/packages#v7-appcompat" rel="nofollow"&gt;AppCompat&lt;/a&gt; - Degrade gracefully on older versions of Android.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/kotlin/ktx" rel="nofollow"&gt;Android KTX&lt;/a&gt; - Write more concise, idiomatic Kotlin code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/training/testing/" rel="nofollow"&gt;Test&lt;/a&gt; - An Android testing framework for unit and runtime UI tests.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/jetpack/arch/" rel="nofollow"&gt;Architecture&lt;/a&gt; - A collection of libraries that help you design robust, testable, and
maintainable apps. Start with classes for managing your UI component lifecycle and handling data
persistence.
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/data-binding/" rel="nofollow"&gt;Data Binding&lt;/a&gt; - Declaratively bind observable data to UI elements.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/architecture/lifecycle" rel="nofollow"&gt;Lifecycles&lt;/a&gt; - Create a UI that automatically responds to lifecycle events.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/architecture/livedata" rel="nofollow"&gt;LiveData&lt;/a&gt; - Build data objects that notify views when the underlying database changes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/architecture/navigation/" rel="nofollow"&gt;Navigation&lt;/a&gt; - Handle everything needed for in-app navigation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/architecture/room" rel="nofollow"&gt;Room&lt;/a&gt; - SQLite database with in-app objects and compile-time checks.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/architecture/viewmodel" rel="nofollow"&gt;ViewModel&lt;/a&gt; - Store UI-related data that isn't destroyed on app rotations. Easily schedule
asynchronous tasks for optimal execution.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/architecture/workmanager" rel="nofollow"&gt;WorkManager&lt;/a&gt; - Manage your Android background jobs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/topic/libraries/architecture/paging" rel="nofollow"&gt;Paging&lt;/a&gt; - Load and display small chunks of data at a time.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/guide/topics/ui" rel="nofollow"&gt;UI&lt;/a&gt; - Details on why and how to use UI Components in your apps - together or separate.
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/training/animation/" rel="nofollow"&gt;Animations &amp;amp; Transitions&lt;/a&gt; - Move widgets and transition between screens.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/guide/components/fragments" rel="nofollow"&gt;Fragment&lt;/a&gt; - A basic unit of composable UI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/guide/topics/ui/declaring-layout" rel="nofollow"&gt;Layout&lt;/a&gt; - Lay out widgets using different algorithms.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://material.io/develop/android/docs/getting-started/" rel="nofollow"&gt;Material&lt;/a&gt; - Material Components.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Third party
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kotlinlang.org/docs/reference/coroutines-overview.html" rel="nofollow"&gt;Kotlin Coroutines&lt;/a&gt; for managing background threads with simplified code
and reducing needs for callbacks.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dagger.dev/users-guide" rel="nofollow"&gt;Dagger 2&lt;/a&gt; A fast dependency injector.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://square.github.io/retrofit/" rel="nofollow"&gt;Retrofit 2&lt;/a&gt; A configurable REST client.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://square.github.io/okhttp/" rel="nofollow"&gt;OkHttp 3&lt;/a&gt; A type-safe HTTP client.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/gson"&gt;GSON&lt;/a&gt; A Json - Object converter using reflection.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bumptech.github.io/glide/" rel="nofollow"&gt;Glide&lt;/a&gt; Image loading.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JakeWharton/timber"&gt;Timber&lt;/a&gt; A logger.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://facebook.github.io/stetho/" rel="nofollow"&gt;Stetho&lt;/a&gt; Sophisticated debug bridge.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-android-studio-ide-setup" class="anchor" aria-hidden="true" href="#android-studio-ide-setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android Studio IDE setup&lt;/h2&gt;
&lt;p&gt;For development, the latest version of Android Studio is required. The latest version can be
downloaded from &lt;a href="https://developer.android.com/studio/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;App uses &lt;a href="https://ktlint.github.io/" rel="nofollow"&gt;ktlint&lt;/a&gt; to enforce Kotlin coding styles.
Here's how to configure it for use with Android Studio (instructions adapted
from the ktlint &lt;a href="https://github.com/shyiko/ktlint/blob/master/README.md"&gt;README&lt;/a&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Close Android Studio if it's open&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download ktlint using these &lt;a href="https://github.com/shyiko/ktlint/blob/master/README.md#installation"&gt;installation instructions&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Inside the project root directory run:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./ktlint --apply-to-idea-project --android&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start Android Studio&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright 2019 Eli Fox.&lt;/p&gt;
&lt;p&gt;Licensed to the Apache Software Foundation (ASF) under one or more contributor
license agreements.  See the NOTICE file distributed with this work for
additional information regarding copyright ownership.  The ASF licenses this
file to you under the Apache License, Version 2.0 (the "License"); you may not
use this file except in compliance with the License.  You may obtain a copy of
the License at&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
License for the specific language governing permissions and limitations under
the License.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Eli-Fox</author><guid isPermaLink="false">https://github.com/Eli-Fox/LEGO-Catalog</guid><pubDate>Fri, 31 Jan 2020 00:21:00 GMT</pubDate></item><item><title>mockk/mockk #22 in Kotlin, This week</title><link>https://github.com/mockk/mockk</link><description>&lt;p&gt;&lt;i&gt;mocking library for Kotlin&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/logo-site.png"&gt;&lt;img src="doc/logo-site.png" alt="mockk" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="doc/kotlin-logo.png"&gt;&lt;img src="doc/kotlin-logo.png" alt="kotlin" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitter.im/mockk-io/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=body_badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/80bc8efa76dc0cf5ca6986388b531727f8175e0b/68747470733a2f2f6261646765732e6769747465722e696d2f6d6f636b6b2d696f2f4c6f6262792e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/mockk-io/Lobby.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://search.maven.org/#search%7Cga%7C1%7Cmockk" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/796303e3aab882a1d006714740d84ff88ea2c27f/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d63656e7472616c2f762f696f2e6d6f636b6b2f6d6f636b6b2e7376673f6c6162656c3d72656c65617365" alt="Relase Version" data-canonical-src="https://img.shields.io/maven-central/v/io.mockk/mockk.svg?label=release" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/mockk/mockk/releases"&gt;&lt;img src="https://camo.githubusercontent.com/4b80b416a3eb6d258c6129b611b2e1282dcb13ae/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6368616e67652532306c6f672d2545322539362541342d79656c6c6f772e737667" alt="Change log" data-canonical-src="https://img.shields.io/badge/change%20log-%E2%96%A4-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/mockk/mockk" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bc1720be5e820ef52ffb7b39cc6d6a8baae88519/68747470733a2f2f636f6465636f762e696f2f67682f6d6f636b6b2f6d6f636b6b2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/mockk/mockk/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/mockk/mockk"&gt;&lt;img src="https://camo.githubusercontent.com/d7053a4fd5cad19da5f27682cc96c6132031f0db/68747470733a2f2f75732d63656e7472616c312d626f742d6d6f636b6b2e636c6f756466756e6374696f6e732e6e65742f626f742d6d6f636b6b" alt="Weekly users" data-canonical-src="https://us-central1-bot-mockk.cloudfunctions.net/bot-mockk" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://mockk.io/ANDROID" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/eb54d63dadf4ca40382d1b11f736ec31a24e0aff/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616e64726f69642d737570706f72742d677265656e2e737667" alt="Android" data-canonical-src="https://img.shields.io/badge/android-support-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://mockk.io/MATRIX" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7b12541a0ec9de961a18d048bb6653ce57ba0aa0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d61747269782d746573742d6535333939342e737667" alt="Matrix tests" data-canonical-src="https://img.shields.io/badge/matrix-test-e53994.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="/DEPRECATED"&gt;&lt;img src="https://camo.githubusercontent.com/9c322b6ecbfe2c08c972f56102f121fa525731cf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646570726563617465642d4150492d7265642e737667" alt="Deprecated" data-canonical-src="https://img.shields.io/badge/deprecated-API-red.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.codetriage.com/mockk/mockk" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f8d16063b65c0842c15d486145436b5d434d485b/68747470733a2f2f7777772e636f64657472696167652e636f6d2f6d6f636b6b2f6d6f636b6b2f6261646765732f75736572732e737667" alt="Open Source Helpers" data-canonical-src="https://www.codetriage.com/mockk/mockk/badges/users.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-kotlin-academy-articles-" class="anchor" aria-hidden="true" href="#kotlin-academy-articles-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Kotlin Academy articles &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0e6d19294a352483115460090f4a9a25109f8251/68747470733a2f2f63646e2d696d616765732d312e6d656469756d2e636f6d2f6c6574746572626f782f34372f34372f35302f35302f312a465558714938386d7474565f6b56386154724b6a4f672e706e673f736f757263653d6c6f676f4176617461722d3166396637376234623364312d2d2d653537623330343830316566"&gt;&lt;img src="https://camo.githubusercontent.com/0e6d19294a352483115460090f4a9a25109f8251/68747470733a2f2f63646e2d696d616765732d312e6d656469756d2e636f6d2f6c6574746572626f782f34372f34372f35302f35302f312a465558714938386d7474565f6b56386154724b6a4f672e706e673f736f757263653d6c6f676f4176617461722d3166396637376234623364312d2d2d653537623330343830316566" width="20px" data-canonical-src="https://cdn-images-1.medium.com/letterbox/47/47/50/50/1*FUXqI88mttV_kV8aTrKjOg.png?source=logoAvatar-1f9f77b4b3d1---e57b304801ef" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Check the series of articles "Mocking is not rocket science" at &lt;a href="https://blog.kotlin-academy.com" rel="nofollow"&gt;Kt. Academy&lt;/a&gt; describing MockK from the very basics of mocking up to description of all advanced features.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.kotlin-academy.com/mocking-is-not-rocket-science-basics-ae55d0aadf2b" rel="nofollow"&gt;Basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.kotlin-academy.com/mocking-is-not-rocket-science-expected-behavior-and-behavior-verification-3862dd0e0f03" rel="nofollow"&gt;Expected behavior and behavior verification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.kotlin-academy.com/mocking-is-not-rocket-science-mockk-features-e5d55d735a98" rel="nofollow"&gt;MockK features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.kotlin-academy.com/mocking-is-not-rocket-science-mockk-advanced-features-42277e5983b5" rel="nofollow"&gt;MockK advanced features&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-spring-support" class="anchor" aria-hidden="true" href="#spring-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spring support&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Ninja-Squad/springmockk"&gt;springmockk&lt;/a&gt; introduced in official &lt;a href="https://spring.io/guides/tutorials/spring-boot-kotlin/" rel="nofollow"&gt;Spring Boot Kotlin tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-version-twist" class="anchor" aria-hidden="true" href="#version-twist"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Version twist&lt;/h3&gt;
&lt;p&gt;From version 1.9 MockK switched to Kotlin 1.3 and Coroutines 1.0 by default and other branch 1.9.kotlin12 may be used for compatibility with Kotlin 1.2.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/19-verison-twist.png"&gt;&lt;img src="doc/19-verison-twist.png" alt="Switch of versions" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-known-issues--worth-to-remember" class="anchor" aria-hidden="true" href="#known-issues--worth-to-remember"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Known issues &amp;amp; worth to remember&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Some known issues related to Kotlin 1.3, Gradle 5 and Spring Boot were fixed in MockK 1.9. Please report if you face any problems.&lt;/li&gt;
&lt;li&gt;PowerMock needs a workaround to run together with MockK &lt;a href="https://github.com/mockk/mockk/issues/79#issuecomment-437646333"&gt;#79&lt;/a&gt;. (not sure after workaround if it is generally usable or not, please somebody report it)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Table of contents:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;auto-gen TOC:
{:toc}&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-examples--articles" class="anchor" aria-hidden="true" href="#examples--articles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples &amp;amp; articles&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.raywenderlich.com/5443751-testing-with-mockk" rel="nofollow"&gt;Testing With MockK paid course on raywenderlich.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;TDD for Android tutorial &lt;a href="https://www.youtube.com/watch?v=60KFJTb_HwU" rel="nofollow"&gt;part 1&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=32pnzGirvgM" rel="nofollow"&gt;part 2&lt;/a&gt; by Ryan Kay&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PhilippeBoisney/NoBullshit"&gt;https://github.com/PhilippeBoisney/NoBullshit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@Phil_Boisney/playing-with-kotlin-you-know-everything-john-doe-8275a6e98a96" rel="nofollow"&gt;https://medium.com/@Phil_Boisney/playing-with-kotlin-you-know-everything-john-doe-8275a6e98a96&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/joe-tsai/mockk-%E4%B8%80%E6%AC%BE%E5%BC%B7%E5%A4%A7%E7%9A%84-kotlin-mocking-library-part-1-4-39a85e42b8" rel="nofollow"&gt;用 Kotlin + Mockito 寫單元測試會碰到什麼問題？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/joe-tsai/mockk-%E4%B8%80%E6%AC%BE%E5%BC%B7%E5%A4%A7%E7%9A%84-kotlin-mocking-library-part-2-4-4be059331110" rel="nofollow"&gt;MockK 功能介紹：mockk, every, Annotation, verify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/joe-tsai/mockk-%E4%B8%80%E6%AC%BE%E5%BC%B7%E5%A4%A7%E7%9A%84-kotlin-mocking-library-part-3-4-79b40fb73964" rel="nofollow"&gt;MockK 功能介紹：Relaxed Mocks, 再談 Verify, Capture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/joe-tsai/mockk-%E4%B8%80%E6%AC%BE%E5%BC%B7%E5%A4%A7%E7%9A%84-kotlin-mocking-library-part-4-4-f82443848a3a" rel="nofollow"&gt;如何測試 Static Method, Singleton&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=h8_LZn1DFDI" rel="nofollow"&gt;YouTube: Android Developer Live Coding #13: Unit Testing with Mockk, Coroutines, Test Driven Development
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@oleksiypylypenko/mockk-intentions-dbe378106a6b" rel="nofollow"&gt;MockK: intentions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=RX_g65J14H0&amp;amp;feature=youtu.be&amp;amp;t=940" rel="nofollow"&gt;KotlinConf 2018 - Best Practices for Unit Testing in Kotlin by Philipp Hauer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kotlin/kotlin-fullstack-sample/pull/28/files#diff-eade18fbfd0abfb6338dbfa647b3215dR17"&gt;kotlin-fullstack-sample&lt;/a&gt; project covered with tests&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dzone.com/articles/new-mocking-tool-for-kotlin-an-alternative-to-java" rel="nofollow"&gt;DZone article&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://habrahabr.ru/post/341202/" rel="nofollow"&gt;Habrahabr article&lt;/a&gt; (RU)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ordina-jworks.github.io/testing/2018/02/05/Writing-tests-in-Kotlin-with-MockK.html" rel="nofollow"&gt;Mocking in Kotlin with MockK - Yannick De Turck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;All you need to get started is just to add a dependency to &lt;code&gt;MockK&lt;/code&gt; library.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-gradlemaven-dependency" class="anchor" aria-hidden="true" href="#gradlemaven-dependency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle/maven dependency&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Approach&lt;/th&gt;&lt;th&gt;Instruction&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/gradle.png"&gt;&lt;img src="doc/gradle.png" alt="Gradle" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
    &lt;pre&gt;testImplementation "io.mockk:mockk:{version}"&lt;/pre&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/gradle.png"&gt;&lt;img src="doc/gradle.png" alt="Gradle" style="max-width:100%;"&gt;&lt;/a&gt; (Kotlin DSL)&lt;/td&gt;
&lt;td&gt;
    &lt;pre&gt;testImplementation("io.mockk:mockk:{version}")&lt;/pre&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/maven.png"&gt;&lt;img src="doc/maven.png" alt="Maven" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;pre&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;io.mockk&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;mockk&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;{version}&amp;lt;/version&amp;gt;
    &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
&amp;lt;/dependency&amp;gt;&lt;/pre&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="ANDROID.md"&gt;&lt;img align="top" src="doc/robot-small.png" height="20" alt="android" style="max-width:100%;"&gt; Unit&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
    &lt;pre&gt;testImplementation "io.mockk:mockk:{version}"&lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="ANDROID.md"&gt;&lt;img align="top" src="doc/robot-small.png" height="20" alt="android" style="max-width:100%;"&gt; Instrumented&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
    &lt;pre&gt;androidTestImplementation "io.mockk:mockk-android:{version}"&lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Common multiplatform&lt;/td&gt;
&lt;td&gt;
    &lt;pre&gt;testImplementation "io.mockk:mockk-common:{version}"&lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;where &lt;code&gt;{version}&lt;/code&gt; corresponds to version as below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kotlin 1.3+ and Coroutines 1.0+ Version: &lt;a href="https://bintray.com/bintray/jcenter/io.mockk%3Amockk-dsl-jvm/1.9.3/link" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4c8bb6d85465f2ac66d21dbb744eacb97ce7d7e1/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f62696e747261792f6a63656e7465722f696f2e6d6f636b6b2533416d6f636b6b2d64736c2d6a766d2f696d616765732f646f776e6c6f61642e7376673f76657273696f6e3d312e392e33" alt="Download" data-canonical-src="https://api.bintray.com/packages/bintray/jcenter/io.mockk%3Amockk-dsl-jvm/images/download.svg?version=1.9.3" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kotlin 1.2 Compatible Version: &lt;a href="https://bintray.com/bintray/jcenter/io.mockk%3Amockk-dsl-jvm/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/190c63f0257652e56fd3a852d41f9f96646f3913/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f62696e747261792f6a63656e7465722f696f2e6d6f636b6b2533416d6f636b6b2d64736c2d6a766d2f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/bintray/jcenter/io.mockk%3Amockk-dsl-jvm/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-dsl-examples" class="anchor" aria-hidden="true" href="#dsl-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DSL examples&lt;/h2&gt;
&lt;p&gt;Simplest example. By default mocks are strict, so you need to provide some behaviour.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; car &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;Car&lt;/span&gt;&amp;gt;()

every { car.drive(&lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) } returns &lt;span class="pl-en"&gt;Outcome&lt;/span&gt;.&lt;span class="pl-en"&gt;OK&lt;/span&gt;

car.drive(&lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; returns OK&lt;/span&gt;

verify { car.drive(&lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) }

confirmVerified(car)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-annotations" class="anchor" aria-hidden="true" href="#annotations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Annotations&lt;/h3&gt;
&lt;p&gt;You can use annotations to simplify the creation of mock objects:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;TrafficSystem&lt;/span&gt; {
  &lt;span class="pl-k"&gt;lateinit&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; car1&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;
  
  &lt;span class="pl-k"&gt;lateinit&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; car2&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;
  
  &lt;span class="pl-k"&gt;lateinit&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; car3&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;CarTest&lt;/span&gt; {
  &lt;span class="pl-k"&gt;@MockK&lt;/span&gt;
  &lt;span class="pl-k"&gt;lateinit&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; car1&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;

  &lt;span class="pl-k"&gt;@RelaxedMockK&lt;/span&gt;
  &lt;span class="pl-k"&gt;lateinit&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; car2&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;

  &lt;span class="pl-k"&gt;@MockK&lt;/span&gt;(&lt;span class="pl-c1"&gt;relaxUnitFun&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
  &lt;span class="pl-k"&gt;lateinit&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; car3&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;

  &lt;span class="pl-k"&gt;@SpyK&lt;/span&gt;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; car4 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;()
  
  &lt;span class="pl-k"&gt;@InjectMockKs&lt;/span&gt;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; trafficSystem &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;TrafficSystem&lt;/span&gt;()
  
  &lt;span class="pl-k"&gt;@Before&lt;/span&gt;
  &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;setUp&lt;/span&gt;() &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MockKAnnotations&lt;/span&gt;.&lt;span class="pl-en"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;this&lt;/span&gt;, relaxUnitFun &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; turn relaxUnitFun on for all mocks&lt;/span&gt;

  &lt;span class="pl-k"&gt;@Test&lt;/span&gt;
  &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;calculateAddsValues1&lt;/span&gt;() {
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... use car1, car2, car3 and car4&lt;/span&gt;
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Injection first tries to match properties by name, then by class or superclass.
Check the &lt;code&gt;lookupType&lt;/code&gt; parameter for customization.&lt;/p&gt;
&lt;p&gt;Properties are injected even if &lt;code&gt;private&lt;/code&gt; is applied. Constructors for injection are selected from the biggest
number of arguments to lowest.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@InjectMockKs&lt;/code&gt; by default is injecting only &lt;code&gt;lateinit var&lt;/code&gt;s or &lt;code&gt;var&lt;/code&gt;s that are not assigned.
To change this, use &lt;code&gt;overrideValues = true&lt;/code&gt;. This would assign the value even if it is already somehow initialized.
To inject &lt;code&gt;val&lt;/code&gt;s, use &lt;code&gt;injectImmutable = true&lt;/code&gt;. For a shorter notation use &lt;code&gt;@OverrideMockKs&lt;/code&gt; which does the same as
&lt;code&gt;@InjectMockKs&lt;/code&gt; by default, but turns these two flags on.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-junit5" class="anchor" aria-hidden="true" href="#junit5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JUnit5&lt;/h4&gt;
&lt;p&gt;In JUnit5 you can use &lt;code&gt;MockKExtension&lt;/code&gt; to initialize your mocks.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@ExtendWith&lt;/span&gt;(&lt;span class="pl-en"&gt;MockKExtension&lt;/span&gt;::&lt;span class="pl-c1"&gt;class&lt;/span&gt;)
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;CarTest&lt;/span&gt; {
  &lt;span class="pl-k"&gt;@MockK&lt;/span&gt;
  &lt;span class="pl-k"&gt;lateinit&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; car1&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;

  &lt;span class="pl-k"&gt;@RelaxedMockK&lt;/span&gt;
  &lt;span class="pl-k"&gt;lateinit&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; car2&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;

  &lt;span class="pl-k"&gt;@MockK&lt;/span&gt;(&lt;span class="pl-c1"&gt;relaxUnitFun&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
  &lt;span class="pl-k"&gt;lateinit&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; car3&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;

  &lt;span class="pl-k"&gt;@SpyK&lt;/span&gt;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; car4 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;()

  &lt;span class="pl-k"&gt;@Test&lt;/span&gt;
  &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;calculateAddsValues1&lt;/span&gt;() {
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... use car1, car2, car3 and car4&lt;/span&gt;
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Additionally, it adds the possibility to use &lt;code&gt;@MockK&lt;/code&gt; and &lt;code&gt;@RelaxedMockK&lt;/code&gt; on test function parameters:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@Test&lt;/span&gt;
&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;calculateAddsValues1&lt;/span&gt;(&lt;span class="pl-k"&gt;@MockK&lt;/span&gt; &lt;span class="pl-smi"&gt;car1&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;, &lt;span class="pl-k"&gt;@RelaxedMockK&lt;/span&gt; &lt;span class="pl-smi"&gt;car2&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;) {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... use car1 and car2&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-spy" class="anchor" aria-hidden="true" href="#spy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spy&lt;/h3&gt;
&lt;p&gt;Spies allow to mix mocks and real objects.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; car &lt;span class="pl-k"&gt;=&lt;/span&gt; spyk(&lt;span class="pl-en"&gt;Car&lt;/span&gt;()) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or spyk&amp;lt;Car&amp;gt;() to call default constructor&lt;/span&gt;

car.drive(&lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; returns whatever real function of Car returns&lt;/span&gt;

verify { car.drive(&lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) }

confirmVerified(car)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: the spy object is a copy of a passed object.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-relaxed-mock" class="anchor" aria-hidden="true" href="#relaxed-mock"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Relaxed mock&lt;/h3&gt;
&lt;p&gt;A &lt;code&gt;relaxed mock&lt;/code&gt; is the mock that returns some simple value for all functions.
This allows to skip specifying behavior for each case, while still allowing to stub things you need.
For reference types, chained mocks are returned.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; car &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;Car&lt;/span&gt;&amp;gt;(relaxed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)

car.drive(&lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; returns null&lt;/span&gt;

verify { car.drive(&lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) }

confirmVerified(car)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: relaxed mocking is working badly with generic return types. A class cast exception is usually thrown in this case.
Opt for stubbing manually in case of a generic return type.&lt;/p&gt;
&lt;p&gt;Workaround:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; func &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;() &lt;span class="pl-k"&gt;-&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(relaxed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; in this case invoke function has generic return type&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; this line is workaround, without it the relaxed mock would throw a class cast exception on the next line&lt;/span&gt;
every { func() } returns &lt;span class="pl-en"&gt;Car&lt;/span&gt;() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or you can return mockk() for example &lt;/span&gt;

func()&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-mock-relaxed-for-functions-returning-unit" class="anchor" aria-hidden="true" href="#mock-relaxed-for-functions-returning-unit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mock relaxed for functions returning Unit&lt;/h3&gt;
&lt;p&gt;In case you would like &lt;code&gt;Unit&lt;/code&gt; returning functions to be relaxed, you can use &lt;code&gt;relaxUnitFun = true&lt;/code&gt; as an argument to the &lt;code&gt;mockk&lt;/code&gt; function,
&lt;code&gt;@MockK&lt;/code&gt;annotation or &lt;code&gt;MockKAnnotations.init&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;Function:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;mockk&amp;lt;&lt;span class="pl-en"&gt;MockCls&lt;/span&gt;&amp;gt;(relaxUnitFun &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Annotation:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@MockK&lt;/span&gt;(&lt;span class="pl-c1"&gt;relaxUnitFun&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
&lt;span class="pl-k"&gt;lateinit&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; mock1&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;RurfMockCls&lt;/span&gt;
&lt;span class="pl-en"&gt;init&lt;/span&gt; {
    &lt;span class="pl-en"&gt;MockKAnnotations&lt;/span&gt;.&lt;span class="pl-en"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;this&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;MockKAnnotations.init:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@MockK&lt;/span&gt;
&lt;span class="pl-k"&gt;lateinit&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; mock2&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;RurfMockCls&lt;/span&gt;
&lt;span class="pl-en"&gt;init&lt;/span&gt; {
    &lt;span class="pl-en"&gt;MockKAnnotations&lt;/span&gt;.&lt;span class="pl-en"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;this&lt;/span&gt;, relaxUnitFun &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-object-mocks" class="anchor" aria-hidden="true" href="#object-mocks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Object mocks&lt;/h3&gt;
&lt;p&gt;Objects can be transformed to mocks in the following way:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;object&lt;/span&gt; MockObj {
  &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;add&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;=&lt;/span&gt; a &lt;span class="pl-k"&gt;+&lt;/span&gt; b
}

mockkObject(&lt;span class="pl-en"&gt;MockObj&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; applies mocking to an Object&lt;/span&gt;

assertEquals(&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-en"&gt;MockObj&lt;/span&gt;.add(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;))

every { &lt;span class="pl-en"&gt;MockObj&lt;/span&gt;.add(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;) } returns &lt;span class="pl-c1"&gt;55&lt;/span&gt;

assertEquals(&lt;span class="pl-c1"&gt;55&lt;/span&gt;, &lt;span class="pl-en"&gt;MockObj&lt;/span&gt;.add(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To revert back, use &lt;code&gt;unmockkAll&lt;/code&gt; or &lt;code&gt;unmockkObject&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@Before&lt;/span&gt;
&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;beforeTests&lt;/span&gt;() {
    mockkObject(&lt;span class="pl-en"&gt;MockObj&lt;/span&gt;)
    every { &lt;span class="pl-en"&gt;MockObj&lt;/span&gt;.add(&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;) } returns &lt;span class="pl-c1"&gt;55&lt;/span&gt;
}

&lt;span class="pl-k"&gt;@Test&lt;/span&gt;
&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;willUseMockBehaviour&lt;/span&gt;() {
    assertEquals(&lt;span class="pl-c1"&gt;55&lt;/span&gt;, &lt;span class="pl-en"&gt;MockObj&lt;/span&gt;.add(&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;))
}

&lt;span class="pl-k"&gt;@After&lt;/span&gt;
&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;afterTests&lt;/span&gt;() {
    unmockkAll()
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or unmockkObject(MockObj)&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Despite the Kotlin language limits, you can create new instances of objects if required by testing logic:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; newObjectMock &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;MockObj&lt;/span&gt;&amp;gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-class-mock" class="anchor" aria-hidden="true" href="#class-mock"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Class mock&lt;/h3&gt;
&lt;p&gt;Sometimes you need a mock of arbitrary class. Use &lt;code&gt;mockkClass&lt;/code&gt; in those cases.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; car &lt;span class="pl-k"&gt;=&lt;/span&gt; mockkClass(&lt;span class="pl-smi"&gt;Car&lt;/span&gt;::&lt;span class="pl-c1"&gt;class&lt;/span&gt;)

every { car.drive(&lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) } returns &lt;span class="pl-en"&gt;Outcome&lt;/span&gt;.&lt;span class="pl-en"&gt;OK&lt;/span&gt;

car.drive(&lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; returns OK&lt;/span&gt;

verify { car.drive(&lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) }&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-enumeration-mocks" class="anchor" aria-hidden="true" href="#enumeration-mocks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enumeration mocks&lt;/h3&gt;
&lt;p&gt;Enums can be mocked using &lt;code&gt;mockkObject&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Enumeration&lt;/span&gt;(&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;goodInt&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) {
    &lt;span class="pl-en"&gt;CONSTANT&lt;/span&gt;(&lt;span class="pl-c1"&gt;35&lt;/span&gt;),
    &lt;span class="pl-en"&gt;OTHER_CONSTANT&lt;/span&gt;(&lt;span class="pl-c1"&gt;45&lt;/span&gt;);
}

mockkObject(&lt;span class="pl-en"&gt;Enumeration&lt;/span&gt;.&lt;span class="pl-en"&gt;CONSTANT&lt;/span&gt;)
every { &lt;span class="pl-en"&gt;Enumeration&lt;/span&gt;.&lt;span class="pl-en"&gt;CONSTANT&lt;/span&gt;.goodInt } returns &lt;span class="pl-c1"&gt;42&lt;/span&gt;
assertEquals(&lt;span class="pl-c1"&gt;42&lt;/span&gt;, &lt;span class="pl-en"&gt;Enumeration&lt;/span&gt;.&lt;span class="pl-en"&gt;CONSTANT&lt;/span&gt;.goodInt)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-constructor-mocks" class="anchor" aria-hidden="true" href="#constructor-mocks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Constructor mocks&lt;/h3&gt;
&lt;p&gt;Sometimes, especially in code you don't own, you need to mock newly created objects.
For this purpose, the following constructs are provided:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MockCls&lt;/span&gt; {
  &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;add&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;=&lt;/span&gt; a &lt;span class="pl-k"&gt;+&lt;/span&gt; b
}

mockkConstructor(&lt;span class="pl-smi"&gt;MockCls&lt;/span&gt;::&lt;span class="pl-c1"&gt;class&lt;/span&gt;)

every { anyConstructed&amp;lt;&lt;span class="pl-en"&gt;MockCls&lt;/span&gt;&amp;gt;().add(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;) } returns &lt;span class="pl-c1"&gt;4&lt;/span&gt;

assertEquals(&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-en"&gt;MockCls&lt;/span&gt;().add(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; note new object is created&lt;/span&gt;

verify { anyConstructed&amp;lt;&lt;span class="pl-en"&gt;MockCls&lt;/span&gt;&amp;gt;().add(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;) }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The basic idea is that just after the constructor of the mocked class is executed (any of them), objects become a &lt;code&gt;constructed mock&lt;/code&gt;.
Mocking behavior of such a mock is connected to the special &lt;code&gt;prototype mock&lt;/code&gt; denoted by &lt;code&gt;anyConstructed&amp;lt;MockCls&amp;gt;()&lt;/code&gt;.
There is one instance per class of such a &lt;code&gt;prototype mock&lt;/code&gt;. Call recording also happens to the &lt;code&gt;prototype mock&lt;/code&gt;.
If no behavior for the function is specified then the original function is executed.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-partial-argument-matching" class="anchor" aria-hidden="true" href="#partial-argument-matching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Partial argument matching&lt;/h3&gt;
&lt;p&gt;You can mix both regular arguments and matchers:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; car &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;Car&lt;/span&gt;&amp;gt;()

every { 
  car.recordTelemetry(
    speed &lt;span class="pl-k"&gt;=&lt;/span&gt; more(&lt;span class="pl-c1"&gt;50&lt;/span&gt;),
    direction &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; here eq() is used&lt;/span&gt;
    lat &lt;span class="pl-k"&gt;=&lt;/span&gt; any(),
    long &lt;span class="pl-k"&gt;=&lt;/span&gt; any()
  )
} returns &lt;span class="pl-en"&gt;Outcome&lt;/span&gt;.&lt;span class="pl-en"&gt;RECORDED&lt;/span&gt;

obj.recordTelemetry(&lt;span class="pl-c1"&gt;60&lt;/span&gt;, &lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;, &lt;span class="pl-c1"&gt;51.1377382&lt;/span&gt;, &lt;span class="pl-c1"&gt;17.0257142&lt;/span&gt;)

verify { obj.recordTelemetry(&lt;span class="pl-c1"&gt;60&lt;/span&gt;, &lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;, &lt;span class="pl-c1"&gt;51.1377382&lt;/span&gt;, &lt;span class="pl-c1"&gt;17.0257142&lt;/span&gt;) }

confirmVerified(obj)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-chained-calls" class="anchor" aria-hidden="true" href="#chained-calls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chained calls&lt;/h3&gt;
&lt;p&gt;You can stub chains of calls:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; car &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;Car&lt;/span&gt;&amp;gt;()

every { car.door(&lt;span class="pl-en"&gt;DoorType&lt;/span&gt;.&lt;span class="pl-en"&gt;FRONT_LEFT&lt;/span&gt;).windowState() } returns &lt;span class="pl-en"&gt;WindowState&lt;/span&gt;.&lt;span class="pl-en"&gt;UP&lt;/span&gt;

car.door(&lt;span class="pl-en"&gt;DoorType&lt;/span&gt;.&lt;span class="pl-en"&gt;FRONT_LEFT&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; returns chained mock for Door&lt;/span&gt;
car.door(&lt;span class="pl-en"&gt;DoorType&lt;/span&gt;.&lt;span class="pl-en"&gt;FRONT_LEFT&lt;/span&gt;).windowState() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; returns WindowState.UP&lt;/span&gt;

verify { car.door(&lt;span class="pl-en"&gt;DoorType&lt;/span&gt;.&lt;span class="pl-en"&gt;FRONT_LEFT&lt;/span&gt;).windowState() }

confirmVerified(car)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: in case the function's return type is generic then the information about the actual type is gone.
To make chained calls work, additional information is required.
Most of the time the framework will catch the cast exception and do &lt;code&gt;autohinting&lt;/code&gt;.
In the case it is explicitly required, use &lt;code&gt;hint&lt;/code&gt; before making the next call.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;every { obj.op2(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;).hint(&lt;span class="pl-smi"&gt;Int&lt;/span&gt;::&lt;span class="pl-c1"&gt;class&lt;/span&gt;).op1(&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;) } returns &lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-hierarchical-mocking" class="anchor" aria-hidden="true" href="#hierarchical-mocking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hierarchical mocking&lt;/h3&gt;
&lt;p&gt;From version 1.9.1 mocks may be chained into hierarchies:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;AddressBook&lt;/span&gt; {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; contacts&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Contact&lt;/span&gt;&amp;gt;
}

&lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;Contact&lt;/span&gt; {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;val&lt;/span&gt; telephone&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;val&lt;/span&gt; address&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-en"&gt;Address&lt;/span&gt;
}

&lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;Address&lt;/span&gt; {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; city&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;val&lt;/span&gt; zip&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
}

&lt;span class="pl-k"&gt;val&lt;/span&gt; addressBook &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;AddressBook&lt;/span&gt;&amp;gt; {
    every { contacts } returns &lt;span class="pl-c1"&gt;listOf&lt;/span&gt;(
        mockk {
            every { name } returns &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            every { telephone } returns &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;123-456-789&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            every { address.city } returns &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;New-York&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            every { address.zip } returns &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;123-45&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        },
        mockk {
            every { name } returns &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Alex&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            every { telephone } returns &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;789-456-123&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            every { address } returns mockk {
                every { city } returns &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Wroclaw&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                every { zip } returns &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;543-21&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            }
        }
    )
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-capturing" class="anchor" aria-hidden="true" href="#capturing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Capturing&lt;/h3&gt;
&lt;p&gt;You can capture an argument to a &lt;code&gt;CapturingSlot&lt;/code&gt; or &lt;code&gt;MutableList&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; car &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;Car&lt;/span&gt;&amp;gt;()

&lt;span class="pl-k"&gt;val&lt;/span&gt; slot &lt;span class="pl-k"&gt;=&lt;/span&gt; slot&amp;lt;&lt;span class="pl-c1"&gt;Double&lt;/span&gt;&amp;gt;()
&lt;span class="pl-k"&gt;val&lt;/span&gt; list &lt;span class="pl-k"&gt;=&lt;/span&gt; mutableListOf&amp;lt;&lt;span class="pl-c1"&gt;Double&lt;/span&gt;&amp;gt;()

every {
  obj.recordTelemetry(
    speed &lt;span class="pl-k"&gt;=&lt;/span&gt; capture(slot), &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; makes mock match call with any value for `speed` and record it in a slot&lt;/span&gt;
    direction &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; makes mock and capturing only match calls with specific `direction`. Use `any()` to match calls with any `direction`&lt;/span&gt;
  )
} answers {
  &lt;span class="pl-c1"&gt;println&lt;/span&gt;(slot.captured)

  &lt;span class="pl-en"&gt;Outcome&lt;/span&gt;.&lt;span class="pl-en"&gt;RECORDED&lt;/span&gt;
}


every {
  obj.recordTelemetry(
    speed &lt;span class="pl-k"&gt;=&lt;/span&gt; capture(list),
    direction &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;SOUTH&lt;/span&gt;
  )
} answers {
  &lt;span class="pl-c1"&gt;println&lt;/span&gt;(list)

  &lt;span class="pl-en"&gt;Outcome&lt;/span&gt;.&lt;span class="pl-en"&gt;RECORDED&lt;/span&gt;
}

obj.recordTelemetry(speed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;15&lt;/span&gt;, direction &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints 15&lt;/span&gt;
obj.recordTelemetry(speed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;16&lt;/span&gt;, direction &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;SOUTH&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints 16&lt;/span&gt;

verify(exactly &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;) { obj.recordTelemetry(speed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;or&lt;/span&gt;(&lt;span class="pl-c1"&gt;15&lt;/span&gt;, &lt;span class="pl-c1"&gt;16&lt;/span&gt;), direction &lt;span class="pl-k"&gt;=&lt;/span&gt; any()) }

confirmVerified(obj)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-verification-atleast-atmost-or-exactly-times" class="anchor" aria-hidden="true" href="#verification-atleast-atmost-or-exactly-times"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Verification atLeast, atMost or exactly times&lt;/h3&gt;
&lt;p&gt;You can check the call count with the &lt;code&gt;atLeast&lt;/code&gt;, &lt;code&gt;atMost&lt;/code&gt; or &lt;code&gt;exactly&lt;/code&gt; parameters:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; car &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;Car&lt;/span&gt;&amp;gt;(relaxed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)

car.accelerate(fromSpeed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, toSpeed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;)
car.accelerate(fromSpeed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, toSpeed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;)
car.accelerate(fromSpeed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;, toSpeed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; all pass&lt;/span&gt;
verify(atLeast &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;) { car.accelerate(allAny()) }
verify(atMost  &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;) { car.accelerate(fromSpeed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, toSpeed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;or&lt;/span&gt;(&lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-c1"&gt;30&lt;/span&gt;)) }
verify(exactly &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) { car.accelerate(fromSpeed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, toSpeed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;) }
verify(exactly &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) { car.accelerate(fromSpeed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;, toSpeed &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;) } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; means no calls were performed&lt;/span&gt;

confirmVerified(car)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-verification-order" class="anchor" aria-hidden="true" href="#verification-order"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Verification order&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;verifyAll&lt;/code&gt; verifies that all calls happened without checking their order.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;verifySequence&lt;/code&gt; verifies that the calls happened in a specified sequence.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;verifyOrder&lt;/code&gt; verifies that calls happened in a specific order.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wasNot Called&lt;/code&gt; verifies that the mock or the list of mocks was not called at all.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MockedClass&lt;/span&gt; {
    &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;sum&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;=&lt;/span&gt; a &lt;span class="pl-k"&gt;+&lt;/span&gt; b
}

&lt;span class="pl-k"&gt;val&lt;/span&gt; obj &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;MockedClass&lt;/span&gt;&amp;gt;()
&lt;span class="pl-k"&gt;val&lt;/span&gt; slot &lt;span class="pl-k"&gt;=&lt;/span&gt; slot&amp;lt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt;&amp;gt;()

every {
    obj.sum(any(), capture(slot))
} answers {
    &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; firstArg&amp;lt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt;&amp;gt;() &lt;span class="pl-k"&gt;+&lt;/span&gt; slot.captured
}

obj.sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; returns 4&lt;/span&gt;
obj.sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; returns 5&lt;/span&gt;
obj.sum(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; returns 5&lt;/span&gt;

verifyAll {
    obj.sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;)
    obj.sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
    obj.sum(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
}

verifySequence {
    obj.sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
    obj.sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;)
    obj.sum(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
}

verifyOrder {
    obj.sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
    obj.sum(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
}

&lt;span class="pl-k"&gt;val&lt;/span&gt; obj2 &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;MockedClass&lt;/span&gt;&amp;gt;()
&lt;span class="pl-k"&gt;val&lt;/span&gt; obj3 &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;MockedClass&lt;/span&gt;&amp;gt;()
verify {
    &lt;span class="pl-c1"&gt;listOf&lt;/span&gt;(obj2, obj3) wasNot &lt;span class="pl-en"&gt;Called&lt;/span&gt;
}

confirmVerified(obj)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-verification-confirmation" class="anchor" aria-hidden="true" href="#verification-confirmation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Verification confirmation&lt;/h3&gt;
&lt;p&gt;To double check that all calls were verified by &lt;code&gt;verify...&lt;/code&gt; constructs, you can use &lt;code&gt;confirmVerified&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;confirmVerified(mock1, mock2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It does not make much sense to use it for &lt;code&gt;verifySequence&lt;/code&gt; and &lt;code&gt;verifyAll&lt;/code&gt; as these verification methods already exhaustively cover all calls with verification.&lt;/p&gt;
&lt;p&gt;It will throw an exception in case there are some calls left without verification.&lt;/p&gt;
&lt;p&gt;Some calls may be skipped from such confirmation, check the next section for more details.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;val car = mockk&amp;lt;Car&amp;gt;()

every { car.drive(Direction.NORTH) } returns Outcome.OK
every { car.drive(Direction.SOUTH) } returns Outcome.OK

car.drive(Direction.NORTH) // returns OK
car.drive(Direction.SOUTH) // returns OK

verify {
    car.drive(Direction.SOUTH)
    car.drive(Direction.NORTH)
}

confirmVerified(car) // makes sure all calls were covered with verification
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-recording-exclusions" class="anchor" aria-hidden="true" href="#recording-exclusions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Recording exclusions&lt;/h3&gt;
&lt;p&gt;To exclude some not so important calls from being recorded you can use &lt;code&gt;excludeRecords&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;excludeRecords { mock.operation(any(), 5) }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;All matching calls will be excluded from recording. This may be useful in case you are using exhaustive verification: &lt;code&gt;verifyAll&lt;/code&gt;, &lt;code&gt;verifySequence&lt;/code&gt; or &lt;code&gt;confirmVerified&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;val car = mockk&amp;lt;Car&amp;gt;()

every { car.drive(Direction.NORTH) } returns Outcome.OK
every { car.drive(Direction.SOUTH) } returns Outcome.OK

excludeRecords { car.drive(Direction.SOUTH) }

car.drive(Direction.NORTH) // returns OK
car.drive(Direction.SOUTH) // returns OK

verify {
    car.drive(Direction.NORTH)
}

confirmVerified(car) // car.drive(Direction.SOUTH) was excluded, so confirmation is fine with only car.drive(Direction.NORTH)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-verification-timeout" class="anchor" aria-hidden="true" href="#verification-timeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Verification timeout&lt;/h3&gt;
&lt;p&gt;To verify concurrent operations, you can use &lt;code&gt;timeout = xxx&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;mockk&amp;lt;&lt;span class="pl-en"&gt;MockCls&lt;/span&gt;&amp;gt; {
    every { sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;) } returns &lt;span class="pl-c1"&gt;4&lt;/span&gt;

    &lt;span class="pl-en"&gt;Thread&lt;/span&gt; {
        &lt;span class="pl-en"&gt;Thread&lt;/span&gt;.sleep(&lt;span class="pl-c1"&gt;2000&lt;/span&gt;)
        sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
    }.start()

    verify(timeout &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3000&lt;/span&gt;) { sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;) }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will wait until one of two following states: either verification is passed or timeout is reached.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-returning-unit" class="anchor" aria-hidden="true" href="#returning-unit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Returning Unit&lt;/h3&gt;
&lt;p&gt;If the function is returning &lt;code&gt;Unit&lt;/code&gt; you can use the &lt;code&gt;just Runs&lt;/code&gt; construct:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MockedClass&lt;/span&gt; {
    &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;sum&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Unit&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;println&lt;/span&gt;(a &lt;span class="pl-k"&gt;+&lt;/span&gt; b)
    }
}

&lt;span class="pl-k"&gt;val&lt;/span&gt; obj &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;MockedClass&lt;/span&gt;&amp;gt;()

every { obj.sum(any(), &lt;span class="pl-c1"&gt;3&lt;/span&gt;) } just &lt;span class="pl-en"&gt;Runs&lt;/span&gt;

obj.sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
obj.sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
obj.sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;)

verify {
    obj.sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
    obj.sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
    obj.sum(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-coroutines" class="anchor" aria-hidden="true" href="#coroutines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Coroutines&lt;/h3&gt;
&lt;p&gt;To mock coroutines you need to add another dependency to the support library.&lt;/p&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
    &lt;th&gt;Gradle&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;
&lt;pre&gt;testCompile "org.jetbrains.kotlinx:kotlinx-coroutines-core:x.x"&lt;/pre&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
    &lt;th&gt;Maven&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
    &lt;pre&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.jetbrains.kotlinx&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;kotlinx-coroutines-core&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;x.x&amp;lt;/version&amp;gt;
    &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
&amp;lt;/dependency&amp;gt;&lt;/pre&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;Then you can use &lt;code&gt;coEvery&lt;/code&gt;, &lt;code&gt;coVerify&lt;/code&gt;, &lt;code&gt;coMatch&lt;/code&gt;, &lt;code&gt;coAssert&lt;/code&gt;, &lt;code&gt;coRun&lt;/code&gt;, &lt;code&gt;coAnswers&lt;/code&gt; or &lt;code&gt;coInvoke&lt;/code&gt; to mock suspend functions.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; car &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;Car&lt;/span&gt;&amp;gt;()

coEvery { car.drive(&lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) } returns &lt;span class="pl-en"&gt;Outcome&lt;/span&gt;.&lt;span class="pl-en"&gt;OK&lt;/span&gt;

car.drive(&lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; returns OK&lt;/span&gt;

coVerify { car.drive(&lt;span class="pl-en"&gt;Direction&lt;/span&gt;.&lt;span class="pl-en"&gt;NORTH&lt;/span&gt;) }&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-extension-functions" class="anchor" aria-hidden="true" href="#extension-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extension functions&lt;/h3&gt;
&lt;p&gt;There are three cases of extension function:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;class wide&lt;/li&gt;
&lt;li&gt;object wide&lt;/li&gt;
&lt;li&gt;module wide&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In case of an object or a class, you can mock extension functions just by creating a
regular &lt;code&gt;mockk&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Obj&lt;/span&gt;(&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;)

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Ext&lt;/span&gt; {
    &lt;span class="pl-k"&gt;fun&lt;/span&gt; Obj.&lt;span class="pl-en"&gt;extensionFunc&lt;/span&gt;() &lt;span class="pl-k"&gt;=&lt;/span&gt; value &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;
}

&lt;span class="pl-c1"&gt;with&lt;/span&gt;(mockk&amp;lt;&lt;span class="pl-en"&gt;Ext&lt;/span&gt;&amp;gt;()) {
    every {
        &lt;span class="pl-en"&gt;Obj&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;).extensionFunc()
    } returns &lt;span class="pl-c1"&gt;11&lt;/span&gt;

    assertEquals(&lt;span class="pl-c1"&gt;11&lt;/span&gt;, &lt;span class="pl-en"&gt;Obj&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;).extensionFunc())

    verify {
        &lt;span class="pl-en"&gt;Obj&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;).extensionFunc()
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To mock module wide extension functions you need to
build &lt;code&gt;mockkStatic(...)&lt;/code&gt; with as argument the module's class name.
For example "pkg.FileKt" for module &lt;code&gt;File.kt&lt;/code&gt; in the &lt;code&gt;pkg&lt;/code&gt; package.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Obj&lt;/span&gt;(&lt;span class="pl-k"&gt;val&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; declared in File.kt ("pkg" package)&lt;/span&gt;
&lt;span class="pl-k"&gt;fun&lt;/span&gt; Obj.&lt;span class="pl-en"&gt;extensionFunc&lt;/span&gt;() &lt;span class="pl-k"&gt;=&lt;/span&gt; value &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;

mockkStatic(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pkg.FileKt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

every {
    &lt;span class="pl-en"&gt;Obj&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;).extensionFunc()
} returns &lt;span class="pl-c1"&gt;11&lt;/span&gt;

assertEquals(&lt;span class="pl-c1"&gt;11&lt;/span&gt;, &lt;span class="pl-en"&gt;Obj&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;).extensionFunc())

verify {
    &lt;span class="pl-en"&gt;Obj&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;).extensionFunc()
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If &lt;code&gt;@JvmName&lt;/code&gt; is used, specify it as a class name.&lt;/p&gt;
&lt;p&gt;KHttp.kt:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@file:JvmName("KHttp")

package khttp
// ... KHttp code 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Testing code:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mockkStatic("khttp.KHttp")
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sometimes you need to know a little bit more to mock an extension function.
For example &lt;code&gt;File.endsWith()&lt;/code&gt; extension function has a totally unpredictable &lt;code&gt;classname&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;   mockkStatic(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kotlin.io.FilesKt__UtilsKt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
   every { &lt;span class="pl-en"&gt;File&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;abc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).endsWith(any&amp;lt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&amp;gt;()) } returns &lt;span class="pl-c1"&gt;true&lt;/span&gt;
   &lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-en"&gt;File&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;abc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).endsWith(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;abc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is standard Kotlin behaviour that may be unpredictable.
Use &lt;code&gt;Tools -&amp;gt; Kotlin -&amp;gt; Show Kotlin Bytecode&lt;/code&gt; or check &lt;code&gt;.class&lt;/code&gt; files in JAR archive to detect such names.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-varargs" class="anchor" aria-hidden="true" href="#varargs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Varargs&lt;/h3&gt;
&lt;p&gt;From version 1.9.1 more extended vararg handling is possible:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;interface&lt;/span&gt; &lt;span class="pl-en"&gt;ClsWithManyMany&lt;/span&gt; {
        &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;manyMany&lt;/span&gt;(&lt;span class="pl-k"&gt;vararg&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Any&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
    }

    &lt;span class="pl-k"&gt;val&lt;/span&gt; obj &lt;span class="pl-k"&gt;=&lt;/span&gt; mockk&amp;lt;&lt;span class="pl-en"&gt;ClsWithManyMany&lt;/span&gt;&amp;gt;()

    every { obj.manyMany(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-k"&gt;*&lt;/span&gt;varargAll { it &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;7&lt;/span&gt; }) } returns &lt;span class="pl-c1"&gt;3&lt;/span&gt;

    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(obj.manyMany(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3&lt;/span&gt;
    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(obj.manyMany(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3&lt;/span&gt;
    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(obj.manyMany(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3&lt;/span&gt;

    every { obj.manyMany(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-k"&gt;*&lt;/span&gt;anyVararg(), &lt;span class="pl-c1"&gt;7&lt;/span&gt;) } returns &lt;span class="pl-c1"&gt;4&lt;/span&gt;

    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(obj.manyMany(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 4&lt;/span&gt;
    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(obj.manyMany(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 4&lt;/span&gt;
    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(obj.manyMany(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 4&lt;/span&gt;

    every { obj.manyMany(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-k"&gt;*&lt;/span&gt;varargAny { nArgs &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt; }, &lt;span class="pl-c1"&gt;7&lt;/span&gt;) } returns &lt;span class="pl-c1"&gt;5&lt;/span&gt;

    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(obj.manyMany(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 5&lt;/span&gt;
    &lt;span class="pl-c1"&gt;println&lt;/span&gt;(obj.manyMany(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 5&lt;/span&gt;

    every {
        obj.manyMany(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-k"&gt;*&lt;/span&gt;varargAny {
            &lt;span class="pl-k"&gt;if&lt;/span&gt; (position &amp;lt; 3) it &lt;span class="pl-k"&gt;==&lt;/span&gt; 3 else it &lt;span class="pl-k"&gt;==&lt;/span&gt; 4
        }, 7)
    } returns 6
    
    println(obj.manyMany(5, 6, 3, 4, 7)) &lt;span class="pl-k"&gt;//&lt;/span&gt; 6
    println(obj.manyMany(5, 6, 3, 4, 4, 7)) &lt;span class="pl-k"&gt;//&lt;/span&gt; 6&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-private-functions-mocking--dynamic-calls" class="anchor" aria-hidden="true" href="#private-functions-mocking--dynamic-calls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Private functions mocking / dynamic calls&lt;/h3&gt;
&lt;p&gt;In case you have a need to mock private functions, you can do it via a dynamic call.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Car&lt;/span&gt; {
    &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;drive&lt;/span&gt;() &lt;span class="pl-k"&gt;=&lt;/span&gt; accelerate()

    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;accelerate&lt;/span&gt;() &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;going faster&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}

&lt;span class="pl-k"&gt;val&lt;/span&gt; mock &lt;span class="pl-k"&gt;=&lt;/span&gt; spyk&amp;lt;&lt;span class="pl-en"&gt;Car&lt;/span&gt;&amp;gt;(recordPrivateCalls &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)

every { mock[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;accelerate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]() } returns &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;going not so fast&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

assertEquals(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;going not so fast&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, mock.drive())

verifySequence {
    mock.drive()
    mock[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;accelerate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]()
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In case you want private calls to be verified, you should create a &lt;code&gt;spyk&lt;/code&gt; with &lt;code&gt;recordPrivateCalls = true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Additionally, a more verbose syntax allows you to get and set properties, combined with the same dynamic calls:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; mock &lt;span class="pl-k"&gt;=&lt;/span&gt; spyk(&lt;span class="pl-en"&gt;Team&lt;/span&gt;(), recordPrivateCalls &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)

every { mock getProperty &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;speed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; } returns &lt;span class="pl-c1"&gt;33&lt;/span&gt;
every { mock setProperty &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;acceleration&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; value less(&lt;span class="pl-c1"&gt;5&lt;/span&gt;) } just runs
every { mock invokeReturnsUnit &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;privateMethod&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; } just runs
every { mock invoke &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;openDoor&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; withArguments &lt;span class="pl-c1"&gt;listOf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rear&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) } returns &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;OK&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

verify { mock getProperty &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;speed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
verify { mock setProperty &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;acceleration&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; value less(&lt;span class="pl-c1"&gt;5&lt;/span&gt;) }
verify { mock invoke &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;openDoor&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; withArguments &lt;span class="pl-c1"&gt;listOf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rear&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) }&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-property-backing-fields" class="anchor" aria-hidden="true" href="#property-backing-fields"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Property backing fields&lt;/h3&gt;
&lt;p&gt;You can access the backing fields via &lt;code&gt;fieldValue&lt;/code&gt; and use &lt;code&gt;value&lt;/code&gt; for value being set.&lt;/p&gt;
&lt;p&gt;Note: in the examples below, we use &lt;code&gt;propertyType&lt;/code&gt; to specify the type of the &lt;code&gt;fieldValue&lt;/code&gt;.
This is needed because it is possible to capture the type automatically for the getter.
Use &lt;code&gt;nullablePropertyType&lt;/code&gt; to specify a nullable type.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; mock &lt;span class="pl-k"&gt;=&lt;/span&gt; spyk(&lt;span class="pl-en"&gt;MockCls&lt;/span&gt;(), recordPrivateCalls &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)

every { mock.property } answers { fieldValue &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt; }
every { mock.property &lt;span class="pl-k"&gt;=&lt;/span&gt; any() } propertyType &lt;span class="pl-c1"&gt;Int&lt;/span&gt;::&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;answers&lt;/span&gt; { fieldValue &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; value }
every { mock getProperty &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;property&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; } propertyType &lt;span class="pl-c1"&gt;Int&lt;/span&gt;::&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;answers&lt;/span&gt; { fieldValue &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt; }
every { mock setProperty &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;property&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; value any&amp;lt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt;&amp;gt;() } propertyType &lt;span class="pl-c1"&gt;Int&lt;/span&gt;::&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;answers&lt;/span&gt;  { fieldValue &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; value }
every {
    mock.property &lt;span class="pl-k"&gt;=&lt;/span&gt; any()
} propertyType &lt;span class="pl-c1"&gt;Int&lt;/span&gt;::&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;answers&lt;/span&gt; {
    fieldValue &lt;span class="pl-k"&gt;=&lt;/span&gt; value &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
} andThen {
    fieldValue &lt;span class="pl-k"&gt;=&lt;/span&gt; value &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-multiple-interfaces" class="anchor" aria-hidden="true" href="#multiple-interfaces"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multiple interfaces&lt;/h3&gt;
&lt;p&gt;Adding additional behaviours via interfaces and stubbing them:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;val&lt;/span&gt; spy &lt;span class="pl-k"&gt;=&lt;/span&gt; spyk(&lt;span class="pl-en"&gt;System&lt;/span&gt;.out, moreInterfaces &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Runnable&lt;/span&gt;::&lt;span class="pl-c1"&gt;class&lt;/span&gt;)

spy.&lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-c1"&gt;555&lt;/span&gt;)

every {
    (spy &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-en"&gt;Runnable&lt;/span&gt;).&lt;span class="pl-c1"&gt;run&lt;/span&gt;()
} answers {
    (self &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-en"&gt;PrintStream&lt;/span&gt;).&lt;span class="pl-c1"&gt;println&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Run! Run! Run!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

&lt;span class="pl-k"&gt;val&lt;/span&gt; thread &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Thread&lt;/span&gt;(spy &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-en"&gt;Runnable&lt;/span&gt;)
thread.start()
thread.join()&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-mocking-nothing" class="anchor" aria-hidden="true" href="#mocking-nothing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mocking Nothing&lt;/h3&gt;
&lt;p&gt;Nothing special here. If you have a function returning &lt;code&gt;Nothing&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;quit&lt;/span&gt;(&lt;span class="pl-smi"&gt;status&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Nothing&lt;/span&gt; {
    exitProcess(status)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then you can for example throw an exception as behaviour:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;every { quit(&lt;span class="pl-c1"&gt;1&lt;/span&gt;) } throws &lt;span class="pl-en"&gt;Exception&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;this is a test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-clearing-vs-unmocking" class="anchor" aria-hidden="true" href="#clearing-vs-unmocking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clearing vs Unmocking&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;clear - deletes internal state of objects associated with mock resulting in empty object&lt;/li&gt;
&lt;li&gt;unmock - re-assigns transformation of classes back to original state prior to mock&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-matcher-extensibility" class="anchor" aria-hidden="true" href="#matcher-extensibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Matcher extensibility&lt;/h2&gt;
&lt;p&gt;A very simple way is to create new matchers by attaching a function
to &lt;code&gt;MockKMatcherScope&lt;/code&gt; or &lt;code&gt;MockKVerificationScope&lt;/code&gt; and using the &lt;code&gt;match&lt;/code&gt; function:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    fun MockKMatcherScope.seqEq(seq: Sequence&amp;lt;String&amp;gt;) = match&amp;lt;Sequence&amp;lt;String&amp;gt;&amp;gt; {
        it.toList() == seq.toList()
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Also, it is possible to create more advanced matchers by implementing the &lt;code&gt;Matcher&lt;/code&gt; interface.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-settings-file" class="anchor" aria-hidden="true" href="#settings-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Settings file&lt;/h2&gt;
&lt;p&gt;To adjust parameters globally, there is a possibility to specify a few settings in a resource file.&lt;/p&gt;
&lt;p&gt;How to use:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a &lt;code&gt;io/mockk/settings.properties&lt;/code&gt; file in the resources.&lt;/li&gt;
&lt;li&gt;Put one of following options:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-ini"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;relaxed&lt;/span&gt;=true|false
&lt;span class="pl-k"&gt;relaxUnitFun&lt;/span&gt;=true|false
&lt;span class="pl-k"&gt;recordPrivateCalls&lt;/span&gt;=true|false&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-dsl-tables" class="anchor" aria-hidden="true" href="#dsl-tables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DSL tables&lt;/h2&gt;
&lt;p&gt;Here are a few tables to help you master the DSL.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-top-level-functions" class="anchor" aria-hidden="true" href="#top-level-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Top level functions&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mockk&amp;lt;T&amp;gt;(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;builds a regular mock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;spyk&amp;lt;T&amp;gt;()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;builds a spy using the default constructor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;spyk(obj)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;builds a spy by copying from &lt;code&gt;obj&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;slot&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;creates a capturing slot&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;every&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;starts a stubbing block&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;coEvery&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;starts a stubbing block for coroutines&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verify&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;starts a verification block&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;coVerify&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;starts a verification block for coroutines&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verifyAll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;starts a verification block that should include all calls&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;coVerifyAll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;starts a verification block that should include all calls for coroutines&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verifyOrder&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;starts a verification block that checks the order&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;coVerifyOrder&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;starts a verification block that checks the order for coroutines&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verifySequence&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;starts a verification block that checks whether all calls were made in a specified sequence&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;coVerifySequence&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;starts a verification block that checks whether all calls were made in a specified sequence for coroutines&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;excludeRecords&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;exclude some calls from being recorded&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;confirmVerified&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;confirms that all recorded calls were verified&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clearMocks&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;clears specified mocks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;registerInstanceFactory&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;allows you to redefine the way of instantiation for certain object&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mockkClass&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;builds a regular mock by passing the class as parameter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mockkObject&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;makes an object an object mock or clears it if was already transformed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;unmockkObject&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;makes an object mock back to a regular object&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mockkStatic&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;makes a static mock out of a class or clears it if it was already transformed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;unmockkStatic&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;makes a static mock back to a regular class&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clearStaticMockk&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;clears a static mock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mockkConstructor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;makes a constructor mock out of a class or clears it if it was already transformed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;unmockkConstructor&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;makes a constructor mock back to a regular class&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clearConstructorMockk&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;clears the constructor mock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;unmockkAll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;unmocks object, static and constructor mocks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;clearAllMocks&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;clears regular, object, static and constructor mocks&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-matchers" class="anchor" aria-hidden="true" href="#matchers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Matchers&lt;/h3&gt;
&lt;p&gt;By default, simple arguments are matched using &lt;code&gt;eq()&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Matcher&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;any()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches any argument&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;allAny()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;special matcher that uses &lt;code&gt;any()&lt;/code&gt; instead of &lt;code&gt;eq()&lt;/code&gt; for matchers that are provided as simple arguments&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;isNull()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;checks if the value is null&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;isNull(inverse=true)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;checks if the value is not null&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ofType(type)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;checks if the value belongs to the type&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;match { it.startsWith("string") }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches via the passed predicate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;coMatch { it.startsWith("string") }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches via the passed coroutine predicate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;matchNullable { it?.startsWith("string") }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches nullable value via the passed predicate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;coMatchNullable { it?.startsWith("string") }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches nullable value via the passed coroutine predicate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eq(value)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if the value is equal to the provided value via the &lt;code&gt;deepEquals&lt;/code&gt; function&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;eq(value, inverse=true)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if the value is not equal to the provided value via the &lt;code&gt;deepEquals&lt;/code&gt; function&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;neq(value)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if the value is not equal to the provided value via &lt;code&gt;deepEquals&lt;/code&gt; function&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;refEq(value)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if the value is equal to the provided value via reference comparison&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;refEq(value, inverse=true)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if the value is not equal to the provided value via reference comparison&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;nrefEq(value)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if the value is not equal to the provided value via reference comparison&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cmpEq(value)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if the value is equal to the provided value via the &lt;code&gt;compareTo&lt;/code&gt; function&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;less(value)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if the value is less than the provided value via the &lt;code&gt;compareTo&lt;/code&gt; function&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;more(value)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if the value is more than the provided value via the &lt;code&gt;compareTo&lt;/code&gt; function&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;less(value, andEquals=true)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if the value is less than or equal to the provided value via the &lt;code&gt;compareTo&lt;/code&gt; function&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;more(value, andEquals=true)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if the value is more than or equal to the provided value via the &lt;code&gt;compareTo&lt;/code&gt; function&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;range(from, to, fromInclusive=true, toInclusive=true)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if the value is in range via the &lt;code&gt;compareTo&lt;/code&gt; function&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;and(left, right)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;combines two matchers via a logical and&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;or(left, right)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;combines two matchers via a logical or&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;not(matcher)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;negates the matcher&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;capture(slot)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;captures a value to a &lt;code&gt;CapturingSlot&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;capture(mutableList)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;captures a value to a list&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;captureNullable(mutableList)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;captures a value to a list together with null values&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;captureLambda()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;captures a lambda&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;captureCoroutine()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;captures a coroutine&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;invoke(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;calls a matched argument&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;coInvoke(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;calls a matched argument for a coroutine&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hint(cls)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;hints the next return type in case it's gotten erased&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;anyVararg()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches any elements in a vararg&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;varargAny(matcher)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if any element is matching the matcher&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;varargAll(matcher)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if all elements are matching the matcher&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;any...Vararg()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches any elements in vararg (specific to primitive type)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;varargAny...(matcher)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if any element is matching the matcher (specific to the primitive type)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;varargAll...(matcher)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches if all elements are matching the matcher (specific to the primitive type)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;A few special matchers available in verification mode only:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Matcher&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;withArg { code }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches any value and allows to execute some code&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;withNullableArg { code }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches any nullable value and allows to execute some code&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;coWithArg { code }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches any value and allows to execute some coroutine code&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;coWithNullableArg { code }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;matches any nullable value and allows to execute some coroutine code&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-validators" class="anchor" aria-hidden="true" href="#validators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Validators&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Validator&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verify { mock.call() }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do unordered verification that a call was performed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verify(inverse=true) { mock.call() }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do unordered verification that a call was not performed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verify(atLeast=n) { mock.call() }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do unordered verification that a call was performed at least &lt;code&gt;n&lt;/code&gt; times&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verify(atMost=n) { mock.call() }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do unordered verification that a call was performed at most &lt;code&gt;n&lt;/code&gt; times&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verify(exactly=n) { mock.call() }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do unordered verification that a call was performed exactly &lt;code&gt;n&lt;/code&gt; times&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verifyAll { mock.call1(); mock.call2() }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do unordered verification that only the specified calls were executed for the mentioned mocks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verifyOrder { mock.call1(); mock.call2() }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do verification that the sequence of calls went one after another&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verifySequence { mock.call1(); mock.call2() }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do verification that only the specified sequence of calls were executed for the mentioned mocks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verify { mock wasNot Called }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do verification that a mock was not called&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verify { listOf(mock1, mock2) wasNot Called }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do verification that a list of mocks were not called&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-answers" class="anchor" aria-hidden="true" href="#answers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Answers&lt;/h3&gt;
&lt;p&gt;An Answer can be followed up by one or more additional answers.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Answer&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;returns value&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call returns a specified value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;returnsMany list&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call returns a value from the list, with subsequent calls returning the next element&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;throws ex&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call throws an exception&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;answers { code }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call answers with a code block scoped with &lt;code&gt;answer scope&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;coAnswers { code }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call answers with a coroutine code block  with &lt;code&gt;answer scope&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;answers answerObj&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call answers with an Answer object&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;answers { nothing }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call answers null&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;just Runs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call is returning Unit (returns null)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;propertyType Class&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify the type of backing field accessor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;nullablePropertyType Class&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify the type of backing field accessor as a nullable type&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-additional-answers" class="anchor" aria-hidden="true" href="#additional-answers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional answer(s)&lt;/h3&gt;
&lt;p&gt;A next answer is returned on each consequent call and the last value is persisted.
So this is similar to the &lt;code&gt;returnsMany&lt;/code&gt; semantics.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Additional answer&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;andThen value&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call returns one specified value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;andThenMany list&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call returns value from the list, returning each time next element&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;andThenThrows ex&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call throws an exception&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;andThen { code }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call answers with a code block scoped with &lt;code&gt;answer scope&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;coAndThen { code }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call answers with a coroutine code block with &lt;code&gt;answer scope&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;andThenAnswer answerObj&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call answers with an Answer object&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;andThen { nothing }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;specify that the matched call answers null&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-answer-scope" class="anchor" aria-hidden="true" href="#answer-scope"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Answer scope&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;call&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;a call object that consists of an invocation and a matcher&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;invocation&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;contains information regarding the actual function invoked&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;matcher&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;contains information regarding the matcher used to match the invocation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;self&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;reference to the object invocation made&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;method&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;reference to the function invocation made&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;args&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;reference to the arguments of invocation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;nArgs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;number of invocation argument&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;arg(n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;n-th argument&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;firstArg()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;first argument&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;secondArg()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;second argument&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;thirdArg()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;third argument&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;lastArg()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;last argument&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;captured()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;the last element in the list for convenience when capturing to a list&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;lambda&amp;lt;...&amp;gt;().invoke()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;call the captured lambda&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;coroutine&amp;lt;...&amp;gt;().coInvoke()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;call the captured coroutine&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;nothing&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;null value for returning nothing as an answer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fieldValue&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;accessor to the property backing field&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fieldValueAny&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;accessor to the property backing field with &lt;code&gt;Any?&lt;/code&gt; type&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;value&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;value being set casted to same type as the property backing field&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;valueAny&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;value being set with &lt;code&gt;Any?&lt;/code&gt; type&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-vararg-scope" class="anchor" aria-hidden="true" href="#vararg-scope"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vararg scope&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;position&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;the position of an argument in vararg array&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;nArgs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;overall count of arguments in vararg array&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-funding" class="anchor" aria-hidden="true" href="#funding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Funding&lt;/h2&gt;
&lt;p&gt;You can also support this project by becoming a sponsor. Your logo will show up here with a link to your website.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sponsors" class="anchor" aria-hidden="true" href="#sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsors&lt;/h3&gt;
&lt;a href="https://opencollective.com/mockk/sponsor/0/website" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/688e79ae82c588668a986f4feb24465c1963abc7/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6f636b6b2f73706f6e736f722f302f6176617461722e737667" data-canonical-src="https://opencollective.com/mockk/sponsor/0/avatar.svg" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://opencollective.com/mockk/sponsor/1/website" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/6d4d46629ab9a01f0798ebc0a57d7bd9093df73e/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6f636b6b2f73706f6e736f722f312f6176617461722e737667" data-canonical-src="https://opencollective.com/mockk/sponsor/1/avatar.svg" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content-backers" class="anchor" aria-hidden="true" href="#backers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backers&lt;/h3&gt;
&lt;p&gt;Thank you to all our backers! &lt;g-emoji class="g-emoji" alias="pray" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png"&gt;🙏&lt;/g-emoji&gt;&lt;/p&gt;
&lt;a href="https://opencollective.com/mockk#backers" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/1e7fa5e0babc6be0603eb9bda258fa1bcee5033c/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6f636b6b2f6261636b6572732e7376673f77696474683d383930" data-canonical-src="https://opencollective.com/mockk/backers.svg?width=890" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h3&gt;
&lt;p&gt;This project exists thanks to all the people who contribute.&lt;/p&gt;
&lt;a href="https://github.com/mockk/mockk/graphs/contributors"&gt;
  &lt;img src="https://camo.githubusercontent.com/8c224a0ec70d6faa7bfa5940f512212eb10902c6/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6d6f636b6b2f636f6e7472696275746f72732e7376673f77696474683d383930" data-canonical-src="https://opencollective.com/mockk/contributors.svg?width=890" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help&lt;/h2&gt;
&lt;p&gt;To ask questions, please use Stack Overflow or Gitter.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Chat/Gitter: &lt;a href="https://gitter.im/mockk-io/Lobby" rel="nofollow"&gt;https://gitter.im/mockk-io/Lobby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Stack Overflow: &lt;a href="http://stackoverflow.com/questions/tagged/mockk" rel="nofollow"&gt;http://stackoverflow.com/questions/tagged/mockk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To report bugs, please use the GitHub project.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Project Page: &lt;a href="https://github.com/mockk/mockk"&gt;https://github.com/mockk/mockk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Reporting Bugs: &lt;a href="https://github.com/mockk/mockk/issues"&gt;https://github.com/mockk/mockk/issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>mockk</author><guid isPermaLink="false">https://github.com/mockk/mockk</guid><pubDate>Fri, 31 Jan 2020 00:22:00 GMT</pubDate></item><item><title>Kotlin/dokka #23 in Kotlin, This week</title><link>https://github.com/Kotlin/dokka</link><description>&lt;p&gt;&lt;i&gt;Documentation Engine for Kotlin&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-dokka----" class="anchor" aria-hidden="true" href="#dokka----"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;dokka  &lt;a href="https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2457c980f81ed19481871fcda0c94991c01b3e49/68747470733a2f2f6a622e67672f6261646765732f6f6666696369616c2e737667" alt="official JetBrains project" data-canonical-src="https://jb.gg/badges/official.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://teamcity.jetbrains.com/viewType.html?buildTypeId=Kotlin_Dokka_DokkaAntMavenGradle&amp;amp;branch_KotlinTools_Dokka=%3Cdefault%3E&amp;amp;tab=buildTypeStatusDiv" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0ca8ddde6c18ff5a4f4653b879eef572de651605/68747470733a2f2f7465616d636974792e6a6574627261696e732e636f6d2f6170702f726573742f6275696c64732f6275696c64547970653a2869643a4b6f746c696e5f446f6b6b615f446f6b6b61416e744d6176656e477261646c65292f73746174757349636f6e" alt="TeamCity (build status)" data-canonical-src="https://teamcity.jetbrains.com/app/rest/builds/buildType:(id:Kotlin_Dokka_DokkaAntMavenGradle)/statusIcon" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://bintray.com/kotlin/dokka/dokka/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c30aecf3cfe47703a0797b8a2582544b1986a5c1/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f6b6f746c696e2f646f6b6b612f646f6b6b612f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/kotlin/dokka/dokka/images/download.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Dokka is a documentation engine for Kotlin, performing the same function as javadoc for Java.
Just like Kotlin itself, Dokka fully supports mixed-language Java/Kotlin projects. It understands
standard Javadoc comments in Java files and &lt;a href="https://kotlinlang.org/docs/reference/kotlin-doc.html" rel="nofollow"&gt;KDoc comments&lt;/a&gt; in Kotlin files,
and can generate documentation in multiple formats including standard Javadoc, HTML and Markdown.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-dokka" class="anchor" aria-hidden="true" href="#using-dokka"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using dokka&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-using-the-gradle-plugin" class="anchor" aria-hidden="true" href="#using-the-gradle-plugin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using the Gradle plugin&lt;/h3&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.dokka:dokka-gradle-plugin:&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;dokka_version&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
}
repositories {
    jcenter() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or maven { url 'https://dl.bintray.com/kotlin/dokka' }&lt;/span&gt;
}

apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;org.jetbrains.dokka&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or using the plugins block:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;plugins {
    id &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;org.jetbrains.dokka&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; version &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;0.10.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}
repositories {
    jcenter() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or maven { url 'https://dl.bintray.com/kotlin/dokka' }&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The plugin adds a task named &lt;code&gt;dokka&lt;/code&gt; to the project.&lt;/p&gt;
&lt;p&gt;If you encounter any problems when migrating from older versions of Dokka, please see the &lt;a href="https://github.com/Kotlin/dokka/wiki/faq"&gt;FAQ&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Minimal dokka configuration:&lt;/p&gt;
&lt;p&gt;Groovy&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;dokka {
    outputFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;html&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; 
    outputDirectory &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$b&lt;span class="pl-smi"&gt;uildDir&lt;/span&gt;&lt;/span&gt;/dokka&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Kotlin&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;tasks {
    &lt;span class="pl-k"&gt;val&lt;/span&gt; dokka by getting(&lt;span class="pl-smi"&gt;DokkaTask&lt;/span&gt;::&lt;span class="pl-c1"&gt;class&lt;/span&gt;) {
        outputFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        outputDirectory &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$buildDir/dokka&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#output_formats"&gt;Output formats&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The available configuration options for single platform are shown below:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;dokka {
    outputFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;html&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    outputDirectory &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$b&lt;span class="pl-smi"&gt;uildDir&lt;/span&gt;&lt;/span&gt;/javadoc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; In case of a Gradle multiproject build, you can include subprojects here to get merged documentation&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Note however, that you have to have the Kotlin plugin available in the root project and in the subprojects&lt;/span&gt;
    subProjects &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;subproject1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;subproject2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Used for disabling auto extraction of sources and platforms in both multi-platform and single-platform modes&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; When set to true, subProject and kotlinTasks are also omitted&lt;/span&gt;
    disableAutoconfiguration &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; 

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Use default or set to custom path to cache directory&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; to enable package-list caching&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; When this is set to default, caches are stored in $USER_HOME/.cache/dokka&lt;/span&gt;
    cacheRoot &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;default&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; 
    
    configuration {
        moduleName &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;data&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Use to include or exclude non public members.&lt;/span&gt;
        includeNonPublic &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do not output deprecated members. Applies globally, can be overridden by packageOptions&lt;/span&gt;
        skipDeprecated &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; 
       
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Emit warnings about not documented members. Applies globally, also can be overridden by packageOptions&lt;/span&gt;
        reportUndocumented &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; 
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do not create index pages for empty packages&lt;/span&gt;
        skipEmptyPackages &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; 
     
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This is a list of platform names that will be shown in the final result. See the "Platforms" section of this readme&lt;/span&gt;
        targets &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;JVM&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]  

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Platform used for code analysis. See the "Platforms" section of this readme&lt;/span&gt;
        platform &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;JVM&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;  
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Property used for manual addition of files to the classpath&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This property does not override the classpath collected automatically but appends to it&lt;/span&gt;
        classpath &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;File&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$b&lt;span class="pl-smi"&gt;uildDir&lt;/span&gt;&lt;/span&gt;/other.jar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)]
    
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; By default, sourceRoots are taken from Kotlin Plugin, subProjects and kotlinTasks, following roots will be appended to them&lt;/span&gt;
        sourceRoots &lt;span class="pl-k"&gt;=&lt;/span&gt; [files(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;src/main/kotlin&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)]
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; List of files with module and package documentation&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; https://kotlinlang.org/docs/reference/kotlin-doc.html#module-and-package-documentation&lt;/span&gt;
        includes &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;packages.md&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;extra.md&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
    
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; List of files or directories containing sample code (referenced with @sample tags)&lt;/span&gt;
        samples &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;samples/basic.kt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;samples/advanced.kt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; By default, sourceRoots are taken from Kotlin Plugin, subProjects and kotlinTasks, following roots will be appended to them&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Full form sourceRoot declaration&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Repeat for multiple sourceRoots&lt;/span&gt;
        sourceRoot {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Path to a source root&lt;/span&gt;
            path &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; 
        }
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; These tasks will be used to determine source directories and classpath&lt;/span&gt;
        kotlinTasks {
            defaultKotlinTasks() &lt;span class="pl-k"&gt;+&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:some:otherCompileKotlin&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, project(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;another&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;.&lt;/span&gt;compileKotlin]
        }

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Specifies the location of the project source code on the Web.&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If provided, Dokka generates "source" links for each declaration.&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Repeat for multiple mappings&lt;/span&gt;
        sourceLink {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Unix based directory relative path to the root of the project (where you execute gradle respectively). &lt;/span&gt;
            path &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src/main/kotlin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or simply "./"&lt;/span&gt;
             
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; URL showing where the source code can be accessed through the web browser&lt;/span&gt;
            url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/cy6erGn0m/vertx3-lang-kotlin/blob/master/src/main/kotlin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;remove src/main/kotlin if you use "./" above&lt;/span&gt;
            
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Suffix which is used to append the line number to the URL. Use #L for GitHub&lt;/span&gt;
            lineSuffix &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#L&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Used for linking to JDK documentation&lt;/span&gt;
        jdkVersion &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt; 

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Disable linking to online kotlin-stdlib documentation&lt;/span&gt;
        noStdlibLink &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Disable linking to online JDK documentation&lt;/span&gt;
        noJdkLink &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; 
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Allows linking to documentation of the project's dependencies (generated with Javadoc or Dokka)&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Repeat for multiple links&lt;/span&gt;
        externalDocumentationLink {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Root URL of the generated documentation to link with. The trailing slash is required!&lt;/span&gt;
            url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;URL&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://example.com/docs/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If package-list file is located in non-standard location&lt;/span&gt;
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; packageListUrl = new URL("file:///home/user/localdocs/package-list") &lt;/span&gt;
        }
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Allows to customize documentation generation options on a per-package basis&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Repeat for multiple packageOptions&lt;/span&gt;
        perPackageOption {
            prefix &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kotlin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; will match kotlin and all sub-packages of it&lt;/span&gt;
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; All options are optional, default values are below:&lt;/span&gt;
            skipDeprecated &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
            reportUndocumented &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Emit warnings about not documented members &lt;/span&gt;
            includeNonPublic &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
        }
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Suppress a package&lt;/span&gt;
        perPackageOption {
            prefix &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kotlin.internal&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; will match kotlin.internal and all sub-packages of it&lt;/span&gt;
            suppress &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-multiplatform" class="anchor" aria-hidden="true" href="#multiplatform"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multiplatform&lt;/h4&gt;
&lt;p&gt;Since version 0.10.0 dokka supports multiplatform projects. For a general understanding how a multiplatform documentation is generated, please consult the &lt;a href="https://github.com/Kotlin/dokka/wiki/faq"&gt;FAQ&lt;/a&gt;.
In the multiplatform mode, instead of using the &lt;code&gt;configuration&lt;/code&gt; block, you should use a &lt;code&gt;multiplatform&lt;/code&gt; block with inner blocks for each platform.
The &lt;code&gt;configuration&lt;/code&gt; block's parameters belong to those inner blocks, which can be named arbitrarly, however if you want to use source roots and classpath provided by Kotlin Multiplatform plugin,
they must have the same names as in the Kotlin Multiplatform plugin. See an example below:&lt;/p&gt;
&lt;p&gt;Groovy&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;kotlin { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Kotlin Multiplatform plugin configuration&lt;/span&gt;
    jvm() 
    js(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;customName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Define a js platform named "customName" If you want to generate docs for it, you need to have this name in dokka configuration below &lt;/span&gt;
}

dokka {
    outputDirectory &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$b&lt;span class="pl-smi"&gt;uildDir&lt;/span&gt;&lt;/span&gt;/dokka&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    outputFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

    multiplatform {
        customName { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The same name as in Kotlin Multiplatform plugin, so the sources are fetched automatically&lt;/span&gt;
            includes &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;packages.md&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;extra.md&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
            samples &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;samples/basic.kt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;samples/advanced.kt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
        } 
        
        differentName { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Different name, so source roots, classpath and platform must be passed explicitly.&lt;/span&gt;
            targets &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;JVM&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
            platform &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jvm&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            sourceRoot {
                path &lt;span class="pl-k"&gt;=&lt;/span&gt; kotlin&lt;span class="pl-k"&gt;.&lt;/span&gt;sourceSets&lt;span class="pl-k"&gt;.&lt;/span&gt;jvmMain&lt;span class="pl-k"&gt;.&lt;/span&gt;kotlin&lt;span class="pl-k"&gt;.&lt;/span&gt;srcDirs[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
            }
            sourceRoot {
                path &lt;span class="pl-k"&gt;=&lt;/span&gt; kotlin&lt;span class="pl-k"&gt;.&lt;/span&gt;sourceSets&lt;span class="pl-k"&gt;.&lt;/span&gt;commonMain&lt;span class="pl-k"&gt;.&lt;/span&gt;kotlin&lt;span class="pl-k"&gt;.&lt;/span&gt;srcDirs[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
            }
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Kotlin&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;kotlin {  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Kotlin Multiplatform plugin configuration&lt;/span&gt;
    jvm()
    js(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;customName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

&lt;span class="pl-k"&gt;val&lt;/span&gt; dokka by getting(&lt;span class="pl-smi"&gt;DokkaTask&lt;/span&gt;::&lt;span class="pl-c1"&gt;class&lt;/span&gt;) {
        outputDirectory &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$buildDir/dokka&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        outputFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

        multiplatform { 
            &lt;span class="pl-k"&gt;val&lt;/span&gt; customName by creating { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The same name as in Kotlin Multiplatform plugin, so the sources are fetched automatically&lt;/span&gt;
                includes &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;listOf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;packages.md&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;extra.md&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                samples &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;listOf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;samples/basic.kt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;samples/advanced.kt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            }

            register(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;differentName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Different name, so source roots must be passed explicitly&lt;/span&gt;
                targets &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;listOf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;JVM&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                platform &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jvm&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                sourceRoot {
                    path &lt;span class="pl-k"&gt;=&lt;/span&gt; kotlin.sourceSets.getByName(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jvmMain&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).kotlin.srcDirs.first().toString()
                }
                sourceRoot {
                    path &lt;span class="pl-k"&gt;=&lt;/span&gt; kotlin.sourceSets.getByName(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;commonMain&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).kotlin.srcDirs.first().toString()
                }
            }
        }
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For convenience, there is also a reserved block called &lt;code&gt;global&lt;/code&gt;, which is a top-level configuration of &lt;code&gt;perPackageOptions&lt;/code&gt;, &lt;code&gt;externalDocumentationLinks&lt;/code&gt;, and &lt;code&gt;sourceLinks&lt;/code&gt; shared by every platform. Eg.&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;dokka {
    multiplatform {
        global { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; perPackageOptions, sourceLinks and externalDocumentationLinks from here will be copied to every other platform (jvm and js in eg.)&lt;/span&gt;
            perPackageOption {
                prefix &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.somePackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                suppress &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
            }
            perPackageOption { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; You can repeat this block for multiple perPackageOptions&lt;/span&gt;
                prefix &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kotlin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; 
                skipDeprecated &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
                reportUndocumented &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
                includeNonPublic &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
            }
            sourceLink {
                path &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src/main/kotlin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; 
                url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/cy6erGn0m/vertx3-lang-kotlin/blob/master/src/main/kotlin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; 
                lineSuffix &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#L&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            }
            externalDocumentationLink {
                url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;URL&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://example.com/docs/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            }
       }
       js {}
       jvm {}
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The parameters from the &lt;code&gt;global&lt;/code&gt; block are appended to all the other platform configurations (in the example - &lt;code&gt;js&lt;/code&gt; and &lt;code&gt;jvm&lt;/code&gt;) and cannot be overriden.&lt;/p&gt;
&lt;p&gt;Note that &lt;code&gt;javadoc&lt;/code&gt; output format cannot be used with multiplatform.&lt;/p&gt;
&lt;p&gt;To generate the documentation, use the &lt;code&gt;dokka&lt;/code&gt; Gradle task:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./gradlew dokka&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;More dokka tasks can be added to a project like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;task dokkaMarkdown(&lt;span class="pl-c1"&gt;type&lt;/span&gt;: &lt;span class="pl-k"&gt;org.jetbrains.dokka.gradle.DokkaTask&lt;/span&gt;) {
    outputFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;markdown&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    outputDirectory &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$b&lt;span class="pl-smi"&gt;uildDir&lt;/span&gt;&lt;/span&gt;/markdown&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please see the &lt;a href="https://github.com/JetBrains/kotlin-examples/tree/master/gradle/dokka-gradle-example"&gt;Dokka Gradle example project&lt;/a&gt; for an example.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-dokka-runtime" class="anchor" aria-hidden="true" href="#dokka-runtime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dokka Runtime&lt;/h4&gt;
&lt;p&gt;If you are using Gradle plugin and you want to use a custom version of dokka, you can do it by setting &lt;code&gt;dokkaRuntime&lt;/code&gt; configuration:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;buildscript {
    &lt;span class="pl-k"&gt;..&lt;/span&gt;.
}

apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;org.jetbrains.dokka&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

repositories {
    jcenter()
}

dependencies {
    dokkaRuntime &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.dokka:dokka-fatjar:0.10.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}

dokka {
    outputFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;html&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    outputDirectory &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$b&lt;span class="pl-smi"&gt;uildDir&lt;/span&gt;&lt;/span&gt;/dokkaHtml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To use your Fat Jar, just set the path to it:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;buildscript {
    &lt;span class="pl-k"&gt;..&lt;/span&gt;.
}

apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;org.jetbrains.dokka&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

repositories {
    jcenter()
}

dependencies {
    dokkaRuntime files(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/fatjar/dokka-fatjar-0.10.0.jar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

dokka {
    outputFormat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;html&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    outputDirectory &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$b&lt;span class="pl-smi"&gt;uildDir&lt;/span&gt;&lt;/span&gt;/dokkaHtml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h4&gt;
&lt;p&gt;If you encounter any problems, please see the &lt;a href="https://github.com/Kotlin/dokka/wiki/faq"&gt;FAQ&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-android" class="anchor" aria-hidden="true" href="#android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android&lt;/h4&gt;
&lt;p&gt;Since version 0.10.0 the separate Android plugin is merged with the default one.
Just make sure you apply the plugin after
&lt;code&gt;com.android.library&lt;/code&gt; and &lt;code&gt;kotlin-android&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org.jetbrains.dokka:dokka-gradle-plugin:&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;dokka_version&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
}
repositories {
    jcenter()
}
apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.android.library&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;kotlin-android&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;org.jetbrains.dokka&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is also a &lt;code&gt;noAndroidSdkLink&lt;/code&gt; configuration parameter that works similar to &lt;code&gt;noJdkLink&lt;/code&gt; and &lt;code&gt;noStdlibLink&lt;/code&gt;
By default the variant documented by dokka is the first release variant encountered. If you want to change that,
you can disable the autoconfiguration and configure dokka manually.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-the-maven-plugin" class="anchor" aria-hidden="true" href="#using-the-maven-plugin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using the Maven plugin&lt;/h3&gt;
&lt;p&gt;The Maven plugin does not support multiplatform projects.&lt;/p&gt;
&lt;p&gt;The Maven plugin is available in JCenter. You need to add the JCenter repository to the list of plugin repositories if it's not there:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;pluginRepositories&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;pluginRepository&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;jcenter&amp;lt;/&lt;span class="pl-ent"&gt;id&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;name&lt;/span&gt;&amp;gt;JCenter&amp;lt;/&lt;span class="pl-ent"&gt;name&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;url&lt;/span&gt;&amp;gt;https://jcenter.bintray.com/&amp;lt;/&lt;span class="pl-ent"&gt;url&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;pluginRepository&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;pluginRepositories&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Minimal Maven configuration is&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.jetbrains.dokka&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;dokka-maven-plugin&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${dokka.version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;executions&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;phase&lt;/span&gt;&amp;gt;pre-site&amp;lt;/&lt;span class="pl-ent"&gt;phase&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;dokka&amp;lt;/&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;executions&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default files will be generated in &lt;code&gt;target/dokka&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The following goals are provided by the plugin:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dokka:dokka&lt;/code&gt; - generate HTML documentation in Dokka format (showing declarations in Kotlin syntax);&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dokka:javadoc&lt;/code&gt; - generate HTML documentation in JavaDoc format (showing declarations in Java syntax);&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dokka:javadocJar&lt;/code&gt; - generate a .jar file with JavaDoc format documentation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The available configuration options are shown below:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.jetbrains.dokka&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;dokka-maven-plugin&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${dokka.version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;executions&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;phase&lt;/span&gt;&amp;gt;pre-site&amp;lt;/&lt;span class="pl-ent"&gt;phase&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;dokka&amp;lt;/&lt;span class="pl-ent"&gt;goal&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;goals&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;execution&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;executions&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
    
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Set to true to skip dokka task, default: false &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;skip&lt;/span&gt;&amp;gt;false&amp;lt;/&lt;span class="pl-ent"&gt;skip&lt;/span&gt;&amp;gt;
    
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Default: ${project.artifactId} &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;moduleName&lt;/span&gt;&amp;gt;data&amp;lt;/&lt;span class="pl-ent"&gt;moduleName&lt;/span&gt;&amp;gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; See list of possible formats below &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;outputFormat&lt;/span&gt;&amp;gt;html&amp;lt;/&lt;span class="pl-ent"&gt;outputFormat&lt;/span&gt;&amp;gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Default: ${project.basedir}/target/dokka &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;outputDir&lt;/span&gt;&amp;gt;some/out/dir&amp;lt;/&lt;span class="pl-ent"&gt;outputDir&lt;/span&gt;&amp;gt;
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Use default or set to custom path to cache directory to enable package-list caching. &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; When set to default, caches stored in $USER_HOME/.cache/dokka &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;cacheRoot&lt;/span&gt;&amp;gt;default&amp;lt;/&lt;span class="pl-ent"&gt;cacheRoot&lt;/span&gt;&amp;gt;

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; List of '.md' files with package and module docs &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; https://kotlinlang.org/docs/reference/kotlin-doc.html#module-and-package-documentation &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;includes&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;include&lt;/span&gt;&amp;gt;packages.md&amp;lt;/&lt;span class="pl-ent"&gt;include&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;include&lt;/span&gt;&amp;gt;extra.md&amp;lt;/&lt;span class="pl-ent"&gt;include&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;includes&lt;/span&gt;&amp;gt;
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; List of sample roots &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;samples&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;dir&lt;/span&gt;&amp;gt;src/test/samples&amp;lt;/&lt;span class="pl-ent"&gt;dir&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;samples&lt;/span&gt;&amp;gt;
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Used for linking to JDK, default: 6 &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;jdkVersion&lt;/span&gt;&amp;gt;6&amp;lt;/&lt;span class="pl-ent"&gt;jdkVersion&lt;/span&gt;&amp;gt;

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Do not output deprecated members, applies globally, can be overridden by packageOptions &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;skipDeprecated&lt;/span&gt;&amp;gt;false&amp;lt;/&lt;span class="pl-ent"&gt;skipDeprecated&lt;/span&gt;&amp;gt; 
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Emit warnings about not documented members, applies globally, also can be overridden by packageOptions &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;reportUndocumented&lt;/span&gt;&amp;gt;true&amp;lt;/&lt;span class="pl-ent"&gt;reportUndocumented&lt;/span&gt;&amp;gt;             
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Do not create index pages for empty packages &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;skipEmptyPackages&lt;/span&gt;&amp;gt;true&amp;lt;/&lt;span class="pl-ent"&gt;skipEmptyPackages&lt;/span&gt;&amp;gt; 
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Short form list of sourceRoots, by default, set to ${project.compileSourceRoots} &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;sourceDirectories&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;dir&lt;/span&gt;&amp;gt;src/main/kotlin&amp;lt;/&lt;span class="pl-ent"&gt;dir&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;sourceDirectories&lt;/span&gt;&amp;gt;
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Full form list of sourceRoots &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;sourceRoots&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;root&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;path&lt;/span&gt;&amp;gt;src/main/kotlin&amp;lt;/&lt;span class="pl-ent"&gt;path&lt;/span&gt;&amp;gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; See platforms section of documentation &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
                &amp;lt;&lt;span class="pl-ent"&gt;platforms&lt;/span&gt;&amp;gt;JVM&amp;lt;/&lt;span class="pl-ent"&gt;platforms&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;root&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;sourceRoots&lt;/span&gt;&amp;gt;
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Specifies the location of the project source code on the Web. If provided, Dokka generates "source" links&lt;/span&gt;
&lt;span class="pl-c"&gt;             for each declaration. &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;sourceLinks&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;link&lt;/span&gt;&amp;gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Source directory &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
                &amp;lt;&lt;span class="pl-ent"&gt;path&lt;/span&gt;&amp;gt;${project.basedir}/src/main/kotlin&amp;lt;/&lt;span class="pl-ent"&gt;path&lt;/span&gt;&amp;gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; URL showing where the source code can be accessed through the web browser &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
                &amp;lt;&lt;span class="pl-ent"&gt;url&lt;/span&gt;&amp;gt;https://github.com/cy6erGn0m/vertx3-lang-kotlin/blob/master/src/main/kotlin&amp;lt;/&lt;span class="pl-ent"&gt;url&lt;/span&gt;&amp;gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; //remove src/main/kotlin if you use "./" above &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt;Suffix which is used to append the line number to the URL. Use #L for GitHub &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
                &amp;lt;&lt;span class="pl-ent"&gt;lineSuffix&lt;/span&gt;&amp;gt;#L&amp;lt;/&lt;span class="pl-ent"&gt;lineSuffix&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;link&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;sourceLinks&lt;/span&gt;&amp;gt;
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Disable linking to online kotlin-stdlib documentation  &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;noStdlibLink&lt;/span&gt;&amp;gt;false&amp;lt;/&lt;span class="pl-ent"&gt;noStdlibLink&lt;/span&gt;&amp;gt;
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Disable linking to online JDK documentation &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;noJdkLink&lt;/span&gt;&amp;gt;false&amp;lt;/&lt;span class="pl-ent"&gt;noJdkLink&lt;/span&gt;&amp;gt;
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Allows linking to documentation of the project's dependencies (generated with Javadoc or Dokka) &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;externalDocumentationLinks&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;link&lt;/span&gt;&amp;gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Root URL of the generated documentation to link with. The trailing slash is required! &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
                &amp;lt;&lt;span class="pl-ent"&gt;url&lt;/span&gt;&amp;gt;https://example.com/docs/&amp;lt;/&lt;span class="pl-ent"&gt;url&lt;/span&gt;&amp;gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; If package-list file located in non-standard location &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; &amp;lt;packageListUrl&amp;gt;file:///home/user/localdocs/package-list&amp;lt;/packageListUrl&amp;gt; &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;link&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;externalDocumentationLinks&lt;/span&gt;&amp;gt;

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Allows to customize documentation generation options on a per-package basis &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;perPackageOptions&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;packageOptions&lt;/span&gt;&amp;gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Will match kotlin and all sub-packages of it &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
                &amp;lt;&lt;span class="pl-ent"&gt;prefix&lt;/span&gt;&amp;gt;kotlin&amp;lt;/&lt;span class="pl-ent"&gt;prefix&lt;/span&gt;&amp;gt;
                
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; All options are optional, default values are below: &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
                &amp;lt;&lt;span class="pl-ent"&gt;skipDeprecated&lt;/span&gt;&amp;gt;false&amp;lt;/&lt;span class="pl-ent"&gt;skipDeprecated&lt;/span&gt;&amp;gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Emit warnings about not documented members  &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
                &amp;lt;&lt;span class="pl-ent"&gt;reportUndocumented&lt;/span&gt;&amp;gt;true&amp;lt;/&lt;span class="pl-ent"&gt;reportUndocumented&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;includeNonPublic&lt;/span&gt;&amp;gt;false&amp;lt;/&lt;span class="pl-ent"&gt;includeNonPublic&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;packageOptions&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;perPackageOptions&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please see the &lt;a href="https://github.com/JetBrains/kotlin-examples/tree/master/maven/dokka-maven-example"&gt;Dokka Maven example project&lt;/a&gt; for an example.&lt;/p&gt;
&lt;p&gt;&lt;a href="#output_formats"&gt;Output formats&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-the-ant-task" class="anchor" aria-hidden="true" href="#using-the-ant-task"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using the Ant task&lt;/h3&gt;
&lt;p&gt;The Ant task definition is also contained in the dokka-fatjar.jar referenced above. Here's an example usage:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;project&lt;/span&gt; &lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Dokka&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;default&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;document&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;typedef&lt;/span&gt; &lt;span class="pl-e"&gt;resource&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dokka-antlib.xml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;classpath&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dokka-fatjar.jar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;/&amp;gt;

  &amp;lt;&lt;span class="pl-ent"&gt;target&lt;/span&gt; &lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;document&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;dokka&lt;/span&gt; &lt;span class="pl-e"&gt;format&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;outputDir&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;doc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;/&amp;gt;
  &amp;lt;/&lt;span class="pl-ent"&gt;target&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;project&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The Ant task supports the following attributes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;outputDir&lt;/code&gt; - the output directory where the documentation is generated&lt;/li&gt;
&lt;li&gt;&lt;code&gt;format&lt;/code&gt; - the output format (see the list of supported formats below)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cacheRoot&lt;/code&gt; - Use &lt;code&gt;default&lt;/code&gt; or set to custom path to cache directory to enable package-list caching. When set to &lt;code&gt;default&lt;/code&gt;, caches stored in $USER_HOME/.cache/dokka&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Inside the &lt;code&gt;dokka&lt;/code&gt; tag you can create another tags named &lt;code&gt;&amp;lt;passconfig/&amp;gt;&lt;/code&gt; that support the following attributes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;classpath&lt;/code&gt; - list of directories or .jar files to include in the classpath (used for resolving references)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;samples&lt;/code&gt; - list of directories containing sample code (documentation for those directories is not generated but declarations from them can be referenced using the &lt;code&gt;@sample&lt;/code&gt; tag)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;moduleName&lt;/code&gt; - the name of the module being documented (used as the root directory of the generated documentation)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;include&lt;/code&gt; - names of files containing the documentation for the module and individual packages&lt;/li&gt;
&lt;li&gt;&lt;code&gt;skipDeprecated&lt;/code&gt; - if set, deprecated elements are not included in the generated documentation&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jdkVersion&lt;/code&gt; - version for linking to JDK&lt;/li&gt;
&lt;li&gt;&lt;code&gt;analysisPlatform="jvm"&lt;/code&gt; - platform used for analysing sourceRoots, see the &lt;a href="#platforms"&gt;platforms&lt;/a&gt; section&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;sourceRoot path="src" /&amp;gt;&lt;/code&gt; - source root&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;packageOptions prefix="kotlin" includeNonPublic="false" reportUndocumented="true" skipDeprecated="false"/&amp;gt;&lt;/code&gt; -
Per package options for package &lt;code&gt;kotlin&lt;/code&gt; and sub-packages of it&lt;/li&gt;
&lt;li&gt;&lt;code&gt;noStdlibLink&lt;/code&gt; - disable linking to online kotlin-stdlib documentation&lt;/li&gt;
&lt;li&gt;&lt;code&gt;noJdkLink&lt;/code&gt; - disable linking to online JDK documentation&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;externalDocumentationLink url="https://example.com/docs/" packageListUrl="file:///home/user/localdocs/package-list"/&amp;gt;&lt;/code&gt; -
linking to external documentation, packageListUrl should be used if package-list located not in standard location&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;target value="JVM"/&amp;gt;&lt;/code&gt; - see the &lt;a href="#platforms"&gt;platforms&lt;/a&gt; section&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-using-the-command-line" class="anchor" aria-hidden="true" href="#using-the-command-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using the Command Line&lt;/h3&gt;
&lt;p&gt;To run Dokka from the command line, download the &lt;a href="https://github.com/Kotlin/dokka/releases/download/0.10.0/dokka-fatjar-0.10.0.jar"&gt;Dokka jar&lt;/a&gt;.
To generate documentation, run the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;java -jar dokka-fatjar.jar &amp;lt;arguments&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Dokka supports the following command line arguments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-output&lt;/code&gt; - the output directory where the documentation is generated&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-format&lt;/code&gt; - the &lt;a href="#output-formats"&gt;output format&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-cacheRoot&lt;/code&gt; - use &lt;code&gt;default&lt;/code&gt; or set to custom path to cache directory to enable package-list caching. When set to &lt;code&gt;default&lt;/code&gt;, caches stored in $USER_HOME/.cache/dokka&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-pass&lt;/code&gt; - (repeatable) - configuration for single analyser pass. Following this argument, you can pass other arguments:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-src&lt;/code&gt; - (repeatable) - source file or directory (allows many paths separated by the system path separator)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-classpath&lt;/code&gt; - (repeatable) - directory or .jar file to include in the classpath (used for resolving references)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-sample&lt;/code&gt; - (repeatable) - directory containing a sample code (documentation for those directories is not generated but declarations from them can be referenced using the &lt;code&gt;@sample&lt;/code&gt; tag)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-module&lt;/code&gt; - the name of the module being documented (used as the root directory of the generated documentation)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-include&lt;/code&gt; - (repeatable) - names of files containing the documentation for the module and individual packages&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-skipDeprecated&lt;/code&gt; - if set, deprecated elements are not included in the generated documentation&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-reportUndocumented&lt;/code&gt; - warn about undocumented members&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-skipEmptyPackages&lt;/code&gt; - do not create index pages for empty packages&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-packageOptions&lt;/code&gt; - list of package options in format &lt;code&gt;prefix,-deprecated,-privateApi,+warnUndocumented;prefix, ...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-links&lt;/code&gt; - external documentation links in format &lt;code&gt;url^packageListUrl^^url2...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-srcLink&lt;/code&gt; - (repeatable) - mapping between a source directory and a Web site for browsing the code in format &lt;code&gt;&amp;lt;path&amp;gt;=&amp;lt;url&amp;gt;[#lineSuffix]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-noStdlibLink&lt;/code&gt; - disable linking to online kotlin-stdlib documentation&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-noJdkLink&lt;/code&gt; - disable linking to online JDK documentation&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-jdkVersion&lt;/code&gt; - version of JDK to use for linking to JDK JavaDoc&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-analysisPlatform&lt;/code&gt; - platform used for analysis, see the &lt;a href="#platforms"&gt;Platforms&lt;/a&gt; section&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-target&lt;/code&gt; - (repeatable) - generation target&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-output-formats" class="anchor" aria-hidden="true" href="#output-formats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Output formats&lt;a name="user-content-output_formats"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;html&lt;/code&gt; - minimalistic html format used by default, Java classes are translated to Kotlin&lt;/li&gt;
&lt;li&gt;&lt;code&gt;javadoc&lt;/code&gt; - looks like normal Javadoc, Kotlin classes are translated to Java&lt;/li&gt;
&lt;li&gt;&lt;code&gt;html-as-java&lt;/code&gt; - looks like &lt;code&gt;html&lt;/code&gt;, but Kotlin classes are translated to Java&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown&lt;/code&gt; - markdown structured as &lt;code&gt;html&lt;/code&gt;, Java classes are translated to Kotlin
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gfm&lt;/code&gt; - GitHub flavored markdown&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jekyll&lt;/code&gt; - Jekyll compatible markdown&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kotlin-website*&lt;/code&gt; - internal format used for documentation on &lt;a href="https://kotlinlang.org" rel="nofollow"&gt;kotlinlang.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-platforms" class="anchor" aria-hidden="true" href="#platforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Platforms&lt;a name="user-content-platforms"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Dokka can annotate elements with special &lt;code&gt;platform&lt;/code&gt; block with platform requirements
Example result and usage can be found on &lt;a href="https://kotlinlang.org/api/latest/jvm/stdlib/" rel="nofollow"&gt;kotlinlang.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Each multiplatform closure has two properties: &lt;code&gt;platform&lt;/code&gt; and &lt;code&gt;targets&lt;/code&gt;. If you use autoconfiguration, those are filled automatically.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;targets&lt;/code&gt; property is a list of platform names that will be shown in the final result. Note that the value of this property
doesn't affect analysis of source code, it just changes the result. You can think of this as a &lt;code&gt;name&lt;/code&gt; property&lt;/p&gt;
&lt;p&gt;&lt;code&gt;platform&lt;/code&gt; property is used for the analysis of source roots. Available values are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;jvm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;native&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;common&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building-dokka" class="anchor" aria-hidden="true" href="#building-dokka"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building dokka&lt;/h2&gt;
&lt;p&gt;Dokka is built with Gradle. To build it, use &lt;code&gt;./gradlew build&lt;/code&gt;.
Alternatively, open the project directory in IntelliJ IDEA and use the IDE to build and run dokka.&lt;/p&gt;
&lt;p&gt;Here's how to import and configure Dokka in IntelliJ IDEA:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Select "Open" from the IDEA welcome screen, or File &amp;gt; Open if a project is
already open&lt;/li&gt;
&lt;li&gt;Select the directory with your clone of Dokka
&lt;ul&gt;
&lt;li&gt;Note: IDEA may have an error after the project is initally opened; it is OK
to ignore this as the next step will address this error&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;After IDEA opens the project, select File &amp;gt; New &amp;gt; Module from existing sources
and select the &lt;code&gt;build.gradle&lt;/code&gt; file from the root directory of your Dokka clone&lt;/li&gt;
&lt;li&gt;Use the default options and select "OK"&lt;/li&gt;
&lt;li&gt;After Dokka is loaded into IDEA, open the Gradle tool window (View &amp;gt; Tool
Windows &amp;gt; Gradle) and click on the top left "Refresh all Gradle projects"
button&lt;/li&gt;
&lt;li&gt;Verify the following project settings.  In File &amp;gt; Settings &amp;gt; Build, Execution,
Deployment &amp;gt; Build Tools &amp;gt; Gradle &amp;gt; Runner:
&lt;ul&gt;
&lt;li&gt;Ensure "Delegate IDE build/run actions to gradle" is checked&lt;/li&gt;
&lt;li&gt;"Gradle Test Runner" should be selected in the "Run tests using" drop-down
menu&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Note: After closing and re-opening the project, IDEA may give an error
message: "Error Loading Project: Cannot load 3 modules".  Open up the details
of the error, and click "Remove Selected", as these module &lt;code&gt;.iml&lt;/code&gt; files are
safe to remove.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Kotlin</author><guid isPermaLink="false">https://github.com/Kotlin/dokka</guid><pubDate>Fri, 31 Jan 2020 00:23:00 GMT</pubDate></item><item><title>ktorio/ktor #24 in Kotlin, This week</title><link>https://github.com/ktorio/ktor</link><description>&lt;p&gt;&lt;i&gt;Framework for quickly creating connected applications in Kotlin with minimal effort&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ff8d543d1bc5951292d40f105ca2a96d6eeee1fa/687474703a2f2f6b746f722e696f2f6173736574732f696d616765732f6b746f725f6c6f676f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/ff8d543d1bc5951292d40f105ca2a96d6eeee1fa/687474703a2f2f6b746f722e696f2f6173736574732f696d616765732f6b746f725f6c6f676f2e706e67" alt="Ktor" width="600" data-canonical-src="http://ktor.io/assets/images/ktor_logo.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c558aa8079c9095e7e944ab3db6d8e69ea01af97/687474703a2f2f6a622e67672f6261646765732f6f6666696369616c2e737667" alt="Official JetBrains project" data-canonical-src="http://jb.gg/badges/official.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bintray.com/kotlin/ktor/ktor/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/76c5686c960e934f6ab17a4d8d0ff52afbeba163/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f6b6f746c696e2f6b746f722f6b746f722f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/kotlin/ktor/ktor/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;
&lt;a href="https://teamcity.jetbrains.com/viewType.html?buildTypeId=KotlinTools_Ktor_BuildGradle&amp;amp;branch_KotlinTools_Ktor=%3Cdefault%3E&amp;amp;tab=buildTypeStatusDiv" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3396da43c1cfe89882cbec1818376f2d7e6ef4d0/68747470733a2f2f696d672e736869656c64732e696f2f7465616d636974792f687474702f7465616d636974792e6a6574627261696e732e636f6d2f732f4b6f746c696e546f6f6c735f4b746f725f4275696c64477261646c652e737667" alt="TeamCity Build" data-canonical-src="https://img.shields.io/teamcity/http/teamcity.jetbrains.com/s/KotlinTools_Ktor_BuildGradle.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8e7da7b6b632d5ef4bce9a550a5d5cfe400ca1fe/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652532304c6963656e7365253230322e302d626c75652e7376673f7374796c653d666c6174" alt="GitHub License" data-canonical-src="https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ktor is a framework for quickly creating web applications in Kotlin with minimal effort.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;io.ktor.server.netty.*&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;io.ktor.routing.*&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;io.ktor.application.*&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;io.ktor.http.*&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;io.ktor.response.*&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;io.ktor.server.engine.*&lt;/span&gt;

&lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-smi"&gt;args&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&amp;gt;) {
    embeddedServer(&lt;span class="pl-en"&gt;Netty&lt;/span&gt;, &lt;span class="pl-c1"&gt;8080&lt;/span&gt;) {
        routing {
            get(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
                call.respondText(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello, world!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;ContentType&lt;/span&gt;.&lt;span class="pl-en"&gt;Text&lt;/span&gt;.&lt;span class="pl-en"&gt;Html&lt;/span&gt;)
            }
        }
    }.start(wait &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Runs embedded web server on &lt;code&gt;localhost:8080&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Installs routing and responds with &lt;code&gt;Hello, world!&lt;/code&gt; when receiving GET http request for root path&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-principles" class="anchor" aria-hidden="true" href="#principles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Principles&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-unopinionated" class="anchor" aria-hidden="true" href="#unopinionated"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unopinionated&lt;/h4&gt;
&lt;p&gt;Ktor Framework doesn't impose a lot of constraints on what technology a project is going to use – logging,
templating, messaging, persistent, serializing, dependency injection, etc.
Sometimes it may be required to implement a simple interface, but usually it is a matter of writing a
transforming or intercepting function. Features are installed into application using unified &lt;em&gt;interception&lt;/em&gt; mechanism
which allows building arbitrary pipelines.&lt;/p&gt;
&lt;p&gt;Ktor Application can be hosted in any servlet container with Servlet 3.0+ API support such as Tomcat, or
standalone using Netty or Jetty. Support for other hosts can be added through the unified hosting API.&lt;/p&gt;
&lt;p&gt;Ktor APIs are mostly functions calls with lambdas. Thanks to Kotlin DSL capabilities, code looks declarative.
Application composition is entirely developer's choice – with functions or classes, using dependency injection
framework or doing it all manually in main function.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-asynchronous" class="anchor" aria-hidden="true" href="#asynchronous"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Asynchronous&lt;/h4&gt;
&lt;p&gt;Ktor pipeline machinery and API is utilising Kotlin coroutines to provide easy-to-use asynchronous
programming model without making it too cumbersome. All host implementations are using asynchronous I/O facilities
to avoid thread blocking.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-testable" class="anchor" aria-hidden="true" href="#testable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testable&lt;/h4&gt;
&lt;p&gt;Ktor application can be hosted in a special test environment, which emulates to some
extent web server without actually doing any networking. It provides easy way to test an application without mocking
too much stuff, and still achieve good performance while validating application calls. Integration tests with real
embedded web server are of course possible, too.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Please visit &lt;a href="http://ktor.io" rel="nofollow"&gt;ktor.io&lt;/a&gt; for Quick Start and detailed explanations of features, usage and machinery.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Getting started with &lt;a href="http://ktor.io/quickstart/gradle.html" rel="nofollow"&gt;Gradle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Getting started with &lt;a href="http://ktor.io/quickstart/maven.html" rel="nofollow"&gt;Maven&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Getting started with &lt;a href="http://ktor.io/quickstart/intellij-idea.html" rel="nofollow"&gt;IDEA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-inspirations" class="anchor" aria-hidden="true" href="#inspirations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inspirations&lt;/h2&gt;
&lt;p&gt;Kotlin web frameworks such as Wasabi and Kara, which are currently deprecated.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reporting-security-vulnerabilities" class="anchor" aria-hidden="true" href="#reporting-security-vulnerabilities"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting Security Vulnerabilities&lt;/h2&gt;
&lt;p&gt;If you find a security vulnerability in Ktor, we kindly request that instead of using our public issue tracker, you instead reach out to the JetBrains security team via our &lt;a href="https://www.jetbrains.com/legal/terms/responsible-disclosure.html" rel="nofollow"&gt;responsible disclosure process&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Please see &lt;a href="CONTRIBUTING.md"&gt;the contribution guide&lt;/a&gt; before contirbuting and &lt;a href="CODE_OF_CONDUCT.md"&gt;Code of conduct&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ktorio</author><guid isPermaLink="false">https://github.com/ktorio/ktor</guid><pubDate>Fri, 31 Jan 2020 00:24:00 GMT</pubDate></item><item><title>corda/samples #25 in Kotlin, This week</title><link>https://github.com/corda/samples</link><description>&lt;p&gt;&lt;i&gt;A set of sample CorDapps created by R3 to show developers how to implement specific functionality. These samples are all Apache 2.0 licensed, so feel free to use them as the basis for your own CorDapps. &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;This repository contains sample CorDapps created to show developers how to implement specific functionality, one per folder. These samples are all Apache 2.0 licensed, so feel free to use them as the basis for your own CorDapps.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-general" class="anchor" aria-hidden="true" href="#general"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;General&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;yo-cordapp&lt;/code&gt;: A simple CorDapp that allows you to send Yo’s! to other Corda nodes&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cordapp-example&lt;/code&gt;: Models IOUs (I Owe yoUs) between Corda nodes (also in Java)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;obligation-cordapp&lt;/code&gt;: A more complex version of the IOU CorDapp (also in Java) Handles the transfer and settlement of obligations Retains participant anonymity using confidential identities (i.e. anonymous public keys)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;negotiation-cordapp&lt;/code&gt;: Shows how multi-party negotiation is handled on the Corda ledger, in the absence of an API for user interaction&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ping-pong&lt;/code&gt;: Demonstrates the messaging functionality within the flow framework.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-observers" class="anchor" aria-hidden="true" href="#observers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Observers&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;observable-states&lt;/code&gt;: Use the observers feature to allow regulators to track regulated activity&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-attachments" class="anchor" aria-hidden="true" href="#attachments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Attachments&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;blacklist&lt;/code&gt;: Use an attachment to blacklist specific nodes from signing agreements&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-confidential-identities" class="anchor" aria-hidden="true" href="#confidential-identities"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Confidential identities&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;whistleblower&lt;/code&gt;: Use confidential identities (i.e. anonymous public keys) to whistle-blow on other nodes anonymously&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-oracles" class="anchor" aria-hidden="true" href="#oracles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Oracles&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;oracle-example&lt;/code&gt;: Use an oracle to attest to the prime-ness of integers in transaction&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-scheduled-activities" class="anchor" aria-hidden="true" href="#scheduled-activities"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Scheduled activities&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;heartbeat&lt;/code&gt;: Use scheduled states to cause your node to emit a heartbeat every second&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-queryable-state" class="anchor" aria-hidden="true" href="#queryable-state"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Queryable State&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;queryable-states&lt;/code&gt;: Persisting ContractState information to custom database table using QueryableState.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-accessing-external-data" class="anchor" aria-hidden="true" href="#accessing-external-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Accessing external data&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;flow-http&lt;/code&gt;: Make an HTTP request in a flow to retrieve the Bitcoin readme from a webserver&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flow-db&lt;/code&gt;: Access the node’s database in flows to store and read cryptocurrency values&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-upgrading-cordapps" class="anchor" aria-hidden="true" href="#upgrading-cordapps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Upgrading Cordapps&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;explicit-cordapp-upgrades&lt;/code&gt;: A client for upgrading contracts using the Contract Upgrade Flow&lt;/li&gt;
&lt;li&gt;&lt;code&gt;implicit-cordapp-upgrades&lt;/code&gt;: An app with a number of different versions, showing how to carry out various upgrade procedures&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-interacting-with-your-node" class="anchor" aria-hidden="true" href="#interacting-with-your-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Interacting with your node&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-web-servers" class="anchor" aria-hidden="true" href="#web-servers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Web servers&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pigtail&lt;/code&gt;: A node web-server using Braid and Node.js&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spring-webserver&lt;/code&gt;: A node web-server using Spring that provides generic REST endpoints for interacting with a node via RPC and can be extended to work with specific CorDapps&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-command-line-clients" class="anchor" aria-hidden="true" href="#command-line-clients"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command-line clients&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;corda-nodeinfo&lt;/code&gt;: A command-line client for retrieving information from a running node Useful for checking that a node is running and is accessible from another host via RPC&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-reference-states" class="anchor" aria-hidden="true" href="#reference-states"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference States&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;reference-states&lt;/code&gt;: A cordapp demonstrating the use of Reference States to extend the IOU &lt;code&gt;cordapp-example&lt;/code&gt; cordapp&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>corda</author><guid isPermaLink="false">https://github.com/corda/samples</guid><pubDate>Fri, 31 Jan 2020 00:25:00 GMT</pubDate></item></channel></rss>