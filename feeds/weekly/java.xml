<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Java, This week</title><link>https://github.com/trending/java?since=weekly</link><description>The top repositories on GitHub for java, measured weekly</description><pubDate>Tue, 28 Jan 2020 01:12:53 GMT</pubDate><lastBuildDate>Tue, 28 Jan 2020 01:12:53 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>theonedev/onedev #1 in Java, This week</title><link>https://github.com/theonedev/onedev</link><description>&lt;p&gt;&lt;i&gt;Super Easy All-In-One DevOps Platform&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-super-easy-all-in-one-devops-platform" class="anchor" aria-hidden="true" href="#super-easy-all-in-one-devops-platform"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Super Easy All-In-One DevOps Platform&lt;/h1&gt;
&lt;p&gt;With Issue Tracking, Git Management, Pull Request, and Build Farm. Simple yet Powerful.&lt;/p&gt;
&lt;div&gt;
| &lt;a href="https://code.onedev.io/projects/onedev-manual/blob/master/pages/5min-tutorial.md" rel="nofollow"&gt;A Five Minutes Tutorial&lt;/a&gt; 
| &lt;a href="https://code.onedev.io/projects/onedev-manual/blob/master/pages/installation-guide.md" rel="nofollow"&gt;Installation Guide&lt;/a&gt; 
| &lt;a href="https://code.onedev.io/projects/onedev-manual/blob/master/pages/usage-scenarios.md" rel="nofollow"&gt;Usage Scenarios&lt;/a&gt;
| &lt;a href="https://code.onedev.io/projects/onedev-manual/blob/master/pages/contribution-guide.md" rel="nofollow"&gt;Contribution Guide&lt;/a&gt;
| &lt;a href="https://code.onedev.io/projects/onedev-manual/blob" rel="nofollow"&gt;All Documentations&lt;/a&gt; |
&lt;/div&gt;
&lt;p&gt;
&lt;/p&gt;&lt;h3&gt;&lt;a id="user-content-docker-first-kubernetes-native-build-farm" class="anchor" aria-hidden="true" href="#docker-first-kubernetes-native-build-farm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker First Kubernetes Native Build Farm&lt;/h3&gt;
&lt;p&gt;Trivial to set up a build farm to run massive CI builds as pods in Kubernetes. No agents or runners required. Transparent support for Linux and Windows containers.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="features/job-executor.png"&gt;&lt;img src="features/job-executor.png" alt="Job Executor" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-create-build-spec-in-a-breeze" class="anchor" aria-hidden="true" href="#create-build-spec-in-a-breeze"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Create Build Spec in a Breeze&lt;/h3&gt;
&lt;p&gt;No YAML files to write. No complex grammars to remember. Create build spec for your projects instantly without learning.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="features/cispec.gif"&gt;&lt;img src="features/cispec.gif" alt="Cispec" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-flexible-build-workflow-and-pipeline" class="anchor" aria-hidden="true" href="#flexible-build-workflow-and-pipeline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flexible Build Workflow and Pipeline&lt;/h3&gt;
&lt;p&gt;Conditional build parameters. Create matrix builds by combining different parameters. Connect jobs to create pipelines. Run jobs concurrently to speed up processing. Run jobs automatically upon certain events, or manually by authorized users&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="features/build-workflow.gif"&gt;&lt;img src="features/build-workflow.gif" alt="Build Workflow" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-custom-issue-states-and-fields" class="anchor" aria-hidden="true" href="#custom-issue-states-and-fields"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Issue States and Fields&lt;/h3&gt;
&lt;p&gt;Add custom issue states and fields. Configure field dependencies. Transit issue state automatically upon certain events, or manually by authorized users&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="features/custom-issue.gif"&gt;&lt;img src="features/custom-issue.gif" alt="Custom Issue" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-auto-refreshing-issue-boards" class="anchor" aria-hidden="true" href="#auto-refreshing-issue-boards"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Auto-Refreshing Issue Boards&lt;/h3&gt;
&lt;p&gt;Define issue boards to show issues in columns based on values of specified field. Perform issue operations without leaving the board. Refresh board automatically to reflect most recent issue state.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="features/issue-boards.gif"&gt;&lt;img src="features/issue-boards.gif" alt="Issue Boards" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-symbol-search-and-navigation" class="anchor" aria-hidden="true" href="#symbol-search-and-navigation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Symbol Search and Navigation&lt;/h3&gt;
&lt;p&gt;Language aware symbol search. Symbol navigation in source code and diff. Outline display and search. Works for every commit. Currently supports Java, JavaScript, C, C++, CSharp, Go, PHP, Python, CSS, SCSS, LESS and R.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="features/symbol-search.gif"&gt;&lt;img src="features/symbol-search.gif" alt="Symbol Search" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-code-discussions-and-comprehensions" class="anchor" aria-hidden="true" href="#code-discussions-and-comprehensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Discussions and Comprehensions&lt;/h3&gt;
&lt;p&gt;Instant and lightweight code discussions on code and diff blocks without creating pull requests. Discussions stay with the code to help code comprehension even if file is changed or renamed.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="features/code-comments.gif"&gt;&lt;img src="features/code-comments.gif" alt="Code Comments" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-flexible-pull-request-review-policies" class="anchor" aria-hidden="true" href="#flexible-pull-request-review-policies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flexible Pull Request Review Policies&lt;/h3&gt;
&lt;p&gt;Enforce pull request review with branch protections. Specify required reviewers and builds for desired file patterns.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="features/branch-protection.gif"&gt;&lt;img src="features/branch-protection.gif" alt="Branch Protection" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-painless-pull-request-review" class="anchor" aria-hidden="true" href="#painless-pull-request-review"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Painless Pull Request Review&lt;/h3&gt;
&lt;p&gt;Review pull request commits as a whole or one by one. Organize code discussions in threads to show changes since last review explicitly&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="features/increment-review.gif"&gt;&lt;img src="features/increment-review.gif" alt="Increment Review" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-powerful-query-language" class="anchor" aria-hidden="true" href="#powerful-query-language"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Powerful Query Language&lt;/h3&gt;
&lt;p&gt;Perform sophisticated queries against projects, commits, builds, issues, pull requests or code comments with a powerful query language. Save query for quick access. Subscribe to saved query to get notified of interesting events.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="features/powerful-query.gif"&gt;&lt;img src="features/powerful-query.gif" alt="Powerful Query" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-deep-integration-of-code-issue-pull-request-and-build" class="anchor" aria-hidden="true" href="#deep-integration-of-code-issue-pull-request-and-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deep Integration of Code, Issue, Pull Request and Build&lt;/h3&gt;
&lt;p&gt;Configure issues to transit to desired state upon commit, build or pull request events. See commit and pull request events in issue activities. Query fixed issues between builds. Find builds or pull requests fixing particular issues or commits&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="features/issue-query.gif"&gt;&lt;img src="features/issue-query.gif" alt="Issue Query" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-fine-grained-permission-control" class="anchor" aria-hidden="true" href="#fine-grained-permission-control"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fine Grained Permission Control&lt;/h3&gt;
&lt;p&gt;Define permission schemes best suiting your development workflow. For instance, you may specify who can change particular source folder, who can assign issues, who can run release builds, or who can access build log, etc.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="features/role.png"&gt;&lt;img src="features/role.png" alt="Role" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>theonedev</author><guid isPermaLink="false">https://github.com/theonedev/onedev</guid><pubDate>Tue, 28 Jan 2020 00:01:00 GMT</pubDate></item><item><title>alibaba/COLA #2 in Java, This week</title><link>https://github.com/alibaba/COLA</link><description>&lt;p&gt;&lt;i&gt;Clean Object-oriented &amp; Layered Architecture&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-cola-20架构" class="anchor" aria-hidden="true" href="#cola-20架构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;COLA 2.0架构&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;COLA是Clean Object-Oriented and Layered Architecture的缩写，代表“整洁面向对象分层架构”，也叫“可乐”架构，目前COLA已经发展到&lt;a href="https://blog.csdn.net/significantfrank/article/details/100074716" rel="nofollow"&gt;COLA 2.0&lt;/a&gt;。&lt;/strong&gt;  需要访问老版本，请使用&lt;a href="https://github.com/alibaba/COLA/tree/COLA1.0"&gt;COLA 1.0 TAG&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关于COLA 2.0的更多信息，请关注微信公众号：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/4bfe15a1bf8d5d68c4d262aedc381cc01c722b3a/68747470733a2f2f617461322d696d672e636e2d68616e677a686f752e6f73732d7075622e616c6979756e2d696e632e636f6d2f39343334643330613264623463363033366531626133376265353562326336652e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/4bfe15a1bf8d5d68c4d262aedc381cc01c722b3a/68747470733a2f2f617461322d696d672e636e2d68616e677a686f752e6f73732d7075622e616c6979756e2d696e632e636f6d2f39343334643330613264623463363033366531626133376265353562326336652e6a7067" alt="qrcode_60.jpg" data-canonical-src="https://ata2-img.cn-hangzhou.oss-pub.aliyun-inc.com/9434d30a2db4c6036e1ba37be55b2c6e.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;也可以购买我的新书&lt;a href="https://detail.tmall.com/item.htm?id=610042416451" rel="nofollow"&gt;《代码精进之路：从码农到工匠》&lt;/a&gt;，里面有关于COLA比较详细的描述和使用。&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-项目说明" class="anchor" aria-hidden="true" href="#项目说明"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;项目说明&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;COLA既是框架，也是架构。创建COLA的主要目的是为应用架构提供一套简单的可以复制、可以理解、可以落地、可以控制复杂性的”指导和约束"。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;框架部分主要是以二方库的形式被应用依赖和使用。&lt;/li&gt;
&lt;li&gt;架构部分主要是提供了创建符合COLA要求的应用Archetype。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-cola框架" class="anchor" aria-hidden="true" href="#cola框架"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;COLA框架&lt;/h2&gt;
&lt;p&gt;COLA作为框架主要是提供应用和架构需要的通用组件支撑，比如对CQRS和扩展点功能的支持。COLA框架主要由cola-framework这个项目来实现。
在这个项目里面包含3个Module：cola-core, cola-common和cola-test。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cola-core" class="anchor" aria-hidden="true" href="#cola-core"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;cola-core&lt;/h3&gt;
&lt;p&gt;该Module是整个框架的核心，里面的主要功能和Package如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;com
└── alibaba
    └── cola
        ├── assembler  \\提供Assembler标准
        ├── boot \\这是框架的核心启动包，负责框架组件的注册、发现
        ├── command  \\提供Command标准
        ├── common
        ├── context  \\提供框架执行所需要的上下文
        ├── domain  \\提供Domain Entity标准
        ├── event
        ├── exception \\提供Exception标准
        ├── extension  \\负责扩展机制中的重要概念-扩展(Extension)的定义和执行
        ├── logger  \\提供DIP的日志接口
        ├── repository  \\提供仓储（Repository）的标准
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-cola-common" class="anchor" aria-hidden="true" href="#cola-common"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;cola-common&lt;/h3&gt;
&lt;p&gt;该Module提供了框架中Client Object, Entity Object和Data Object的定义，二方库会依赖该Module。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cola-test" class="anchor" aria-hidden="true" href="#cola-test"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;cola-test&lt;/h3&gt;
&lt;p&gt;该Module主要是提供一些开发测试的工具，可以使用TDD来进行开发。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-cola架构" class="anchor" aria-hidden="true" href="#cola架构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;COLA架构&lt;/h2&gt;
&lt;p&gt;COLA作为架构，组要是制定了一套指导和约束，并将这套规范沉淀成Archetype。以便通过Archetype可以快速的生成符合COLA规范的应用。满足COLA的应用是一个有清晰的依赖关系的分层架构，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c66955b4a775cdee09d78c9dc4bd40363ea629e4/68747470733a2f2f617461322d696d672e636e2d68616e677a686f752e6f73732d7075622e616c6979756e2d696e632e636f6d2f61333362383062636163356563373364306431333538643662343961313139632e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/c66955b4a775cdee09d78c9dc4bd40363ea629e4/68747470733a2f2f617461322d696d672e636e2d68616e677a686f752e6f73732d7075622e616c6979756e2d696e632e636f6d2f61333362383062636163356563373364306431333538643662343961313139632e706e67" alt="image.png" data-canonical-src="https://ata2-img.cn-hangzhou.oss-pub.aliyun-inc.com/a33b80bcac5ec73d0d1358d6b49a119c.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我们提供了两个Archetype，分别是cola-archetype-service和cola-archetype-web&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cola-archetype-service" class="anchor" aria-hidden="true" href="#cola-archetype-service"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;cola-archetype-service&lt;/h3&gt;
&lt;p&gt;用来生成纯后端应用（没有Controller），生成应用的命令为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mvn archetype:generate  -DgroupId=com.alibaba.demo -DartifactId=demo -Dversion=1.0.0-SNAPSHOT -Dpackage=com.alibaba.demo -DarchetypeArtifactId=cola-framework-archetype-service -DarchetypeGroupId=com.alibaba.cola -DarchetypeVersion=2.0.0
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-cola-archetype-web" class="anchor" aria-hidden="true" href="#cola-archetype-web"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;cola-archetype-web&lt;/h3&gt;
&lt;p&gt;用来生成Web后端应用（有Controller），生成应用的命令为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mvn archetype:generate  -DgroupId=com.alibaba.demo -DartifactId=demo -Dversion=1.0.0-SNAPSHOT -Dpackage=com.alibaba.demo -DarchetypeArtifactId=cola-framework-archetype-web -DarchetypeGroupId=com.alibaba.cola -DarchetypeVersion=2.0.0
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-如何使用cola" class="anchor" aria-hidden="true" href="#如何使用cola"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;如何使用COLA&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-第一步生成cola应用" class="anchor" aria-hidden="true" href="#第一步生成cola应用"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;第一步：生成COLA应用&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1、使用Archetype生成应用：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;直接运行上面提供的Archetype命令就可以生成应用，如果你的Remote Maven Repository里面没有Archetype的Jar包，也可以自己下载Archetype到本地，然后本地运行 mvn install安装。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、 检查应用里的模块和组件：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果命令执行成功的话，我们可以看到如下的代码结构，&lt;strong&gt;它们就是COLA应用架构。&lt;/strong&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/9b9b4f39926038a5fa16501990318856fd62f7cc/68747470733a2f2f617461322d696d672e636e2d68616e677a686f752e6f73732d7075622e616c6979756e2d696e632e636f6d2f32373536396266396436353666383961333265313864396566313563383563362e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/9b9b4f39926038a5fa16501990318856fd62f7cc/68747470733a2f2f617461322d696d672e636e2d68616e677a686f752e6f73732d7075622e616c6979756e2d696e632e636f6d2f32373536396266396436353666383961333265313864396566313563383563362e706e67" alt="image.png" data-canonical-src="https://ata2-img.cn-hangzhou.oss-pub.aliyun-inc.com/27569bf9d656f89a32e18d9ef15c85c6.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-第二步运行demo" class="anchor" aria-hidden="true" href="#第二步运行demo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;第二步：运行Demo&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1、进入在第一步中生成的应用目录。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、启动SpringBoot：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先在demo目录下运行mvn install（如果不想运行测试，可以加上-DskipTests参数）。然后进入start目录，执行mvn spring-boot:run。
运行成功的话，可以看到SpringBoot启动成功的界面。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、 执行测试：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;生成的应用中，已经实现了一个简单的Rest请求，可以在浏览器中输入 &lt;a href="http://localhost:8080/customer?name=World" rel="nofollow"&gt;http://localhost:8080/customer?name=World&lt;/a&gt; 进行测试。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4、查看运行日志：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;请求执行成功的话，可以在浏览器中的返回值中看到："customerName":"Hello, World"。同时观察启动SpringBoot的控制台，可以看到LoggerInterceptor打印出来的日志。&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>alibaba</author><guid isPermaLink="false">https://github.com/alibaba/COLA</guid><pubDate>Tue, 28 Jan 2020 00:02:00 GMT</pubDate></item><item><title>phodal/migration #3 in Java, This week</title><link>https://github.com/phodal/migration</link><description>&lt;p&gt;&lt;i&gt;《系统重构与迁移指南》手把手教你分析、评估现有系统、制定重构策略、探索可行重构方案、搭建测试防护网、进行系统架构重构、服务架构重构、模块重构、代码重构、数据库重构、重构后的架构守护&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;// 版本：v0.1.0&lt;/p&gt;
&lt;p&gt;// 作者：Phodal Huang&lt;/p&gt;
&lt;p&gt;（PS 1：考虑到内容的重复度和读者一定会懂得 Google，对于部分的内容，我只编写标题。）&lt;/p&gt;
&lt;p&gt;（PS 2：部分内容可以在书上找到对应的内容，我只会给个书名）&lt;/p&gt;
&lt;p&gt;（PS 3：我在寒冷的北方杭州，写下了此指南）&lt;/p&gt;
&lt;p&gt;Phodal 手把手教你分析、评估现有系统、制定重构策略、探索可行重构方案、搭建测试防护网、进行系统架构重构、服务架构重构、模块重构、代码重构、数据库重构、重构后的架构守护……。&lt;/p&gt;
&lt;p&gt;对就是这些，但是还没完呢。&lt;/p&gt;
&lt;p&gt;指南中所包含的书单：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《重构与模式》&lt;/li&gt;
&lt;li&gt;《设计模式：可复用面向对象软件的基础》&lt;/li&gt;
&lt;li&gt;《重构：改善既有代码的设计》&lt;/li&gt;
&lt;li&gt;《领域驱动设计：软件核心复杂性应对之道》&lt;/li&gt;
&lt;li&gt;《修改代码的艺术：构建易维护代码的 9 条最佳实践》&lt;/li&gt;
&lt;li&gt;《代码整洁之道》&lt;/li&gt;
&lt;li&gt;《架构整洁之道》&lt;/li&gt;
&lt;li&gt;《数据库重构》&lt;/li&gt;
&lt;li&gt;《遗留系统重构指南》&lt;/li&gt;
&lt;li&gt;《前端架构：从入门到微前端》&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-系统重构与迁移指南" class="anchor" aria-hidden="true" href="#系统重构与迁移指南"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://migration.ink/" rel="nofollow"&gt;系统重构与迁移指南&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;软件开发总成本 = 开发成本 + 维护成本；软件维护成本 = 理解成本 + 修改成本 + 测试成本 + 部署成本。—— Ken Beck&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最新版本内容，请访问：&lt;a href="https://migration.ink/" rel="nofollow"&gt;https://migration.ink/&lt;/a&gt;，或者 &lt;a href="https://github.com/phodal/migration"&gt;https://github.com/phodal/migration&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;模型与原则：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/to-ddd.png"&gt;&lt;img src="images/to-ddd.png" alt="To DDD" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;流程：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/refactoring-process.png"&gt;&lt;img src="images/refactoring-process.png" alt="重构流程" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;索引：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/toc.jpg"&gt;&lt;img src="images/toc.jpg" alt="Index" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;目录：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E5%86%8D%E8%AF%B4%E9%81%97%E7%95%99%E7%B3%BB%E7%BB%9F%E9%87%8D%E6%9E%84"&gt;再说遗留系统重构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%B8%BA%E4%BB%80%E4%B9%88%E9%87%8D%E6%9E%84%EF%BC%9F"&gt;为什么重构？&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E7%9A%84%E5%8A%A8%E6%9C%BA"&gt;重构的动机&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E4%B8%8D%E4%B8%80%E5%AE%9A%E8%83%BD%E5%B8%A6%E6%9D%A5%E4%BB%80%E4%B9%88%EF%BC%9F"&gt;重构不一定能带来什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E6%98%AF%E4%B8%80%E7%A7%8D%E6%96%87%E5%8C%96"&gt;重构是一种文化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%A4%A7%E8%A7%84%E6%A8%A1%E9%87%8D%E6%9E%84%E7%9A%84%E6%97%B6%E6%9C%BA"&gt;大规模重构的时机&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%AF%B4%E6%B8%85%E9%87%8D%E6%9E%84%E7%9A%84%E4%BB%B7%E5%80%BC"&gt;说清重构的价值&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%B3%BB%E7%BB%9F%E9%87%8D%E6%9E%84%E6%A8%A1%E5%BC%8F%E4%B8%8E%E5%8E%9F%E5%88%99"&gt;系统重构模式与原则&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E6%A8%A1%E5%BC%8F%EF%BC%9Aipdca"&gt;重构模式：IPDCA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%9B%9B%E7%BA%A7%E9%87%8D%E6%9E%84"&gt;四级重构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%B0%8F%E6%AD%A5%E5%89%8D%E8%BF%9B"&gt;小步前进&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#git--%E5%B7%A5%E4%BD%9C%E6%B5%81"&gt;Git 工作流&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#master-%E6%9C%BA%E5%88%B6"&gt;Master 机制&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pr-%E6%9C%BA%E5%88%B6"&gt;PR 机制&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%BB%BA%E7%AB%8B%E8%BF%9C%E6%99%AF%E4%B8%8E%E6%96%B9%E5%90%91"&gt;建立远景与方向&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E6%8B%89%E9%80%9A%EF%BC%9A%E5%AF%B9%E9%BD%90%E7%9B%AE%E6%A0%87"&gt;拉通：对齐目标&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%98%8E%E7%A1%AE%E6%BD%9C%E5%9C%A8%E9%A3%8E%E9%99%A9"&gt;明确潜在风险&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BA%BA%E8%AF%84%E4%BC%B0"&gt;人评估&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E8%8C%83%E5%9B%B4"&gt;重构范围&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BA%A7%E5%87%BA%E7%89%A9"&gt;产出物&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#kpi-%E5%BA%A6%E9%87%8F"&gt;KPI 度量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E5%BB%BA%E8%A7%84%E8%8C%83"&gt;重建规范&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%9B%A2%E9%98%9F%E8%B5%8B%E8%83%BD"&gt;团队赋能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%8E%9F%E5%88%99%E4%B8%8E%E6%A8%A1%E5%BC%8F"&gt;原则与模式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E8%AF%84%E4%BC%B0%E4%B8%8E%E5%BA%A6%E9%87%8F"&gt;重构评估与度量&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E8%AF%86%E5%88%AB%E6%8A%80%E6%9C%AF%E5%80%BA%E5%8A%A1"&gt;识别技术债务&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E6%8A%80%E6%9C%AF%E5%80%BA%E9%A3%8E%E6%9A%B4"&gt;技术债风暴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%9E%B6%E6%9E%84%E8%AF%84%E4%BC%B0%EF%BC%9A%E6%8A%80%E6%9C%AF%E9%A9%B1%E5%8A%A8-vs-%E4%B8%9A%E5%8A%A1%E9%A9%B1%E5%8A%A8"&gt;架构评估：技术驱动 vs 业务驱动&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BB%A3%E7%A0%81%E8%AF%84%E4%BC%B0%EF%BC%9A%E6%94%B6%E9%9B%86-bad-smell"&gt;代码评估：收集 bad smell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%94%B6%E9%9B%86-todo"&gt;收集 Todo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%B5%8B%E8%AF%95%E5%92%8C%E6%96%87%E6%A1%A3%E8%AF%84%E4%BC%B0"&gt;测试和文档评估&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%A1%B9%E7%9B%AE%E8%AF%84%E4%BC%B0"&gt;项目评估&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%BC%96%E5%86%99%E5%B7%A5%E5%85%B7%E8%AF%84%E4%BC%B0"&gt;编写工具评估&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BB%A3%E7%A0%81%E8%AF%84%E4%BC%B0%E5%B7%A5%E5%85%B7"&gt;代码评估工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%9C%9F%E5%AE%9E%E7%9A%84%E6%B5%8B%E8%AF%95%E8%A6%86%E7%9B%96%E7%8E%87"&gt;真实的测试覆盖率&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%8F%AF%E6%B5%8B%E8%AF%95%E6%80%A7%E8%AF%84%E4%BC%B0"&gt;可测试性评估&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%BA%A6%E9%87%8F"&gt;度量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%AF%BB%E6%89%BE%E4%B8%93%E4%B8%9A%E4%BA%BA%E5%A3%AB"&gt;寻找专业人士&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E5%87%86%E5%85%A5%E6%9D%A1%E4%BB%B6"&gt;重构准入条件&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E5%B7%A5%E5%85%B7%E5%87%86%E5%A4%87"&gt;工具准备&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E7%9C%8B%E6%9D%BF"&gt;重构看板&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6"&gt;版本控制&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%87%AA%E5%8A%A8%E5%8C%96%E9%87%8D%E6%9E%84%E5%B7%A5%E5%85%B7"&gt;自动化重构工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E7%8E%AF%E5%A2%83"&gt;持续集成环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%AE%B0%E5%BD%95"&gt;记录&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%8E%A2%E7%B4%A2%E6%80%A7%E9%87%8D%E6%9E%84%EF%BC%9A%E5%8F%AF%E8%A1%8C%E6%96%B9%E6%A1%88"&gt;探索性重构：可行方案&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E5%87%86%E5%A4%87%E7%9F%A5%E8%AF%86%EF%BC%9A%E5%9D%8F%E5%91%B3%E9%81%93%E7%9A%84%E6%A8%A1%E5%BC%8F"&gt;准备知识：坏味道的模式&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#c4-%E6%A8%A1%E5%9E%8B"&gt;C4 模型&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%8E%A2%E7%B4%A2%E6%A8%A1%E5%BC%8F"&gt;探索模式&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#1-%E4%BB%8E%E5%88%86%E5%B1%82%E6%9E%B6%E6%9E%84%E5%88%B0%E5%85%B7%E4%BD%93%E4%BB%A3%E7%A0%81"&gt;1. 从分层架构到具体代码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2-%E4%BB%8E%E5%A4%96%E9%83%A8%E9%80%82%E9%85%8D%E5%99%A8%E5%88%B0%E5%86%85%E9%83%A8%E9%80%82%E9%85%8D%E5%99%A8"&gt;2. 从外部适配器到内部适配器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3-%E6%9F%A5%E7%9C%8B%E6%B5%8B%E8%AF%95%E6%83%85%E5%86%B5"&gt;3. 查看测试情况&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4-%E9%92%88%E5%AF%B9%E4%BA%8E%E6%9C%80%E5%A4%8D%E6%9D%82%E7%9A%84%E6%83%85%E5%BD%A2%E5%92%8C%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E6%83%85%E5%BD%A2"&gt;4. 针对于最复杂的情形和最简单的情形&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%B7%A5%E5%85%B7%EF%BC%9Aapi-%E5%88%97%E8%A1%A8%E5%92%8C%E8%B0%83%E7%94%A8%E5%85%B3%E7%B3%BB"&gt;工具：API 列表和调用关系&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%9E%84%E5%BB%BA%E9%A2%86%E5%9F%9F%E7%9F%A5%E8%AF%86"&gt;构建领域知识&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E4%BA%86%E8%A7%A3%E4%B8%9A%E5%8A%A1%E6%9E%B6%E6%9E%84"&gt;了解业务架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%9E%B6%E6%9E%84%E5%85%A8%E6%99%AF"&gt;架构全景&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%A2%86%E5%9F%9F%E5%90%8D%E8%AF%8D%E8%A1%A8"&gt;领域名词表&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%AF%BB%E6%89%BE%E9%AB%98%E5%BC%95%E7%94%A8--%E9%AB%98%E4%BF%AE%E6%94%B9"&gt;寻找高引用 + 高修改&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%AC%AC%E4%B8%80%E6%AD%A5%EF%BC%9A%E9%98%B2%E6%8A%A4%E7%BD%91"&gt;第一步：防护网&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E9%98%B2%E6%8A%A4%E7%BD%91%E7%AD%96%E7%95%A5"&gt;防护网策略&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%B5%8B%E8%AF%95"&gt;第一个测试&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E9%87%8D%E6%9E%84"&gt;持续集成重构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%A3%80%E8%A7%86%E6%B5%8B%E8%AF%95"&gt;检视测试&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E9%87%8D%E6%9E%84"&gt;系统架构重构&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E9%AB%98%E8%B4%A8%E9%87%8F%E7%BA%A7-ddd-%E9%87%8D%E6%9E%84%EF%BC%9A%E6%BC%94%E8%BF%9B%E9%A9%B1%E5%8A%A8%E7%9A%84%E4%BA%8B%E4%BB%B6%E9%A3%8E%E6%9A%B4"&gt;高质量级 DDD 重构：演进驱动的事件风暴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%BD%BB%E9%87%8F%E7%BA%A7-ddd-%E9%87%8D%E6%9E%84%EF%BC%9A%E7%8E%B0%E7%8A%B6%E9%A9%B1%E5%8A%A8%E7%9A%84%E9%A2%86%E5%9F%9F%E6%96%B9%E6%A1%88"&gt;轻量级 DDD 重构：现状驱动的领域方案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%99%90%E7%95%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E8%A6%81%E7%B4%A0"&gt;限界上下文要素&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%87%8D%E6%9E%84"&gt;微服务重构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E2%80%A6%E2%80%A6"&gt;……&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E9%87%8D%E6%9E%84"&gt;服务架构重构&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E6%95%B4%E6%B4%81%E6%9E%B6%E6%9E%84"&gt;整洁架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%AE%BE%E8%AE%A1%E6%96%B0%E6%9E%B6%E6%9E%84"&gt;设计新架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%AE%9E%E6%96%BD%E6%96%B0%E5%88%86%E5%B1%82%E6%9E%B6%E6%9E%84"&gt;实施新分层架构&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E5%88%92%E5%88%86%E7%B1%BB%EF%BC%8C%E7%A7%BB%E5%8A%A8%E4%BB%A3%E7%A0%81"&gt;划分类，移动代码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%8A%80%E6%9C%AF%E6%A8%A1%E5%9D%97%E5%8C%96--%E9%87%8D%E6%90%AD"&gt;技术模块化 =&amp;gt; 重搭&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%B8%AD%E9%97%B4%E6%80%81%E5%88%86%E5%B1%82"&gt;中间态分层&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%AA%8C%E6%94%B6%E6%9D%A1%E4%BB%B6%EF%BC%9A%E6%9E%84%E5%BB%BA"&gt;验收条件：构建&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%BD%9C%E5%9C%A8%E9%97%AE%E9%A2%98"&gt;潜在问题&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#bean-%E6%B3%A8%E5%85%A5"&gt;bean 注入&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%A7%A3%E5%86%B3%E5%86%B2%E7%AA%81"&gt;解决冲突&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%90%8C%E6%AD%A5-api-%E4%BF%AE%E6%94%B9"&gt;同步 API 修改&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%AF%B9%E9%BD%90%E6%96%B0%E5%88%86%E5%B1%82%E6%9E%B6%E6%9E%84"&gt;对齐新分层架构&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%85%AC%E5%85%B1%E4%BB%A3%E7%A0%81%E9%87%8D%E6%9E%84"&gt;公共代码重构&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E5%AE%83%E7%9C%9F%E6%98%AF%E4%B8%AA-util-%E5%90%97%EF%BC%9F"&gt;它真是个 util 吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%BF%87%E5%BA%A6%E8%AE%BE%E8%AE%A1"&gt;过度设计&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%96%B0%E5%AE%9A%E4%B9%89%EF%BC%9A%E6%B6%88%E9%99%A4%E4%BA%8C%E4%B9%89%E6%80%A7"&gt;重新定义：消除二义性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%B1%BB%E8%BF%9B%E8%A1%8C%E5%86%85%E8%81%9A"&gt;类进行内聚&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%88%92%E5%88%86%E6%8A%80%E6%9C%AF%E9%83%A8%E5%88%86"&gt;划分技术部分&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%88%92%E5%88%86%E4%B8%9A%E5%8A%A1%E9%83%A8%E5%88%86"&gt;划分业务部分&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E8%81%8C%E8%B4%A3%E5%B0%91--%E5%B9%B3%E7%BA%A7"&gt;职责少 =&amp;gt; 平级&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%B8%9A%E5%8A%A1%E4%BB%A3%E7%A0%81%E5%A4%9A--%E5%86%8D%E6%8C%89%E4%B8%9A%E5%8A%A1%E6%8B%86%E5%88%86"&gt;业务代码多 =&amp;gt; 再按业务拆分&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%A8%A1%E5%9D%97%E9%87%8D%E6%9E%84"&gt;模块重构&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E7%BB%84%E4%BB%B6%E8%81%9A%E5%90%88%E4%B8%89%E5%8E%9F%E5%88%99"&gt;组件聚合三原则&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%89%93%E7%A0%B4%E5%8C%85%E4%B9%8B%E9%97%B4%E7%9A%84%E4%BE%9D%E8%B5%96%E5%85%B3%E7%B3%BB"&gt;打破包之间的依赖关系&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BE%9D%E8%B5%96%E5%80%92%E7%BD%AE"&gt;依赖倒置&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E6%9B%B4%E5%A5%BD%E7%9A%84%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1"&gt;更好的面向对象&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%B8%85%E7%90%86%E5%9E%83%E5%9C%BE%E4%BB%A3%E7%A0%81"&gt;清理垃圾代码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%A8%A1%E5%9E%8B%E9%87%8D%E6%9E%84"&gt;模型重构&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E8%81%9A%E5%90%88%E8%A1%8C%E4%B8%BA"&gt;聚合行为&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E7%94%B1%E5%86%85%E5%88%B0%E5%A4%96%E5%89%A5%E7%A6%BB%EF%BC%8C%E7%94%B1%E5%A4%96%E5%88%B0%E5%86%85%E8%81%9A%E5%90%88"&gt;由内到外剥离，由外到内聚合&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%AF%86%E5%88%AB%E6%A8%A1%E5%BC%8F-1%EF%BC%9A%E8%BE%93%E5%85%A5%E5%8F%82%E6%95%B0"&gt;识别模式 1：输入参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%AF%86%E5%88%AB%E6%A8%A1%E5%BC%8F-2%EF%BC%9A%E8%BF%94%E5%9B%9E%E5%8F%82%E6%95%B0"&gt;识别模式 2：返回参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BC%98%E5%8C%96%E5%88%9B%E5%BB%BA"&gt;优化创建&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E5%91%BD%E5%90%8D%EF%BC%9A%E7%BB%9F%E4%B8%80%E8%AF%AD%E8%A8%80"&gt;重命名：统一语言&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E7%B1%BB"&gt;类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%8A%B6%E6%80%81"&gt;状态&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%96%B9%E6%B3%95"&gt;方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%AE%B9%E5%99%A8"&gt;容器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%A6%BB%E5%BF%83%E5%88%86%E7%A6%BB%E6%A8%A1%E5%9E%8B%EF%BC%9A%E6%B6%88%E9%99%A4%E4%BA%8C%E4%B9%89%E6%80%A7"&gt;离心分离模型：消除二义性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%8F%90%E5%8F%96%E5%8F%82%E6%95%B0%E5%AF%B9%E8%B1%A1"&gt;提取参数对象&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%A4%84%E7%90%86%E8%BF%87%E7%A8%8B%E9%80%BB%E8%BE%91"&gt;处理过程逻辑&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%A2%86%E5%9F%9F%E7%89%B9%E5%AE%9A%E8%AF%AD%E8%A8%80"&gt;领域特定语言&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%A8%A1%E5%BC%8F%E9%87%8D%E6%9E%84"&gt;模式重构&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E7%BB%88%E6%AD%A2-singleton"&gt;终止 Singleton&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%B7%A5%E5%8E%82%E5%B0%81%E8%A3%85%E5%A4%8D%E6%9D%82%E6%9E%84%E5%BB%BA"&gt;工厂封装复杂构建&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E6%89%8B%E6%B3%95"&gt;重构手法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%E6%8F%90%E4%BE%9B%E6%98%93%E5%8F%98%E8%A7%84%E5%88%99"&gt;策略模式提供易变规则&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F%E6%8B%86%E8%A7%A3%E5%A4%8D%E6%9D%82%E5%AF%B9%E8%B1%A1"&gt;建造者模式拆解复杂对象&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%B7%A5%E5%85%B7%EF%BC%9A%E8%87%AA%E5%8A%A8%E5%8C%96%E8%AF%86%E5%88%AB"&gt;工具：自动化识别&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BB%A3%E7%A0%81%E9%87%8D%E6%9E%84"&gt;代码重构&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E9%99%8D%E4%BD%8E%E5%9C%88%E5%A4%8D%E6%9D%82%E5%BA%A6"&gt;降低圈复杂度&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%89%8B%E6%B3%95%EF%BC%9A%E6%8F%90%E5%8F%96"&gt;手法：提取&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%89%8B%E6%B3%95%EF%BC%9A%E5%86%85%E8%81%94"&gt;手法：内联&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%89%8B%E6%B3%95%EF%BC%9A%E7%A7%BB%E5%8A%A8"&gt;手法：移动&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E6%96%B9%E6%B3%95%E7%A7%BB%E8%87%B3%E5%85%B6%E5%AE%83%E7%B1%BB%E4%B8%AD"&gt;方法移至其它类中&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%A0%87%E5%87%86%EF%BC%9A4-%E8%A1%8C%E7%9A%84%E6%96%B9%E6%B3%95"&gt;标准：4 行的方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E7%A4%BA%E4%BE%8B"&gt;重构示例&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E8%AF%84%E4%BC%B0"&gt;评估&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#c4-%E6%A8%A1%E5%9E%8B%E5%B1%95%E5%BC%80"&gt;C4 模型展开&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%B7%A5%E5%85%B7%E8%AF%84%E4%BC%B0"&gt;工具评估&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E4%BB%A3%E7%A0%81%E7%BB%9F%E8%AE%A1"&gt;代码统计&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%9F%BA%E6%9C%AC%E6%83%85%E5%86%B5%E8%AF%84%E4%BC%B0"&gt;基本情况评估&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BB%A3%E7%A0%81%E5%9D%8F%E5%91%B3%E9%81%93%E8%AF%84%E4%BC%B0"&gt;代码坏味道评估&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%9E%B6%E6%9E%84%E8%AF%84%E4%BC%B0"&gt;架构评估&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#api-%E8%AF%84%E4%BC%B0"&gt;API 评估&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#api-%E6%9E%B6%E6%9E%84%E5%9B%BE"&gt;API 架构图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%AB%98%E5%BC%95%E7%94%A8--%E9%AB%98%E4%BF%AE%E6%94%B9%E5%88%86%E6%9E%90"&gt;高引用 + 高修改分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%B5%8B%E8%AF%95"&gt;测试&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E7%AD%96%E7%95%A5"&gt;重构策略&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%9E%B6%E6%9E%84%E9%87%8D%E6%9E%84"&gt;架构重构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%88%86%E5%B1%82%E9%87%8D%E6%9E%84"&gt;分层重构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%A8%A1%E5%9E%8B%E9%87%8D%E6%9E%84-1"&gt;模型重构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BB%A3%E7%A0%81%E9%87%8D%E6%9E%84-1"&gt;代码重构&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%87%AA%E5%8A%A8%E5%8C%96%E9%87%8D%E6%9E%84"&gt;自动化重构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%95%B0%E6%8D%AE%E5%BA%93%E9%87%8D%E6%9E%84%EF%BC%88tbc%EF%BC%89"&gt;数据库重构（TBC）&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9B%9E%E5%BD%92%E6%B5%8B%E8%AF%95%EF%BC%9A%E6%95%B0%E6%8D%AE%E4%B8%8D%E5%8F%98%E6%80%A7"&gt;数据库回归测试：数据不变性&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E5%89%8D%E6%B5%8B%E8%AF%95"&gt;前测试&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%90%8E%E6%B5%8B%E8%AF%95"&gt;后测试&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%BC%95%E5%85%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB%E5%B7%A5%E5%85%B7"&gt;引入数据库迁移工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%BF%81%E7%A7%BB%E6%BA%90%E6%95%B0%E6%8D%AE"&gt;迁移源数据&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%B1%B2%E5%8F%96%E5%BC%8F%E9%87%8D%E6%9E%84%EF%BC%9A%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E8%BD%AC%E6%8D%A2"&gt;汲取式重构：存储过程转换&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E4%B9%8B%E5%90%8E%EF%BC%9A%E5%B7%A5%E5%85%B7%E7%9A%84%E9%97%AE%E9%A2%98"&gt;重构之后：工具的问题&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E6%9E%B6%E6%9E%84%E5%AE%88%E6%8A%A4"&gt;架构守护&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E6%9E%B6%E6%9E%84%E5%AE%88%E6%8A%A4%E6%B5%8B%E8%AF%95"&gt;架构守护测试&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%9D%8F%E5%91%B3%E9%81%93%E5%AE%88%E6%8A%A4"&gt;坏味道守护&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%B5%8B%E8%AF%95%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91"&gt;测试驱动开发&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%AE%8C%E5%96%84%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD"&gt;完善基础设施&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E4%B9%8B%E5%90%8E%EF%BC%9A%E8%A7%A3%E5%86%B3%E4%BA%BA%E7%9A%84%E9%97%AE%E9%A2%98"&gt;重构之后：解决人的问题&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E4%BB%A3%E7%A0%81%E5%86%99%E5%BE%97%E7%83%82"&gt;代码写得烂&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%85%BB%E6%88%90%E4%BC%98%E7%A7%80%E7%9A%84%E5%BC%80%E5%8F%91%E4%B9%A0%E6%83%AF"&gt;养成优秀的开发习惯&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BA%BA%E5%91%98%E8%83%BD%E5%8A%9B%E6%8F%90%E5%8D%87"&gt;人员能力提升&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E7%BB%83%E4%B9%A0%E9%A1%B9%E7%9B%AE"&gt;练习项目&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%9F%B9%E8%AE%AD%E6%95%99%E7%A8%8B"&gt;培训教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%85%B8%E5%9E%8B%E9%97%AE%E9%A2%98"&gt;典型问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E4%B9%8B%E5%90%8E%EF%BC%9A%E6%B5%81%E7%A8%8B%E7%9A%84%E9%97%AE%E9%A2%98"&gt;重构之后：流程的问题&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E6%B5%81%E7%A8%8B%E4%BC%98%E5%8C%96"&gt;流程优化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%9C%80%E6%B1%82%E8%A7%84%E8%8C%83%E5%8C%96"&gt;需求规范化&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E5%AE%9E%E4%BE%8B%E5%8C%96%E9%9C%80%E6%B1%82"&gt;实例化需求&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%A1%8C%E4%B8%BA%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91%EF%BC%88bdd%EF%BC%89"&gt;行为驱动开发（BDD）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E4%B9%8B%E5%90%8E%EF%BC%9A%E6%8F%90%E7%82%BC%E7%9F%A5%E8%AF%86"&gt;重构之后：提炼知识&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E7%9F%A5%E8%AF%86%E4%BB%93%E5%BA%93"&gt;知识仓库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E5%BB%BA%E7%9F%A5%E8%AF%86%E4%BB%93%E5%BA%93"&gt;重建知识仓库&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%97%AE%E9%A2%98%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F"&gt;问题是什么？&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E4%BB%AC%E9%9C%80%E8%A6%81%E9%87%8D%E6%9E%84%EF%BC%9F"&gt;为什么我们需要重构？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%87%8D%E6%9E%84%E5%88%B0%E5%BE%AE%E6%9C%8D%E5%8A%A1"&gt;重构到微服务&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%9C%AA%E6%9D%A5"&gt;未来&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E8%BF%BD%E6%B1%82%E6%8A%80%E6%9C%AF%E5%8D%93%E8%B6%8A%E3%80%82"&gt;追求技术卓越。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%8E%A8%E5%8A%A8%E4%B8%AA%E4%BA%BA%E5%8F%98%E9%9D%A9%EF%BC%8C%E8%BF%9B%E8%80%8C%E5%BC%95%E9%A2%86%E7%BB%84%E7%BB%87%E5%8F%98%E9%9D%A9"&gt;推动个人变革，进而引领组织变革&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%95%B4%E7%90%86%E7%9F%A5%E8%AF%86%EF%BC%8C%E5%8A%A0%E5%BC%BA%E6%95%99%E8%82%B2"&gt;整理知识，加强教育&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%9C%A8%E6%95%B4%E4%B8%AA%E6%B5%81%E7%A8%8B%E4%B8%AD%E5%B0%86%E4%BB%B7%E5%80%BC%E5%88%9B%E9%80%A0%E6%9C%80%E5%A4%A7%E5%8C%96"&gt;在整个流程中将价值创造最大化&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-再说遗留系统重构" class="anchor" aria-hidden="true" href="#再说遗留系统重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;再说遗留系统重构&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;当你试图对工作方式进行这些改进时，政治斗争可能抬起它丑陋的头——《拥抱变革：从优秀走向卓越的 48 个组织转型模式》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;4 年前，也就是 2016 年，我一直在思索着如何更好的构建软件？如何更好的重写软件系统？思索出了 RePractise 七步曲，顺带着写了那本《全栈应用开发：精益实践》。书中，对于遗留系统的建议，便是&lt;strong&gt;重写&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;而在我的最近一本书《&lt;a href="https://book.douban.com/subject/33477112/" rel="nofollow"&gt;前端架构：从入门到微前端&lt;/a&gt;》中，我提及到了五种前端架构的改进方式：更新、迁移、重构、重写、重搭。重写，依旧是我推荐的主要方式，技术栈老旧、旧有代码不规范。&lt;/p&gt;
&lt;p&gt;可是呢，随着岁月的流失，我发现重写并不能大部分的解决问题。&lt;/p&gt;
&lt;p&gt;我总以为，编写软件的的人会随着年龄的增长，写出更好的软件系统。然而，软件开发者在经历到了 3 ~ 5 年的职业编码之后，有些成为了技术管理者，写不下去的转行、在线炒粉去了，还有的 &lt;code&gt;return true&lt;/code&gt; 成为了销售……，剩下的，还有那个不断接锅的 Tech Lead（还在继续写代码）。就好像韭菜一样，总可以吃掉新鲜的，总会由新的人来开发新的系统。所以，《重构：改善既有代码的设计》总是能割到一波又一波的韭菜 —— 那个会重构的人，代码写得少了。&lt;/p&gt;
&lt;p&gt;时过境迁，我对软件开发又有一些新的领悟：重构比重写更有挑战性。或许是重写和新写没有区别，或者是经历了一个个系统的重构过程，我大抵是明白了：&lt;strong&gt;哪来的和旧系统划清界线&lt;/strong&gt;。系统腐烂时，没有人能说清整个系统，甚至于一半的功能都相当的困难。与此同时，或许系统的用户对系统的功能比你更加了解。因为，你会从他们那收到 bug 的反馈：以前不是有这个功能吗，非常好用 —— 用户可能会骗你，他/她经常用那个功能，但是那个功能是存在的。&lt;/p&gt;
&lt;p&gt;从旧系统中汲取知识，一个逃离不了的话题，一个永远的痛。系统重构并不是一个简单的活，我们要不断地平衡：业务开发与重构过程，并尽量保证业务优先。它还涉及到一系列的软件开发实践：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建重构防护网，保证重构过程的安全性&lt;/li&gt;
&lt;li&gt;可随时继续的重构演进策略&lt;/li&gt;
&lt;li&gt;评估&lt;/li&gt;
&lt;li&gt;API 设计合理性评估&lt;/li&gt;
&lt;li&gt;模块分层架构&lt;/li&gt;
&lt;li&gt;架构合理度评估与对应的改进方案&lt;/li&gt;
&lt;li&gt;公共代码的拆分策略&lt;/li&gt;
&lt;li&gt;面向过程代码转面向对象&lt;/li&gt;
&lt;li&gt;代码坏味道识别与代码重构&lt;/li&gt;
&lt;li&gt;合适的设计模式替换旧的散弹式修改&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;也因此，在先前提到的 5 种方式中，重构可以说是最难的一种。设计新的架构很容易，但是要重构到设计模式，重构到领域驱动设计，重构到到整洁的架构，并不是一件容易的事情。你需要持续不断地练习，但是这样的机会并不多。&lt;/p&gt;
&lt;p&gt;可重构到最后，我们还会再回过头来看这些问题。我们的重点应该是：解决提出问题的人。正是那些能力不够的开发人员，导致了我们的系统需要一次大规模的重构。&lt;/p&gt;
&lt;p&gt;那么，正确的做法，应该是在日常的开发中不断重构，并引入技术债看板，不断优化和解决这些技术债。故而，技术债管理优于重构。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-为什么重构" class="anchor" aria-hidden="true" href="#为什么重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;为什么重构？&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;重构（名词）：对软件内部结构的一种调整，目的是在不改变软件可观察行为的前提下，提高其可理解性，降低其修改成本。 重构（动词）：使用一系列重构手法，在不改变软件可观察行为的前提下，调整其结构。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从定义上来说，重构意味着，我们不能改变现有软件的行为，你的 bug 还应该是 bug。只是呢，我们可以顺带着修复这个 bug，但是它绝不能冠上重构的名义。如此一来，怕是会被人误解。&lt;/p&gt;
&lt;p&gt;既然，不添加新的功能，也不减少现有的功能，那对于业务系统来说有什么价值呢？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;重构的唯一目的就是让我们开发更快，用更少的工作量创造更大的价值。—— 《重构：改善既有代码的设计》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以，总的来说，重构是为了 &lt;code&gt;￥￥￥&lt;/code&gt;。如果不能创造更多的价值，那么你在扯什么犊子的重构。但是，这种价值往往都不是直接体现。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-重构的动机" class="anchor" aria-hidden="true" href="#重构的动机"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构的动机&lt;/h3&gt;
&lt;p&gt;我知道你已经熟悉了这些说辞，而我也是复制过来的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;改善既有代码的设计。副标题是最好的说明。&lt;/li&gt;
&lt;li&gt;帮助找到软件中的 bug。review 旧有代码的过程中，会发现一些不符合业务的代码。&lt;/li&gt;
&lt;li&gt;提升开发效率。让代码易于扩展&lt;/li&gt;
&lt;li&gt;提高编程的趣味性——《重构与模式》&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我也懒得打了。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-重构不一定能带来什么" class="anchor" aria-hidden="true" href="#重构不一定能带来什么"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构不一定能带来什么？&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;重构的投入与回报并非呈线性关系。—— 《领域驱动设计：软件核心复杂性应对之道》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;人们总以为重构能带来：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;更少的代码&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;更稳定的系统&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;它们都是&lt;strong&gt;可能&lt;/strong&gt;带来的效果，而不是一定会。如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当我们拆分一个上帝类的时候，我们可能拆出了三个类、四个类，因为那些 import、package、type 的 declaration，反而带来了更多的代码。&lt;/li&gt;
&lt;li&gt;而当我们发现重复代码，并且它们是可被抽象的，那么我们就可以消去一半的代码。&lt;/li&gt;
&lt;li&gt;如果我们在重构的过程中，发现 bug，那么必然系统会更加稳定。&lt;/li&gt;
&lt;li&gt;而如果因为我们重构，导致别人合并代码时发生冲突，反而可能会带来 bug。&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们是基于一系列的假设，才有了对应的结果描述。&lt;/p&gt;
&lt;p&gt;而尽管我们达不成上述的好处，但我们仍然可以追求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;编程的技艺&lt;/strong&gt;。稳定的业务代码，便容易选择合理的识别设计模式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;重构的手法&lt;/strong&gt;。是的，如果你持续练习的话。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;持续重构的意识&lt;/strong&gt; 。我们真正意思到烂代码带来的问题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模式和原则&lt;/strong&gt;。遇到相似的情况时，可以用相似的重构手法。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;抽象能力&lt;/strong&gt;。后期总结，往往比前期更易于实践。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总的来说，它带来了更好的效果。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-重构是一种文化" class="anchor" aria-hidden="true" href="#重构是一种文化"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构是一种文化&lt;/h3&gt;
&lt;p&gt;日常的开发中，如果你说出你要重构的时候，有人对此挑战的话，那么说明需要培养相应的文化 —— 程序员的匠艺。好的代码不是一把写出来的，而是持续的演进和重构出来的&lt;/p&gt;
&lt;p&gt;如果有开发人员，经常提出需要重构的时候，你要看看是否真的合理。&lt;/p&gt;
&lt;p&gt;持续在在日常开发中进行小重构，应该是开发人员的一种&lt;strong&gt;自我修养&lt;/strong&gt;。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-大规模重构的时机" class="anchor" aria-hidden="true" href="#大规模重构的时机"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;大规模重构的时机&lt;/h3&gt;
&lt;p&gt;对于大规模重构来说 ，一个最为常见的例子是：在接手别人或者别的系统的代码。觉得原有的代码不符合现有团队的风格，不满足再有的开发习惯。但是，根据我的观察，开发人员往往只是在改造系统，而非真正意义上的重构。&lt;/p&gt;
&lt;p&gt;把握重构的时机是很难的一件事情，特别是如果你要进行大的系统改动，如果没有出现真正的痛点。那么，即使我们觉得诸多设计不合理的地方，我们往往可能并不被允许重构，也没有时间进行重构。可一旦连业务人员，也觉得系统需要重构的时候，那么系统也许需要重写了。&lt;/p&gt;
&lt;p&gt;即便于对未来有价值，我们也仍需要等待更合适的时机，如：代码库拆分、整洁架构中的领域层拆分等等。我们都知道它们带来的好处，但是我们尚没有那么迫切。反而，因为拆分，我们可能会带来额外的重构成本和维护成本。如我之前在重构 &lt;a href="https://github.com/phodal/coca"&gt;Coca&lt;/a&gt; 的时候，我在拆分 domain 层的时候，显得没有价值。我花了一两天的时间，把依赖于操作系统的部分，从代码中剥离了出去。我只是在试验 domain 层的好处，但是我并没有办法直接证明它的好处。&lt;/p&gt;
&lt;p&gt;直到，我开始为 Coca 添加 WASM 支持的时候，编译成功了。并且，拆分之后，构建出来的 wasm 包的大小减少到原来的一半，因为有大量的依赖是我所不需要的。如果按正常的重构逻辑，应该是在我们在未来计划添加 WASM 的时候，架构师才允许我们拆分出来。&lt;/p&gt;
&lt;p&gt;我们不应该做大规模预先的设计，也不应该过度的设计；我们也没有理由做大规模的预先重构设计，准备好方案，在时间恰当的时候，实施方案。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-说清重构的价值" class="anchor" aria-hidden="true" href="#说清重构的价值"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;说清重构的价值&lt;/h3&gt;
&lt;p&gt;重构，无法在短期内创造价值，哪怕是创造了大量的价值，它也难以&lt;strong&gt;直接&lt;/strong&gt;体现出来。它可以提升代码的可读性，可维护性……，但是总的来说，它是在以特定的方式降低系统的维护成本。&lt;/p&gt;
&lt;p&gt;再说说可维护性，比如，你使用了更好的设计模式代替了复制、粘贴，它可能还不如原来的代码生成器好用。开发的过程快了，维护就是一坨屎。所以，我说没有维护过旧系统的人，不懂得重构的好处。白天不懂得夜的美。&lt;/p&gt;
&lt;p&gt;既然如此，让我们就再考虑一下重构的价值。我想了很久这个问题，直到我从《遗留系统重构指南》看到一些示例：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;阶段&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;th&gt;业务价值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;初步重构。定义组件接口，将组件拆分为独立的 jar&lt;/td&gt;
&lt;td&gt;清晰的接口能增加代码的可维护性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;重写身份认证。更改密码的存储方式&lt;/td&gt;
&lt;td&gt;更好地遵守数据安全法规&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;重写搜索组件。切换到不同的搜索引擎实现&lt;/td&gt;
&lt;td&gt;搜索结果质量更好。用户更容易找到产品&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;重构推荐组件。&lt;/td&gt;
&lt;td&gt;可以快速地切换不同的算法&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;不过，仍旧存在大量的难以描述的价值——至少我是不知道从何说起。这里的代码、架构有坏味道，得去重构，便是我，一个工程师的思维。只是呢，真正有意义的业务价值，都是 TBC……。&lt;/p&gt;
&lt;p&gt;尽管我们说，重构尽量不要影响业务开发，但是如果正在开发的功能部分，有较大的问题。那么，我们不得不调整策略，优先支持这部分的功能，而不是等完成后，再花费时间来对它们进行重构。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-系统重构模式与原则" class="anchor" aria-hidden="true" href="#系统重构模式与原则"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;系统重构模式与原则&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;设计模式强调为开发大规模系统提供可复用的设计指南。 ——  《反模式：危机中软件、架构和项目的重构》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;就重构的基本原则来说，倒也不是很复杂：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;小步前进。走一小步，提交一次代码，方便回滚，有一天你会懂的。&lt;/li&gt;
&lt;li&gt;随时可用。如果不能保证随时可用，那就说不上是重构了。&lt;/li&gt;
&lt;li&gt;融入日常。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当你习惯了重构，记得在日常工作中使用。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-重构模式epdca" class="anchor" aria-hidden="true" href="#重构模式epdca"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构模式：EPDCA&lt;/h3&gt;
&lt;p&gt;我尝试从书中找到一个合适的模式，但是都没有发现符合我的步骤。便在 PDCA 的前面加了个 E，代表了 evaluate：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;识别需要重构的地方&lt;/li&gt;
&lt;li&gt;制定重构计划，&lt;/li&gt;
&lt;li&gt;执行计划的重构任务&lt;/li&gt;
&lt;li&gt;使用测试对重构是否影响业务功能进行检察&lt;/li&gt;
&lt;li&gt;调整下一次重构策略&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对系统进行大规模重构的过程中，最难的地方在于识别，因为代码坏味道多的地方不一定是价值最高的。寻找你的价值曲线，寻找价值高、实施难度低的部分，是最体现你价值的地方。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-四级重构" class="anchor" aria-hidden="true" href="#四级重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;四级重构&lt;/h3&gt;
&lt;p&gt;实践的过程中，我们以拆解的方式，一步步由系统架构到代码级拆分。在某次吃饭的过程中，我发现不太对劲。我明明用的是敏捷式的重构方式，而非瀑布模式。它对应于四个不同的重构级别：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;架构重构&lt;/strong&gt;。在不改变业务逻辑的情况下，根据单一职责和依赖倒置原则的思想：对系统进行模块拆分与合并，以明确职责降低耦合度；对包进行重新规划，划分包之间的边界，减少代码间的耦合。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模型重构&lt;/strong&gt;。在包含测试的情况下，通过识别和发现模型的行为，将行为聚合到模型中：根据方法名称、参数、返回判定内聚到模型中；从流程梳理是否符合业务场景 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模式重构&lt;/strong&gt;。对于特定代码坏味道产生的问题，通过结合架构模式、设计模式来提升可读性。如：使用工厂模式统一管理对象的创建；使用策略模式降低复杂度。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;代码重构&lt;/strong&gt;。对于一些小的代码坏味道，可以通过 IDE 重构来快速改善即有代码，而不会影响到业务功能。如：复杂条件语句的提取；使用参数对象重构参数过多。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对应的模式如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/f8d134031f5308dc01ca6026d7d08b3d77b94a7b/68747470733a2f2f6d6967726174696f6e2e696e6b2f696d616765732f7265666163746f72696e672d6c6576656c732e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/f8d134031f5308dc01ca6026d7d08b3d77b94a7b/68747470733a2f2f6d6967726174696f6e2e696e6b2f696d616765732f7265666163746f72696e672d6c6576656c732e706e67" alt="四级重构" data-canonical-src="https://migration.ink/images/refactoring-levels.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这一点倒是与我们设计系统的时候，采用的《&lt;a href="https://www.phodal.com/blog/architecture-pyramid/" rel="nofollow"&gt;架构金字塔&lt;/a&gt;》颇为一致的：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/885cf813033733a00a6eea3a044e33acfe991113/68747470733a2f2f6d6967726174696f6e2e696e6b2f696d616765732f6172636869746563747572652d7072696d6172642e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/885cf813033733a00a6eea3a044e33acfe991113/68747470733a2f2f6d6967726174696f6e2e696e6b2f696d616765732f6172636869746563747572652d7072696d6172642e6a7067" alt="架构金字塔" data-canonical-src="https://migration.ink/images/architecture-primard.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-小步前进" class="anchor" aria-hidden="true" href="#小步前进"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;小步前进&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;小步前进，拉一下最新的代码。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;不论改动的大小，一旦变动的文件多了，如移包、重命名用得广泛的类等等，记得随时提交。&lt;/p&gt;
&lt;p&gt;多说无益，步子迈大的时候，你就会回到这句话上。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-git--工作流" class="anchor" aria-hidden="true" href="#git--工作流"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Git  工作流&lt;/h3&gt;
&lt;p&gt;如果你们使用的版本控制工具，还不是 Git 话，那么你们可能需要好好反思一下，为什么会到现在的这种地步？&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-master-机制" class="anchor" aria-hidden="true" href="#master-机制"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Master 机制&lt;/h4&gt;
&lt;p&gt;或许因为我合作的同事主要是 ThoughtWorks 的员工，所以在项目合作上，代码水平并不会太差；或许因为我能容忍那些年轻的开发人员犯的错。&lt;/p&gt;
&lt;p&gt;我是一个喜欢用 master 分支的开发人员，主要是作为一个 Tech Lead，我并不想成为一个专职的 code reviewew。&lt;/p&gt;
&lt;p&gt;所以，在 master 分支上重构，对于每个人都是一个极大的考验。有没有足够的测试覆盖？有没有足够的工程支持？有没有配合的团队合作？&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-pr-机制" class="anchor" aria-hidden="true" href="#pr-机制"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PR 机制&lt;/h4&gt;
&lt;p&gt;对于采用 pull request / merge request 机制的团队来说，重构并不会一帆风顺。&lt;/p&gt;
&lt;p&gt;对于大的重构来说，如目录调整，你还能在花点时间重做。如果是代码重构，一旦重来的话，你可能会忘记你到底修改了什么。&lt;/p&gt;
&lt;p&gt;也经常不得不找个夜深人静的时间，加会班，提交上代码。&lt;/p&gt;
&lt;p&gt;所以，当你采用 PR 机制的时候，记得做一下笔记，写写你打算怎么改。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-建立远景与方向" class="anchor" aria-hidden="true" href="#建立远景与方向"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;建立远景与方向&lt;/h2&gt;
&lt;p&gt;TBD&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-拉通对齐目标" class="anchor" aria-hidden="true" href="#拉通对齐目标"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;拉通：对齐目标&lt;/h3&gt;
&lt;p&gt;会遇到不一样的需求，有的是明确的重构需求，有的则是隐藏在需求之后，有的则是看上去没有而已。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-明确潜在风险" class="anchor" aria-hidden="true" href="#明确潜在风险"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;明确潜在风险&lt;/h3&gt;
&lt;p&gt;你懂的。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-人评估" class="anchor" aria-hidden="true" href="#人评估"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;人评估&lt;/h3&gt;
&lt;p&gt;并非很有的人都具备足够的能力参与到重构的过程中。&lt;/p&gt;
&lt;p&gt;所以，在我们进入重构之前，需要：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;确保对方有足够的能力&lt;/li&gt;
&lt;li&gt;确保和对方对于重构有共同的看法&lt;/li&gt;
&lt;li&gt;确保对方能配合你工作&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为此，需要一些培训，又或者是激烈的讨论。&lt;/p&gt;
&lt;p&gt;他/她们需要具备以下的基本技能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;理解面向对象设计&lt;/li&gt;
&lt;li&gt;了解设计模式&lt;/li&gt;
&lt;li&gt;了解写测试的重要性&lt;/li&gt;
&lt;li&gt;了解为什么要重构&lt;/li&gt;
&lt;li&gt;追求代码质量&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然了，在了解的基本上有更深入的理解也是不错的。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-重构范围" class="anchor" aria-hidden="true" href="#重构范围"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构范围&lt;/h3&gt;
&lt;p&gt;对于一个大的系统来说，系统的每一部分并非都是等价的。&lt;/p&gt;
&lt;p&gt;系统的核心就是系统的 core domain（核心域），一个有能力的管理者，能识别到哪一部分是系统的核心组成，并为它分配最好的开发人员；与此同时，对于支撑的部分来说，管理者只会分配少数的核心开发人员，只用于确保功能能按期完成。&lt;/p&gt;
&lt;p&gt;按照 DDD 的思想来看，就是核心域、支撑域、通用域的区别。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-产出物" class="anchor" aria-hidden="true" href="#产出物"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;产出物&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-kpi-度量" class="anchor" aria-hidden="true" href="#kpi-度量"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;KPI 度量&lt;/h4&gt;
&lt;h4&gt;&lt;a id="user-content-重建规范" class="anchor" aria-hidden="true" href="#重建规范"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重建规范&lt;/h4&gt;
&lt;h4&gt;&lt;a id="user-content-团队赋能" class="anchor" aria-hidden="true" href="#团队赋能"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;团队赋能&lt;/h4&gt;
&lt;h4&gt;&lt;a id="user-content-原则与模式" class="anchor" aria-hidden="true" href="#原则与模式"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;原则与模式&lt;/h4&gt;
&lt;h2&gt;&lt;a id="user-content-重构评估与度量" class="anchor" aria-hidden="true" href="#重构评估与度量"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构评估与度量&lt;/h2&gt;
&lt;p&gt;在接触代码之前，我们可以通过一些现成的工具，来对现有的项目进行一些不评估，并通过度量来提供指标。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-识别技术债务" class="anchor" aria-hidden="true" href="#识别技术债务"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;识别技术债务&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;对于技术债务，它的利息表现为系统的不稳定性，以及由于临时性手段和缺乏合适的设计、文档工作和测试带来的不断攀升的维护成本。 —— 《架构师应该知道的 97 件事》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如 Robert Nord 提出的 “技术债务全景图”（Tech Debt Landscape） 所示：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/tech-debt-landscape.png"&gt;&lt;img src="images/tech-debt-landscape.png" alt="技术债全景图" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;技术债对于软件的影响：可维护性（Maintainability）、可演进性（Evolvability），而这些技术债对于非技术人员来说都是不可见的。它们源于生活，藏于黑暗中。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-技术债风暴" class="anchor" aria-hidden="true" href="#技术债风暴"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;技术债风暴&lt;/h4&gt;
&lt;p&gt;在重构开始之前，我们可以进行技术债的头脑风暴，收集每个开发人员每迫切解决的技术痛点。并按照优先级来评估这些技术债，列入我们的重构范围中。&lt;/p&gt;
&lt;p&gt;如我的同事在《&lt;a href="https://insights.thoughtworks.cn/managing-technical-debt/" rel="nofollow"&gt;技术债治理的四条原则&lt;/a&gt;》 一文中所介绍的，我们可以在对应的限界上下文里，可视化技术债：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/tech-debt-mapping.png"&gt;&lt;img src="images/tech-debt-mapping.png" alt="Classified Technical Debt Mapping" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;再根据 “核心领域优于其他子域” 的原则，及其严重程度，来划分出技术债的优先级。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-架构评估技术驱动-vs-业务驱动" class="anchor" aria-hidden="true" href="#架构评估技术驱动-vs-业务驱动"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;架构评估：技术驱动 vs 业务驱动&lt;/h4&gt;
&lt;p&gt;如我在那篇 《&lt;a href="https://www.phodal.com/blog/refactor-mvc-architecture-to-ddd/" rel="nofollow"&gt;分层架构重构&lt;/a&gt;》 中所说，在大量的现有系统中，我们发现了 MVC 架构模式被落地为三层分层架构（controller-service-model）。开发人员对它们的错误等同，导致了架构上的一系列错误。&lt;/p&gt;
&lt;p&gt;对于简单的系统来说，CSM 的包结构问题不大。或者说，对于非常简单的系统来说，大泥球架构也没有问题。我们所针对的是那些中大规模的系统。在这些系统里，系统并非一次性的，开发出来就不再维护了。因此，它们需要对更合适的架构设计和包的拆分分。&lt;/p&gt;
&lt;p&gt;借助于 &lt;a href="https://github.com/newlee/tequila"&gt;Tequila&lt;/a&gt; 这样的架构可视化工具，又或者是 &lt;code&gt;coca arch&lt;/code&gt;，便可以得到项目的调用关系图，它可以在某种层面上反应出系统的架构。根据它，我们可以知道：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;项目的结构划分是否合理&lt;/li&gt;
&lt;li&gt;查看项目的代码中是否存在循环依赖的情况&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/coca-call.png"&gt;&lt;img src="images/coca-call.png" alt="Coca Call Graph" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;通过调用关系图，我们也可以查看类之间、包之间是否存在相互依赖。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-代码评估收集-bad-smell" class="anchor" aria-hidden="true" href="#代码评估收集-bad-smell"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;代码评估：收集 bad smell&lt;/h4&gt;
&lt;p&gt;对于这部分内容来说，你可以直接采用成熟的商业工具，如 SonarQube 便可以完成这方面的工作。&lt;/p&gt;
&lt;p&gt;你也可以通过 &lt;code&gt;coca bs&lt;/code&gt; 来做一些简单的 Bad Smell 收集：&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dataClass&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [
      {
         &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;File&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;examples/api/BookController.java&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
         &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BS&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dataClass&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      }
   ],
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lazyElement&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [
      {
         &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;File&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;examples/api/model/BookRepresentaion.java&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
         &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BS&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lazyElement&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      }
   ]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;而后，再生成对应的重构建议。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-收集-todo" class="anchor" aria-hidden="true" href="#收集-todo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;收集 Todo&lt;/h4&gt;
&lt;p&gt;代码中的 Todo 注释，是一些本应该发生的事情，本应该做好，但是我没有立即去做。换句话来说，Todo 都是项目中的技术债务，就了可能就永远不会做。&lt;/p&gt;
&lt;p&gt;所以，我们需要有工具来查找项目的 Todo，如笔者编写的 Coca，可以寻找代码中的 Todo，包含其对应的日期、作者、提交信息、文件名及对其的行数等信息：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;MESSAGES&lt;/th&gt;
&lt;th&gt;FILENAME&lt;/th&gt;
&lt;th&gt;LINE&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;happens on macosx, don't know why&lt;/td&gt;
&lt;td&gt;.../ContributedLibraryTableCellJPanel.java&lt;/td&gt;
&lt;td&gt;118&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Make this a method of Theme&lt;/td&gt;
&lt;td&gt;.../ContributedLibraryTableCellJPanel.java&lt;/td&gt;
&lt;td&gt;233&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Do a better job in refreshing  only the needed element&lt;/td&gt;
&lt;td&gt;.../LibraryManagerUI.java&lt;/td&gt;
&lt;td&gt;241&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Do a better job in refreshing  only the needed element&lt;/td&gt;
&lt;td&gt;.../LibraryManagerUI.java&lt;/td&gt;
&lt;td&gt;273&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Make this a method of Theme&lt;/td&gt;
&lt;td&gt;.../MultiLibraryInstallDialog.java&lt;/td&gt;
&lt;td&gt;149&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;happens on macosx, don't know  why&lt;/td&gt;
&lt;td&gt;.../ContributedPlatformTableCellJPanel.java&lt;/td&gt;
&lt;td&gt;183&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;show error error when importing. ignoring  :(&lt;/td&gt;
&lt;td&gt;.../Base.java&lt;/td&gt;
&lt;td&gt;2423&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Improve / move error handling&lt;/td&gt;
&lt;td&gt;.../Editor.java&lt;/td&gt;
&lt;td&gt;1541&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Should be a Theme value?&lt;/td&gt;
&lt;td&gt;.../EditorHeader.java&lt;/td&gt;
&lt;td&gt;78&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Should be a Theme value?&lt;/td&gt;
&lt;td&gt;.../EditorStatus.java&lt;/td&gt;
&lt;td&gt;73&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Improve decoupling&lt;/td&gt;
&lt;td&gt;.../EditorTab.java&lt;/td&gt;
&lt;td&gt;465&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;随后，我们只需要根据真实的情况，更新项目中的 Todo，以确认出我们需要完成的技术债务。&lt;/p&gt;
&lt;p&gt;不过，写好一个 Todo 并不是容易，万一以后大家都不写了呢？&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-测试和文档评估" class="anchor" aria-hidden="true" href="#测试和文档评估"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;测试和文档评估&lt;/h4&gt;
&lt;p&gt;关于测试的话题，我们会有一个大的专题来介绍相关的活动。&lt;/p&gt;
&lt;p&gt;至于文档的缺乏，会在文中的最后介绍。&lt;/p&gt;
&lt;p&gt;不过，你也可以参考我的那篇《&lt;a href="https://www.phodal.com/blog/build-trusted-software-system/" rel="nofollow"&gt;构建质量可信的软件系统&lt;/a&gt;》 来对你的文档进行评估。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-项目评估" class="anchor" aria-hidden="true" href="#项目评估"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;项目评估&lt;/h3&gt;
&lt;p&gt;根据不同的项目，侧重点有所不同。&lt;/p&gt;
&lt;p&gt;但是毫无疑问地，我们可以统计：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;功能的 bug 率，对应的 bug 修改时间&lt;/li&gt;
&lt;li&gt;bug 常见的问题&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你都懂的。我暂时就不 copy 了。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-编写工具评估" class="anchor" aria-hidden="true" href="#编写工具评估"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;编写工具评估&lt;/h3&gt;
&lt;p&gt;在我遇到的一个重构项目中，项目中经常抛出 Null Point Exception 的问题。于是，我便写了一个简单的工具，来查找项目中返回 null point exception 的代码，并对调用的地方进行评估。&lt;/p&gt;
&lt;p&gt;随着评估的进一步深入，我在工具中加入了更多的功能，如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;静态方法多，难以进行测试。要么是工具类过多，需要抽取基础设施；要么就是缺乏 OO 设计，导致过程性代码……。&lt;/li&gt;
&lt;li&gt;Util 过多，同上。&lt;/li&gt;
&lt;li&gt;Null Point Exeception 越多，则项目的出错可能性越多。&lt;/li&gt;
&lt;li&gt;类方法数的标准差，能判断出对应的上帝类情况。&lt;/li&gt;
&lt;li&gt;方法长度的标准差，越大则意味着方法的长度都比较长，方便于重构。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;只需要运行 &lt;code&gt;coca evaluate&lt;/code&gt;，就能得到以下的结果：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;TYPE&lt;/th&gt;
&lt;th&gt;COUNT&lt;/th&gt;
&lt;th&gt;LEVEL&lt;/th&gt;
&lt;th&gt;TOTAL&lt;/th&gt;
&lt;th&gt;RATE&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Nullable / Return Null&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;Method&lt;/td&gt;
&lt;td&gt;1615&lt;/td&gt;
&lt;td&gt;0.00%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Utils&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;Class&lt;/td&gt;
&lt;td&gt;252&lt;/td&gt;
&lt;td&gt;2.78%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Static Method&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;Method&lt;/td&gt;
&lt;td&gt;1615&lt;/td&gt;
&lt;td&gt;0.43%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Average Method Num.&lt;/td&gt;
&lt;td&gt;1615&lt;/td&gt;
&lt;td&gt;Method/Class&lt;/td&gt;
&lt;td&gt;252&lt;/td&gt;
&lt;td&gt;6.408730&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Method Num. Std Dev / 标准差&lt;/td&gt;
&lt;td&gt;1615&lt;/td&gt;
&lt;td&gt;Class&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;7.344917&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Average Method Length&lt;/td&gt;
&lt;td&gt;13654&lt;/td&gt;
&lt;td&gt;Without Getter/Setter&lt;/td&gt;
&lt;td&gt;1100&lt;/td&gt;
&lt;td&gt;12.412727&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Method Length Std Dev / 标准差&lt;/td&gt;
&lt;td&gt;1615&lt;/td&gt;
&lt;td&gt;Method&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;20.047092&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;笑，你只要加强使用 TDD，那么上述的大部分问题，都能得到进一步的缓解。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-代码评估工具" class="anchor" aria-hidden="true" href="#代码评估工具"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;代码评估工具&lt;/h3&gt;
&lt;p&gt;Java 世界流行的几个找问题工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FindBugs&lt;/li&gt;
&lt;li&gt;PMD&lt;/li&gt;
&lt;li&gt;Checkstyle&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;试试你就知道了。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-真实的测试覆盖率" class="anchor" aria-hidden="true" href="#真实的测试覆盖率"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;真实的测试覆盖率&lt;/h3&gt;
&lt;p&gt;尽管有越来越多的项目将测试覆盖率作为一项考核指标。但是，对于诸多编程实践本身就好的公司为说，测试覆盖率也往往不是真的。&lt;/p&gt;
&lt;p&gt;我们编写测试的其中一个目的是用于快速反馈，即当我们的功能出现问题的时候，我们可以快速通过测试来定位到问题所。然而，如果那些是没有断言的测试，那么我们就无法通过它来进行快速反馈。即，如果我们重构过程中，修改了某一块的功能，可能会进一步导致出现 bug。&lt;/p&gt;
&lt;p&gt;为此，你可以借助于 Coca 的 Test Bas Smell 功能，来找到对应的问题。只需要执行 &lt;code&gt;coca tbs&lt;/code&gt;，便能帮助你找到代码中的坏味道。它可以在你进入重构之前，帮你看看是否有对应的风险。&lt;/p&gt;
&lt;p&gt;如下是 Coca 扫描出来的 Arduino 开源项目测试问题：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;TYPE&lt;/th&gt;
&lt;th&gt;FILENAME&lt;/th&gt;
&lt;th&gt;LINE&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/i18n/ExternalProcessOutputParserTest.java&lt;/td&gt;
&lt;td&gt;107&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/i18n/ExternalProcessOutputParserTest.java&lt;/td&gt;
&lt;td&gt;41&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/i18n/ExternalProcessOutputParserTest.java&lt;/td&gt;
&lt;td&gt;63&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RedundantPrintTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/i18n/I18NTest.java&lt;/td&gt;
&lt;td&gt;71&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RedundantPrintTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/i18n/I18NTest.java&lt;/td&gt;
&lt;td&gt;72&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RedundantPrintTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/i18n/I18NTest.java&lt;/td&gt;
&lt;td&gt;77&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/net/PACSupportMethodsTest.java&lt;/td&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/processing/app/macosx/SystemProfilerParserTest.java&lt;/td&gt;
&lt;td&gt;51&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/processing/app/syntax/PdeKeywordsTest.java&lt;/td&gt;
&lt;td&gt;41&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/processing/app/tools/ZipDeflaterTest.java&lt;/td&gt;
&lt;td&gt;57&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/processing/app/tools/ZipDeflaterTest.java&lt;/td&gt;
&lt;td&gt;83&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/processing/app/tools/ZipDeflaterTest.java&lt;/td&gt;
&lt;td&gt;109&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;好在上述的测试代码中，没有出现诸如于下面场景的测试坏味道：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;EmptyTest。测试函数里空空如也&lt;/li&gt;
&lt;li&gt;UnknownTest。测试中没有对应的断言&lt;/li&gt;
&lt;li&gt;IgnoreTest。测试是被 Ingore 的，即不会运行的测试。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你的代码中出现了大量的上述问题，你需要好好反思一下，你的测试覆盖率是真实的吗？&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-可测试性评估" class="anchor" aria-hidden="true" href="#可测试性评估"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;可测试性评估&lt;/h3&gt;
&lt;p&gt;代码本身是缺乏测试的，那么它就是一个遗留系统。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-度量" class="anchor" aria-hidden="true" href="#度量"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;度量&lt;/h3&gt;
&lt;p&gt;根据《精益软件度量》对于度量的定义：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;度量在组织上下文中形成的一系列共识&lt;/li&gt;
&lt;li&gt;将经验性模型转换为向量化模型（修改）&lt;/li&gt;
&lt;li&gt;包含人、流程、组织和工具的一个动态系统&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TBD&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-度量缺陷" class="anchor" aria-hidden="true" href="#度量缺陷"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;度量缺陷&lt;/h4&gt;
&lt;h3&gt;&lt;a id="user-content-寻找专业人士" class="anchor" aria-hidden="true" href="#寻找专业人士"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;寻找专业人士&lt;/h3&gt;
&lt;p&gt;你懂的。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-重构准入条件" class="anchor" aria-hidden="true" href="#重构准入条件"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构准入条件&lt;/h2&gt;
&lt;p&gt;看标题就够了。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-工具准备" class="anchor" aria-hidden="true" href="#工具准备"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;工具准备&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-重构看板" class="anchor" aria-hidden="true" href="#重构看板"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构看板&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-版本控制" class="anchor" aria-hidden="true" href="#版本控制"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;版本控制&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-自动化重构工具" class="anchor" aria-hidden="true" href="#自动化重构工具"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;自动化重构工具&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-持续集成环境" class="anchor" aria-hidden="true" href="#持续集成环境"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;持续集成环境&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-记录" class="anchor" aria-hidden="true" href="#记录"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;记录&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-探索性重构可行方案" class="anchor" aria-hidden="true" href="#探索性重构可行方案"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;探索性重构：可行方案&lt;/h2&gt;
&lt;p&gt;我喜欢重构的那种感觉 —— 把一坨烂代码，训服成更易于阅读的代码。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-准备知识坏味道的模式" class="anchor" aria-hidden="true" href="#准备知识坏味道的模式"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;准备知识：坏味道的模式&lt;/h3&gt;
&lt;p&gt;软件开发是一种团队活动，当组织缺&lt;strong&gt;乏强有力的&lt;/strong&gt;新鲜血液时，代码便会以相同的模式编写。该组织设计出来的架构，也从某种意义上出现了大量的趋同 —— 创新反而可能不好。在这种统一的模式之下，组织的代码也会呈现相似的坏味道。代码中的坏味道的模式也往往极为相似。&lt;/p&gt;
&lt;p&gt;也因此，我们能快速地通过一小部分代码，了解整个项目的情况。&lt;/p&gt;
&lt;p&gt;为此，我们只需要根据《重构：改善既有代码的设计》一书提出的 23 种代码坏味道，整理出系统中的常见坏味道。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;集合类型&lt;/th&gt;
&lt;th&gt;坏味道&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;代码臃肿&lt;/td&gt;
&lt;td&gt;过长函数，过大的类，基本类型偏执，过长参数列，数据泥团&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;滥用面向对象&lt;/td&gt;
&lt;td&gt;Switch 声明，临时字段，被拒绝的遗赠，异曲同工的类&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;变革的障碍&lt;/td&gt;
&lt;td&gt;发散式变化，霰弹式修改，平行继承体系&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;非必要的&lt;/td&gt;
&lt;td&gt;冗余类，纯稚的数据类，重复代码，夸夸其谈的未来性，注释&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;耦合&lt;/td&gt;
&lt;td&gt;不完美的类库，依恋情结，狎昵关系，消息链，中间人&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;随后，我们便能有针对性地对代码进行重构。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-c4-模型" class="anchor" aria-hidden="true" href="#c4-模型"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;C4 模型&lt;/h4&gt;
&lt;p&gt;C4 Model 是一个非常不错的架构可视化工具，它从系统 System、容器 Container、组件 Component 和代码 Code 四个层次，由顶至底来介绍系统的架构：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/c4-model.jpg"&gt;&lt;img src="images/c4-model.jpg" alt="C4 模型" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;所以，我们可以根据 C4 模型的思路来查看整个应用的架构设计和代码情况。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-探索模式" class="anchor" aria-hidden="true" href="#探索模式"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;探索模式&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-1-从分层架构到具体代码" class="anchor" aria-hidden="true" href="#1-从分层架构到具体代码"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. 从分层架构到具体代码&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;代码库间关系&lt;/li&gt;
&lt;li&gt;代码库内模块化结构&lt;/li&gt;
&lt;li&gt;模块化包结构&lt;/li&gt;
&lt;li&gt;包内代码结构&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-2-从外部适配器到内部适配器" class="anchor" aria-hidden="true" href="#2-从外部适配器到内部适配器"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. 从外部适配器到内部适配器&lt;/h4&gt;
&lt;p&gt;举个例子，从 API 入手：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Controller&lt;/li&gt;
&lt;li&gt;Service&lt;/li&gt;
&lt;li&gt;Model&lt;/li&gt;
&lt;li&gt;DAO&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-3-查看测试情况" class="anchor" aria-hidden="true" href="#3-查看测试情况"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. 查看测试情况&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;是否包含单元测试&lt;/li&gt;
&lt;li&gt;是否包含集成测试&lt;/li&gt;
&lt;li&gt;测试覆盖率情况&lt;/li&gt;
&lt;li&gt;测试编写情况&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-4-针对于最复杂的情形和最简单的情形" class="anchor" aria-hidden="true" href="#4-针对于最复杂的情形和最简单的情形"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4. 针对于最复杂的情形和最简单的情形&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;从最简单的场景出发，对常规流程、包间关系有一定的了解&lt;/li&gt;
&lt;li&gt;从复杂的场景收尾，看最复杂的场景下会有什么问题&lt;/li&gt;
&lt;li&gt;根据需要寻找一个适合的场景，&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;&lt;a id="user-content-工具api-列表和调用关系" class="anchor" aria-hidden="true" href="#工具api-列表和调用关系"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;工具：API 列表和调用关系&lt;/h4&gt;
&lt;p&gt;针对于那些使用 Spring 框架的后端项目来说，可以尝试使用 &lt;code&gt;coca api&lt;/code&gt; 来生成项目 API 调用图。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-构建领域知识" class="anchor" aria-hidden="true" href="#构建领域知识"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;构建领域知识&lt;/h3&gt;
&lt;p&gt;作为一个碳基生物，我们要承认我们并非是全知的。我们所能做的事，来到一个新的领域时，能快速学习相关的知识。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-了解业务架构" class="anchor" aria-hidden="true" href="#了解业务架构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;了解业务架构&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;高水平的软件架构师不仅要懂技术，还要掌握问题空间对应的业务领域知识。—— 《架构师应该知道的 97 件事》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-架构全景" class="anchor" aria-hidden="true" href="#架构全景"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;架构全景&lt;/h4&gt;
&lt;p&gt;简单来说，就是你知道对系统有一个初步的认知，它包含了：业务架构、技术架构、开发组成等等。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-领域名词表" class="anchor" aria-hidden="true" href="#领域名词表"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;领域名词表&lt;/h4&gt;
&lt;p&gt;根据开发人员介绍的各种概念，抽象出一份系统的领域名词表。它的来源是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;项目的相关开发文档&lt;/li&gt;
&lt;li&gt;项目中的架构资源&lt;/li&gt;
&lt;li&gt;项目的代码&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;也因此，当你需要到一个新的项目实施重构计划时，一定需要有一个能与你结对编程的人。一个领域专家，一个代码专家，双方的无间配合，才能快速落地完成重构工作。&lt;/p&gt;
&lt;p&gt;我们所要做的一个努力是，让文档、架构、元模型概念与代码实现一一对齐。这并不是一件容易的事情。从大多数项目的实践来看，架构师的设计和模型的实现往往是脱离的。因为设计架构的人和实现模型的人，往往不是同一些人。&lt;/p&gt;
&lt;p&gt;我正在尝试根据它来编写这样的一个功能，但是它不是一件容易的事。只是呢，已经有一个小的雏形，通过 &lt;code&gt;coca concept&lt;/code&gt; 从函数名称中抽取出部分的对应模式&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;WORDS&lt;/th&gt;
&lt;th&gt;COUNTS&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;blog&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;publish&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;entity&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;domain&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;published&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;resource&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;criteria&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;但是，这只能是构建领域名词表的一个 hello, world，并不足以承担起真正的领域名词活动，也无法构建真正的领域名词表体系。&lt;/p&gt;
&lt;p&gt;除此，我还在寻找一种更高效的构建领域特定语言方式，它用于帮助我们高效地进行软件开发，这种社会学活动。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-寻找高引用--高修改" class="anchor" aria-hidden="true" href="#寻找高引用--高修改"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;寻找高引用 + 高修改&lt;/h3&gt;
&lt;p&gt;经常修改的代码，并不是见得是件好事。我们可以从中看到一些代码的坏味道，把它朝合适的方便引进，如类库，如包内聚等等&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/refs-change.png"&gt;&lt;img src="images/refs-change.png" alt="高引用 + 高修改" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果你使用的是 Git，可以通过 &lt;code&gt;coca git -t&lt;/code&gt; 识别到高修改的文件：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ENTITYNAME&lt;/th&gt;
&lt;th&gt;REVSCOUNT&lt;/th&gt;
&lt;th&gt;AUTHORCOUNT&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;build.gradle&lt;/td&gt;
&lt;td&gt;1326&lt;/td&gt;
&lt;td&gt;36&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/asciidoc/index.adoc&lt;/td&gt;
&lt;td&gt;239&lt;/td&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;build-spring-framework/resources/changelog.txt&lt;/td&gt;
&lt;td&gt;187&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java&lt;/td&gt;
&lt;td&gt;170&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultListableBeanFactory.java&lt;/td&gt;
&lt;td&gt;159&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/docs/asciidoc/web/webmvc.adoc&lt;/td&gt;
&lt;td&gt;121&lt;/td&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java&lt;/td&gt;
&lt;td&gt;118&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/dist/changelog.txt&lt;/td&gt;
&lt;td&gt;118&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.java&lt;/td&gt;
&lt;td&gt;116&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;上述的代码是 Spring Framework 中最常修改的文件，前面三个文件看上去是合理的，但是 &lt;code&gt;AnnotationUtils.java&lt;/code&gt; 显然有问题。&lt;/p&gt;
&lt;p&gt;对应的 &lt;code&gt;DefaultListableBeanFactory.java&lt;/code&gt; 也有 2000+ 行左右的规模。&lt;/p&gt;
&lt;p&gt;从代码的行数和修改次数来看，它们都是上帝类，并且经常出现 Bug。&lt;/p&gt;
&lt;p&gt;下表是 Spring 源码中引用最多的方法：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;REFS COUNT&lt;/th&gt;
&lt;th&gt;METHOD&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2086&lt;/td&gt;
&lt;td&gt;org.springframework.util.Assert.notNull&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;952&lt;/td&gt;
&lt;td&gt;org.apache.commons.logging.Log.debug&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;773&lt;/td&gt;
&lt;td&gt;org.springframework.util.Assert.state&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;666&lt;/td&gt;
&lt;td&gt;org.apache.commons.logging.Log.isDebugEnabled&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;482&lt;/td&gt;
&lt;td&gt;org.apache.commons.logging.Log.trace&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;425&lt;/td&gt;
&lt;td&gt;org.springframework.util.StringUtils.hasText&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;398&lt;/td&gt;
&lt;td&gt;org.apache.commons.logging.LogFactory.getLog&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;392&lt;/td&gt;
&lt;td&gt;org.apache.commons.logging.Log.isTraceEnabled&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;268&lt;/td&gt;
&lt;td&gt;org.springframework.util.StringUtils.hasLength&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;213&lt;/td&gt;
&lt;td&gt;org.springframework.util.Assert.isTrue&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;从代码上来看，还是 Util 方法被引用得最多。似乎我们仍然需要一个更可靠的算法，来保证被引用的正常度。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-第一步防护网" class="anchor" aria-hidden="true" href="#第一步防护网"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;第一步：防护网&lt;/h2&gt;
&lt;p&gt;尽管对于某些部分的重构来说，我们只是移动一下代码的位置 —— 如分层架构的调整，它不需要我们编写对应的测试。但是呢，出于流程完整性的考虑，这一步步往往流程比较长，毕竟它可以减少系统中 bug 的出现，降低重构的风险。与此同时，这是可以由团队一起协作完成的工作，特别适合于多人的协同重构方式。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-防护网策略" class="anchor" aria-hidden="true" href="#防护网策略"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;防护网策略&lt;/h3&gt;
&lt;p&gt;为了&lt;strong&gt;保证对外暴露的 API 好的&lt;/strong&gt;，即我的重构不影响 API 的使用方，我们需要设计一个合适的防护策略。&lt;/p&gt;
&lt;p&gt;在设计的时候，我们采用的是测试金字塔来帮助我们搭建测策略。我们会从下（单元测试）向上（集成测试）一步步搭建测试策略。&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/test-primard.png"&gt;&lt;img src="images/test-primard.png" alt="测试金字塔" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;而当我们重构的时候，我们则是自顶向下设计防护策略。常见的测试策略有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;框架/模式库测试。xUnit，xMock，如 Java 语言里的 JUnit, Mockito；JavaScript 中的 Jest&lt;/li&gt;
&lt;li&gt;端到端 API 测试。JMeter，Postman，Rest Assured，Karate&lt;/li&gt;
&lt;li&gt;UI 集成测试。Protractor&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;考虑到测试即文档，在实现实现的时候，会配合一些支持自然语言描述的框架，如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文档式测试，Gauge （主流语言），Concordion（Java）&lt;/li&gt;
&lt;li&gt;BDD 测试，Cucumber（主流语言）&lt;/li&gt;
&lt;li&gt;ATDD 测试，Robot Framework（Python 语言）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了与运行客户端一配合，我们还需要有底层 API 来控制浏览器、客户端应用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Appium。移动 APP 和桌面应用，支持主流语言&lt;/li&gt;
&lt;li&gt;Selenium。Web 浏览器，支持主流语言&lt;/li&gt;
&lt;li&gt;Puppeteer。Node.js API 操作 Chrome 浏览器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于 APP 测试方案，可以参考我之前写的《&lt;a href="https://www.phodal.com/blog/phodal-architecture-101-mobile-appllication-test-architecture/" rel="nofollow"&gt;【架构拾集】移动应用的自动化测试（BDD 方式）&lt;/a&gt;》&lt;/p&gt;
&lt;p&gt;根据现有的 E2E（端到端）/集成测试框架的架构，我画了一个大致的测试策略分层架构图：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/test-arch.png"&gt;&lt;img src="images/test-arch.png" alt="测试架构" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;选择适合你们团队的测试架构，然后编写你的第一个测试。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-第一个测试" class="anchor" aria-hidden="true" href="#第一个测试"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;第一个测试&lt;/h3&gt;
&lt;p&gt;这个就简单了：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择方案，然后 Google&lt;/li&gt;
&lt;li&gt;寻找最简单的情形，编写测试&lt;/li&gt;
&lt;li&gt;只需要有了第一个，剩下的就是时间问题。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Done！&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-持续集成重构" class="anchor" aria-hidden="true" href="#持续集成重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;持续集成重构&lt;/h3&gt;
&lt;p&gt;如果你还没有持续集成环境的话，那么请搭建它。&lt;/p&gt;
&lt;p&gt;考虑到这是一个体力活，而且这方面的资料已经足够的多，我就不浪费大家的时间了。&lt;/p&gt;
&lt;p&gt;顺带一提，如果你的分支比较多，而且构建比较多，那么你可以考虑 &lt;code&gt;pipeline as pipeline&lt;/code&gt; 的方式进行构建。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-检视测试" class="anchor" aria-hidden="true" href="#检视测试"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;检视测试&lt;/h3&gt;
&lt;p&gt;某次代码重构中，我发现代码的测试覆盖率很高，过程中出了一些错误，重构手法不正确是一个问题。但是在重构的过程中，发现有些测试都是没有意义的，所以这让我意思到在构建防护网的时候，有必要审视一遍测试，查找测试代码中的坏味道。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;测试代码坏味道，是指单元测试代码中的不良编程实践（例如，测试用例的组织方式，实现方式以及彼此之间的交互方式），它们表明测试源代码中潜在的设计问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;常见的测试坏味道有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;空的测试。测试是生成的，但是没有内容。&lt;/li&gt;
&lt;li&gt;忽略的测试。即测试被 Ignore&lt;/li&gt;
&lt;li&gt;没有断言的测试。为了测试覆盖率而出现的测试&lt;/li&gt;
&lt;li&gt;多余的 Println。调试时留下的讯息。&lt;/li&gt;
&lt;li&gt;多重断言。每个测试函数只应该测试一个概念。&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有兴趣进一步了解的话，可以阅读《&lt;a href="https://www.phodal.com/blog/test-bad-smell/" rel="nofollow"&gt;测试代码的坏味道&lt;/a&gt;》。&lt;/p&gt;
&lt;p&gt;也可以 &lt;code&gt;coca tbs&lt;/code&gt; 来查找测试中的坏味道：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;TYPE&lt;/th&gt;
&lt;th&gt;FILENAME&lt;/th&gt;
&lt;th&gt;LINE&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/i18n/ExternalProcessOutputParserTest.java&lt;/td&gt;
&lt;td&gt;107&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/i18n/ExternalProcessOutputParserTest.java&lt;/td&gt;
&lt;td&gt;41&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/i18n/ExternalProcessOutputParserTest.java&lt;/td&gt;
&lt;td&gt;63&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RedundantPrintTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/i18n/I18NTest.java&lt;/td&gt;
&lt;td&gt;71&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RedundantPrintTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/i18n/I18NTest.java&lt;/td&gt;
&lt;td&gt;72&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RedundantPrintTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/i18n/I18NTest.java&lt;/td&gt;
&lt;td&gt;77&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/cc/arduino/net/PACSupportMethodsTest.java&lt;/td&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/processing/app/macosx/SystemProfilerParserTest.java&lt;/td&gt;
&lt;td&gt;51&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/processing/app/syntax/PdeKeywordsTest.java&lt;/td&gt;
&lt;td&gt;41&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/processing/app/tools/ZipDeflaterTest.java&lt;/td&gt;
&lt;td&gt;57&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/processing/app/tools/ZipDeflaterTest.java&lt;/td&gt;
&lt;td&gt;83&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuplicateAssertTest&lt;/td&gt;
&lt;td&gt;app/test/processing/app/tools/ZipDeflaterTest.java&lt;/td&gt;
&lt;td&gt;109&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-系统架构重构" class="anchor" aria-hidden="true" href="#系统架构重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;系统架构重构&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;架构将大问题分解为容易处理的小问题。——《架构师修炼之道 》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;重量级 DDD 更多的是结合现状 + 未来出发，更多的人参与，提供准确的信息。&lt;/p&gt;
&lt;p&gt;轻量级 DDD 则是通过现状，只需要少数熟悉的人，没有完成一致的达成，通过&lt;strong&gt;持续性赋能&lt;/strong&gt;改善模型。&lt;/p&gt;
&lt;p&gt;产品线 / 业务线来说，并非每一个子系统都是核心域，也不会投入大量的人和精力在上面。特别是，当你在重构的时候，投入的人员和精力不足以实施一个合理的事件风暴，以完成对应的领域驱动设计活动。所以，我们只能尽可能完善系统的设计。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-高质量级-ddd-重构演进驱动的事件风暴" class="anchor" aria-hidden="true" href="#高质量级-ddd-重构演进驱动的事件风暴"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;高质量级 DDD 重构：演进驱动的事件风暴&lt;/h3&gt;
&lt;p&gt;它意味着，重构时需要有：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;积极专注的团队参与&lt;/li&gt;
&lt;li&gt;复杂的场景&lt;/li&gt;
&lt;li&gt;领域专家参与协作&lt;/li&gt;
&lt;li&gt;迭代式的模型设计&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;为此需要：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;事件风暴&lt;/li&gt;
&lt;li&gt;识别上下文&lt;/li&gt;
&lt;li&gt;梳理上下文关系&lt;/li&gt;
&lt;li&gt;划分问题子域&lt;/li&gt;
&lt;li&gt;识别弹性边界&lt;/li&gt;
&lt;li&gt;领域建模&lt;/li&gt;
&lt;li&gt;分层架构&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对应的我们需要：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;重搭架构&lt;/li&gt;
&lt;li&gt;编写集成测试&lt;/li&gt;
&lt;li&gt;搬移代码&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;考虑到其复杂性，我建议采用《事件风暴设计工作坊》来完成相关的流程。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-轻量级-ddd-重构现状驱动的领域方案" class="anchor" aria-hidden="true" href="#轻量级-ddd-重构现状驱动的领域方案"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;轻量级 DDD 重构：现状驱动的领域方案&lt;/h3&gt;
&lt;p&gt;有意思的一个现象是，在真正落地的时候，对于核心的系统往往会抱着比较谨慎的态度 —— 除非原来的模式真的有问题。又或者是，所处的部门不是系统的核心部门时，在投入在会出现一定的问题。&lt;/p&gt;
&lt;p&gt;看图：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/quick-ddd.png"&gt;&lt;img src="images/quick-ddd.png" alt="Quick ES" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;相应的步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;结合工具识别所有的接口&lt;/li&gt;
&lt;li&gt;通过接口识别出领域名词（聚合、实体等）&lt;/li&gt;
&lt;li&gt;分析接口设计是否合理&lt;/li&gt;
&lt;li&gt;通过领域名词划分上下文边界&lt;/li&gt;
&lt;li&gt;重新定义领域名词&lt;/li&gt;
&lt;li&gt;结合领域名词划分新的 API&lt;/li&gt;
&lt;li&gt;划分领域和分层架构&lt;/li&gt;
&lt;li&gt;重新划分分层架构&lt;/li&gt;
&lt;li&gt;重构 service 代码，剥离领域逻辑&lt;/li&gt;
&lt;li&gt;重构代码到领域模型&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对于未采用 Swagger 等 API 管理工具的项目，可以通过 &lt;code&gt;coca api&lt;/code&gt; 生成 API 列表：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;GET   /aliyun/oss/policy                
POST  /aliyun/osscallback               
GET   /subject/list                     
GET   /esProduct/search                 
GET   /order/list                       
GET   /productAttribute/list/{cid}      
GET   /productCategory/list/{parentId}  
GET   /brand/list                       
GET   /esProduct/search/simple          
...
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-限界上下文要素" class="anchor" aria-hidden="true" href="#限界上下文要素"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;限界上下文要素&lt;/h3&gt;
&lt;p&gt;包含相关上下文的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实体，只要一个对象在生命周期中能够保持连续性，并且独立于它的属性（即使这些属性对系统用户非常重要），那它就是一个实体。它具有唯一标识和生命周期。&lt;/li&gt;
&lt;li&gt;值对象，当你只关心某个对象的属性时，该对象便可作为一个值对象。它是实体的附加业务概念，用来描述实体所包含的业务信息。&lt;/li&gt;
&lt;li&gt;领域服务（domain service）。封装了没有在模型中自然建模为值对象或实体的领域逻辑和概念。它的主要职责是使用实现和值对象编排业务逻辑。&lt;/li&gt;
&lt;li&gt;领域事件（domain event）。它用于表明问题域中发生了一些业务人员关心的事情。在命名领域事件时，我们往往选择动词的过去分词，以明确表达事件的属性，其中文形式往往是『XXX已YYY』。&lt;/li&gt;
&lt;li&gt;资源库（repository）。公开聚合根在内存中的集合的接口，提供聚合根的检索和持久化需要。&lt;/li&gt;
&lt;li&gt;工厂（factory）。即在实体或者值对象创建复杂时，可以委托给工厂（模式）进行创建。。&lt;/li&gt;
&lt;li&gt;聚合（aggregate）。是一种边界内的领域对象的集群，可以将其视为一个单元。可以封装一个到多个实体与值对象，用来维护该边界范围之内的业务完整性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-微服务重构" class="anchor" aria-hidden="true" href="#微服务重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;微服务重构&lt;/h3&gt;
&lt;p&gt;一旦涉及到对微服务进行重构的时候，我们有很大的可能性要对系统进行 API 的重构设计。它也意味着，我们可能会影响到 API 的使用方，如果 API 也是自己内部的系统，那么问题就不是太大；如果 API 的使用方是第三方团队的系统时，我们就需要考虑一下兼容方案。这种兼容方案会在一定程度上影响到我们的重构，甚至于我们有可能不对做这方面的重构。&lt;/p&gt;
&lt;p&gt;重构到微服务是一个巨大的挑战。&lt;/p&gt;
&lt;p&gt;微服务是一个生态系统，它需要大量的基础设施进行配合，如部署管道、服务发现、日志和监控、负责均衡等。&lt;/p&gt;
&lt;p&gt;如果团队本身没有相关的经验，并且尝试往上调整的话，那么需要在心理上做好大量的准备。&lt;/p&gt;
&lt;p&gt;如果你的目标是重构到微服架构，那么我建议你先重构到 DDD + 整洁架构，它是微服务架构的一个中间态。即，先看看容器架构重构。&lt;/p&gt;
&lt;h3&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;……&lt;/h3&gt;
&lt;p&gt;待定。&lt;/p&gt;
&lt;p&gt;由于笔者在这方面的经验不是非常丰富，但是我知道这里仍然有非常多的内容，可以探索。&lt;/p&gt;
&lt;p&gt;欢迎大家来 pull request。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-服务架构重构" class="anchor" aria-hidden="true" href="#服务架构重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;服务架构重构&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;小步前进，拉一下最新的代码。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我在设计之初，想把标题改为容器架构重构，它对应上 C4 模型。纠结之后，我还是改为了服务架构。可见，命名之难。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-整洁架构" class="anchor" aria-hidden="true" href="#整洁架构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;整洁架构&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/full-clean-architecture.png"&gt;&lt;img src="images/full-clean-architecture.png" alt="整洁架构" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Robert C. Martin 总结了六边形架构（即端口与适配器架构）、DCI （Data-Context-Interactions，数据-场景-交互）架构、BCI（Boundary Control Entity，Boundary Control Entity）架构等多种架构，归纳出了这些架构的基本特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;框架无关性。系统不依赖于框架中的某个函数，框架只是一个工具，&lt;strong&gt;系统不能适应于框架&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;可被测试。业务逻辑脱离于 UI、数据库等外部元素进行测试。&lt;/li&gt;
&lt;li&gt;UI 无关性。不需要修改系统的其它部分，就可以变更 UI，诸如由 Web 界面替换成 CLI。&lt;/li&gt;
&lt;li&gt;数据库无关性。业务逻辑与数据库之间需要进行解耦，我们可以随意切换 LocalStroage、IndexedDB、Web SQL。&lt;/li&gt;
&lt;li&gt;外部机构（agency）无关性。系统的业务逻辑，不需要知道其它外部接口，诸如安全、调度、代理等。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如图所示 Clean Architecture 一共分为四个环，四个层级。环与环之间，存在一个依赖关系原则：&lt;strong&gt;源代码中的依赖关系，必须只指向同心圆的内层，即由低层机制指向高级策略&lt;/strong&gt;。其类似于 SOLID 中的依赖倒置原则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;高层模块不应该依赖低层模块，两者都应该依赖其抽象&lt;/li&gt;
&lt;li&gt;抽象不应该依赖细节，细节应该依赖抽象&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;与此同时，四个环都存在各自核心的概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实体 Entities （又称领域对象或业务对象，实体用于封装企业范围的业务规则）&lt;/li&gt;
&lt;li&gt;用例 Use Cases（交互器，用例是特定于应用的业务逻辑）&lt;/li&gt;
&lt;li&gt;接口适配器 Interface Adapters （接口适配器层的主要作用是转换数据）&lt;/li&gt;
&lt;li&gt;框架和驱动（Frameworks and Drivers），最外层由各种框架和工具组成，比如 Web 框架、数据库访问工具等
这个介绍可能有些简单，让我复制/粘贴一下更详细的解释：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;实体（Entities）&lt;/strong&gt;，实体用于封装企业范围的业务规则。实体可以是拥有方法的对象，也可以是数据结构和函数的集合。如果没有企业，只是单个应用，那么实体就是应用里的业务对象。这些对象封装了最通用和高层的业务规则，极少会受到外部变化的影响。任何操作层面的改动都不会影响到这一层。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用例（Use Cases）&lt;/strong&gt;，用例是特定于应用的业务逻辑，一般用来完成用户的某个操作。用例协调数据流向或者流出实体层，并且在此过程中通过执行实体的业务规则来达成用例的目标。用例层的改动不会影响到内部的实体层，同时也不会受外层的改动影响，比如数据库、UI 和框架的变动。只有而且应当应用的操作发生变化的时候，用例层的代码才随之修改。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;接口适配器（Interface Adapters）&lt;/strong&gt;。接口适配器层的主要作用是转换数据，数据从最适合内部用例层和实体层的结构转换成适合外层（比如数据持久化框架）的结构。反之，来自于外部服务的数据也会在这层转换为内层需要的结构。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;框架和驱动（Frameworks and Drivers）&lt;/strong&gt;。最外层由各种框架和工具组成，比如 Web 框架、数据库访问工具等。通常在这层不需要写太多代码，大多是一些用来跟内层通信的胶水代码。这一层包含了所有实现细节，把实现细节锁定在这一层能够减少它们的改动对整个系统造成的伤害。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-设计新架构" class="anchor" aria-hidden="true" href="#设计新架构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;设计新架构&lt;/h3&gt;
&lt;p&gt;根据不同项目的实际情况，在真正落地的时候，会存在一些细微的差距。&lt;/p&gt;
&lt;p&gt;如我的同事 &lt;a href="https://github.com/huleTW"&gt;@huleTW&lt;/a&gt; 在 &lt;a href="https://github.com/huleTW/django-ddd-demo"&gt;django-ddd-demo&lt;/a&gt; 项目中使用的 Python + Django 下的 DDD 分层架构如下所示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;apis&lt;/strong&gt;：放各种 url 的 dispatcher&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;application&lt;/strong&gt;：放各种 use case，use case 只能访问 domain 里面的 domain service&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;domain&lt;/strong&gt;：放各个聚合，各个聚合里面有一个 domain service，domain service 操作可以聚合根，包含业务逻辑&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;infrastructure&lt;/strong&gt;：放读取数据（服务，中间件），以及公共的 util 包&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我的同事 &lt;a href="https://github.com/howiehu"&gt;@howiehu&lt;/a&gt; 在 &lt;a href="https://github.com/howiehu/ddd-architecture-samples"&gt;DDD Architecture Samples&lt;/a&gt; 项目中使用了整洁架构分层如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;├── adapters      适配器
│   ├── inbound   入站适配器
│   └── outbound  出站适配器
├── application   应用层
│   ├── concepts
│   ├── dto
│   ├── gateway
│   └── usecases  用例
└── domain        领域层
    ├── contexts  限界上下文
    └── core      核心概念
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;因此对于整洁架构的外部适配器，人们通过有多种叫法 interfaces、apis、facades、presentation、adapters 等等，&lt;/p&gt;
&lt;p&gt;而诸如 application、domain 和 infrastructure 来说，命名上倒是没有太大的区别。但是在实现上还是有相当大的区别：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;粘合层（service）&lt;/strong&gt;。在 application 中的粘合层倒是有不同的叫法 service（application service）、usecases、interactors。但是在真正实施的时候，还会有巨大的差别，采用 service 可能会出现上帝类，于是就出现用例驱动的 xxxUsecase。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;瘦 application vs 胖 application&lt;/strong&gt;。采用 PresentationDomainDataLayering 架构，即瘦 application 层，会把用例放在 domain 中；而采用胖 application 架构，则会把 usecase 放在 application 中。两者的使用场景的区别，主要取决于 CRUD 的&lt;strong&gt;纯净度&lt;/strong&gt;。如果你有 BFF，那么瘦 application 层适合于你；如果你是单体，又或者是跨实体操作多，那么胖 application 层适合你。&lt;/p&gt;
&lt;p&gt;不过，这些都不重要，重要的是要不要出现尖叫架构 —— 一看就懂得业务：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/screaming-architecture.png"&gt;&lt;img src="images/screaming-architecture.png" alt="尖叫架构" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;你只需要回答一个问题，你的场景复杂吗？复杂的话，你就拆 —— 将复杂问题繁杂化。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-实施新分层架构" class="anchor" aria-hidden="true" href="#实施新分层架构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;实施新分层架构&lt;/h3&gt;
&lt;p&gt;实施新分层架构是一个持续的过程，它需要配合后续的各种重构模式。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-划分类移动代码" class="anchor" aria-hidden="true" href="#划分类移动代码"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;划分类，移动代码&lt;/h4&gt;
&lt;p&gt;这一步我们所做的是：移动旧的 service、controller、model 为竖直 + 水平架构。&lt;/p&gt;
&lt;p&gt;对于大单体应用来说，从分层架构上，移到新的架构并不难：按各种层级创建应用，移动代码。&lt;/p&gt;
&lt;p&gt;对于微服务架构应该来说，这一步也不算麻烦。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-技术模块化--重搭" class="anchor" aria-hidden="true" href="#技术模块化--重搭"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;技术模块化 =&amp;gt; 重搭&lt;/h4&gt;
&lt;p&gt;对于原先模块划分不合理的应用来说，如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;├── pom.xml
├── zheng-api-common
│   └── pom.xml
├── zheng-api-rpc-api
│   └── pom.xml
├── zheng-api-rpc-service
│   └── pom.xml
└── zheng-api-server
    └── pom.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;因为包、类之间本身是根据技术维度来划分的，如果我们计划以业务维度重新开发时，便就得创建新的目录结构，再移入新的类包。但是这样做的一个问题是，中间存在一个不可恢复的状态，会在一定程度上影响重构效果。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-中间态分层" class="anchor" aria-hidden="true" href="#中间态分层"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;中间态分层&lt;/h3&gt;
&lt;p&gt;考虑到服务重构的难度，它会存在着一个长期的中间态分层架构。原因有很多：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无法短期内重构完&lt;/li&gt;
&lt;li&gt;未拆到正确位置的 API&lt;/li&gt;
&lt;li&gt;领域层中的 repository 未拆分&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以，可以考虑将瘦 application 层作为中间态架构。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-验收条件构建" class="anchor" aria-hidden="true" href="#验收条件构建"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;验收条件：构建&lt;/h3&gt;
&lt;p&gt;是的，在这一步里，由于只是移动文件，所以只需要执行一下构建，你就能验证移动文件是否正确。&lt;/p&gt;
&lt;p&gt;不过，由于有 IDEA 这样的工具上，想必不是问题。&lt;/p&gt;
&lt;p&gt;然而，要是代码库过于庞大，那么我建议你试试 &lt;code&gt;coca refactor&lt;/code&gt;。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-潜在问题" class="anchor" aria-hidden="true" href="#潜在问题"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;潜在问题&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-bean-注入" class="anchor" aria-hidden="true" href="#bean-注入"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;bean 注入&lt;/h4&gt;
&lt;h4&gt;&lt;a id="user-content-解决冲突" class="anchor" aria-hidden="true" href="#解决冲突"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;解决冲突&lt;/h4&gt;
&lt;h4&gt;&lt;a id="user-content-同步-api-修改" class="anchor" aria-hidden="true" href="#同步-api-修改"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;同步 API 修改&lt;/h4&gt;
&lt;h4&gt;&lt;a id="user-content-对齐新分层架构" class="anchor" aria-hidden="true" href="#对齐新分层架构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;对齐新分层架构&lt;/h4&gt;
&lt;h2&gt;&lt;a id="user-content-公共代码重构" class="anchor" aria-hidden="true" href="#公共代码重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;公共代码重构&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;小步前进，拉一下最新的代码。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;创建通用的共享组件导致了一系列问题，比如耦合、协调难度和复杂度增加。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当我看到一个个巨大的 common 包时，我开始痛恨 &lt;code&gt;common&lt;/code&gt;、&lt;code&gt;base&lt;/code&gt;、&lt;code&gt;util&lt;/code&gt; 这些该死的包，还有它们目录下统一管理的 &lt;code&gt;bean&lt;/code&gt;。我们真的已经把它们用烂了，所以你应该重新审视一下你的项目代码。&lt;/p&gt;
&lt;p&gt;所以，从这种意义上来说：&lt;strong&gt;复用与低耦合&lt;/strong&gt;，本身存在一定的互斥关系。&lt;/p&gt;
&lt;p&gt;公共代码往往缺乏抽象，又或者是追求过度的复用。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-它真是个-util-吗" class="anchor" aria-hidden="true" href="#它真是个-util-吗"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;它真是个 util 吗？&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;哦，不，它是个恶魔，因为它是 util。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;你会往 xxUtil 不加思索地扔入逻辑，正如你会往 common/bean 中扔入所有的 model，直次有一天，你拥有一个巨大无比的 base、common 代码。&lt;/p&gt;
&lt;p&gt;大多数情况下，所有和业务相关的 Util 都存在一定的问题，如 CaptchaUtil，它要么应该划到自己的上下文中去，要么扔到诸如于 domain/shared 等共享上下文，而不是和其它 util 放到一起。&lt;/p&gt;
&lt;p&gt;而诸如 FileUtil、DateUtil、RedisUtil、JdbcUtil 这些都可以说是基础设施相关的部分，它们可以划到 infrastructure/file 又或者是 infrastructure/date 目录下，而不是统一的管理这些 util。&lt;/p&gt;
&lt;p&gt;如 &lt;a href="https://stackoverflow.com/questions/1866794/naming-classes-how-to-avoid-calling-everything-a-whatevermanager" rel="nofollow"&gt;StackOverflow&lt;/a&gt; 的相关问题所列，我们还有诸如 Coordinator、Builder、Writer、Reader、Handler、Container、Protocol、Target、Converter、Controller、View、Factory、Entity、Bucket 等名称。&lt;/p&gt;
&lt;p&gt;试着干掉 Util，你将收获更多的类，笑~。&lt;/p&gt;
&lt;p&gt;Utils / Helper 多数是恶魔，无法满足单一职责和开闭原则。好的 OO 设计，大部分的类只表示一个事物，及其所有属性和操作。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;尽可能减少 Utils / Helper 类。好的 OO 设计，大部分的类只表示一个事物，及其所有属性和操作。&lt;/li&gt;
&lt;li&gt;如果使用一个 Util 用于操作类，如如 IList，那么它应该划到类中。除非该类不存在于当前的应用中。&lt;/li&gt;
&lt;li&gt;Util 中的方法应该是无状态的，比如没有 static 变量。&lt;/li&gt;
&lt;li&gt;如果有大量的 utils 方法，应该把划分到类中，以便快速找到它们。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-过度设计" class="anchor" aria-hidden="true" href="#过度设计"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;过度设计&lt;/h3&gt;
&lt;p&gt;好的设计是尽可能简单的，它最易于适应新的设计，并能跟随业务的变化而变化。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开发人员：『这个功能是给未来准备的』&lt;/li&gt;
&lt;li&gt;Tech Lead：未来是多久？一个月后？半年后？&lt;/li&gt;
&lt;li&gt;开发人员：……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/balanced-design.png"&gt;&lt;img src="images/balanced-design.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;图片出自：&lt;a href="https://stackoverflow.com/questions/1001120/what-is-over-engineering-as-applied-to-software" rel="nofollow"&gt;https://stackoverflow.com/questions/1001120/what-is-over-engineering-as-applied-to-software&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;与之相对应的设计不足，则是因为经验的缘故。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-重新定义消除二义性" class="anchor" aria-hidden="true" href="#重新定义消除二义性"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重新定义：消除二义性&lt;/h3&gt;
&lt;p&gt;当我们谈论 service 的时候，我们谈论的是同一个 service 吗？&lt;/p&gt;
&lt;p&gt;当我们谈论 model 的时候，我们谈论的是同一种 model 吗？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;若对于一个文法的某一句子存在两棵不同的语法树，则该文法是二义性文法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果有多种不同类型的类，都被放置在 model 包下。那么，你应该消除 model 这个包，改为更表意的名称，如 Entity、Request、Response 等等。同理，一旦你们展开对某个名称的讨论时，是时候好好考虑其中的二义性。&lt;/p&gt;
&lt;p&gt;最后，你还需要有一个相关领域的名词表。&lt;/p&gt;
&lt;p&gt;避免产生二异性的词语。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-类进行内聚" class="anchor" aria-hidden="true" href="#类进行内聚"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;类进行内聚&lt;/h3&gt;
&lt;p&gt;参考下文中的模型重构。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-划分技术部分" class="anchor" aria-hidden="true" href="#划分技术部分"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;划分技术部分&lt;/h3&gt;
&lt;p&gt;如 Spring 框架的源码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;└── springframework
    ├── cache
    │   ├── annotation
    │   ├── concurrent
    │   ├── config
    │   ├── interceptor
    │   └── support
    ├── context
    │   ├── annotation
    │   ├── config
    │   ├── event
    │   ├── expression
    │   ├── i18n
    │   ├── index
    │   ├── support
    │   └── weaving
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-划分业务部分" class="anchor" aria-hidden="true" href="#划分业务部分"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;划分业务部分&lt;/h3&gt;
&lt;p&gt;业务模块中的技术部分。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-职责少--平级" class="anchor" aria-hidden="true" href="#职责少--平级"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;职责少 =&amp;gt; 平级&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;└── orm
    ├── context
    ├── support
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-业务代码多--再按业务拆分" class="anchor" aria-hidden="true" href="#业务代码多--再按业务拆分"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;业务代码多 =&amp;gt; 再按业务拆分&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;infrastructure
└── repository
    ├── context
    │   ├── blog
    │   ├── advert
    │   └── pages
    ├── kafka
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-模块重构" class="anchor" aria-hidden="true" href="#模块重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;模块重构&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;小步前进，拉一下最新的代码。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;模块/组件是软件的部署单元，是整个软件系统在部署过程中可以&lt;strong&gt;独立部署&lt;/strong&gt;的最小实体。 —— 《架构整洁之道》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-组件聚合三原则" class="anchor" aria-hidden="true" href="#组件聚合三原则"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;组件聚合三原则&lt;/h3&gt;
&lt;p&gt;在我们设计软件工程的时候，我们&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/components-rules.png"&gt;&lt;img src="images/components-rules.png" alt="组件聚合" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bob 大叔在书中提到了三个原则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;复用/发布等同原则（REP）。软件复用的最小粒度等同于其发布的最小粒度。&lt;/li&gt;
&lt;li&gt;共同闭包原则（CCP）。我们应该将那些会同时修改，并且为相同目的而修改的类放到同一个组件中，而将不会同时修改，并且不会为了相同目的而修改的那些类放到不同组件中。&lt;/li&gt;
&lt;li&gt;共同复用原则（CRP）。不要强迫一个组件的用户依赖他们不需要的东西。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不过，其实按我的理解，第一条原则讲的是合理、有效的包发布策略；而后两条原则，只需要满足我们的模块/包满足开闭原则、单一职责，就可以合理地解决整个流程了。不过，这三个原则可以合理地解释在软件生命周期中，我们应该如何管理模块。&lt;/p&gt;
&lt;p&gt;因此，对于自家的模块只需要：&lt;strong&gt;根据技术、业务划分包，形成上下文边界，防止代码越界&lt;/strong&gt;。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-打破包之间的依赖关系" class="anchor" aria-hidden="true" href="#打破包之间的依赖关系"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;打破包之间的依赖关系&lt;/h3&gt;
&lt;p&gt;这一步理论上来看，倒也是蛮简单的：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;从 Gradle / Maven 找到想去除的依赖&lt;/li&gt;
&lt;li&gt;全局搜索依赖的包名&lt;/li&gt;
&lt;li&gt;解决依赖
&lt;ul&gt;
&lt;li&gt;提取到类库中&lt;/li&gt;
&lt;li&gt;剥离并使用依赖注入&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;删除依赖的包&lt;/li&gt;
&lt;li&gt;执行构建和 E2E 测试&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;TBC。工具还在写，目前主要要看人眼识别。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-依赖倒置" class="anchor" aria-hidden="true" href="#依赖倒置"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;依赖倒置&lt;/h3&gt;
&lt;p&gt;为此，我们可能需要寻找一些合适的依赖注入框架：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Java。Spring，Dagger 2，Guice 等等&lt;/li&gt;
&lt;li&gt;Go。Facebook  Inject、Uber Dig、Google Wire 等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对了，静态语言呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不需要。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-更好的面向对象" class="anchor" aria-hidden="true" href="#更好的面向对象"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;更好的面向对象&lt;/h4&gt;
&lt;p&gt;事实上，如果我们把面向对象做好的话，那么对应的逻辑就会封装到相应的对象中。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-清理垃圾代码" class="anchor" aria-hidden="true" href="#清理垃圾代码"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;清理垃圾代码&lt;/h3&gt;
&lt;p&gt;未使用的类，未使用方法。&lt;/p&gt;
&lt;p&gt;它根本不知道什么时候会使用到，又或者是它已经通过多态来实现。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-模型重构" class="anchor" aria-hidden="true" href="#模型重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;模型重构&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;小步前进，拉一下最新的代码。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;架构元模型定义了模型中使用的概念和使用规则。 —— 《架构师修炼之道》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;你可以将其对比于领域模型。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-聚合行为" class="anchor" aria-hidden="true" href="#聚合行为"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;聚合行为&lt;/h3&gt;
&lt;p&gt;对于领域模型来说，我们也无法直接在代码中实现架构元模型的所有概念。但是，我们所要做的事不断减少模型与代码之间的差异。如果我们不创建模式，而直接开始编写代码，那么我们会收获一堆上帝类。但是，反过来，当我们有一堆上帝类的时候，那么我们就需要从类中把行为都抽取出来。&lt;/p&gt;
&lt;p&gt;当我们的贫血模型，拥有了行为，就可以进一步构成富血模型，符合面向对象（OO）的思想。进一步的，我们可以从业务的角度来考虑这个问题，将充血模型改为领域模型。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-由内到外剥离由外到内聚合" class="anchor" aria-hidden="true" href="#由内到外剥离由外到内聚合"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;由内到外剥离，由外到内聚合&lt;/h4&gt;
&lt;p&gt;对于那些已经采用 DDD 架构的项目来说，往往会遇到一些领域模型不完整、包含非领域相关代码等的情况。&lt;/p&gt;
&lt;p&gt;遇到这种情况时，可以尝试：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;由内到外剥离非模型相关代码。只需要浏览一遍领域模型相关的代码，然后剥离不属于模型的代码；通过依赖注入、工厂模式等方式，建立整洁的 domain 层。&lt;/li&gt;
&lt;li&gt;由外到内聚合领域模型相关逻辑。这是一个复杂的过程，需要每个使用到模型的调用方，再看是属于领域相关的行为。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;第一步可以在短期内快速实现，而第二步则需要一个漫长的过长 —— 取决于项目的大小。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-识别模式-1输入参数" class="anchor" aria-hidden="true" href="#识别模式-1输入参数"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;识别模式 1：输入参数&lt;/h4&gt;
&lt;p&gt;你懂的&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-识别模式-2返回参数" class="anchor" aria-hidden="true" href="#识别模式-2返回参数"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;识别模式 2：返回参数&lt;/h4&gt;
&lt;p&gt;你懂的&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-优化创建" class="anchor" aria-hidden="true" href="#优化创建"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;优化创建&lt;/h4&gt;
&lt;p&gt;笔者在某个重构项目中，遇到模型的创建逻辑很复杂 —— 参数多、场景多，所以做的第一件事情是：使用工厂模式优化了创建过程。&lt;/p&gt;
&lt;p&gt;参考工厂模式。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-重命名统一语言" class="anchor" aria-hidden="true" href="#重命名统一语言"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重命名：统一语言&lt;/h3&gt;
&lt;p&gt;在 DDD 中强调了统一语言的重要性，为此我们有必要对代码中的模型名称及其行为进行检视。在软件工程实践不好的团队中，你往往会出现&lt;strong&gt;对于同一个事件，往往会有多种命名方式&lt;/strong&gt;。哪怕你觉得它是不正确的，因为 ownership 的缺乏，也没有人来统一对应的命名。&lt;/p&gt;
&lt;p&gt;所以，在我们决定继续往下走之前，先学习一下怎么命名。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;计算机科学只存在两个难题：缓存失效和命名。 —— Phil KarIton&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/7_stages_of_naming.png"&gt;&lt;img src="images/7_stages_of_naming.png" alt="Arlo Belshee 命名的七步骤" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;原文链接：&lt;a href="https://www.digdeeproots.com/articles/on/naming-as-a-process/" rel="nofollow"&gt;naming is a process&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;但是还是更习惯于原来的文章中的：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;阶段&lt;/th&gt;
&lt;th&gt;解释&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;空白&lt;/td&gt;
&lt;td&gt;没有名称&lt;/td&gt;
&lt;td&gt;doSomething()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;凑合&lt;/td&gt;
&lt;td&gt;名称不能准确反应元素的含义&lt;/td&gt;
&lt;td&gt;preload()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;沾边&lt;/td&gt;
&lt;td&gt;名称至少反映了元素某一方面的功能&lt;/td&gt;
&lt;td&gt;DomSomethingEvilToDB()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;反映功能&lt;/td&gt;
&lt;td&gt;名称直接描述了元素的所有功能&lt;/td&gt;
&lt;td&gt;ParseXmlAndStoreFightToDbAndLocalCacheAndStartProcessing()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;反映角色&lt;/td&gt;
&lt;td&gt;名称充分地反映了元素在架构中的角色&lt;/td&gt;
&lt;td&gt;StoreFightlightToDatabaseAndStartProcessing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;反映意图&lt;/td&gt;
&lt;td&gt;名称不仅反映元素的功能，还能反映其目的。&lt;/td&gt;
&lt;td&gt;BeginTrackingFlight()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;领域抽象&lt;/td&gt;
&lt;td&gt;名称超越了单个元素本身，成为一个新的抽象概念。&lt;/td&gt;
&lt;td&gt;MonitoringPanle.Add(new Flight())&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;偶然间，我看到我找到我书架上的《重构与模式》时，刚好看到一本《实现模式》，顺便看了看，发现书的内容对于本文有启发意义。&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/implementation-patterns.png"&gt;&lt;img src="images/implementation-patterns.png" alt="《实现模式》概览" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;书中提及了四五种类型类、状态、消息与流（原行为）、方法，但是对于我们的统一语言工作来说，只需要重命名类、方法、状态就够了。&lt;/p&gt;
&lt;p&gt;对应的解释如下：&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-类" class="anchor" aria-hidden="true" href="#类"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;类&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;数据的变化比逻辑要繁琐得多，正是这种现象让类有了存在的意义。—— 《实现模式》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对于继承的类来说，它应该遵循这么一些原则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;超类名称要简单&lt;/li&gt;
&lt;li&gt;子类名称要合格&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-状态" class="anchor" aria-hidden="true" href="#状态"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;状态&lt;/h4&gt;
&lt;p&gt;状态包含了变量、字段、常量、局部参数、参数、参数对象等等。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-方法" class="anchor" aria-hidden="true" href="#方法"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;方法&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;在命名类和操作时要描述它们的效果和目的，而不要表露它们是通过何种方式达到目。 —— Eric Evans&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-容器" class="anchor" aria-hidden="true" href="#容器"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;容器&lt;/h4&gt;
&lt;h3&gt;&lt;a id="user-content-离心分离模型消除二义性" class="anchor" aria-hidden="true" href="#离心分离模型消除二义性"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;离心分离模型：消除二义性&lt;/h3&gt;
&lt;p&gt;接下来就是处理剩下的 bean、model 等等模型。&lt;/p&gt;
&lt;p&gt;在一个系统中，你会存在这么一些不同的 model：&lt;/p&gt;
&lt;p&gt;（PS：部分描述可能不准确，欢迎指正）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;与数据库表结构对应的 DO（ Data Object）/ PO(Persistant Object)。&lt;/li&gt;
&lt;li&gt;查询数据的 Query、Request。&lt;/li&gt;
&lt;li&gt;对外传输的对象：DTO（ Data Transfer Object）。&lt;/li&gt;
&lt;li&gt;业务层之间的数据对象：VO（Value Object） / BO（Business Object)。&lt;/li&gt;
&lt;li&gt;访问数据库的：DAO (Data Access Object数据访问对象)。&lt;/li&gt;
&lt;li&gt;以及我们想要的 DDD 中的实体 Entity&lt;/li&gt;
&lt;li&gt;还有其它的 POJO（ Plain Ordinary Java Object）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但是它们都是 model，所以它们都被扔到 model 中……，又或者是 bean 中……。导致，你有了一个巨大比的 model 层。&lt;/p&gt;
&lt;p&gt;所以，在 DDD 又或者是 Clean Architecture，我们重新命名了不同的模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 Command / Request 作为输入参数。其中的 Command 模式在完成后需要发出对应的 Event。&lt;/li&gt;
&lt;li&gt;使用 Response / DTO / Representation 作为返回结果。&lt;/li&gt;
&lt;li&gt;对 Entity 大家保持了一致的意见&lt;/li&gt;
&lt;li&gt;还有 PO / DO 作为作为数据库的存储模型&lt;/li&gt;
&lt;li&gt;DAO 作为数据库的访问模型&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不过，其实你只要不再让使用 model 和 bean，相似会有更多地收获。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-提取参数对象" class="anchor" aria-hidden="true" href="#提取参数对象"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;提取参数对象&lt;/h3&gt;
&lt;p&gt;如果一个类包含大量的参数，并且参数中存在一些相似的情形。对于概念统一的情况，可以提取成参数对象。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-处理过程逻辑" class="anchor" aria-hidden="true" href="#处理过程逻辑"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;处理过程逻辑&lt;/h3&gt;
&lt;p&gt;过程不应该模型的一部分，但是它是领域的一部分。&lt;/p&gt;
&lt;p&gt;如 Eric Evans 在所说，区分是否显式表达概念的关键在于：过程是否经常被领域专家谈起，又或者只是计算机程序机制的一部分。&lt;/p&gt;
&lt;p&gt;这时候，我们就需要规格（Specification）模式。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-领域特定语言" class="anchor" aria-hidden="true" href="#领域特定语言"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;领域特定语言&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-模式重构" class="anchor" aria-hidden="true" href="#模式重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;模式重构&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;模式是某种场合下对某个问题的一个解决方案的&lt;strong&gt;一种结构化展现&lt;/strong&gt;。 ——  Jon Vlissides（GoF 成员）《设计模式沉思录》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;小步前进，拉一下最新的代码。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;不过，人们对于设计模式的看法就变成了砒霜，听上去有害，实际上真香。&lt;/p&gt;
&lt;p&gt;我不是想鼓励使用设计模式，只是呢，如开头所说，我想展示的是如何用它来提升代码的可读性。也因此，我们的第一个例子是，干掉反模式的设计模式。&lt;/p&gt;
&lt;p&gt;一旦你决定使用某种设计模式的时候，请确保&lt;strong&gt;团队的所有人知道它解决了什么问题？&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-终止-singleton" class="anchor" aria-hidden="true" href="#终止-singleton"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;终止 Singleton&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;确保一个类只有一个实例，并提供一个全局访问点来访问该实例。—— 《设计模式：可复用面向对象软件的基础》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;单例对象存活的时间通常很长，它们通常存在于程序的整个生命周期中。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-工厂封装复杂构建" class="anchor" aria-hidden="true" href="#工厂封装复杂构建"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;工厂封装复杂构建&lt;/h3&gt;
&lt;p&gt;工厂是领域驱动设计中的重要组件。&lt;/p&gt;
&lt;p&gt;工厂的目标：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;隐藏创建对象的复杂性&lt;/li&gt;
&lt;li&gt;减少对外暴露过多的内部结构&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;工厂模式是一种创建方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;工厂方法（factory method）&lt;/li&gt;
&lt;li&gt;抽象工厂（abstracty factory）&lt;/li&gt;
&lt;li&gt;建造者模式（builder）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;值得注意的是：工厂并不总是需要独立的静态类。&lt;/p&gt;
&lt;p&gt;尝试使用 &lt;code&gt;coca suggest&lt;/code&gt; 会有惊喜。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-重构手法" class="anchor" aria-hidden="true" href="#重构手法"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构手法&lt;/h4&gt;
&lt;p&gt;对应的手法是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;提取构建步骤到新的构建方法中&lt;/li&gt;
&lt;li&gt;将构建步骤方法转为 static 方法&lt;/li&gt;
&lt;li&gt;将这个 static 方法移到工厂类中&lt;/li&gt;
&lt;li&gt;将旧的构建函数提取成工厂方法&lt;/li&gt;
&lt;li&gt;将提取的工厂方法移到类中&lt;/li&gt;
&lt;li&gt;内联原有的工厂使用方&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-策略模式提供易变规则" class="anchor" aria-hidden="true" href="#策略模式提供易变规则"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;策略模式提供易变规则&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;我们需要把过程中的易变部分提取到模型的一个单独的『策略』对象中，将规则与它控制的行为分开。——《领域驱动设计：软件核心复杂性应对之道》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;看标题，你懂的。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-建造者模式拆解复杂对象" class="anchor" aria-hidden="true" href="#建造者模式拆解复杂对象"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;建造者模式拆解复杂对象&lt;/h3&gt;
&lt;p&gt;看标题，你懂的。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-工具自动化识别" class="anchor" aria-hidden="true" href="#工具自动化识别"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;工具：自动化识别&lt;/h3&gt;
&lt;p&gt;如 Coca 提供的 &lt;code&gt;coca suggest&lt;/code&gt;功能，可以对相应的类提供一些建议，如：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;CLASS&lt;/th&gt;
&lt;th&gt;PATTERN&lt;/th&gt;
&lt;th&gt;REASON&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Insect&lt;/td&gt;
&lt;td&gt;factory&lt;/td&gt;
&lt;td&gt;too many constructor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bee&lt;/td&gt;
&lt;td&gt;factory, builder&lt;/td&gt;
&lt;td&gt;complex constructor, too many constructor, too many parameters&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-代码重构" class="anchor" aria-hidden="true" href="#代码重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;代码重构&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;理想的方法长度不应该超过 4 行代码。—— Robert C Martin&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;常见的富血模型的类，往往包含了系统的行为。&lt;/p&gt;
&lt;p&gt;常见的原因是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;缺乏抽象&lt;/li&gt;
&lt;li&gt;过程代码&lt;/li&gt;
&lt;li&gt;行为无法附着&lt;/li&gt;
&lt;li&gt;未来复用&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;从技巧上来说，主要是&lt;strong&gt;提取、内联与移动&lt;/strong&gt;，配合上 IDE 的重构功能和《重构：改善既有代码的设计》，那么剩下的事件就简单了。&lt;/p&gt;
&lt;p&gt;如果你缺乏这方面的技巧，欢迎与我们联系。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-降低圈复杂度" class="anchor" aria-hidden="true" href="#降低圈复杂度"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;降低圈复杂度&lt;/h3&gt;
&lt;p&gt;圈复杂度过大的代码，容易出问题。也因此呢，作为重构的第一步，只需要找一个工具，然后消除即可。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-手法提取" class="anchor" aria-hidden="true" href="#手法提取"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;手法：提取&lt;/h3&gt;
&lt;p&gt;提取分为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;提取参数&lt;/li&gt;
&lt;li&gt;提取参数对象&lt;/li&gt;
&lt;li&gt;提取变量&lt;/li&gt;
&lt;li&gt;提取常量&lt;/li&gt;
&lt;li&gt;提取方法&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-手法内联" class="anchor" aria-hidden="true" href="#手法内联"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;手法：内联&lt;/h3&gt;
&lt;p&gt;内联上的手法则是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;内联参数&lt;/li&gt;
&lt;li&gt;内联变量&lt;/li&gt;
&lt;li&gt;内联常量&lt;/li&gt;
&lt;li&gt;内联方法&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-手法移动" class="anchor" aria-hidden="true" href="#手法移动"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;手法：移动&lt;/h3&gt;
&lt;p&gt;移动的关键不在于&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-方法移至其它类中" class="anchor" aria-hidden="true" href="#方法移至其它类中"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;方法移至其它类中&lt;/h4&gt;
&lt;p&gt;这里的 Ctrl + T 对应于老式的 IDEA 快捷键 Ctrl + Alt + Shift + T&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将函数转为静态方法，以解除对外的依赖（可选）（Static Method，Ctrl + T）&lt;/li&gt;
&lt;li&gt;将与函数职责无关的部分提取为函数的参数（Extract Functional Parameter，Ctrl + T）&lt;/li&gt;
&lt;li&gt;将函数的参数提取为参数对象（Extract Parameter Object，Ctrl + T）&lt;/li&gt;
&lt;li&gt;将函数移到参数对象中（Move Instance Method, F6）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;完美。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-标准4-行的方法" class="anchor" aria-hidden="true" href="#标准4-行的方法"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;标准：4 行的方法&lt;/h3&gt;
&lt;p&gt;偶然间然《修改代码的艺术：构建易维护代码的 9 条最佳实践》上看到了那句：『理想的方法长度不应该超过 4 行代码』。&lt;/p&gt;
&lt;p&gt;所以，我找出了书架上的那本《代码整洁之道》，找到了出处 32 页。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;函数不该有 100 行那么长，20 行封顶最佳。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后就是 Kent Beck 的 Java/Swing 小程序四行的故事。&lt;/p&gt;
&lt;p&gt;但是，要保持一个好的习惯，寻找合适的机会去重构它。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-重构示例" class="anchor" aria-hidden="true" href="#重构示例"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构示例&lt;/h2&gt;
&lt;p&gt;我正在寻找一个合适的项目来演示如何重构。事实上，我已经找到了一些，但是它们的复杂度不太适合在些教学，所以我正在努力简化出一个可用的版本。&lt;/p&gt;
&lt;p&gt;如果你已经迫不急待的话，可以尝试对以下的项目进行重构：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/shuzheng/zheng"&gt;https://github.com/shuzheng/zheng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/macrozheng/mall"&gt;https://github.com/macrozheng/mall&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;它们是我在 GitHub 上找到的 Star 数相当多的开源 Java 项目，所以让我们来进行评估吧。&lt;/p&gt;
&lt;p&gt;这两个项目的作者在项目中展示了极高的专业性和原则性。无论怎么说，这都是“好代码”，我也并非出于恶意的目的。如果你看了我在 GitHub 上的项目，你也会对我有诸多吐槽。我所尝试去做的是，以专业眼光来检视问题，不多也不和。作为一个追求匠艺的手工艺人，我们应该欢迎别人对我们这么做。只有批评才能让我们学到更多的东西。在进一步的重构之前，我们要再一次感谢两位作者将代码免费给社区的勇气和信心。他们做得相当的好。&lt;/p&gt;
&lt;p&gt;相比之下，我大抵就只会复制和粘贴内容。&lt;/p&gt;
&lt;p&gt;开始之前，你大可以从 GitHub 上复制这两个项目的其中一个，然后这里的例子以 mall 为例。你可以将 zheng 作为你的练手项目。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-评估" class="anchor" aria-hidden="true" href="#评估"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;评估&lt;/h3&gt;
&lt;p&gt;这两个项目都有丰富的文档，足够让你搭建好它们的环境。事实上，我觉得你可能不需要这样的操作，你需要打开你的 Intellij IDEA，然后构建一下，就可以阅读代码了。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-c4-模型展开" class="anchor" aria-hidden="true" href="#c4-模型展开"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;C4 模型展开&lt;/h4&gt;
&lt;p&gt;首先，让我们以 C4 模型来展开这个项目的代码。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;展开系统目录结构&lt;/strong&gt;。从目录结构上来看，mall 系统的组织相当的不错，按业务和通用模块进行了拆分。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;├── mall-common -- 工具类及通用代码
├── mall-mbg -- MyBatisGenerator生成的数据库操作代码
├── mall-security -- SpringSecurity封装公用模块
├── mall-admin -- 后台商城管理系统接口
├── mall-search -- 基于Elasticsearch的商品搜索系统
├── mall-portal -- 前台商城系统接口
└── mall-demo -- 框架搭建时的测试代码
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;展开其中的一个微服务&lt;/strong&gt;。这里以 mall 为例，这是典型的 controller-service-dao 架构：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mall-admin
├── bo
├── component
├── config
├── controller
├── dao
├── dto
├── service
└── validator
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;而其中的 &lt;code&gt;home&lt;/code&gt; 包，又以&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;展开包架构&lt;/strong&gt;。接着，让我们看看 controller 包下的目录结构，这是按技术划分服务的架构模式：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;controller
...
├── SmsFlashPromotionController.java
├── SmsFlashPromotionProductRelationController.java
├── SmsFlashPromotionSessionController.java
├── SmsHomeAdvertiseController.java
├── SmsHomeBrandController.java
├── SmsHomeNewProductController.java
├── SmsHomeRecommendProductController.java
├── SmsHomeRecommendSubjectController.java
├── UmsAdminController.java
├── UmsMemberLevelController.java
├── UmsPermissionController.java
└── UmsRoleController.java
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;展开类&lt;/strong&gt;。接着，让我们查看一下 OmsOrderReturnApplyController.java 文件，看看最后的接口：&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@ApiOperation&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;修改申请状态&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;@RequestMapping&lt;/span&gt;(&lt;span class="pl-c1"&gt;value&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/update/status/{id}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;method&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;RequestMethod&lt;/span&gt;&lt;span class="pl-c1"&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;POST&lt;/span&gt;)
&lt;span class="pl-k"&gt;@ResponseBody&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-smi"&gt;CommonResult&lt;/span&gt; updateStatus(&lt;span class="pl-k"&gt;@PathVariable&lt;/span&gt; &lt;span class="pl-smi"&gt;Long&lt;/span&gt; id, &lt;span class="pl-k"&gt;@RequestBody&lt;/span&gt; &lt;span class="pl-smi"&gt;OmsUpdateStatusParam&lt;/span&gt; statusParam) {
    &lt;span class="pl-k"&gt;int&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; returnApplyService&lt;span class="pl-k"&gt;.&lt;/span&gt;updateStatus(id, statusParam);
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (count &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;) {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;CommonResult&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;success(count);
    }
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;CommonResult&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;failed();
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;用 OmsUpdateStatusParam 封装了请求参数，这个实践相当的不错。&lt;/p&gt;
&lt;p&gt;接着，我们进入 &lt;code&gt;updateStatus&lt;/code&gt; 方法看看：&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@Override&lt;/span&gt;
&lt;span class="pl-k"&gt;@Override&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; updateStatus(&lt;span class="pl-smi"&gt;Long&lt;/span&gt; id, &lt;span class="pl-smi"&gt;OmsUpdateStatusParam&lt;/span&gt; statusParam) {
    &lt;span class="pl-smi"&gt;Integer&lt;/span&gt; status &lt;span class="pl-k"&gt;=&lt;/span&gt; statusParam&lt;span class="pl-k"&gt;.&lt;/span&gt;getStatus();
    &lt;span class="pl-smi"&gt;OmsOrderReturnApply&lt;/span&gt; returnApply &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;OmsOrderReturnApply&lt;/span&gt;();
    &lt;span class="pl-k"&gt;if&lt;/span&gt;(status&lt;span class="pl-k"&gt;.&lt;/span&gt;equals(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)){
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;确认退货&lt;/span&gt;
        returnApply&lt;span class="pl-k"&gt;.&lt;/span&gt;setId(id);
        returnApply&lt;span class="pl-k"&gt;.&lt;/span&gt;setStatus(&lt;span class="pl-c1"&gt;1&lt;/span&gt;);
        returnApply&lt;span class="pl-k"&gt;.&lt;/span&gt;setReturnAmount(statusParam&lt;span class="pl-k"&gt;.&lt;/span&gt;getReturnAmount());
        returnApply&lt;span class="pl-k"&gt;.&lt;/span&gt;setCompanyAddressId(statusParam&lt;span class="pl-k"&gt;.&lt;/span&gt;getCompanyAddressId());
        returnApply&lt;span class="pl-k"&gt;.&lt;/span&gt;setHandleTime(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Date&lt;/span&gt;());
        returnApply&lt;span class="pl-k"&gt;.&lt;/span&gt;setHandleMan(statusParam&lt;span class="pl-k"&gt;.&lt;/span&gt;getHandleMan());
        returnApply&lt;span class="pl-k"&gt;.&lt;/span&gt;setHandleNote(statusParam&lt;span class="pl-k"&gt;.&lt;/span&gt;getHandleNote());
    }&lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt;(status&lt;span class="pl-k"&gt;.&lt;/span&gt;equals(&lt;span class="pl-c1"&gt;2&lt;/span&gt;)){
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;完成退货&lt;/span&gt;
        returnApply&lt;span class="pl-k"&gt;.&lt;/span&gt;setId(id);
        returnApply&lt;span class="pl-k"&gt;.&lt;/span&gt;setStatus(&lt;span class="pl-c1"&gt;2&lt;/span&gt;);
        returnApply&lt;span class="pl-k"&gt;.&lt;/span&gt;setReceiveTime(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Date&lt;/span&gt;());
        returnApply&lt;span class="pl-k"&gt;.&lt;/span&gt;setReceiveMan(statusParam&lt;span class="pl-k"&gt;.&lt;/span&gt;getReceiveMan());
        returnApply&lt;span class="pl-k"&gt;.&lt;/span&gt;setReceiveNote(statusParam&lt;span class="pl-k"&gt;.&lt;/span&gt;getReceiveNote());
    }
		&lt;span class="pl-c1"&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;嗯，这是一个典型的贫血模型设计，这些业务逻辑都可以内聚到领域模型中。&lt;/p&gt;
&lt;p&gt;所以，我们有了初步的结论，可以尝试的内容：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;典型三层架构。可以业务维度重新做分层架构&lt;/li&gt;
&lt;li&gt;贫血模型。可以重构到充血模型&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-工具评估" class="anchor" aria-hidden="true" href="#工具评估"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;工具评估&lt;/h3&gt;
&lt;p&gt;现在，是时候拿出我的 Coca：&lt;a href="https://github.com/phodal/coca"&gt;https://github.com/phodal/coca&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-代码统计" class="anchor" aria-hidden="true" href="#代码统计"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;代码统计&lt;/h4&gt;
&lt;p&gt;执行一下 &lt;code&gt;coca cloc&lt;/code&gt; 可以看看项目的行数统计：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;───────────────────────────────────────────────────────────────────────────────
Language                 Files     Lines   Blanks  Comments     Code Complexity
───────────────────────────────────────────────────────────────────────────────
Java                       471     80837    16265      2276    62296       1405
XML                        112     21710       61       119    21530          0
YAML                        12       430       36         8      386          0
Markdown                    10      1211      271         0      940          0
JSON                         8   1345664        0         0  1345664          0
gitignore                    6       119       15        17       87          0
Shell                        3        46        0         3       43          0
SVG                          2      6132        0       988     5144          0
License                      1       201       32         0      169          0
Properties File              1         4        0         0        4          0
SQL                          1      2192      143       440     1609          0
───────────────────────────────────────────────────────────────────────────────
Total                      627   1458546    16823      3851  1437872       1405
───────────────────────────────────────────────────────────────────────────────
Estimated Cost to Develop $55,872,945
Estimated Schedule Effort 70.766444 months
Estimated People Required 93.525243
───────────────────────────────────────────────────────────────────────────────
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-基本情况评估" class="anchor" aria-hidden="true" href="#基本情况评估"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;基本情况评估&lt;/h4&gt;
&lt;p&gt;先执行一下 &lt;code&gt;coca analysis&lt;/code&gt;，然后 &lt;code&gt;coca evalute&lt;/code&gt;，得到一个基本的情况&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;TYPE&lt;/th&gt;
&lt;th&gt;COUNT&lt;/th&gt;
&lt;th&gt;LEVEL&lt;/th&gt;
&lt;th&gt;TOTAL&lt;/th&gt;
&lt;th&gt;RATE&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Nullable / Return Null&lt;/td&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;Method&lt;/td&gt;
&lt;td&gt;13757&lt;/td&gt;
&lt;td&gt;0.15%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Utils&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Class&lt;/td&gt;
&lt;td&gt;604&lt;/td&gt;
&lt;td&gt;0.33%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Static Method&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;Method&lt;/td&gt;
&lt;td&gt;13757&lt;/td&gt;
&lt;td&gt;0.01%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Average Method Num.&lt;/td&gt;
&lt;td&gt;13757&lt;/td&gt;
&lt;td&gt;Method/Class&lt;/td&gt;
&lt;td&gt;604&lt;/td&gt;
&lt;td&gt;22.776490&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Method Num. Std Dev / 标准差&lt;/td&gt;
&lt;td&gt;13757&lt;/td&gt;
&lt;td&gt;Class&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;52.137890&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Average Method Length&lt;/td&gt;
&lt;td&gt;46177&lt;/td&gt;
&lt;td&gt;Without Getter/Setter&lt;/td&gt;
&lt;td&gt;11218&lt;/td&gt;
&lt;td&gt;4.116331&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Method Length Std Dev / 标准差&lt;/td&gt;
&lt;td&gt;13757&lt;/td&gt;
&lt;td&gt;Method&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;2.928149&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;从数据上看，静态方法只有 7 个，返回 null 的情况有 21 个，保持得不错。项目的平均方法长度也还行，就是平均方法有点多。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-代码坏味道评估" class="anchor" aria-hidden="true" href="#代码坏味道评估"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;代码坏味道评估&lt;/h4&gt;
&lt;p&gt;接着试试 &lt;code&gt;coca bs -s=type&lt;/code&gt; 来查看代码中的常见坏味道，限于篇幅的原因这里就不复杂了，说主要问题：大的类一共有 72 个，其中 OmsOrderExample.java 类，在没有 set/get 的情况下有 576 个方法。查看了一下引用情况，好像是来看数据库查询用的……：&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-smi"&gt;Criteria&lt;/span&gt; andProductSnLike(&lt;span class="pl-smi"&gt;String&lt;/span&gt; value) {
    addCriterion(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;product_sn like&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, value, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;productSn&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-k"&gt;return&lt;/span&gt; (&lt;span class="pl-smi"&gt;Criteria&lt;/span&gt;) &lt;span class="pl-c1"&gt;this&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这要重构的话是个体力活，详细见 &lt;a href="coca_reporter/bs.json"&gt;coca_reporter/bs.json&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-架构评估" class="anchor" aria-hidden="true" href="#架构评估"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;架构评估&lt;/h4&gt;
&lt;p&gt;执行了一下 &lt;code&gt;coca arch&lt;/code&gt;，由于是扁平的三层架构，没有太多的问题。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-api-评估" class="anchor" aria-hidden="true" href="#api-评估"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API 评估&lt;/h4&gt;
&lt;p&gt;执行 &lt;code&gt;coca api -c -r com.macro.mall.&lt;/code&gt; 获得基本的 API 列表情况：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;SIZE&lt;/th&gt;
&lt;th&gt;METHOD&lt;/th&gt;
&lt;th&gt;URI&lt;/th&gt;
&lt;th&gt;CALLER&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/prefrenceArea/listAll&lt;/td&gt;
&lt;td&gt;controller.CmsPrefrenceAreaController.listAll&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/subject/listAll&lt;/td&gt;
&lt;td&gt;controller.CmsSubjectController.listAll&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/subject/list&lt;/td&gt;
&lt;td&gt;controller.CmsSubjectController.getList&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/minio/upload&lt;/td&gt;
&lt;td&gt;controller.MinioController.upload&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/minio/delete&lt;/td&gt;
&lt;td&gt;controller.MinioController.delete&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/companyAddress/list&lt;/td&gt;
&lt;td&gt;controller.OmsCompanyAddressController.list&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/order/list&lt;/td&gt;
&lt;td&gt;controller.OmsOrderController.list&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/update/delivery&lt;/td&gt;
&lt;td&gt;controller.OmsOrderController.delivery&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/update/close&lt;/td&gt;
&lt;td&gt;controller.OmsOrderController.close&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/delete&lt;/td&gt;
&lt;td&gt;controller.OmsOrderController.delete&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这里的 size 指的是调用的方法里，这里的 MinioController 的 upload 方法里一共调用了 28 个方法，打开一看：&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@ApiOperation&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;文件上传&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;@RequestMapping&lt;/span&gt;(&lt;span class="pl-c1"&gt;value&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/upload&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;method&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;RequestMethod&lt;/span&gt;&lt;span class="pl-c1"&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;POST&lt;/span&gt;)
&lt;span class="pl-k"&gt;@ResponseBody&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-smi"&gt;CommonResult&lt;/span&gt; upload(&lt;span class="pl-k"&gt;@RequestParam&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;file&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-smi"&gt;MultipartFile&lt;/span&gt; file) {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;创建一个MinIO的Java客户端&lt;/span&gt;
        &lt;span class="pl-smi"&gt;MinioClient&lt;/span&gt; minioClient &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;MinioClient&lt;/span&gt;(&lt;span class="pl-c1"&gt;ENDPOINT&lt;/span&gt;, &lt;span class="pl-c1"&gt;ACCESS_KEY&lt;/span&gt;, &lt;span class="pl-c1"&gt;SECRET_KEY&lt;/span&gt;);
        &lt;span class="pl-k"&gt;boolean&lt;/span&gt; isExist &lt;span class="pl-k"&gt;=&lt;/span&gt; minioClient&lt;span class="pl-k"&gt;.&lt;/span&gt;bucketExists(&lt;span class="pl-c1"&gt;BUCKET_NAME&lt;/span&gt;);
        &lt;span class="pl-c1"&gt;...&lt;/span&gt;
        minioClient&lt;span class="pl-k"&gt;.&lt;/span&gt;putObject(&lt;span class="pl-c1"&gt;BUCKET_NAME&lt;/span&gt;, objectName, file&lt;span class="pl-k"&gt;.&lt;/span&gt;getInputStream(), file&lt;span class="pl-k"&gt;.&lt;/span&gt;getContentType());
        &lt;span class="pl-c1"&gt;LOGGER&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;文件上传成功!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        &lt;span class="pl-smi"&gt;MinioUploadDto&lt;/span&gt; minioUploadDto &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;MinioUploadDto&lt;/span&gt;();
        minioUploadDto&lt;span class="pl-k"&gt;.&lt;/span&gt;setName(filename);
        minioUploadDto&lt;span class="pl-k"&gt;.&lt;/span&gt;setUrl(&lt;span class="pl-c1"&gt;ENDPOINT&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;BUCKET_NAME&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; objectName);
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;CommonResult&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;success(minioUploadDto);
    } &lt;span class="pl-k"&gt;catch&lt;/span&gt; (&lt;span class="pl-smi"&gt;Exception&lt;/span&gt; e) {
        &lt;span class="pl-c1"&gt;LOGGER&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;info(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;上传发生错误: {}！&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, e&lt;span class="pl-k"&gt;.&lt;/span&gt;getMessage());
    }
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;CommonResult&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;failed();
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;嗯，它可能需要一个 service，而考虑到 Minio 是一个云存储服务器，还需要通过接口来封装这些细节。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-api-架构图" class="anchor" aria-hidden="true" href="#api-架构图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API 架构图&lt;/h4&gt;
&lt;p&gt;在生成 API 结果之后，可以打开 &lt;code&gt;coca_reporter/arch.svg&lt;/code&gt; 查看项目的架构图。不过，由于项目的 API 较多，便需要一个个分析，所以你可以通过 &lt;code&gt;coca api -c -r com.macro.mall. -a /order&lt;/code&gt; 查看 /order 的所有接口情况：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;SIZE&lt;/th&gt;
&lt;th&gt;METHOD&lt;/th&gt;
&lt;th&gt;URI&lt;/th&gt;
&lt;th&gt;CALLER&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/order/list&lt;/td&gt;
&lt;td&gt;controller.OmsOrderController.list&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/update/delivery&lt;/td&gt;
&lt;td&gt;controller.OmsOrderController.delivery&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/update/close&lt;/td&gt;
&lt;td&gt;controller.OmsOrderController.close&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/delete&lt;/td&gt;
&lt;td&gt;controller.OmsOrderController.delete&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/order/{id}&lt;/td&gt;
&lt;td&gt;controller.OmsOrderController.detail&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/update/receiverInfo&lt;/td&gt;
&lt;td&gt;controller.OmsOrderController.updateReceiverInfo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/update/moneyInfo&lt;/td&gt;
&lt;td&gt;controller.OmsOrderController.updateReceiverInfo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/update/note&lt;/td&gt;
&lt;td&gt;controller.OmsOrderController.updateNote&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/orderSetting/{id}&lt;/td&gt;
&lt;td&gt;controller.OmsOrderSettingController.getItem&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/orderSetting/update/{id}&lt;/td&gt;
&lt;td&gt;controller.OmsOrderSettingController.update&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/generateConfirmOrder&lt;/td&gt;
&lt;td&gt;portal.controller.OmsPortalOrderController.generateConfirmOrder&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/generateOrder&lt;/td&gt;
&lt;td&gt;portal.controller.OmsPortalOrderController.generateOrder&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/paySuccess&lt;/td&gt;
&lt;td&gt;portal.controller.OmsPortalOrderController.paySuccess&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/cancelTimeOutOrder&lt;/td&gt;
&lt;td&gt;portal.controller.OmsPortalOrderController.cancelTimeOutOrder&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/order/cancelOrder&lt;/td&gt;
&lt;td&gt;portal.controller.OmsPortalOrderController.cancelOrder&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;结果见下图（建议新窗口打开）&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="coca_reporter/api.svg"&gt;&lt;img src="coca_reporter/api.svg" alt="Coca Reporter" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-高引用--高修改分析" class="anchor" aria-hidden="true" href="#高引用--高修改分析"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;高引用 + 高修改分析&lt;/h4&gt;
&lt;p&gt;执行 &lt;code&gt;coca count&lt;/code&gt; 可以查看高引用的方法：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;REFS COUNT&lt;/th&gt;
&lt;th&gt;METHOD&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;8055&lt;/td&gt;
&lt;td&gt;com.macro.mall.model.GeneratedCriteria.addCriterion&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;199&lt;/td&gt;
&lt;td&gt;com.macro.mall.common.api.CommonResult.success&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;125&lt;/td&gt;
&lt;td&gt;com.macro.mall.common.api.CommonResult.failed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;com.macro.mall.model.GeneratedCriteria.addCriterionForJDBCDate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;com.macro.mall.common.api.CommonPage.restPage&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;com.macro.mall.model.GeneratedCriteria.addCriterionForJDBCTime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;com.macro.mall.portal.service.UmsMemberService.getCurrentMember&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;com.macro.mall.model.UmsMember.getId&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;com.macro.mall.service.impl.PmsProductServiceImpl.relateAndInsertList&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;com.macro.mall.portal.domain.OrderParam.getUseIntegration&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;com.macro.mall.portal.domain.OrderParam.getCouponId&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;看上去，主要问题还在数据库查询语句拼接那一部分。&lt;/p&gt;
&lt;p&gt;执行 &lt;code&gt;coca git -t&lt;/code&gt; 可以查看经常修改的文件：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ENTITYNAME&lt;/th&gt;
&lt;th&gt;REVSCOUNT&lt;/th&gt;
&lt;th&gt;AUTHORCOUNT&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;README.md&lt;/td&gt;
&lt;td&gt;121&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;document/pdm/mall.pdm&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;document/pdm/mall.pdb&lt;/td&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mall-admin/pom.xml&lt;/td&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mall-portal/pom.xml&lt;/td&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;document/sql/mall.sql&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mall-portal/src/main/java/com/macro/mall/portal/service/impl/OmsPortalOrderServiceImpl.java&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mall-admin/src/main/java/com/macro/mall/controller/PmsBrandController.java&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;document/reference/deploy-windows.md&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mall-search/pom.xml&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;document/docker/docker-deploy.md&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;经常修改的地方是 pom 文件和文档，看上去没啥问题。考虑到 &lt;code&gt;OmsPortalOrderServiceImpl.java&lt;/code&gt; 文件修改了 16 次，我决定打开这个文件看看：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有一个 150 行左右的方法&lt;/li&gt;
&lt;li&gt;总行数 643 行&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;明显这是一个订单相关的上帝类，关联的 OmsOrder 模型有 40 ~ 50 左右的字段。毫无疑问，这里就是代码中经常出现问题的地方。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-测试" class="anchor" aria-hidden="true" href="#测试"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;测试&lt;/h4&gt;
&lt;p&gt;执行了 &lt;code&gt;coca tbs&lt;/code&gt;，一共找到了这几个文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Start parse java call: PmsDaoTests.java
Start parse java call: MallDemoApplicationTests.java
Start parse java call: MallPortalApplicationTests.java
Start parse java call: PortalProductDaoTests.java
Start parse java call: MallSearchApplicationTests.java
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个相当于是没有测试吧。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-重构策略" class="anchor" aria-hidden="true" href="#重构策略"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构策略&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;进行 DDD 建模&lt;/li&gt;
&lt;li&gt;搭建 E2E 测试&lt;/li&gt;
&lt;li&gt;引入 Flyway 做数据库迁移&lt;/li&gt;
&lt;li&gt;分层架构重构&lt;/li&gt;
&lt;li&gt;重构到充血模型&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-架构重构" class="anchor" aria-hidden="true" href="#架构重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;架构重构&lt;/h3&gt;
&lt;p&gt;以下内容暂不免费开放。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-分层重构" class="anchor" aria-hidden="true" href="#分层重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;分层重构&lt;/h3&gt;
&lt;p&gt;以下内容暂不免费开放。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-模型重构-1" class="anchor" aria-hidden="true" href="#模型重构-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;模型重构&lt;/h3&gt;
&lt;p&gt;以下内容暂不免费开放。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-代码重构-1" class="anchor" aria-hidden="true" href="#代码重构-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;代码重构&lt;/h3&gt;
&lt;p&gt;以下内容暂不免费开放。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-自动化重构" class="anchor" aria-hidden="true" href="#自动化重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;自动化重构&lt;/h2&gt;
&lt;p&gt;TBD&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-数据库重构tbc" class="anchor" aria-hidden="true" href="#数据库重构tbc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;数据库重构（TBC）&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;数据库重构，是对数据库 schema 的一个简单变更，在保持其行为语义和信息语义的同时，改进了它的设计。 —— 《数据库重构》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;换言之，你既没有增加新功能，也没有破坏原有的功能，没有添加新的数据，也没有改变原有数据的语义。值得注意的是，尽管你的领域模型发生了变化，但是这也不意味着数据库 schema 需要因此而发生改变；与此同时，一些公司的制度也会限制我们对数据库进行重构。&lt;/p&gt;
&lt;p&gt;它们之间的关系如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/modeling.jpg"&gt;&lt;img src="images/modeling.jpg" alt="Modeling" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如《数据库重构》一书所说：数据库重构是一种数据库实现技术，就像代码重构是一种应用实现技术一样。当我们在不断对代码调优的同时，我们也在不断地对数据库进行调优。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-数据库回归测试数据不变性" class="anchor" aria-hidden="true" href="#数据库回归测试数据不变性"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;数据库回归测试：数据不变性&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-前测试" class="anchor" aria-hidden="true" href="#前测试"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;前测试&lt;/h4&gt;
&lt;p&gt;采用传统的数据库测试工具，如 DBUnit，SQLUnit，通过诸如 TDD 的方式来完成对数据库的测试，随后开展对代码的重构。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-后测试" class="anchor" aria-hidden="true" href="#后测试"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;后测试&lt;/h4&gt;
&lt;p&gt;为了对重构进行验证，我们需要对数据库进行回归测试。一种常见的做法是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;录制行为数据&lt;/li&gt;
&lt;li&gt;通过回复验证功能不被破坏&lt;/li&gt;
&lt;li&gt;通过影子流量进行验证&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这样的工具有很多，如我司吴大师写的 &lt;a href="https://github.com/XuefengWu/dbdiff"&gt;DBdiff&lt;/a&gt;，可以用于 Oracle 数据库的迁移。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-引入数据库迁移工具" class="anchor" aria-hidden="true" href="#引入数据库迁移工具"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;引入数据库迁移工具&lt;/h3&gt;
&lt;p&gt;尽管，我并没有实践过大规模的数据库重构，但是和其他/她的后端开发一样，在日常的开发中，我们也时不时会做一些数据库重构 —— 数据库迁移。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;代码版本控制&lt;/li&gt;
&lt;li&gt;数据库版本控制&lt;/li&gt;
&lt;li&gt;多数据识别&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;诸如于 Flyway 和 Liquibase 都是一些不错的工具。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-迁移源数据" class="anchor" aria-hidden="true" href="#迁移源数据"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;迁移源数据&lt;/h3&gt;
&lt;p&gt;我尝试编写脚本来将我的博客 &lt;a href="https://www.phodal.com" rel="nofollow"&gt;https://www.phodal.com&lt;/a&gt; 从 SQLite3 迁移到 MySQL，这并不是一件困难的事情。因为 SQLite3 是一种嵌入式数据库，而我们可以通过 &lt;code&gt;mysqldump&lt;/code&gt; 出 MySQL 的数据。&lt;/p&gt;
&lt;p&gt;如此一来，我们便可以用于做数据库重构练习，并编写数据库的回归测试。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-汲取式重构存储过程转换" class="anchor" aria-hidden="true" href="#汲取式重构存储过程转换"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;汲取式重构：存储过程转换&lt;/h3&gt;
&lt;p&gt;对于采用 Oracle 的项目来说，数据重构不是一件容易的事情。它还涉及到一系列的存储过程代码。&lt;/p&gt;
&lt;p&gt;所以，我们还可以尝试将 PLSQL 转为 Kotlin 代码：&lt;a href="https://github.com/XuefengWu/LADE_Analysis"&gt;https://github.com/XuefengWu/LADE_Analysis&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-重构之后工具的问题" class="anchor" aria-hidden="true" href="#重构之后工具的问题"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构之后：工具的问题&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-架构守护" class="anchor" aria-hidden="true" href="#架构守护"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;架构守护&lt;/h3&gt;
&lt;p&gt;在重构的过程中，我们也可以尝试将它引入到系统中使用。它可以作为我们的架构适应度函数，不断地见证我们架构的变化和成长 —— 以一种肉眼的方式持续演进。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-架构守护测试" class="anchor" aria-hidden="true" href="#架构守护测试"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;架构守护测试&lt;/h4&gt;
&lt;p&gt;ArchUnit 是一个不错的架构守护框架。你可以尝试引入项目的架构中，&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-坏味道守护" class="anchor" aria-hidden="true" href="#坏味道守护"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;坏味道守护&lt;/h4&gt;
&lt;p&gt;我的意思是，只需要集成到持续构建中即可。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-测试驱动开发" class="anchor" aria-hidden="true" href="#测试驱动开发"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;测试驱动开发&lt;/h3&gt;
&lt;p&gt;测试驱动开发适合于解决复杂的问题。&lt;/p&gt;
&lt;p&gt;我并不是一个 TDD 的死忠粉，但是我发现 TDD 非常适合于解决复杂问题。在这个场景下，我有一堆事先准备好的 Test Bad Smell，它们拥有一些对应的检测规则，这些规则相互之间存在一些影响。因此，我将这些 Bad Smell 作为我的测试用例：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;AssertionRouletteTest.java
ConditionalTest.java
ConstructorInitializationTest.java
DuplicateAssertTest.java
EmptyTest.java
IgnoreTest.java
MagicNumberTest.java
MysteryGuestTest.java
RedundantAssertionTest.java
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;于是，我可以写出我的第一个测试：&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;func TestTbsApp_EmptyTest(t &lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-smi"&gt;testing&lt;span class="pl-k"&gt;.&lt;/span&gt;T&lt;/span&gt;) {
	g &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; NewGomegaWithT(t)
	var codePath &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;../../../_fixtures/tbs/code/EmptyTest.java&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

	var result &lt;span class="pl-k"&gt;=&lt;/span&gt; buildTbsResult(codePath)

	&lt;span class="pl-smi"&gt;g&lt;span class="pl-k"&gt;.&lt;/span&gt;Expect&lt;/span&gt;(result[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-smi"&gt;Type&lt;/span&gt;)&lt;span class="pl-k"&gt;.&lt;/span&gt;To(Equal(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;EmptyTest&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对应的一步步完成出整个功能的代码。而后，我们就可以重构出理想的代码 —— 因为我们已经有了对应的测试。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-完善基础设施" class="anchor" aria-hidden="true" href="#完善基础设施"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;完善基础设施&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-重构之后解决人的问题" class="anchor" aria-hidden="true" href="#重构之后解决人的问题"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构之后：解决人的问题&lt;/h2&gt;
&lt;p&gt;我们把所有的问题都归到人的问题。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-代码写得烂" class="anchor" aria-hidden="true" href="#代码写得烂"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;代码写得烂&lt;/h3&gt;
&lt;p&gt;如我们所见，我们在不同的公司里，会看到不同的人写出来的代码水平是不一样的。比如有一些是由供应商写的代码&lt;/p&gt;
&lt;p&gt;不过，既然给这引起供应商的工资本身就不高，那么怎么能指望出他/她写出好的代码。&lt;/p&gt;
&lt;p&gt;与此同时，由于种种原因，教他们学习的成本又特别高，甚至于你还要担心如果你教会了供应商，他/她们可能寻找一个新的工作。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-养成优秀的开发习惯" class="anchor" aria-hidden="true" href="#养成优秀的开发习惯"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;养成优秀的开发习惯&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-人员能力提升" class="anchor" aria-hidden="true" href="#人员能力提升"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;人员能力提升&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-练习项目" class="anchor" aria-hidden="true" href="#练习项目"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;练习项目&lt;/h4&gt;
&lt;h4&gt;&lt;a id="user-content-培训教程" class="anchor" aria-hidden="true" href="#培训教程"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;培训教程&lt;/h4&gt;
&lt;h4&gt;&lt;a id="user-content-典型问题" class="anchor" aria-hidden="true" href="#典型问题"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;典型问题&lt;/h4&gt;
&lt;h2&gt;&lt;a id="user-content-重构之后流程的问题" class="anchor" aria-hidden="true" href="#重构之后流程的问题"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构之后：流程的问题&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-流程优化" class="anchor" aria-hidden="true" href="#流程优化"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;流程优化&lt;/h3&gt;
&lt;p&gt;我们在开发的前期缺少对于系统的设计，那么我们将需要花费大量的成本在后期修复他们。&lt;/p&gt;
&lt;p&gt;你可以查看我先前写的《&lt;a href="https://www.phodal.com/blog/new-project-check-lists/" rel="nofollow"&gt;新项目检查清单&lt;/a&gt;》完善项目的启动流程，通过 &lt;a href="https://phodal.github.io/new-project-checklist/" rel="nofollow"&gt;https://phodal.github.io/new-project-checklist/&lt;/a&gt; 可以使用这个工具。并借助于《&lt;a href="https://www.phodal.com/blog/how-to-create-application-boilerplate/" rel="nofollow"&gt;如何创建你的应用脚手架&lt;/a&gt;》搭建好项目的脚手架。&lt;/p&gt;
&lt;p&gt;借助于 Path to Production &lt;a href="https://www.phodal.com/blog/tech-lead-tools-path-to-production/" rel="nofollow"&gt;优化你的上线流程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/path-to-production.png"&gt;&lt;img src="images/path-to-production.png" alt="Path to Production" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;工具见：&lt;a href="https://phodal.github.io/path/" rel="nofollow"&gt;https://phodal.github.io/path/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;你可以在我的 Tech Lead 工具箱中，获得更多工具：&lt;a href="https://github.com/phodal/techlead"&gt;https://github.com/phodal/techlead&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-需求规范化" class="anchor" aria-hidden="true" href="#需求规范化"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;需求规范化&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-实例化需求" class="anchor" aria-hidden="true" href="#实例化需求"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;实例化需求&lt;/h4&gt;
&lt;h4&gt;&lt;a id="user-content-行为驱动开发bdd" class="anchor" aria-hidden="true" href="#行为驱动开发bdd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;行为驱动开发（BDD）&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;行为驱动开发是一种敏捷软件开发的技术，它鼓励软件项目中的开发者、QA 和非技术人员或商业参与者之间的协作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;年轻的时候（我刚毕业），我并不懂得 BDD 的好处——相当的繁琐，到了现在我又有一番不一样的体会。思来想去主要的原因是，当时我们是一个全功能的团队，不存在跨部门协作，也因此我并不觉得 BDD 能为我们带来多大的好处。&lt;/p&gt;
&lt;p&gt;可是在 ThoughtWorks 公司之外，开发、测试和业务都是各自的部门，有着各自的利益。通过 BDD 的协作方式，可以让交付物有一个一致的观点。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-重构之后提炼知识" class="anchor" aria-hidden="true" href="#重构之后提炼知识"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构之后：提炼知识&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-知识仓库" class="anchor" aria-hidden="true" href="#知识仓库"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;知识仓库&lt;/h3&gt;
&lt;p&gt;预先设计：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一无是处的代码注释。&lt;/li&gt;
&lt;li&gt;没有搭建信息的 README。&lt;/li&gt;
&lt;li&gt;没有版本化的、二进制的项目文档&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-重建知识仓库" class="anchor" aria-hidden="true" href="#重建知识仓库"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重建知识仓库&lt;/h3&gt;
&lt;p&gt;请参考：&lt;a href="https://github.com/phodal/trusted"&gt;构建可信软件系统&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-问题是什么" class="anchor" aria-hidden="true" href="#问题是什么"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;问题是什么？&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-为什么我们需要重构" class="anchor" aria-hidden="true" href="#为什么我们需要重构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;为什么我们需要重构？&lt;/h3&gt;
&lt;p&gt;这个问题，就该你回答了：为什么我们需要重构？&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-重构到微服务" class="anchor" aria-hidden="true" href="#重构到微服务"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;重构到微服务&lt;/h2&gt;
&lt;p&gt;重构比重写来得更有价值。重写往往有可能带来更多的技术债，还可能犯上同样的错误。&lt;/p&gt;
&lt;p&gt;你为什么不重写呢？？？&lt;/p&gt;
&lt;p&gt;这样更省时间？&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-未来" class="anchor" aria-hidden="true" href="#未来"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;未来&lt;/h2&gt;
&lt;p&gt;未来 10 年，你应当：&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-追求技术卓越" class="anchor" aria-hidden="true" href="#追求技术卓越"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;追求技术卓越。&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-推动个人变革进而引领组织变革" class="anchor" aria-hidden="true" href="#推动个人变革进而引领组织变革"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;推动个人变革，进而引领组织变革&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-整理知识加强教育" class="anchor" aria-hidden="true" href="#整理知识加强教育"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;整理知识，加强教育&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-在整个流程中将价值创造最大化" class="anchor" aria-hidden="true" href="#在整个流程中将价值创造最大化"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;在整个流程中将价值创造最大化&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LICENSE&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.phodal.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c07fb794f20aa2c7c99410788f61be23d4acb9e1/687474703a2f2f6272616e642e70686f64616c2e636f6d2f736869656c64732f626f6f6b2d736d616c6c2e737667" alt="Phodal's Book" data-canonical-src="http://brand.phodal.com/shields/book-small.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;© 2020 &lt;a href="https://www.phodal.com" rel="nofollow"&gt;Phodal Huang&lt;/a&gt;. This code is distributed under the Creative Commons Attribution-Noncommercial-No Derivative Works 4.0  License. See &lt;code&gt;LICENSE&lt;/code&gt; in this directory.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.xuntayizhan.com/person/ji-ke-ai-qing-zhi-er-shi-dai-wo-dai-ma-bian-cheng-qu-ni-wei-qi-ke-hao-wan/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3dd14d6f6feb6978f3e88cfb667d902f3c0cb65e/687474703a2f2f6272616e642e70686f64616c2e636f6d2f736c6f67616e2f736c6f67616e2e737667" alt="待我代码编成,娶你为妻可好" data-canonical-src="http://brand.phodal.com/slogan/slogan.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>phodal</author><guid isPermaLink="false">https://github.com/phodal/migration</guid><pubDate>Tue, 28 Jan 2020 00:03:00 GMT</pubDate></item><item><title>bephrem1/backtobackswe #4 in Java, This week</title><link>https://github.com/bephrem1/backtobackswe</link><description>&lt;p&gt;&lt;i&gt;Code Examples For Back To Back SWE Lessons&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-back-to-back-swe" class="anchor" aria-hidden="true" href="#back-to-back-swe"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Back To Back SWE&lt;/h1&gt;
&lt;p&gt;An initiative to empower the software engineer to excel in the interview.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Website:&lt;/b&gt; &lt;a href="https://backtobackswe.com" rel="nofollow"&gt;https://backtobackswe.com&lt;/a&gt; &lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;The Exhaustive Topics A Software Engineer Needs To Know To Pass A Big N Interview:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fundamentals of Computer Systems (just a general knowing how computers store information etc.)&lt;/li&gt;
&lt;li&gt;Big O Time &amp;amp; Space Complexity Computation&lt;/li&gt;
&lt;li&gt;Arrays&lt;/li&gt;
&lt;li&gt;Primitives&lt;/li&gt;
&lt;li&gt;Strings&lt;/li&gt;
&lt;li&gt;Dynamic Programming&lt;/li&gt;
&lt;li&gt;Recursion / Backtracking&lt;/li&gt;
&lt;li&gt;Graphs&lt;/li&gt;
&lt;li&gt;Greedy Algorithms&lt;/li&gt;
&lt;li&gt;Hashtables&lt;/li&gt;
&lt;li&gt;Linked Lists&lt;/li&gt;
&lt;li&gt;Sorting&lt;/li&gt;
&lt;li&gt;Searching&lt;/li&gt;
&lt;li&gt;Min/Max Heaps&lt;/li&gt;
&lt;li&gt;Stacks&lt;/li&gt;
&lt;li&gt;Queues&lt;/li&gt;
&lt;li&gt;Trees, Binary Trees, &amp;amp; Binary Search Trees&lt;/li&gt;
&lt;li&gt;System and OO design Principles (sometimes)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And that is pretty much it for Data Structures &amp;amp; Algorithms.&lt;/p&gt;
&lt;p&gt;The channel's goal is to contribute to the community of people bridging
these topics to help engineers excel in the interview.&lt;/p&gt;
&lt;p&gt;It has nothing to do with me. I am just here to communicate the ideas.&lt;/p&gt;
&lt;p&gt;I am only a humble teacher, I am not perfect.&lt;/p&gt;
&lt;p&gt;If even one person gets an offer from my work my day is complete.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;I'd love any contributions from people to this repo. I just restructured it so that solutions in multiple languages can be added for a single problem.&lt;/p&gt;
&lt;p&gt;Just make sure that you follow the style conventions of your respective language.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-mistakes" class="anchor" aria-hidden="true" href="#mistakes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mistakes&lt;/h2&gt;
&lt;p&gt;I'm not perfect. I watch finished videos 2 times over. I read and test all code samples. But I still make errors.&lt;/p&gt;
&lt;p&gt;If you see a mistake anywhere just open a pr &amp;amp; I'll merge it in.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-best-books-for-prep" class="anchor" aria-hidden="true" href="#best-books-for-prep"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Best Books For Prep&lt;/h2&gt;
&lt;p&gt;no affiliate links here&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Bare Beginner:&lt;/b&gt; &lt;a href="https://www.amazon.com/Cracking-Coding-Interview-Programming-Questions/dp/0984782850" rel="nofollow"&gt;https://www.amazon.com/Cracking-Coding-Interview-Programming-Questions/dp/0984782850&lt;/a&gt;
&lt;b&gt;Medium/Advanced:&lt;/b&gt; &lt;a href="https://www.amazon.com/Elements-Programming-Interviews-Java-Insiders/dp/1517671272" rel="nofollow"&gt;https://www.amazon.com/Elements-Programming-Interviews-Java-Insiders/dp/1517671272&lt;/a&gt;
&lt;b&gt;Advanced:&lt;/b&gt; &lt;a href="https://cses.fi/book/" rel="nofollow"&gt;https://cses.fi/book/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;My Comments: Cracking The Coding Interview is a good start but pales in comparison to how much Elements
of Programming Interviews (EPI) will prepare you for the interview. Everything that I do has been inspired
by this book. To date, I have read it nearly 5 times and skimmed it 4 times.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>bephrem1</author><guid isPermaLink="false">https://github.com/bephrem1/backtobackswe</guid><pubDate>Tue, 28 Jan 2020 00:04:00 GMT</pubDate></item><item><title>quarkusio/quarkus #5 in Java, This week</title><link>https://github.com/quarkusio/quarkus</link><description>&lt;p&gt;&lt;i&gt;Quarkus: Supersonic Subatomic Java. &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://quarkus.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/be1e4ea465298c7e05b1378ff38d463cfef120a3/68747470733a2f2f64657369676e2e6a626f73732e6f72672f717561726b75732f6c6f676f2f66696e616c2f504e472f717561726b75735f6c6f676f5f686f72697a6f6e74616c5f7267625f3132383070785f64656661756c742e706e67" alt="Quarkus" data-canonical-src="https://design.jboss.org/quarkus/logo/final/PNG/quarkus_logo_horizontal_rgb_1280px_default.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/quarkusio/quarkus/releases/latest"&gt;&lt;img src="https://camo.githubusercontent.com/2281f23dec5f7d8a1a23c1dba4a7bc437cb41c6e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f717561726b7573696f2f717561726b75733f7374796c653d666f722d7468652d6261646765" alt="Version" data-canonical-src="https://img.shields.io/github/v/release/quarkusio/quarkus?style=for-the-badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dev.azure.com/quarkus-ci/quarkus/_build/latest?definitionId=1" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c37b542c49888b31c9c15ddb17aa62a3af117456/68747470733a2f2f696d672e736869656c64732e696f2f617a7572652d6465766f70732f6275696c642f717561726b75732d63692f717561726b75732f313f7374796c653d666f722d7468652d6261646765266c6f676f3d617a7572652d706970656c696e6573" alt="Build Status" data-canonical-src="https://img.shields.io/azure-devops/build/quarkus-ci/quarkus/1?style=for-the-badge&amp;amp;logo=azure-pipelines" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ab76cdff25915e2dd059979efea88f7fd3a376fa/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f717561726b7573696f2f717561726b75733f7374796c653d666f722d7468652d6261646765266c6f676f3d617061636865" alt="License" data-canonical-src="https://img.shields.io/github/license/quarkusio/quarkus?style=for-the-badge&amp;amp;logo=apache" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://quarkusio.zulipchat.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/80fc111bfaf1b18b2923b821b656a3baa793c4c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7a756c69702d6a6f696e5f636861742d627269676874677265656e2e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d7a756c6970" alt="Project Chat" data-canonical-src="https://img.shields.io/badge/zulip-join_chat-brightgreen.svg?style=for-the-badge&amp;amp;logo=zulip" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-quarkus---supersonic-subatomic-java" class="anchor" aria-hidden="true" href="#quarkus---supersonic-subatomic-java"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quarkus - Supersonic Subatomic Java&lt;/h1&gt;
&lt;p&gt;Quarkus is a Cloud Native, (Linux) Container First framework for writing Java applications.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Container First&lt;/strong&gt;:
Minimal footprint Java applications optimal for running in containers&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cloud Native&lt;/strong&gt;:
Embraces &lt;a href="https://12factor.net" rel="nofollow"&gt;12 factor architecture&lt;/a&gt; in environments like Kubernetes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Unify imperative and reactive&lt;/strong&gt;:
Brings under one programming model non blocking and imperative styles of development.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Standards-based&lt;/strong&gt;:
Based on the standards and frameworks you love and use (RESTEasy and JAX-RS, Hibernate ORM and JPA, Netty, Eclipse Vert.x, Eclipse MicroProfile, Apache Camel...)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Microservice First&lt;/strong&gt;:
Brings lightning fast startup time and code turn around to Java apps&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Developer Joy&lt;/strong&gt;:
Development centric experience without compromise to bring your amazing apps to life in no time&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;All under ONE framework.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://quarkus.io" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-build-quarkus" class="anchor" aria-hidden="true" href="#how-to-build-quarkus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to build Quarkus&lt;/h2&gt;
&lt;p&gt;The build instructions are available in the &lt;a href="CONTRIBUTING.md"&gt;contribution guide&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>quarkusio</author><guid isPermaLink="false">https://github.com/quarkusio/quarkus</guid><pubDate>Tue, 28 Jan 2020 00:05:00 GMT</pubDate></item><item><title>material-components/material-components-android #6 in Java, This week</title><link>https://github.com/material-components/material-components-android</link><description>&lt;p&gt;&lt;i&gt;Modular and customizable Material Design UI components for Android&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/material-components/material-components-android/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c5b727c476a11155b7c5c9480f0bf7924dc44d8e/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6d6174657269616c2d636f6d706f6e656e74732f6d6174657269616c2d636f6d706f6e656e74732d616e64726f69642f6d61737465722e737667" alt="Build Status" data-canonical-src="https://img.shields.io/travis/material-components/material-components-android/master.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/material-components" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/921ef49ff05070b08734e95d4fe3c7e24b8210eb/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3235393038373334333234363530383033352e737667" alt="Chat" data-canonical-src="https://img.shields.io/discord/259087343246508035.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-material-components-for-android" class="anchor" aria-hidden="true" href="#material-components-for-android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Material Components for Android&lt;/h1&gt;
&lt;p&gt;Material Components for Android (MDC-Android) help developers execute
&lt;a href="https://www.material.io" rel="nofollow"&gt;Material Design&lt;/a&gt;. Developed by a core team of
engineers and UX designers at Google, these components enable a reliable
development workflow to build beautiful and functional Android apps.&lt;/p&gt;
&lt;p&gt;Material Components for Android is a drop-in replacement for Android's
Design Support Library.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;For information on how to get started with Material Components for Android,
take a look at our &lt;a href="docs/getting-started.md"&gt;Getting Started&lt;/a&gt; guide.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-submitting-bugs-or-feature-requests" class="anchor" aria-hidden="true" href="#submitting-bugs-or-feature-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Submitting Bugs or Feature Requests&lt;/h2&gt;
&lt;p&gt;For usage questions: ask on
&lt;a href="http://stackoverflow.com/questions/tagged/material-components" rel="nofollow"&gt;Stack  Overflow&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Bugs or feature requests should be submitted at our &lt;a href="https://github.com/material-components/material-components-android/issues"&gt;GitHub Issues section&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-useful-links" class="anchor" aria-hidden="true" href="#useful-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Useful Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/material-components/material-components-android/tree/master/lib/"&gt;All Components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/getting-started.md"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/contributing.md"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/building-from-source.md"&gt;Building From Source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/catalog-app.md"&gt;Catalog App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/reference/com/google/android/material/classes" rel="nofollow"&gt;Class
documentation&lt;/a&gt;
(external site)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.stackoverflow.com/questions/tagged/material-components+android" rel="nofollow"&gt;MDC-Android on Stack
Overflow&lt;/a&gt;
(external site)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/training/material/index.html" rel="nofollow"&gt;Android Developer’s
Guide&lt;/a&gt;
(external site)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.material.io" rel="nofollow"&gt;Material.io&lt;/a&gt; (external site)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://material.google.com" rel="nofollow"&gt;Material Design Guidelines&lt;/a&gt; (external site)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/directorystructure.md"&gt;Directory structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/components/"&gt;Components&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>material-components</author><guid isPermaLink="false">https://github.com/material-components/material-components-android</guid><pubDate>Tue, 28 Jan 2020 00:06:00 GMT</pubDate></item><item><title>oracle/graal #7 in Java, This week</title><link>https://github.com/oracle/graal</link><description>&lt;p&gt;&lt;i&gt;GraalVM: Run Programs Faster Anywhere :rocket:&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-graalvm" class="anchor" aria-hidden="true" href="#graalvm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GraalVM&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.graalvm.org/slack-invitation/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/03721c99266fe0c604510860762fecbc3f3d9064/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736c61636b2d6a6f696e2532306368616e6e656c2d616374697665" alt="https://graalvm.slack.com" data-canonical-src="https://img.shields.io/badge/slack-join%20channel-active" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GraalVM is a universal virtual machine for running applications written in JavaScript, Python, Ruby, R, JVM-based languages like Java, Scala, Clojure, Kotlin, and LLVM-based languages such as C and C++.&lt;/p&gt;
&lt;p&gt;The project website at &lt;a href="https://www.graalvm.org" rel="nofollow"&gt;https://www.graalvm.org&lt;/a&gt; describes how to &lt;a href="https://www.graalvm.org/docs/getting-started/" rel="nofollow"&gt;get started&lt;/a&gt;, how to &lt;a href="https://www.graalvm.org/community/" rel="nofollow"&gt;stay connected&lt;/a&gt;, and how to &lt;a href="https://www.graalvm.org/community/contributors/" rel="nofollow"&gt;contribute&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-repository-structure" class="anchor" aria-hidden="true" href="#repository-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Repository Structure&lt;/h2&gt;
&lt;p&gt;The GraalVM main source repository includes the following components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="sdk/README.md"&gt;GraalVM SDK&lt;/a&gt; contains long term supported APIs of GraalVM.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="compiler/README.md"&gt;GraalVM compiler&lt;/a&gt; written in Java that supports both dynamic and static compilation and can integrate with
the Java HotSpot VM or run standalone.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="truffle/README.md"&gt;Truffle&lt;/a&gt; language implementation framework for creating languages and instrumentations for GraalVM.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="tools/README.md"&gt;Tools&lt;/a&gt; contains a set of tools for GraalVM languages
implemented with the instrumentation framework.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="substratevm/README.md"&gt;Substrate VM&lt;/a&gt; framework that allows ahead-of-time (AOT)
compilation of Java applications under closed-world assumption into executable
images or shared objects.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="sulong/README.md"&gt;Sulong&lt;/a&gt; is an engine for running LLVM bitcode on GraalVM.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="wasm/README.md"&gt;GraalWasm&lt;/a&gt; is an engine for running WebAssembly programs on GraalVM.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="regex/README.md"&gt;TRegex&lt;/a&gt; is an implementation of regular expressions which leverages GraalVM for efficient compilation of automata.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="vm/README.md"&gt;VM&lt;/a&gt; includes the components to build a modular GraalVM image.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="/vscode/README.md"&gt;VS Code&lt;/a&gt; provides extensions to Visual Studio Code that support development of polyglot applications using GraalVM.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-get-support" class="anchor" aria-hidden="true" href="#get-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Get Support&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Open a &lt;a href="https://github.com/oracle/graal/issues"&gt;GitHub issue&lt;/a&gt; for bug reports, questions, or requests for enhancements.&lt;/li&gt;
&lt;li&gt;Report a security vulnerability according to the &lt;a href="https://www.oracle.com/corporate/security-practices/assurance/vulnerability/reporting.html" rel="nofollow"&gt;Reporting Vulnerabilities guide&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-related-repositories" class="anchor" aria-hidden="true" href="#related-repositories"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related Repositories&lt;/h2&gt;
&lt;p&gt;GraalVM allows running of following languages which are being developed and tested in related repositories with GraalVM core to run on top of it using Truffle and the GraalVM compiler. These are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/graalvm/graaljs"&gt;GraalJS&lt;/a&gt; - JavaScript (ECMAScript 2019 compatible) and Node.js 10.16.3&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oracle/fastr"&gt;FastR&lt;/a&gt; - R Language 3.6.1&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/graalvm/graalpython"&gt;GraalPython&lt;/a&gt; - Python 3.7&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oracle/truffleruby/"&gt;TruffleRuby&lt;/a&gt; - Ruby Programming Language 2.6.2&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/graalvm/simplelanguage"&gt;SimpleLanguage&lt;/a&gt; - A simple demonstration language for the GraalVM.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Each GraalVM component is licensed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="/truffle/"&gt;Truffle Framework&lt;/a&gt; and its dependency &lt;a href="/sdk/"&gt;GraalVM SDK&lt;/a&gt; are licensed under the &lt;a href="truffle/LICENSE.md"&gt;Universal Permissive License&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="/tools/"&gt;Tools&lt;/a&gt; project is licensed under the &lt;a href="tools/LICENSE"&gt;GPL 2 with Classpath exception&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="/regex/"&gt;TRegex&lt;/a&gt; project is licensed under the &lt;a href="regex/LICENSE.md"&gt;Universal Permissive License&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="/compiler/"&gt;GraalVM compiler&lt;/a&gt; is licensed under the &lt;a href="compiler/LICENSE.md"&gt;GPL 2 with Classpath exception&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="/substratevm/"&gt;Substrate VM&lt;/a&gt; is licensed under the &lt;a href="substratevm/LICENSE"&gt;GPL 2 with Classpath exception&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="/sulong/"&gt;Sulong&lt;/a&gt; is licensed under &lt;a href="sulong/LICENSE"&gt;3-clause BSD&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="/wasm/"&gt;GraalWasm&lt;/a&gt; is licensed under the &lt;a href="wasm/LICENSE"&gt;Universal Permissive License&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="/vm/"&gt;VM&lt;/a&gt; is licensed under the &lt;a href="vm/LICENSE_GRAALVM_CE"&gt;GPL 2 with Classpath exception&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="/vscode/"&gt;VS Code&lt;/a&gt; extensions are distributed under the &lt;a href="/vscode/graalvm/LICENSE.txt"&gt;UPL 1.0 license&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>oracle</author><guid isPermaLink="false">https://github.com/oracle/graal</guid><pubDate>Tue, 28 Jan 2020 00:07:00 GMT</pubDate></item><item><title>zo0r/react-native-push-notification #8 in Java, This week</title><link>https://github.com/zo0r/react-native-push-notification</link><description>&lt;p&gt;&lt;i&gt;React Native Local and Remote Notifications&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-react-native-push-notifications" class="anchor" aria-hidden="true" href="#react-native-push-notifications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;React Native Push Notifications&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://badge.fury.io/js/react-native-push-notification" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a87b081a375662b2270bd3acf1991c1939765fe6/68747470733a2f2f62616467652e667572792e696f2f6a732f72656163742d6e61746976652d707573682d6e6f74696669636174696f6e2e7376673f7570646174653d39" alt="npm version" data-canonical-src="https://badge.fury.io/js/react-native-push-notification.svg?update=9" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://badge.fury.io/js/react-native-push-notification" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b6f7af03ed9c2d74418cdfb63cd233016974c4f2/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f72656163742d6e61746976652d707573682d6e6f74696669636174696f6e2e7376673f7570646174653d39" alt="npm downloads" data-canonical-src="https://img.shields.io/npm/dm/react-native-push-notification.svg?update=9" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;React Native Local and Remote Notifications for iOS and Android&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-react-native-versions" class="anchor" aria-hidden="true" href="#supported-react-native-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported React Native Versions&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Component Version&lt;/th&gt;
&lt;th&gt;RN Versions&lt;/th&gt;
&lt;th&gt;README&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;1.0.7&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;&amp;lt;= 0.27&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/zo0r/react-native-push-notification/blob/f42723817f1687e0da23e6753eb8a9f0385b6ac5/README.md"&gt;Open&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;1.0.8&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;0.28&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/zo0r/react-native-push-notification/blob/2eafd1961273ca6a82ad4dd6514fbf1d1a829089/README.md"&gt;Open&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;2.0.1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;0.29&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/zo0r/react-native-push-notification/blob/c7ab7cd84ea19e42047379aefaf568bb16a81936/README.md"&gt;Open&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;2.0.2&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;0.30, 0.31, 0.32&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/zo0r/react-native-push-notification/blob/a0f7d44e904ba0b92933518e5bf6b444f1c90abb/README.md"&gt;Open&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&amp;gt;= 2.1.0&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;&amp;gt;= 0.33&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/zo0r/react-native-push-notification/blob/a359e5c00954aa324136eaa9808333d6ca246171/README.md"&gt;Open&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-changelog" class="anchor" aria-hidden="true" href="#changelog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changelog&lt;/h2&gt;
&lt;p&gt;Changelog is available from version 3.1.3 here: &lt;a href="https://github.com/zo0r/react-native-push-notification/blob/master/CHANGELOG.md"&gt;Changelog&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;npm install --save react-native-push-notification&lt;/code&gt; or &lt;code&gt;yarn add react-native-push-notification&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;react-native link react-native-push-notification&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE: For Android, you will still have to manually update the AndroidManifest.xml (as below) in order to use Scheduled Notifications.&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-issues" class="anchor" aria-hidden="true" href="#issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issues&lt;/h2&gt;
&lt;p&gt;Having a problem? Read the &lt;a href="./trouble-shooting.md"&gt;troubleshooting&lt;/a&gt; guide before raising an issue.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-pull-requests" class="anchor" aria-hidden="true" href="#pull-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pull Requests&lt;/h2&gt;
&lt;p&gt;&lt;a href="./submitting-a-pull-request.md"&gt;Please read...&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ios-manual-installation" class="anchor" aria-hidden="true" href="#ios-manual-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iOS manual Installation&lt;/h2&gt;
&lt;p&gt;The component uses PushNotificationIOS for the iOS part.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/react-native-community/react-native-push-notification-ios"&gt;Please see: PushNotificationIOS&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-android-manual-installation" class="anchor" aria-hidden="true" href="#android-manual-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android manual Installation&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;NOTE: &lt;code&gt;play-service-gcm&lt;/code&gt; and &lt;code&gt;firebase-messaging&lt;/code&gt;, prior to version 15 requires to have the same version number in order to work correctly at build time and at run time. To use a specific version:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In your &lt;code&gt;android/build.gradle&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;ext&lt;/span&gt; {
    googlePlayServicesVersion &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;Your play services version&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; default: "+"&lt;/span&gt;
    firebaseVersion &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;Your Firebase version&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; default: "+"&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Other settings&lt;/span&gt;
    compileSdkVersion &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;Your&lt;/span&gt; compile &lt;span class="pl-c1"&gt;SDK&lt;/span&gt; version&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; default: 23&lt;/span&gt;
    buildToolsVersion &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;Your build tools version&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; default: "23.0.1"&lt;/span&gt;
    targetSdkVersion &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;Your&lt;/span&gt; target &lt;span class="pl-c1"&gt;SDK&lt;/span&gt; version&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; default: 23&lt;/span&gt;
    supportLibVersion &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;Your support lib version&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; default: 23.1.1&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;NOTE: localNotification() works without changes in the application part, while localNotificationSchedule() only works with these changes:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In your &lt;code&gt;AndroidManifest.xml&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;    .....
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; &amp;lt; Only if you're using GCM or localNotificationSchedule() &amp;gt; &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &amp;lt;&lt;span class="pl-ent"&gt;uses-permission&lt;/span&gt; &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;android.permission.WAKE_LOCK&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;permission&lt;/span&gt;
        &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;${applicationId}.permission.C2D_MESSAGE&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;protectionLevel&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;signature&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;uses-permission&lt;/span&gt; &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;${applicationId}.permission.C2D_MESSAGE&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; &amp;lt; Only if you're using GCM or localNotificationSchedule() &amp;gt; &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;

    &amp;lt;&lt;span class="pl-ent"&gt;uses-permission&lt;/span&gt; &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;android.permission.VIBRATE&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;uses-permission&lt;/span&gt; &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;android.permission.RECEIVE_BOOT_COMPLETED&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;/&amp;gt;

    &amp;lt;&lt;span class="pl-ent"&gt;application&lt;/span&gt; ....&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;meta-data&lt;/span&gt;  &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.dieam.reactnativepushnotification.notification_channel_name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;value&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;YOUR NOTIFICATION CHANNEL NAME&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;/&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;meta-data&lt;/span&gt;  &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.dieam.reactnativepushnotification.notification_channel_description&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                    &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;value&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;YOUR NOTIFICATION CHANNEL DESCRIPTION&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;/&amp;gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; Change the resource name to your App's accent color - or any other color you want &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;meta-data&lt;/span&gt;  &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.dieam.reactnativepushnotification.notification_color&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                    &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;resource&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;@android:color/white&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;/&amp;gt;

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; &amp;lt; Only if you're using GCM or localNotificationSchedule() &amp;gt; &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;receiver&lt;/span&gt;
            &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.google.android.gms.gcm.GcmReceiver&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;exported&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;true&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;permission&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.google.android.c2dm.permission.SEND&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;intent-filter&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;action&lt;/span&gt; &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.google.android.c2dm.intent.RECEIVE&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;category&lt;/span&gt; &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;${applicationId}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;intent-filter&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;receiver&lt;/span&gt;&amp;gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; &amp;lt; Only if you're using GCM or localNotificationSchedule() &amp;gt; &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;

        &amp;lt;&lt;span class="pl-ent"&gt;receiver&lt;/span&gt; &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.dieam.reactnativepushnotification.modules.RNPushNotificationPublisher&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;receiver&lt;/span&gt; &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.dieam.reactnativepushnotification.modules.RNPushNotificationBootEventReceiver&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;intent-filter&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;action&lt;/span&gt; &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;android.intent.action.BOOT_COMPLETED&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;intent-filter&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;receiver&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;service&lt;/span&gt; &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.dieam.reactnativepushnotification.modules.RNPushNotificationRegistrationService&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;/&amp;gt;

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; &amp;lt; Only if you're using GCM or localNotificationSchedule() &amp;gt; &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;service&lt;/span&gt;
            &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.dieam.reactnativepushnotification.modules.RNPushNotificationListenerServiceGcm&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;exported&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;false&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;intent-filter&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;action&lt;/span&gt; &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.google.android.c2dm.intent.RECEIVE&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;intent-filter&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;service&lt;/span&gt;&amp;gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; &amp;lt;/ Only if you're using GCM or localNotificationSchedule() &amp;gt; &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; &amp;lt; Else &amp;gt; &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &amp;lt;&lt;span class="pl-ent"&gt;service&lt;/span&gt;
            &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.dieam.reactnativepushnotification.modules.RNPushNotificationListenerService&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;exported&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;false&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;intent-filter&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;action&lt;/span&gt; &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.google.firebase.MESSAGING_EVENT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;intent-filter&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;service&lt;/span&gt;&amp;gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; &amp;lt;/Else&amp;gt; &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
     .....&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In &lt;code&gt;android/settings.gradle&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;..&lt;/span&gt;.
include &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:react-native-push-notification&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
project(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:react-native-push-notification&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;.&lt;/span&gt;projectDir &lt;span class="pl-k"&gt;=&lt;/span&gt; file(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;../node_modules/react-native-push-notification/android&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In &lt;code&gt;android/app/src/res/values/colors.xml&lt;/code&gt; (Create the file if it doesn't exist).&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;resources&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;color&lt;/span&gt; &lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;white&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;#FFF&amp;lt;/&lt;span class="pl-ent"&gt;color&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;resources&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Manually register module in &lt;code&gt;MainApplication.java&lt;/code&gt; (if you did not use &lt;code&gt;react-native link&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.dieam.reactnativepushnotification.ReactNativePushNotificationPackage&lt;/span&gt;;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;--- Import Package&lt;/span&gt;

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MainApplication&lt;/span&gt; &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;Application&lt;/span&gt; &lt;span class="pl-k"&gt;implements&lt;/span&gt; &lt;span class="pl-e"&gt;ReactApplication&lt;/span&gt; {

  &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;final&lt;/span&gt; &lt;span class="pl-smi"&gt;ReactNativeHost&lt;/span&gt; mReactNativeHost &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;ReactNativeHost&lt;/span&gt;(&lt;span class="pl-c1"&gt;this&lt;/span&gt;) {
      &lt;span class="pl-k"&gt;@Override&lt;/span&gt;
      &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;boolean&lt;/span&gt; &lt;span class="pl-en"&gt;getUseDeveloperSupport&lt;/span&gt;() {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;BuildConfig&lt;/span&gt;&lt;span class="pl-c1"&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;DEBUG&lt;/span&gt;;
      }

      &lt;span class="pl-k"&gt;@Override&lt;/span&gt;
      &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;ReactPackage&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;getPackages&lt;/span&gt;() {

      &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;Arrays&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-smi"&gt;ReactPackage&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;asList(
          &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;MainReactPackage&lt;/span&gt;(),
          &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;ReactNativePushNotificationPackage&lt;/span&gt;() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;---- Add the Package&lt;/span&gt;
      );
    }
  };

  &lt;span class="pl-c1"&gt;....&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; PushNotification &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;react-native-push-notification&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);

&lt;span class="pl-smi"&gt;PushNotification&lt;/span&gt;.&lt;span class="pl-en"&gt;configure&lt;/span&gt;({
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (optional) Called when Token is generated (iOS and Android)&lt;/span&gt;
  &lt;span class="pl-en"&gt;onRegister&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;token&lt;/span&gt;) {
    &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;TOKEN:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, token);
  },

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (required) Called when a remote or local notification is opened or received&lt;/span&gt;
  &lt;span class="pl-en"&gt;onNotification&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;notification&lt;/span&gt;) {
    &lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;NOTIFICATION:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, notification);

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; process the notification&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; required on iOS only (see fetchCompletionHandler docs: https://github.com/react-native-community/react-native-push-notification-ios)&lt;/span&gt;
    &lt;span class="pl-smi"&gt;notification&lt;/span&gt;.&lt;span class="pl-en"&gt;finish&lt;/span&gt;(&lt;span class="pl-smi"&gt;PushNotificationIOS&lt;/span&gt;.&lt;span class="pl-smi"&gt;FetchResult&lt;/span&gt;.&lt;span class="pl-smi"&gt;NoData&lt;/span&gt;);
  },

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ANDROID ONLY: GCM or FCM Sender ID (product_number) (optional - not required for local notifications, but is need to receive remote push notifications)&lt;/span&gt;
  senderID&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;YOUR GCM (OR FCM) SENDER ID&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; IOS ONLY (optional): default: all - Permissions to register.&lt;/span&gt;
  permissions&lt;span class="pl-k"&gt;:&lt;/span&gt; {
    alert&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
    badge&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
    sound&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
  },

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Should the initial notification be popped automatically&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; default: true&lt;/span&gt;
  popInitialNotification&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;   * (optional) default: true&lt;/span&gt;
&lt;span class="pl-c"&gt;   * - Specified if permissions (ios) and token (android and ios) will requested or not,&lt;/span&gt;
&lt;span class="pl-c"&gt;   * - if not, you must call PushNotificationsHandler.requestPermissions() later&lt;/span&gt;
&lt;span class="pl-c"&gt;   &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  requestPermissions&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
});&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-example-app" class="anchor" aria-hidden="true" href="#example-app"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example app&lt;/h2&gt;
&lt;p&gt;Example folder contains an example app to demonstrate how to use this package. The notification Handling is done in &lt;code&gt;NotifService.js&lt;/code&gt;. For Remote notifications, configure your SenderId in &lt;code&gt;app.json&lt;/code&gt;. You can also edit it directly in the app.
To send Push notifications, you can use the online tool &lt;a href="https://www.pushwatch.com/gcm/" rel="nofollow"&gt;PushWatch&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please test your PRs with this example app before submitting them. It'll help maintaining this repo.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-handling-notifications" class="anchor" aria-hidden="true" href="#handling-notifications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Handling Notifications&lt;/h2&gt;
&lt;p&gt;When any notification is opened or received the callback &lt;code&gt;onNotification&lt;/code&gt; is called passing an object with the notification data.&lt;/p&gt;
&lt;p&gt;Notification object example:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;{
    foreground&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BOOLEAN: If the notification was received in foreground or not&lt;/span&gt;
    userInteraction&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BOOLEAN: If the notification was opened by the user from the notification area or not&lt;/span&gt;
    message&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;My Notification Message&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; STRING: The notification message&lt;/span&gt;
    data&lt;span class="pl-k"&gt;:&lt;/span&gt; {}, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; OBJECT: The push data&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-local-notifications" class="anchor" aria-hidden="true" href="#local-notifications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Local Notifications&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;PushNotification.localNotification(details: Object)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;EXAMPLE:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;PushNotification&lt;/span&gt;.&lt;span class="pl-en"&gt;localNotification&lt;/span&gt;({
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Android Only Properties &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID&lt;/span&gt;
    ticker&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My Notification Ticker&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (optional)&lt;/span&gt;
    autoCancel&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (optional) default: true&lt;/span&gt;
    largeIcon&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ic_launcher&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (optional) default: "ic_launcher"&lt;/span&gt;
    smallIcon&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ic_notification&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (optional) default: "ic_notification" with fallback for "ic_launcher"&lt;/span&gt;
    bigText&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My big text that will be shown when notification is expanded&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (optional) default: "message" prop&lt;/span&gt;
    subText&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;This is a subText&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (optional) default: none&lt;/span&gt;
    color&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;red&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (optional) default: system default&lt;/span&gt;
    vibrate&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (optional) default: true&lt;/span&gt;
    vibration&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;300&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; vibration length in milliseconds, ignored if vibrate=false, default: 1000&lt;/span&gt;
    tag&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;some_tag&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (optional) add tag to message&lt;/span&gt;
    group&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;group&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (optional) add group to message&lt;/span&gt;
    ongoing&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (optional) set whether this is an "ongoing" notification&lt;/span&gt;
    priority&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;high&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (optional) set notification priority, default: high&lt;/span&gt;
    visibility&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;private&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (optional) set notification visibility, default: private&lt;/span&gt;
    importance&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;high&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (optional) set notification importance, default: high&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; iOS only properties &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    alertAction&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (optional) default: view&lt;/span&gt;
    category&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (optional) default: null&lt;/span&gt;
    userInfo&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (optional) default: null (object containing additional notification data)&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; iOS and Android properties &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My Notification Title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (optional)&lt;/span&gt;
    message&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My Notification Message&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (required)&lt;/span&gt;
    playSound&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (optional) default: true&lt;/span&gt;
    soundName&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;default&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)&lt;/span&gt;
    number&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;10&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)&lt;/span&gt;
    repeatType&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;day&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (optional) Repeating interval. Check 'Repeating Notifications' section for more info.&lt;/span&gt;
    actions&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;["Yes", "No"]&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (Android only) See the doc for notification actions to know more&lt;/span&gt;
});&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-scheduled-notifications" class="anchor" aria-hidden="true" href="#scheduled-notifications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Scheduled Notifications&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;PushNotification.localNotificationSchedule(details: Object)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;EXAMPLE:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;PushNotification&lt;/span&gt;.&lt;span class="pl-en"&gt;localNotificationSchedule&lt;/span&gt;({
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;... You can use all the options from localNotifications&lt;/span&gt;
  message&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My Notification Message&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (required)&lt;/span&gt;
  date&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Date&lt;/span&gt;(&lt;span class="pl-c1"&gt;Date&lt;/span&gt;.&lt;span class="pl-en"&gt;now&lt;/span&gt;() &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;60&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; in 60 secs&lt;/span&gt;
});&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-custom-sounds" class="anchor" aria-hidden="true" href="#custom-sounds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom sounds&lt;/h2&gt;
&lt;p&gt;In android, add your custom sound file to &lt;code&gt;[project_root]/android/app/src/main/res/raw&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;In iOS, add your custom sound file to the project &lt;code&gt;Resources&lt;/code&gt; in xCode.&lt;/p&gt;
&lt;p&gt;In the location notification json specify the full file name:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;soundName: 'my_sound.mp3'
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-cancelling-notifications" class="anchor" aria-hidden="true" href="#cancelling-notifications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cancelling notifications&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-1-cancellocalnotifications" class="anchor" aria-hidden="true" href="#1-cancellocalnotifications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1) cancelLocalNotifications&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-android" class="anchor" aria-hidden="true" href="#android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;id&lt;/code&gt; parameter for &lt;code&gt;PushNotification.localNotification&lt;/code&gt; is required for this operation. The id supplied will then be used for the cancel operation.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Android&lt;/span&gt;
&lt;span class="pl-smi"&gt;PushNotification&lt;/span&gt;.&lt;span class="pl-en"&gt;localNotification&lt;/span&gt;({
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
    id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;123&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
});
&lt;span class="pl-smi"&gt;PushNotification&lt;/span&gt;.&lt;span class="pl-en"&gt;cancelLocalNotifications&lt;/span&gt;({id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;123&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;});&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-notification-priority" class="anchor" aria-hidden="true" href="#notification-priority"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notification priority&lt;/h2&gt;
&lt;p&gt;(optional) Specify &lt;code&gt;priority&lt;/code&gt; to set priority of notification. Default value: "high"&lt;/p&gt;
&lt;p&gt;Available options:&lt;/p&gt;
&lt;p&gt;"max" = NotficationCompat.PRIORITY_MAX&lt;br&gt;
"high" = NotficationCompat.PRIORITY_HIGH&lt;br&gt;
"low" = NotficationCompat.PRIORITY_LOW&lt;br&gt;
"min" = NotficationCompat.PRIORITY_MIN&lt;br&gt;
"default" = NotficationCompat.PRIORITY_DEFAULT&lt;/p&gt;
&lt;p&gt;More information: &lt;a href="https://developer.android.com/reference/android/app/Notification.html#PRIORITY_DEFAULT" rel="nofollow"&gt;https://developer.android.com/reference/android/app/Notification.html#PRIORITY_DEFAULT&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-notification-visibility" class="anchor" aria-hidden="true" href="#notification-visibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notification visibility&lt;/h2&gt;
&lt;p&gt;(optional) Specify &lt;code&gt;visibility&lt;/code&gt; to set visibility of notification. Default value: "private"&lt;/p&gt;
&lt;p&gt;Available options:&lt;/p&gt;
&lt;p&gt;"private" = NotficationCompat.VISIBILITY_PRIVATE&lt;br&gt;
"public" = NotficationCompat.VISIBILITY_PUBLIC&lt;br&gt;
"secret" = NotficationCompat.VISIBILITY_SECRET&lt;/p&gt;
&lt;p&gt;More information: &lt;a href="https://developer.android.com/reference/android/app/Notification.html#VISIBILITY_PRIVATE" rel="nofollow"&gt;https://developer.android.com/reference/android/app/Notification.html#VISIBILITY_PRIVATE&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-notification-importance" class="anchor" aria-hidden="true" href="#notification-importance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notification importance&lt;/h2&gt;
&lt;p&gt;(optional) Specify &lt;code&gt;importance&lt;/code&gt; to set importance of notification. Default value: "high"&lt;/p&gt;
&lt;p&gt;Available options:&lt;/p&gt;
&lt;p&gt;"default" = NotificationManager.IMPORTANCE_DEFAULT&lt;br&gt;
"max" = NotificationManager.IMPORTANCE_MAX&lt;br&gt;
"high" = NotificationManager.IMPORTANCE_HIGH&lt;br&gt;
"low" = NotificationManager.IMPORTANCE_LOW&lt;br&gt;
"min" = NotificationManager.IMPORTANCE_MIN&lt;br&gt;
"none" = NotificationManager.IMPORTANCE_NONE&lt;br&gt;
"unspecified" = NotificationManager.IMPORTANCE_UNSPECIFIED&lt;/p&gt;
&lt;p&gt;More information: &lt;a href="https://developer.android.com/reference/android/app/NotificationManager#IMPORTANCE_DEFAULT" rel="nofollow"&gt;https://developer.android.com/reference/android/app/NotificationManager#IMPORTANCE_DEFAULT&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-ios" class="anchor" aria-hidden="true" href="#ios"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;IOS&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;userInfo&lt;/code&gt; parameter for &lt;code&gt;PushNotification.localNotification&lt;/code&gt; is required for this operation and must contain an &lt;code&gt;id&lt;/code&gt; parameter. The id supplied will then be used for the cancel operation.&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; IOS&lt;/span&gt;
&lt;span class="pl-smi"&gt;PushNotification&lt;/span&gt;.&lt;span class="pl-en"&gt;localNotification&lt;/span&gt;({
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
    userInfo&lt;span class="pl-k"&gt;:&lt;/span&gt; { id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;123&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
});
&lt;span class="pl-smi"&gt;PushNotification&lt;/span&gt;.&lt;span class="pl-en"&gt;cancelLocalNotifications&lt;/span&gt;({id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;123&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;});&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-2-cancelalllocalnotifications" class="anchor" aria-hidden="true" href="#2-cancelalllocalnotifications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2) cancelAllLocalNotifications&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;PushNotification.cancelAllLocalNotifications()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Cancels all scheduled notifications AND clears the notifications alerts that are in the notification centre.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NOTE: there is currently no api for removing specific notification alerts from the notification centre.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-repeating-notifications" class="anchor" aria-hidden="true" href="#repeating-notifications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Repeating Notifications&lt;/h2&gt;
&lt;p&gt;(optional) Specify &lt;code&gt;repeatType&lt;/code&gt; and optionally &lt;code&gt;repeatTime&lt;/code&gt; while scheduling the local notification. Check the local notification example above.&lt;/p&gt;
&lt;p&gt;Property &lt;code&gt;repeatType&lt;/code&gt; could be one of &lt;code&gt;month&lt;/code&gt;, &lt;code&gt;week&lt;/code&gt;, &lt;code&gt;day&lt;/code&gt;, &lt;code&gt;hour&lt;/code&gt;, &lt;code&gt;minute&lt;/code&gt;, &lt;code&gt;time&lt;/code&gt;. If specified as time, it should be accompanied by one more parameter &lt;code&gt;repeatTime&lt;/code&gt; which should the number of milliseconds between each interval.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-notification-actions" class="anchor" aria-hidden="true" href="#notification-actions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notification Actions&lt;/h2&gt;
&lt;p&gt;(Android only) &lt;a href="https://github.com/zo0r/react-native-push-notification/issues/151"&gt;Refer&lt;/a&gt; to this issue to see an example of a notification action.&lt;/p&gt;
&lt;p&gt;Two things are required to setup notification actions.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-1-specify-notification-actions-for-a-notification" class="anchor" aria-hidden="true" href="#1-specify-notification-actions-for-a-notification"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1) Specify notification actions for a notification&lt;/h3&gt;
&lt;p&gt;This is done by specifying an &lt;code&gt;actions&lt;/code&gt; parameters while configuring the local notification. This is an array of strings where each string is a notification action that will be presented with the notification.&lt;/p&gt;
&lt;p&gt;For e.g. &lt;code&gt;actions: '["Accept", "Reject"]' // Must be in string format&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The array itself is specified in string format to circumvent some problems because of the way JSON arrays are handled by react-native android bridge.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-2-specify-handlers-for-the-notification-actions" class="anchor" aria-hidden="true" href="#2-specify-handlers-for-the-notification-actions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2) Specify handlers for the notification actions&lt;/h3&gt;
&lt;p&gt;For each action specified in the &lt;code&gt;actions&lt;/code&gt; field, we need to add a handler that is called when the user clicks on the action. This can be done in the &lt;code&gt;componentWillMount&lt;/code&gt; of your main app file or in a separate file which is imported in your main app file. Notification actions handlers can be configured as below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import PushNotificationAndroid from 'react-native-push-notification'

(function() {
  // Register all the valid actions for notifications here and add the action handler for each action
  PushNotificationAndroid.registerNotificationActions(['Accept','Reject','Yes','No']);
  DeviceEventEmitter.addListener('notificationActionReceived', function(action){
    console.log ('Notification action received: ' + action);
    const info = JSON.parse(action.dataJSON);
    if (info.action == 'Accept') {
      // Do work pertaining to Accept action here
    } else if (info.action == 'Reject') {
      // Do work pertaining to Reject action here
    }
    // Add all the required actions handlers
  });
})();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For iOS, you can use this &lt;a href="https://github.com/holmesal/react-native-ios-notification-actions"&gt;package&lt;/a&gt; to add notification actions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-set-application-badge-icon" class="anchor" aria-hidden="true" href="#set-application-badge-icon"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Set application badge icon&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;PushNotification.setApplicationIconBadgeNumber(number: number)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Works natively in iOS.&lt;/p&gt;
&lt;p&gt;Uses the &lt;a href="https://github.com/leolin310148/ShortcutBadger"&gt;ShortcutBadger&lt;/a&gt; on Android, and as such will not work on all Android devices.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sending-notification-data-from-server" class="anchor" aria-hidden="true" href="#sending-notification-data-from-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sending Notification Data From Server&lt;/h2&gt;
&lt;p&gt;Same parameters as &lt;code&gt;PushNotification.localNotification()&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-android-only-methods" class="anchor" aria-hidden="true" href="#android-only-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android Only Methods&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;PushNotification.subscribeToTopic(topic: string)&lt;/code&gt; Subscribe to a topic (works only with Firebase)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-checking-notification-permissions" class="anchor" aria-hidden="true" href="#checking-notification-permissions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Checking Notification Permissions&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;PushNotification.checkPermissions(callback: Function)&lt;/code&gt; Check permissions&lt;/p&gt;
&lt;p&gt;&lt;code&gt;callback&lt;/code&gt; will be invoked with a &lt;code&gt;permissions&lt;/code&gt; object:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;alert&lt;/code&gt;: boolean&lt;/li&gt;
&lt;li&gt;&lt;code&gt;badge&lt;/code&gt;: boolean&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sound&lt;/code&gt;: boolean&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-ios-only-methods" class="anchor" aria-hidden="true" href="#ios-only-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iOS Only Methods&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;PushNotification.getApplicationIconBadgeNumber(callback: Function)&lt;/code&gt; Get badge number&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PushNotification.abandonPermissions()&lt;/code&gt; Abandon permissions&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>zo0r</author><guid isPermaLink="false">https://github.com/zo0r/react-native-push-notification</guid><pubDate>Tue, 28 Jan 2020 00:08:00 GMT</pubDate></item><item><title>awsdocs/aws-doc-sdk-examples #9 in Java, This week</title><link>https://github.com/awsdocs/aws-doc-sdk-examples</link><description>&lt;p&gt;&lt;i&gt;Welcome to the AWS Code Example Repository.  This repo contains code examples used in the AWS documentation, AWS SDK Developer Guides, and more. For more information, see the Readme.rst file below.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="rst" data-path="README.rst"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;a name="user-content-welcome"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-welcome" class="anchor" aria-hidden="true" href="#welcome"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Welcome&lt;/h2&gt;
&lt;p&gt;This is the repository for code samples used in the public
&lt;a href="https://docs.aws.amazon.com" rel="nofollow"&gt;AWS documentation&lt;/a&gt;. The examples use the AWS Software Developer
Kits (SDKs) for the supported programming languages. For more information, see &lt;a href="https://aws.amazon.com/getting-started/tools-sdks/" rel="nofollow"&gt;Tools to Build on
AWS&lt;/a&gt;.&lt;/p&gt;
&lt;a name="user-content-finding-code-examples"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-finding-code-examples" class="anchor" aria-hidden="true" href="#finding-code-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Finding code examples&lt;/h2&gt;
&lt;p&gt;The code examples are organized by programming language. For instance, all of the examples for the
&lt;a href="https://www.github.com/awsdocs/aws-java-developer-guide"&gt;AWS SDK for Java Developer Guide&lt;/a&gt; are
kept in the &lt;a href="java"&gt;java&lt;/a&gt; directory.&lt;/p&gt;
&lt;p&gt;You can also try using the preview of our &lt;a href="code-index.md"&gt;use case index of examples&lt;/a&gt; (and let us
know what you think about it).&lt;/p&gt;
&lt;a name="user-content-building-and-running-code-examples"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-building-and-running-code-examples" class="anchor" aria-hidden="true" href="#building-and-running-code-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building and running code examples&lt;/h2&gt;
&lt;p&gt;Inside each of the language-specific directories, you'll find a &lt;strong&gt;README&lt;/strong&gt; file that explains how to
build and run the examples contained within it.&lt;/p&gt;
&lt;p&gt;The example code inside the language-specific directories is organized by
the AWS service abbreviation ("s3" for &lt;a href="https://aws.amazon.com/s3" rel="nofollow"&gt;Amazon S3&lt;/a&gt; examples, and so
on).&lt;/p&gt;
&lt;a name="user-content-proposing-new-code-examples"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-proposing-new-code-examples" class="anchor" aria-hidden="true" href="#proposing-new-code-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Proposing new code examples&lt;/h2&gt;
&lt;p&gt;To propose a new code example for the AWS documentation team to consider working on, &lt;a href="https://github.com/awsdocs/aws-doc-sdk-examples/issues/new?assignees=&amp;amp;labels=code+sample+request&amp;amp;template=request-new-code-example.md&amp;amp;title=%5BNEW+EXAMPLE+REQUEST%5D+%3C%3CProvide+a+title+for+this+proposal%3E%3E"&gt;create a new
request&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The AWS documentation team is looking to produce code examples that cover broader scenarios and use
cases, versus simple code snippets that cover only individual API calls.&lt;/p&gt;
&lt;p&gt;From time to time, the AWS documentation team will select some of these proposals to begin working on.
To view their decisions, see the &lt;a href="https://github.com/awsdocs/aws-doc-sdk-examples/projects/2"&gt;code examples roadmap&lt;/a&gt;.
If you feel strongly about seeing the timeline of a particular proposal accelerated or the scope of a
particular proposal expanded or focused, be sure to +1 the related issue, add comments to it, or both,
and the team will take this under consideration.&lt;/p&gt;
&lt;p&gt;The AWS documentation team typically moves accepted proposals in the roadmp from the &lt;strong&gt;Wish List&lt;/strong&gt;
stage to the &lt;strong&gt;Backlog&lt;/strong&gt; stage, then to the &lt;strong&gt;In Progress&lt;/strong&gt; stage, and finally to the &lt;strong&gt;Recently
Completed&lt;/strong&gt; stage. The &lt;strong&gt;Wish List&lt;/strong&gt; stage represents proposals that the team &lt;em&gt;might&lt;/em&gt; begin working
on at some point in the future but with no expected timeline, while the &lt;strong&gt;Backlog&lt;/strong&gt; stage represents
proposals that the team will &lt;em&gt;likely&lt;/em&gt; begin working on soon. To view the team's progress, see the
&lt;a href="https://github.com/awsdocs/aws-doc-sdk-examples/projects/2"&gt;code examples roadmap&lt;/a&gt;.&lt;/p&gt;
&lt;a name="user-content-submitting-code-examples-for-use-in-aws-documentation"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-submitting-code-examples-for-use-in-aws-documentation" class="anchor" aria-hidden="true" href="#submitting-code-examples-for-use-in-aws-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Submitting code examples for use in AWS documentation&lt;/h2&gt;
&lt;p&gt;If you plan to contribute examples for use in the documentation (the purpose of this repository),
please read this section carefully so that we can work together more effectively.
For process instructions and additional guidance, see the &lt;a href="CONTRIBUTING.md"&gt;Guidelines for contributing&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Make sure that the code can be built and run&lt;/strong&gt;. There's nothing more frustrating in developer
documentation than code examples that don't work. Build the code and test it before submitting it!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Do not include personal account data, keys or IDs in your examples&lt;/strong&gt;. Code should obtain access
keys from the standard SDK credentials and config files, use environment variables or external
data files, or query the user for this information.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Format code lines to 80 characters&lt;/strong&gt;. Long lines can be enclosed in a scrollable box for HTML,
but in a PDF build, long lines will often spill off the side of the page, making the code
unreadable. If your code includes long text strings, consider breaking these into smaller chunks
and concatenating them together.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Use short(er) variable names&lt;/strong&gt;. To aid in readability and to help keep line length down, use
&lt;em&gt;short yet descriptive&lt;/em&gt; names for variables. Do &lt;em&gt;not&lt;/em&gt; simply mimic class names when creating
variables that represent an object of that class. It nearly always results in excessively long
variable names, making it difficult to keep code lines within 80 characters.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Use spaces, not tabs, for indentation&lt;/strong&gt;. Tabs are variable-length in most editors, but will
usually render as 8 characters wide in printed documentation. &lt;em&gt;Always use spaces&lt;/em&gt; to ensure
consistent formatting in printed code.&lt;/p&gt;
&lt;p&gt;You can ignore this rule for makefiles, which may &lt;em&gt;require&lt;/em&gt; the use of tabs, but these are
typically only used for building examples, and are not included in documentation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Minimize the use of comments&lt;/strong&gt;. Code is ignored for translation, so comments in code are not
translated for the printed documentation's target language. Comments should not be needed in most
code used for documentation, since the goal is clarity and ease of understanding. By making code
self-explanatory, you'll make better code for documentation and reduce the need to add comments.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Place comments on separate lines from code&lt;/strong&gt;. If you &lt;em&gt;must&lt;/em&gt; add a comment for explanation or any
other purpose, make sure that it's placed on a separate line from code (&lt;em&gt;not&lt;/em&gt; inline). This
allows readers of the source file to read the comment, yet it can be stripped out when including
snippets from the file within documentation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;All code must be submitted under the Apache 2.0 license&lt;/strong&gt;, as noted in the following &lt;strong&gt;Copyright
and License&lt;/strong&gt; section.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;a name="user-content-copyright-and-license"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-copyright-and-license" class="anchor" aria-hidden="true" href="#copyright-and-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright and License&lt;/h2&gt;
&lt;p&gt;All content in this repository, unless otherwise stated, is
Copyright © 2010-2020, Amazon Web Services, Inc. or its affiliates. All rights reserved.&lt;/p&gt;
&lt;p&gt;Except where otherwise noted, all examples in this collection are licensed under the &lt;a href="https://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;Apache
license, version 2.0&lt;/a&gt; (the "License"). The full
license text is provided in the &lt;code&gt;LICENSE&lt;/code&gt; file accompanying this repository.&lt;/p&gt;

&lt;/article&gt;&lt;/div&gt;</description><author>awsdocs</author><guid isPermaLink="false">https://github.com/awsdocs/aws-doc-sdk-examples</guid><pubDate>Tue, 28 Jan 2020 00:09:00 GMT</pubDate></item><item><title>zalando/zalenium #10 in Java, This week</title><link>https://github.com/zalando/zalenium</link><description>&lt;p&gt;&lt;i&gt;A flexible and scalable container based Selenium Grid with video recording, live preview, basic auth &amp; dashboard.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="./docs/img/logo_zalenium_wide.png"&gt;&lt;img id="user-content-header" height="214" width="500" src="./docs/img/logo_zalenium_wide.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/zalando/zalenium" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7dda9d3d88729c0824d932a78d30150a55c2ec71/68747470733a2f2f7472617669732d63692e6f72672f7a616c616e646f2f7a616c656e69756d2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/zalando/zalenium.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.codacy.com/app/diemol_zalenium/zalenium?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=zalando/zalenium&amp;amp;utm_campaign=Badge_Grade" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/42f4993690cd8dd71b18010d3e011e3772086324/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6337313961313466353533373438386238666239356437306532376163643566" alt="Codacy Badge" data-canonical-src="https://api.codacy.com/project/badge/Grade/c719a14f5537488b8fb95d70e27acd5f" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/zalando/zalenium" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6b0fbf519e6e2198352ef69a8c7463cee4ea4e2b/68747470733a2f2f636f6465636f762e696f2f67682f7a616c616e646f2f7a616c656e69756d2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/zalando/zalenium/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/zalando/zalenium/releases"&gt;&lt;img src="https://camo.githubusercontent.com/4490b6bfcbb852499163e7abeeae3ef4899d9771/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f7a616c616e646f2f7a616c656e69756d2e737667" alt="GitHub release" data-canonical-src="https://img.shields.io/github/release/zalando/zalenium.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://hub.docker.com/r/dosel/zalenium/tags/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/246298c576683e6d95086665a7b7fca2a5d76e07/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f646f73656c2f7a616c656e69756d2e737667" alt="Docker Pulls" data-canonical-src="https://img.shields.io/docker/pulls/dosel/zalenium.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://seleniumhq.herokuapp.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8696bf1b9b280dd4832193e0fdff38166c9f2f00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d6f6e253230736c61636b2d7265642e7376673f6c6f676f3d736c61636b" alt="Slack" data-canonical-src="https://img.shields.io/badge/chat-on%20slack-red.svg?logo=slack" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-exclamation-current-project-status-looking-for-active-maintainers" class="anchor" aria-hidden="true" href="#exclamation-current-project-status-looking-for-active-maintainers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="exclamation" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2757.png"&gt;❗️&lt;/g-emoji&gt; Current project status: Looking for active maintainers&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-zalenium-is-currently-on-maintenance-mode-no-new-features-are-being-implemented-and-bugs-are-fixed-via-prs-sent-by-community-the-current-maintainers-only-have-time-to-review-prs-and-do-releases" class="anchor" aria-hidden="true" href="#zalenium-is-currently-on-maintenance-mode-no-new-features-are-being-implemented-and-bugs-are-fixed-via-prs-sent-by-community-the-current-maintainers-only-have-time-to-review-prs-and-do-releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Zalenium is currently on maintenance mode, no new features are being implemented and bugs are fixed via PRs sent by community. The current maintainers only have time to review PRs and do releases.&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-additionally-due-to-the-changes-being-implemented-on-the-upstream-selenium-grid-4x-it-is-unlikely-that-zalenium-can-be-upgraded-with-the-current-resources-if-this-is-to-be-achieved-more-active-maintainers-are-needed" class="anchor" aria-hidden="true" href="#additionally-due-to-the-changes-being-implemented-on-the-upstream-selenium-grid-4x-it-is-unlikely-that-zalenium-can-be-upgraded-with-the-current-resources-if-this-is-to-be-achieved-more-active-maintainers-are-needed"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additionally, due to the changes being implemented on the upstream Selenium Grid 4.x, it is unlikely that Zalenium can be upgraded with the current resources. If this is to be achieved, more active maintainers are needed.&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-if-you-are-interested-in-supporting-the-project-please-create-a-github-issue-expressing-your-interest" class="anchor" aria-hidden="true" href="#if-you-are-interested-in-supporting-the-project-please-create-a-github-issue-expressing-your-interest"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;If you are interested in supporting the project, please create a GitHub issue expressing your interest.&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;This is a Selenium Grid extension to scale your local grid dynamically with docker containers. It uses
&lt;a href="https://github.com/elgalu/docker-selenium"&gt;docker-selenium&lt;/a&gt; to run your tests in Firefox and Chrome locally, if you
need a different browser, your tests can get redirected to a cloud testing provider (&lt;a href="https://saucelabs.com/" rel="nofollow"&gt;Sauce Labs&lt;/a&gt;,
&lt;a href="https://www.browserstack.com/" rel="nofollow"&gt;BrowserStack&lt;/a&gt;, &lt;a href="https://testingbot.com/" rel="nofollow"&gt;TestingBot&lt;/a&gt;, &lt;a href="https://crossbrowsertesting.com/" rel="nofollow"&gt;CrossBrowserTesting&lt;/a&gt;, &lt;a href="https://www.lambdatest.com/" rel="nofollow"&gt;LambdaTest&lt;/a&gt;). Zalenium also works out of the box
in &lt;a href="https://zalando.github.io/zalenium/#kubernetes" rel="nofollow"&gt;Kubernetes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Zalenium's maintainers add new features regularly. We invite you to test it, report bugs, suggest any ideas you may
have, and contribute. See our &lt;a href="https://zalando.github.io/zalenium/#contributing" rel="nofollow"&gt;contributing guidelines&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-why" class="anchor" aria-hidden="true" href="#why"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why?&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Thanks for open sourcing this. Our test suite run time has dropped from more than an hour to six minutes. — &lt;a href="https://twitter.com/Tkueck/status/887425829273088000" rel="nofollow"&gt;@TKueck&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We know how complicated it is to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Have a stable grid to run UI tests with Selenium&lt;/li&gt;
&lt;li&gt;Maintain it over time (keep up with new browser, Selenium and drivers versions)&lt;/li&gt;
&lt;li&gt;Provide capabilities to cover all browsers and platforms&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That is why we took this approach where &lt;a href="https://github.com/elgalu/docker-selenium"&gt;docker-selenium&lt;/a&gt; nodes are
created on demand. Your UI tests in Firefox and Chrome will run faster because they are running on a local grid,
on a node created from scratch and disposed after the test completes.&lt;/p&gt;
&lt;p&gt;If you need a capability that cannot be fulfilled by &lt;a href="https://github.com/elgalu/docker-selenium"&gt;docker-selenium&lt;/a&gt;,
the test gets redirected to a cloud testing provider (&lt;a href="https://saucelabs.com/" rel="nofollow"&gt;Sauce Labs&lt;/a&gt;,
&lt;a href="https://www.browserstack.com/" rel="nofollow"&gt;BrowserStack&lt;/a&gt;, &lt;a href="https://testingbot.com/" rel="nofollow"&gt;TestingBot&lt;/a&gt;, &lt;a href="https://crossbrowsertesting.com/" rel="nofollow"&gt;CrossBrowserTesting&lt;/a&gt;, &lt;a href="https://www.lambdatest.com/" rel="nofollow"&gt;LambdaTest&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Zalenium's main goal is: to allow anyone to have a disposable and flexible Selenium Grid infrastructure.&lt;/p&gt;
&lt;p&gt;Part of the idea comes from this &lt;a href="https://saucelabs.com/blog/introducing-the-sauce-plugin-for-selenium-grid" rel="nofollow"&gt;Sauce Labs post&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-what-does-zalenium-mean" class="anchor" aria-hidden="true" href="#what-does-zalenium-mean"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What does &lt;strong&gt;Zalenium&lt;/strong&gt; mean?&lt;/h3&gt;
&lt;p&gt;As you can imagine, it is the result of mixing &lt;em&gt;&lt;a href="https://tech.zalando.com" rel="nofollow"&gt;Zalando&lt;/a&gt;&lt;/em&gt; and &lt;em&gt;&lt;a href="http://www.seleniumhq.org/" rel="nofollow"&gt;Selenium&lt;/a&gt;&lt;/em&gt;.
As mentioned before, this project's aim is to provide a simple way to create a grid and contribute to the Selenium community.
Nevertheless, this is &lt;em&gt;&lt;strong&gt;not&lt;/strong&gt;&lt;/em&gt; an official &lt;a href="http://www.seleniumhq.org/" rel="nofollow"&gt;Selenium&lt;/a&gt; project. We kindly ask you to create
&lt;a href="https://github.com/zalando/zalenium/issues/new"&gt;issues&lt;/a&gt; in this repository. If you have questions about how to get
started, please join the #zalenium channel on &lt;a href="https://seleniumhq.herokuapp.com" rel="nofollow"&gt;Slack&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#run-it"&gt;Run it&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#additional-features"&gt;Additional features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Docker engine running, version &amp;gt;= 1.11.1 (probably works with earlier versions, not tested yet).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make sure your docker daemon is running (e.g. &lt;code&gt;docker info&lt;/code&gt; works without errors).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pull the &lt;a href="https://github.com/elgalu/docker-selenium"&gt;docker-selenium&lt;/a&gt; image. &lt;code&gt;docker pull elgalu/selenium&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;docker pull dosel/zalenium&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-run-it" class="anchor" aria-hidden="true" href="#run-it"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run it&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Zalenium uses docker to scale on-demand, therefore we need to give it the &lt;code&gt;docker.sock&lt;/code&gt; full access, this is known as
"Docker alongside docker".&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Pull docker-selenium&lt;/span&gt;
  docker pull elgalu/selenium

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Pull Zalenium&lt;/span&gt;
  docker pull dosel/zalenium
        
  docker run --rm -ti --name zalenium -p 4444:4444 \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -v /tmp/videos:/home/seluser/videos \
    --privileged dosel/zalenium start&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Why &lt;code&gt;--privileged&lt;/code&gt;? We suggest you run Zalenium as &lt;code&gt;--privileged&lt;/code&gt; to speed up the node registration process by
increasing the entropy level with &lt;a href="http://www.issihosts.com/haveged/" rel="nofollow"&gt;Haveged&lt;/a&gt;. Using &lt;code&gt;--privileged&lt;/code&gt; is optional
since it is just meant to improve its performance. For more information, check this
&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-setup-additional-entropy-for-cloud-servers-using-haveged" rel="nofollow"&gt;tutorial&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Try also our one line installer and starter for OSX/Linux (it will check for the latest images and ask for missing dependencies.)&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;  curl -sSL https://raw.githubusercontent.com/dosel/t/i/p &lt;span class="pl-k"&gt;|&lt;/span&gt; bash -s start&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;More usage examples, parameters, configurations, video usage and one line starters can be seen &lt;a href="https://zalando.github.io/zalenium/#usage" rel="nofollow"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After the output, you can check the &lt;a href="http://localhost:4444/grid/console" rel="nofollow"&gt;grid&lt;/a&gt; console&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now you can point your Selenium tests to &lt;a href="http://localhost:4444/wd/hub" rel="nofollow"&gt;http://localhost:4444/wd/hub&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stop it: &lt;code&gt;docker stop zalenium&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-additional-features" class="anchor" aria-hidden="true" href="#additional-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://localhost:4444/dashboard" rel="nofollow"&gt;Dashboard&lt;/a&gt;, see all the videos and aggregated logs after your tests completed.
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="docs/img/dashboard.gif"&gt;&lt;img id="user-content-dashboard" width="600" src="docs/img/dashboard.gif" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Live preview of your running tests &lt;a href="http://localhost:4444/grid/admin/live" rel="nofollow"&gt;http://localhost:4444/grid/admin/live&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="docs/img/live_preview.gif"&gt;&lt;img id="user-content-live-preview" width="600" src="docs/img/live_preview.gif" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Video recording, check them in the &lt;code&gt;/tmp/videos&lt;/code&gt; folder (or the one you mapped when starting Zalenium)&lt;/li&gt;
&lt;li&gt;Customise video file naming via capabilities, basic auth and &lt;a href="https://zalando.github.io/zalenium/#usage" rel="nofollow"&gt;more&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Check the complete documentation at &lt;a href="https://zalando.github.io/zalenium/" rel="nofollow"&gt;https://zalando.github.io/zalenium/&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;See &lt;a href="LICENSE.md"&gt;License&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-security" class="anchor" aria-hidden="true" href="#security"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security&lt;/h1&gt;
&lt;p&gt;See &lt;a href="SECURITY.md"&gt;Security&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>zalando</author><guid isPermaLink="false">https://github.com/zalando/zalenium</guid><pubDate>Tue, 28 Jan 2020 00:10:00 GMT</pubDate></item><item><title>careercup/CtCI-6th-Edition #11 in Java, This week</title><link>https://github.com/careercup/CtCI-6th-Edition</link><description>&lt;p&gt;&lt;i&gt;Cracking the Coding Interview 6th Ed. Solutions&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-ctci-6th-edition" class="anchor" aria-hidden="true" href="#ctci-6th-edition"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CtCI-6th-Edition&lt;/h1&gt;
&lt;p&gt;Solutions for &lt;a href="http://www.amazon.com/Cracking-Coding-Interview-6th-Edition/dp/0984782850" rel="nofollow"&gt;Cracking the Coding Interview 6th Edition&lt;/a&gt; by &lt;a href="http://www.gayle.com/" rel="nofollow"&gt;Gayle Laakmann McDowell&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Crowdsourcing solutions for every widely used programming language. &lt;strong&gt;Contributions welcome&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-cloning" class="anchor" aria-hidden="true" href="#cloning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cloning&lt;/h2&gt;
&lt;p&gt;Solutions in Java are contained directly in this repo and are the same solutions found
in &lt;a href="http://www.amazon.com/Cracking-Coding-Interview-6th-Edition/dp/0984782850" rel="nofollow"&gt;the book&lt;/a&gt;. Solutions in other programming languages are contributed by the community and each have
their own dedicated repos which are referenced from this repo as git submodules. What this means for cloning:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If you want to make a local clone of solutions in all languages, you should use the &lt;code&gt;--recursive&lt;/code&gt; option:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  git clone --recursive https://github.com/careercup/CtCI-6th-Edition.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you're only interested in the Java solutions:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  git clone https://github.com/careercup/CtCI-6th-Edition.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you originally cloned without &lt;code&gt;--recursive&lt;/code&gt;, and then later decide you want the git submodules too, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-work-flow" class="anchor" aria-hidden="true" href="#work-flow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Work Flow&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Fork the appropriate repo for your language to your GitHub user. (see &lt;a href="#where-to-submit-pull-requests"&gt;Where to submit pull requests&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Write quality code and lint if applicable.&lt;/li&gt;
&lt;li&gt;Add tests if applicable.&lt;/li&gt;
&lt;li&gt;Open a pull request and provide a descriptive comment for what you did.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-where-to-submit-pull-requests" class="anchor" aria-hidden="true" href="#where-to-submit-pull-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Where to submit pull requests&lt;/h3&gt;
&lt;p&gt;Pull requests pertaining to Java solutions should be submitted to the main &lt;a href="https://github.com/careercup/CtCI-6th-Edition"&gt;CtCI-6th-Edition repo&lt;/a&gt;. Please submit pull requests for all other languages to the appropriate language-specific repo.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/careercup/CtCI-6th-Edition-Clojure"&gt;CtCI-6th-Edition-Clojure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/careercup/CtCI-6th-Edition-C"&gt;CtCI-6th-Edition-C&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/careercup/CtCI-6th-Edition-cpp"&gt;CtCI-6th-Edition-cpp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/careercup/CtCI-6th-Edition-CSharp"&gt;CtCI-6th-Edition-CSharp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/careercup/CtCI-6th-Edition-Go"&gt;CtCI-6th-Edition-Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/careercup/CtCI-6th-Edition-Groovy"&gt;CtCI-6th-Edition-Groovy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/careercup/CtCI-6th-Edition-Haskell"&gt;CtCI-6th-Edition-Haskell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/careercup/CtCI-6th-Edition-JavaScript"&gt;CtCI-6th-Edition-JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/careercup/CtCI-6th-Edition-JavaScript-ES2015"&gt;CtCI-6th-Edition-JavaScript-ES2015&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/careercup/CtCI-6th-Edition-Julia"&gt;CtCI-6th-Edition-Julia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/careercup/CtCI-6th-Edition-Kotlin"&gt;CtCI-6th-Edition-Kotlin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/careercup/CtCI-6th-Edition-Objective-C"&gt;CtCI-6th-Edition-Objective-C&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/careercup/CtCI-6th-Edition-php"&gt;CtCI-6th-Edition-php&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/careercup/CtCI-6th-Edition-Python"&gt;CtCI-6th-Edition-Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/careercup/CtCI-6th-Edition-Ruby"&gt;CtCI-6th-Edition-Ruby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/careercup/CtCI-6th-Edition-Swift"&gt;CtCI-6th-Edition-Swift&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-adding-a-new-language" class="anchor" aria-hidden="true" href="#adding-a-new-language"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding a new Language&lt;/h3&gt;
&lt;p&gt;Solutions in other languages are welcome too and should follow this workflow:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create the new repo under your own GitHub user account and start contributing solutions. The repo name should follow this naming convention: &lt;code&gt;CtCI-6th-Edition-&amp;lt;language&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Open an &lt;a href="https://github.com/careercup/CtCI-6th-Edition/issues"&gt;issue on the CtCI-6th-Edition repo&lt;/a&gt; to request that your solution repo be promoted to join the careercup GitHub organization and referenced from the main repo as a git submodule.&lt;/li&gt;
&lt;li&gt;If your request is approved, navigate to your repo's settings page and select the "Transfer Ownership" option, and specify "careercup" as the new owner.&lt;/li&gt;
&lt;/ol&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>careercup</author><guid isPermaLink="false">https://github.com/careercup/CtCI-6th-Edition</guid><pubDate>Tue, 28 Jan 2020 00:11:00 GMT</pubDate></item><item><title>mockito/mockito #12 in Java, This week</title><link>https://github.com/mockito/mockito</link><description>&lt;p&gt;&lt;i&gt;Most popular Mocking framework for unit tests written in Java&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;a href="http://site.mockito.org" rel="nofollow"&gt;
&lt;img src="https://raw.githubusercontent.com/mockito/mockito/release/3.x/src/javadoc/org/mockito/logo.png" alt="Mockito" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;p&gt;Most popular mocking framework for Java&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/mockito/mockito" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6dc3f952ea628b7301c75662b36bb12e658ce363/68747470733a2f2f7472617669732d63692e6f72672f6d6f636b69746f2f6d6f636b69746f2e7376673f6272616e63683d72656c656173652f332e78" alt="Build Status" data-canonical-src="https://travis-ci.org/mockito/mockito.svg?branch=release/3.x" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/github/mockito/mockito" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/068e698c6094b05cde91a25659a5b4feb5099ec1/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f6d6f636b69746f2f6d6f636b69746f2e737667" alt="Coverage Status" data-canonical-src="https://img.shields.io/codecov/c/github/mockito/mockito.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/mockito/mockito/blob/release/3.x/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/6a40b4913be1852a0fe4a896c5912412202f9169/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d677265656e2e737667" alt="MIT License" data-canonical-src="https://img.shields.io/badge/license-MIT-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mockito/mockito/blob/release/3.x/doc/release-notes/official.md"&gt;&lt;img src="https://camo.githubusercontent.com/5b4c4533d95e9539b50a0da5d3c06277e2e167aa/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72656c656173652532306e6f7465732d332e782d79656c6c6f772e737667" alt="Release Notes" data-canonical-src="https://img.shields.io/badge/release%20notes-3.x-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://search.maven.org/artifact/org.mockito/mockito-core/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/536d44eaf27b78569394cb99645bf1cbf009516a/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d63656e7472616c2f762f6f72672e6d6f636b69746f2f6d6f636b69746f2d636f72652e737667" alt="Maven Central" data-canonical-src="https://img.shields.io/maven-central/v/org.mockito/mockito-core.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bintray.com/mockito/maven/mockito/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/227b3d2114b84cdb03dfab042b8fb5f9e0cd66a6/68747470733a2f2f696d672e736869656c64732e696f2f62696e747261792f762f6d6f636b69746f2f6d6176656e2f6d6f636b69746f2d646576656c6f706d656e74" alt="Bintray" data-canonical-src="https://img.shields.io/bintray/v/mockito/maven/mockito-development" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.javadoc.io/doc/org.mockito/mockito-core" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bc3605dded4ebf8736d96e755352040b12d9bbfd/68747470733a2f2f7777772e6a617661646f632e696f2f62616467652f6f72672e6d6f636b69746f2f6d6f636b69746f2d636f72652e737667" alt="Javadoc" data-canonical-src="https://www.javadoc.io/badge/org.mockito/mockito-core.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-current-version-is-3x" class="anchor" aria-hidden="true" href="#current-version-is-3x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Current version is 3.x&lt;/h2&gt;
&lt;p&gt;Still on Mockito 1.x? See &lt;a href="https://github.com/mockito/mockito/wiki/What%27s-new-in-Mockito-2"&gt;what's new&lt;/a&gt; in Mockito 2! &lt;a href="https://github.com/mockito/mockito/releases/tag/v3.0.0"&gt;Mockito 3&lt;/a&gt; does not introduce any breaking API changes, but now requires Java 8 over Java 6 for Mockito 2.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-mockito-for-enterprise" class="anchor" aria-hidden="true" href="#mockito-for-enterprise"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mockito for enterprise&lt;/h2&gt;
&lt;p&gt;Available as part of the Tidelift Subscription&lt;/p&gt;
&lt;p&gt;The maintainers of org.mockito:mockito-core and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. &lt;a href="https://tidelift.com/subscription/pkg/maven-org-mockito-mockito-core?utm_source=maven-org-mockito-mockito-core&amp;amp;utm_medium=referral&amp;amp;utm_campaign=enterprise&amp;amp;utm_term=repo" rel="nofollow"&gt;Learn more.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;p&gt;Mockito &lt;a href="https://github.com/mockito/mockito/wiki/Continuous-Delivery-Overview"&gt;continuously delivers&lt;/a&gt; improvements using Shipkit library (&lt;a href="http://shipkit.org" rel="nofollow"&gt;http://shipkit.org&lt;/a&gt;). See the &lt;a href="https://github.com/mockito/mockito/blob/release/3.x/doc/release-notes/official.md"&gt;latest release notes&lt;/a&gt; and &lt;a href="http://javadoc.io/page/org.mockito/mockito-core/2/org/mockito/Mockito.html" rel="nofollow"&gt;latest documentation&lt;/a&gt;. Docs in javadoc.io are available 24h after release. Read also about &lt;a href="https://github.com/mockito/mockito/wiki/Semantic-Versioning"&gt;semantic versioning in Mockito&lt;/a&gt;. &lt;strong&gt;Note: not every version is published to Maven Central.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Older 1.x and 2.x releases are available in
&lt;a href="http://search.maven.org/#artifactdetails%7Corg.mockito%7Cmockito-core%7C1.10.19%7Cjar" rel="nofollow"&gt;Central Repository&lt;/a&gt;
, &lt;a href="https://bintray.com/mockito/maven/mockito/1.10.19/view" rel="nofollow"&gt;Bintray&lt;/a&gt;
and &lt;a href="http://javadoc.io/doc/org.mockito/mockito-core/1.10.19/org/mockito/Mockito.html" rel="nofollow"&gt;javadoc.io&lt;/a&gt; (documentation).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-more-information" class="anchor" aria-hidden="true" href="#more-information"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More information&lt;/h2&gt;
&lt;p&gt;All you want to know about Mockito is hosted at &lt;a href="http://site.mockito.org" rel="nofollow"&gt;The Mockito Site&lt;/a&gt; which is &lt;a href="https://github.com/mockito/mockito.github.io"&gt;Open Source&lt;/a&gt; and likes &lt;a href="https://github.com/mockito/mockito.github.io/pulls"&gt;pull requests&lt;/a&gt;, too.&lt;/p&gt;
&lt;p&gt;Want to contribute? Take a look at the &lt;a href="https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Enjoy Mockito!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-need-help" class="anchor" aria-hidden="true" href="#need-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Need help?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Search / Ask question on &lt;a href="http://stackoverflow.com/questions/tagged/mockito" rel="nofollow"&gt;stackoverflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Go to the &lt;a href="http://groups.google.com/group/mockito" rel="nofollow"&gt;mockito mailing-list&lt;/a&gt; (moderated)&lt;/li&gt;
&lt;li&gt;Open a ticket in GitHub &lt;a href="https://github.com/mockito/mockito/issues"&gt;issue tracker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-develop-mockito" class="anchor" aria-hidden="true" href="#how-to-develop-mockito"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to develop Mockito?&lt;/h2&gt;
&lt;p&gt;To build locally:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; ./gradlew build
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To develop in IntelliJ IDEA you can use built-in Gradle import wizard in IDEA.
Alternatively generate the importable IDEA metadata files using:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; ./gradlew idea
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then, &lt;em&gt;open&lt;/em&gt; the generated *.ipr file in IDEA.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-release-new-version" class="anchor" aria-hidden="true" href="#how-to-release-new-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to release new version?&lt;/h2&gt;
&lt;p&gt;Mockito &lt;a href="https://github.com/mockito/mockito/wiki/Continuous-Delivery-Overview"&gt;implements Continuous Delivery model&lt;/a&gt;.
Every change on main branch (for example merging a pull request) triggers a release build on Travis CI.
The build publishes new version if specific criteria are met: all tests green, no 'ci skip release' used in commit message, see the build log for more information.
Every new version is published to &lt;a href="https://bintray.com/mockito/maven" rel="nofollow"&gt;"mockito/maven" Bintray repository&lt;/a&gt;.
New versions that Mockito team deems "notable" are additionally published to &lt;a href="http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.mockito%22" rel="nofollow"&gt;Maven Central&lt;/a&gt; and &lt;a href="https://bintray.com/bintray/jcenter" rel="nofollow"&gt;JCenter&lt;/a&gt;.
We used to publish every version to Maven Central but we changed this strategy based on feedback from the community (&lt;a href="https://github.com/mockito/mockito/issues/911"&gt;#911&lt;/a&gt;).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Q: What's new in Mockito release model?&lt;/p&gt;
&lt;p&gt;A: In Q2 2017 we implemented &lt;a href="https://github.com/mockito/mockito/issues/911"&gt;Mockito Continuous Delivery Pipeline 2.0&lt;/a&gt;.
Not every version is published to Maven Central.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Q: How to publish to Maven Central?&lt;/p&gt;
&lt;p&gt;A: Include "[ci maven-central-release]" in the &lt;strong&gt;merge&lt;/strong&gt; commit when merging the PR.
&lt;strong&gt;Hint&lt;/strong&gt;: To signify a new feature consider updating version to next minor/major, like: "2.8.0", "2.9.0", "3.0.0".&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Q: How to promote already released version to a notable version?&lt;/p&gt;
&lt;p&gt;A: It isn't automated at the moment. &lt;a href="https://github.com/mockito/mockito/issues/911"&gt;What's the use case?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>mockito</author><guid isPermaLink="false">https://github.com/mockito/mockito</guid><pubDate>Tue, 28 Jan 2020 00:12:00 GMT</pubDate></item><item><title>TeamNewPipe/NewPipe #13 in Java, This week</title><link>https://github.com/TeamNewPipe/NewPipe</link><description>&lt;p&gt;&lt;i&gt;A libre lightweight streaming front-end for Android.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;&lt;a href="https://newpipe.schabi.org" rel="nofollow"&gt;&lt;img src="assets/new_pipe_icon_5.png" width="150" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2 align="center"&gt;&lt;a id="user-content-newpipe" class="anchor" aria-hidden="true" href="#newpipe"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;b&gt;NewPipe&lt;/b&gt;&lt;/h2&gt;
&lt;h4 align="center"&gt;&lt;a id="user-content-a-libre-lightweight-streaming-frontend-for-android" class="anchor" aria-hidden="true" href="#a-libre-lightweight-streaming-frontend-for-android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A libre lightweight streaming frontend for Android.&lt;/h4&gt;
&lt;p align="center"&gt;&lt;a href="https://f-droid.org/packages/org.schabi.newpipe/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fe347c40e0d48baa25fc425d0e54fb4671d543c9/68747470733a2f2f662d64726f69642e6f72672f77696b692f696d616765732f302f30362f462d44726f69642d627574746f6e5f6765742d69742d6f6e2e706e67" data-canonical-src="https://f-droid.org/wiki/images/0/06/F-Droid-button_get-it-on.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt;
&lt;a href="https://github.com/TeamNewPipe/NewPipe" alt="GitHub release"&gt;&lt;img src="https://camo.githubusercontent.com/8ec4697be25b8b8ad1cdcd514d359e30f08d7a5d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f5465616d4e6577506970652f4e6577506970652e737667" data-canonical-src="https://img.shields.io/github/release/TeamNewPipe/NewPipe.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.gnu.org/licenses/gpl-3.0" alt="License: GPLv3" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bf135a9cea09d0ea4bba410582c0e70ec8222736/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c25323076332d626c75652e737667" data-canonical-src="https://img.shields.io/badge/License-GPL%20v3-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/TeamNewPipe/NewPipe" alt="Build Status" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/35b7cec2b5c51b5204ed7bda8de2660c325e5035/68747470733a2f2f7472617669732d63692e6f72672f5465616d4e6577506970652f4e6577506970652e737667" data-canonical-src="https://travis-ci.org/TeamNewPipe/NewPipe.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://hosted.weblate.org/engage/NewPipe/" alt="Translation Status" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ccdf48733140a0e8e2b0f25e2d5f01ad9e8119af/68747470733a2f2f686f737465642e7765626c6174652e6f72672f776964676574732f4e6577506970652f2d2f7376672d62616467652e737667" data-canonical-src="https://hosted.weblate.org/widgets/NewPipe/-/svg-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://webchat.freenode.net/?channels=%23newpipe" alt="IRC channel: #newpipe" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a47c565df7764a10a8ac1c935dd7e93aaadd6135/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f495243253230636861742d2532336e6577706970652d627269676874677265656e2e737667" data-canonical-src="https://img.shields.io/badge/IRC%20chat-%23newpipe-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.bountysource.com/teams/newpipe" alt="Bountysource bounties" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7e67ad01dd3b836b4d1f90a0470c044352704dad/68747470733a2f2f696d672e736869656c64732e696f2f626f756e7479736f757263652f7465616d2f6e6577706970652f61637469766974792e7376673f636f6c6f72423d636432303166" data-canonical-src="https://img.shields.io/bountysource/team/newpipe/activity.svg?colorB=cd201f" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p align="center"&gt;&lt;a href="#screenshots"&gt;Screenshots&lt;/a&gt; • &lt;a href="#description"&gt;Description&lt;/a&gt; • &lt;a href="#features"&gt;Features&lt;/a&gt; • &lt;a href="#updates"&gt;Updates&lt;/a&gt; • &lt;a href="#contribution"&gt;Contribution&lt;/a&gt; • &lt;a href="#donate"&gt;Donate&lt;/a&gt; • &lt;a href="#license"&gt;License&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;&lt;a href="https://newpipe.schabi.org" rel="nofollow"&gt;Website&lt;/a&gt; • &lt;a href="https://newpipe.schabi.org/blog/" rel="nofollow"&gt;Blog&lt;/a&gt; • &lt;a href="https://newpipe.schabi.org/FAQ/" rel="nofollow"&gt;FAQ&lt;/a&gt; • &lt;a href="https://newpipe.schabi.org/press/" rel="nofollow"&gt;Press&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;b&gt;WARNING: THIS IS A BETA VERSION, THEREFORE YOU MAY ENCOUNTER BUGS. IF YOU DO, OPEN AN ISSUE VIA OUR GITHUB REPOSITORY.&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;PUTTING NEWPIPE OR ANY FORK OF IT INTO GOOGLE PLAYSTORE VIOLATES THEIR TERMS OF CONDITIONS.&lt;/b&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-screenshots" class="anchor" aria-hidden="true" href="#screenshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;a href="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_01.png"&gt;&lt;img src="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_01.png" width="160" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_02.png"&gt;&lt;img src="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_02.png" width="160" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_03.png"&gt;&lt;img src="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_03.png" width="160" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_04.png"&gt;&lt;img src="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_04.png" width="160" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_05.png"&gt;&lt;img src="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_05.png" width="160" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_06.png"&gt;&lt;img src="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_06.png" width="160" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_07.png"&gt;&lt;img src="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_07.png" width="160" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_08.png"&gt;&lt;img src="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_08.png" width="160" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_09.png"&gt;&lt;img src="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_09.png" width="160" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_10.png"&gt;&lt;img src="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_10.png" width="160" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="fastlane/metadata/android/en-US/images/tenInchScreenshots/shot_11.png"&gt;&lt;img src="fastlane/metadata/android/en-US/images/tenInchScreenshots/shot_11.png" width="405" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="fastlane/metadata/android/en-US/images/tenInchScreenshots/shot_12.png"&gt;&lt;img src="fastlane/metadata/android/en-US/images/tenInchScreenshots/shot_12.png" width="405" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-description" class="anchor" aria-hidden="true" href="#description"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Description&lt;/h2&gt;
&lt;p&gt;NewPipe does not use any Google framework libraries, nor the YouTube API. Websites are only parsed to fetch required info, so this app can be used on devices without Google services installed. Also, you don't need a YouTube account to use NewPipe, which is copylefted libre software.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Search videos&lt;/li&gt;
&lt;li&gt;Display general info about videos&lt;/li&gt;
&lt;li&gt;Watch YouTube videos&lt;/li&gt;
&lt;li&gt;Listen to YouTube videos&lt;/li&gt;
&lt;li&gt;Popup mode (floating player)&lt;/li&gt;
&lt;li&gt;Select streaming player to watch video with&lt;/li&gt;
&lt;li&gt;Download videos&lt;/li&gt;
&lt;li&gt;Download audio only&lt;/li&gt;
&lt;li&gt;Open a video in Kodi&lt;/li&gt;
&lt;li&gt;Show next/related videos&lt;/li&gt;
&lt;li&gt;Search YouTube in a specific language&lt;/li&gt;
&lt;li&gt;Watch/Block age restricted material&lt;/li&gt;
&lt;li&gt;Display general info about channels&lt;/li&gt;
&lt;li&gt;Search channels&lt;/li&gt;
&lt;li&gt;Watch videos from a channel&lt;/li&gt;
&lt;li&gt;Orbot/Tor support (not yet directly)&lt;/li&gt;
&lt;li&gt;1080p/2K/4K support&lt;/li&gt;
&lt;li&gt;View history&lt;/li&gt;
&lt;li&gt;Subscribe to channels&lt;/li&gt;
&lt;li&gt;Search history&lt;/li&gt;
&lt;li&gt;Search/watch playlists&lt;/li&gt;
&lt;li&gt;Watch as enqueued playlists&lt;/li&gt;
&lt;li&gt;Enqueue videos&lt;/li&gt;
&lt;li&gt;Local playlists&lt;/li&gt;
&lt;li&gt;Subtitles&lt;/li&gt;
&lt;li&gt;Livestream support&lt;/li&gt;
&lt;li&gt;Show comments&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-coming-features" class="anchor" aria-hidden="true" href="#coming-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Coming Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Cast to UPnP and Cast&lt;/li&gt;
&lt;li&gt;… and many more&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-supported-services" class="anchor" aria-hidden="true" href="#supported-services"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Services&lt;/h3&gt;
&lt;p&gt;NewPipe supports multiple services. Our &lt;a href="https://teamnewpipe.github.io/documentation/" rel="nofollow"&gt;docs&lt;/a&gt; provide more info on how a new service can be added to the app and the extractor. Please get in touch with us if you intend to add a new one. Currently supported services are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;YouTube&lt;/li&gt;
&lt;li&gt;SoundCloud [beta]&lt;/li&gt;
&lt;li&gt;media.ccc.de [beta]&lt;/li&gt;
&lt;li&gt;PeerTube instances [beta]&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-updates" class="anchor" aria-hidden="true" href="#updates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Updates&lt;/h2&gt;
&lt;p&gt;When a change to the NewPipe code occurs (due to either adding features or bug fixing), eventually a release will occur. These are in the format x.xx.x . In order to get this new version, you can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Build a debug APK yourself. This is the fastest way to get new features on your device, but is much more complicated, so we recommend using one of the other methods.&lt;/li&gt;
&lt;li&gt;Download the APK from &lt;a href="https://github.com/TeamNewPipe/NewPipe/releases"&gt;releases&lt;/a&gt; and install it.&lt;/li&gt;
&lt;li&gt;Update via F-droid. This is the slowest method of getting updates, as F-Droid must recognize changes, build the APK itself, sign it, then push the update to users.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When you install an APK from one of these options, it will be incompatible with an APK from one of the other options. This is due to different signing keys being used. Signing keys help ensure that a user isn't tricked into installing a malicious update to an app, and are independent. F-Droid and GitHub use different signing keys, and building an APK debug excludes a key. The signing key issue is being discussed in issue &lt;a href="https://github.com/TeamNewPipe/NewPipe/issues/1981"&gt;#1981&lt;/a&gt;, and may be fixed by setting up our own repository on F-Droid.&lt;/p&gt;
&lt;p&gt;In the meanwhile, if you want to switch sources for some reason (e.g. NewPipe's core functionality was broken and F-Droid doesn't have the update yet), we recommend following this procedure:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Back up your data via "Settings&amp;gt;Content&amp;gt;Export Database" so you keep your history, subscriptions, and playlists&lt;/li&gt;
&lt;li&gt;Uninstall NewPipe&lt;/li&gt;
&lt;li&gt;Download the APK from the new source and install it&lt;/li&gt;
&lt;li&gt;Import the data from step 1 via "Settings&amp;gt;Content&amp;gt;Import Database"&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-contribution" class="anchor" aria-hidden="true" href="#contribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution&lt;/h2&gt;
&lt;p&gt;Whether you have ideas, translations, design changes, code cleaning, or real heavy code changes, help is always welcome.
The more is done the better it gets!&lt;/p&gt;
&lt;p&gt;If you'd like to get involved, check our &lt;a href=".github/CONTRIBUTING.md"&gt;contribution notes&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-donate" class="anchor" aria-hidden="true" href="#donate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Donate&lt;/h2&gt;
&lt;p&gt;If you like NewPipe we'd be happy about a donation. You can either send bitcoin or donate via Bountysource or Liberapay. For further info on donating to NewPipe, please visit our &lt;a href="https://newpipe.schabi.org/donate" rel="nofollow"&gt;website&lt;/a&gt;.&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;
    &lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/91b09ab1369d0d9ff64d380cd26444643fd19b00/68747470733a2f2f626974636f696e2e6f72672f696d672f69636f6e732f6c6f676f746f702e737667"&gt;&lt;img src="https://camo.githubusercontent.com/91b09ab1369d0d9ff64d380cd26444643fd19b00/68747470733a2f2f626974636f696e2e6f72672f696d672f69636f6e732f6c6f676f746f702e737667" alt="Bitcoin" data-canonical-src="https://bitcoin.org/img/icons/logotop.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/bitcoin_qr_code.png"&gt;&lt;img src="assets/bitcoin_qr_code.png" alt="Bitcoin QR code" width="100px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;samp&gt;16A9J59ahMRqkLSZjhYj33n9j3fMztFxnh&lt;/samp&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;a href="https://liberapay.com/TeamNewPipe/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/60fb0e3690437a0a746d94e3c4011cc8b8adcc68/68747470733a2f2f75706c6f61642e77696b696d656469612e6f72672f77696b6970656469612f636f6d6d6f6e732f322f32372f4c69626572617061795f6c6f676f5f76325f77686974652d6f6e2d79656c6c6f772e737667" alt="Liberapay" width="80px" data-canonical-src="https://upload.wikimedia.org/wikipedia/commons/2/27/Liberapay_logo_v2_white-on-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://liberapay.com/TeamNewPipe/" rel="nofollow"&gt;&lt;img src="assets/liberapay_qr_code.png" alt="Visit NewPipe at liberapay.com" width="100px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://liberapay.com/TeamNewPipe/donate" rel="nofollow"&gt;&lt;img src="assets/liberapay_donate_button.svg" alt="Donate via Liberapay" height="35px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;a href="https://www.bountysource.com/teams/newpipe" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/24d15d104e6670200a445c29817929cc166f5a6e/68747470733a2f2f75706c6f61642e77696b696d656469612e6f72672f77696b6970656469612f636f6d6d6f6e732f7468756d622f322f32322f426f756e7479736f757263652e706e672f33323070782d426f756e7479736f757263652e706e67" alt="Bountysource" width="190px" data-canonical-src="https://upload.wikimedia.org/wikipedia/commons/thumb/2/22/Bountysource.png/320px-Bountysource.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://www.bountysource.com/teams/newpipe" rel="nofollow"&gt;&lt;img src="assets/bountysource_qr_code.png" alt="Visit NewPipe at bountysource.com" width="100px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://www.bountysource.com/teams/newpipe/issues" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7e67ad01dd3b836b4d1f90a0470c044352704dad/68747470733a2f2f696d672e736869656c64732e696f2f626f756e7479736f757263652f7465616d2f6e6577706970652f61637469766974792e7376673f636f6c6f72423d636432303166" height="30px" alt="Check out how many bounties you can earn." data-canonical-src="https://img.shields.io/bountysource/team/newpipe/activity.svg?colorB=cd201f" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-privacy-policy" class="anchor" aria-hidden="true" href="#privacy-policy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Privacy Policy&lt;/h2&gt;
&lt;p&gt;The NewPipe project aims to provide a private, anonymous experience for using media web services.
Therefore, the app does not collect any data without your consent. NewPipe's privacy policy explains in detail what data is sent and stored when you send a crash report, or comment in our blog. You can find the document &lt;a href="https://newpipe.schabi.org/legal/privacy/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.gnu.org/licenses/gpl-3.0.en.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0e71b2b50532b8f93538000b46c70a78007d0117/68747470733a2f2f7777772e676e752e6f72672f67726170686963732f67706c76332d3132377835312e706e67" alt="GNU GPLv3 Image" data-canonical-src="https://www.gnu.org/graphics/gplv3-127x51.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NewPipe is Free Software: You can use, study share and improve it at your
will. Specifically you can redistribute and/or modify it under the terms of the
&lt;a href="https://www.gnu.org/licenses/gpl.html" rel="nofollow"&gt;GNU General Public License&lt;/a&gt; as
published by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>TeamNewPipe</author><guid isPermaLink="false">https://github.com/TeamNewPipe/NewPipe</guid><pubDate>Tue, 28 Jan 2020 00:13:00 GMT</pubDate></item><item><title>jenkinsci/jenkins #14 in Java, This week</title><link>https://github.com/jenkinsci/jenkins</link><description>&lt;p&gt;&lt;i&gt;Jenkins automation server&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://jenkins.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fe0c9ecc354db49a376fa2a68f26bebdc75df14d/68747470733a2f2f6a656e6b696e732e696f2f73697465732f64656661756c742f66696c65732f6a656e6b696e735f6c6f676f2e706e67" alt="" data-canonical-src="https://jenkins.io/sites/default/files/jenkins_logo.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://jenkins.io/changelog/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ffe91d8120a371c5d61b46ed5916892eb14301f8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f64796e616d69632f6a736f6e2e7376673f75726c3d68747470733a2f2f757064617465732e6a656e6b696e732e696f2f7570646174652d63656e7465722e61637475616c2e6a736f6e266c6162656c3d5765656b6c7925323052656c656173652671756572793d242e636f72652e76657273696f6e26636f6c6f723d677265656e" alt="Weekly Release" data-canonical-src="https://img.shields.io/badge/dynamic/json.svg?url=https://updates.jenkins.io/update-center.actual.json&amp;amp;label=Weekly%20Release&amp;amp;query=$.core.version&amp;amp;color=green" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://jenkins.io/changelog-stable/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ffc379237273f7bcdb199e1382dcb1ce318d9981/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f64796e616d69632f6a736f6e2e7376673f75726c3d68747470733a2f2f757064617465732e6a656e6b696e732e696f2f737461626c652f7570646174652d63656e7465722e61637475616c2e6a736f6e266c6162656c3d4c545325323052656c656173652671756572793d242e636f72652e76657273696f6e26636f6c6f723d6f72616e6765" alt="LTS Release" data-canonical-src="https://img.shields.io/badge/dynamic/json.svg?url=https://updates.jenkins.io/stable/update-center.actual.json&amp;amp;label=LTS%20Release&amp;amp;query=$.core.version&amp;amp;color=orange" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://hub.docker.com/r/jenkins/jenkins/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/18b184b5f230d619f28723b72201a9dd23e68f93/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f6a656e6b696e732f6a656e6b696e732e737667" alt="Docker Pulls" data-canonical-src="https://img.shields.io/docker/pulls/jenkins/jenkins.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In a nutshell, Jenkins is the leading open-source automation server.
Built with Java, it provides over 1600 &lt;a href="https://plugins.jenkins.io/" rel="nofollow"&gt;plugins&lt;/a&gt; to support automating virtually anything,
so that humans can actually spend their time doing things machines cannot.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-what-to-use-jenkins-for-and-when-to-use-it" class="anchor" aria-hidden="true" href="#what-to-use-jenkins-for-and-when-to-use-it"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What to Use Jenkins for and When to Use It&lt;/h1&gt;
&lt;p&gt;Use Jenkins to automate your development workflow so you can focus on work that matters most. Jenkins is commonly used for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Building projects&lt;/li&gt;
&lt;li&gt;Running tests to detect bugs and other issues as soon as they are introduced&lt;/li&gt;
&lt;li&gt;Static code analysis&lt;/li&gt;
&lt;li&gt;Deployment&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Execute repetitive tasks, save time, and optimize your development process with Jenkins.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-downloads" class="anchor" aria-hidden="true" href="#downloads"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Downloads&lt;/h1&gt;
&lt;p&gt;Non-source downloads such as WAR files and several Linux packages can be found on our &lt;a href="http://mirrors.jenkins-ci.org" rel="nofollow"&gt;Mirrors&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-source" class="anchor" aria-hidden="true" href="#source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source&lt;/h1&gt;
&lt;p&gt;Our latest and greatest source of Jenkins can be found on &lt;a href="https://github.com/jenkinsci/jenkins"&gt;GitHub&lt;/a&gt;. Fork us!&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributing-to-jenkins" class="anchor" aria-hidden="true" href="#contributing-to-jenkins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing to Jenkins&lt;/h1&gt;
&lt;p&gt;Follow the &lt;a href="CONTRIBUTING.md"&gt;contributing&lt;/a&gt; file.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-news-and-website" class="anchor" aria-hidden="true" href="#news-and-website"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;News and Website&lt;/h1&gt;
&lt;p&gt;All information about Jenkins can be found on our &lt;a href="https://jenkins.io/" rel="nofollow"&gt;website&lt;/a&gt;. Follow us on Twitter &lt;a href="https://twitter.com/jenkinsci" rel="nofollow"&gt;@jenkinsci&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;Jenkins is &lt;strong&gt;licensed&lt;/strong&gt; under the &lt;strong&gt;&lt;a href="https://github.com/jenkinsci/jenkins/blob/master/LICENSE.txt"&gt;MIT License&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jenkinsci</author><guid isPermaLink="false">https://github.com/jenkinsci/jenkins</guid><pubDate>Tue, 28 Jan 2020 00:14:00 GMT</pubDate></item><item><title>widdix/aws-cf-templates #15 in Java, This week</title><link>https://github.com/widdix/aws-cf-templates</link><description>&lt;p&gt;&lt;i&gt;Free Templates for AWS CloudFormation&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/widdix/aws-cf-templates" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0b32662677b5c0d2313abd79749fdacf63c22953/68747470733a2f2f7472617669732d63692e6f72672f7769646469782f6177732d63662d74656d706c617465732e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/widdix/aws-cf-templates.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-free-templates-for-aws-cloudformation" class="anchor" aria-hidden="true" href="#free-templates-for-aws-cloudformation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Free Templates for AWS CloudFormation&lt;/h1&gt;
&lt;p&gt;Find the documentation for the &lt;strong&gt;latest stable release&lt;/strong&gt; here: &lt;a href="https://templates.cloudonaut.io/en/stable/" rel="nofollow"&gt;https://templates.cloudonaut.io/en/stable/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Find the documentation for the &lt;strong&gt;unstable master branch&lt;/strong&gt; here: &lt;a href="https://templates.cloudonaut.io/en/latest/" rel="nofollow"&gt;https://templates.cloudonaut.io/en/latest/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-related-projects" class="anchor" aria-hidden="true" href="#related-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related projects&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-widdix-cli" class="anchor" aria-hidden="true" href="#widdix-cli"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;widdix CLI&lt;/h3&gt;
&lt;p&gt;widdix, a CLI tool to manage Free Templates for AWS CloudFormation.&lt;/p&gt;
&lt;p&gt;Learn more: &lt;a href="https://github.com/widdix/aws-cf-templates-cli"&gt;https://github.com/widdix/aws-cf-templates-cli&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cfn-modules" class="anchor" aria-hidden="true" href="#cfn-modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;cfn-modules&lt;/h3&gt;
&lt;p&gt;Rapid CloudFormation: Modular, production ready, open source.&lt;/p&gt;
&lt;p&gt;Learn more: &lt;a href="https://github.com/cfn-modules/docs"&gt;https://github.com/cfn-modules/docs&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;All templates are published under Apache License Version 2.0.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-help-needed" class="anchor" aria-hidden="true" href="#help-needed"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help needed?&lt;/h2&gt;
&lt;p&gt;You will probably find an answer to your question on &lt;a href="https://stackoverflow.com/questions/tagged/amazon-cloudformation" rel="nofollow"&gt;Stack Overflow&lt;/a&gt;. If not, use the tag &lt;code&gt;amazon-cloudformation&lt;/code&gt; to post your question, and the chances are high that we or someone from the community will point you in the right direction. We are not able to answer your questions via email or the project's issue tracker.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sponsor-a-feature-or-bug-fix" class="anchor" aria-hidden="true" href="#sponsor-a-feature-or-bug-fix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsor a feature or bug fix&lt;/h2&gt;
&lt;p&gt;Are you in need of a feature or does a bug cause you sleepless nights? Please let us know by using the project's &lt;a href="https://github.com/widdix/aws-cf-templates/issues"&gt;issue tracker&lt;/a&gt;. We work on bug fixes and new features as time permits. Are you in need of an urgent bug fix or important feature request? &lt;a href="mailto:hello@widdix.net"&gt;Contact us&lt;/a&gt; to sponsor a feature or bug fix.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-training-and-consulting" class="anchor" aria-hidden="true" href="#training-and-consulting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Training and Consulting&lt;/h2&gt;
&lt;p&gt;Do you want to accelerate your start with AWS CloudFormation and our templates? We do offer remote and on-site training for you and your team. Are you looking for guidance on how to use or adapt our templates to your use case? We offer consulting services as well. &lt;a href="mailto:hello@widdix.net"&gt;Contact us&lt;/a&gt;, and we’ll accelerate your project.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h2&gt;
&lt;p&gt;A &lt;a href="https://cloudonaut.io/templates-for-aws-cloudformation/" rel="nofollow"&gt;cloudonaut.io&lt;/a&gt; project. Engineered by &lt;a href="https://widdix.net" rel="nofollow"&gt;widdix&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>widdix</author><guid isPermaLink="false">https://github.com/widdix/aws-cf-templates</guid><pubDate>Tue, 28 Jan 2020 00:15:00 GMT</pubDate></item><item><title>testcontainers/testcontainers-java #16 in Java, This week</title><link>https://github.com/testcontainers/testcontainers-java</link><description>&lt;p&gt;&lt;i&gt;Testcontainers is a Java library that supports JUnit tests, providing lightweight, throwaway instances of common databases, Selenium web browsers, or anything else that can run in a Docker container.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-testcontainers" class="anchor" aria-hidden="true" href="#testcontainers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testcontainers&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Testcontainers is a Java 8 library that supports JUnit tests, providing lightweight, throwaway instances of common databases, Selenium web browsers, or anything else that can run in a Docker container.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/testcontainers/testcontainers-java" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a16d12091b1271b17d1d37eba3e48756897a5568/68747470733a2f2f7472617669732d63692e6f72672f74657374636f6e7461696e6572732f74657374636f6e7461696e6572732d6a6176612e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/testcontainers/testcontainers-java.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://bintray.com/testcontainers/releases/testcontainers/_latestVersion" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/66f8db5a9e45c07374ee80dcd6cdb76e59bc3d63/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f74657374636f6e7461696e6572732f72656c65617365732f74657374636f6e7461696e6572732f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/testcontainers/releases/testcontainers/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/logo.png"&gt;&lt;img src="docs/logo.png" alt="Testcontainers logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-read-the-documentation-here" class="anchor" aria-hidden="true" href="#read-the-documentation-here"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="http://www.testcontainers.org" rel="nofollow"&gt;Read the documentation here&lt;/a&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;See &lt;a href="LICENSE"&gt;LICENSE&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-copyright" class="anchor" aria-hidden="true" href="#copyright"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright&lt;/h2&gt;
&lt;p&gt;Copyright (c) 2015 - 2019 Richard North and other authors.&lt;/p&gt;
&lt;p&gt;MS SQL Server module is (c) 2017 - 2019 G DATA Software AG and other authors.&lt;/p&gt;
&lt;p&gt;Hashicorp Vault module is (c) 2017 - 2019 Capital One Services, LLC and other authors.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://github.com/testcontainers/testcontainers-java/graphs/contributors"&gt;contributors&lt;/a&gt; for all contributors.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>testcontainers</author><guid isPermaLink="false">https://github.com/testcontainers/testcontainers-java</guid><pubDate>Tue, 28 Jan 2020 00:16:00 GMT</pubDate></item><item><title>OpenAPITools/openapi-generator #17 in Java, This week</title><link>https://github.com/OpenAPITools/openapi-generator</link><description>&lt;p&gt;&lt;i&gt;OpenAPI Generator allows generation of API client libraries (SDK generation), server stubs, documentation and configuration automatically given an OpenAPI Spec (v2, v3)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1 align="center"&gt;&lt;a id="user-content-openapi-generator" class="anchor" aria-hidden="true" href="#openapi-generator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenAPI Generator&lt;/h1&gt;
&lt;div align="center"&gt;
&lt;p&gt;&lt;a href="https://github.com/OpenAPITools/openapi-generator/tree/master"&gt;Master&lt;/a&gt; (&lt;code&gt;4.2.3-SNAPSHOT&lt;/code&gt;): &lt;a href="https://travis-ci.org/OpenAPITools/openapi-generator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bd23c2789ffee568debdbed0cb1fa09cf4e75986/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f4f70656e415049546f6f6c732f6f70656e6170692d67656e657261746f722f6d61737465722e7376673f6c6162656c3d496e746567726174696f6e25323054657374" alt="Build Status" data-canonical-src="https://img.shields.io/travis/OpenAPITools/openapi-generator/master.svg?label=Integration%20Test" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/OpenAPITools/openapi-generator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bd93f5f0b455ecdefce991685f62d3b5efec25d0/68747470733a2f2f636972636c6563692e636f6d2f67682f4f70656e415049546f6f6c732f6f70656e6170692d67656e657261746f722e7376673f7374796c653d736869656c64" alt="Integration Test2" data-canonical-src="https://circleci.com/gh/OpenAPITools/openapi-generator.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://app.shippable.com/github/OpenAPITools/openapi-generator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e30e124bd50d70595e7a830131f794216ffacf15/68747470733a2f2f6170692e736869707061626c652e636f6d2f70726f6a656374732f3561663662663734653739306634303730303834613131352f62616467653f6272616e63683d6d6173746572" alt="Run Status" data-canonical-src="https://api.shippable.com/projects/5af6bf74e790f4070084a115/badge?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/WilliamCheng/openapi-generator-wh2wu" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a01041cac45b71d2a5afabe174f41e8b7a3d934e/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f6f70656e617069746f6f6c732f6f70656e6170692d67656e657261746f723f6272616e63683d6d6173746572267376673d747275652670617373696e67546578743d57696e646f7773253230546573742532302d2532304f4b266661696c696e67546578743d57696e646f7773253230546573742532302d2532304661696c73" alt="Windows Test" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/openapitools/openapi-generator?branch=master&amp;amp;svg=true&amp;amp;passingText=Windows%20Test%20-%20OK&amp;amp;failingText=Windows%20Test%20-%20Fails" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cloud.drone.io/OpenAPITools/openapi-generator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9992be008ebb0a1fd9927b3dbf1f35df0367eb18/68747470733a2f2f636c6f75642e64726f6e652e696f2f6170692f6261646765732f4f70656e415049546f6f6c732f6f70656e6170692d67656e657261746f722f7374617475732e7376673f7265663d726566732f68656164732f6d6173746572" alt="JDK11 Build" data-canonical-src="https://cloud.drone.io/api/badges/OpenAPITools/openapi-generator/status.svg?ref=refs/heads/master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://app.bitrise.io/app/4a2b10a819d12b67" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/26bc15dd3186973e7a9ce5ef367d2b3ce3a77038/68747470733a2f2f6170702e626974726973652e696f2f6170702f346132623130613831396431326236372f7374617475732e7376673f746f6b656e3d383539464d4452385148776162437a77765a4b367651266272616e63683d6d6173746572" alt="iOS Build Status" data-canonical-src="https://app.bitrise.io/app/4a2b10a819d12b67/status.svg?token=859FMDR8QHwabCzwvZK6vQ&amp;amp;branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/OpenAPITools/openapi-generator/tree/4.3.x"&gt;&lt;code&gt;4.3.x&lt;/code&gt;&lt;/a&gt; branch: &lt;a href="https://travis-ci.org/OpenAPITools/openapi-generator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b2f587dc55ca22d6c44b1b6b8f1f6ece76ebaab1/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f4f70656e415049546f6f6c732f6f70656e6170692d67656e657261746f722f342e332e782e7376673f6c6162656c3d496e746567726174696f6e25323054657374" alt="Build Status" data-canonical-src="https://img.shields.io/travis/OpenAPITools/openapi-generator/4.3.x.svg?label=Integration%20Test" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/OpenAPITools/openapi-generator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3727c8982ed4265dce08d11896b60a777f1bab9e/68747470733a2f2f636972636c6563692e636f6d2f67682f4f70656e415049546f6f6c732f6f70656e6170692d67656e657261746f722f747265652f342e332e782e7376673f7374796c653d736869656c64" alt="Integration Test2" data-canonical-src="https://circleci.com/gh/OpenAPITools/openapi-generator/tree/4.3.x.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://app.shippable.com/github/OpenAPITools/openapi-generator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/257d3a259ffe48029b24e4c46c35a868b7f133dc/68747470733a2f2f6170692e736869707061626c652e636f6d2f70726f6a656374732f3561663662663734653739306634303730303834613131352f62616467653f6272616e63683d342e332e78" alt="Run Status" data-canonical-src="https://api.shippable.com/projects/5af6bf74e790f4070084a115/badge?branch=4.3.x" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/WilliamCheng/openapi-generator-wh2wu" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7d076ec9512e928be674431e672ce9b2d5dd1b02/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f6f70656e617069746f6f6c732f6f70656e6170692d67656e657261746f723f6272616e63683d342e332e78267376673d747275652670617373696e67546578743d57696e646f7773253230546573742532302d2532304f4b266661696c696e67546578743d57696e646f7773253230546573742532302d2532304661696c73" alt="Windows Test" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/openapitools/openapi-generator?branch=4.3.x&amp;amp;svg=true&amp;amp;passingText=Windows%20Test%20-%20OK&amp;amp;failingText=Windows%20Test%20-%20Fails" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cloud.drone.io/OpenAPITools/openapi-generator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/beec90167c639f011102485c7cbf949d4adb737f/68747470733a2f2f636c6f75642e64726f6e652e696f2f6170692f6261646765732f4f70656e415049546f6f6c732f6f70656e6170692d67656e657261746f722f7374617475732e7376673f7265663d726566732f68656164732f342e332e78" alt="JDK11 Build" data-canonical-src="https://cloud.drone.io/api/badges/OpenAPITools/openapi-generator/status.svg?ref=refs/heads/4.3.x" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://app.bitrise.io/app/4a2b10a819d12b67" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/550ae51fd05f76d1159126d073c63b7d0ee041aa/68747470733a2f2f6170702e626974726973652e696f2f6170702f346132623130613831396431326236372f7374617475732e7376673f746f6b656e3d383539464d4452385148776162437a77765a4b367651266272616e63683d342e332e78" alt="iOS Build Status" data-canonical-src="https://app.bitrise.io/app/4a2b10a819d12b67/status.svg?token=859FMDR8QHwabCzwvZK6vQ&amp;amp;branch=4.3.x" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/OpenAPITools/openapi-generator/tree/5.0.x"&gt;&lt;code&gt;5.0.x&lt;/code&gt;&lt;/a&gt; branch: &lt;a href="https://travis-ci.org/OpenAPITools/openapi-generator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9850f73c15300e1f0f20322162d0efa1ff092acf/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f4f70656e415049546f6f6c732f6f70656e6170692d67656e657261746f722f352e302e782e7376673f6c6162656c3d496e746567726174696f6e25323054657374" alt="Build Status" data-canonical-src="https://img.shields.io/travis/OpenAPITools/openapi-generator/5.0.x.svg?label=Integration%20Test" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/OpenAPITools/openapi-generator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c137fa2ae7d721a15b68345cf9acce4879c04116/68747470733a2f2f636972636c6563692e636f6d2f67682f4f70656e415049546f6f6c732f6f70656e6170692d67656e657261746f722f747265652f352e302e782e7376673f7374796c653d736869656c64" alt="Integration Test2" data-canonical-src="https://circleci.com/gh/OpenAPITools/openapi-generator/tree/5.0.x.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://app.shippable.com/github/OpenAPITools/openapi-generator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a1caff5a4583b1179fd36e0ffe7cdf1c72340999/68747470733a2f2f6170692e736869707061626c652e636f6d2f70726f6a656374732f3561663662663734653739306634303730303834613131352f62616467653f6272616e63683d352e302e78" alt="Run Status" data-canonical-src="https://api.shippable.com/projects/5af6bf74e790f4070084a115/badge?branch=5.0.x" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/WilliamCheng/openapi-generator-wh2wu" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/71f86909d810b012c43bdda74c151ecef676e209/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f6f70656e617069746f6f6c732f6f70656e6170692d67656e657261746f723f6272616e63683d352e302e78267376673d747275652670617373696e67546578743d57696e646f7773253230546573742532302d2532304f4b266661696c696e67546578743d57696e646f7773253230546573742532302d2532304661696c73" alt="Windows Test" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/openapitools/openapi-generator?branch=5.0.x&amp;amp;svg=true&amp;amp;passingText=Windows%20Test%20-%20OK&amp;amp;failingText=Windows%20Test%20-%20Fails" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cloud.drone.io/OpenAPITools/openapi-generator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/29fdc5f16446cc3a517dabb07614880ac66b032e/68747470733a2f2f636c6f75642e64726f6e652e696f2f6170692f6261646765732f4f70656e415049546f6f6c732f6f70656e6170692d67656e657261746f722f7374617475732e7376673f7265663d726566732f68656164732f352e302e78" alt="JDK11 Build" data-canonical-src="https://cloud.drone.io/api/badges/OpenAPITools/openapi-generator/status.svg?ref=refs/heads/5.0.x" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://app.bitrise.io/app/4a2b10a819d12b67" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/329ef41c15fac0c72814e43be3d966896269b739/68747470733a2f2f6170702e626974726973652e696f2f6170702f346132623130613831396431326236372f7374617475732e7376673f746f6b656e3d383539464d4452385148776162437a77765a4b367651266272616e63683d352e302e78" alt="iOS Build Status" data-canonical-src="https://app.bitrise.io/app/4a2b10a819d12b67/status.svg?token=859FMDR8QHwabCzwvZK6vQ&amp;amp;branch=5.0.x" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div align="center"&gt;
&lt;p&gt;&lt;a href="https://join.slack.com/t/openapi-generator/shared_invite/enQtNzAyNDMyOTU0OTE1LTY5ZDBiNDI5NzI5ZjQ1Y2E5OWVjMjZkYzY1ZGM2MWQ4YWFjMzcyNDY5MGI4NjQxNDBiMTlmZTc5NjY2ZTQ5MGM" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/99c4017d47baf367ead2bcc58f48d87f81255f68/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f536c61636b2d4a6f696e25323074686525323063686174253230726f6f6d2d6f72616e6765" alt="Jion the Slack chat room" data-canonical-src="https://img.shields.io/badge/Slack-Join%20the%20chat%20room-orange" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.openapitools%22%20AND%20a%3A%22openapi-generator%22" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c37d8128603b8da5febf9d2c322684a332bc6a3b/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d6d657461646174612f762f68747470732f7265706f312e6d6176656e2e6f72672f6d6176656e322f6f72672f6f70656e617069746f6f6c732f6f70656e6170692d67656e657261746f722f6d6176656e2d6d657461646174612e786d6c2e737667" alt="Stable releaases in the Maven store" data-canonical-src="https://img.shields.io/maven-metadata/v/https/repo1.maven.org/maven2/org/openapitools/openapi-generator/maven-metadata.xml.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/oas_generator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/222bcf0d47388e9f84939a88a3b767da4c772ea8/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f6f61735f67656e657261746f722e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f77" alt="Follow OpenAPI Generator Twitter account to get the latest update" data-canonical-src="https://img.shields.io/twitter/follow/oas_generator.svg?style=social&amp;amp;label=Follow" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div align="center"&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt; If you would like to contribute, please refer to &lt;a href="CONTRIBUTING.md"&gt;guidelines&lt;/a&gt; and a list of &lt;a href="https://github.com/openapitools/openapi-generator/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22"&gt;open tasks&lt;/a&gt;.&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bangbang" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/203c.png"&gt;‼️&lt;/g-emoji&gt; To migrate from Swagger Codegen to OpenAPI Generator, please refer to the &lt;a href="docs/migration-from-swagger-codegen.md"&gt;migration guide&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="bangbang" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/203c.png"&gt;‼️&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="notebook_with_decorative_cover" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d4.png"&gt;📔&lt;/g-emoji&gt; For more information, please refer to the &lt;a href="https://github.com/openapitools/openapi-generator/wiki"&gt;Wiki page&lt;/a&gt; and &lt;a href="https://github.com/openapitools/openapi-generator/wiki/FAQ"&gt;FAQ&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="notebook_with_decorative_cover" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d4.png"&gt;📔&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="notebook_with_decorative_cover" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d4.png"&gt;📔&lt;/g-emoji&gt; The eBook &lt;a href="https://gum.co/openapi_generator_ebook" rel="nofollow"&gt;A Beginner's Guide to Code Generation for REST APIs&lt;/a&gt; is a good starting point for beginners &lt;g-emoji class="g-emoji" alias="notebook_with_decorative_cover" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d4.png"&gt;📔&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; If the OpenAPI spec, templates or any input (e.g. options, environment variables) is obtained from an untrusted source or environment, please make sure you've reviewed these inputs before using OpenAPI Generator to generate the API client, server stub or documentation to avoid potential security issues (e.g. &lt;a href="https://en.wikipedia.org/wiki/Code_injection" rel="nofollow"&gt;code injection&lt;/a&gt;) &lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bangbang" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/203c.png"&gt;‼️&lt;/g-emoji&gt; Both "OpenAPI Tools" (&lt;a href="https://OpenAPITools.org" rel="nofollow"&gt;https://OpenAPITools.org&lt;/a&gt; - the parent organization of OpenAPI Generator) and "OpenAPI Generator" are not affiliated with OpenAPI Initiative (OAI) &lt;g-emoji class="g-emoji" alias="bangbang" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/203c.png"&gt;‼️&lt;/g-emoji&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-sponsors" class="anchor" aria-hidden="true" href="#sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsors&lt;/h2&gt;
&lt;p&gt;If you find OpenAPI Generator useful for work, please consider asking your company to support this Open Source project by &lt;a href="https://opencollective.com/openapi_generator" rel="nofollow"&gt;becoming a sponsor&lt;/a&gt;. You can also individually sponsor the project by &lt;a href="https://opencollective.com/openapi_generator" rel="nofollow"&gt;becoming a backer&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-thank-you-to-our-bronze-sponsors" class="anchor" aria-hidden="true" href="#thank-you-to-our-bronze-sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thank you to our bronze sponsors!&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://www.namsor.com/?utm_source=openapi_generator&amp;amp;utm_medium=github_webpage&amp;amp;utm_campaign=sponsor" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/420f0e8af4df9be719bf4e2b41622a3ce8a3961b/68747470733a2f2f6f70656e6170692d67656e657261746f722e746563682f696d672f636f6d70616e6965732f6e616d736f722e706e67" alt="NamSor" data-canonical-src="https://openapi-generator.tech/img/companies/namsor.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.lightbow.net/?utm_source=openapi_generator&amp;amp;utm_medium=github_webpage&amp;amp;utm_campaign=sponsor" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8626b71735941ad44e084775be828faa34d96bff/68747470733a2f2f6f70656e6170692d67656e657261746f722e746563682f696d672f636f6d70616e6965732f6c69676874626f772e706e67" alt="LightBow" data-canonical-src="https://openapi-generator.tech/img/companies/lightbow.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://docspring.com/?utm_source=openapi_generator&amp;amp;utm_medium=github_webpage&amp;amp;utm_campaign=sponsor" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/db3be36ccec619dd67bd4e05e42ae288f1cc1125/68747470733a2f2f6f70656e6170692d67656e657261746f722e746563682f696d672f636f6d70616e6965732f646f63737072696e672e706e67" width="128" height="128" data-canonical-src="https://openapi-generator.tech/img/companies/docspring.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-thank-you-godaddy-for-sponsoring-the-domain-names-and-linode-for-sponsoring-the-vps" class="anchor" aria-hidden="true" href="#thank-you-godaddy-for-sponsoring-the-domain-names-and-linode-for-sponsoring-the-vps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thank you GoDaddy for sponsoring the domain names and Linode for sponsoring the VPS&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://www.godaddy.com/?utm_source=openapi_generator&amp;amp;utm_medium=github_webpage&amp;amp;utm_campaign=sponsor" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/142d41158c036fb6aee80de3c910c526ca7ea8c7/68747470733a2f2f6f70656e6170692d67656e657261746f722e746563682f696d672f636f6d70616e6965732f676f64616464792e706e67" width="150" data-canonical-src="https://openapi-generator.tech/img/companies/godaddy.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.linode.com/?utm_source=openapi_generator&amp;amp;utm_medium=github_webpage&amp;amp;utm_campaign=sponsor" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3de572a1fbdd4f31adf90062c5a7245cda504bca/68747470733a2f2f7777772e6c696e6f64652e636f6d2f6d656469612f696d616765732f6c6f676f732f7374616e646172642f6c696768742f6c696e6f64652d6c6f676f5f7374616e646172645f6c696768745f736d616c6c2e706e67" alt="Linode" data-canonical-src="https://www.linode.com/media/images/logos/standard/light/linode-logo_standard_light_small.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;OpenAPI Generator allows generation of API client libraries (SDK generation), server stubs,  documentation and configuration automatically given an &lt;a href="https://github.com/OAI/OpenAPI-Specification"&gt;OpenAPI Spec&lt;/a&gt; (both 2.0 and 3.0 are supported). Currently, the following languages/frameworks are supported:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Languages/Frameworks&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;API clients&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;ActionScript&lt;/strong&gt;, &lt;strong&gt;Ada&lt;/strong&gt;, &lt;strong&gt;Apex&lt;/strong&gt;, &lt;strong&gt;Bash&lt;/strong&gt;, &lt;strong&gt;C&lt;/strong&gt;, &lt;strong&gt;C#&lt;/strong&gt; (.net 2.0, 3.5 or later, .NET Standard 1.3 - 2.0, .NET Core 2.0), &lt;strong&gt;C++&lt;/strong&gt; (cpp-restsdk, Qt5, Tizen), &lt;strong&gt;Clojure&lt;/strong&gt;, &lt;strong&gt;Dart (1.x, 2.x)&lt;/strong&gt;, &lt;strong&gt;Elixir&lt;/strong&gt;, &lt;strong&gt;Elm&lt;/strong&gt;, &lt;strong&gt;Eiffel&lt;/strong&gt;, &lt;strong&gt;Erlang&lt;/strong&gt;, &lt;strong&gt;Go&lt;/strong&gt;, &lt;strong&gt;Groovy&lt;/strong&gt;, &lt;strong&gt;Haskell&lt;/strong&gt; (http-client, Servant), &lt;strong&gt;Java&lt;/strong&gt; (Jersey1.x, Jersey2.x, OkHttp, Retrofit1.x, Retrofit2.x, Feign, RestTemplate, RESTEasy, Vertx, Google API Client Library for Java, Rest-assured, Spring 5 Web Client, MicroProfile Rest Client), &lt;strong&gt;Kotlin&lt;/strong&gt;, &lt;strong&gt;Lua&lt;/strong&gt;, &lt;strong&gt;Nim&lt;/strong&gt;, &lt;strong&gt;Node.js/JavaScript&lt;/strong&gt; (ES5, ES6, AngularJS with Google Closure Compiler annotations, Flow types), &lt;strong&gt;Objective-C&lt;/strong&gt;, &lt;strong&gt;OCaml&lt;/strong&gt;, &lt;strong&gt;Perl&lt;/strong&gt;, &lt;strong&gt;PHP&lt;/strong&gt;, &lt;strong&gt;PowerShell&lt;/strong&gt;, &lt;strong&gt;Python&lt;/strong&gt;, &lt;strong&gt;R&lt;/strong&gt;, &lt;strong&gt;Ruby&lt;/strong&gt;, &lt;strong&gt;Rust&lt;/strong&gt; (rust, rust-server), &lt;strong&gt;Scala&lt;/strong&gt; (akka, http4s, scalaz, swagger-async-httpclient), &lt;strong&gt;Swift&lt;/strong&gt; (2.x, 3.x, 4.x, 5.x), &lt;strong&gt;Typescript&lt;/strong&gt; (AngularJS, Angular (2.x - 8.x), Aurelia, Axios, Fetch, Inversify, jQuery, Node, Rxjs)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Server stubs&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Ada&lt;/strong&gt;, &lt;strong&gt;C#&lt;/strong&gt; (ASP.NET Core, NancyFx), &lt;strong&gt;C++&lt;/strong&gt; (Pistache, Restbed, Qt5 QHTTPEngine), &lt;strong&gt;Erlang&lt;/strong&gt;, &lt;strong&gt;F#&lt;/strong&gt; (Giraffe), &lt;strong&gt;Go&lt;/strong&gt; (net/http, Gin), &lt;strong&gt;Haskell&lt;/strong&gt; (Servant), &lt;strong&gt;Java&lt;/strong&gt; (MSF4J, Spring, Undertow, JAX-RS: CDI, CXF, Inflector, Jersey, RestEasy, Play Framework, &lt;a href="https://github.com/ProKarma-Inc/pkmst-getting-started-examples"&gt;PKMST&lt;/a&gt;, &lt;a href="https://vertx.io/" rel="nofollow"&gt;Vert.x&lt;/a&gt;), &lt;strong&gt;Kotlin&lt;/strong&gt; (Spring Boot, Ktor, Vertx), &lt;strong&gt;PHP&lt;/strong&gt; (Laravel, Lumen, Slim, Silex, &lt;a href="https://symfony.com/" rel="nofollow"&gt;Symfony&lt;/a&gt;, &lt;a href="https://github.com/zendframework/zend-expressive"&gt;Zend Expressive&lt;/a&gt;), &lt;strong&gt;Python&lt;/strong&gt; (Flask), &lt;strong&gt;NodeJS&lt;/strong&gt;, &lt;strong&gt;Ruby&lt;/strong&gt; (Sinatra, Rails5), &lt;strong&gt;Rust&lt;/strong&gt; (rust-server), &lt;strong&gt;Scala&lt;/strong&gt; (&lt;a href="https://github.com/finagle/finch"&gt;Finch&lt;/a&gt;, &lt;a href="https://github.com/lagom/lagom"&gt;Lagom&lt;/a&gt;, &lt;a href="https://www.playframework.com/" rel="nofollow"&gt;Play&lt;/a&gt;, Scalatra)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;API documentation generators&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;HTML&lt;/strong&gt;, &lt;strong&gt;Confluence Wiki&lt;/strong&gt;, &lt;strong&gt;Asciidoc&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Configuration files&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://httpd.apache.org/" rel="nofollow"&gt;&lt;strong&gt;Apache2&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Others&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;GraphQL&lt;/strong&gt;, &lt;strong&gt;JMeter&lt;/strong&gt;, &lt;strong&gt;MySQL Schema&lt;/strong&gt;, &lt;strong&gt;Protocol Buffer&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#openapi-generator"&gt;OpenAPI Generator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#1---installation"&gt;1 - Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#11---compatibility"&gt;1.1 - Compatibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#12---artifacts-on-maven-central"&gt;1.2 - Artifacts on Maven Central&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#13---download-jar"&gt;1.3 - Download JAR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#14---build-projects"&gt;1.4 - Build Projects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#15---homebrew"&gt;1.5 - Homebrew&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#16---docker"&gt;1.6 - Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#17---npm"&gt;1.7 - NPM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#2---getting-started"&gt;2 - Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3---usage"&gt;3 - Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#31---customization"&gt;3.1 - Customization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#32---workflow-integration-maven-gradle-github-cicd"&gt;3.2 - Workflow Integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#33---online-openapi-generator"&gt;3.3 - Online Generators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#34---license-information-on-generated-code"&gt;3.4 - License Information on Generated Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#35---ide-integration"&gt;3.5 - IDE Integration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#4---companiesprojects-using-openapi-generator"&gt;4 - Companies/Projects using OpenAPI Generator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#5---presentationsvideostutorialsbooks"&gt;5 - Presentations/Videos/Tutorials/Books&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#6---about-us"&gt;6 - About Us&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#61---openapi-generator-core-team"&gt;6.1 - OpenAPI Generator Core Team&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#62---openapi-generator-technical-committee"&gt;6.2 - OpenAPI Generator Technical Committee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#63---history-of-openapi-generator"&gt;6.3 - History of OpenAPI Generator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#7---license"&gt;7 - License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-1---installation" class="anchor" aria-hidden="true" href="#1---installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;1 - Installation&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-11---compatibility" class="anchor" aria-hidden="true" href="#11---compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;1.1 - Compatibility&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The OpenAPI Specification has undergone 3 revisions since initial creation in 2010.  The openapi-generator project has the following compatibilities with the OpenAPI Specification:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;OpenAPI Generator Version&lt;/th&gt;
&lt;th&gt;Release Date&lt;/th&gt;
&lt;th&gt;Notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;5.0.0 (upcoming major release) &lt;a href="https://oss.sonatype.org/content/repositories/snapshots/org/openapitools/openapi-generator-cli/5.0.0-SNAPSHOT/" rel="nofollow"&gt;SNAPSHOT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;13.05.2020&lt;/td&gt;
&lt;td&gt;Major release with breaking changes (no fallback)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.3.0 (upcoming minor release) &lt;a href="https://oss.sonatype.org/content/repositories/snapshots/org/openapitools/openapi-generator-cli/4.3.0-SNAPSHOT/" rel="nofollow"&gt;SNAPSHOT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;29.02.2020&lt;/td&gt;
&lt;td&gt;Minor release (breaking changes with fallbacks)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.2.3-SNAPSHOT (upcoming patch release) &lt;a href="https://oss.sonatype.org/content/repositories/snapshots/org/openapitools/openapi-generator-cli/4.2.3-SNAPSHOT/" rel="nofollow"&gt;SNAPSHOT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;31.01.2020&lt;/td&gt;
&lt;td&gt;Patch release&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/OpenAPITools/openapi-generator/releases/tag/v4.2.2"&gt;4.2.2&lt;/a&gt; (latest stable release)&lt;/td&gt;
&lt;td&gt;02.12.2019&lt;/td&gt;
&lt;td&gt;Patch release&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;OpenAPI Spec compatibility: 1.0, 1.1, 1.2, 2.0, 3.0&lt;/p&gt;
&lt;p&gt;For old releases, please refer to the &lt;a href="https://github.com/OpenAPITools/openapi-generator/releases"&gt;&lt;strong&gt;Release&lt;/strong&gt;&lt;/a&gt; page.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-12---artifacts-on-maven-central" class="anchor" aria-hidden="true" href="#12---artifacts-on-maven-central"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;1.2 - Artifacts on Maven Central&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can find our released artifacts on maven central:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Core:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.openapitools&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;openapi-generator&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${openapi-generator-version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the different versions of the &lt;a href="https://mvnrepository.com/artifact/org.openapitools/openapi-generator" rel="nofollow"&gt;openapi-generator&lt;/a&gt; artifact available on maven central.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cli:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.openapitools&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;openapi-generator-cli&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${openapi-generator-version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the different versions of the &lt;a href="https://mvnrepository.com/artifact/org.openapitools/openapi-generator-cli" rel="nofollow"&gt;openapi-generator-cli&lt;/a&gt; artifact available on maven central.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Maven plugin:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.openapitools&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;openapi-generator-maven-plugin&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${openapi-generator-version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;See the different versions of the &lt;a href="https://mvnrepository.com/artifact/org.openapitools/openapi-generator-maven-plugin" rel="nofollow"&gt;openapi-generator-maven-plugin&lt;/a&gt; artifact available on maven central.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator-maven-plugin/README.md"&gt;Readme&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Gradle plugin:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.openapitools&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;openapi-generator-gradle-plugin&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${openapi-generator-version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;See the different versions of the &lt;a href="https://mvnrepository.com/artifact/org.openapitools/openapi-generator-gradle-plugin" rel="nofollow"&gt;openapi-generator-gradle-plugin&lt;/a&gt; artifact available on maven central.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator-gradle-plugin/README.adoc"&gt;Readme&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-13---download-jar" class="anchor" aria-hidden="true" href="#13---download-jar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;1.3 - Download JAR&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;If you're looking for the latest stable version, you can grab it directly from Maven.org (Java 8 runtime at a minimum):&lt;/p&gt;
&lt;p&gt;JAR location: &lt;code&gt;https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/4.2.2/openapi-generator-cli-4.2.2.jar&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For &lt;strong&gt;Mac/Linux&lt;/strong&gt; users:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;wget https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/4.2.2/openapi-generator-cli-4.2.2.jar -O openapi-generator-cli.jar&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For &lt;strong&gt;Windows&lt;/strong&gt; users, you will need to install &lt;a href="http://gnuwin32.sourceforge.net/packages/wget.htm" rel="nofollow"&gt;wget&lt;/a&gt; or you can use Invoke-WebRequest in PowerShell (3.0+), e.g.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Invoke-WebRequest -OutFile openapi-generator-cli.jar https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/4.2.2/openapi-generator-cli-4.2.2.jar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After downloading the JAR, run &lt;code&gt;java -jar openapi-generator-cli.jar help&lt;/code&gt; to show the usage.&lt;/p&gt;
&lt;p&gt;For Mac users, please make sure Java 8 is installed (Tips: run &lt;code&gt;java -version&lt;/code&gt; to check the version), and export &lt;code&gt;JAVA_HOME&lt;/code&gt; in order to use the supported Java version:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;export&lt;/span&gt; JAVA_HOME=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;/usr/libexec/java_home -v 1.8&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;export&lt;/span&gt; PATH=&lt;span class="pl-smi"&gt;${JAVA_HOME}&lt;/span&gt;/bin:&lt;span class="pl-smi"&gt;$PATH&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a id="user-content-launcher-script" class="anchor" aria-hidden="true" href="#launcher-script"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Launcher Script&lt;/h3&gt;
&lt;p&gt;One downside to manual jar downloads is that you don't keep up-to-date with the latest released version. We have a Bash launcher script at &lt;a href="./bin/utils/openapi-generator-cli.sh"&gt;bin/utils/openapi-generator.cli.sh&lt;/a&gt; which resolves this issue.&lt;/p&gt;
&lt;p&gt;To install the launcher script, copy the contents of the script to a location on your path and make the script executable.&lt;/p&gt;
&lt;p&gt;An example of setting this up (NOTE: Always evaluate scripts curled from external systems before executing them).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir -p ~/bin/openapitools
curl https://raw.githubusercontent.com/OpenAPITools/openapi-generator/master/bin/utils/openapi-generator-cli.sh &amp;gt; ~/bin/openapitools/openapi-generator-cli
chmod u+x ~/bin/openapitools/openapi-generator-cli
export PATH=$PATH:~/bin/openapitools/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, &lt;code&gt;openapi-generator-cli&lt;/code&gt; is "installed". On invocation, it will query the GitHub repository for the most recently released version. If this matches the last downloaded jar,
it will execute as normal. If a newer version is found, the script will download the latest release and execute it.&lt;/p&gt;
&lt;p&gt;If you need to invoke an older version of the generator, you can define the variable &lt;code&gt;OPENAPI_GENERATOR_VERSION&lt;/code&gt; either ad hoc or globally. You can export this variable if you'd like to persist a specific release version.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Execute latest released openapi-generator-cli
openapi-generator-cli version

# Execute version 3.1.0 for the current invocation, regardless of the latest released version
OPENAPI_GENERATOR_VERSION=3.1.0 openapi-generator-cli version

# Execute version 3.1.0-SNAPSHOT for the current invocation
OPENAPI_GENERATOR_VERSION=3.1.0-SNAPSHOT openapi-generator-cli version

# Execute version 3.0.2 for every invocation in the current shell session
export OPENAPI_GENERATOR_VERSION=3.0.2
openapi-generator-cli version # is 3.0.2
openapi-generator-cli version # is also 3.0.2

# To "install" a specific version, set the variable in .bashrc/.bash_profile
echo "export OPENAPI_GENERATOR_VERSION=3.0.2" &amp;gt;&amp;gt; ~/.bashrc
source ~/.bashrc
openapi-generator-cli version # is always 3.0.2, unless any of the above overrides are done ad hoc
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-14---build-projects" class="anchor" aria-hidden="true" href="#14---build-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;1.4 - Build Projects&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To build from source, you need the following installed and available in your &lt;code&gt;$PATH:&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.oracle.com/technetwork/java/index.html" rel="nofollow"&gt;Java 8&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://maven.apache.org/" rel="nofollow"&gt;Apache Maven 3.3.4 or greater&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After cloning the project, you can build it from source with this command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mvn clean install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you don't have maven installed, you may directly use the included &lt;a href="https://github.com/takari/maven-wrapper"&gt;maven wrapper&lt;/a&gt;, and build with the command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./mvnw clean install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default build contains minimal static analysis (via CheckStyle). To run your build with PMD and Spotbugs, use the &lt;code&gt;static-analysis&lt;/code&gt; profile:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mvn -Pstatic-analysis clean install&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-15---homebrew" class="anchor" aria-hidden="true" href="#15---homebrew"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;1.5 - Homebrew&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To install, run &lt;code&gt;brew install openapi-generator&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Here is an example usage to generate a Ruby client:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;openapi-generator generate -i https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/2_0/petstore.yaml -g ruby -o /tmp/test/&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To reinstall with the latest master, run &lt;code&gt;brew uninstall openapi-generator &amp;amp;&amp;amp; brew install --HEAD openapi-generator&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To install OpenJDK (pre-requisites), please run&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;brew cask install adoptopenjdk12
&lt;span class="pl-k"&gt;export&lt;/span&gt; JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk-12.0.2.jdk/Contents/Home/&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To install Maven, please run&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;brew install maven&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-16---docker" class="anchor" aria-hidden="true" href="#16---docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;1.6 - Docker&lt;/a&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-public-pre-built-docker-images" class="anchor" aria-hidden="true" href="#public-pre-built-docker-images"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Public Pre-built Docker images&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/openapitools/openapi-generator-cli/" rel="nofollow"&gt;https://hub.docker.com/r/openapitools/openapi-generator-cli/&lt;/a&gt; (official CLI)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/openapitools/openapi-generator-online/" rel="nofollow"&gt;https://hub.docker.com/r/openapitools/openapi-generator-online/&lt;/a&gt; (official web service)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-openapi-generator-cli-docker-image" class="anchor" aria-hidden="true" href="#openapi-generator-cli-docker-image"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenAPI Generator CLI Docker Image&lt;/h4&gt;
&lt;p&gt;The OpenAPI Generator image acts as a standalone executable. It can be used as an alternative to installing via homebrew, or for developers who are unable to install Java or upgrade the installed version.&lt;/p&gt;
&lt;p&gt;To generate code with this image, you'll need to mount a local location as a volume.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker run --rm -v &lt;span class="pl-smi"&gt;${PWD}&lt;/span&gt;:/local openapitools/openapi-generator-cli generate \
    -i https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/2_0/petstore.yaml \
    -g go \
    -o /local/out/go&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The generated code will be located under &lt;code&gt;./out/go&lt;/code&gt; in the current directory.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-openapi-generator-online-docker-image" class="anchor" aria-hidden="true" href="#openapi-generator-online-docker-image"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenAPI Generator Online Docker Image&lt;/h4&gt;
&lt;p&gt;The openapi-generator-online image can act as a self-hosted web application and API for generating code. This container can be incorporated into a CI pipeline, and requires at least two HTTP requests and some docker orchestration to access generated code.&lt;/p&gt;
&lt;p&gt;Example usage:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Start container at port 8888 and save the container id&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; CID=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;docker run -d -p 8888:8080 openapitools/openapi-generator-online&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; allow for startup&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; sleep 10

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Get the IP of the running container (optional)&lt;/span&gt;
GEN_IP=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;docker inspect --format &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{{.NetworkSettings.IPAddress}}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;  &lt;span class="pl-smi"&gt;$CID&lt;/span&gt;&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Execute an HTTP request to generate a Ruby client&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; curl -X POST --header &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Content-Type: application/json&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; --header &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Accept: application/json&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; \
-d &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{"openAPIUrl": "https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/2_0/petstore.yaml"}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; \
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;http://localhost:8888/api/gen/clients/ruby&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;code&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;c2d483.3.4672-40e9-91df-b9ffd18d22b8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;link&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://localhost:8888/api/gen/download/c2d483.3.4672-40e9-91df-b9ffd18d22b8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Download the generated zip file  &lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; wget http://localhost:8888/api/gen/download/c2d483.3.4672-40e9-91df-b9ffd18d22b8

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Unzip the file&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; unzip c2d483.3.4672-40e9-91df-b9ffd18d22b8

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Shutdown the openapi generator image&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; docker stop &lt;span class="pl-smi"&gt;$CID&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; docker rm &lt;span class="pl-smi"&gt;$CID&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-development-in-docker" class="anchor" aria-hidden="true" href="#development-in-docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development in docker&lt;/h4&gt;
&lt;p&gt;You can use &lt;code&gt;run-in-docker.sh&lt;/code&gt; to do all development. This script maps your local repository to &lt;code&gt;/gen&lt;/code&gt;
in the docker container. It also maps &lt;code&gt;~/.m2/repository&lt;/code&gt; to the appropriate container location.&lt;/p&gt;
&lt;p&gt;To execute &lt;code&gt;mvn package&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/openapitools/openapi-generator
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; openapi-generator
./run-in-docker.sh mvn package&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build artifacts are now accessible in your working directory.&lt;/p&gt;
&lt;p&gt;Once built, &lt;code&gt;run-in-docker.sh&lt;/code&gt; will act as an executable for openapi-generator-cli. To generate code, you'll need to output to a directory under &lt;code&gt;/gen&lt;/code&gt; (e.g. &lt;code&gt;/gen/out&lt;/code&gt;). For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./run-in-docker.sh &lt;span class="pl-c1"&gt;help&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Executes 'help' command for openapi-generator-cli&lt;/span&gt;
./run-in-docker.sh list &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Executes 'list' command for openapi-generator-cli&lt;/span&gt;
./run-in-docker.sh /gen/bin/go-petstore.sh  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Builds the Go client&lt;/span&gt;
./run-in-docker.sh generate -i modules/openapi-generator/src/test/resources/2_0/petstore.yaml \
    -g go -o /gen/out/go-petstore -DpackageName=petstore &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; generates go client, outputs locally to ./out/go-petstore&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h5&gt;
&lt;p&gt;If an error like this occurs, just execute the &lt;strong&gt;mvn clean install -U&lt;/strong&gt; command:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.19.1:test (default-test) on project openapi-generator: A type incompatibility occurred while executing org.apache.maven.plugins:maven-surefire-plugin:2.19.1:test: java.lang.ExceptionInInitializerError cannot be cast to java.io.IOException&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./run-in-docker.sh mvn clean install -U&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Failed to execute goal org.fortasoft:gradle-maven-plugin:1.0.8:invoke (default) on project openapi-generator-gradle-plugin-mvn-wrapper: org.gradle.tooling.BuildException: Could not execute build using Gradle distribution '&lt;a href="https://services.gradle.org/distributions/gradle-4.7-bin.zip" rel="nofollow"&gt;https://services.gradle.org/distributions/gradle-4.7-bin.zip&lt;/a&gt;'&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Right now: no solution for this one :|&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-run-docker-in-vagrant" class="anchor" aria-hidden="true" href="#run-docker-in-vagrant"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run Docker in Vagrant&lt;/h4&gt;
&lt;p&gt;Prerequisite: install &lt;a href="https://www.vagrantup.com/downloads.html" rel="nofollow"&gt;Vagrant&lt;/a&gt; and &lt;a href="https://www.virtualbox.org/wiki/Downloads" rel="nofollow"&gt;VirtualBox&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/openapitools/openapi-generator.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; openapi-generator
vagrant up
vagrant ssh
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; /vagrant
./run-in-docker.sh mvn package&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-17---npm" class="anchor" aria-hidden="true" href="#17---npm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;1.7 - NPM&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There is also an &lt;a href="https://www.npmjs.com/package/@openapitools/openapi-generator-cli" rel="nofollow"&gt;NPM package wrapper&lt;/a&gt; available for different platforms (e.g. Linux, Mac, Windows). (JVM is still required)
Please see the &lt;a href="https://github.com/openapitools/openapi-generator-cli"&gt;project's README&lt;/a&gt; there for more information.&lt;/p&gt;
&lt;p&gt;Install it globally to get the CLI available on the command line:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm install @openapitools/openapi-generator-cli -g
openapi-generator version&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Or install a particular OpenAPI Generator version (e.g. v4.2.2):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm install @openapitools/openapi-generator-cli@cli-4.2.2 -g&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or install it as dev-dependency:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm install @openapitools/openapi-generator-cli -D&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;&lt;a id="user-content-2---getting-started" class="anchor" aria-hidden="true" href="#2---getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;2 - Getting Started&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To generate a PHP client for &lt;a href="https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/2_0/petstore.yaml" rel="nofollow"&gt;petstore.yaml&lt;/a&gt;, please run the following&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/openapitools/openapi-generator
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; openapi-generator
mvn clean package
java -jar modules/openapi-generator-cli/target/openapi-generator-cli.jar generate \
   -i https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/2_0/petstore.yaml \
   -g php \
   -o /var/tmp/php_api_client&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(if you're on Windows, replace the last command with &lt;code&gt;java -jar modules\openapi-generator-cli\target\openapi-generator-cli.jar generate -i https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/2_0/petstore.yaml -g php -o c:\temp\php_api_client&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;You can also download the JAR (latest release) directly from &lt;a href="https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/4.2.2/openapi-generator-cli-4.2.2.jar" rel="nofollow"&gt;maven.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To get a list of &lt;strong&gt;general&lt;/strong&gt; options available, please run &lt;code&gt;java -jar modules/openapi-generator-cli/target/openapi-generator-cli.jar help generate&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To get a list of PHP specified options (which can be passed to the generator with a config file via the &lt;code&gt;-c&lt;/code&gt; option), please run &lt;code&gt;java -jar modules/openapi-generator-cli/target/openapi-generator-cli.jar config-help -g php&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-3---usage" class="anchor" aria-hidden="true" href="#3---usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;3 - Usage&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-to-generate-a-sample-client-library" class="anchor" aria-hidden="true" href="#to-generate-a-sample-client-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To generate a sample client library&lt;/h3&gt;
&lt;p&gt;You can build a client against the &lt;a href="https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/2_0/petstore.yaml" rel="nofollow"&gt;Petstore API&lt;/a&gt; as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./bin/java-petstore-okhttp-gson.sh&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(On Windows, run &lt;code&gt;.\bin\windows\java-petstore-okhttp-gson.bat&lt;/code&gt; instead)&lt;/p&gt;
&lt;p&gt;This script uses the default library, which is &lt;code&gt;okhttp-gson&lt;/code&gt;. It will run the generator with this command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;java -jar modules/openapi-generator-cli/target/openapi-generator-cli.jar generate \
  -i https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/2_0/petstore.yaml \
  -g java \
  -o samples/client/petstore/java/okhttp-gson&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;with a number of options. &lt;a href="docs/generators/java.md"&gt;The java options are documented here.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can also get the options with the &lt;code&gt;help generate&lt;/code&gt; command (below only shows partial results):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NAME
        openapi-generator-cli generate - Generate code with the specified
        generator.

SYNOPSIS
        openapi-generator-cli generate
                [(-a &amp;lt;authorization&amp;gt; | --auth &amp;lt;authorization&amp;gt;)]
                [--api-name-suffix &amp;lt;api name suffix&amp;gt;]
                [--api-package &amp;lt;api package&amp;gt;] [--artifact-id &amp;lt;artifact id&amp;gt;]
                [--artifact-version &amp;lt;artifact version&amp;gt;]
                [(-c &amp;lt;configuration file&amp;gt; | --config &amp;lt;configuration file&amp;gt;)]
                [-D &amp;lt;system properties&amp;gt;...]
                [(-e &amp;lt;templating engine&amp;gt; | --engine &amp;lt;templating engine&amp;gt;)]
                [--enable-post-process-file]
                [(-g &amp;lt;generator name&amp;gt; | --generator-name &amp;lt;generator name&amp;gt;)]
                [--generate-alias-as-model] [--git-repo-id &amp;lt;git repo id&amp;gt;]
                [--git-user-id &amp;lt;git user id&amp;gt;] [--group-id &amp;lt;group id&amp;gt;]
                [--http-user-agent &amp;lt;http user agent&amp;gt;]
                (-i &amp;lt;spec file&amp;gt; | --input-spec &amp;lt;spec file&amp;gt;)
                [--ignore-file-override &amp;lt;ignore file override location&amp;gt;]
                [--import-mappings &amp;lt;import mappings&amp;gt;...]
                [--instantiation-types &amp;lt;instantiation types&amp;gt;...]
                [--invoker-package &amp;lt;invoker package&amp;gt;]
                [--language-specific-primitives &amp;lt;language specific primitives&amp;gt;...]
                [--library &amp;lt;library&amp;gt;] [--log-to-stderr] [--minimal-update]
                [--model-name-prefix &amp;lt;model name prefix&amp;gt;]
                [--model-name-suffix &amp;lt;model name suffix&amp;gt;]
                [--model-package &amp;lt;model package&amp;gt;]
                [(-o &amp;lt;output directory&amp;gt; | --output &amp;lt;output directory&amp;gt;)]
                [(-p &amp;lt;additional properties&amp;gt; | --additional-properties &amp;lt;additional properties&amp;gt;)...]
                [--package-name &amp;lt;package name&amp;gt;] [--release-note &amp;lt;release note&amp;gt;]
                [--remove-operation-id-prefix]
                [--reserved-words-mappings &amp;lt;reserved word mappings&amp;gt;...]
                [(-s | --skip-overwrite)] [--server-variables &amp;lt;server variables&amp;gt;...]
                [--skip-validate-spec] [--strict-spec &amp;lt;true/false strict behavior&amp;gt;]
                [(-t &amp;lt;template directory&amp;gt; | --template-dir &amp;lt;template directory&amp;gt;)]
                [--type-mappings &amp;lt;type mappings&amp;gt;...] [(-v | --verbose)]

OPTIONS
        -a &amp;lt;authorization&amp;gt;, --auth &amp;lt;authorization&amp;gt;
            adds authorization headers when fetching the OpenAPI definitions
            remotely. Pass in a URL-encoded string of name:header with a comma
            separating multiple values

...... (results omitted)

        -v, --verbose
            verbose mode

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can then compile and run the client, as well as unit tests against it:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; samples/client/petstore/java/okhttp-gson
mvn package&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Other languages have petstore samples, too:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./bin/android-petstore-all.sh
./bin/java-petstore-all.sh
./bin/objc-petstore.sh&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and others. &lt;a href="https://github.com/OpenAPITools/openapi-generator/wiki/Samples-folder#scripts"&gt;Here is a list of all scripts.&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-31---customization" class="anchor" aria-hidden="true" href="#31---customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;3.1 - Customization&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Please refer to &lt;a href="docs/customization.md"&gt;customization.md&lt;/a&gt; on how to customize the output (e.g. package name, version)&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-32---workflow-integration-maven-gradle-github-cicd" class="anchor" aria-hidden="true" href="#32---workflow-integration-maven-gradle-github-cicd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;3.2 - Workflow Integration (Maven, Gradle, Github, CI/CD)&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Please refer to &lt;a href="docs/integration.md"&gt;integration.md&lt;/a&gt; on how to integrate OpenAPI generator with Maven, Gradle, sbt, Bazel, Github and CI/CD.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-33---online-openapi-generator" class="anchor" aria-hidden="true" href="#33---online-openapi-generator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;3.3 - Online OpenAPI generator&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Here are the public online services:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;latest stable version: &lt;a href="https://api.openapi-generator.tech" rel="nofollow"&gt;https://api.openapi-generator.tech&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;latest master: &lt;a href="https://api-latest-master.openapi-generator.tech" rel="nofollow"&gt;https://api-latest-master.openapi-generator.tech&lt;/a&gt; (updated with latest master every hour)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The server is sponsored by &lt;a href="https://www.linode.com/" rel="nofollow"&gt;Linode&lt;/a&gt; &lt;a href="https://www.linode.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3de572a1fbdd4f31adf90062c5a7245cda504bca/68747470733a2f2f7777772e6c696e6f64652e636f6d2f6d656469612f696d616765732f6c6f676f732f7374616e646172642f6c696768742f6c696e6f64652d6c6f676f5f7374616e646172645f6c696768745f736d616c6c2e706e67" alt="Linode Logo" data-canonical-src="https://www.linode.com/media/images/logos/standard/light/linode-logo_standard_light_small.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(These services are beta and do not have any guarantee on service level)&lt;/p&gt;
&lt;p&gt;Please refer to &lt;a href="docs/online.md"&gt;online.md&lt;/a&gt; on how to run and use the &lt;code&gt;openapi-generator-online&lt;/code&gt; - a web service for &lt;code&gt;openapi-generator&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-34---license-information-on-generated-code" class="anchor" aria-hidden="true" href="#34---license-information-on-generated-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;3.4 - License information on Generated Code&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The OpenAPI Generator project is intended as a benefit for users of the Open API Specification.  The project itself has the &lt;a href="#license"&gt;License&lt;/a&gt; as specified. In addition, please understand the following points:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The templates included with this project are subject to the &lt;a href="#license"&gt;License&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Generated code is intentionally &lt;em&gt;not&lt;/em&gt; subject to the parent project license&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When code is generated from this project, it shall be considered &lt;strong&gt;AS IS&lt;/strong&gt; and owned by the user of the software.  There are no warranties--expressed or implied--for generated code.  You can do what you wish with it, and once generated, the code is your responsibility and subject to the licensing terms that you deem appropriate.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-35---ide-integration" class="anchor" aria-hidden="true" href="#35---ide-integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;3.5 - IDE Integration&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Here is a list of community-conitributed IDE plug-ins that integrate with OpenAPI Generator:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Eclipse: &lt;a href="https://www.eclipse.org/codewind/open-api-tools-for-eclipse.html" rel="nofollow"&gt;Codewind OpenAPI Tools for Eclipse&lt;/a&gt; by &lt;a href="https://www.ibm.com" rel="nofollow"&gt;IBM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IntelliJ IDEA: &lt;a href="https://plugins.jetbrains.com/plugin/8433-openapi-generator" rel="nofollow"&gt;OpenAPI Generator&lt;/a&gt; by &lt;a href="https://jimschubert.us/#/" rel="nofollow"&gt;Jim Schubert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IntelliJ IDEA: &lt;a href="https://plugins.jetbrains.com/plugin/10690-senya-editor" rel="nofollow"&gt;Senya Editor&lt;/a&gt; by &lt;a href="https://senya.io" rel="nofollow"&gt;senya.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reprezen.com/" rel="nofollow"&gt;RepreZen API Studio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visual Studio: &lt;a href="https://marketplace.visualstudio.com/items?itemName=ChristianResmaHelle.ApiClientCodeGenerator" rel="nofollow"&gt;REST API Client Code Generator&lt;/a&gt; by &lt;a href="https://christian-helle.blogspot.com/" rel="nofollow"&gt;Christian Resma Helle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visual Studio Code: &lt;a href="https://marketplace.visualstudio.com/items?itemName=IBM.codewind-openapi-tools" rel="nofollow"&gt;Codewind OpenAPI Tools&lt;/a&gt; by &lt;a href="https://marketplace.visualstudio.com/publishers/IBM" rel="nofollow"&gt;IBM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-4---companiesprojects-using-openapi-generator" class="anchor" aria-hidden="true" href="#4---companiesprojects-using-openapi-generator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;4 - Companies/Projects using OpenAPI Generator&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here are some companies/projects (alphabetical order) using OpenAPI Generator in production. To add your company/project to the list, please visit &lt;a href="README.md"&gt;README.md&lt;/a&gt; and click on the icon to edit the page.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.adaptant.io/" rel="nofollow"&gt;Adaptant Solutions AG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://angular.schule/" rel="nofollow"&gt;Angular.Schule&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.anz.com/" rel="nofollow"&gt;Australia and New Zealand Banking Group (ANZ)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.askul.co.jp" rel="nofollow"&gt;ASKUL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.arduino.cc/" rel="nofollow"&gt;Arduino&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://b-com.com/en" rel="nofollow"&gt;b&amp;lt;&amp;gt;com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://banzaicloud.com" rel="nofollow"&gt;Banzai Cloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bimdata.io" rel="nofollow"&gt;BIMData.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bithost.ch" rel="nofollow"&gt;Bithost GmbH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bosch-connected-industry.com" rel="nofollow"&gt;Bosch Connected Industry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.boxever.com/" rel="nofollow"&gt;Boxever&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.csun.edu" rel="nofollow"&gt;California State University, Northridge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cam-inc.co.jp/" rel="nofollow"&gt;CAM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.camptocamp.com/en" rel="nofollow"&gt;Camptocamp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cisco.com/" rel="nofollow"&gt;Cisco&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codecentric.de/" rel="nofollow"&gt;codecentric AG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.commencis.com/" rel="nofollow"&gt;Commencis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://crossoverhealth.com/" rel="nofollow"&gt;Crossover Health&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cupix.com/" rel="nofollow"&gt;Cupix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dbsystel.de" rel="nofollow"&gt;DB Systel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docspring.com/" rel="nofollow"&gt;DocSpring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dwango.co.jp/" rel="nofollow"&gt;dwango&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.edgeimpulse.com/" rel="nofollow"&gt;Edge Impulse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.elementai.com/" rel="nofollow"&gt;Element AI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.embotics.com/" rel="nofollow"&gt;Embotics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fenergo.com/" rel="nofollow"&gt;Fenergo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freshcells.de/" rel="nofollow"&gt;FreshCells&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fuse.no/" rel="nofollow"&gt;Fuse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.gantner.com" rel="nofollow"&gt;Gantner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RepreZen/GenFlow"&gt;GenFlow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.getyourguide.com/" rel="nofollow"&gt;GetYourGuide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pepabo.com/en/" rel="nofollow"&gt;GMO Pepabo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://godaddy.com" rel="nofollow"&gt;GoDaddy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.here.com/" rel="nofollow"&gt;Here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ibm.com/" rel="nofollow"&gt;IBM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.juststarinfo.com" rel="nofollow"&gt;JustStar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.klarna.com/" rel="nofollow"&gt;Klarna&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kronsoft.ro/home/" rel="nofollow"&gt;Kronsoft Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kubernetes.io" rel="nofollow"&gt;Kubernetes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linode.com/" rel="nofollow"&gt;Linode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mediavision.fr/" rel="nofollow"&gt;Médiavision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.metaswitch.com/" rel="nofollow"&gt;Metaswitch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://myworkout.com" rel="nofollow"&gt;Myworkout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.namsor.com/" rel="nofollow"&gt;NamSor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.openet.com/" rel="nofollow"&gt;Openet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.oracle.com/" rel="nofollow"&gt;Oracle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.paxos.com" rel="nofollow"&gt;Paxos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ponicode.dev/" rel="nofollow"&gt;Ponicode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pricefx.com/" rel="nofollow"&gt;Pricefx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prometheus/alertmanager"&gt;Prometheus/Alertmanager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qed-it.com" rel="nofollow"&gt;QEDIT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.qulix.com" rel="nofollow"&gt;Qulix Systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.raiffeisen.ch" rel="nofollow"&gt;Raiffeisen Schweiz Genossenschaft&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.redhat.com" rel="nofollow"&gt;RedHat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reprezen.com/swagger-openapi-code-generation-api-first-microservices-enterprise-development" rel="nofollow"&gt;RepreZen API Studio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://restunited.com" rel="nofollow"&gt;REST United&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.robotinfra.com" rel="nofollow"&gt;Robotinfra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sie.com/en/index.html" rel="nofollow"&gt;Sony Interactive Entertainment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.stingray.com" rel="nofollow"&gt;Stingray&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.suva.ch/" rel="nofollow"&gt;Suva&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.telstra.com" rel="nofollow"&gt;Telstra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.traveltimeplatform.com/" rel="nofollow"&gt;TravelTime platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.tui-infotec.com/" rel="nofollow"&gt;TUI InfoTec GmbH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.unblu.com/" rel="nofollow"&gt;unblu inc.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.veamly.com/" rel="nofollow"&gt;Veamly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.woleet.io/" rel="nofollow"&gt;Woleet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wso2.com/" rel="nofollow"&gt;WSO2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vouchery.io" rel="nofollow"&gt;Vouchery.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.xero.com/" rel="nofollow"&gt;Xero&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.yahoo.co.jp/" rel="nofollow"&gt;Yahoo Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.yelp.com/" rel="nofollow"&gt;Yelp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.zalando.com" rel="nofollow"&gt;Zalando&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-5---presentationsvideostutorialsbooks" class="anchor" aria-hidden="true" href="#5---presentationsvideostutorialsbooks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;5 - Presentations/Videos/Tutorials/Books&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;2018/05/12 - &lt;a href="https://ackintosh.github.io/blog/2018/05/12/openapi-generator/" rel="nofollow"&gt;OpenAPI Generator - community drivenで成長するコードジェネレータ&lt;/a&gt; by &lt;a href="https://github.com/ackintosh"&gt;中野暁人&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/05/15 - &lt;a href="http://jmini.github.io/blog/2018/2018-05-15_new-open-source-project.html" rel="nofollow"&gt;Starting a new open-source project&lt;/a&gt; by &lt;a href="https://github.com/jmini"&gt;Jeremie Bresson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/05/15 - &lt;a href="https://www.publickey1.jp/blog/18/rest_apiapiopenapi_generatorswagger_generator.html" rel="nofollow"&gt;REST API仕様からAPIクライアントやスタブサーバを自動生成する「OpenAPI Generator」オープンソースで公開。Swagger Codegenからのフォーク&lt;/a&gt; by &lt;a href="https://www.publickey1.jp" rel="nofollow"&gt;Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/06/08 - &lt;a href="https://angular.schule/blog/2018-06-swagger-codegen-is-now-openapi-generator" rel="nofollow"&gt;Swagger Codegen is now OpenAPI Generator&lt;/a&gt; by &lt;a href="https://github.com/JohannesHoppe"&gt;JohannesHoppe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/06/21 - &lt;a href="https://fr.slideshare.net/chbornet/jhipster-conf-2018-connect-your-jhipster-apps-to-the-world-of-apis-with-openapi-and-grpc" rel="nofollow"&gt;Connect your JHipster apps to the world of APIs with OpenAPI and gRPC&lt;/a&gt; by &lt;a href="https://github.com/cbornet"&gt;Christophe Bornet&lt;/a&gt; at &lt;a href="https://jhipster-conf.github.io/" rel="nofollow"&gt;JHipster Conf 2018&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/06/22 - &lt;a href="https://rohki.hatenablog.com/entry/2018/06/22/073000" rel="nofollow"&gt;OpenAPI Generator で Gatling Client を生成してみた&lt;/a&gt; at &lt;a href="https://rohki.hatenablog.com/" rel="nofollow"&gt;ソモサン&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/06/27 - &lt;a href="https://speakerdeck.com/wing328/lessons-learned-from-leading-an-open-source-project-supporting-30-plus-programming-languages" rel="nofollow"&gt;Lessons Learned from Leading an Open-Source Project Supporting 30+ Programming Languages&lt;/a&gt; - &lt;a href="https://github.com/wing328"&gt;William Cheng&lt;/a&gt; at &lt;a href="http://bit.ly/2waDKKX" rel="nofollow"&gt;LinuxCon + ContainerCon + CloudOpen China 2018&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/07/19 - &lt;a href="https://medium.com/ringcentral-developers/openapi-generator-for-go-contribution-quickstart-8cc72bf37b53" rel="nofollow"&gt;OpenAPI Generator Contribution Quickstart - RingCentral Go SDK&lt;/a&gt; by &lt;a href="https://github.com/grokify"&gt;John Wang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/08/22 - &lt;a href="https://yinm.info/20180822/" rel="nofollow"&gt;OpenAPI Generatorのプロジェクト構成などのメモ&lt;/a&gt; by &lt;a href="https://github.com/yinm"&gt;Yusuke Iinuma&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/09/12 - &lt;a href="https://www.reprezen.com/blog/reprezen-openapi-3.0-upgrade-now-is-the-time" rel="nofollow"&gt;RepreZen and OpenAPI 3.0: Now is the Time&lt;/a&gt; by &lt;a href="https://www.reprezen.com/blog/author/miles-daffin" rel="nofollow"&gt;Miles Daffin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/10/31 - &lt;a href="https://github.com/HarmoWatch/openapi-generator-cli"&gt;A node package wrapper for openapi-generator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/11/03 - &lt;a href="http://ryuichi111std.hatenablog.com/entry/2018/11/03/214005" rel="nofollow"&gt;OpenAPI Generator + golang + Flutter でアプリ開発&lt;/a&gt; by &lt;a href="https://github.com/ryuichi111"&gt;Ryuichi Daigo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/11/15 - &lt;a href="https://blog.csdn.net/yzy199391/article/details/84023982" rel="nofollow"&gt;基于openapi3.0的yaml文件生成java代码的一次实践&lt;/a&gt; by &lt;a href="https://me.csdn.net/yzy199391" rel="nofollow"&gt;焱魔王&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/11/19 - &lt;a href="https://youtu.be/-lDot4Yn7Dg" rel="nofollow"&gt;OpenAPIs are everywhere&lt;/a&gt; by &lt;a href="https://github.com/jmini"&gt;Jeremie Bresson (Unblu)&lt;/a&gt; at &lt;a href="https://www.eclipsecon.org/europe2018" rel="nofollow"&gt;EclipseCon Europe 2018&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/12/09 - &lt;a href="https://qiita.com/watiko/items/0961287c02eac9211572" rel="nofollow"&gt;openapi-generator をカスタマイズする方法&lt;/a&gt; by &lt;a href="https://qiita.com/watiko" rel="nofollow"&gt;@watiko&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019/01/03 - &lt;a href="https://lekkimworld.com/2019/01/03/calling-a-swagger-service-from-apex-using-openapi-generator/" rel="nofollow"&gt;Calling a Swagger service from Apex using openapi-generator&lt;/a&gt; by &lt;a href="https://lekkimworld.com" rel="nofollow"&gt;Mikkel Flindt Heisterberg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019/01/13 - &lt;a href="https://ky-yk-d.hatenablog.com/entry/2019/01/13/234108" rel="nofollow"&gt;OpenAPI GeneratorでRESTful APIの定義書から色々自動生成する&lt;/a&gt; by &lt;a href="https://twitter.com/ky_yk_d" rel="nofollow"&gt;@ky_yk_d&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019/01/20 - &lt;a href="https://medium.com/commencis/contract-first-api-development-with-openapi-generator-and-connexion-b21bbf2f9244" rel="nofollow"&gt;Contract-First API Development with OpenAPI Generator and Connexion&lt;/a&gt; by &lt;a href="https://github.com/anlcnydn"&gt;Anil Can Aydin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019/01/30 - &lt;a href="https://dzone.com/articles/rapid-api-development-using-open-api-generator" rel="nofollow"&gt;Rapid Application Development With API First Approach Using Open-API Generator&lt;/a&gt; by &lt;a href="https://dzone.com/users/828329/milan_sonkar.html" rel="nofollow"&gt;Milan Sonkar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019/02/02 - &lt;a href="https://speakerdeck.com/akihito_nakano/gunmaweb34" rel="nofollow"&gt;平静を保ち、コードを生成せよ 〜 OpenAPI Generator誕生の背景と軌跡 〜&lt;/a&gt; by &lt;a href="https://github.com/ackintosh"&gt;中野暁人&lt;/a&gt; at &lt;a href="https://gunmaweb.connpass.com/event/113974/" rel="nofollow"&gt;Gunma.web #34 スキーマ駆動開発&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019/02/20 - &lt;a href="https://mux.com/blog/an-adventure-in-openapi-v3-api-code-generation/" rel="nofollow"&gt;An adventure in OpenAPI V3 code generation&lt;/a&gt; by &lt;a href="https://mux.com/blog/author/philc/" rel="nofollow"&gt;Phil Cluff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019/02/26 - &lt;a href="https://medium.com/google-cloud/building-api-services-a-beginners-guide-7274ae4c547f" rel="nofollow"&gt;Building API Services: A Beginner’s Guide&lt;/a&gt; by &lt;a href="https://medium.com/@ratrosy" rel="nofollow"&gt;Ratros Y.&lt;/a&gt; in &lt;a href="https://medium.com/google-cloud" rel="nofollow"&gt;Google Cloud Platofrm Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019/02/26 - &lt;a href="https://medium.com/@ratrosy/building-apis-with-openapi-continued-5d0faaed32eb" rel="nofollow"&gt;Building APIs with OpenAPI: Continued&lt;/a&gt; by &lt;a href="https://medium.com/@ratrosy" rel="nofollow"&gt;Ratros Y.&lt;/a&gt; in &lt;a href="https://medium.com/google-cloud" rel="nofollow"&gt;Google Cloud Platofrm Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-03-07 - &lt;a href="https://qiita.com/chibato/items/e4a748db12409b40c02f" rel="nofollow"&gt;OpenAPI Generator で Spring Boot と Angular をタイプセーフに繋ぐ&lt;/a&gt; by &lt;a href="https://github.com/chibat"&gt;Tomofumi Chiba&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-03-25 - &lt;a href="https://blogs.sap.com/2019/03/25/integrate-sap-s4hana-cloud-sdk-with-open-api/" rel="nofollow"&gt;Access any REST service with the SAP S/4HANA Cloud SDK&lt;/a&gt; by &lt;a href="https://people.sap.com/alexander.duemont" rel="nofollow"&gt;Alexander Duemont&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-03-25 - &lt;a href="https://qiita.com/amuyikam/items/e8a45daae59c68be0fc8" rel="nofollow"&gt;OpenAPI generatorを試してみる&lt;/a&gt; by &lt;a href="https://twitter.com/amuyikam" rel="nofollow"&gt;@amuyikam&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-03-27 - &lt;a href="https://techblog.zozo.com/entry/openapi3/go" rel="nofollow"&gt;OpenAPI3を使ってみよう！Go言語でクライアントとスタブの自動生成まで！&lt;/a&gt; by &lt;a href="https://twitter.com/gold_kou" rel="nofollow"&gt;@gold_kou&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-04-17 - &lt;a href="https://tech-blog.optim.co.jp/entry/2019/04/17/174000" rel="nofollow"&gt;OpenAPIによるスキーマファースト開発の実施サンプルとCloud Runについて&lt;/a&gt; by &lt;a href="https://twitter.com/yukey1031" rel="nofollow"&gt;@yukey1031&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-04-18 - &lt;a href="https://speakerdeck.com/ota42y/how-to-use-openapi3-for-api-developer" rel="nofollow"&gt;How to use OpenAPI3 for API developer (RubyKaigi 2019)&lt;/a&gt; by &lt;a href="https://twitter.com/ota42y" rel="nofollow"&gt;@ota42y&lt;/a&gt; at &lt;a href="https://rubykaigi.org/2019" rel="nofollow"&gt;RubyKaigi 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-04-29 - &lt;a href="https://gum.co/openapi_generator_ebook" rel="nofollow"&gt;A Beginner's Guide to Code Generation for REST APIs (OpenAPI Generator)&lt;/a&gt; by &lt;a href="https://twitter.com/wing328" rel="nofollow"&gt;William Cheng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-05-01 - &lt;a href="https://simply-how.com/design-and-generate-api-code-from-openapi" rel="nofollow"&gt;Design and generate a REST API from Swagger / OpenAPI in Java, Python, C# and more&lt;/a&gt; by &lt;a href="https://simply-how.com/" rel="nofollow"&gt;Simply How&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-05-17 - &lt;a href="https://www.47northlabs.com/knowledge-base/generate-spring-boot-rest-api-using-swagger-openapi/" rel="nofollow"&gt;Generate Spring Boot REST API using Swagger/OpenAPI&lt;/a&gt; by &lt;a href="https://www.47northlabs.com/author/antonie-zafirov/" rel="nofollow"&gt;Antonie Zafirov&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-05-22 - &lt;a href="https://gum.co/openapi_generator_ebook_gb" rel="nofollow"&gt;REST APIs代码生成指南(OpenAPI Generator)&lt;/a&gt; by &lt;a href="https://twitter.com/wing328" rel="nofollow"&gt;William Cheng&lt;/a&gt;, &lt;a href="https://github.com/xmeng1"&gt;Xin Meng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-05-24 - &lt;a href="https://gum.co/openapi_generator_ebook_big5" rel="nofollow"&gt;REST API 代碼生成指南 (OpenAPI Generator)&lt;/a&gt; by &lt;a href="https://twitter.com/wing328" rel="nofollow"&gt;William Cheng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-06-24 - &lt;a href="https://speakerdeck.com/wing328/kubernetes-clients-and-openapi-generator" rel="nofollow"&gt;Kubernetes Clients and OpenAPI Generator&lt;/a&gt; by &lt;a href="https://twitter.com/wing328" rel="nofollow"&gt;William Cheng&lt;/a&gt; at &lt;a href="https://www.lfasiallc.com/events/contributors-summit-china-2019/" rel="nofollow"&gt;Kubernetes Contributor Summits Shanghai 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-06-28 &lt;a href="https://marketplace.eclipse.org/content/codewind-openapi-tools" rel="nofollow"&gt;Codewind OpenAPI Tools&lt;/a&gt; in &lt;a href="https://marketplace.eclipse.org/" rel="nofollow"&gt;Eclipse Marketplace&lt;/a&gt; by IBM&lt;/li&gt;
&lt;li&gt;2019-06-29 &lt;a href="https://marketplace.visualstudio.com/items?itemName=IBM.codewind-openapi-tools" rel="nofollow"&gt;Codewind OpenAPI Tools&lt;/a&gt; in &lt;a href="https://marketplace.visualstudio.com/" rel="nofollow"&gt;Visual Studio Marketplace&lt;/a&gt; by IBM&lt;/li&gt;
&lt;li&gt;2019-07-04 - &lt;a href="https://gum.co/openapi_generator_ebook_big5" rel="nofollow"&gt;REST API のためのコード生成入門 (OpenAPI Generator)&lt;/a&gt; by &lt;a href="https://twitter.com/wing328" rel="nofollow"&gt;William Cheng&lt;/a&gt;, &lt;a href="https://github.com/ackintosh"&gt;中野暁人&lt;/a&gt;, &lt;a href="https://github.com/taxpon"&gt;和田拓朗&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-07-08 - &lt;a href="https://tech.cam-inc.co.jp/entry/2019/07/08/140000" rel="nofollow"&gt;OpenAPI Generator にコントリビュートしたら社名が載った話。(CAM) - CAM TECH BLOG&lt;/a&gt; by &lt;a href="https://www.cam-inc.co.jp/" rel="nofollow"&gt;CAM, Inc.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-07-14 - &lt;a href="https://qiita.com/yuji38kwmt/items/dfb929316a1335a161c0" rel="nofollow"&gt;OpenAPI GeneratorでPythonのクライアントライブラリを作成した&lt;/a&gt; by &lt;a href="https://qiita.com/yuji38kwmt" rel="nofollow"&gt;yuji38kwmt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-07-19 - &lt;a href="https://speakerdeck.com/wing328/developer-experience-dx-for-open-source-projects-english-japanese" rel="nofollow"&gt;Developer Experience (DX) for Open-Source Projects: How to Engage Developers and Build a Growing Developer Community&lt;/a&gt; by &lt;a href="https://twitter.com/wing328" rel="nofollow"&gt;William Cheng&lt;/a&gt;, &lt;a href="https://github.com/ackintosh"&gt;中野暁人&lt;/a&gt; at &lt;a href="https://events.linuxfoundation.org/events/open-source-summit-japan-2019/" rel="nofollow"&gt;Open Source Summit Japan 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-08-14 - &lt;a href="https://bitmovin.com/our-openapi-journey-with-standardizing-sdks/" rel="nofollow"&gt;Our OpenAPI journey with Standardizing SDKs&lt;/a&gt; by &lt;a href="https://bitmovin.com/author/sburgstaller/" rel="nofollow"&gt;Sebastian Burgstaller&lt;/a&gt; at &lt;a href="https://www.bitmovin.com" rel="nofollow"&gt;Bitmovin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-08-15 - &lt;a href="https://www.m3tech.blog/entry/2019/08/15/110000" rel="nofollow"&gt;APIのコードを自動生成させたいだけならgRPCでなくてもよくない?&lt;/a&gt; by &lt;a href="https://corporate.m3.com/" rel="nofollow"&gt;M3, Inc.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-08-22 - &lt;a href="https://employment.en-japan.com/engineerhub/entry/2019/08/22/103000" rel="nofollow"&gt;マイクロサービスにおけるWeb APIスキーマの管理─ GraphQL、gRPC、OpenAPIの特徴と使いどころ&lt;/a&gt; by &lt;a href="https://twitter.com/ota42y" rel="nofollow"&gt;@ota42y&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-08-24 - &lt;a href="https://qiita.com/masayoshi0222/items/4845e4c715d04587c104" rel="nofollow"&gt;SwaggerドキュメントからOpenAPI Generatorを使ってモックサーバー作成&lt;/a&gt; by &lt;a href="https://qiita.com/masayoshi0222" rel="nofollow"&gt;坂本正義&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-08-29 - &lt;a href="https://cloud.tencent.com/developer/article/1495986" rel="nofollow"&gt;OpenAPI初探&lt;/a&gt; by &lt;a href="https://cloud.tencent.com/developer/user/1113152" rel="nofollow"&gt;peakxie&lt;/a&gt; at &lt;a href="https://cloud.tencent.com/developer" rel="nofollow"&gt;腾讯云社区&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-08-29 - &lt;a href="https://www.servicemesher.com/blog/kubernetes-1.16-crd-ga-preview/" rel="nofollow"&gt;全面进化：Kubernetes CRD 1.16 GA前瞻&lt;/a&gt; by &lt;a href="https://github.com/yue9944882"&gt;Min Kim&lt;/a&gt; at &lt;a href="https://www.servicemesher.com/blog/" rel="nofollow"&gt;ServiceMesher Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-09-01 - &lt;a href="https://www.youtube.com/watch?v=5cJtbIrsYkg" rel="nofollow"&gt;Creating a PHP-Slim server using OpenAPI (Youtube video)&lt;/a&gt; by &lt;a href="https://www.youtube.com/channel/UCnG-TN23lswO6QbvWhMtxpA" rel="nofollow"&gt;Daniel Persson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-09-06 - &lt;a href="https://wissel.net/blog/2019/09/vertx-and-openapi.html" rel="nofollow"&gt;Vert.x and OpenAPI&lt;/a&gt; by &lt;a href="https://twitter.com/notessensei" rel="nofollow"&gt;Stephan H Wissel&lt;/a&gt; at &lt;a href="https://wissel.net" rel="nofollow"&gt;wissel.net blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-09-09 - &lt;a href="https://cloud.ibm.com/docs/cloud-native?topic=cloud-native-rest-api" rel="nofollow"&gt;Cloud-native development - Creating RESTful microservices&lt;/a&gt; in &lt;a href="https://cloud.ibm.com/docs" rel="nofollow"&gt;IBM Cloud Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-09-14 - &lt;a href="https://developer.mastercard.com/platform/documentation/generating-and-configuring-a-mastercard-api-client/" rel="nofollow"&gt;Generating and Configuring a Mastercard API Client&lt;/a&gt; at &lt;a href="https://developer.mastercard.com/platform/documentation/" rel="nofollow"&gt;Mastercard Developers Platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-09-15 - &lt;a href="https://qiita.com/ShoichiKuraoka/items/f1f7a3c2376f7cd9c56a" rel="nofollow"&gt;OpenAPI(Swagger)導入下調べ&lt;/a&gt; by &lt;a href="https://qiita.com/ShoichiKuraoka" rel="nofollow"&gt;Shoichi Kuraoka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-09-17 - &lt;a href="https://www.http4k.org/tutorials/documenting_apis_with_openapi/" rel="nofollow"&gt;Tutorial: Documenting http4k APIs with OpenApi3&lt;/a&gt; by &lt;a href="https://www.http4k.org/" rel="nofollow"&gt;http4k&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-09-22 - &lt;a href="https://booth.pm/ja/items/1571902" rel="nofollow"&gt;OpenAPI 3を完全に理解できる本&lt;/a&gt; by &lt;a href="https://twitter.com/ota42y" rel="nofollow"&gt;@ota42y&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-09-22 - &lt;a href="https://medium.com/@amirm.lavasani/restful-apis-tutorial-of-openapi-specification-eeada0e3901d" rel="nofollow"&gt;RESTful APIs: Tutorial of OpenAPI Specification&lt;/a&gt; by &lt;a href="https://medium.com/@amirm.lavasani" rel="nofollow"&gt;Amir Lavasani&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-09-22 - &lt;a href="https://devrel.net/dev-rel/redefining-sdks-as-software-diversity-kits" rel="nofollow"&gt;Redefining SDKs as software diversity kits&lt;/a&gt; by &lt;a href="https://twitter.com/sidneyallen" rel="nofollow"&gt;Sid Maestre (Xero)&lt;/a&gt; at &lt;a href="https://sf2019.devrel.net/" rel="nofollow"&gt;DevRelCon San Francisco 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-09-23 - &lt;a href="https://qiita.com/littleFeet/items/492df2ad68a0799a5e5e" rel="nofollow"&gt;swaggerからOpenApi GeneratorでSpringのコードを自動生成&lt;/a&gt; by &lt;a href="https://qiita.com/littleFeet" rel="nofollow"&gt;@littleFeet&lt;/a&gt; at &lt;a href="https://qiita.com/" rel="nofollow"&gt;Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-09-24 - &lt;a href="https://www.slideshare.net/JanWeinschenker/eine-stunde-was-mit-api-first" rel="nofollow"&gt;Eine Stunde was mit Api First!&lt;/a&gt; by &lt;a href="https://twitter.com/janweinschenker" rel="nofollow"&gt;@janweinschenker&lt;/a&gt; at &lt;a href="https://javaforumnord.de/" rel="nofollow"&gt;Java Forum Nord&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-10-09 - &lt;a href="https://autopp-tech.hatenablog.com/entry/2019/10/09/222039" rel="nofollow"&gt;openapi-generator で生成した Go クライアントで Bearer 認証をする&lt;/a&gt; by &lt;a href="https://github.com/autopp"&gt;Akira Tanimura&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-10-10 - &lt;a href="https://www.meetup.com/fr-FR/Criteo-Labs-Tech-Talks/events/264775768/" rel="nofollow"&gt;Automatic Generation of REST Clients&lt;/a&gt; by Thomas Peyrard, Senior Software Engineer at Criteo in &lt;a href="https://www.meetup.com/fr-FR/Criteo-Labs-Tech-Talks/events/264775768/" rel="nofollow"&gt;Full-Stack Tech Talks (Meetup)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-10-12 - &lt;a href="https://blog.csdn.net/wxid2798226/article/details/102527467" rel="nofollow"&gt;OpenApi自动生成client&lt;/a&gt; by &lt;a href="https://me.csdn.net/wxid2798226" rel="nofollow"&gt;郑泽洲&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-10-16 - &lt;a href="https://medium.com/@accounts_76224/how-to-ship-apis-faster-cabef2f819e4" rel="nofollow"&gt;How to ship APIs faster?&lt;/a&gt; by &lt;a href="https://ponicode.dev" rel="nofollow"&gt;Simon Guilliams @ PoniCode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-10-22 - &lt;a href="https://qiita.com/boronngo/items/4b78b92526209daeaee9" rel="nofollow"&gt;OpenAPI + Spring Boot(Kotlin)でファイルダウンロードAPIを作成する&lt;/a&gt; by &lt;a href="https://twitter.com/yuki_furukawa5" rel="nofollow"&gt;Yuki Furukawa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-10-24 - &lt;a href="https://github.com/pe-st/apidocs/blob/master/MicroProfile-OpenAPI-all-slides.pdf"&gt;Microprofile OpenAPI - Code First or Design First?&lt;/a&gt; by &lt;a href="https://twitter.com/pesche" rel="nofollow"&gt;Peter [pɛʃə] Steiner&lt;/a&gt; at &lt;a href="https://www.eclipsecon.org/europe2019/sessions/microprofile-openapi-code-first-or-design-first" rel="nofollow"&gt;eclipsecon Europe 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-11-06 - &lt;a href="https://98elements.com/blog/generating-api-clients-based-on-openapi-v3-specifications" rel="nofollow"&gt;Generating API clients based on OpenAPI v3 specifications&lt;/a&gt; by &lt;a href="https://98elements.com" rel="nofollow"&gt;Dominik Jastrzębski @ 98elements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-11-06 - &lt;a href="https://qiita.com/YasuhiroABE/items/c73920eab2d9d6e97fd9" rel="nofollow"&gt;OpenAPIを利用して自前のAPIサーバー(Sinatra)を移植した時のメモ&lt;/a&gt; by &lt;a href="https://twitter.com/YasuhiroABE" rel="nofollow"&gt;Yasuhiro ABE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-11-07 - &lt;a href="https://www.youtube.com/watch?v=F9iF3a1Z8Y8" rel="nofollow"&gt;API First development with OpenAPI - You should you practise it !?&lt;/a&gt; by &lt;a href="https://www.nickvanhoof.com/" rel="nofollow"&gt;Nick Van Hoof&lt;/a&gt; at &lt;a href="https://devoxx.be/" rel="nofollow"&gt;Devoxx Belgium 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-11-08 - &lt;a href="https://www.youtube.com/watch?v=m28JFovKQ20" rel="nofollow"&gt;JHipster beyond CRUD - API-First for Enterprises by Enrico Costanzi&lt;/a&gt; by &lt;a href="https://twitter.com/enricocostanzi" rel="nofollow"&gt;Enrico Costanzi&lt;/a&gt; at &lt;a href="https://jhipster-conf.github.io/" rel="nofollow"&gt;JHipster Conf 2019 in Paris&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-11-11 - &lt;a href="https://qiita.com/unhurried/items/7b74f7d3c43545dadd2b" rel="nofollow"&gt;TypeScript REST APIクライアント&lt;/a&gt; by &lt;a href="https://qiita.com/unhurried" rel="nofollow"&gt;@unhurried&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-11-11 - &lt;a href="https://www.youtube.com/watch?v=MMay_nht8ec" rel="nofollow"&gt;One Spec to Rule them all - OpenAPI in Action&lt;/a&gt; by &lt;a href="https://github.com/littldr"&gt;Andreas Litt&lt;/a&gt; at &lt;a href="https://www.codetalks.com/" rel="nofollow"&gt;code.talks 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-11-17 - &lt;a href="https://www.youtube.com/playlist?list=PLtJyHVMdzfF6fBkOUV5VDVErP23CGgHIy" rel="nofollow"&gt;OpenAPI Generator YouTube playlist&lt;/a&gt; at &lt;a href="https://www.youtube.com" rel="nofollow"&gt;YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-11-20 - &lt;a href="https://noti.st/lornajane/HvDH7U/introduction-to-openapi" rel="nofollow"&gt;Introduction to OpenAPI&lt;/a&gt; by &lt;a href="https://twitter.com/lornajane" rel="nofollow"&gt;Lorna Mitchell&lt;/a&gt; at &lt;a href="https://gotocph.com/2019/" rel="nofollow"&gt;GOTO Copenhagen 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-11-20 - &lt;a href="https://dotnetthoughts.net/how-to-generate-angular-code-from-openapi-specifications/" rel="nofollow"&gt;How to Generate Angular code from OpenAPI specifications&lt;/a&gt; by Anuraj&lt;/li&gt;
&lt;li&gt;2019-11-23 - &lt;a href="https://www.slideshare.net/techblogyahoo/swagger-openapi-specification-30-api" rel="nofollow"&gt;Swagger ではない OpenAPI Specification 3.0 による API サーバー開発&lt;/a&gt; by &lt;a href="https://github.com/t2y"&gt;Tetsuya Morimoto&lt;/a&gt; at &lt;a href="https://ccc2019fall.java-users.jp/" rel="nofollow"&gt;JJUG CCC 2019 Fall&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-11-24 - &lt;a href="https://medium.com/@irinasouthwell_220/accelerate-flutter-development-with-openapi-and-dart-code-generation-1f16f8329a6a" rel="nofollow"&gt;Accelerate Flutter development with OpenAPI and Dart code generation&lt;/a&gt; by &lt;a href="https://medium.com/@irinasouthwell_220" rel="nofollow"&gt;Irina Southwell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-11-25 - &lt;a href="https://qiita.com/pochopocho13/items/8db662e1934fb2b408b8" rel="nofollow"&gt;openapi-generatorで手軽にスタブサーバとクライアントの生成&lt;/a&gt; by &lt;a href="https://twitter.com/pochopocho13" rel="nofollow"&gt;@pochopocho13&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-11-26 - &lt;a href="https://blog.b9lab.com/cordacon-2019-highlights-braid-server-and-openapi-generator-for-corda-flows-api-s-d24179ccb27c" rel="nofollow"&gt;CordaCon 2019 Highlights: Braid Server and OpenAPI Generator for Corda Client API’s&lt;/a&gt; by &lt;a href="https://blog.b9lab.com/@adelrestom" rel="nofollow"&gt;Adel Rustum&lt;/a&gt; at &lt;a href="https://blog.b9lab.com/" rel="nofollow"&gt;B9lab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-12-04 - &lt;a href="https://qiita.com/teracy55/items/0327c7a170ec772970c6" rel="nofollow"&gt;Angular＋NestJS＋OpenAPI（Swagger）でマイクロサービスを視野に入れた環境を考える&lt;/a&gt; by &lt;a href="https://twitter.com/teracy55" rel="nofollow"&gt;てらしー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-12-17 - &lt;a href="https://www.techscore.com/blog/2019/12/17/openapi-generator-oauth2-accesstoken/" rel="nofollow"&gt;OpenAPI Generator で OAuth2 アクセストークン発行のコードまで生成してみる&lt;/a&gt; by &lt;a href="https://www.techscore.com/blog/" rel="nofollow"&gt;TECHSCORE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-12-23 - &lt;a href="https://www.electronicdesign.com/technologies/embedded-revolution/article/21119177/use-ada-for-your-web-development" rel="nofollow"&gt;Use Ada for Your Web Development&lt;/a&gt; by &lt;a href="https://github.com/stcarrez"&gt;Stephane Carrez&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-01-17 - &lt;a href="https://www.youtube.com/watch?v=mFBP-M0ZPfw&amp;amp;t=178s" rel="nofollow"&gt;OpenAPI demo for Pulp 3.0 GA&lt;/a&gt; by &lt;a href="https://www.youtube.com/channel/UCI43Ffs4VPDv7awXvvBJfRQ" rel="nofollow"&gt;Pulp&lt;/a&gt; at &lt;a href="https://www.youtube.com/" rel="nofollow"&gt;Youtube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-01-19 - &lt;a href="https://dev.to/rolfstreefkerk/why-document-a-rest-api-as-code-5e7p" rel="nofollow"&gt;Why document a REST API as code?&lt;/a&gt; by &lt;a href="https://github.com/rpstreef"&gt;Rolf Streefkerk&lt;/a&gt; at &lt;a href="https://dev.to" rel="nofollow"&gt;DEV Community&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-6---about-us" class="anchor" aria-hidden="true" href="#6---about-us"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;6 - About Us&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-61---openapi-generator-core-team" class="anchor" aria-hidden="true" href="#61---openapi-generator-core-team"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;6.1 - OpenAPI Generator Core Team&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;OpenAPI Generator core team members are contributors who have been making significant contributions (review issues, fix bugs, make enhancements, etc) to the project on a regular basis.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-core-team-members" class="anchor" aria-hidden="true" href="#core-team-members"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core Team Members&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wing328"&gt;@wing328&lt;/a&gt; (2015/07) &lt;a href="https://www.patreon.com/wing328" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jimschubert"&gt;@jimschubert&lt;/a&gt; (2016/05) &lt;a href="https://www.patreon.com/jimschubert" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cbornet"&gt;@cbornet&lt;/a&gt; (2016/05)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ackintosh"&gt;@ackintosh&lt;/a&gt; (2018/02) &lt;a href="https://www.patreon.com/ackintosh/overview" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jmini"&gt;@jmini&lt;/a&gt; (2018/04)  &lt;a href="https://www.patreon.com/jmini" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/etherealjoy"&gt;@etherealjoy&lt;/a&gt; (2019/06)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; = Link to support the contributor directly&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-template-creator" class="anchor" aria-hidden="true" href="#template-creator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Template Creator&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Embedded templates are only supported in &lt;em&gt;Mustache&lt;/em&gt; format. Support for all other formats is experimental and subject to change at any time.&lt;/p&gt;
&lt;p&gt;Here is a list of template creators:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;API Clients:
&lt;ul&gt;
&lt;li&gt;Ada: @stcarrez&lt;/li&gt;
&lt;li&gt;Apex: @asnelling&lt;/li&gt;
&lt;li&gt;Bash: @bkryza&lt;/li&gt;
&lt;li&gt;C: @PowerOfCreation @zhemant &lt;a href="https://www.patreon.com/zhemant" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C++ REST: @Danielku15&lt;/li&gt;
&lt;li&gt;C# (.NET 2.0): @who&lt;/li&gt;
&lt;li&gt;C# (.NET Standard 1.3 ): @Gronsak&lt;/li&gt;
&lt;li&gt;C# (.NET 4.5 refactored): @jimschubert &lt;a href="https://www.patreon.com/jimschubert" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clojure: @xhh&lt;/li&gt;
&lt;li&gt;Dart: @yissachar&lt;/li&gt;
&lt;li&gt;Dart (refactor): @joernahrens&lt;/li&gt;
&lt;li&gt;Dart 2: @swipesight&lt;/li&gt;
&lt;li&gt;Dart (Jaguar): @jaumard&lt;/li&gt;
&lt;li&gt;Dart (Dio): @athornz&lt;/li&gt;
&lt;li&gt;Elixir: @niku&lt;/li&gt;
&lt;li&gt;Elm: @eriktim&lt;/li&gt;
&lt;li&gt;Eiffel: @jvelilla&lt;/li&gt;
&lt;li&gt;Erlang: @tsloughter&lt;/li&gt;
&lt;li&gt;Erlang (PropEr): @jfacorro @robertoaloi&lt;/li&gt;
&lt;li&gt;Groovy: @victorgit&lt;/li&gt;
&lt;li&gt;Go: @wing328 &lt;a href="https://www.patreon.com/wing328" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Go (rewritten in 2.3.0): @antihax&lt;/li&gt;
&lt;li&gt;Haskell (http-client): @jonschoning&lt;/li&gt;
&lt;li&gt;Java (Feign): @davidkiss&lt;/li&gt;
&lt;li&gt;Java (Retrofit): @0legg&lt;/li&gt;
&lt;li&gt;Java (Retrofit2): @emilianobonassi&lt;/li&gt;
&lt;li&gt;Java (Jersey2): @xhh&lt;/li&gt;
&lt;li&gt;Java (okhttp-gson): @xhh&lt;/li&gt;
&lt;li&gt;Java (RestTemplate): @nbruno&lt;/li&gt;
&lt;li&gt;Java (Spring 5 WebClient): @daonomic&lt;/li&gt;
&lt;li&gt;Java (RESTEasy): @gayathrigs&lt;/li&gt;
&lt;li&gt;Java (Vertx): @lopesmcc&lt;/li&gt;
&lt;li&gt;Java (Google APIs Client Library): @charlescapps&lt;/li&gt;
&lt;li&gt;Java (Rest-assured): @viclovsky&lt;/li&gt;
&lt;li&gt;Java (Java 11 Native HTTP client): @bbdouglas&lt;/li&gt;
&lt;li&gt;Javascript/NodeJS: @jfiala&lt;/li&gt;
&lt;li&gt;Javascript (Closure-annotated Angular) @achew22&lt;/li&gt;
&lt;li&gt;Javascript (Flow types) @jaypea&lt;/li&gt;
&lt;li&gt;JMeter: @davidkiss&lt;/li&gt;
&lt;li&gt;Kotlin: @jimschubert &lt;a href="https://www.patreon.com/jimschubert" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kotlin (MultiPlatform): @andrewemery&lt;/li&gt;
&lt;li&gt;Lua: @daurnimator&lt;/li&gt;
&lt;li&gt;Nim: @hokamoto&lt;/li&gt;
&lt;li&gt;OCaml: @cgensoul&lt;/li&gt;
&lt;li&gt;Perl: @wing328 &lt;a href="https://www.patreon.com/wing328" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;PHP (Guzzle): @baartosz&lt;/li&gt;
&lt;li&gt;PowerShell: @beatcracker&lt;/li&gt;
&lt;li&gt;Python-experimental: @spacether&lt;/li&gt;
&lt;li&gt;R: @ramnov&lt;/li&gt;
&lt;li&gt;Ruby (Faraday): @meganemura @dkliban&lt;/li&gt;
&lt;li&gt;Rust: @farcaller&lt;/li&gt;
&lt;li&gt;Rust (rust-server): @metaswitch&lt;/li&gt;
&lt;li&gt;Scala (scalaz &amp;amp; http4s): @tbrown1979&lt;/li&gt;
&lt;li&gt;Scala (Akka): @cchafer&lt;/li&gt;
&lt;li&gt;Swift: @tkqubo&lt;/li&gt;
&lt;li&gt;Swift 3: @hexelon&lt;/li&gt;
&lt;li&gt;Swift 4: @ehyche&lt;/li&gt;
&lt;li&gt;Swift 5: @4brunu&lt;/li&gt;
&lt;li&gt;TypeScript (Angular1): @mhardorf&lt;/li&gt;
&lt;li&gt;TypeScript (Angular2): @roni-frantchi&lt;/li&gt;
&lt;li&gt;TypeScript (Angular6): @akehir&lt;/li&gt;
&lt;li&gt;TypeScript (Angular7): @topce&lt;/li&gt;
&lt;li&gt;TypeScript (Axios): @nicokoenig&lt;/li&gt;
&lt;li&gt;TypeScript (Fetch): @leonyu&lt;/li&gt;
&lt;li&gt;TypeScript (jQuery): @bherila&lt;/li&gt;
&lt;li&gt;TypeScript (Node):  @mhardorf&lt;/li&gt;
&lt;li&gt;TypeScript (Rxjs): @denyo&lt;/li&gt;
&lt;li&gt;TypeScript (Inversify): @gualtierim&lt;/li&gt;
&lt;li&gt;TypeScript (redux-query): @petejohansonxo&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Server Stubs
&lt;ul&gt;
&lt;li&gt;Ada: @stcarrez&lt;/li&gt;
&lt;li&gt;C# ASP.NET 5: @jimschubert &lt;a href="https://www.patreon.com/jimschubert" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C# ASP.NET Core 3.0: @A-Joshi&lt;/li&gt;
&lt;li&gt;C# NancyFX: @mstefaniuk&lt;/li&gt;
&lt;li&gt;C++ (Qt5 QHttpEngine): @etherealjoy&lt;/li&gt;
&lt;li&gt;C++ Pistache: @sebymiano&lt;/li&gt;
&lt;li&gt;C++ Restbed: @stkrwork&lt;/li&gt;
&lt;li&gt;Erlang Server: @galaxie&lt;/li&gt;
&lt;li&gt;F# (Giraffe) Server: @nmfisher&lt;/li&gt;
&lt;li&gt;Go Server: @guohuang&lt;/li&gt;
&lt;li&gt;Go (Gin) Server: @kemokemo&lt;/li&gt;
&lt;li&gt;GraphQL Express Server: @renepardon&lt;/li&gt;
&lt;li&gt;Haskell Servant: @algas&lt;/li&gt;
&lt;li&gt;Java MSF4J: @sanjeewa-malalgoda&lt;/li&gt;
&lt;li&gt;Java Spring Boot: @diyfr&lt;/li&gt;
&lt;li&gt;Java Undertow: @stevehu&lt;/li&gt;
&lt;li&gt;Java Play Framework: @JFCote&lt;/li&gt;
&lt;li&gt;Java PKMST: @anshu2185 @sanshuman @rkumar-pk @ninodpillai&lt;/li&gt;
&lt;li&gt;Java Vert.x: @lwlee2608&lt;/li&gt;
&lt;li&gt;JAX-RS RestEasy: @chameleon82&lt;/li&gt;
&lt;li&gt;JAX-RS CXF: @hiveship&lt;/li&gt;
&lt;li&gt;JAX-RS CXF (CDI): @nickcmaynard&lt;/li&gt;
&lt;li&gt;JAX-RS RestEasy (JBoss EAP): @jfiala&lt;/li&gt;
&lt;li&gt;Kotlin: @jimschubert &lt;a href="https://www.patreon.com/jimschubert" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kotlin (Spring Boot): @dr4ke616&lt;/li&gt;
&lt;li&gt;Kotlin (Vertx): @Wooyme&lt;/li&gt;
&lt;li&gt;NodeJS Express: @YishTish&lt;/li&gt;
&lt;li&gt;PHP Laravel: @renepardon&lt;/li&gt;
&lt;li&gt;PHP Lumen: @abcsun&lt;/li&gt;
&lt;li&gt;PHP Slim: @jfastnacht&lt;/li&gt;
&lt;li&gt;PHP Symfony: @ksm2&lt;/li&gt;
&lt;li&gt;PHP Zend Expressive (with Path Handler): @Articus&lt;/li&gt;
&lt;li&gt;Python AIOHTTP: @Jyhess&lt;/li&gt;
&lt;li&gt;Ruby on Rails 5: @zlx&lt;/li&gt;
&lt;li&gt;Rust (rust-server): @metaswitch&lt;/li&gt;
&lt;li&gt;Scala Finch: @jimschubert &lt;a href="https://www.patreon.com/jimschubert" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Scala Lagom: @gmkumar2005&lt;/li&gt;
&lt;li&gt;Scala Play: @adigerber&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Documentation
&lt;ul&gt;
&lt;li&gt;AsciiDoc: @man-at-home&lt;/li&gt;
&lt;li&gt;HTML Doc 2: @jhitchcock&lt;/li&gt;
&lt;li&gt;Confluence Wiki: @jhitchcock&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Configuration
&lt;ul&gt;
&lt;li&gt;Apache2: @stkrwork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Schema
&lt;ul&gt;
&lt;li&gt;Avro: @sgadouar&lt;/li&gt;
&lt;li&gt;GraphQL: @wing328 &lt;a href="https://www.patreon.com/wing328" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MySQL: @ybelenko&lt;/li&gt;
&lt;li&gt;Protocol Buffer: @wing328&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; = Link to support the contributor directly&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-how-to-join-the-core-team" class="anchor" aria-hidden="true" href="#how-to-join-the-core-team"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to join the core team&lt;/h4&gt;
&lt;p&gt;Here are the requirements to become a core team member:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rank within top 50 in &lt;a href="https://github.com/openapitools/openapi-generator/graphs/contributors"&gt;https://github.com/openapitools/openapi-generator/graphs/contributors&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;to contribute, here are some good &lt;a href="https://github.com/openapitools/openapi-generator/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22"&gt;starting points&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;regular contributions to the project
&lt;ul&gt;
&lt;li&gt;about 3 hours per week&lt;/li&gt;
&lt;li&gt;for contribution, it can be addressing issues, reviewing PRs submitted by others, submitting PR to fix bugs or make enhancements, etc&lt;/li&gt;
&lt;li&gt;must be active in the past 3 months at the time of application&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To join the core team, please reach out to &lt;a href="mailto:team@openapitools.org"&gt;team@openapitools.org&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;To become a Template Creator, simply submit a PR for new API client (e.g. Rust, Elixir) or server stub (e.g. Ruby Grape) generator.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-62---openapi-generator-technical-committee" class="anchor" aria-hidden="true" href="#62---openapi-generator-technical-committee"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;6.2 - OpenAPI Generator Technical Committee&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Members of the OpenAPI Generator technical committee shoulder the following responsibilities:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Provides guidance and direction to other users&lt;/li&gt;
&lt;li&gt;Reviews pull requests and issues&lt;/li&gt;
&lt;li&gt;Improves the generator by making enhancements, fixing bugs or updating documentations&lt;/li&gt;
&lt;li&gt;Sets the technical direction of the generator&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Who is eligible? Those who want to join must have at least 3 PRs merged into a generator. (Exceptions can be granted to template creators or contributors who have made a lot of code changes with less than 3 merged PRs)&lt;/p&gt;
&lt;p&gt;If you want to join the committee, please kindly apply by sending an email to &lt;a href="mailto:team@openapitools.org"&gt;team@openapitools.org&lt;/a&gt; with your Github ID.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-members-of-technical-committee" class="anchor" aria-hidden="true" href="#members-of-technical-committee"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Members of Technical Committee&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Languages&lt;/th&gt;
&lt;th align="left"&gt;Member (join date)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;ActionScript&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Ada&lt;/td&gt;
&lt;td align="left"&gt;@stcarrez (2018/02) @micheleISEP (2018/02)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Android&lt;/td&gt;
&lt;td align="left"&gt;@jaz-ah (2017/09)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Apex&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Bash&lt;/td&gt;
&lt;td align="left"&gt;@frol (2017/07) @bkryza (2017/08) @kenjones-cisco (2017/09)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;C&lt;/td&gt;
&lt;td align="left"&gt;@zhemant (2018/11) @ityuhui (2019/12)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;C++&lt;/td&gt;
&lt;td align="left"&gt;@ravinikam (2017/07) @stkrwork (2017/07) @etherealjoy (2018/02) @martindelille (2018/03) @muttleyxd (2019/08)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;C#&lt;/td&gt;
&lt;td align="left"&gt;@mandrean (2017/08), @jimschubert (2017/09) &lt;a href="https://www.patreon.com/jimschubert" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt; @frankyjuang (2019/09)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Clojure&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Dart&lt;/td&gt;
&lt;td align="left"&gt;@ircecho (2017/07) @swipesight (2018/09) @jaumard (2018/09) @nickmeinhold (2019/09) @athornz (2019/12) @amondnet (2019/12)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Eiffel&lt;/td&gt;
&lt;td align="left"&gt;@jvelilla (2017/09)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Elixir&lt;/td&gt;
&lt;td align="left"&gt;@mrmstn (2018/12)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Elm&lt;/td&gt;
&lt;td align="left"&gt;@eriktim (2018/09)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Erlang&lt;/td&gt;
&lt;td align="left"&gt;@tsloughter (2017/11) @jfacorro (2018/10) @robertoaloi (2018/10)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;F#&lt;/td&gt;
&lt;td align="left"&gt;@nmfisher (2019/05)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Go&lt;/td&gt;
&lt;td align="left"&gt;@antihax (2017/11) @bvwells (2017/12) @grokify (2018/07) @kemokemo (2018/09) @bkabrda (2019/07)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;GraphQL&lt;/td&gt;
&lt;td align="left"&gt;@renepardon (2018/12)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Groovy&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Haskell&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Java&lt;/td&gt;
&lt;td align="left"&gt;@bbdouglas (2017/07) @sreeshas (2017/08) @jfiala (2017/08) @lukoyanov (2017/09) @cbornet (2017/09) @jeff9finger (2018/01) @karismann (2019/03) @Zomzog (2019/04) @lwlee2608 (2019/10)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Kotlin&lt;/td&gt;
&lt;td align="left"&gt;@jimschubert (2017/09) &lt;a href="https://www.patreon.com/jimschubert" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;, @dr4ke616 (2018/08) @karismann (2019/03) @Zomzog (2019/04) @andrewemery (2019/10) @4brunu (2019/11)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Lua&lt;/td&gt;
&lt;td align="left"&gt;@daurnimator (2017/08)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Nim&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;NodeJS/Javascript&lt;/td&gt;
&lt;td align="left"&gt;@CodeNinjai (2017/07) @frol (2017/07) @cliffano (2017/07)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;ObjC&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;OCaml&lt;/td&gt;
&lt;td align="left"&gt;@cgensoul (2019/08)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Perl&lt;/td&gt;
&lt;td align="left"&gt;@wing328 (2017/07) &lt;a href="https://www.patreon.com/wing328" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt; @yue9944882 (2019/06)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;PHP&lt;/td&gt;
&lt;td align="left"&gt;@jebentier (2017/07), @dkarlovi (2017/07), @mandrean (2017/08), @jfastnacht (2017/09), @ackintosh (2017/09) &lt;a href="https://www.patreon.com/ackintosh/overview" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;, @ybelenko (2018/07), @renepardon (2018/12)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;PowerShell&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Python&lt;/td&gt;
&lt;td align="left"&gt;@taxpon (2017/07) @frol (2017/07) @mbohlool (2017/07) @cbornet (2017/09) @kenjones-cisco (2017/11) @tomplus (2018/10) @Jyhess (2019/01) @slash-arun (2019/11) @spacether (2019/11)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;R&lt;/td&gt;
&lt;td align="left"&gt;@Ramanth (2019/07) @saigiridhar21 (2019/07)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Ruby&lt;/td&gt;
&lt;td align="left"&gt;@cliffano (2017/07) @zlx (2017/09) @autopp (2019/02)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Rust&lt;/td&gt;
&lt;td align="left"&gt;@frol (2017/07) @farcaller (2017/08) @bjgill (2017/12) @richardwhiuk (2019/07)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Scala&lt;/td&gt;
&lt;td align="left"&gt;@clasnake (2017/07), @jimschubert (2017/09) &lt;a href="https://www.patreon.com/jimschubert" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;, @shijinkui  (2018/01), @ramzimaalej (2018/03)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift&lt;/td&gt;
&lt;td align="left"&gt;@jgavris (2017/07) @ehyche (2017/08) @Edubits (2017/09) @jaz-ah (2017/09) @4brunu (2019/11)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;TypeScript&lt;/td&gt;
&lt;td align="left"&gt;@TiFu (2017/07) @taxpon (2017/07) @sebastianhaas (2017/07) @kenisteward (2017/07) @Vrolijkx (2017/09) @macjohnny (2018/01) @nicokoenig (2018/09) @topce (2018/10) @akehir (2019/07) @petejohansonxo (2019/11)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; = Link to support the contributor directly&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-63---history-of-openapi-generator" class="anchor" aria-hidden="true" href="#63---history-of-openapi-generator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;6.3 - History of OpenAPI Generator&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;OpenAPI Generator is a fork of &lt;a href="https://github.com/swagger-api/swagger-codegen"&gt;Swagger Codegen&lt;/a&gt;. In view of the issues with the Swagger Codegen 3.0.0 (beta) release and the disagreement on the project's direction, more than 40 top contributors and template creators of Swagger Codegen decided to fork Swagger Codegen and maintain a community-driven version called "OpenAPI Generator". Please refer to the &lt;a href="docs/qna.md"&gt;Q&amp;amp;A&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-founding-members-alphabetical-order" class="anchor" aria-hidden="true" href="#founding-members-alphabetical-order"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Founding Members (alphabetical order):&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ackintosh"&gt;Akihito Nakano&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/galaxie"&gt;Artem Ocheredko&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Articus"&gt;Arthur Mogliev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bkryza"&gt;Bartek Kryza&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bvwells"&gt;Ben Wells&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bjgill"&gt;Benjamin Gill&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cbornet"&gt;Christophe Bornet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cliffano"&gt;Cliffano Subagio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/d-date"&gt;Daiki Matsudate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Danielku15"&gt;Daniel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emilianobonassi"&gt;Emiliano Bonassi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eriktim"&gt;Erik Timmers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/macjohnny"&gt;Esteban Marin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gustavoapaz"&gt;Gustavo Paz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jvelilla"&gt;Javier Velilla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JFCote"&gt;Jean-François Côté&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jimschubert"&gt;Jim Schubert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jonschoning"&gt;Jon Schoning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jmini"&gt;Jérémie Bresson&lt;/a&gt; &lt;a href="https://www.patreon.com/jmini" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jayearn"&gt;Jörn Ahrens&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kenisteward"&gt;Keni Steward&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mstefaniuk"&gt;Marcin Stefaniuk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MartinDelille"&gt;Martin Delille&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/algas"&gt;Masahiro Yamauchi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/micheleISEP"&gt;Michele Albano&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ramzimaalej"&gt;Ramzi Maalej&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ravinikam"&gt;Ravindra Nikam&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ricardona"&gt;Ricardo Cardona&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sebastianhaas"&gt;Sebastian Haas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mandrean"&gt;Sebastian Mandrean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sreeshas"&gt;Sreenidhi Sreesha&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stkrwork"&gt;Stefan Krismann&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stcarrez"&gt;Stephane Carrez&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/taxpon"&gt;Takuro Wada&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tomplus"&gt;Tomasz Prus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tsloughter"&gt;Tristan Sloughter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/viclovsky"&gt;Victor Orlovsky&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/victorgit"&gt;Victor Trakhtenberg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/frol"&gt;Vlad Frolov&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/farcaller"&gt;Vladimir Pouzanov&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wing328"&gt;William Cheng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xmeng1"&gt;Xin Meng&lt;/a&gt; &lt;a href="https://www.patreon.com/user/overview?u=16435385" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xhh"&gt;Xu Hui Hui&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/antihax"&gt;antihax&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/beatcracker"&gt;beatcracker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https:/github.com/daurnimator"&gt;daurnimator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/etherealjoy"&gt;etherealjoy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jfiala"&gt;jfiala&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lukoyanov"&gt;lukoyanov&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; = Link to support the contributor directly&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-7---license" class="anchor" aria-hidden="true" href="#7---license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;7 - License&lt;/a&gt;&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;Copyright 2018 OpenAPI-Generator Contributors (&lt;a href="https://openapi-generator.tech" rel="nofollow"&gt;https://openapi-generator.tech&lt;/a&gt;)&lt;br&gt;
Copyright 2018 SmartBear Software&lt;/p&gt;
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at &lt;a href="https://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.&lt;/p&gt;
&lt;hr&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>OpenAPITools</author><guid isPermaLink="false">https://github.com/OpenAPITools/openapi-generator</guid><pubDate>Tue, 28 Jan 2020 00:17:00 GMT</pubDate></item><item><title>junit-team/junit5 #18 in Java, This week</title><link>https://github.com/junit-team/junit5</link><description>&lt;p&gt;&lt;i&gt;The next generation of JUnit.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-junit-5" class="anchor" aria-hidden="true" href="#junit-5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/049cbfc3f4c820fe5aa0b376a703a975ab75181a/68747470733a2f2f6a756e69742e6f72672f6a756e6974352f6173736574732f696d672f6a756e6974352d6c6f676f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/049cbfc3f4c820fe5aa0b376a703a975ab75181a/68747470733a2f2f6a756e69742e6f72672f6a756e6974352f6173736574732f696d672f6a756e6974352d6c6f676f2e706e67" align="right" width="100" data-canonical-src="https://junit.org/junit5/assets/img/junit5-logo.png" style="max-width:100%;"&gt;&lt;/a&gt;JUnit 5&lt;/h1&gt;
&lt;p&gt;This repository is the home of the next generation of JUnit, &lt;em&gt;JUnit 5&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://junit.org/sponsoring" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1597b604822c290530d542fe3f13dba8cc696f15/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539322539412d537570706f72742532304a556e69742d627269676874677265656e2e737667" alt="Support JUnit" data-canonical-src="https://img.shields.io/badge/%F0%9F%92%9A-Support%20JUnit-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-latest-releases" class="anchor" aria-hidden="true" href="#latest-releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Latest Releases&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;General Availability (GA): &lt;a href="https://github.com/junit-team/junit5/releases/tag/r5.6.0"&gt;JUnit 5.6.0&lt;/a&gt; (January 20, 2020).&lt;/li&gt;
&lt;li&gt;Preview (Milestone/Release Candidate): n/a&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://junit.org/junit5/docs/current/user-guide/" rel="nofollow"&gt;User Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://junit.org/junit5/docs/current/api/" rel="nofollow"&gt;Javadoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://junit.org/junit5/docs/current/release-notes/" rel="nofollow"&gt;Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/junit-team/junit5-samples"&gt;Samples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Contributions to JUnit 5 are both welcomed and appreciated. For specific guidelines
regarding contributions, please see &lt;a href="https://github.com/junit-team/junit5/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; in the root directory of the
project. Those willing to use milestone or SNAPSHOT releases are encouraged
to file feature requests and bug reports using the project's
&lt;a href="https://github.com/junit-team/junit5/issues"&gt;issue tracker&lt;/a&gt;. Issues marked with an
&lt;a href="https://github.com/junit-team/junit5/issues?q=is%3Aissue+is%3Aopen+label%3Aup-for-grabs"&gt;&lt;code&gt;up-for-grabs&lt;/code&gt;&lt;/a&gt;
label are specifically targeted for community contributions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help&lt;/h2&gt;
&lt;p&gt;Ask JUnit 5 related questions on &lt;a href="https://stackoverflow.com/questions/tagged/junit5" rel="nofollow"&gt;StackOverflow&lt;/a&gt; or chat with the team and the community on &lt;a href="https://gitter.im/junit-team/junit5" rel="nofollow"&gt;Gitter&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-continuous-integration-builds" class="anchor" aria-hidden="true" href="#continuous-integration-builds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Continuous Integration Builds&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/junit-team/junit5/actions"&gt;&lt;img src="https://github.com/junit-team/junit5/workflows/CI/badge.svg" alt="CI Status" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/junit-team/junit5/actions"&gt;&lt;img src="https://github.com/junit-team/junit5/workflows/Cross-Version/badge.svg" alt="Cross-Version Status" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Official CI build server for JUnit 5. Used to perform quick checks on submitted pull
requests and for build matrices including the latest released OpenJDK and early access
builds of the next OpenJDK.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-code-coverage" class="anchor" aria-hidden="true" href="#code-coverage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Coverage&lt;/h2&gt;
&lt;p&gt;Code coverage using &lt;a href="https://www.eclemma.org/jacoco/" rel="nofollow"&gt;JaCoCo&lt;/a&gt; for the latest build is available on &lt;a href="https://codecov.io/gh/junit-team/junit5" rel="nofollow"&gt;Codecov&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A code coverage report can also be generated locally via the &lt;a href="https://docs.gradle.org/current/userguide/gradle_wrapper.html#sec:using_wrapper" rel="nofollow"&gt;Gradle Wrapper&lt;/a&gt; by
executing &lt;code&gt;gradlew -PenableJaCoCo clean jacocoRootReport&lt;/code&gt;. The results will be available
in &lt;code&gt;build/reports/jacoco/jacocoRootReport/html/index.html&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-gradle-build-scans" class="anchor" aria-hidden="true" href="#gradle-build-scans"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle Build Scans&lt;/h2&gt;
&lt;p&gt;JUnit 5 utilizes &lt;a href="https://gradle.org/" rel="nofollow"&gt;Gradle's&lt;/a&gt; support for &lt;em&gt;Build Scans&lt;/em&gt;. An example
build scan for JUnit 5 can be viewed &lt;a href="https://scans.gradle.com/s/bl3pw4mrbgsao" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-from-source" class="anchor" aria-hidden="true" href="#building-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building from Source&lt;/h2&gt;
&lt;p&gt;You need &lt;a href="https://jdk.java.net/11/" rel="nofollow"&gt;JDK 11&lt;/a&gt; to build JUnit 5.&lt;/p&gt;
&lt;p&gt;All modules can be &lt;em&gt;built&lt;/em&gt; with the &lt;a href="https://docs.gradle.org/current/userguide/gradle_wrapper.html#sec:using_wrapper" rel="nofollow"&gt;Gradle Wrapper&lt;/a&gt; using the following command.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gradlew clean assemble&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;All modules can be &lt;em&gt;tested&lt;/em&gt; with the &lt;a href="https://docs.gradle.org/current/userguide/gradle_wrapper.html#sec:using_wrapper" rel="nofollow"&gt;Gradle Wrapper&lt;/a&gt; using the following command.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gradlew clean test&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Since Gradle has excellent incremental build support, you can usually omit executing the
&lt;code&gt;clean&lt;/code&gt; task.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing-in-local-maven-repository" class="anchor" aria-hidden="true" href="#installing-in-local-maven-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing in Local Maven Repository&lt;/h2&gt;
&lt;p&gt;All modules can be &lt;em&gt;installed&lt;/em&gt; with the &lt;a href="https://docs.gradle.org/current/userguide/gradle_wrapper.html#sec:using_wrapper" rel="nofollow"&gt;Gradle Wrapper&lt;/a&gt; in a local Maven repository for
consumption in other projects via the following command.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gradlew clean publishToMavenLocal&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dependency-metadata" class="anchor" aria-hidden="true" href="#dependency-metadata"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependency Metadata&lt;/h2&gt;
&lt;p&gt;The following sections list the dependency metadata for the JUnit Platform, JUnit
Jupiter, and JUnit Vintage.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="https://repo1.maven.org/maven2/org/junit/" rel="nofollow"&gt;https://repo1.maven.org/maven2/org/junit/&lt;/a&gt; for releases and &lt;a href="https://oss.sonatype.org/content/repositories/snapshots/org/junit/" rel="nofollow"&gt;https://oss.sonatype.org/content/repositories/snapshots/org/junit/&lt;/a&gt; for snapshots.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-junit-platform" class="anchor" aria-hidden="true" href="#junit-platform"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JUnit Platform&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Group ID&lt;/strong&gt;: &lt;code&gt;org.junit.platform&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Version&lt;/strong&gt;: &lt;code&gt;1.6.0&lt;/code&gt; or &lt;code&gt;1.7.0-SNAPSHOT&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Artifact IDs&lt;/strong&gt; and Java &lt;strong&gt;module&lt;/strong&gt; name:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;junit-platform-commons&lt;/code&gt; (&lt;code&gt;org.junit.platform.commons&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;junit-platform-console&lt;/code&gt; (&lt;code&gt;org.junit.platform.console&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;junit-platform-console-standalone&lt;/code&gt; (&lt;em&gt;N/A&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;junit-platform-engine&lt;/code&gt; (&lt;code&gt;org.junit.platform.engine&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;junit-platform-launcher&lt;/code&gt; (&lt;code&gt;org.junit.platform.launcher&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;junit-platform-reporting&lt;/code&gt; (&lt;code&gt;org.junit.platform.reporting&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;junit-platform-runner&lt;/code&gt; (&lt;code&gt;org.junit.platform.runner&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;junit-platform-suite-api&lt;/code&gt; (&lt;code&gt;org.junit.platform.suite.api&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;junit-platform-testkit&lt;/code&gt; (&lt;code&gt;org.junit.platform.testkit&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-junit-jupiter" class="anchor" aria-hidden="true" href="#junit-jupiter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JUnit Jupiter&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Group ID&lt;/strong&gt;: &lt;code&gt;org.junit.jupiter&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Version&lt;/strong&gt;: &lt;code&gt;5.6.0&lt;/code&gt; or &lt;code&gt;5.7.0-SNAPSHOT&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Artifact IDs&lt;/strong&gt; and Java &lt;strong&gt;module&lt;/strong&gt; name:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;junit-jupiter&lt;/code&gt; (&lt;code&gt;org.junit.jupiter&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;junit-jupiter-api&lt;/code&gt; (&lt;code&gt;org.junit.jupiter.api&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;junit-jupiter-engine&lt;/code&gt; (&lt;code&gt;org.junit.jupiter.engine&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;junit-jupiter-migrationsupport&lt;/code&gt; (&lt;code&gt;org.junit.jupiter.migrationsupport&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;junit-jupiter-params&lt;/code&gt; (&lt;code&gt;org.junit.jupiter.params&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-junit-vintage" class="anchor" aria-hidden="true" href="#junit-vintage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JUnit Vintage&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Group ID&lt;/strong&gt;: &lt;code&gt;org.junit.vintage&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Version&lt;/strong&gt;: &lt;code&gt;5.6.0&lt;/code&gt; or &lt;code&gt;5.7.0-SNAPSHOT&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Artifact ID&lt;/strong&gt; and Java &lt;strong&gt;module&lt;/strong&gt; name:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;junit-vintage-engine&lt;/code&gt; (&lt;code&gt;org.junit.vintage.engine&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-bill-of-materials-bom" class="anchor" aria-hidden="true" href="#bill-of-materials-bom"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bill of Materials (BOM)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Group ID&lt;/strong&gt;: &lt;code&gt;org.junit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Artifact ID&lt;/strong&gt; &lt;code&gt;junit-bom&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Version&lt;/strong&gt;: &lt;code&gt;5.6.0&lt;/code&gt; or &lt;code&gt;5.7.0-SNAPSHOT&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>junit-team</author><guid isPermaLink="false">https://github.com/junit-team/junit5</guid><pubDate>Tue, 28 Jan 2020 00:18:00 GMT</pubDate></item><item><title>quarkusio/quarkus-quickstarts #19 in Java, This week</title><link>https://github.com/quarkusio/quarkus-quickstarts</link><description>&lt;p&gt;&lt;i&gt;Quarkus quickstart code&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-getting-started-guides" class="anchor" aria-hidden="true" href="#getting-started-guides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started Guides&lt;/h1&gt;
&lt;p&gt;This repository contains a set of examples about the Quarkus framework.&lt;/p&gt;
&lt;p&gt;See &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; for how to build these examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./getting-started"&gt;Getting Started&lt;/a&gt;: Application creation, Rest endpoint, Dependency Injection, Test, Packaging&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./getting-started-async"&gt;Getting Started - Async&lt;/a&gt;: Illustrate how to use &lt;code&gt;CompletionStage&lt;/code&gt; to handle asynchronous actions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./getting-started-knative"&gt;Getting Started - Knative&lt;/a&gt;: Deployment of the Knative service to Kubernetes and/or OpenShift&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./getting-started-testing"&gt;Getting Started - Testing&lt;/a&gt;: How to test your application&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./config-quickstart"&gt;Application Configuration&lt;/a&gt;: How to configure your application&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./lifecycle-quickstart"&gt;Startup and Shutdown actions&lt;/a&gt;: Explains how to execute code when the application starts and stops&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./amqp-quickstart"&gt;AMQP&lt;/a&gt;: How to interact with AMQP using MicroProfile reactive messaging&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./dynamodb-quickstart"&gt;Amazon DynamoDB&lt;/a&gt;: How to connect to an Amazon DynamoDB datastore&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./hibernate-orm-quickstart"&gt;Hibernate ORM and RESTEasy&lt;/a&gt;: Exposing a CRUD service over REST using Hibernate ORM to connect to a PostgreSQL database&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./hibernate-orm-panache-quickstart"&gt;Hibernate ORM with Panache and RESTEasy&lt;/a&gt;: Exposing a CRUD service over REST using Panache to connect to a PostgreSQL database&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./hibernate-search-elasticsearch-quickstart"&gt;Hibernate Search + Elasticsearch&lt;/a&gt;: Index your Hibernate entities in Elasticsearch to get full text search&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./infinispan-client-quickstart"&gt;Infinispan Client&lt;/a&gt;: How to use Infinispan Client. Covers creating caches and simple get/put&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./jms-quickstart"&gt;Artemis JMS&lt;/a&gt;: How to use the Artemis JMS extension&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./kafka-quickstart"&gt;Kafka&lt;/a&gt;: Use MicroProfile Reactive Messaging to interact with Apache Kafka&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./kafka-streams-quickstart"&gt;Kafka Streams&lt;/a&gt;: Use the Apache Kafka Streams API to implement stream processing applications based on Apache Kafka&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./kogito-quickstart"&gt;Kogito&lt;/a&gt;: How to use Kogito for business process automation with Drools and jBPM&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./microprofile-fault-tolerance-quickstart"&gt;MicroProfile Fault Tolerance&lt;/a&gt;: How to use MicroProfile Fault Tolerance&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./microprofile-health-quickstart"&gt;MicroProfile Health&lt;/a&gt;: How to use MicroProfile Health&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./microprofile-metrics-quickstart"&gt;MicroProfile Metrics&lt;/a&gt;: How to use MicroProfile Metrics&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./mongodb-quickstart"&gt;MongoDB&lt;/a&gt;: How to connect to a MongoDB datastore&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./mongodb-panache-quickstart"&gt;MongoDB with Panache&lt;/a&gt;: Simplify your MongoDB applications with Panache&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./mqtt-quickstart"&gt;MicroPofile Messaging MQTT&lt;/a&gt;: How to interact with MQTT using MicroProfile reactive messaging&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./neo4j-quickstart"&gt;Neo4j&lt;/a&gt;: How to connect to a Neo4j graph datastore&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./openapi-swaggerui-quickstart"&gt;OpenAPI and Swagger UI&lt;/a&gt;: Use OpenAPI and Swagger UI to expose your REST API and test your REST services&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./opentracing-quickstart"&gt;OpenTracing and Jaeger&lt;/a&gt;: How to use MicroProfile OpenTracing and Jaeger to monitor application performances&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./quartz-quickstart"&gt;Quartz&lt;/a&gt;: How to schedule periodic clustered jobs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./qute-quickstart"&gt;Qute&lt;/a&gt;: How to use the Qute templating engine in Quarkus&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./reactive-routes-quickstart"&gt;Reactive Routes&lt;/a&gt;: How to use Reactive Routes in Quarkus&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./rest-client-quickstart"&gt;REST Client&lt;/a&gt;: How to use MicroProfile's REST Client&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./rest-client-multipart-quickstart"&gt;REST Client Multipart&lt;/a&gt;: Handle multipart with MicroProfile's REST Client&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./rest-json-quickstart"&gt;JSON REST services&lt;/a&gt;: How to write JSON REST services&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./scheduler-quickstart"&gt;Scheduling periodic tasks&lt;/a&gt;: How to schedule periodic jobs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./security-jdbc-quickstart"&gt;Security with Users stored in a Database&lt;/a&gt;: Store your users in a database and secure your application&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./security-jwt-quickstart"&gt;Security with MicroProfile JWT&lt;/a&gt;: How to use MicroProfile JWT RBAC&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./security-oauth2-quickstart"&gt;Security with OAuth2 opaque tokens&lt;/a&gt;: How to use our security layer with OAuth2 opaque tokens&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./security-openid-connect-quickstart"&gt;Security with OpenId Connect&lt;/a&gt;: How to use OpenId Connect and &lt;a href="https://www.keycloak.org" rel="nofollow"&gt;Keycloak&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./spring-di-quickstart"&gt;Spring DI compatibility layer&lt;/a&gt;: How to use our Spring Dependency Injection compatibility layer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./spring-data-jpa-quickstart"&gt;Spring Data extension&lt;/a&gt;: How to use the Quarkus extension for the Spring Data API&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./spring-web-quickstart"&gt;Spring Web extension&lt;/a&gt;: How to use the Quarkus extension for the Spring Web API&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./spring-security-quickstart"&gt;Spring Security extension&lt;/a&gt;: How to use the Quarkus extension for the Spring Security API&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./software-transactional-memory-quickstart"&gt;Using STM&lt;/a&gt;: How to use the Narayana Software Transactional Memory extension&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./tika-quickstart"&gt;Apache Tika&lt;/a&gt;: Extract metadata and content from your documents&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./validation-quickstart"&gt;Validation with Hibernate Validator&lt;/a&gt;: How to use Hibernate Validator/Bean Validation in your REST services&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./vertx-quickstart"&gt;Using Vert.x&lt;/a&gt;: How to use the Vert.x extension&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./websockets-quickstart"&gt;Using Web Sockets&lt;/a&gt;: Demonstrate how to use web sockets and serve static assets&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There is documentation published at &lt;a href="https://quarkus.io" rel="nofollow"&gt;https://quarkus.io&lt;/a&gt; (docs' &lt;a href="https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc"&gt;sources are here&lt;/a&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;To compile and run these demos you will need:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JDK 8 or 11+&lt;/li&gt;
&lt;li&gt;GraalVM&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the &lt;a href="https://quarkus.io/guides/building-native-image" rel="nofollow"&gt;Building a Native Executable guide&lt;/a&gt; for help setting up your environment.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>quarkusio</author><guid isPermaLink="false">https://github.com/quarkusio/quarkus-quickstarts</guid><pubDate>Tue, 28 Jan 2020 00:19:00 GMT</pubDate></item><item><title>OpenRefine/OpenRefine #20 in Java, This week</title><link>https://github.com/OpenRefine/OpenRefine</link><description>&lt;p&gt;&lt;i&gt;OpenRefine is a free, open source power tool for working with messy data and improving it&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-openrefine" class="anchor" aria-hidden="true" href="#openrefine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenRefine&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitter.im/OpenRefine/OpenRefine?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/13ec0739c2e2ae7b0910985a4278f6ae538fc7a2/68747470733a2f2f6261646765732e6769747465722e696d2f4f70656e526566696e652f4f70656e526566696e652e737667" alt="Join the chat at https://gitter.im/OpenRefine/OpenRefine" data-canonical-src="https://badges.gitter.im/OpenRefine/OpenRefine.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.org/OpenRefine/OpenRefine" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/333110fe9999678e800717145f8b270a369d30eb/68747470733a2f2f7472617669732d63692e6f72672f4f70656e526566696e652f4f70656e526566696e652e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/OpenRefine/OpenRefine.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/github/OpenRefine/OpenRefine?branch=coveralls" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/269aa928d1017e480a212ac3a8efcd329470a245/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4f70656e526566696e652f4f70656e526566696e652f62616467652e7376673f6272616e63683d636f766572616c6c73" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/OpenRefine/OpenRefine/badge.svg?branch=coveralls" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://hosted.weblate.org/engage/openrefine/?utm_source=widget" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/28629706e1762d2a5d4a6310c249efaa379e2202/68747470733a2f2f686f737465642e7765626c6174652e6f72672f776964676574732f6f70656e726566696e652f2d2f7376672d62616467652e737667" alt="Translation progress" data-canonical-src="https://hosted.weblate.org/widgets/openrefine/-/svg-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenRefine is a Java-based power tool that allows you to load data, understand it,
clean it up, reconcile it, and augment it with data coming from
the web. All from a web browser and the comfort and privacy of your own computer.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://openrefine.org" rel="nofollow"&gt;&lt;img src="https://github.com/OpenRefine/OpenRefine/raw/master/graphics/icon/open-refine-320px.png" align="right" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-download" class="anchor" aria-hidden="true" href="#download"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/OpenRefine/OpenRefine/releases"&gt;OpenRefine Releases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-run-from-source" class="anchor" aria-hidden="true" href="#run-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run from source&lt;/h2&gt;
&lt;p&gt;If you have cloned this repository to your computer, you can run OpenRefine with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;./refine&lt;/code&gt; on Mac OS and Linux&lt;/li&gt;
&lt;li&gt;&lt;code&gt;refine.bat&lt;/code&gt; on Windows&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This requires JDK 8 and Apache Maven.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation-and-videos" class="anchor" aria-hidden="true" href="#documentation-and-videos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation and Videos&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/OpenRefine/OpenRefine/wiki/Documentation-For-Users"&gt;Documentation Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OpenRefine/OpenRefine/wiki/FAQ"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://openrefine.org" rel="nofollow"&gt;Official Website and tutorial videos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-to-the-project" class="anchor" aria-hidden="true" href="#contributing-to-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing to the project&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/OpenRefine/OpenRefine/wiki/Documentation-For-Developers"&gt;Developers Guide &amp;amp; Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OpenRefine/OpenRefine/blob/master/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OpenRefine/OpenRefine/blob/master/GOVERNANCE.md"&gt;Project Governance&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contact-us" class="anchor" aria-hidden="true" href="#contact-us"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact us&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!forum/openrefine" rel="nofollow"&gt;Mailing List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.twitter.com/openrefine" rel="nofollow"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-licensing-and-legal-issues" class="anchor" aria-hidden="true" href="#licensing-and-legal-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licensing and legal issues&lt;/h2&gt;
&lt;p&gt;OpenRefine is open source software and is licensed under the BSD license
located in the &lt;a href="LICENSE.txt"&gt;LICENSE.txt&lt;/a&gt;. See the folder &lt;code&gt;licenses&lt;/code&gt; for information on open source
libraries that OpenRefine depends on.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;This software was created by Metaweb Technologies, Inc. and originally written
and conceived by David Huynh &lt;a href="mailto:dfhuynh@google.com"&gt;dfhuynh@google.com&lt;/a&gt;. Metaweb Technologies, Inc.
was acquired by Google, Inc. in July 2010 and the product was renamed Google Refine.
In October 2012, it was renamed OpenRefine as it transitioned to a
community-supported product.&lt;/p&gt;
&lt;p&gt;See &lt;code&gt;AUTHORS.md&lt;/code&gt; for the list of OpenRefine contributors.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>OpenRefine</author><guid isPermaLink="false">https://github.com/OpenRefine/OpenRefine</guid><pubDate>Tue, 28 Jan 2020 00:20:00 GMT</pubDate></item><item><title>intuit/karate #21 in Java, This week</title><link>https://github.com/intuit/karate</link><description>&lt;p&gt;&lt;i&gt;Test Automation Made Simple&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content--karate" class="anchor" aria-hidden="true" href="#-karate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="karate-core/src/main/resources/karate-logo.svg"&gt;&lt;img src="karate-core/src/main/resources/karate-logo.svg" height="60" width="60" style="max-width:100%;"&gt;&lt;/a&gt; Karate&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-web-services-testing-made-simple" class="anchor" aria-hidden="true" href="#web-services-testing-made-simple"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Web-Services Testing Made &lt;code&gt;Simple.&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://mvnrepository.com/artifact/com.intuit.karate/karate-core" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0454fb17556089b79b4e52dcf34c4cdfb50d9a6f/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d63656e7472616c2f762f636f6d2e696e747569742e6b61726174652f6b61726174652d636f72652e737667" alt="Maven Central" data-canonical-src="https://img.shields.io/maven-central/v/com.intuit.karate/karate-core.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.org/intuit/karate" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/03dcdfb47b5a6e77c530df156d910635e74ba394/68747470733a2f2f7472617669732d63692e6f72672f696e747569742f6b61726174652e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/intuit/karate.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/intuit/karate/releases"&gt;&lt;img src="https://camo.githubusercontent.com/801e4e9d35d5428ebee9f65df464be7d089023f3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f696e747569742f6b61726174652e737667" alt="GitHub release" data-canonical-src="https://img.shields.io/github/release/intuit/karate.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/intuit/karate/wiki/Support"&gt;&lt;img src="https://camo.githubusercontent.com/7fc76292f6afb6c8ed100b85132382d7c5d8df2d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f737570706f72742d736c61636b2d7265642e737667" alt="Support Slack" data-canonical-src="https://img.shields.io/badge/support-slack-red.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://twitter.com/KarateDSL" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/47bd071793cdb3dbb69cdf597fac52c44c774dbc/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f4b617261746544534c2e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f77" alt="Twitter Follow" data-canonical-src="https://img.shields.io/twitter/follow/KarateDSL.svg?style=social&amp;amp;label=Follow" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Karate is the only open-source tool to combine API test-automation, &lt;a href="karate-netty"&gt;mocks&lt;/a&gt; and &lt;a href="karate-gatling"&gt;performance-testing&lt;/a&gt; into a &lt;strong&gt;single&lt;/strong&gt;, &lt;em&gt;unified&lt;/em&gt; framework. The BDD syntax popularized by Cucumber is language-neutral, and easy for even non-programmers. Besides powerful JSON &amp;amp; XML assertions, you can run tests in parallel for speed - which is critical for HTTP API testing.&lt;/p&gt;
&lt;p&gt;You can easily build (or re-use) complex request payloads, and dynamically construct more requests from response data. The  payload and schema validation engine can perform a 'smart compare' (deep-equals) of two JSON or XML documents, and you can even ignore dynamic values where needed.&lt;/p&gt;
&lt;p&gt;Test execution and report generation feels like any standard Java project. But there's also a &lt;a href="karate-netty#standalone-jar"&gt;stand-alone executable&lt;/a&gt; for teams not comfortable with Java. Just write tests in a &lt;strong&gt;simple&lt;/strong&gt;, &lt;em&gt;readable&lt;/em&gt; syntax - carefully designed for HTTP, JSON, GraphQL and XML.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-hello-world" class="anchor" aria-hidden="true" href="#hello-world"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hello World&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/ptrthomas/d5a2d9e15d0b07e4f1b46f692a599f93"&gt;&lt;img src="karate-demo/src/test/resources/karate-hello-world.jpg" height="400" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you are familiar with Cucumber / Gherkin, the &lt;a href="#cucumber-vs-karate"&gt;&lt;em&gt;big difference&lt;/em&gt;&lt;/a&gt; here is that you &lt;strong&gt;don't&lt;/strong&gt; need to write extra "glue" code or Java "step definitions" !&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It is worth pointing out that JSON is a 'first class citizen' of the syntax such that you can express payload and expected data without having to use double-quotes and without having to enclose JSON field names in quotes.  There is no need to 'escape' characters like you would have had to in Java or other programming languages.&lt;/p&gt;
&lt;p&gt;And you don't need to create additional Java classes for any of the payloads that you need to work with.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-index" class="anchor" aria-hidden="true" href="#index"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Index&lt;/h1&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
  &lt;th&gt;Start&lt;/th&gt;
  &lt;td&gt;
      &lt;a href="#maven"&gt;Maven&lt;/a&gt; 
    | &lt;a href="#gradle"&gt;Gradle&lt;/a&gt;
    | &lt;a href="#quickstart"&gt;Quickstart&lt;/a&gt;
    | &lt;a href="https://github.com/intuit/karate/tree/master/karate-netty#standalone-jar"&gt;Standalone Executable&lt;/a&gt;
    | &lt;a href="#folder-structure"&gt;Naming Conventions&lt;/a&gt;
    | &lt;a href="#script-structure"&gt;Script Structure&lt;/a&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Run&lt;/th&gt;
  &lt;td&gt;
      &lt;a href="#junit-4"&gt;JUnit 4&lt;/a&gt;
    | &lt;a href="#junit-5"&gt;JUnit 5&lt;/a&gt;
    | &lt;a href="#command-line"&gt;Command Line&lt;/a&gt;
    | &lt;a href="#ide-support"&gt;IDE Support&lt;/a&gt;    
    | &lt;a href="#tags"&gt;Tags / Grouping&lt;/a&gt;
    | &lt;a href="#parallel-execution"&gt;Parallel Execution&lt;/a&gt;
    | &lt;a href="#java-api"&gt;Java API&lt;/a&gt;    
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Report&lt;/th&gt;
  &lt;td&gt;
      &lt;a href="#configuration"&gt;Configuration&lt;/a&gt; 
    | &lt;a href="#switching-the-environment"&gt;Environment Switching&lt;/a&gt;
    | &lt;a href="#test-reports"&gt;Reports&lt;/a&gt;
    | &lt;a href="#junit-html-report"&gt;JUnit HTML Report&lt;/a&gt;
    | &lt;a href="#logging"&gt;Logging&lt;/a&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Types&lt;/th&gt;
  &lt;td&gt;
      &lt;a href="#json"&gt;JSON&lt;/a&gt; 
    | &lt;a href="#xml"&gt;XML&lt;/a&gt;
    | &lt;a href="#javascript-functions"&gt;JavaScript Functions&lt;/a&gt;
    | &lt;a href="#reading-files"&gt;Reading Files&lt;/a&gt;
    | &lt;a href="#type-conversion"&gt;Type / String Conversion&lt;/a&gt;
    | &lt;a href="#floats-and-integers"&gt;Floats and Integers&lt;/a&gt;
    | &lt;a href="#embedded-expressions"&gt;Embedded Expressions&lt;/a&gt;
    | &lt;a href="#jsonpath-filters"&gt;JsonPath&lt;/a&gt;
    | &lt;a href="#xpath-functions"&gt;XPath&lt;/a&gt;
    | &lt;a href="#karate-expressions"&gt;Karate Expressions&lt;/a&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Variables&lt;/th&gt;
  &lt;td&gt;
      &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#text"&gt;&lt;code&gt;text&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#table"&gt;&lt;code&gt;table&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#yaml"&gt;&lt;code&gt;yaml&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#csv"&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#type-string"&gt;&lt;code&gt;string&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#type-json"&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#type-xml"&gt;&lt;code&gt;xml&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#type-xmlstring"&gt;&lt;code&gt;xmlstring&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#type-bytes"&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#type-copy"&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Actions&lt;/th&gt;
  &lt;td&gt;
      &lt;a href="#assert"&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#print"&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#replace"&gt;&lt;code&gt;replace&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#get"&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; 
    | &lt;a href="#set"&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#remove"&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt;    
    | &lt;a href="#configure"&gt;&lt;code&gt;configure&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#call"&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; 
    | &lt;a href="#callonce"&gt;&lt;code&gt;callonce&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#eval"&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#reading-files"&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#the-karate-object"&gt;&lt;code&gt;karate&lt;/code&gt; API&lt;/a&gt;     
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;HTTP&lt;/th&gt;
  &lt;td&gt;
      &lt;a href="#url"&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; 
    | &lt;a href="#path"&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#request"&gt;&lt;code&gt;request&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#method"&gt;&lt;code&gt;method&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#status"&gt;&lt;code&gt;status&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#soap-action"&gt;&lt;code&gt;soap action&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#retry-until"&gt;&lt;code&gt;retry until&lt;/code&gt;&lt;/a&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Request&lt;/th&gt;
  &lt;td&gt;
      &lt;a href="#param"&gt;&lt;code&gt;param&lt;/code&gt;&lt;/a&gt; 
    | &lt;a href="#header"&gt;&lt;code&gt;header&lt;/code&gt;&lt;/a&gt;    
    | &lt;a href="#cookie"&gt;&lt;code&gt;cookie&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#form-field"&gt;&lt;code&gt;form field&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#multipart-file"&gt;&lt;code&gt;multipart file&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#multipart-field"&gt;&lt;code&gt;multipart field&lt;/code&gt;&lt;/a&gt;       
    | &lt;a href="#multipart-entity"&gt;&lt;code&gt;multipart entity&lt;/code&gt;&lt;/a&gt;    
    | &lt;a href="#params"&gt;&lt;code&gt;params&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#headers"&gt;&lt;code&gt;headers&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#cookies"&gt;&lt;code&gt;cookies&lt;/code&gt;&lt;/a&gt;        
    | &lt;a href="#form-fields"&gt;&lt;code&gt;form fields&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#multipart-files"&gt;&lt;code&gt;multipart files&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#multipart-fields"&gt;&lt;code&gt;multipart fields&lt;/code&gt;&lt;/a&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Response&lt;/th&gt;
  &lt;td&gt;
      &lt;a href="#response"&gt;&lt;code&gt;response&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#responsebytes"&gt;&lt;code&gt;responseBytes&lt;/code&gt;&lt;/a&gt; 
    | &lt;a href="#responsestatus"&gt;&lt;code&gt;responseStatus&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#responseheaders"&gt;&lt;code&gt;responseHeaders&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#responsecookies"&gt;&lt;code&gt;responseCookies&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#responsetime"&gt;&lt;code&gt;responseTime&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#requesttimestamp"&gt;&lt;code&gt;requestTimeStamp&lt;/code&gt;&lt;/a&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Assert&lt;/th&gt;
  &lt;td&gt;
      &lt;a href="#match"&gt;&lt;code&gt;match ==&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#match--not-equals"&gt;&lt;code&gt;match !=&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#match-contains"&gt;&lt;code&gt;match contains&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#match-contains-only"&gt;&lt;code&gt;match contains only&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#match-contains-any"&gt;&lt;code&gt;match contains any&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#not-contains"&gt;&lt;code&gt;match !contains&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#match-each"&gt;&lt;code&gt;match each&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#match-header"&gt;&lt;code&gt;match header&lt;/code&gt;&lt;/a&gt;    
    | &lt;a href="#fuzzy-matching"&gt;Fuzzy Matching&lt;/a&gt;
    | &lt;a href="#schema-validation"&gt;Schema Validation&lt;/a&gt;
    | &lt;a href="#contains-short-cuts"&gt;&lt;code&gt;contains&lt;/code&gt; short-cuts&lt;/a&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Re-Use&lt;/th&gt;
  &lt;td&gt;
      &lt;a href="#calling-other-feature-files"&gt;Calling Other &lt;code&gt;*.feature&lt;/code&gt; Files&lt;/a&gt;
    | &lt;a href="#data-driven-features"&gt;Data Driven Features&lt;/a&gt;       
    | &lt;a href="#calling-javascript-functions"&gt;Calling JavaScript Functions&lt;/a&gt;
    | &lt;a href="#calling-java"&gt;Calling Java Code&lt;/a&gt;
    | &lt;a href="#commonly-needed-utilities"&gt;Commonly Needed Utilities&lt;/a&gt;
    | &lt;a href="#data-driven-tests"&gt;Data Driven Scenarios&lt;/a&gt;    
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Advanced&lt;/th&gt;
  &lt;td&gt;
      &lt;a href="#polling"&gt;Polling&lt;/a&gt;
    | &lt;a href="#conditional-logic"&gt;Conditional Logic&lt;/a&gt;
    | &lt;a href="#hooks"&gt;Before / After Hooks&lt;/a&gt;
    | &lt;a href="#json-transforms"&gt;JSON Transforms&lt;/a&gt;
    | &lt;a href="#loops"&gt;Loops&lt;/a&gt;
    | &lt;a href="#http-basic-authentication-example"&gt;HTTP Basic Auth&lt;/a&gt; 
    | &lt;a href="#http-header-manipulation"&gt;Header Manipulation&lt;/a&gt; 
    | &lt;a href="#text"&gt;GraphQL&lt;/a&gt;
    | &lt;a href="#async"&gt;Websockets / Async&lt;/a&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;More&lt;/th&gt;
  &lt;td&gt;
      &lt;a href="karate-mock-servlet"&gt;Mock Servlet&lt;/a&gt;
    | &lt;a href="karate-netty"&gt;Test Doubles&lt;/a&gt;
    | &lt;a href="karate-gatling"&gt;Performance Testing&lt;/a&gt;
    | &lt;a href="karate-core"&gt;UI Testing&lt;/a&gt;
    | &lt;a href="https://github.com/intuit/karate/wiki/Karate-UI"&gt;Karate UI&lt;/a&gt;
    | &lt;a href="#comparison-with-rest-assured"&gt;Karate vs REST-assured&lt;/a&gt;
    | &lt;a href="#cucumber-vs-karate"&gt;Karate vs Cucumber&lt;/a&gt;
    | &lt;a href="karate-demo"&gt;Examples and Demos&lt;/a&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Java knowledge is not required and even non-programmers can write tests&lt;/li&gt;
&lt;li&gt;Scripts are plain-text, require no compilation step or IDE, and teams can collaborate using Git / standard SCM&lt;/li&gt;
&lt;li&gt;Based on the popular Cucumber / Gherkin standard - with &lt;a href="#running-in-eclipse-or-intellij"&gt;IDE support&lt;/a&gt; and syntax-coloring options&lt;/li&gt;
&lt;li&gt;Elegant &lt;a href="https://en.wikipedia.org/wiki/Domain-specific_language" rel="nofollow"&gt;DSL&lt;/a&gt; syntax 'natively' supports JSON and XML - including &lt;a href="#set"&gt;JsonPath&lt;/a&gt; and &lt;a href="#xpath-functions"&gt;XPath&lt;/a&gt; expressions&lt;/li&gt;
&lt;li&gt;Eliminate the need for 'Java Beans' or 'helper code' to represent payloads and HTTP end-points, and &lt;a href="https://twitter.com/KarateDSL/status/873035687817117696" rel="nofollow"&gt;dramatically reduce the lines of code&lt;/a&gt; needed for a test&lt;/li&gt;
&lt;li&gt;Ideal for testing the highly dynamic responses from &lt;a href="http://graphql.org" rel="nofollow"&gt;GraphQL&lt;/a&gt; API-s because of Karate's built-in &lt;a href="#text"&gt;text-manipulation&lt;/a&gt; and &lt;a href="https://github.com/json-path/JsonPath#path-examples"&gt;JsonPath&lt;/a&gt; capabilities&lt;/li&gt;
&lt;li&gt;Tests are super-readable - as scenario data can be expressed in-line, in human-friendly &lt;a href="#json"&gt;JSON&lt;/a&gt;, &lt;a href="#xml"&gt;XML&lt;/a&gt;, Cucumber &lt;a href="#the-cucumber-way"&gt;Scenario&lt;/a&gt; Outline &lt;a href="#table"&gt;tables&lt;/a&gt;, or a &lt;a href="#set-multiple"&gt;payload builder&lt;/a&gt; approach &lt;a href="https://gist.github.com/ptrthomas/d6beb17e92a43220d254af942e3ed3d9"&gt;unique to Karate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Express expected results as readable, well-formed JSON or XML, and &lt;a href="#match"&gt;assert in a single step&lt;/a&gt; that the entire response payload (no matter how complex or deeply nested) - is as expected&lt;/li&gt;
&lt;li&gt;Comprehensive &lt;a href="#fuzzy-matching"&gt;assertion capabilities&lt;/a&gt; - and failures clearly report which data element (and path) is not as expected, for easy troubleshooting of even large payloads&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/intuit/karate/wiki/Karate-UI"&gt;Embedded UI&lt;/a&gt; for stepping through a script in debug mode where you can even &lt;a href="https://twitter.com/ptrthomas/status/889356965461217281" rel="nofollow"&gt;re-play a step while editing it&lt;/a&gt; - a huge time-saver&lt;/li&gt;
&lt;li&gt;Simpler and more &lt;a href="https://twitter.com/KarateDSL/status/878984854012022784" rel="nofollow"&gt;powerful alternative&lt;/a&gt; to JSON-schema for &lt;a href="#schema-validation"&gt;validating payload structure&lt;/a&gt; and format - that even supports cross-field / domain validation logic&lt;/li&gt;
&lt;li&gt;Scripts can &lt;a href="#calling-other-feature-files"&gt;call other scripts&lt;/a&gt; - which means that you can easily re-use and maintain authentication and 'set up' flows efficiently, across multiple tests&lt;/li&gt;
&lt;li&gt;Embedded JavaScript engine that allows you to build a library of &lt;a href="#calling-javascript-functions"&gt;re-usable functions&lt;/a&gt; that suit your specific environment or organization&lt;/li&gt;
&lt;li&gt;Re-use of payload-data and user-defined functions across tests is &lt;a href="#reading-files"&gt;so easy&lt;/a&gt; - that it becomes a natural habit for the test-developer&lt;/li&gt;
&lt;li&gt;Built-in support for &lt;a href="#switching-the-environment"&gt;switching configuration&lt;/a&gt; across different environments (e.g. dev, QA, pre-prod)&lt;/li&gt;
&lt;li&gt;Support for &lt;a href="#data-driven-tests"&gt;data-driven tests&lt;/a&gt; and being able to &lt;a href="#tags"&gt;tag or group&lt;/a&gt; tests is built-in, no need to rely on an external framework&lt;/li&gt;
&lt;li&gt;Native support for reading &lt;a href="#yaml"&gt;YAML&lt;/a&gt; and even &lt;a href="#csv-files"&gt;CSV&lt;/a&gt; files - and you can use them for data-driven tests&lt;/li&gt;
&lt;li&gt;Standard Java / Maven project structure, and &lt;a href="#command-line"&gt;seamless integration&lt;/a&gt; into CI / CD pipelines - and support for &lt;a href="#junit-5"&gt;JUnit 5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Option to use as a light-weight &lt;a href="https://github.com/intuit/karate/tree/master/karate-netty#standalone-jar"&gt;stand-alone executable&lt;/a&gt; - convenient for teams not comfortable with Java&lt;/li&gt;
&lt;li&gt;Support for multi-threaded &lt;a href="#parallel-execution"&gt;parallel execution&lt;/a&gt;, which is a huge time-saver, especially for HTTP integration tests&lt;/li&gt;
&lt;li&gt;Built-in &lt;a href="#test-reports"&gt;test-reports&lt;/a&gt; compatible with Cucumber so that you have the option of using third-party (open-source) maven-plugins for even &lt;a href="karate-demo#example-report"&gt;better-looking reports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Reports include HTTP request and response &lt;a href="#test-reports"&gt;logs in-line&lt;/a&gt;, which makes &lt;a href="https://twitter.com/KarateDSL/status/899671441221623809" rel="nofollow"&gt;troubleshooting&lt;/a&gt; and &lt;a href="https://twitter.com/KarateDSL/status/935029435140489216" rel="nofollow"&gt;debugging a test&lt;/a&gt; a lot easier&lt;/li&gt;
&lt;li&gt;Easily invoke JDK classes, Java libraries, or re-use custom Java code if needed, for &lt;a href="#calling-java"&gt;ultimate extensibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Simple plug-in system for &lt;a href="#http-basic-authentication-example"&gt;authentication&lt;/a&gt; and HTTP &lt;a href="#configure-headers"&gt;header management&lt;/a&gt; that will handle any complex, real-world scenario&lt;/li&gt;
&lt;li&gt;Future-proof 'pluggable' HTTP client abstraction supports both Apache and Jersey so that you can &lt;a href="#maven"&gt;choose&lt;/a&gt; what works best in your project, and not be blocked by library or dependency conflicts&lt;/li&gt;
&lt;li&gt;Option to invoke via a &lt;a href="#java-api"&gt;Java API&lt;/a&gt;,  which means that you can easily &lt;a href="https://stackoverflow.com/q/47795762/143475" rel="nofollow"&gt;mix Karate into existing Selenium / WebDriver test-suites&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="karate-core"&gt;Cross-browser Web, Mobile and Desktop UI automation&lt;/a&gt; (experimental) so that you can test &lt;em&gt;all&lt;/em&gt; layers of your application with the same framework&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/ptrthomas/status/986463717465391104" rel="nofollow"&gt;Save significant effort&lt;/a&gt; by re-using Karate test-suites as &lt;a href="karate-gatling"&gt;Gatling performance tests&lt;/a&gt; that deeply assert that server responses are accurate under load&lt;/li&gt;
&lt;li&gt;Gatling integration can hook into &lt;a href="https://github.com/intuit/karate/tree/master/karate-gatling#custom"&gt;&lt;em&gt;any&lt;/em&gt; custom Java code&lt;/a&gt; - which means that you can perf-test even non-HTTP protocols such as &lt;a href="https://github.com/thinkerou/karate-grpc"&gt;gRPC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="karate-netty"&gt;API mocks&lt;/a&gt; or test-doubles that even &lt;a href="https://hackernoon.com/api-consumer-contract-tests-and-test-doubles-with-karate-72c30ea25c18" rel="nofollow"&gt;maintain CRUD 'state'&lt;/a&gt; across multiple calls - enabling TDD for micro-services and &lt;a href="https://martinfowler.com/articles/consumerDrivenContracts.html" rel="nofollow"&gt;Consumer Driven Contracts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#async"&gt;Async&lt;/a&gt; support that allows you to seamlessly integrate listening to message-queues within a test&lt;/li&gt;
&lt;li&gt;&lt;a href="karate-mock-servlet"&gt;Mock HTTP Servlet&lt;/a&gt; that enables you to test &lt;strong&gt;any&lt;/strong&gt; controller servlet such as Spring Boot / MVC or Jersey / JAX-RS - without having to boot an app-server, and you can use your HTTP integration tests un-changed&lt;/li&gt;
&lt;li&gt;Comprehensive support for different flavors of HTTP calls:
&lt;ul&gt;
&lt;li&gt;&lt;a href="#soap-action"&gt;SOAP&lt;/a&gt; / XML requests&lt;/li&gt;
&lt;li&gt;HTTPS / &lt;a href="#configure"&gt;SSL&lt;/a&gt; - without needing certificates, key-stores or trust-stores&lt;/li&gt;
&lt;li&gt;HTTP &lt;a href="#configure"&gt;proxy server&lt;/a&gt; support&lt;/li&gt;
&lt;li&gt;URL-encoded &lt;a href="#form-field"&gt;HTML-form&lt;/a&gt; data&lt;/li&gt;
&lt;li&gt;&lt;a href="#multipart-field"&gt;Multi-part&lt;/a&gt; file-upload - including &lt;code&gt;multipart/mixed&lt;/code&gt; and &lt;code&gt;multipart/related&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Browser-like &lt;a href="#cookie"&gt;cookie&lt;/a&gt; handling&lt;/li&gt;
&lt;li&gt;Full control over HTTP &lt;a href="#header"&gt;headers&lt;/a&gt;, &lt;a href="#path"&gt;path&lt;/a&gt; and query &lt;a href="#param"&gt;parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#retry-until"&gt;Re-try&lt;/a&gt; until condition&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.websocket.org" rel="nofollow"&gt;Websocket&lt;/a&gt; &lt;a href="#async"&gt;support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Intelligent defaults&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-real-world-examples" class="anchor" aria-hidden="true" href="#real-world-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Real World Examples&lt;/h2&gt;
&lt;p&gt;A set of real-life examples can be found here: &lt;a href="karate-demo"&gt;Karate Demos&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-comparison-with-rest-assured" class="anchor" aria-hidden="true" href="#comparison-with-rest-assured"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Comparison with REST-assured&lt;/h2&gt;
&lt;p&gt;For teams familiar with or currently using &lt;a href="http://rest-assured.io" rel="nofollow"&gt;REST-assured&lt;/a&gt;, this detailed comparison of &lt;a href="http://tinyurl.com/karatera" rel="nofollow"&gt;Karate vs REST-assured&lt;/a&gt; - can help you evaluate Karate.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-references" class="anchor" aria-hidden="true" href="#references"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.baeldung.com/karate-rest-api-testing" rel="nofollow"&gt;REST API Testing with Karate&lt;/a&gt; - tutorial by &lt;a href="http://www.baeldung.com/author/baeldung/" rel="nofollow"&gt;Baeldung&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://techbeacon.com/9-great-open-source-api-testing-tools-how-choose" rel="nofollow"&gt;9 great open-source API testing tools: how to choose&lt;/a&gt; - &lt;a href="https://techbeacon.com" rel="nofollow"&gt;TechBeacon&lt;/a&gt; article by &lt;a href="https://twitter.com/jcolantonio" rel="nofollow"&gt;Joe Colantonio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devfesttoulouse.fr/schedule/2018-11-08?sessionId=4128" rel="nofollow"&gt;Ceinture noire Karate en tests d’API REST&lt;/a&gt; - &lt;a href="https://github.com/ncomet/karate-conf2018"&gt;Slides and Code&lt;/a&gt; - &lt;a href="https://devfesttoulouse.fr" rel="nofollow"&gt;DevFest Touluse 2018&lt;/a&gt; talk by &lt;a href="https://twitter.com/NicolasComet" rel="nofollow"&gt;Nicolas Comet&lt;/a&gt; and &lt;a href="https://twitter.com/binout" rel="nofollow"&gt;Benoît Prioux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adapt.to/2018/en/schedule/karate-the-black-belt-of-http-api-testing.html" rel="nofollow"&gt;Karate, the black belt of HTTP API testing ? - Video / Slides&lt;/a&gt; / &lt;a href="https://twitter.com/bdelacretaz/status/1039444256572751873" rel="nofollow"&gt;Photo&lt;/a&gt; / &lt;a href="http://tinyurl.com/potsdam2018" rel="nofollow"&gt;Code&lt;/a&gt; - &lt;a href="https://adapt.to/2018/en.html" rel="nofollow"&gt;adaptTo() 2018&lt;/a&gt; talk by &lt;a href="https://twitter.com/bdelacretaz" rel="nofollow"&gt;Bertrand Delacretaz&lt;/a&gt; of Adobe &amp;amp; the Apache Software Foundation (&lt;a href="http://www.apache.org/foundation/#who-runs-the-asf" rel="nofollow"&gt;Board of Directors&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://automationpanda.com/2018/12/10/testing-web-services-with-karate/" rel="nofollow"&gt;Testing Web Services with Karate&lt;/a&gt; - quick start guide and review by &lt;a href="https://twitter.com/automationpanda" rel="nofollow"&gt;Andrew Knight&lt;/a&gt; at the &lt;em&gt;Automation Panda&lt;/em&gt; blog&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can find a lot more references &lt;a href="https://github.com/intuit/karate/wiki/Community-News"&gt;in the wiki&lt;/a&gt;. Karate also has its own 'tag' and a very active and supportive community at &lt;a href="https://stackoverflow.com/questions/tagged/karate" rel="nofollow"&gt;Stack Overflow&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h1&gt;
&lt;p&gt;Karate requires &lt;a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" rel="nofollow"&gt;Java&lt;/a&gt; 8 (at least version 1.8.0_112 or greater) and then either &lt;a href="http://maven.apache.org" rel="nofollow"&gt;Maven&lt;/a&gt;, &lt;a href="https://gradle.org" rel="nofollow"&gt;Gradle&lt;/a&gt;, &lt;a href="#eclipse-quickstart"&gt;Eclipse&lt;/a&gt; or &lt;a href="https://github.com/intuit/karate/wiki/IDE-Support#intellij-community-edition"&gt;IntelliJ&lt;/a&gt; to be installed.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you are new to programming or test-automation, refer to this video for &lt;a href="https://youtu.be/W-af7Cd8cMc" rel="nofollow"&gt;getting started with just the (free) IntelliJ Community Edition&lt;/a&gt;. Other options are the &lt;a href="#quickstart"&gt;quickstart&lt;/a&gt; or the &lt;a href="karate-netty#standalone-jar"&gt;standalone executable&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-maven" class="anchor" aria-hidden="true" href="#maven"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maven&lt;/h2&gt;
&lt;p&gt;Karate is designed so that you can choose between the &lt;a href="https://hc.apache.org/index.html" rel="nofollow"&gt;Apache&lt;/a&gt; or &lt;a href="https://jersey.java.net" rel="nofollow"&gt;Jersey&lt;/a&gt; HTTP client implementations.&lt;/p&gt;
&lt;p&gt;So you need two &lt;code&gt;&amp;lt;dependencies&amp;gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;com.intuit.karate&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;karate-apache&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;0.9.4&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;scope&lt;/span&gt;&amp;gt;test&amp;lt;/&lt;span class="pl-ent"&gt;scope&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;com.intuit.karate&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;karate-junit4&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;0.9.4&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;scope&lt;/span&gt;&amp;gt;test&amp;lt;/&lt;span class="pl-ent"&gt;scope&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And if you run into class-loading conflicts, for example if an older version of the Apache libraries are being used within your project - then use &lt;code&gt;karate-jersey&lt;/code&gt; instead of &lt;code&gt;karate-apache&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you want to use &lt;a href="#junit-5"&gt;JUnit 5&lt;/a&gt;, use &lt;code&gt;karate-junit5&lt;/code&gt; instead of &lt;code&gt;karate-junit4&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;a href="https://github.com/intuit/karate/wiki/Karate-UI"&gt;Karate UI&lt;/a&gt; is no longer part of the core framework from 0.9.3 onwards, and is an optional dependency called &lt;code&gt;karate-ui&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-gradle" class="anchor" aria-hidden="true" href="#gradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle&lt;/h2&gt;
&lt;p&gt;Alternatively for &lt;a href="https://gradle.org" rel="nofollow"&gt;Gradle&lt;/a&gt; you need these two entries:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;    &lt;span class="pl-s"&gt;testCompile 'com.intuit.karate:karate-junit4:0.9.4'&lt;/span&gt;
    &lt;span class="pl-s"&gt;testCompile 'com.intuit.karate:karate-apache:0.9.4'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart&lt;/h3&gt;
&lt;p&gt;It may be easier for you to use the Karate Maven archetype to create a skeleton project with one command. You can then skip the next few sections, as the &lt;code&gt;pom.xml&lt;/code&gt;, recommended directory structure, sample test and &lt;a href="#junit-5"&gt;JUnit 5&lt;/a&gt; runners - will be created for you.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you are behind a corporate proxy, or especially if your local Maven installation has been configured to point to a repository within your local network, the command below may not work. One workaround is to temporarily disable or rename your Maven &lt;a href="https://maven.apache.org/settings.html" rel="nofollow"&gt;&lt;code&gt;settings.xml&lt;/code&gt;&lt;/a&gt; file, and try again.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can replace the values of &lt;code&gt;com.mycompany&lt;/code&gt; and &lt;code&gt;myproject&lt;/code&gt; as per your needs.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mvn archetype:generate \
-DarchetypeGroupId=com.intuit.karate \
-DarchetypeArtifactId=karate-archetype \
-DarchetypeVersion=0.9.4 \
-DgroupId=com.mycompany \
-DartifactId=myproject
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will create a folder called &lt;code&gt;myproject&lt;/code&gt; (or whatever you set the name to).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There is an issue with the &lt;code&gt;0.9.4&lt;/code&gt; quickstart, please read this as well: &lt;a href="https://github.com/intuit/karate/issues/823#issuecomment-509608205"&gt;fix for 0.9.4 Maven archetype&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-intellij-quickstart" class="anchor" aria-hidden="true" href="#intellij-quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;IntelliJ Quickstart&lt;/h3&gt;
&lt;p&gt;Refer to this video for &lt;a href="https://youtu.be/W-af7Cd8cMc" rel="nofollow"&gt;getting started with the free IntelliJ Community Edition&lt;/a&gt;. It simplifies the above process, since you only need to install IntelliJ. For Eclipse, refer to the wiki on &lt;a href="https://github.com/intuit/karate/wiki/IDE-Support"&gt;IDE Support&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-folder-structure" class="anchor" aria-hidden="true" href="#folder-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Folder Structure&lt;/h2&gt;
&lt;p&gt;A Karate test script has the file extension &lt;code&gt;.feature&lt;/code&gt; which is the standard followed by Cucumber.  You are free to organize your files using regular Java package conventions.&lt;/p&gt;
&lt;p&gt;The Maven tradition is to have non-Java source files in a separate &lt;code&gt;src/test/resources&lt;/code&gt; folder structure - but we recommend that you keep them side-by-side with your &lt;code&gt;*.java&lt;/code&gt; files. When you have a large and complex project, you will end up with a few data files (e.g. &lt;code&gt;*.js&lt;/code&gt;, &lt;code&gt;*.json&lt;/code&gt;, &lt;code&gt;*.txt&lt;/code&gt;) as well and it is much more convenient to see the &lt;code&gt;*.java&lt;/code&gt; and &lt;code&gt;*.feature&lt;/code&gt; files and all related artifacts in the same place.&lt;/p&gt;
&lt;p&gt;This can be easily achieved with the following tweak to your maven &lt;code&gt;&amp;lt;build&amp;gt;&lt;/code&gt; section.&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;build&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;testResources&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;testResource&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;directory&lt;/span&gt;&amp;gt;src/test/java&amp;lt;/&lt;span class="pl-ent"&gt;directory&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;excludes&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;exclude&lt;/span&gt;&amp;gt;**/*.java&amp;lt;/&lt;span class="pl-ent"&gt;exclude&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;excludes&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;testResource&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;testResources&lt;/span&gt;&amp;gt;        
    &amp;lt;&lt;span class="pl-ent"&gt;plugins&lt;/span&gt;&amp;gt;
    ...
    &amp;lt;/&lt;span class="pl-ent"&gt;plugins&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;build&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is very common in the world of Maven users and keep in mind that these are tests and not production code.&lt;/p&gt;
&lt;p&gt;Alternatively, if using Gradle then add the following &lt;code&gt;sourceSets&lt;/code&gt; definition&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-s"&gt;sourceSets {&lt;/span&gt;
    &lt;span class="pl-s"&gt;test {&lt;/span&gt;
        &lt;span class="pl-s"&gt;resources {&lt;/span&gt;
            &lt;span class="pl-s"&gt;srcDir file('src/test/java')&lt;/span&gt;
            &lt;span class="pl-s"&gt;exclude '**/*.java'&lt;/span&gt;
        &lt;span class="pl-s"&gt;}&lt;/span&gt;
    &lt;span class="pl-s"&gt;}&lt;/span&gt;
&lt;span class="pl-s"&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With the above in place, you don't have to keep switching between your &lt;code&gt;src/test/java&lt;/code&gt; and &lt;code&gt;src/test/resources&lt;/code&gt; folders, you can have all your test-code and artifacts under &lt;code&gt;src/test/java&lt;/code&gt; and everything will work as expected.&lt;/p&gt;
&lt;p&gt;Once you get used to this, you may even start wondering why projects need a &lt;code&gt;src/test/resources&lt;/code&gt; folder at all !&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-naming-conventions" class="anchor" aria-hidden="true" href="#naming-conventions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Naming Conventions&lt;/h2&gt;
&lt;p&gt;Since these are tests and not production Java code, you don't need to be bound by the &lt;code&gt;com.mycompany.foo.bar&lt;/code&gt; convention and the un-necessary explosion of sub-folders that ensues. We suggest that you have a folder hierarchy only one or two levels deep - where the folder names clearly identify which 'resource', 'entity' or API is the web-service under test.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;src/test/java
    |
    +-- karate-config.js
    +-- logback-test.xml
    +-- some-reusable.feature
    +-- some-classpath-function.js
    +-- some-classpath-payload.json
    |
    \-- animals
        |
        +-- AnimalsTest.java
        |
        +-- cats
        |   |
        |   +-- cats-post.feature
        |   +-- cats-get.feature
        |   +-- cat.json
        |   \-- CatsRunner.java
        |
        \-- dogs
            |
            +-- dog-crud.feature
            +-- dog.json
            +-- some-helper-function.js
            \-- DogsRunner.java
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Assuming you use JUnit, there are some good reasons for the recommended (best practice) naming convention and choice of file-placement shown above:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Not using the &lt;code&gt;*Test.java&lt;/code&gt; convention for the JUnit classes (e.g. &lt;code&gt;CatsRunner.java&lt;/code&gt;) in the &lt;code&gt;cats&lt;/code&gt; and &lt;code&gt;dogs&lt;/code&gt; folder ensures that these tests will &lt;strong&gt;not&lt;/strong&gt; be picked up when invoking &lt;code&gt;mvn test&lt;/code&gt; (for the whole project) from the &lt;a href="#command-line"&gt;command line&lt;/a&gt;. But you can still invoke these tests from the IDE, which is convenient when in development mode.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AnimalsTest.java&lt;/code&gt; (the only file that follows the &lt;code&gt;*Test.java&lt;/code&gt; naming convention) acts as the 'test suite' for the entire project. By default, Karate will load all &lt;code&gt;*.feature&lt;/code&gt; files from sub-directories as well. But since &lt;code&gt;some-reusable.feature&lt;/code&gt; is &lt;em&gt;above&lt;/em&gt; &lt;code&gt;AnimalsTest.java&lt;/code&gt; in the folder hierarchy, it will &lt;strong&gt;not&lt;/strong&gt; be picked-up. Which is exactly what we want, because &lt;code&gt;some-reusable.feature&lt;/code&gt; is designed to be &lt;a href="#calling-other-feature-files"&gt;called&lt;/a&gt; only from one of the other test scripts (perhaps with some parameters being passed). You can also use &lt;a href="#tags"&gt;tags&lt;/a&gt; to skip files.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;some-classpath-function.js&lt;/code&gt; and &lt;code&gt;some-classpath-payload.json&lt;/code&gt; are in the 'root' of the Java &lt;a href="#classpath"&gt;'classpath'&lt;/a&gt; which means they can be easily &lt;a href="#reading-files"&gt;read&lt;/a&gt; (and re-used) from any test-script by using the &lt;code&gt;classpath:&lt;/code&gt; prefix, for e.g: &lt;code&gt;read('classpath:some-classpath-function.js')&lt;/code&gt;. Relative paths will also work.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For details on what actually goes into a script or &lt;code&gt;*.feature&lt;/code&gt; file, refer to the &lt;a href="#syntax-guide"&gt;syntax guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ide-support" class="anchor" aria-hidden="true" href="#ide-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;IDE Support&lt;/h2&gt;
&lt;p&gt;Refer to the wiki - &lt;a href="https://github.com/intuit/karate/wiki/IDE-Support"&gt;IDE Support&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-fileencoding" class="anchor" aria-hidden="true" href="#fileencoding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;file.encoding&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;In some cases, for large payloads and especially when the default system encoding is not &lt;code&gt;UTF-8&lt;/code&gt; (Windows or non-US locales), you may run into issues where a &lt;code&gt;java.io.ByteArrayInputStream&lt;/code&gt; is encountered instead of a string. Other errors could be a &lt;code&gt;java.net.URISyntaxException&lt;/code&gt; and &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; not working as expected because of special or foreign characters, e.g. German or &lt;code&gt;ISO-8859-15&lt;/code&gt;. Typical symptoms are your tests working fine via the IDE but not when running via Maven or Gradle. The solution is to ensure that when Karate tests run, the JVM &lt;code&gt;file.encoding&lt;/code&gt; is set to &lt;code&gt;UTF-8&lt;/code&gt;. This can be done via the &lt;a href="http://maven.apache.org/surefire/maven-surefire-plugin/test-mojo.html#argLine" rel="nofollow"&gt;&lt;code&gt;maven-surefire-plugin&lt;/code&gt; configuration&lt;/a&gt;. Add the plugin to the &lt;code&gt;&amp;lt;build&amp;gt;/&amp;lt;plugins&amp;gt;&lt;/code&gt; section of your &lt;code&gt;pom.xml&lt;/code&gt; if not already present:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;    &amp;lt;&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.apache.maven.plugins&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;maven-surefire-plugin&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;2.10&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;argLine&lt;/span&gt;&amp;gt;-Dfile.encoding=UTF-8&amp;lt;/&lt;span class="pl-ent"&gt;argLine&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-junit-4" class="anchor" aria-hidden="true" href="#junit-4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JUnit 4&lt;/h2&gt;
&lt;p&gt;To run a script &lt;code&gt;*.feature&lt;/code&gt; file from your Java IDE, you just need the following empty test-class in the same package. The name of the class doesn't matter, and it will automatically run any &lt;code&gt;*.feature&lt;/code&gt; file in the same package. This comes in useful because depending on how you organize your files and folders - you can have multiple feature files executed by a single JUnit test-class.&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;package&lt;/span&gt; &lt;span class="pl-smi"&gt;animals.cats&lt;/span&gt;;

&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.intuit.karate.junit4.Karate&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.junit.runner.RunWith&lt;/span&gt;;

&lt;span class="pl-k"&gt;@RunWith&lt;/span&gt;(&lt;span class="pl-smi"&gt;Karate&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;class)
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;CatsRunner&lt;/span&gt; {
	
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Refer to your IDE documentation for how to run a JUnit class.  Typically right-clicking on the file in the project browser or even within the editor view would bring up the "Run as JUnit Test" menu option.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Karate will traverse sub-directories and look for &lt;code&gt;*.feature&lt;/code&gt; files. For example if you have the JUnit class in the &lt;code&gt;com.mycompany&lt;/code&gt; package, &lt;code&gt;*.feature&lt;/code&gt; files in &lt;code&gt;com.mycompany.foo&lt;/code&gt; and &lt;code&gt;com.mycompany.bar&lt;/code&gt; will also be run. This is one reason why you may want to prefer a 'flat' directory structure as &lt;a href="#naming-conventions"&gt;explained above&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-junit-5" class="anchor" aria-hidden="true" href="#junit-5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JUnit 5&lt;/h2&gt;
&lt;p&gt;Karate supports JUnit 5 and the advantage is that you can have multiple methods in a test-class. Only one &lt;code&gt;import&lt;/code&gt; is needed, and instead of a class-level annotation, you use a nice &lt;a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself" rel="nofollow"&gt;DRY&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Fluent_interface" rel="nofollow"&gt;fluent-api&lt;/a&gt; to express which tests and tags you want to use.&lt;/p&gt;
&lt;p&gt;Note that the Java class does not need to be &lt;code&gt;public&lt;/code&gt; and even the test methods do not need to be &lt;code&gt;public&lt;/code&gt; - so tests end up being very concise.&lt;/p&gt;
&lt;p&gt;Here is an &lt;a href="karate-junit5/src/test/java/karate/SampleTest.java"&gt;example&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;package&lt;/span&gt; &lt;span class="pl-smi"&gt;karate&lt;/span&gt;;

&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.intuit.karate.junit5.Karate&lt;/span&gt;;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;SampleTest&lt;/span&gt; {

    &lt;span class="pl-k"&gt;@Karate&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-smi"&gt;Test&lt;/span&gt;
    &lt;span class="pl-smi"&gt;Karate&lt;/span&gt; &lt;span class="pl-en"&gt;testSample&lt;/span&gt;() {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Karate&lt;/span&gt;()&lt;span class="pl-k"&gt;.&lt;/span&gt;feature(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sample&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;.&lt;/span&gt;relativeTo(getClass());
    }
    
    &lt;span class="pl-k"&gt;@Karate&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-smi"&gt;Test&lt;/span&gt;
    &lt;span class="pl-smi"&gt;Karate&lt;/span&gt; &lt;span class="pl-en"&gt;testTags&lt;/span&gt;() {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Karate&lt;/span&gt;()&lt;span class="pl-k"&gt;.&lt;/span&gt;feature(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tags&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;.&lt;/span&gt;tags(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;@second&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;.&lt;/span&gt;relativeTo(getClass());
    }

    &lt;span class="pl-k"&gt;@Karate&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-smi"&gt;Test&lt;/span&gt;
    &lt;span class="pl-smi"&gt;Karate&lt;/span&gt; &lt;span class="pl-en"&gt;testFullPath&lt;/span&gt;() {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Karate&lt;/span&gt;()
                .feature(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;classpath:karate/tags.feature&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                .tags(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;@first&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    }

}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You should be able to right-click and run a single method using your IDE - which should be sufficient when you are in development mode. But to be able to run JUnit 5 tests from the command-line, you need to ensure that the latest version of the &lt;a href="https://maven.apache.org/surefire/maven-surefire-plugin/examples/junit-platform.html" rel="nofollow"&gt;maven-surefire-plugin&lt;/a&gt; is present in your project &lt;code&gt;pom.xml&lt;/code&gt; (within the &lt;code&gt;&amp;lt;build&amp;gt;/&amp;lt;plugins&amp;gt;&lt;/code&gt; section):&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.apache.maven.plugins&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;maven-surefire-plugin&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;2.22.2&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;There is an issue with the &lt;code&gt;0.9.4&lt;/code&gt; JUnit 5 dependencies, you will need to manually add &lt;a href="https://github.com/intuit/karate/issues/823#issuecomment-509608205"&gt;&lt;code&gt;junit-jupiter-engine&lt;/code&gt; as a dependency&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To run a single test method, for example the &lt;code&gt;testTags()&lt;/code&gt; in the example above, you can do this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mvn test -Dtest=SampleTest#testTags
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Also look at how to run tests via the &lt;a href="#command-line"&gt;command-line&lt;/a&gt; and the &lt;a href="#junit-5-parallel-execution"&gt;parallel runner&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-junit-html-report" class="anchor" aria-hidden="true" href="#junit-html-report"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JUnit HTML report&lt;/h3&gt;
&lt;p&gt;When you use a JUnit runner - after the execution of each feature, an HTML report is output to the &lt;code&gt;target/surefire-reports&lt;/code&gt; folder and the full path will be printed to the console (see &lt;a href="https://twitter.com/KarateDSL/status/935029435140489216" rel="nofollow"&gt;video&lt;/a&gt;).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;html report: (paste into browser to view)
-----------------------------------------
file:/projects/myproject/target/surefire-reports/TEST-mypackage.myfeature.html
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can easily select (double-click), copy and paste this &lt;code&gt;file:&lt;/code&gt; URL into your browser address bar. This report is useful for troubleshooting and debugging a test because all requests and responses are shown in-line with the steps, along with error messages and the output of &lt;a href="#print"&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt; statements. Just re-fresh your browser window if you re-run the test.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-karate-options" class="anchor" aria-hidden="true" href="#karate-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Karate Options&lt;/h2&gt;
&lt;p&gt;To run only a specific feature file from a JUnit 4 test even if there are multiple &lt;code&gt;*.feature&lt;/code&gt; files in the same folder (or sub-folders), use the &lt;code&gt;@KarateOptions&lt;/code&gt; annotation.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;a href="#junit-5"&gt;JUnit 5 support&lt;/a&gt; does not require a class-level annotation to specify the feature(s) and tags to use.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;package&lt;/span&gt; &lt;span class="pl-smi"&gt;animals.cats&lt;/span&gt;;

&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.intuit.karate.KarateOptions&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.intuit.karate.junit4.Karate&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.junit.runner.RunWith&lt;/span&gt;;

&lt;span class="pl-k"&gt;@RunWith&lt;/span&gt;(&lt;span class="pl-smi"&gt;Karate&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;class)
&lt;span class="pl-k"&gt;@KarateOptions&lt;/span&gt;(&lt;span class="pl-c1"&gt;features&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;classpath:animals/cats/cats-post.feature&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;CatsPostRunner&lt;/span&gt; {
	
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;features&lt;/code&gt; parameter in the annotation can take an array, so if you wanted to associate multiple feature files with a JUnit 4 test, you could do this:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@KarateOptions&lt;/span&gt;(&lt;span class="pl-c1"&gt;features&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;classpath:animals/cats/cats-post.feature&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;classpath:animals/cats/cats-get.feature&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can even point to a directory (or package). Combine this with &lt;a href="#test-suites"&gt;tags&lt;/a&gt; to execute multiple features, without having to list every one of them.&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@KarateOptions&lt;/span&gt;(&lt;span class="pl-c1"&gt;features&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;classpath:animals/cats&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;tags&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~@ignore&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) 
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; this will run all feature files in 'animals/cats'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; except the ones tagged as @ignore&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-command-line" class="anchor" aria-hidden="true" href="#command-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command Line&lt;/h2&gt;
&lt;p&gt;Normally in dev mode, you will use your IDE to run a &lt;code&gt;*.feature&lt;/code&gt; file directly or via the companion 'runner' JUnit Java class. When you have a 'runner' class in place, it would be possible to run it from the command-line as well.&lt;/p&gt;
&lt;p&gt;Note that the &lt;code&gt;mvn test&lt;/code&gt; command only runs test classes that follow the &lt;code&gt;*Test.java&lt;/code&gt; &lt;a href="#naming-conventions"&gt;naming convention&lt;/a&gt; by default. But you can choose a single test to run like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mvn test -Dtest=CatsRunner
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When your Java test "runner" is linked to multiple feature files, which will be the case when you use the recommended &lt;a href="#parallel-execution"&gt;parallel runner&lt;/a&gt;, you can narrow down your scope to a single feature (or even directory) via the command-line, useful in dev-mode. Note how even &lt;a href="#tags"&gt;tags&lt;/a&gt; to exclude (or include) can be specified using the &lt;a href="#karate-options"&gt;Karate options&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mvn test -Dkarate.options="--tags ~@ignore classpath:demo/cats/cats.feature" -Dtest=DemoTestParallel
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Multiple feature files (or paths) can be specified, de-limited by the space character. They should be at the end of the &lt;code&gt;karate.options&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-command-line---gradle" class="anchor" aria-hidden="true" href="#command-line---gradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command Line - Gradle&lt;/h3&gt;
&lt;p&gt;For Gradle you must extend the test task to allow the &lt;code&gt;karate.options&lt;/code&gt; to be passed to the runtime (otherwise they get consumed by Gradle itself). To do that, add the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-s"&gt;test {&lt;/span&gt;
    &lt;span class="pl-s"&gt;// pull karate options into the runtime&lt;/span&gt;
    &lt;span class="pl-s"&gt;systemProperty "karate.options", System.properties.getProperty("karate.options")&lt;/span&gt;
    &lt;span class="pl-s"&gt;// pull karate env into the runtime&lt;/span&gt;
    &lt;span class="pl-s"&gt;systemProperty "karate.env", System.properties.getProperty("karate.env")&lt;/span&gt;
    &lt;span class="pl-s"&gt;// ensure tests are always run&lt;/span&gt;
    &lt;span class="pl-s"&gt;outputs.upToDateWhen { false }&lt;/span&gt;
&lt;span class="pl-s"&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then the above command in Gradle would look like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew test -Dtest=CatsRunner
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-test-suites" class="anchor" aria-hidden="true" href="#test-suites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Test Suites&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The recommended way to define and run test-suites and reporting in Karate is to use the &lt;a href="#parallel-execution"&gt;parallel runner&lt;/a&gt;, described in the next section. The approach in this section is more suited for troubleshooting in dev-mode, using your IDE.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;One way to define 'test-suites' in Karate is to have a JUnit class at a level 'above' (in terms of folder hierarchy) all the &lt;code&gt;*.feature&lt;/code&gt; files in your project. So if you take the previous &lt;a href="#naming-conventions"&gt;folder structure example&lt;/a&gt;, you can do this on the command-line:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mvn test -Dkarate.options="--tags ~@ignore" -Dtest=AnimalsTest
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here, &lt;code&gt;AnimalsTest&lt;/code&gt; is the name of the Java class we designated to run the multiple &lt;code&gt;*.feature&lt;/code&gt; files that make up your test-suite. There is a neat way to &lt;a href="#tags"&gt;tag your tests&lt;/a&gt; and the above example demonstrates how to run all tests &lt;em&gt;except&lt;/em&gt; the ones tagged &lt;code&gt;@ignore&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For JUnit 4, The tag options can be specified in the test-class via the &lt;code&gt;@KarateOptions&lt;/code&gt; annotation, in which case you don't need to pass the &lt;code&gt;-Dkarate.options&lt;/code&gt; on the command-line:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@KarateOptions&lt;/span&gt;(&lt;span class="pl-c1"&gt;tags&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~@ignore&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can 'lock down' the fact that you only want to execute the single JUnit class that functions as a test-suite - by using the following &lt;a href="http://maven.apache.org/surefire/maven-surefire-plugin/examples/inclusion-exclusion.html" rel="nofollow"&gt;maven-surefire-plugin configuration&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.apache.maven.plugins&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;maven-surefire-plugin&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${maven.surefire.version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;includes&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;include&lt;/span&gt;&amp;gt;animals/AnimalsTest.java&amp;lt;/&lt;span class="pl-ent"&gt;include&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;includes&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;systemProperties&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;karate&lt;/span&gt;.options&amp;gt;--tags ~@ignore&amp;lt;/&lt;span class="pl-ent"&gt;karate&lt;/span&gt;.options&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;systemProperties&lt;/span&gt;&amp;gt;            
    &amp;lt;/&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt; &lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note how the &lt;code&gt;karate.options&lt;/code&gt; can be specified using the &lt;code&gt;&amp;lt;systemProperties&amp;gt;&lt;/code&gt; configuration. Options here would over-ride corresponding options specified if a &lt;code&gt;@KarateOptions&lt;/code&gt; annotation is present (on &lt;code&gt;AnimalsTest.java&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;For Gradle, you simply specify the test which is to be &lt;code&gt;include&lt;/code&gt;-d:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-s"&gt;test {&lt;/span&gt;
    &lt;span class="pl-s"&gt;include 'animals/AnimalsTest.java'&lt;/span&gt;
    &lt;span class="pl-s"&gt;// pull karate options into the runtime&lt;/span&gt;
    &lt;span class="pl-s"&gt;systemProperty "karate.options", System.properties.getProperty("karate.options")&lt;/span&gt;
    &lt;span class="pl-s"&gt;// pull karate env into the runtime&lt;/span&gt;
    &lt;span class="pl-s"&gt;systemProperty "karate.env", System.properties.getProperty("karate.env")&lt;/span&gt;
    &lt;span class="pl-s"&gt;// ensure tests are always run&lt;/span&gt;
    &lt;span class="pl-s"&gt;outputs.upToDateWhen { false }&lt;/span&gt;
&lt;span class="pl-s"&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The big drawback of the approach above is that you cannot run tests in parallel. The recommended approach for Karate reporting in a Continuous Integration set-up is described in the next section which focuses on generating the &lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/JUnit+Plugin" rel="nofollow"&gt;JUnit XML&lt;/a&gt; format that most CI tools can consume. The &lt;a href="https://relishapp.com/cucumber/cucumber/docs/formatters/json-output-formatter" rel="nofollow"&gt;Cucumber JSON format&lt;/a&gt; is also emitted, which gives you plenty of options for generating pretty reports using third-party maven plugins.&lt;/p&gt;
&lt;p&gt;And most importantly - you can run tests in parallel without having to depend on third-party hacks that introduce code-generation and config 'bloat' into your &lt;code&gt;pom.xml&lt;/code&gt; or &lt;code&gt;build.gradle&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-parallel-execution" class="anchor" aria-hidden="true" href="#parallel-execution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Parallel Execution&lt;/h2&gt;
&lt;p&gt;Karate can run tests in parallel, and dramatically cut down execution time. This is a 'core' feature and does not depend on JUnit, Maven or Gradle.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-junit-4-parallel-execution" class="anchor" aria-hidden="true" href="#junit-4-parallel-execution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JUnit 4 Parallel Execution&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Important: &lt;strong&gt;do not&lt;/strong&gt; use the &lt;code&gt;@RunWith(Karate.class)&lt;/code&gt; annotation. This is a &lt;em&gt;normal&lt;/em&gt; JUnit 4 test class !&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.intuit.karate.KarateOptions&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.intuit.karate.Results&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.intuit.karate.Runner&lt;/span&gt;;
&lt;span class="pl-k"&gt;import static&lt;/span&gt; &lt;span class="pl-smi"&gt;org.junit.Assert.*&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.junit.Test&lt;/span&gt;;

&lt;span class="pl-k"&gt;@KarateOptions&lt;/span&gt;(&lt;span class="pl-c1"&gt;tags&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~@ignore&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;TestParallel&lt;/span&gt; {
    
    &lt;span class="pl-k"&gt;@Test&lt;/span&gt;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;testParallel&lt;/span&gt;() {
        &lt;span class="pl-smi"&gt;Results&lt;/span&gt; results &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Runner&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;parallel(getClass(), &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;target/surefire-reports&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        assertTrue(results&lt;span class="pl-k"&gt;.&lt;/span&gt;getErrorMessages(), results&lt;span class="pl-k"&gt;.&lt;/span&gt;getFailCount() &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;);
    }
    
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-junit-5-parallel-execution" class="anchor" aria-hidden="true" href="#junit-5-parallel-execution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JUnit 5 Parallel Execution&lt;/h3&gt;
&lt;p&gt;For &lt;a href="#junit-5"&gt;JUnit 5&lt;/a&gt; you can omit the &lt;code&gt;public&lt;/code&gt; modifier for the class and method, and there are some changes to &lt;code&gt;import&lt;/code&gt; package names. And the method signature of the &lt;code&gt;assertTrue&lt;/code&gt; has flipped around a bit:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.intuit.karate.KarateOptions&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.intuit.karate.Results&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.intuit.karate.Runner&lt;/span&gt;;
&lt;span class="pl-k"&gt;import static&lt;/span&gt; &lt;span class="pl-smi"&gt;org.junit.jupiter.api.Assertions.*&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.junit.jupiter.api.Test&lt;/span&gt;;

&lt;span class="pl-k"&gt;@KarateOptions&lt;/span&gt;(&lt;span class="pl-c1"&gt;tags&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~@ignore&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;TestParallel&lt;/span&gt; {

    &lt;span class="pl-k"&gt;@Test&lt;/span&gt;
    &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;testParallel&lt;/span&gt;() {
        &lt;span class="pl-smi"&gt;Results&lt;/span&gt; results &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Runner&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;parallel(getClass(), &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;target/surefire-reports&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        assertTrue(results&lt;span class="pl-k"&gt;.&lt;/span&gt;getFailCount() &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, results&lt;span class="pl-k"&gt;.&lt;/span&gt;getErrorMessages());
    }

}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Things to note:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For JUnit 4 - you don't use a JUnit runner (no &lt;code&gt;@RunWith&lt;/code&gt; annotation), and you write a plain vanilla JUnit test (it could even be a normal Java class with a &lt;code&gt;main&lt;/code&gt; method) using the &lt;code&gt;Runner.parallel()&lt;/code&gt; static method in &lt;code&gt;karate-core&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;You can use the returned &lt;code&gt;Results&lt;/code&gt; object to check if any scenarios failed, and to even summarize the errors&lt;/li&gt;
&lt;li&gt;The first argument can be any class that marks the 'root package' in which &lt;code&gt;*.feature&lt;/code&gt; files will be looked for, and sub-directories will be also scanned. As shown above you would typically refer to the enclosing test-class itself. If the class you refer to has a &lt;code&gt;@KarateOptions&lt;/code&gt; annotation, it will be processed (see below).&lt;/li&gt;
&lt;li&gt;The second argument is the number of threads to use.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/JUnit+Plugin" rel="nofollow"&gt;JUnit XML&lt;/a&gt; reports will be generated in the path you specify as the third parameter, and you can easily configure your CI to look for these files after a build (for e.g. in &lt;code&gt;**/*.xml&lt;/code&gt; or &lt;code&gt;**/surefire-reports/*.xml&lt;/code&gt;). This argument is optional and will default to &lt;code&gt;target/surefire-reports&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://relishapp.com/cucumber/cucumber/docs/formatters/json-output-formatter" rel="nofollow"&gt;Cucumber JSON reports&lt;/a&gt; will be generated side-by-side with the JUnit XML reports and with the same name, except that the extension will be &lt;code&gt;.json&lt;/code&gt; instead of &lt;code&gt;.xml&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Options passed to &lt;code&gt;@KarateOptions&lt;/code&gt; would work as expected, provided you point the &lt;code&gt;Runner&lt;/code&gt; to the annotated class as the first argument. Note that in this example, any &lt;code&gt;*.feature&lt;/code&gt; file tagged as &lt;code&gt;@ignore&lt;/code&gt; will be skipped. You can also specify tags on the &lt;a href="#test-suites"&gt;command-line&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For convenience, some stats are logged to the console when execution completes, which should look something like this:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;======================================================
elapsed:   2.35 | threads:    5 | thread time: 4.98 
features:    54 | ignored:   25 | efficiency: 0.42
scenarios:  145 | passed:   145 | failed: 0
======================================================
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The parallel runner will always run &lt;code&gt;Feature&lt;/code&gt;-s in parallel. Karate will also run &lt;code&gt;Scenario&lt;/code&gt;-s in parallel by default. So if you have a &lt;code&gt;Feature&lt;/code&gt; with multiple &lt;code&gt;Scenario&lt;/code&gt;-s in it - they will execute in parallel, and even each &lt;code&gt;Examples&lt;/code&gt; row in a &lt;code&gt;Scenario Outline&lt;/code&gt; will do so !&lt;/p&gt;
&lt;p&gt;A &lt;code&gt;timeline.html&lt;/code&gt; file will also be saved to the report output directory mentioned above (&lt;code&gt;target/surefire-reports&lt;/code&gt; by default) - which is useful for visually verifying or troubleshooting the effectiveness of the test-run (&lt;a href="https://twitter.com/KarateDSL/status/1049321708241317888" rel="nofollow"&gt;see video&lt;/a&gt;).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-parallelfalse" class="anchor" aria-hidden="true" href="#parallelfalse"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;@parallel=false&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;In rare cases you may want to suppress the default of &lt;code&gt;Scenario&lt;/code&gt;-s executing in parallel and the special &lt;a href="#tags"&gt;&lt;code&gt;tag&lt;/code&gt;&lt;/a&gt; &lt;code&gt;@parallel=false&lt;/code&gt; can be used. If you place it above the &lt;a href="#script-structure"&gt;&lt;code&gt;Feature&lt;/code&gt;&lt;/a&gt; keyword, it will apply to all &lt;code&gt;Scenario&lt;/code&gt;-s. And if you just want one or two &lt;code&gt;Scenario&lt;/code&gt;-s to NOT run in parallel, you can place this tag above only &lt;em&gt;those&lt;/em&gt; &lt;code&gt;Scenario&lt;/code&gt;-s. See &lt;a href="karate-demo/src/test/java/demo/encoding/encoding.feature"&gt;example&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There is also an API to run a chosen set of features (and tags) which may be useful in cases where you dynamically want to select features at run time. Refer to this example &lt;a href="karate-demo/src/test/java/demo/DemoTestSelected.java"&gt;&lt;code&gt;DemoTestSelected.java&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-test-reports" class="anchor" aria-hidden="true" href="#test-reports"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Test Reports&lt;/h2&gt;
&lt;p&gt;As mentioned above, most CI tools would be able to process the JUnit XML output of the &lt;a href="#parallel-execution"&gt;parallel runner&lt;/a&gt; and determine the status of the build as well as generate reports.&lt;/p&gt;
&lt;p&gt;The &lt;a href="karate-demo"&gt;Karate Demo&lt;/a&gt; has a working example of the recommended parallel-runner set up. It also &lt;a href="karate-demo#example-report"&gt;details how&lt;/a&gt; a third-party library can be easily used to generate some very nice-looking reports, from the JSON output of the parallel runner.&lt;/p&gt;
&lt;p&gt;For example, here below is an actual report generated by the &lt;a href="https://github.com/damianszczepanik/cucumber-reporting"&gt;cucumber-reporting&lt;/a&gt; open-source library.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="karate-demo/src/test/resources/karate-maven-report.jpg"&gt;&lt;img src="karate-demo/src/test/resources/karate-maven-report.jpg" height="600px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This report is recommended especially because Karate's integration includes the HTTP request and response logs &lt;a href="https://twitter.com/KarateDSL/status/899671441221623809" rel="nofollow"&gt;in-line with the test report&lt;/a&gt;, which is extremely useful for troubleshooting test failures.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="karate-demo/src/test/resources/karate-maven-report-http.jpg"&gt;&lt;img src="karate-demo/src/test/resources/karate-maven-report-http.jpg" height="600px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The demo also features &lt;a href="karate-demo#code-coverage-using-jacoco"&gt;code-coverage using Jacoco&lt;/a&gt;. Some third-party report-server solutions integrate with Karate such as &lt;a href="https://github.com/reportportal/agent-java-karate"&gt;ReportPortal.io&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-logging" class="anchor" aria-hidden="true" href="#logging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Logging&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;This is optional, and Karate will work without the logging config in place, but the default console logging may be too verbose for your needs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Karate uses &lt;a href="http://logback.qos.ch" rel="nofollow"&gt;LOGBack&lt;/a&gt; which looks for a file called &lt;code&gt;logback-test.xml&lt;/code&gt; on the '&lt;a href="#classpath"&gt;classpath&lt;/a&gt;'.&lt;/p&gt;
&lt;p&gt;Here is a sample &lt;code&gt;logback-test.xml&lt;/code&gt; for you to get started.&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;?&lt;span class="pl-ent"&gt;xml&lt;/span&gt;&lt;span class="pl-e"&gt; version&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-e"&gt; encoding&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UTF-8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;?&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
 
    &amp;lt;&lt;span class="pl-ent"&gt;appender&lt;/span&gt; &lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;STDOUT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;class&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ch.qos.logback.core.ConsoleAppender&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;encoder&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;pattern&lt;/span&gt;&amp;gt;%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n&amp;lt;/&lt;span class="pl-ent"&gt;pattern&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;encoder&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;appender&lt;/span&gt;&amp;gt;
  
    &amp;lt;&lt;span class="pl-ent"&gt;appender&lt;/span&gt; &lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FILE&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;class&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ch.qos.logback.core.FileAppender&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;file&lt;/span&gt;&amp;gt;target/karate.log&amp;lt;/&lt;span class="pl-ent"&gt;file&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;encoder&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;pattern&lt;/span&gt;&amp;gt;%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n&amp;lt;/&lt;span class="pl-ent"&gt;pattern&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;encoder&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;appender&lt;/span&gt;&amp;gt;    
   
    &amp;lt;&lt;span class="pl-ent"&gt;logger&lt;/span&gt; &lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.intuit.karate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;level&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;DEBUG&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;/&amp;gt;
   
    &amp;lt;&lt;span class="pl-ent"&gt;root&lt;/span&gt; &lt;span class="pl-e"&gt;level&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;info&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;appender-ref&lt;/span&gt; &lt;span class="pl-e"&gt;ref&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;STDOUT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;appender-ref&lt;/span&gt; &lt;span class="pl-e"&gt;ref&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FILE&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;root&lt;/span&gt;&amp;gt;
  
&amp;lt;/&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can change the &lt;code&gt;com.intuit.karate&lt;/code&gt; logger level to &lt;code&gt;INFO&lt;/code&gt; to reduce the amount of logging. When the level is &lt;code&gt;DEBUG&lt;/code&gt; the entire request and response payloads are logged. If you use the above config, logs will be captured in &lt;code&gt;target/karate.log&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;You can skip this section and jump straight to the &lt;a href="#syntax-guide"&gt;Syntax Guide&lt;/a&gt; if you are in a hurry to get started with Karate. Things will work even if the &lt;code&gt;karate-config.js&lt;/code&gt; file is not present.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-classpath" class="anchor" aria-hidden="true" href="#classpath"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Classpath&lt;/h2&gt;
&lt;p&gt;The 'classpath' is a Java concept and is where some configuration files such as the one for &lt;a href="#logging"&gt;logging&lt;/a&gt; are expected to be by default. If you use the Maven &lt;code&gt;&amp;lt;test-resources&amp;gt;&lt;/code&gt; tweak &lt;a href="#folder-structure"&gt;described earlier&lt;/a&gt; (recommended), the 'root' of the classpath will be in the &lt;code&gt;src/test/java&lt;/code&gt; folder, or else would be &lt;code&gt;src/test/resources&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-karate-configjs" class="anchor" aria-hidden="true" href="#karate-configjs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;karate-config.js&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The only 'rule' is that on start-up Karate expects a file called &lt;code&gt;karate-config.js&lt;/code&gt; to exist on the 'classpath' and contain a &lt;a href="#javascript-functions"&gt;JavaScript function&lt;/a&gt;. The function is expected to return a JSON object and all keys and values in that JSON object will be made available as script variables.&lt;/p&gt;
&lt;p&gt;And that's all there is to Karate configuration ! You can easily get the value of the &lt;a href="#switching-the-environment"&gt;current 'environment' or 'profile'&lt;/a&gt;, and then set up 'global' variables using some simple JavaScript. Here is an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;() {   
  &lt;span class="pl-k"&gt;var&lt;/span&gt; env &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;karate&lt;/span&gt;.&lt;span class="pl-smi"&gt;env&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; get java system property 'karate.env'&lt;/span&gt;
  &lt;span class="pl-smi"&gt;karate&lt;/span&gt;.&lt;span class="pl-en"&gt;log&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;karate.env system property was:&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, env);
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;env) {
    env &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;dev&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a custom 'intelligent' default&lt;/span&gt;
  }
  &lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; base config JSON&lt;/span&gt;
    appId&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;my.app.id&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
    appSecret&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;my.secret&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
    someUrlBase&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://some-host.com/v1/auth/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
    anotherUrlBase&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://another-host.com/v1/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  };
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (env &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;stage&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; over-ride only those that need to be&lt;/span&gt;
    &lt;span class="pl-smi"&gt;config&lt;/span&gt;.&lt;span class="pl-smi"&gt;someUrlBase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://stage-host/v1/auth&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
  } &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; (env &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;e2e&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class="pl-smi"&gt;config&lt;/span&gt;.&lt;span class="pl-smi"&gt;someUrlBase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://e2e-host/v1/auth&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
  }
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; don't waste time waiting for a connection or if servers don't respond within 5 seconds&lt;/span&gt;
  &lt;span class="pl-smi"&gt;karate&lt;/span&gt;.&lt;span class="pl-en"&gt;configure&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;connectTimeout&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;5000&lt;/span&gt;);
  &lt;span class="pl-smi"&gt;karate&lt;/span&gt;.&lt;span class="pl-en"&gt;configure&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;readTimeout&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;5000&lt;/span&gt;);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; config;
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Here above, you see the &lt;a href="#karate-log"&gt;&lt;code&gt;karate.log()&lt;/code&gt;&lt;/a&gt;, &lt;a href="#karate-env"&gt;&lt;code&gt;karate.env&lt;/code&gt;&lt;/a&gt; and &lt;a href="#karate-configure"&gt;&lt;code&gt;karate.configure()&lt;/code&gt;&lt;/a&gt; "helpers" being used. Note that the &lt;code&gt;karate-config.js&lt;/code&gt; is re-processed for &lt;em&gt;every&lt;/em&gt; &lt;code&gt;Scenario&lt;/code&gt; and in rare cases, you may want to initialize (e.g. auth tokens) only once for all of your tests. This can be achieved using &lt;a href="#karate-callsingle"&gt;&lt;code&gt;karate.callSingle()&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A common requirement is to pass dynamic parameter values via the command line, and you can use the &lt;a href="#karate-properties"&gt;&lt;code&gt;karate.properties['some.name']&lt;/code&gt;&lt;/a&gt; syntax for getting a system property passed via JVM options in the form &lt;code&gt;-Dsome.name=foo&lt;/code&gt;. Refer to the section on &lt;a href="#dynamic-port-numbers"&gt;dynamic port numbers&lt;/a&gt; for an example.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can even retrieve operating-system environment variables via &lt;a href="#calling-java"&gt;Java interop&lt;/a&gt; as follows: &lt;code&gt;var systemPath = java.lang.System.getenv('PATH');&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This decision to use JavaScript for config is influenced by years of experience with the set-up of complicated test-suites and fighting with &lt;a href="http://maven.apache.org/guides/introduction/introduction-to-profiles.html" rel="nofollow"&gt;Maven profiles&lt;/a&gt;, &lt;a href="https://maven.apache.org/plugins/maven-resources-plugin/examples/filter.html" rel="nofollow"&gt;Maven resource-filtering&lt;/a&gt; and the XML-soup that somehow gets summoned by the &lt;a href="http://maven.apache.org/plugins/maven-antrun-plugin/usage.html" rel="nofollow"&gt;Maven AntRun plugin&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Karate's approach frees you from Maven, is far more expressive, allows you to eyeball all environments in one place, and is still a plain-text file.  If you want, you could even create &lt;a href="https://stackoverflow.com/a/49693808/143475" rel="nofollow"&gt;nested chunks of JSON that 'name-space' your config variables&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One way to appreciate Karate's approach is to think over what it takes to add a new environment-dependent variable (e.g. a password) into a test. In typical frameworks it could mean changing multiple properties files, maven profiles and placeholders, and maybe even threading the value via a dependency-injection framework - before you can even access the value within your test.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This approach is indeed slightly more complicated than traditional &lt;code&gt;*.properties&lt;/code&gt; files - but you &lt;em&gt;need&lt;/em&gt; this complexity. Keep in mind that these are tests (not production code) and this config is going to be maintained more by the dev or QE team instead of the 'ops' or operations team.&lt;/p&gt;
&lt;p&gt;And there is no more worrying about Maven profiles and whether the 'right' &lt;code&gt;*.properties&lt;/code&gt; file has been copied to the proper place.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-switching-the-environment" class="anchor" aria-hidden="true" href="#switching-the-environment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Switching the Environment&lt;/h2&gt;
&lt;p&gt;There is only one thing you need to do to switch the environment - which is to set a Java system property.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;By default, the value of &lt;code&gt;karate.env&lt;/code&gt; when you access it within &lt;a href="#karate-configjs"&gt;&lt;code&gt;karate-config.js&lt;/code&gt;&lt;/a&gt; - would be &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The recipe for doing this when running Maven from the command line is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mvn test -DargLine="-Dkarate.env=e2e"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or in Gradle:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew test -Dkarate.env=e2e
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can refer to the documentation of the
&lt;a href="http://maven.apache.org/plugins-archives/maven-surefire-plugin-2.12.4/examples/system-properties.html" rel="nofollow"&gt;Maven Surefire Plugin&lt;/a&gt; for alternate ways of achieving this, but the &lt;code&gt;argLine&lt;/code&gt; approach is the simplest and should be more than sufficient for your Continuous Integration or test-automation needs.&lt;/p&gt;
&lt;p&gt;Here's a reminder that running any &lt;a href="https://maven.apache.org/surefire/maven-surefire-plugin/examples/single-test.html" rel="nofollow"&gt;single JUnit test via Maven&lt;/a&gt; can be done by:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mvn test -Dtest=CatsRunner
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Where &lt;code&gt;CatsRunner&lt;/code&gt; is the JUnit class name (in any package) you wish to run.&lt;/p&gt;
&lt;p&gt;Karate is flexible, you can easily over-write config variables within each individual test-script - which is very convenient when in dev-mode or rapid-prototyping.&lt;/p&gt;
&lt;p&gt;Just for illustrative purposes, you could 'hard-code' the &lt;code&gt;karate.env&lt;/code&gt; for a specific JUnit 4 test like this. Since CI test-automation would typically use a &lt;a href="#test-suites"&gt;designated 'top-level suite' test-runner&lt;/a&gt;, you can actually have these individual test-runners lying around without any ill-effects. They are useful for running tests from the IDE and for dev-mode troubleshooting. To ensure that they don't get run by CI by mistake - just &lt;em&gt;don't&lt;/em&gt; use the &lt;a href="http://maven.apache.org/surefire/maven-surefire-plugin/examples/inclusion-exclusion.html" rel="nofollow"&gt;&lt;code&gt;*Test.java&lt;/code&gt; naming convention&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;package&lt;/span&gt; &lt;span class="pl-smi"&gt;animals.cats&lt;/span&gt;;

&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.intuit.karate.junit4.Karate&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.junit.BeforeClass&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.junit.runner.RunWith&lt;/span&gt;;

&lt;span class="pl-k"&gt;@RunWith&lt;/span&gt;(&lt;span class="pl-smi"&gt;Karate&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;class)
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;CatsRunner&lt;/span&gt; {   
    
    &lt;span class="pl-k"&gt;@BeforeClass&lt;/span&gt;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;before&lt;/span&gt;() {
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;setProperty(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;karate.env&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pre-prod&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    }

}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-environment-specific-config" class="anchor" aria-hidden="true" href="#environment-specific-config"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Environment Specific Config&lt;/h2&gt;
&lt;p&gt;When your project gets complex, you can have separate &lt;code&gt;karate-config-&amp;lt;env&amp;gt;.js&lt;/code&gt; files that will be processed for that specific value of &lt;a href="#switching-the-environment"&gt;&lt;code&gt;karate.env&lt;/code&gt;&lt;/a&gt;. This is especially useful when you want to maintain passwords, secrets or even URL-s specific for your local dev environment.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Make sure you configure your source code management system (e.g. Git) to ignore &lt;code&gt;karate-config-*.js&lt;/code&gt; if needed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here are the rules Karate uses on bootstrap (before every &lt;code&gt;Scenario&lt;/code&gt; or &lt;code&gt;Examples&lt;/code&gt; row in a &lt;code&gt;Scenario Outline&lt;/code&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if the system-property &lt;code&gt;karate.config.dir&lt;/code&gt; was set, Karate will look in this folder for &lt;code&gt;karate-config.js&lt;/code&gt; - and if found, will process it&lt;/li&gt;
&lt;li&gt;else if &lt;code&gt;karate-config.js&lt;/code&gt; was not found in the above location (or &lt;code&gt;karate.config.dir&lt;/code&gt; was not set), &lt;a href="#configuration"&gt;&lt;code&gt;classpath:karate-config.js&lt;/code&gt;&lt;/a&gt; would be processed (this is the default / common case)&lt;/li&gt;
&lt;li&gt;if the &lt;code&gt;karate.env&lt;/code&gt; system property was set
&lt;ul&gt;
&lt;li&gt;if &lt;code&gt;karate.config.dir&lt;/code&gt; was set, Karate will also look for &lt;code&gt;file:&amp;lt;karate.config.dir&amp;gt;/karate-config-&amp;lt;env&amp;gt;.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;else (if the &lt;code&gt;karate.config.dir&lt;/code&gt; was &lt;em&gt;not&lt;/em&gt; set), Karate will look for &lt;code&gt;classpath:karate-config-&amp;lt;env&amp;gt;.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;if the over-ride &lt;code&gt;karate-config-&amp;lt;env&amp;gt;.js&lt;/code&gt; exists, it will be processed, and the configuration (JSON entries) returned by this function will over-ride any set by &lt;code&gt;karate-config.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Refer to the &lt;a href="karate-demo"&gt;karate demo&lt;/a&gt; for an &lt;a href="karate-demo/src/test/java/karate-config-contract.js"&gt;example&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-karate-basejs" class="anchor" aria-hidden="true" href="#karate-basejs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;karate-base.js&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Advanced users who build frameworks on top of Karate have the option to supply a &lt;code&gt;karate-base.js&lt;/code&gt; file that Karate will look for on the &lt;a href="#classpath"&gt;&lt;code&gt;classpath:&lt;/code&gt;&lt;/a&gt;. This is useful when you ship a JAR file containing re-usable features and JavaScript / Java code and want to 'default' a few variables that teams can 'inherit' from. So an additional rule in the above flow of 'rules' (before the &lt;em&gt;first&lt;/em&gt; step) is as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if &lt;code&gt;classpath:karate-base.js&lt;/code&gt; exists - Karate will process this as a &lt;a href="#configuration"&gt;configuration source&lt;/a&gt; before anything else&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-syntax-guide" class="anchor" aria-hidden="true" href="#syntax-guide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Syntax Guide&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-script-structure" class="anchor" aria-hidden="true" href="#script-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Script Structure&lt;/h2&gt;
&lt;p&gt;Karate scripts are technically in '&lt;a href="https://docs.cucumber.io/gherkin/reference/" rel="nofollow"&gt;Gherkin&lt;/a&gt;' format - but all you need to grok as someone who needs to test web-services are the three sections: &lt;code&gt;Feature&lt;/code&gt;, &lt;code&gt;Background&lt;/code&gt; and &lt;code&gt;Scenario&lt;/code&gt;. There can be multiple Scenario-s in a &lt;code&gt;*.feature&lt;/code&gt; file, and at least one should be present. The &lt;code&gt;Background&lt;/code&gt; is optional.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Variables set using &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;Background&lt;/code&gt; will be re-set before &lt;em&gt;every&lt;/em&gt; &lt;code&gt;Scenario&lt;/code&gt;. If you are looking for a way to do something only &lt;strong&gt;once&lt;/strong&gt; per &lt;code&gt;Feature&lt;/code&gt;, take a look at &lt;a href="#callonce"&gt;&lt;code&gt;callonce&lt;/code&gt;&lt;/a&gt;. On the other hand, if you are expecting a variable in the &lt;code&gt;Background&lt;/code&gt; to be modified by one &lt;code&gt;Scenario&lt;/code&gt; so that later ones can see the updated value - that is &lt;em&gt;not&lt;/em&gt; how you should think of them, and you should combine your 'flow' into one scenario. Keep in mind that you should be able to comment-out a &lt;code&gt;Scenario&lt;/code&gt; or skip some via &lt;a href="#tags"&gt;&lt;code&gt;tags&lt;/code&gt;&lt;/a&gt; without impacting any others. Note that the &lt;a href="#parallel-execution"&gt;parallel runner&lt;/a&gt; will run &lt;code&gt;Scenario&lt;/code&gt;-s in parallel, which means they can run in &lt;em&gt;any&lt;/em&gt; order.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Lines that start with a &lt;code&gt;#&lt;/code&gt; are comments.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Feature&lt;/span&gt;:&lt;span class="pl-s"&gt; brief description of what is being tested&lt;/span&gt;
    more lines of description if needed.

&lt;span class="pl-k"&gt;Background&lt;/span&gt;:
&lt;span class="pl-c"&gt;  # this section is optional !&lt;/span&gt;
&lt;span class="pl-c"&gt;  # steps here are executed before each Scenario in this file&lt;/span&gt;
&lt;span class="pl-c"&gt;  # variables defined here will be 'global' to all scenarios&lt;/span&gt;
&lt;span class="pl-c"&gt;  # and will be re-initialized before every scenario&lt;/span&gt;

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; brief description of this scenario&lt;/span&gt;
&lt;span class="pl-c"&gt;  # steps for this scenario&lt;/span&gt;

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; a different scenario&lt;/span&gt;
&lt;span class="pl-c"&gt;  # steps for this other scenario&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;There is also a variant of &lt;code&gt;Scenario&lt;/code&gt; called &lt;code&gt;Scenario Outline&lt;/code&gt; along with &lt;code&gt;Examples&lt;/code&gt;, useful for &lt;a href="#data-driven-tests"&gt;data-driven tests&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-given-when-then" class="anchor" aria-hidden="true" href="#given-when-then"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Given-When-Then&lt;/h3&gt;
&lt;p&gt;The business of web-services testing requires access to low-level aspects such as HTTP headers, URL-paths, query-parameters, complex JSON or XML payloads and response-codes. And Karate gives you control over these aspects with the small set of keywords focused on HTTP such as &lt;a href="#url"&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt;, &lt;a href="#path"&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt;, &lt;a href="#param"&gt;&lt;code&gt;param&lt;/code&gt;&lt;/a&gt;, etc.&lt;/p&gt;
&lt;p&gt;Karate does not attempt to have tests be in "natural language" like how Cucumber tests are &lt;a href="https://docs.cucumber.io/gherkin/reference/" rel="nofollow"&gt;traditionally expected to be&lt;/a&gt;. That said, the syntax is very concise, and the convention of every step having to start with either &lt;code&gt;Given&lt;/code&gt;, &lt;code&gt;And&lt;/code&gt;, &lt;code&gt;When&lt;/code&gt; or &lt;code&gt;Then&lt;/code&gt;, makes things very readable. You end up with a decent approximation of BDD even though web-services by nature are "headless", without a UI, and not really human-friendly.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-cucumber-vs-karate" class="anchor" aria-hidden="true" href="#cucumber-vs-karate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cucumber vs Karate&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Karate was based on Cucumber-JVM until version 0.8.0 but the parser and engine were &lt;a href="https://github.com/intuit/karate/issues/444"&gt;re-written from scratch&lt;/a&gt; in 0.9.0 onwards. So we use the same &lt;a href="https://docs.cucumber.io/gherkin/" rel="nofollow"&gt;Gherkin&lt;/a&gt; syntax - but the similarity ends there.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you are familiar with Cucumber (JVM), you may be wondering if you need to write &lt;a href="https://docs.cucumber.io/gherkin/step-organization/" rel="nofollow"&gt;step-definitions&lt;/a&gt;. The answer is &lt;strong&gt;no&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Karate's approach is that all the step-definitions you need in order to work with HTTP, JSON and XML have been already implemented. And since you can easily extend Karate &lt;a href="#call"&gt;using JavaScript&lt;/a&gt;, there is no need to compile Java code any more.&lt;/p&gt;
&lt;p&gt;The following table summarizes some key differences between Cucumber and Karate.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;g-emoji class="g-emoji" alias="white_small_square" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/25ab.png"&gt;▫️&lt;/g-emoji&gt;&lt;/th&gt;
&lt;th&gt;Cucumber&lt;/th&gt;
&lt;th&gt;Karate&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Step Definitions Built-In&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;No&lt;/strong&gt;. You need to keep implementing them as your functionality grows. &lt;a href="https://thepracticaldeveloper.com/2017/08/03/microservices-end-to-end-tests-with-cucumber-and-spring-boot/" rel="nofollow"&gt;This can get very tedious&lt;/a&gt;, especially since for &lt;a href="https://docs.cucumber.io/cucumber/state/#dependency-injection" rel="nofollow"&gt;dependency-injection&lt;/a&gt;, you are &lt;a href="http://angiejones.tech/rest-assured-with-cucumber-using-bdd-for-web-services-automation?refreshed=y#comment-40" rel="nofollow"&gt;on your own&lt;/a&gt;.&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Yes&lt;/strong&gt;. No extra Java code needed.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Single Layer of Code To Maintain&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;No&lt;/strong&gt;. There are 2 Layers. The &lt;a href="https://docs.cucumber.io/gherkin/reference/" rel="nofollow"&gt;Gherkin&lt;/a&gt; spec or &lt;code&gt;*.feature&lt;/code&gt; files make up one layer, and you will also have the corresponding Java step-definitions.&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Yes&lt;/strong&gt;. Only 1 layer of Karate-script (based on Gherkin).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Readable Specification&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Yes&lt;/strong&gt;. Cucumber will read like natural language &lt;em&gt;if&lt;/em&gt; you implement the step-definitions right.&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;No&lt;/strong&gt;. Although Karate is simple, and a &lt;a href="https://ayende.com/blog/2984/dsl-vs-fluent-interface-compare-contrast" rel="nofollow"&gt;true DSL&lt;/a&gt;, it is ultimately a &lt;a href="https://hackernoon.com/yes-karate-is-not-true-bdd-698bf4a9be39" rel="nofollow"&gt;mini-programming language&lt;/a&gt;. But it is &lt;a href="https://stackoverflow.com/a/47799207/143475" rel="nofollow"&gt;perfect for testing web-services&lt;/a&gt; at the level of HTTP requests and responses.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Re-Use Feature Files&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;No&lt;/strong&gt;. Cucumber does not support being able to call (and thus re-use) other &lt;code&gt;*.feature&lt;/code&gt; files from a test-script.&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;a href="#calling-other-feature-files"&gt;&lt;strong&gt;Yes&lt;/strong&gt;&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Dynamic Data-Driven Testing&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;No&lt;/strong&gt;. Cucumber's &lt;a href="#the-cucumber-way"&gt;&lt;code&gt;Scenario Outline&lt;/code&gt;&lt;/a&gt; expects the &lt;code&gt;Examples&lt;/code&gt; to contain a fixed set of rows.&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Yes&lt;/strong&gt;. Karate's support for calling other &lt;code&gt;*.feature&lt;/code&gt; files allows you to use a &lt;a href="#data-driven-features"&gt;JSON array as the data-source&lt;/a&gt; and you can &lt;a href="https://twitter.com/KarateDSL/status/1051433711814627329" rel="nofollow"&gt;use JSON&lt;/a&gt; or &lt;a href="#csv-files"&gt;even CSV&lt;/a&gt; directly in a data-driven &lt;code&gt;Scenario Outline&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Parallel Execution&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;No&lt;/strong&gt;. There are some challenges (especially with reporting) and you can find various discussions and third-party projects on the web that attempt to close this gap: &lt;a href="https://github.com/cucumber/cucumber-jvm/issues/630"&gt;1&lt;/a&gt; &lt;a href="https://opencredo.com/test-automation-concepts-parallel-test-execution/" rel="nofollow"&gt;2&lt;/a&gt; &lt;a href="http://stackoverflow.com/questions/41034116/how-to-execute-cucumber-feature-file-parallel" rel="nofollow"&gt;3&lt;/a&gt; &lt;a href="https://github.com/DisneyStudios/cucumber-slices-maven-plugin"&gt;4&lt;/a&gt; &lt;a href="https://github.com/temyers/cucumber-jvm-parallel-plugin"&gt;5&lt;/a&gt; &lt;a href="https://github.com/trivago/cucable-plugin"&gt;6&lt;/a&gt; &lt;a href="https://github.com/eu-evops/cucumber-runner-maven-plugin"&gt;7&lt;/a&gt; &lt;a href="https://automationrhapsody.com/running-cucumber-tests-in-parallel/" rel="nofollow"&gt;8&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;a href="#parallel-execution"&gt;&lt;strong&gt;Yes&lt;/strong&gt;&lt;/a&gt;. Karate runs even &lt;code&gt;Scenario&lt;/code&gt;-s in parallel, not just &lt;code&gt;Feature&lt;/code&gt;-s.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Run 'Set-Up' Routines Only Once&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;No&lt;/strong&gt;. Cucumber has a limitation where &lt;code&gt;Background&lt;/code&gt; steps are re-run for every &lt;code&gt;Scenario&lt;/code&gt; and worse - even for every &lt;code&gt;Examples&lt;/code&gt; row within a &lt;code&gt;Scenario Outline&lt;/code&gt;. This has been a &lt;a href="https://github.com/cucumber/cucumber-jvm/issues/515"&gt;highly-requested open issue&lt;/a&gt; for a &lt;em&gt;long&lt;/em&gt; time.&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;a href="#hooks"&gt;&lt;strong&gt;Yes&lt;/strong&gt;&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Embedded JavaScript Engine&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;No&lt;/strong&gt;. And you have to roll your own approach to environment-specific configuration and worry about &lt;a href="https://docs.cucumber.io/cucumber/state/#dependency-injection" rel="nofollow"&gt;dependency-injection&lt;/a&gt;.&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Yes&lt;/strong&gt;. Easily define all environments in a &lt;a href="#configuration"&gt;single file&lt;/a&gt; and share variables across all scenarios. Full script-ability via &lt;a href="#calling-javascript-functions"&gt;JS&lt;/a&gt; or &lt;a href="#java-interop"&gt;Java interop&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;One nice thing about the design of the Gherkin syntax is that script-steps are treated the same no matter whether they start with the keyword &lt;code&gt;Given&lt;/code&gt;, &lt;code&gt;And&lt;/code&gt;, &lt;code&gt;When&lt;/code&gt; or &lt;code&gt;Then&lt;/code&gt;.  What this means is that you are free to use whatever makes sense for you.  You could even have all the steps start with &lt;code&gt;When&lt;/code&gt; and Karate won't care.&lt;/p&gt;
&lt;p&gt;In fact Gherkin supports the &lt;a href="https://www.relishapp.com/cucumber/cucumber/docs/gherkin/using-star-notation-instead-of-given-when-then" rel="nofollow"&gt;catch-all symbol '&lt;code&gt;*&lt;/code&gt;'&lt;/a&gt; - instead of forcing you to use &lt;code&gt;Given&lt;/code&gt;, &lt;code&gt;When&lt;/code&gt; or &lt;code&gt;Then&lt;/code&gt;. This is perfect for those cases where it really doesn't make sense - for example the &lt;a href="#script-structure"&gt;&lt;code&gt;Background&lt;/code&gt;&lt;/a&gt; section or when you use the &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt; or &lt;a href="#set"&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; syntax. When eyeballing a test-script, think of the &lt;code&gt;*&lt;/code&gt; as a 'bullet-point'.&lt;/p&gt;
&lt;p&gt;You can read more about the Given-When-Then convention at the &lt;a href="https://docs.cucumber.io/gherkin/reference/" rel="nofollow"&gt;Cucumber reference documentation&lt;/a&gt;. Since Karate uses Gherkin, you can also employ &lt;a href="#data-driven-tests"&gt;data-driven&lt;/a&gt; techniques such as expressing data-tables in test scripts. Another good thing that Karate inherits is the nice IDE support for Cucumber that &lt;a href="https://www.jetbrains.com/idea/help/cucumber.html" rel="nofollow"&gt;IntelliJ&lt;/a&gt; and &lt;a href="https://cucumber.io/cucumber-eclipse/" rel="nofollow"&gt;Eclipse&lt;/a&gt; have. So you can do things like right-click and run a &lt;code&gt;*.feature&lt;/code&gt; file (or scenario) without needing to use a JUnit runner.&lt;/p&gt;
&lt;p&gt;For a detailed discussion on BDD and how Karate relates to Cucumber, please refer to this blog-post: &lt;a href="https://medium.com/@ptrthomas/yes-karate-is-not-true-bdd-698bf4a9be39" rel="nofollow"&gt;Yes, Karate is not &lt;em&gt;true&lt;/em&gt; BDD&lt;/a&gt;. It is the opinion of the author of Karate that &lt;em&gt;true&lt;/em&gt; BDD is un-necessary over-kill for API testing, and this is explained more in &lt;a href="https://stackoverflow.com/a/47799207/143475" rel="nofollow"&gt;this answer&lt;/a&gt; on &lt;a href="https://stackoverflow.com/questions/tagged/karate" rel="nofollow"&gt;Stack Overflow&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With the formalities out of the way, let's dive straight into the syntax.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-setting-and-using-variables" class="anchor" aria-hidden="true" href="#setting-and-using-variables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting and Using Variables&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-def" class="anchor" aria-hidden="true" href="#def"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;def&lt;/code&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-set-a-named-variable" class="anchor" aria-hidden="true" href="#set-a-named-variable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Set a named variable&lt;/h3&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# assigning a string value:&lt;/span&gt;
&lt;span class="pl-k"&gt;Given &lt;/span&gt;def myVar = &lt;span class="pl-s"&gt;'world'&lt;/span&gt;

&lt;span class="pl-c"&gt;# using a variable&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;print myVar

&lt;span class="pl-c"&gt;# assigning a number (you can use '*' instead of Given / When / Then)&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def myNum = 5&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that &lt;code&gt;def&lt;/code&gt; will over-write any variable that was using the same name earlier. Keep in mind that the start-up &lt;a href="#configuration"&gt;configuration routine&lt;/a&gt; could have already initialized some variables before the script even started.&lt;/p&gt;
&lt;p&gt;The examples above are simple, but a variety of expression 'shapes' are supported on the right hand side of the &lt;code&gt;=&lt;/code&gt; symbol. The section on &lt;a href="#karate-expressions"&gt;Karate Expressions&lt;/a&gt; goes into the details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-assert" class="anchor" aria-hidden="true" href="#assert"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-assert-if-an-expression-evaluates-to-true" class="anchor" aria-hidden="true" href="#assert-if-an-expression-evaluates-to-true"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Assert if an expression evaluates to &lt;code&gt;true&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Once defined, you can refer to a variable by name. Expressions are evaluated using the embedded JavaScript engine. The assert keyword can be used to assert that an expression returns a boolean value.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;def color = &lt;span class="pl-s"&gt;'red '&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;def num = 5
&lt;span class="pl-k"&gt;Then &lt;/span&gt;assert color + num == &lt;span class="pl-s"&gt;'red 5'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Everything to the right of the &lt;code&gt;assert&lt;/code&gt; keyword will be evaluated as a single expression.&lt;/p&gt;
&lt;p&gt;Something worth mentioning here is that you would hardly need to use &lt;code&gt;assert&lt;/code&gt; in your test scripts. Instead you would typically use the &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; keyword, that is designed for performing powerful assertions against JSON and XML response payloads.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-print" class="anchor" aria-hidden="true" href="#print"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;print&lt;/code&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-log-to-the-console" class="anchor" aria-hidden="true" href="#log-to-the-console"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Log to the console&lt;/h3&gt;
&lt;p&gt;You can use &lt;code&gt;print&lt;/code&gt; to log variables to the console in the middle of a script. For convenience, you can have multiple expressions separated by commas, so this is the recommended pattern:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;print &lt;span class="pl-s"&gt;'the value of a is:'&lt;/span&gt;, a&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Similar to &lt;a href="#assert"&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt;, the expressions on the right-hand-side of a &lt;code&gt;print&lt;/code&gt; have to be valid JavaScript. JsonPath and &lt;a href="#karate-expressions"&gt;Karate expressions&lt;/a&gt; are not supported.&lt;/p&gt;
&lt;p&gt;If you use commas (instead of concatenating strings using &lt;code&gt;+&lt;/code&gt;), Karate will 'pretty-print' variables, which is what you typically want when dealing with &lt;a href="#native-data-types"&gt;JSON or XML&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def myJson = { foo: &lt;span class="pl-s"&gt;'bar'&lt;/span&gt;, baz: [1, 2, 3] }
&lt;span class="pl-k"&gt;* &lt;/span&gt;print &lt;span class="pl-s"&gt;'the value of myJson is:'&lt;/span&gt;, myJson&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which results in the following output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;20:29:11.290 [main] INFO  com.intuit.karate - [print] the value of myJson is: {
  "foo": "bar",
  "baz": [
    1,
    2,
    3
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Since XML is represented internally as a JSON-like or map-like object, if you perform string concatenation when printing, you will &lt;em&gt;not&lt;/em&gt; see XML - which can be confusing at first. Use the comma-delimited form (see above) or the JS helper (see below).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The built-in &lt;a href="#the-karate-object"&gt;&lt;code&gt;karate&lt;/code&gt; object&lt;/a&gt; is explained in detail later, but for now, note that this is also injected into &lt;code&gt;print&lt;/code&gt; (and even &lt;code&gt;assert&lt;/code&gt;) statements, and it has a helpful &lt;a href="#karate-pretty"&gt;&lt;code&gt;pretty&lt;/code&gt;&lt;/a&gt; method, that takes a JSON argument and a &lt;a href="#karate-prettyxml"&gt;&lt;code&gt;prettyXml&lt;/code&gt;&lt;/a&gt; method that deals with XML. So you could have also done something like:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;print &lt;span class="pl-s"&gt;'the value of myJson is:&lt;span class="pl-cce"&gt;\n&lt;/span&gt;'&lt;/span&gt; + karate.pretty(myJson)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also refer to the &lt;a href="#configure"&gt;&lt;code&gt;configure&lt;/code&gt;&lt;/a&gt; keyword on how to switch on pretty-printing of all HTTP requests and responses.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-native-data-types" class="anchor" aria-hidden="true" href="#native-data-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;'Native' data types&lt;/h1&gt;
&lt;p&gt;Native data types mean that you can insert them into a script without having to worry about enclosing them in strings and then having to 'escape' double-quotes all over the place. They seamlessly fit 'in-line' within your test script.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-json" class="anchor" aria-hidden="true" href="#json"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON&lt;/h2&gt;
&lt;p&gt;Note that the parser is 'lenient' so that you don't have to enclose all keys in double-quotes.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def cat = { name: &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt;, scores: [2, 5] }
&lt;span class="pl-k"&gt;* &lt;/span&gt;assert cat.scores[1] == 5&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Some characters such as the hyphen &lt;code&gt;-&lt;/code&gt; are not permitted in 'lenient' JSON keys (because they are interpreted by the JS engine as a 'minus sign'). In such cases, you &lt;em&gt;have&lt;/em&gt; to use string quotes: &lt;code&gt;{ 'Content-Type': 'application/json' }&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When asserting for expected values in JSON or XML, always prefer using &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; instead of &lt;a href="#assert"&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt;. Match failure messages are much more descriptive and useful, and you get the power of &lt;a href="#embedded-expressions"&gt;embedded expressions&lt;/a&gt; and &lt;a href="#fuzzy-matching"&gt;fuzzy matching&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def cats = [{ name: &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt; }, { name: &lt;span class="pl-s"&gt;'Bob'&lt;/span&gt; }]
&lt;span class="pl-k"&gt;* &lt;/span&gt;match cats[1] == { name: &lt;span class="pl-s"&gt;'Bob'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Karate's native support for JSON means that you can assign parts of a JSON instance into another variable, which is useful when dealing with complex &lt;a href="#response"&gt;&lt;code&gt;response&lt;/code&gt;&lt;/a&gt; payloads.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def first = cats[0]
&lt;span class="pl-k"&gt;* &lt;/span&gt;match first == { name: &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For manipulating or updating JSON (or XML) using path expressions, refer to the &lt;a href="#set"&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; keyword.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-xml" class="anchor" aria-hidden="true" href="#xml"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;XML&lt;/h2&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;def cat = &lt;span class="pl-smi"&gt;&amp;lt;cat&amp;gt;&amp;lt;name&amp;gt;&lt;/span&gt;Billie&lt;span class="pl-smi"&gt;&amp;lt;/name&amp;gt;&amp;lt;scores&amp;gt;&amp;lt;score&amp;gt;&lt;/span&gt;2&lt;span class="pl-smi"&gt;&amp;lt;/score&amp;gt;&amp;lt;score&amp;gt;&lt;/span&gt;5&lt;span class="pl-smi"&gt;&amp;lt;/score&amp;gt;&amp;lt;/scores&amp;gt;&amp;lt;/cat&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;# sadly, xpath list indexes start from 1&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match cat/cat/scores/score[2] == &lt;span class="pl-s"&gt;'5'&lt;/span&gt;
&lt;span class="pl-c"&gt;# but karate allows you to traverse xml like json !!&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match cat.cat.scores.score[1] == 5&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-embedded-expressions" class="anchor" aria-hidden="true" href="#embedded-expressions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Embedded Expressions&lt;/h3&gt;
&lt;p&gt;Karate has a very useful payload 'templating' approach. Variables can be referred to within JSON, for example:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;def user = { name: &lt;span class="pl-s"&gt;'john'&lt;/span&gt;, age: 21 }
&lt;span class="pl-k"&gt;And &lt;/span&gt;def lang = &lt;span class="pl-s"&gt;'en'&lt;/span&gt;
&lt;span class="pl-k"&gt;When &lt;/span&gt;def session = { name: &lt;span class="pl-s"&gt;'#(user.name)'&lt;/span&gt;, locale: &lt;span class="pl-s"&gt;'#(lang)'&lt;/span&gt;, sessionUser: &lt;span class="pl-s"&gt;'#(user)'&lt;/span&gt;  }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So the rule is - if a string value within a JSON (or XML) object declaration is enclosed between &lt;code&gt;#(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt; - it will be evaluated as a JavaScript expression. And any variables which are alive in the context can be used in this expression. Here's how it works for XML:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;def user = &lt;span class="pl-smi"&gt;&amp;lt;user&amp;gt;&amp;lt;name&amp;gt;&lt;/span&gt;john&lt;span class="pl-smi"&gt;&amp;lt;/name&amp;gt;&amp;lt;/user&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;def lang = &lt;span class="pl-s"&gt;'en'&lt;/span&gt;
&lt;span class="pl-k"&gt;When &lt;/span&gt;def session = &lt;span class="pl-smi"&gt;&amp;lt;session&amp;gt;&amp;lt;locale&amp;gt;&lt;/span&gt;&lt;span class="pl-c"&gt;#(lang)&amp;lt;/locale&amp;gt;&amp;lt;sessionUser&amp;gt;#(user)&amp;lt;/sessionUser&amp;gt;&amp;lt;/session&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This comes in useful in some cases - and avoids needing to use the &lt;a href="#set"&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; keyword or &lt;a href="#javascript-functions"&gt;JavaScript functions&lt;/a&gt; to manipulate JSON. So you get the best of both worlds: the elegance of JSON to express complex nested data - while at the same time being able to dynamically plug values (that could even be other JSON or XML 'trees') into a 'template'.&lt;/p&gt;
&lt;p&gt;Note that embedded expressions will be evaluated even when you &lt;a href="#reading-files"&gt;&lt;code&gt;read()&lt;/code&gt; from a JSON or XML file&lt;/a&gt;. This is super-useful for re-use and data-driven tests.&lt;/p&gt;
&lt;p&gt;A few special built-in variables such as &lt;code&gt;$&lt;/code&gt; (which is a &lt;a href="#referring-to-self"&gt;reference to the JSON root&lt;/a&gt;) - can be mixed into JSON embedded expressions.&lt;/p&gt;
&lt;p&gt;A &lt;a href="#remove-if-null"&gt;special case&lt;/a&gt; of embedded expressions can remove a JSON key (or XML element / attribute) if the expression evaluates to &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-rules-for-embedded-expressions" class="anchor" aria-hidden="true" href="#rules-for-embedded-expressions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rules for Embedded Expressions&lt;/h4&gt;
&lt;p&gt;They work only within JSON or XML. And the expression &lt;em&gt;has&lt;/em&gt; to start with &lt;code&gt;"#(&lt;/code&gt; and end with &lt;code&gt;)&lt;/code&gt; - so note that string-concatenation may not work quite the way you expect:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# wrong !&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = { bar: &lt;span class="pl-s"&gt;'hello #(name)'&lt;/span&gt; }
&lt;span class="pl-c"&gt;# right !&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = { bar: &lt;span class="pl-s"&gt;'#("hello " + name)'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Observe how you can achieve string concatenation if you really want, because any valid JavaScript expression can be stuffed within an embedded expression. You could always do this in two steps:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def temp = &lt;span class="pl-s"&gt;'hello '&lt;/span&gt; + name
&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = { bar: &lt;span class="pl-s"&gt;'#(temp)'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As a convenience, embedded expressions are supported on the Right Hand Side of a &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; statement even for "quoted string" literals:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = &lt;span class="pl-s"&gt;'a1'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == &lt;span class="pl-s"&gt;'#("a" + 1)'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-enclosed-javascript" class="anchor" aria-hidden="true" href="#enclosed-javascript"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enclosed JavaScript&lt;/h3&gt;
&lt;p&gt;An alternative to embedded expressions (for JSON only) is to enclose the entire payload within parentheses - which tells Karate to evaluate it as pure JavaScript. This can be a lot simpler than embedded expressions in many cases, and JavaScript programmers will feel right at home.&lt;/p&gt;
&lt;p&gt;The example below shows the difference between embedded expressions and enclosed JavaScript:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;When &lt;/span&gt;def user = { name: &lt;span class="pl-s"&gt;'john'&lt;/span&gt;, age: 21 }
&lt;span class="pl-k"&gt;And &lt;/span&gt;def lang = &lt;span class="pl-s"&gt;'en'&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;def embedded = { name: &lt;span class="pl-s"&gt;'#(user.name)'&lt;/span&gt;, locale: &lt;span class="pl-s"&gt;'#(lang)'&lt;/span&gt;, sessionUser: &lt;span class="pl-s"&gt;'#(user)'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;def enclosed = ({ name: user.name, locale: lang, sessionUser: user })
&lt;span class="pl-k"&gt;* &lt;/span&gt;match embedded == enclosed&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;So how would you choose between the two approaches to create JSON ? &lt;a href="#embedded-expressions"&gt;Embedded expressions&lt;/a&gt; are useful when you have complex JSON &lt;a href="#reading-files"&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; from files, because you can auto-replace (or even &lt;a href="#remove-if-null"&gt;remove&lt;/a&gt;) data-elements with values dynamically evaluated from variables. And the JSON will still be 'well-formed', and editable in your IDE or text-editor. Embedded expressions also make more sense in &lt;a href="#ignore-or-validate"&gt;validation&lt;/a&gt; and &lt;a href="#schema-validation"&gt;schema-like&lt;/a&gt; short-cut situations. It can also be argued that the &lt;code&gt;#&lt;/code&gt; symbol is easy to spot when eyeballing your test scripts - which makes things more readable and clear.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-multi-line-expressions" class="anchor" aria-hidden="true" href="#multi-line-expressions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multi-Line Expressions&lt;/h3&gt;
&lt;p&gt;The keywords &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt;, &lt;a href="#set"&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt;, &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt;, &lt;a href="#request"&gt;&lt;code&gt;request&lt;/code&gt;&lt;/a&gt; and &lt;a href="#eval"&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; take multi-line input as the last argument. This is useful when you want to express a one-off lengthy snippet of text in-line, without having to split it out into a separate &lt;a href="#reading-files"&gt;file&lt;/a&gt;. Here are some examples:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# instead of:&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def cat = &lt;span class="pl-smi"&gt;&amp;lt;cat&amp;gt;&amp;lt;name&amp;gt;&lt;/span&gt;Billie&lt;span class="pl-smi"&gt;&amp;lt;/name&amp;gt;&amp;lt;scores&amp;gt;&amp;lt;score&amp;gt;&lt;/span&gt;2&lt;span class="pl-smi"&gt;&amp;lt;/score&amp;gt;&amp;lt;score&amp;gt;&lt;/span&gt;5&lt;span class="pl-smi"&gt;&amp;lt;/score&amp;gt;&amp;lt;/scores&amp;gt;&amp;lt;/cat&amp;gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;# this is more readable:&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def cat = 
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;cat&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;name&amp;gt;Billie&amp;lt;/name&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;scores&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;          &amp;lt;score&amp;gt;2&amp;lt;/score&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;          &amp;lt;score&amp;gt;5&amp;lt;/score&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;/scores&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;/cat&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;
&lt;span class="pl-c"&gt;# example of a request payload in-line&lt;/span&gt;
&lt;span class="pl-k"&gt;Given &lt;/span&gt;request 
  &lt;span class="pl-s"&gt;""" &lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;?xml version='1.0' encoding='UTF-8'?&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;S:Envelope xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;S:Body&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;ns2:QueryUsageBalance xmlns:ns2="http://www.mycompany.com/usage/V1"&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;ns2:UsageBalance&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;          &amp;lt;ns2:LicenseId&amp;gt;12341234&amp;lt;/ns2:LicenseId&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;/ns2:UsageBalance&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;/ns2:QueryUsageBalance&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;/S:Body&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;/S:Envelope&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;

&lt;span class="pl-c"&gt;# example of a payload assertion in-line&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match response ==
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  { id: { domain: "DOM", type: "entityId", value: "#ignore" },&lt;/span&gt;
&lt;span class="pl-s"&gt;    created: { on: "#ignore" }, &lt;/span&gt;
&lt;span class="pl-s"&gt;    lastUpdated: { on: "#ignore" },&lt;/span&gt;
&lt;span class="pl-s"&gt;    entityState: "ACTIVE"&lt;/span&gt;
&lt;span class="pl-s"&gt;  }&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-table" class="anchor" aria-hidden="true" href="#table"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;table&lt;/code&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-a-simple-way-to-create-json-arrays" class="anchor" aria-hidden="true" href="#a-simple-way-to-create-json-arrays"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A simple way to create JSON Arrays&lt;/h3&gt;
&lt;p&gt;Now that we have seen how JSON is a 'native' data type that Karate understands, there is a very nice way to create JSON using Cucumber's support for expressing &lt;a href="http://www.thinkcode.se/blog/2014/06/30/cucumber-data-tables" rel="nofollow"&gt;data-tables&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;table cats
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;name&lt;/span&gt;   | &lt;span class="pl-s1"&gt;age&lt;/span&gt; |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | '&lt;span class="pl-s1"&gt;Bob&lt;/span&gt;'  | &lt;span class="pl-s1"&gt;2&lt;/span&gt;   |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | '&lt;span class="pl-s1"&gt;Wild&lt;/span&gt;' | &lt;span class="pl-s1"&gt;4&lt;/span&gt;   |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | '&lt;span class="pl-s1"&gt;Nyan&lt;/span&gt;' | &lt;span class="pl-s1"&gt;3&lt;/span&gt;   |&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;match cats == [{name: &lt;span class="pl-s"&gt;'Bob'&lt;/span&gt;, age: 2}, {name: &lt;span class="pl-s"&gt;'Wild'&lt;/span&gt;, age: 4}, {name: &lt;span class="pl-s"&gt;'Nyan'&lt;/span&gt;, age: 3}]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; keyword is explained later, but it should be clear right away how convenient the &lt;code&gt;table&lt;/code&gt; keyword is. JSON can be combined with the ability to &lt;a href="#data-driven-features"&gt;call other &lt;code&gt;*.feature&lt;/code&gt; files&lt;/a&gt; to achieve dynamic data-driven testing in Karate.&lt;/p&gt;
&lt;p&gt;Notice that in the above example, string values within the table need to be enclosed in quotes. Otherwise they would be evaluated as expressions - which does come in useful for some dynamic data-driven situations:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def one = &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def two = { baz: &lt;span class="pl-s"&gt;'world'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;table json
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;foo&lt;/span&gt;     | &lt;span class="pl-s1"&gt;bar&lt;/span&gt;            |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;one&lt;/span&gt;     | { &lt;span class="pl-s1"&gt;baz&lt;/span&gt;: &lt;span class="pl-s1"&gt;1&lt;/span&gt; }     |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;two&lt;/span&gt;.&lt;span class="pl-s1"&gt;baz&lt;/span&gt; | ['&lt;span class="pl-s1"&gt;baz&lt;/span&gt;', '&lt;span class="pl-s1"&gt;ban&lt;/span&gt;'] |&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == [{ foo: &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;, bar: { baz: 1 } }, { foo: &lt;span class="pl-s"&gt;'world'&lt;/span&gt;, bar: [&lt;span class="pl-s"&gt;'baz'&lt;/span&gt;, &lt;span class="pl-s"&gt;'ban'&lt;/span&gt;] }]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yes, you can even nest chunks of JSON in tables, and things work as you would expect.&lt;/p&gt;
&lt;p&gt;Empty cells or expressions that evaluate to &lt;code&gt;null&lt;/code&gt; will result in the key being omitted from the JSON. To force a &lt;code&gt;null&lt;/code&gt; value, wrap it in parentheses:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def one = { baz: null }
&lt;span class="pl-k"&gt;* &lt;/span&gt;table json
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;foo&lt;/span&gt;     | &lt;span class="pl-s1"&gt;bar&lt;/span&gt;    |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | '&lt;span class="pl-s1"&gt;hello&lt;/span&gt;' |        |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;one&lt;/span&gt;.&lt;span class="pl-s1"&gt;baz&lt;/span&gt; | (&lt;span class="pl-s1"&gt;null&lt;/span&gt;) |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | '&lt;span class="pl-s1"&gt;world&lt;/span&gt;' | &lt;span class="pl-s1"&gt;null&lt;/span&gt;   |&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == [{ foo: &lt;span class="pl-s"&gt;'hello'&lt;/span&gt; }, { bar: null }, { foo: &lt;span class="pl-s"&gt;'world'&lt;/span&gt; }]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An alternate way to create data is using the &lt;a href="#set-multiple"&gt;&lt;code&gt;set&lt;/code&gt; multiple&lt;/a&gt; syntax. It is actually a 'transpose' of the &lt;code&gt;table&lt;/code&gt; approach, and can be very convenient when there are a large number of keys per row or if the nesting is complex. Here is an example of what is possible:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;set search
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;path&lt;/span&gt;       | &lt;span class="pl-s1"&gt;0&lt;/span&gt;        | &lt;span class="pl-s1"&gt;1&lt;/span&gt;      | &lt;span class="pl-s1"&gt;2&lt;/span&gt;       |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;name&lt;/span&gt;.&lt;span class="pl-s1"&gt;first&lt;/span&gt; | '&lt;span class="pl-s1"&gt;John&lt;/span&gt;'   | '&lt;span class="pl-s1"&gt;Jane&lt;/span&gt;' |         |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;name&lt;/span&gt;.&lt;span class="pl-s1"&gt;last&lt;/span&gt;  | '&lt;span class="pl-s1"&gt;Smith&lt;/span&gt;'  | '&lt;span class="pl-s1"&gt;Doe&lt;/span&gt;'  | '&lt;span class="pl-s1"&gt;Waldo&lt;/span&gt;' |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;age&lt;/span&gt;        | &lt;span class="pl-s1"&gt;20&lt;/span&gt;       |        |         |&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;match search[0] == { name: { first: &lt;span class="pl-s"&gt;'John'&lt;/span&gt;, last: &lt;span class="pl-s"&gt;'Smith'&lt;/span&gt; }, age: 20 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match search[1] == { name: { first: &lt;span class="pl-s"&gt;'Jane'&lt;/span&gt;, last: &lt;span class="pl-s"&gt;'Doe'&lt;/span&gt; } }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match search[2] == { name: { last: &lt;span class="pl-s"&gt;'Waldo'&lt;/span&gt; } }&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-text" class="anchor" aria-hidden="true" href="#text"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;text&lt;/code&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-dont-parse-treat-as-raw-text" class="anchor" aria-hidden="true" href="#dont-parse-treat-as-raw-text"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Don't parse, treat as raw text&lt;/h3&gt;
&lt;p&gt;Not something you would commonly use, but in some cases you need to disable Karate's default behavior of attempting to parse anything that looks like JSON (or XML) when using &lt;a href="#multi-line-expressions"&gt;multi-line&lt;/a&gt; / string &lt;a href="#karate-expressions"&gt;expressions&lt;/a&gt;. This is especially relevant when manipulating &lt;a href="http://graphql.org" rel="nofollow"&gt;GraphQL&lt;/a&gt; queries - because although they look suspiciously like JSON, they are not, and tend to confuse Karate's internals. And as shown in the example below, having text 'in-line' is useful especially when you use the &lt;code&gt;Scenario Outline:&lt;/code&gt; and &lt;code&gt;Examples:&lt;/code&gt; for &lt;a href="#data-driven-tests"&gt;data-driven tests&lt;/a&gt; involving Cucumber-style place-holder substitutions in strings.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Scenario Outline&lt;/span&gt;:
&lt;span class="pl-c"&gt;  # note the 'text' keyword instead of 'def'&lt;/span&gt;
  &lt;span class="pl-k"&gt;* &lt;/span&gt;text query =
    &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;    {&lt;/span&gt;
&lt;span class="pl-s"&gt;      hero(name: "&amp;lt;name&amp;gt;") {&lt;/span&gt;
&lt;span class="pl-s"&gt;        height&lt;/span&gt;
&lt;span class="pl-s"&gt;        mass&lt;/span&gt;
&lt;span class="pl-s"&gt;      }&lt;/span&gt;
&lt;span class="pl-s"&gt;    }&lt;/span&gt;
&lt;span class="pl-s"&gt;    """&lt;/span&gt;
  &lt;span class="pl-k"&gt;Given &lt;/span&gt;path &lt;span class="pl-s"&gt;'graphql'&lt;/span&gt;
  &lt;span class="pl-k"&gt;And &lt;/span&gt;request { query: &lt;span class="pl-s"&gt;'#(query)'&lt;/span&gt; }
  &lt;span class="pl-k"&gt;And &lt;/span&gt;header Accept = &lt;span class="pl-s"&gt;'application/json'&lt;/span&gt;
  &lt;span class="pl-k"&gt;When &lt;/span&gt;method post
  &lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200

  &lt;span class="pl-k"&gt;Examples&lt;/span&gt;:
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;name&lt;/span&gt;  |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;John&lt;/span&gt;  |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;Smith&lt;/span&gt; | &lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that if you did not need to inject &lt;a href="#data-driven-tests"&gt;&lt;code&gt;Examples:&lt;/code&gt;&lt;/a&gt; into 'placeholders' enclosed within &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;a href="#reading-files"&gt;reading from a file&lt;/a&gt; with the extension &lt;code&gt;*.txt&lt;/code&gt; may have been sufficient.&lt;/p&gt;
&lt;p&gt;For placeholder-substitution, the &lt;a href="#replace"&gt;&lt;code&gt;replace&lt;/code&gt;&lt;/a&gt; keyword can be used instead, but with the advantage that the text can be read from a file or dynamically created.&lt;/p&gt;
&lt;p&gt;Karate is a great fit for testing GraphQL because of how easy it is to deal with dynamic and deeply nested JSON responses. Refer to this example for more details: &lt;a href="karate-demo/src/test/java/demo/graphql/graphql.feature"&gt;&lt;code&gt;graphql.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-replace" class="anchor" aria-hidden="true" href="#replace"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;replace&lt;/code&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-text-placeholder-replacement" class="anchor" aria-hidden="true" href="#text-placeholder-replacement"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Text Placeholder Replacement&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Modifying existing JSON and XML is &lt;strong&gt;natively&lt;/strong&gt; supported by Karate via the &lt;a href="#set"&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; keyword, and &lt;code&gt;replace&lt;/code&gt; is primarily intended for dealing with raw strings. But when you deal with complex, nested JSON (or XML) - it may be easier in some cases to use &lt;code&gt;replace&lt;/code&gt;, especially when you want to substitute multiple placeholders with one value, and when you don't need array manipulation. Since &lt;code&gt;replace&lt;/code&gt; auto-converts the result to a string, make sure you perform &lt;a href="#type-conversion"&gt;type conversion&lt;/a&gt; back to JSON (or XML) if applicable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Karate provides an elegant 'native-like' experience for placeholder substitution within strings or text content. This is useful in any situation where you need to concatenate dynamic string fragments to form content such as GraphQL or SQL.&lt;/p&gt;
&lt;p&gt;The placeholder format defaults to angle-brackets, for example: &lt;code&gt;&amp;lt;replaceMe&amp;gt;&lt;/code&gt;. Here is how to replace one placeholder at a time:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def text = &lt;span class="pl-s"&gt;'hello &amp;lt;foo&amp;gt; world'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;replace text.foo = &lt;span class="pl-s"&gt;'bar'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match text == &lt;span class="pl-s"&gt;'hello bar world'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Karate makes it really easy to substitute multiple placeholders in a single, readable step as follows:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def text = &lt;span class="pl-s"&gt;'hello &amp;lt;one&amp;gt; world &amp;lt;two&amp;gt; bye'&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;replace text
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;token&lt;/span&gt; | &lt;span class="pl-s1"&gt;value&lt;/span&gt;   |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;one&lt;/span&gt;   | '&lt;span class="pl-s1"&gt;cruel&lt;/span&gt;' |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;two&lt;/span&gt;   | '&lt;span class="pl-s1"&gt;good&lt;/span&gt;'  |&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;match text == &lt;span class="pl-s"&gt;'hello cruel world good bye'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note how strings have to be enclosed in quotes. This is so that you can mix expressions into text replacements as shown below. This example also shows how you can use a custom placeholder format instead of the default:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def text = &lt;span class="pl-s"&gt;'hello &amp;lt;one&amp;gt; world ${two} bye'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def first = &lt;span class="pl-s"&gt;'cruel'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def json = { second: &lt;span class="pl-s"&gt;'good'&lt;/span&gt; }

&lt;span class="pl-k"&gt;* &lt;/span&gt;replace text
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;token&lt;/span&gt;  | &lt;span class="pl-s1"&gt;value&lt;/span&gt;       |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;one&lt;/span&gt;    | &lt;span class="pl-s1"&gt;first&lt;/span&gt;       |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | ${&lt;span class="pl-s1"&gt;two&lt;/span&gt;} | &lt;span class="pl-s1"&gt;json&lt;/span&gt;.&lt;span class="pl-s1"&gt;second&lt;/span&gt; |&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;match text == &lt;span class="pl-s"&gt;'hello cruel world good bye'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Refer to this file for a detailed example: &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/replace.feature"&gt;&lt;code&gt;replace.feature&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-yaml-files" class="anchor" aria-hidden="true" href="#yaml-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;YAML Files&lt;/h2&gt;
&lt;p&gt;For those who may prefer &lt;a href="http://yaml.org" rel="nofollow"&gt;YAML&lt;/a&gt; as a simpler way to represent data, Karate allows you to read YAML content from a &lt;a href="#reading-files"&gt;file&lt;/a&gt; - and it will be auto-converted into JSON.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# yaml from a file (the extension matters), and the data-type of 'bar' would be JSON&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def bar = read(&lt;span class="pl-s"&gt;'data.yaml'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-yaml" class="anchor" aria-hidden="true" href="#yaml"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;yaml&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;A very rare need is to be able to convert a string which happens to be in YAML form into JSON, and this can be done via the &lt;code&gt;yaml&lt;/code&gt; type cast keyword. For example - if a response data element or downloaded file is YAML and you need to use the data in subsequent steps.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;text foo =
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  name: John&lt;/span&gt;
&lt;span class="pl-s"&gt;  input:&lt;/span&gt;
&lt;span class="pl-s"&gt;    id: 1&lt;/span&gt;
&lt;span class="pl-s"&gt;    subType: &lt;/span&gt;
&lt;span class="pl-s"&gt;      name: Smith&lt;/span&gt;
&lt;span class="pl-s"&gt;      deleted: false&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;
&lt;span class="pl-c"&gt;# yaml to json type conversion  &lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;yaml foo = foo
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo ==
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  {&lt;/span&gt;
&lt;span class="pl-s"&gt;    name: 'John',&lt;/span&gt;
&lt;span class="pl-s"&gt;    input: { &lt;/span&gt;
&lt;span class="pl-s"&gt;      id: 1,&lt;/span&gt;
&lt;span class="pl-s"&gt;      subType: { name: 'Smith', deleted: false }    &lt;/span&gt;
&lt;span class="pl-s"&gt;    }&lt;/span&gt;
&lt;span class="pl-s"&gt;  }&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-csv-files" class="anchor" aria-hidden="true" href="#csv-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CSV Files&lt;/h2&gt;
&lt;p&gt;Karate can read &lt;code&gt;*.csv&lt;/code&gt; files and will auto-convert them to JSON. A header row is always expected. See the section on &lt;a href="#reading-files"&gt;reading files&lt;/a&gt; - and also this example &lt;a href="karate-demo/src/test/java/demo/outline/dynamic-csv.feature"&gt;&lt;code&gt;dynamic-csv.feature&lt;/code&gt;&lt;/a&gt;, which shows off the convenience of &lt;a href="#dynamic-scenario-outline"&gt;dynamic &lt;code&gt;Scenario Outline&lt;/code&gt;-s&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In rare cases you may want to use a csv-file as-is and &lt;em&gt;not&lt;/em&gt; auto-convert it to JSON. A good example is when you want to use a CSV file as the &lt;a href="#request"&gt;request-body&lt;/a&gt; for a file-upload. You could get by by renaming the file-extension to say &lt;code&gt;*.txt&lt;/code&gt; but an alternative is to use the &lt;a href="#read-file-as-string"&gt;&lt;code&gt;karate.readAsString()&lt;/code&gt;&lt;/a&gt; API.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-csv" class="anchor" aria-hidden="true" href="#csv"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Just like &lt;a href="#yaml"&gt;&lt;code&gt;yaml&lt;/code&gt;&lt;/a&gt;, you may occasionally need to convert a string which happens to be in CSV form into JSON, and this can be done via the &lt;code&gt;csv&lt;/code&gt; keyword.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;text foo =
    &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;    name,type&lt;/span&gt;
&lt;span class="pl-s"&gt;    Billie,LOL&lt;/span&gt;
&lt;span class="pl-s"&gt;    Bob,Wild&lt;/span&gt;
&lt;span class="pl-s"&gt;    """&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;csv bar = foo
&lt;span class="pl-k"&gt;* &lt;/span&gt;match bar == [{ name: &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt;, type: &lt;span class="pl-s"&gt;'LOL'&lt;/span&gt; }, { name: &lt;span class="pl-s"&gt;'Bob'&lt;/span&gt;, type: &lt;span class="pl-s"&gt;'Wild'&lt;/span&gt; }]&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-javascript-functions" class="anchor" aria-hidden="true" href="#javascript-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JavaScript Functions&lt;/h2&gt;
&lt;p&gt;JavaScript Functions are also 'native'. And yes, functions can take arguments.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Standard JavaScript syntax rules apply, but the right-hand-side (or contents of the &lt;code&gt;*.js&lt;/code&gt; file if applicable) should begin with the &lt;code&gt;function&lt;/code&gt; keyword. This means that JavaScript comments are &lt;em&gt;not&lt;/em&gt; supported if they appear &lt;em&gt;before&lt;/em&gt; the function body. Also note that &lt;a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions" rel="nofollow"&gt;ES6 arrow functions&lt;/a&gt;
are &lt;strong&gt;not&lt;/strong&gt; supported. Finally, especially when using stand-alone &lt;code&gt;*.js&lt;/code&gt; files, you can use &lt;code&gt;fn&lt;/code&gt; as the function name, so that your IDE does not complain about JavaScript syntax errors, e.g. &lt;code&gt;function fn(x){ return x + 1 }&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def greeter = function(title, name) { return &lt;span class="pl-s"&gt;'hello '&lt;/span&gt; + title + &lt;span class="pl-s"&gt;' '&lt;/span&gt; + name }
&lt;span class="pl-k"&gt;* &lt;/span&gt;assert greeter(&lt;span class="pl-s"&gt;'Mr.'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Bob'&lt;/span&gt;) == &lt;span class="pl-s"&gt;'hello Mr. Bob'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;When JavaScript executes in Karate, the built-in &lt;a href="#the-karate-object"&gt;&lt;code&gt;karate&lt;/code&gt; object&lt;/a&gt; provides some commonly used utility functions. And with &lt;a href="#karate-expressions"&gt;Karate expressions&lt;/a&gt;, you can "dive into" JavaScript without needing to define a function - and &lt;a href="#conditional-logic"&gt;conditional logic&lt;/a&gt; is a good example.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-java-interop" class="anchor" aria-hidden="true" href="#java-interop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Java Interop&lt;/h3&gt;
&lt;p&gt;For more complex functions you are better off using the &lt;a href="#multi-line-expressions"&gt;multi-line&lt;/a&gt; 'doc-string' approach. This example actually calls into existing Java code, and being able to do this opens up a whole lot of possibilities. The JavaScript interpreter will try to convert types across Java and JavaScript as smartly as possible. For e.g. JSON objects become Java &lt;code&gt;Map&lt;/code&gt;-s, JSON arrays become Java &lt;code&gt;List&lt;/code&gt;-s, and Java Bean properties are accessible (and update-able) using 'dot notation' e.g. '&lt;code&gt;object.name&lt;/code&gt;'&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def dateStringToLong =
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  function(s) {&lt;/span&gt;
&lt;span class="pl-s"&gt;    var SimpleDateFormat = Java.type('java.text.SimpleDateFormat');&lt;/span&gt;
&lt;span class="pl-s"&gt;    var sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");&lt;/span&gt;
&lt;span class="pl-s"&gt;    return sdf.parse(s).time; // '.getTime()' would also have worked instead of '.time'&lt;/span&gt;
&lt;span class="pl-s"&gt;  } &lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;assert dateStringToLong(&lt;span class="pl-s"&gt;"2016-12-24T03:39:21.081+0000"&lt;/span&gt;) == 1482550761081&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;More examples of Java interop and how to invoke custom code can be found in the section on &lt;a href="#calling-java"&gt;Calling Java&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The &lt;code&gt;call&lt;/code&gt; keyword provides an &lt;a href="#calling-javascript-functions"&gt;alternate way of calling JavaScript functions&lt;/a&gt; that have only one argument. The argument can be provided after the function name, without parentheses, which makes things slightly more readable (and less cluttered) especially when the solitary argument is JSON.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def timeLong = call dateStringToLong &lt;span class="pl-s"&gt;'2016-12-24T03:39:21.081+0000'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;assert timeLong == 1482550761081

&lt;span class="pl-c"&gt;# a better example, with a JSON argument&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def greeter = function(name){ return &lt;span class="pl-s"&gt;'Hello '&lt;/span&gt; + name.first + &lt;span class="pl-s"&gt;' '&lt;/span&gt; + name.last + &lt;span class="pl-s"&gt;'!'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;def greeting = call greeter { first: &lt;span class="pl-s"&gt;'John'&lt;/span&gt;, last: &lt;span class="pl-s"&gt;'Smith'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-reading-files" class="anchor" aria-hidden="true" href="#reading-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reading Files&lt;/h2&gt;
&lt;p&gt;Karate makes re-use of payload data, utility-functions and even other test-scripts as easy as possible. Teams typically define complicated JSON (or XML) payloads in a file and then re-use this in multiple scripts. Keywords such as &lt;a href="#set"&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; and &lt;a href="#remove"&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; allow you to to 'tweak' payload-data to fit the scenario under test. You can imagine how this greatly simplifies setting up tests for boundary conditions. And such re-use makes it easier to re-factor tests when needed, which is great for maintainability.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that the &lt;a href="#set-multiple"&gt;&lt;code&gt;set&lt;/code&gt; (multiple)&lt;/a&gt; keyword can build complex, nested JSON (or XML) from scratch in a data-driven manner, and you may not even need to read from files for many situations. Test data can be within the main flow itself, which makes scripts highly readable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Reading files is achieved using the built-in JavaScript function called &lt;code&gt;read()&lt;/code&gt;. By default, the file is expected to be in the same folder (package) and side-by-side with the &lt;code&gt;*.feature&lt;/code&gt; file. But you can prefix the name with &lt;code&gt;classpath:&lt;/code&gt; in which case the &lt;a href="#classpath"&gt;'root' folder&lt;/a&gt; would be &lt;code&gt;src/test/java&lt;/code&gt; (assuming you are using the &lt;a href="#folder-structure"&gt;recommended folder structure&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Prefer &lt;a href="#classpath"&gt;&lt;code&gt;classpath:&lt;/code&gt;&lt;/a&gt; when a file is expected to be heavily re-used all across your project.  And yes, relative paths will work.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# json&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def someJson = read(&lt;span class="pl-s"&gt;'some-json.json'&lt;/span&gt;)
&lt;span class="pl-k"&gt;* &lt;/span&gt;def moreJson = read(&lt;span class="pl-s"&gt;'classpath:more-json.json'&lt;/span&gt;)

&lt;span class="pl-c"&gt;# xml&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def someXml = read(&lt;span class="pl-s"&gt;'../common/my-xml.xml'&lt;/span&gt;)

&lt;span class="pl-c"&gt;# import yaml (will be converted to json)&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def jsonFromYaml = read(&lt;span class="pl-s"&gt;'some-data.yaml'&lt;/span&gt;)

&lt;span class="pl-c"&gt;# csv (will be converted to json)&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def jsonFromCsv = read(&lt;span class="pl-s"&gt;'some-data.csv'&lt;/span&gt;)

&lt;span class="pl-c"&gt;# string&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def someString = read(&lt;span class="pl-s"&gt;'classpath:messages.txt'&lt;/span&gt;)

&lt;span class="pl-c"&gt;# javascript (will be evaluated)&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def someValue = read(&lt;span class="pl-s"&gt;'some-js-code.js'&lt;/span&gt;)

&lt;span class="pl-c"&gt;# if the js file evaluates to a function, it can be re-used later using the 'call' keyword&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def someFunction = read(&lt;span class="pl-s"&gt;'classpath:some-reusable-code.js'&lt;/span&gt;)
&lt;span class="pl-k"&gt;* &lt;/span&gt;def someCallResult = call someFunction

&lt;span class="pl-c"&gt;# the following short-cut is also allowed&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def someCallResult = call read(&lt;span class="pl-s"&gt;'some-js-code.js'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also &lt;a href="#calling-other-feature-files"&gt;re-use other &lt;code&gt;*.feature&lt;/code&gt;&lt;/a&gt; files from test-scripts:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# perfect for all those common authentication or 'set up' flows&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def result = call read(&lt;span class="pl-s"&gt;'classpath:some-reusable-steps.feature'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When a &lt;em&gt;called&lt;/em&gt; feature depends on some side-by-side resources such as JSON or JS files, you can use the &lt;code&gt;this:&lt;/code&gt; prefix to ensure that relative paths work correctly - because by default Karate calculates relative paths from the "root" feature or the top-most "caller".&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def data = read(&lt;span class="pl-s"&gt;'this:payload.json'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If a file does not end in &lt;code&gt;.json&lt;/code&gt;, &lt;code&gt;.xml&lt;/code&gt;, &lt;code&gt;.yaml&lt;/code&gt;, &lt;code&gt;.js&lt;/code&gt;, &lt;code&gt;.csv&lt;/code&gt; or &lt;code&gt;.txt&lt;/code&gt;, it is treated as a stream - which is typically what you would need for &lt;a href="#multipart-field"&gt;&lt;code&gt;multipart&lt;/code&gt;&lt;/a&gt; file uploads.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def someStream = read(&lt;span class="pl-s"&gt;'some-pdf.pdf'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;.graphql&lt;/code&gt; and &lt;code&gt;.gql&lt;/code&gt; extensions are also recognized (for GraphQL) but are handled the same way as &lt;code&gt;.txt&lt;/code&gt; and treated as a string.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For JSON and XML files, Karate will evaluate any &lt;a href="#embedded-expressions"&gt;embedded expressions&lt;/a&gt; on load. This enables more concise tests, and the file can be re-usable in multiple, data-driven tests.&lt;/p&gt;
&lt;p&gt;Since it is internally implemented as a JavaScript function, you can mix calls to &lt;code&gt;read()&lt;/code&gt; freely wherever JavaScript expressions are allowed:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def someBigString = read(&lt;span class="pl-s"&gt;'first.txt'&lt;/span&gt;) + read(&lt;span class="pl-s"&gt;'second.txt'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Tip: you can even use JS expressions to dynamically choose a file based on some condition: &lt;code&gt;* def someConfig = read('my-config-' + someVariable + '.json')&lt;/code&gt;. Refer to &lt;a href="#conditional-logic"&gt;conditional logic&lt;/a&gt; for more ideas.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And a very common need would be to use a file as the &lt;a href="#request"&gt;&lt;code&gt;request&lt;/code&gt;&lt;/a&gt; body:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;request read(&lt;span class="pl-s"&gt;'some-big-payload.json'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or in a &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;And &lt;/span&gt;match response == read(&lt;span class="pl-s"&gt;'expected-response-payload.json'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The rarely used &lt;code&gt;file:&lt;/code&gt; prefix is also supported. You could use it for 'hard-coded' absolute paths in dev mode, but is obviously not recommended for CI test-suites. A good example of where you may need this is if you programmatically write a file to the &lt;code&gt;target&lt;/code&gt; folder, and then you can read it like this:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def payload = read(&lt;span class="pl-s"&gt;'file:target/large.xml'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To summarize the possible prefixes:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Prefix&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;classpath:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;relative to the &lt;a href="#classpath"&gt;classpath&lt;/a&gt;, recommended for re-usable features&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;file:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;do not use this unless you know what you are doing, see above&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;this:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;when in a &lt;em&gt;called&lt;/em&gt; feature, ensure that files are resolved relative to the current feature file&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Take a look at the &lt;a href="karate-demo"&gt;Karate Demos&lt;/a&gt; for real-life examples of how you can use files for validating HTTP responses, like this one: &lt;a href="karate-demo/src/test/java/demo/read/read-files.feature"&gt;&lt;code&gt;read-files.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-read-file-as-string" class="anchor" aria-hidden="true" href="#read-file-as-string"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Read File As String&lt;/h3&gt;
&lt;p&gt;In some rare cases where you don't want to auto-convert JSON, XML, YAML or CSV, and just get the raw string content (without having to re-name the file to end with &lt;code&gt;.txt&lt;/code&gt;) - you can use the &lt;a href="#karate-readasstring"&gt;&lt;code&gt;karate.readAsString()&lt;/code&gt;&lt;/a&gt; API. Here is an example of using a CSV file as the request-body:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;path &lt;span class="pl-s"&gt;'upload'&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;header Content-Type = &lt;span class="pl-s"&gt;'text/csv'&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;request karate.readAsString(&lt;span class="pl-s"&gt;'classpath:my.csv'&lt;/span&gt;)
&lt;span class="pl-k"&gt;When &lt;/span&gt;method post
&lt;span class="pl-k"&gt;Then &lt;/span&gt;status 202&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-type-conversion" class="anchor" aria-hidden="true" href="#type-conversion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Type Conversion&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Best practice is to stick to using only &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt; unless there is a very good reason to do otherwise.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Internally, Karate will auto-convert JSON (and even XML) to Java &lt;code&gt;Map&lt;/code&gt; objects. And JSON arrays would become Java &lt;code&gt;List&lt;/code&gt;-s. But you will never need to worry about this internal data-representation most of the time.&lt;/p&gt;
&lt;p&gt;In some rare cases, for e.g. if you acquired a string from some external source, or if you generated JSON (or XML) by concatenating text or using &lt;a href="#replace"&gt;&lt;code&gt;replace&lt;/code&gt;&lt;/a&gt;, you may want to convert a string to JSON and vice-versa. You can even perform a conversion from XML to JSON if you want.&lt;/p&gt;
&lt;p&gt;One example of when you may want to convert JSON (or XML) to a string is when you are passing a payload to custom code via &lt;a href="#calling-java"&gt;Java interop&lt;/a&gt;. Do note that when passing JSON, the default &lt;code&gt;Map&lt;/code&gt; and &lt;code&gt;List&lt;/code&gt; representations should suffice for most needs (&lt;a href="karate-demo/src/test/java/demo/java/cats-java.feature"&gt;see example&lt;/a&gt;), and using them would avoid un-necessary string-conversion.&lt;/p&gt;
&lt;p&gt;So you have the following type markers you can use instead of &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt; (or the rarely used &lt;a href="#text"&gt;&lt;code&gt;text&lt;/code&gt;&lt;/a&gt;). The first four below are best explained in this example file: &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/type-conv.feature"&gt;&lt;code&gt;type-conv.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a name="user-content-type-string"&gt;&lt;code&gt;string&lt;/code&gt;&lt;/a&gt; - convert JSON or any other data-type (except XML) to a string&lt;/li&gt;
&lt;li&gt;&lt;a name="user-content-type-json"&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt; - convert XML, a map-like or list-like object, a string, or even a Java object into JSON&lt;/li&gt;
&lt;li&gt;&lt;a name="user-content-type-xml"&gt;&lt;code&gt;xml&lt;/code&gt;&lt;/a&gt; - convert JSON, a map-like object, a string, or even a Java object into XML&lt;/li&gt;
&lt;li&gt;&lt;a name="user-content-type-xmlstring"&gt;&lt;code&gt;xmlstring&lt;/code&gt;&lt;/a&gt; - specifically for converting the map-like Karate internal representation of XML into a string&lt;/li&gt;
&lt;li&gt;&lt;a name="user-content-type-csv"&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt; - convert a CSV string into JSON, see &lt;a href="#csv"&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a name="user-content-type-yaml"&gt;&lt;code&gt;yaml&lt;/code&gt;&lt;/a&gt; - convert a YAML string into JSON, see &lt;a href="#yaml"&gt;&lt;code&gt;yaml&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a name="user-content-type-bytes"&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; - convert to a byte-array, useful for binary payloads or comparisons, see &lt;a href="karate-demo/src/test/java/demo/websocket/echo.feature"&gt;example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a name="user-content-type-copy"&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt; - to clone a given payload variable reference (JSON, XML, Map or List), refer: &lt;a href="#copy"&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want to 'pretty print' a JSON or XML value with indenting, refer to the documentation of the &lt;a href="#print"&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt; keyword.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-floats-and-integers" class="anchor" aria-hidden="true" href="#floats-and-integers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Floats and Integers&lt;/h3&gt;
&lt;p&gt;While converting a number to a string is easy (just concatenate an empty string e.g. &lt;code&gt;myInt + ''&lt;/code&gt;), in some rare cases, you may need to convert a string to a number. You can do this by multiplying by &lt;code&gt;1&lt;/code&gt; or using the built-in JavaScript &lt;code&gt;parseInt()&lt;/code&gt; function:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = &lt;span class="pl-s"&gt;'10'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;string json = { bar: &lt;span class="pl-s"&gt;'#(1 * foo)'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == &lt;span class="pl-s"&gt;'{"bar":10.0}'&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;string json = { bar: &lt;span class="pl-s"&gt;'#(parseInt(foo))'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == &lt;span class="pl-s"&gt;'{"bar":10.0}'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As per the JSON spec, all numeric values are treated as doubles, so for integers - it really doesn't matter if there is a decimal point or not. In fact it may be a good idea to slip doubles instead of integers into some of your tests ! Anyway, there are times when you may want to force integers (perhaps for cosmetic reasons) and you can easily do so using the 'double-tilde' &lt;a href="http://rocha.la/JavaScript-bitwise-operators-in-practice" rel="nofollow"&gt;short-cut: '&lt;code&gt;~~&lt;/code&gt;'&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = &lt;span class="pl-s"&gt;'10'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;string json = { bar: &lt;span class="pl-s"&gt;'#(~~foo)'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == &lt;span class="pl-s"&gt;'{"bar":10}'&lt;/span&gt;

&lt;span class="pl-c"&gt;# unfortunately JS math always results in a double&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = 10
&lt;span class="pl-k"&gt;* &lt;/span&gt;string json = { bar: &lt;span class="pl-s"&gt;'#(1 * foo)'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == &lt;span class="pl-s"&gt;'{"bar":10.0}'&lt;/span&gt;

&lt;span class="pl-c"&gt;# but you can easily coerce to an integer if needed&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;string json = { bar: &lt;span class="pl-s"&gt;'#(~~(1 * foo))'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == &lt;span class="pl-s"&gt;'{"bar":10}'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-large-numbers" class="anchor" aria-hidden="true" href="#large-numbers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Large Numbers&lt;/h3&gt;
&lt;p&gt;Sometimes when dealing with very large numbers, the JS engine may mangle the number into scientific notation:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def big = 123123123123
&lt;span class="pl-k"&gt;* &lt;/span&gt;string json = { num: &lt;span class="pl-s"&gt;'#(big)'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == &lt;span class="pl-s"&gt;'{"num":1.23123123123E11}'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This can be easily solved by using &lt;code&gt;java.math.BigDecimal&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def big = new java.math.BigDecimal(123123123123)
&lt;span class="pl-k"&gt;* &lt;/span&gt;string json = { num: &lt;span class="pl-s"&gt;'#(big)'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == &lt;span class="pl-s"&gt;'{"num":123123123123}'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-karate-expressions" class="anchor" aria-hidden="true" href="#karate-expressions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Karate Expressions&lt;/h1&gt;
&lt;p&gt;Before we get to the HTTP keywords, it is worth doing a recap of the various 'shapes' that the right-hand-side of an assignment statement can take:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th&gt;Shape&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = 'bar'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JS&lt;/td&gt;
&lt;td&gt;simple strings, numbers or booleans&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = 'bar' + baz[0]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JS&lt;/td&gt;
&lt;td&gt;any valid JavaScript expression, and variables can be mixed in, another example: &lt;code&gt;bar.length + 1&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = { bar: '#(baz)' }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JSON&lt;/td&gt;
&lt;td&gt;anything that starts with a &lt;code&gt;{&lt;/code&gt; or a &lt;code&gt;[&lt;/code&gt; is parsed as JSON, use &lt;a href="#text"&gt;&lt;code&gt;text&lt;/code&gt;&lt;/a&gt; instead of &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt; if you need to suppress the default behavior&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = ({ bar: baz })&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JS&lt;/td&gt;
&lt;td&gt;&lt;a href="#enclosed-javascript"&gt;enclosed JavaScript&lt;/a&gt;, the result of which is exactly equivalent to the above&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = &amp;lt;foo&amp;gt;bar&amp;lt;/foo&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;XML&lt;/td&gt;
&lt;td&gt;anything that starts with a &lt;code&gt;&amp;lt;&lt;/code&gt; is parsed as XML, use &lt;a href="#text"&gt;&lt;code&gt;text&lt;/code&gt;&lt;/a&gt; instead of &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt; if you need to suppress the default behavior&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = function(arg){ return arg + bar }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JS Fn&lt;/td&gt;
&lt;td&gt;anything that starts with &lt;code&gt;function(...){&lt;/code&gt; is parsed as a JS function.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = read('bar.json')&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JS&lt;/td&gt;
&lt;td&gt;using the built-in &lt;a href="#reading-files"&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; function&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = $.bar[0]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JsonPath&lt;/td&gt;
&lt;td&gt;short-cut JsonPath on the &lt;a href="#response"&gt;&lt;code&gt;response&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = /bar/baz&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;XPath&lt;/td&gt;
&lt;td&gt;short-cut XPath on the &lt;a href="#response"&gt;&lt;code&gt;response&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = get bar $..baz[?(@.ban)]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#get"&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; JsonPath&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/json-path/JsonPath#path-examples"&gt;JsonPath&lt;/a&gt; on the variable &lt;code&gt;bar&lt;/code&gt;, you can also use &lt;a href="#get-plus-index"&gt;&lt;code&gt;get[0]&lt;/code&gt;&lt;/a&gt; to get the first item if the JsonPath evaluates to an array - especially useful when using wildcards such as &lt;code&gt;[*]&lt;/code&gt; or &lt;a href="#jsonpath-filters"&gt;filter-criteria&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = $bar..baz[?(@.ban)]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;$var.JsonPath&lt;/td&gt;
&lt;td&gt;&lt;a href="#get-short-cut"&gt;convenience short-cut&lt;/a&gt; for the above&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = get bar count(/baz//ban)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#get"&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; XPath&lt;/td&gt;
&lt;td&gt;XPath on the variable &lt;code&gt;bar&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = karate.pretty(bar)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JS&lt;/td&gt;
&lt;td&gt;using the &lt;a href="#the-karate-object"&gt;built-in &lt;code&gt;karate&lt;/code&gt; object&lt;/a&gt; in JS expressions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def Foo = Java.type('com.mycompany.Foo')&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JS-Java&lt;/td&gt;
&lt;td&gt;&lt;a href="#java-interop"&gt;Java Interop&lt;/a&gt;, and even package-name-spaced one-liners like &lt;code&gt;java.lang.System.currentTimeMillis()&lt;/code&gt; are possible&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = call bar { baz: '#(ban)' }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#call"&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;or &lt;a href="#callonce"&gt;&lt;code&gt;callonce&lt;/code&gt;&lt;/a&gt;, where expressions like &lt;a href="#reading-files"&gt;&lt;code&gt;read('foo.js')&lt;/code&gt;&lt;/a&gt; are allowed as the object to be called or the argument&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = bar({ baz: ban })&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JS&lt;/td&gt;
&lt;td&gt;equivalent to the above, JavaScript function invocation&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-core-keywords" class="anchor" aria-hidden="true" href="#core-keywords"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core Keywords&lt;/h1&gt;
&lt;p&gt;They are &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;request&lt;/code&gt;, &lt;code&gt;method&lt;/code&gt; and &lt;code&gt;status&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;These are essential HTTP operations, they focus on setting one (un-named or 'key-less') value at a time and therefore don't need an &lt;code&gt;=&lt;/code&gt; sign in the syntax.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-url" class="anchor" aria-hidden="true" href="#url"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;url&lt;/code&gt;&lt;/h2&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;url &lt;span class="pl-s"&gt;'https://myhost.com/v1/cats'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A URL remains constant until you use the &lt;code&gt;url&lt;/code&gt; keyword again, so this is a good place to set-up the 'non-changing' parts of your REST URL-s.&lt;/p&gt;
&lt;p&gt;A URL can take expressions, so the approach below is legal.  And yes, variables can come from global &lt;a href="#configuration"&gt;config&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;url &lt;span class="pl-s"&gt;'https://'&lt;/span&gt; + e2eHostName + &lt;span class="pl-s"&gt;'/v1/api'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you are trying to build dynamic URLs including query-string parameters in the form: &lt;code&gt;http://myhost/some/path?foo=bar&amp;amp;search=true&lt;/code&gt; - please refer to the &lt;a href="#param"&gt;&lt;code&gt;param&lt;/code&gt;&lt;/a&gt; keyword.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-path" class="anchor" aria-hidden="true" href="#path"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;path&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;REST-style path parameters.  Can be expressions that will be evaluated.  Comma delimited values are supported which can be more convenient, and takes care of URL-encoding and appending '/' where needed.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;path &lt;span class="pl-s"&gt;'documents/'&lt;/span&gt; + documentId + &lt;span class="pl-s"&gt;'/download'&lt;/span&gt;

&lt;span class="pl-c"&gt;# this is equivalent to the above&lt;/span&gt;
&lt;span class="pl-k"&gt;Given &lt;/span&gt;path &lt;span class="pl-s"&gt;'documents'&lt;/span&gt;, documentId, &lt;span class="pl-s"&gt;'download'&lt;/span&gt;

&lt;span class="pl-c"&gt;# or you can do the same on multiple lines if you wish&lt;/span&gt;
&lt;span class="pl-k"&gt;Given &lt;/span&gt;path &lt;span class="pl-s"&gt;'documents'&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;path documentId
&lt;span class="pl-k"&gt;And &lt;/span&gt;path &lt;span class="pl-s"&gt;'download'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the &lt;code&gt;path&lt;/code&gt; 'resets' after any HTTP request is made but not the &lt;code&gt;url&lt;/code&gt;. The &lt;a href="#hello-world"&gt;Hello World&lt;/a&gt; is a great example of 'REST-ful' use of the &lt;code&gt;url&lt;/code&gt; when the test focuses on a single REST 'resource'. Look at how the &lt;code&gt;path&lt;/code&gt; did not need to be specified for the second HTTP &lt;code&gt;get&lt;/code&gt; call since &lt;code&gt;/cats&lt;/code&gt; is part of the &lt;code&gt;url&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Important: If you attempt to build a URL in the form &lt;code&gt;?myparam=value&lt;/code&gt; by using &lt;code&gt;path&lt;/code&gt; the &lt;code&gt;?&lt;/code&gt; will get encoded into &lt;code&gt;%3F&lt;/code&gt;. Use either the &lt;a href="#param"&gt;&lt;code&gt;param&lt;/code&gt;&lt;/a&gt; keyword, e.g.: &lt;code&gt;* param myparam = 'value'&lt;/code&gt; or &lt;a href="#url"&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;* url 'http://example.com/v1?myparam'&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-request" class="anchor" aria-hidden="true" href="#request"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;request&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;In-line JSON:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;request { name: &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt;, type: &lt;span class="pl-s"&gt;'LOL'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In-line XML:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;And &lt;/span&gt;request &lt;span class="pl-smi"&gt;&amp;lt;cat&amp;gt;&amp;lt;name&amp;gt;&lt;/span&gt;Billie&lt;span class="pl-smi"&gt;&amp;lt;/name&amp;gt;&amp;lt;type&amp;gt;&lt;/span&gt;Ceiling&lt;span class="pl-smi"&gt;&amp;lt;/type&amp;gt;&amp;lt;/cat&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From a &lt;a href="#reading-files"&gt;file&lt;/a&gt; in the same package.  Use the &lt;code&gt;classpath:&lt;/code&gt; prefix to load from the &lt;a href="#classpath"&gt;classpath&lt;/a&gt; instead.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;request read(&lt;span class="pl-s"&gt;'my-json.json'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You could always use a variable:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;And &lt;/span&gt;request myVariable&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In most cases you won't need to set the &lt;code&gt;Content-Type&lt;/code&gt; &lt;a href="#header"&gt;&lt;code&gt;header&lt;/code&gt;&lt;/a&gt; as Karate will automatically do the right thing depending on the data-type of the &lt;code&gt;request&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Defining the &lt;code&gt;request&lt;/code&gt; is mandatory if you are using an HTTP &lt;code&gt;method&lt;/code&gt; that expects a body such as &lt;code&gt;post&lt;/code&gt;. If you really need to have an empty body, you can use an empty string as shown below, and you can force the right &lt;code&gt;Content-Type&lt;/code&gt; header by using the &lt;a href="#header"&gt;&lt;code&gt;header&lt;/code&gt;&lt;/a&gt; keyword.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;request &lt;span class="pl-s"&gt;''&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;header Content-Type = &lt;span class="pl-s"&gt;'text/html'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sending a &lt;a href="#reading-files"&gt;file&lt;/a&gt; as the entire binary request body is easy (note that &lt;a href="#multipart-file"&gt;&lt;code&gt;multipart&lt;/code&gt;&lt;/a&gt; is different):&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;path &lt;span class="pl-s"&gt;'upload'&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;request read(&lt;span class="pl-s"&gt;'my-image.jpg'&lt;/span&gt;)
&lt;span class="pl-k"&gt;When &lt;/span&gt;method put
&lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-method" class="anchor" aria-hidden="true" href="#method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;method&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The HTTP verb - &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt;, &lt;code&gt;patch&lt;/code&gt;, &lt;code&gt;options&lt;/code&gt;, &lt;code&gt;head&lt;/code&gt;, &lt;code&gt;connect&lt;/code&gt;, &lt;code&gt;trace&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Lower-case is fine.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;When &lt;/span&gt;method post&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is worth internalizing that during test-execution, it is upon the &lt;code&gt;method&lt;/code&gt; keyword that the actual HTTP request is issued. Which suggests that the step should be in the &lt;code&gt;When&lt;/code&gt; form, for example: &lt;code&gt;When method post&lt;/code&gt;. And steps that follow should logically be in the &lt;code&gt;Then&lt;/code&gt; form. Also make sure that you complete the set up of things like &lt;a href="#url"&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt;, &lt;a href="#param"&gt;&lt;code&gt;param&lt;/code&gt;&lt;/a&gt;, &lt;a href="#header"&gt;&lt;code&gt;header&lt;/code&gt;&lt;/a&gt;, &lt;a href="#configure"&gt;&lt;code&gt;configure&lt;/code&gt;&lt;/a&gt; etc. &lt;em&gt;before&lt;/em&gt; you fire the &lt;code&gt;method&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# set headers or params (if any) BEFORE the method step&lt;/span&gt;
&lt;span class="pl-k"&gt;Given &lt;/span&gt;header Accept = &lt;span class="pl-s"&gt;'application/json'&lt;/span&gt;
&lt;span class="pl-k"&gt;When &lt;/span&gt;method get
&lt;span class="pl-c"&gt;# the step that immediately follows the above would typically be:&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Although rarely needed, variable references or &lt;a href="#karate-expressions"&gt;expressions&lt;/a&gt; are also supported:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def putOrPost = (someVariable == &lt;span class="pl-s"&gt;'dev'&lt;/span&gt; ? &lt;span class="pl-s"&gt;'put'&lt;/span&gt; : &lt;span class="pl-s"&gt;'post'&lt;/span&gt;)
&lt;span class="pl-k"&gt;* &lt;/span&gt;method putOrPost&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-status" class="anchor" aria-hidden="true" href="#status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;status&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;This is a shortcut to assert the HTTP response code.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And this assertion will cause the test to fail if the HTTP response code is something else.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#responsestatus"&gt;&lt;code&gt;responseStatus&lt;/code&gt;&lt;/a&gt; if you want to do some complex assertions against the HTTP status code.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-keywords-that-set-key-value-pairs" class="anchor" aria-hidden="true" href="#keywords-that-set-key-value-pairs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keywords that set key-value pairs&lt;/h1&gt;
&lt;p&gt;They are &lt;code&gt;param&lt;/code&gt;, &lt;code&gt;header&lt;/code&gt;, &lt;code&gt;cookie&lt;/code&gt;, &lt;code&gt;form field&lt;/code&gt; and &lt;code&gt;multipart field&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The syntax will include a '=' sign between the key and the value.  The key should not be within quotes.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To make dynamic data-driven testing easier, the following keywords also exist: &lt;a href="#params"&gt;&lt;code&gt;params&lt;/code&gt;&lt;/a&gt;, &lt;a href="#headers"&gt;&lt;code&gt;headers&lt;/code&gt;&lt;/a&gt;, &lt;a href="#cookies-json"&gt;&lt;code&gt;cookies&lt;/code&gt;&lt;/a&gt; and &lt;a href="#form-fields"&gt;&lt;code&gt;form fields&lt;/code&gt;&lt;/a&gt;. They use JSON to build the relevant parts of the HTTP request.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-param" class="anchor" aria-hidden="true" href="#param"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;param&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Setting query-string parameters:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;param someKey = &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;param anotherKey = someVariable&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above would result in a URL like: &lt;code&gt;http://myhost/mypath?someKey=hello&amp;amp;anotherKey=foo&lt;/code&gt;. Note that the &lt;code&gt;?&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt; will be automatically inserted.&lt;/p&gt;
&lt;p&gt;Multi-value params are also supported:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;param myParam = &lt;span class="pl-s"&gt;'foo'&lt;/span&gt;, &lt;span class="pl-s"&gt;'bar'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also use JSON to set multiple query-parameters in one-line using &lt;a href="#params"&gt;&lt;code&gt;params&lt;/code&gt;&lt;/a&gt; and this is especially useful for dynamic data-driven testing.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-header" class="anchor" aria-hidden="true" href="#header"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;header&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;You can use &lt;a href="#calling-javascript-functions"&gt;functions&lt;/a&gt; or &lt;a href="#karate-expressions"&gt;expressions&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;header Authorization = myAuthFunction()
&lt;span class="pl-k"&gt;And &lt;/span&gt;header transaction-id = &lt;span class="pl-s"&gt;'test-'&lt;/span&gt; + myIdString&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is worth repeating that in most cases you won't need to set the &lt;code&gt;Content-Type&lt;/code&gt; header as Karate will automatically do the right thing depending on the data-type of the &lt;a href="#request"&gt;&lt;code&gt;request&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Because of how easy it is to set HTTP headers, Karate does not provide any special keywords for things like
the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept" rel="nofollow"&gt;&lt;code&gt;Accept&lt;/code&gt;&lt;/a&gt; header. You simply do
something like this:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;path &lt;span class="pl-s"&gt;'some/path'&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;request { some: &lt;span class="pl-s"&gt;'data'&lt;/span&gt; }
&lt;span class="pl-k"&gt;And &lt;/span&gt;header Accept = &lt;span class="pl-s"&gt;'application/json'&lt;/span&gt;
&lt;span class="pl-k"&gt;When &lt;/span&gt;method post
&lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A common need is to send the same header(s) for &lt;em&gt;every&lt;/em&gt; request, and &lt;a href="#configure-headers"&gt;&lt;code&gt;configure headers&lt;/code&gt;&lt;/a&gt; (with JSON) is how you can set this up once for all subsequent requests. And if you do this within a &lt;code&gt;Background:&lt;/code&gt; section, it would apply to all &lt;code&gt;Scenario:&lt;/code&gt; sections within the &lt;code&gt;*.feature&lt;/code&gt; file.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;configure headers = { &lt;span class="pl-s"&gt;'Content-Type'&lt;/span&gt;: &lt;span class="pl-s"&gt;'application/xml'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that &lt;code&gt;Content-Type&lt;/code&gt; had to be enclosed in quotes in the JSON above because the "&lt;code&gt;-&lt;/code&gt;" (hyphen character) would cause problems otherwise. Also note that "&lt;code&gt;; charset=UTF-8&lt;/code&gt;" would be appended to the &lt;code&gt;Content-Type&lt;/code&gt; header that Karate sends by default, and in some rare cases, you may need to suppress this behavior completely. You can do so by setting the &lt;code&gt;charset&lt;/code&gt; to null via the &lt;a href="#configure"&gt;&lt;code&gt;configure&lt;/code&gt;&lt;/a&gt; keyword:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;configure charset = null&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you need headers to be dynamically generated for each HTTP request, use a JavaScript function with &lt;a href="#configure-headers"&gt;&lt;code&gt;configure headers&lt;/code&gt;&lt;/a&gt; instead of JSON.&lt;/p&gt;
&lt;p&gt;Multi-value headers (though rarely used in the wild) are also supported:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;header myHeader = &lt;span class="pl-s"&gt;'foo'&lt;/span&gt;, &lt;span class="pl-s"&gt;'bar'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also look at the &lt;a href="#headers"&gt;&lt;code&gt;headers&lt;/code&gt;&lt;/a&gt; keyword which uses JSON and makes some kinds of dynamic data-driven testing easier.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-cookie" class="anchor" aria-hidden="true" href="#cookie"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;cookie&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Setting a cookie:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;cookie foo = &lt;span class="pl-s"&gt;'bar'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You also have the option of setting multiple cookies in one-step using the &lt;a href="#cookies"&gt;&lt;code&gt;cookies&lt;/code&gt;&lt;/a&gt; keyword.&lt;/p&gt;
&lt;p&gt;Note that any cookies returned in the HTTP response would be automatically set for any future requests. This mechanism works by calling &lt;a href="#configure"&gt;&lt;code&gt;configure cookies&lt;/code&gt;&lt;/a&gt; behind the scenes and if you need to stop auto-adding cookies for future requests, just do this:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;configure cookies = null&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also refer to the built-in variable &lt;a href="#responsecookies"&gt;&lt;code&gt;responseCookies&lt;/code&gt;&lt;/a&gt; for how you can access and perform assertions on cookie data values.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-form-field" class="anchor" aria-hidden="true" href="#form-field"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;form field&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;HTML form fields would be URL-encoded when the HTTP request is submitted (by the &lt;a href="#method"&gt;&lt;code&gt;method&lt;/code&gt;&lt;/a&gt; step). You would typically use these to simulate a user sign-in and then grab a security token from the &lt;a href="#response"&gt;&lt;code&gt;response&lt;/code&gt;&lt;/a&gt;. For example:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;path &lt;span class="pl-s"&gt;'login'&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;form field username = &lt;span class="pl-s"&gt;'john'&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;form field password = &lt;span class="pl-s"&gt;'secret'&lt;/span&gt;
&lt;span class="pl-k"&gt;When &lt;/span&gt;method post
&lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200
&lt;span class="pl-k"&gt;And &lt;/span&gt;def authToken = response.token&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A good example of the use of &lt;code&gt;form field&lt;/code&gt; for a typical sign-in flow is this OAuth 2 demo: &lt;a href="karate-demo/src/test/java/demo/oauth/oauth2.feature"&gt;&lt;code&gt;oauth2.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Multi-values are supported the way you would expect (e.g. for simulating check-boxes and multi-selects):&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;form field selected = &lt;span class="pl-s"&gt;'apple'&lt;/span&gt;, &lt;span class="pl-s"&gt;'orange'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also dynamically set multiple fields in one step using the &lt;a href="#form-fields"&gt;&lt;code&gt;form fields&lt;/code&gt;&lt;/a&gt; keyword.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-multipart-field" class="anchor" aria-hidden="true" href="#multipart-field"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;multipart field&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Use this for building multipart named (form) field requests. This is typically combined with &lt;code&gt;multipart file&lt;/code&gt; as shown below.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Multiple fields can be set in one step using &lt;a href="#multipart-fields"&gt;&lt;code&gt;multipart fields&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-multipart-file" class="anchor" aria-hidden="true" href="#multipart-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;multipart file&lt;/code&gt;&lt;/h2&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;multipart file myFile = { read: &lt;span class="pl-s"&gt;'test.pdf'&lt;/span&gt;, filename: &lt;span class="pl-s"&gt;'upload-name.pdf'&lt;/span&gt;, contentType: &lt;span class="pl-s"&gt;'application/pdf'&lt;/span&gt; }
&lt;span class="pl-k"&gt;And &lt;/span&gt;multipart field message = &lt;span class="pl-s"&gt;'hello world'&lt;/span&gt;
&lt;span class="pl-k"&gt;When &lt;/span&gt;method post
&lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that &lt;code&gt;multipart file&lt;/code&gt; takes a JSON argument so that you can easily set the &lt;code&gt;filename&lt;/code&gt; and the &lt;code&gt;contentType&lt;/code&gt; (mime-type) in one step.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;read&lt;/code&gt;: the name of a file, and the &lt;a href="#reading-files"&gt;&lt;code&gt;classpath:&lt;/code&gt;&lt;/a&gt; prefix also is allowed. mandatory unless &lt;code&gt;value&lt;/code&gt; is used, see below.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;: alternative to &lt;code&gt;read&lt;/code&gt; in rare cases where something like a JSON or XML file is being uploaded and you want to create it dynamically.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;filename&lt;/code&gt;: optional, will default to the multipart field name if not specified&lt;/li&gt;
&lt;li&gt;&lt;code&gt;contentType&lt;/code&gt;: optional, will default to &lt;code&gt;application/octet-stream&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When 'multipart' content is involved, the &lt;code&gt;Content-Type&lt;/code&gt; header of the HTTP request defaults to &lt;code&gt;multipart/form-data&lt;/code&gt;.
You can over-ride it by using the &lt;a href="#header"&gt;&lt;code&gt;header&lt;/code&gt;&lt;/a&gt; keyword before the &lt;code&gt;method&lt;/code&gt; step.  Look at
&lt;a href="#multipart-entity"&gt;&lt;code&gt;multipart entity&lt;/code&gt;&lt;/a&gt; for an example.&lt;/p&gt;
&lt;p&gt;Also refer to this &lt;a href="karate-demo"&gt;demo example&lt;/a&gt; for a working example of multipart file uploads: &lt;a href="karate-demo/src/test/java/demo/upload/upload.feature"&gt;&lt;code&gt;upload.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can also dynamically set multiple files in one step using &lt;a href="#multipart-files"&gt;&lt;code&gt;multipart files&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-multipart-entity" class="anchor" aria-hidden="true" href="#multipart-entity"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;multipart entity&lt;/code&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;This is technically not in the key-value form: &lt;code&gt;multipart field name = 'foo'&lt;/code&gt;, but logically
belongs here in the documentation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Use this for multipart content items that don't have field-names.  Here below is an example that
also demonstrates using the &lt;a href="https://tools.ietf.org/html/rfc2387" rel="nofollow"&gt;&lt;code&gt;multipart/related&lt;/code&gt;&lt;/a&gt; content-type.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;path &lt;span class="pl-s"&gt;'/v2/documents'&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;multipart entity read(&lt;span class="pl-s"&gt;'foo.json'&lt;/span&gt;)
&lt;span class="pl-k"&gt;And &lt;/span&gt;multipart field image = read(&lt;span class="pl-s"&gt;'bar.jpg'&lt;/span&gt;)
&lt;span class="pl-k"&gt;And &lt;/span&gt;header Content-Type = &lt;span class="pl-s"&gt;'multipart/related'&lt;/span&gt;
&lt;span class="pl-k"&gt;When &lt;/span&gt;method post 
&lt;span class="pl-k"&gt;Then &lt;/span&gt;status 201&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-multi-param-keywords" class="anchor" aria-hidden="true" href="#multi-param-keywords"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multi-Param Keywords&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-keywords-that-set-multiple-key-value-pairs-in-one-step" class="anchor" aria-hidden="true" href="#keywords-that-set-multiple-key-value-pairs-in-one-step"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keywords that set multiple key-value pairs in one step&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;params&lt;/code&gt;, &lt;code&gt;headers&lt;/code&gt;, &lt;code&gt;cookies&lt;/code&gt;, &lt;code&gt;form fields&lt;/code&gt;, &lt;code&gt;multipart fields&lt;/code&gt; and &lt;code&gt;multipart files&lt;/code&gt; take a single JSON argument (which can be in-line or a variable reference), and this enables certain types of dynamic data-driven testing, especially because any JSON key with a &lt;code&gt;null&lt;/code&gt; value will be ignored. Here is a good example in the demos: &lt;a href="karate-demo/src/test/java/demo/search/dynamic-params.feature"&gt;&lt;code&gt;dynamic-params.feature&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-params" class="anchor" aria-hidden="true" href="#params"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;params&lt;/code&gt;&lt;/h2&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;params { searchBy: &lt;span class="pl-s"&gt;'client'&lt;/span&gt;, active: true, someList: [1, 2, 3] }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See also &lt;a href="#param"&gt;&lt;code&gt;param&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-headers" class="anchor" aria-hidden="true" href="#headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;headers&lt;/code&gt;&lt;/h2&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def someData = { Authorization: &lt;span class="pl-s"&gt;'sometoken'&lt;/span&gt;, tx_id: &lt;span class="pl-s"&gt;'1234'&lt;/span&gt;, extraTokens: [&lt;span class="pl-s"&gt;'abc'&lt;/span&gt;, &lt;span class="pl-s"&gt;'def'&lt;/span&gt;] }
&lt;span class="pl-k"&gt;* &lt;/span&gt;headers someData&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See also &lt;a href="#header"&gt;&lt;code&gt;header&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-cookies" class="anchor" aria-hidden="true" href="#cookies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;cookies&lt;/code&gt;&lt;/h2&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;cookies { someKey: &lt;span class="pl-s"&gt;'someValue'&lt;/span&gt;, foo: &lt;span class="pl-s"&gt;'bar'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See also &lt;a href="#cookie"&gt;&lt;code&gt;cookie&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-form-fields" class="anchor" aria-hidden="true" href="#form-fields"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;form fields&lt;/code&gt;&lt;/h2&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def credentials = { username: &lt;span class="pl-s"&gt;'#(user.name)'&lt;/span&gt;, password: &lt;span class="pl-s"&gt;'secret'&lt;/span&gt;, projects: [&lt;span class="pl-s"&gt;'one'&lt;/span&gt;, &lt;span class="pl-s"&gt;'two'&lt;/span&gt;] }
&lt;span class="pl-k"&gt;* &lt;/span&gt;form fields credentials&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See also &lt;a href="#form-field"&gt;&lt;code&gt;form field&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-multipart-fields" class="anchor" aria-hidden="true" href="#multipart-fields"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;multipart fields&lt;/code&gt;&lt;/h2&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;And &lt;/span&gt;multipart fields { message: &lt;span class="pl-s"&gt;'hello world'&lt;/span&gt;, json: { foo: &lt;span class="pl-s"&gt;'bar'&lt;/span&gt; } }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See also &lt;a href="#multipart-field"&gt;&lt;code&gt;multipart field&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-multipart-files" class="anchor" aria-hidden="true" href="#multipart-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;multipart files&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The single JSON argument needs to be in the form &lt;code&gt;{ field1: { read: 'file1.ext' }, field2: { read: 'file2.ext' } }&lt;/code&gt; where each nested JSON is in the form expected by &lt;a href="#multipart-file"&gt;&lt;code&gt;multipart file&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def json = {}
&lt;span class="pl-k"&gt;* &lt;/span&gt;set json.myFile1 = { read: &lt;span class="pl-s"&gt;'test1.pdf'&lt;/span&gt;, filename: &lt;span class="pl-s"&gt;'upload-name1.pdf'&lt;/span&gt;, contentType: &lt;span class="pl-s"&gt;'application/pdf'&lt;/span&gt; }
&lt;span class="pl-c"&gt;# if you have dynamic keys you can do this&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def key = &lt;span class="pl-s"&gt;'myFile2'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;json[key] = { read: &lt;span class="pl-s"&gt;'test2.pdf'&lt;/span&gt;, filename: &lt;span class="pl-s"&gt;'upload-name2.pdf'&lt;/span&gt;, contentType: &lt;span class="pl-s"&gt;'application/pdf'&lt;/span&gt; }
&lt;span class="pl-k"&gt;And &lt;/span&gt;multipart files json&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-soap" class="anchor" aria-hidden="true" href="#soap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SOAP&lt;/h1&gt;
&lt;p&gt;Since a SOAP request needs special handling, this is the only case where the
&lt;a href="#method"&gt;&lt;code&gt;method&lt;/code&gt;&lt;/a&gt; step is not used to actually fire the request to the server.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-soap-action" class="anchor" aria-hidden="true" href="#soap-action"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;soap action&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The name of the SOAP action specified is used as the 'SOAPAction' header.  Here is an example
which also demonstrates how you could assert for expected values in the response XML.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;request read(&lt;span class="pl-s"&gt;'soap-request.xml'&lt;/span&gt;)
&lt;span class="pl-k"&gt;When &lt;/span&gt;soap action &lt;span class="pl-s"&gt;'QueryUsageBalance'&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200
&lt;span class="pl-k"&gt;And &lt;/span&gt;match response /Envelope/Body/QueryUsageBalanceResponse/Result/Error/Code == &lt;span class="pl-s"&gt;'DAT_USAGE_1003'&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;match response /Envelope/Body/QueryUsageBalanceResponse == read(&lt;span class="pl-s"&gt;'expected-response.xml'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/soap.feature"&gt;working example&lt;/a&gt; of calling a SOAP service can be found within the Karate project test-suite. Refer to the &lt;a href="karate-demo"&gt;demos&lt;/a&gt; for another example: &lt;a href="karate-demo/src/test/java/demo/soap/soap.feature"&gt;&lt;code&gt;soap.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;More examples are available that showcase various ways of parameter-izing and dynamically manipulating SOAP requests in a data-driven fashion. Karate is quite flexible, and provides multiple options for you to evolve patterns that fit your environment, as you can see here: &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/xml/xml.feature"&gt;&lt;code&gt;xml.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-retry-until" class="anchor" aria-hidden="true" href="#retry-until"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;retry until&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Karate has built-in support for re-trying an HTTP request until a certain condition has been met. The default setting for the max retry-attempts is 3 with a poll interval of 3000 milliseconds (3 seconds). If needed, this can be changed by using &lt;a href="#configure"&gt;&lt;code&gt;configure&lt;/code&gt;&lt;/a&gt; - any time during a test, or set globally via &lt;a href="#configuration"&gt;&lt;code&gt;karate-config.js&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;configure retry = { count: 10, interval: 5000 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;retry&lt;/code&gt; keyword is designed to extend the existing &lt;a href="#method"&gt;&lt;code&gt;method&lt;/code&gt;&lt;/a&gt; syntax (and should appear &lt;strong&gt;before&lt;/strong&gt; a &lt;code&gt;method&lt;/code&gt; step) like so:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;url demoBaseUrl
&lt;span class="pl-k"&gt;And &lt;/span&gt;path &lt;span class="pl-s"&gt;'greeting'&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;retry until response.id &amp;gt; 3
&lt;span class="pl-k"&gt;When &lt;/span&gt;method get
&lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Any JavaScript expression that uses any variable in scope can be placed after the "&lt;code&gt;retry until&lt;/code&gt;" part. So you can refer to the &lt;a href="#response"&gt;&lt;code&gt;response&lt;/code&gt;&lt;/a&gt;, &lt;a href="#responsestatus"&gt;&lt;code&gt;responseStatus&lt;/code&gt;&lt;/a&gt; or even &lt;a href="#responseheaders"&gt;&lt;code&gt;responseHeaders&lt;/code&gt;&lt;/a&gt; if needed. For example:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;url demoBaseUrl
&lt;span class="pl-k"&gt;And &lt;/span&gt;path &lt;span class="pl-s"&gt;'greeting'&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;retry until responseStatus == 200 &amp;amp;&amp;amp; response.id &amp;gt; 3
&lt;span class="pl-k"&gt;When &lt;/span&gt;method get&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that it has to be a pure JavaScript expression - which means that &lt;code&gt;match&lt;/code&gt; syntax such as &lt;code&gt;contains&lt;/code&gt; will &lt;em&gt;not&lt;/em&gt; work. But you can easily achieve any complex logic by &lt;a href="https://stackoverflow.com/a/55823180/143475" rel="nofollow"&gt;using the JS API&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Refer to &lt;a href="karate-demo/src/test/java/demo/polling/polling.feature"&gt;&lt;code&gt;polling.feature&lt;/code&gt;&lt;/a&gt; for an example, and also see the alternative way to achieve &lt;a href="#polling"&gt;polling&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-configure" class="anchor" aria-hidden="true" href="#configure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;configure&lt;/code&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-managing-headers-ssl-timeouts-and-http-proxy" class="anchor" aria-hidden="true" href="#managing-headers-ssl-timeouts-and-http-proxy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Managing Headers, SSL, Timeouts and HTTP Proxy&lt;/h2&gt;
&lt;p&gt;You can adjust configuration settings for the HTTP client used by Karate using this keyword. The syntax is similar to &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt; but instead of a named variable, you update configuration. Here are the configuration keys supported:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;headers&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JSON / JS function&lt;/td&gt;
&lt;td&gt;See &lt;a href="#configure-headers"&gt;&lt;code&gt;configure headers&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cookies&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JSON / JS function&lt;/td&gt;
&lt;td&gt;Just like &lt;code&gt;configure headers&lt;/code&gt;, but for cookies. You will typically never use this, as response cookies are auto-added to all future requests. If you need to clear cookies at any time, just do &lt;code&gt;configure cookies = null&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;logPrettyRequest&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;Pretty print the request payload JSON or XML with indenting (default &lt;code&gt;false&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;logPrettyResponse&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;Pretty print the response payload JSON or XML with indenting (default &lt;code&gt;false&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;printEnabled&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;Can be used to suppress the &lt;a href="#print"&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt; output when not in 'dev mode' by setting as &lt;code&gt;false&lt;/code&gt; (default &lt;code&gt;true&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;report&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JSON / boolean&lt;/td&gt;
&lt;td&gt;see &lt;a href="#report-verbosity"&gt;report verbosity&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;afterScenario&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JS function&lt;/td&gt;
&lt;td&gt;Will be called &lt;a href="#hooks"&gt;after every &lt;code&gt;Scenario&lt;/code&gt;&lt;/a&gt; (or &lt;code&gt;Example&lt;/code&gt; within a &lt;code&gt;Scenario Outline&lt;/code&gt;), refer to this example: &lt;a href="karate-demo/src/test/java/demo/hooks/hooks.feature"&gt;&lt;code&gt;hooks.feature&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;afterFeature&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JS function&lt;/td&gt;
&lt;td&gt;Will be called &lt;a href="#hooks"&gt;after every &lt;code&gt;Feature&lt;/code&gt;&lt;/a&gt;, refer to this example: &lt;a href="karate-demo/src/test/java/demo/hooks/hooks.feature"&gt;&lt;code&gt;hooks.feature&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ssl&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;Enable HTTPS calls without needing to configure a trusted certificate or key-store.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ssl&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Like above, but force the SSL algorithm to one of &lt;a href="http://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#SSLContext" rel="nofollow"&gt;these values&lt;/a&gt;. (The above form internally defaults to &lt;code&gt;TLS&lt;/code&gt; if simply set to &lt;code&gt;true&lt;/code&gt;).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ssl&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JSON&lt;/td&gt;
&lt;td&gt;see &lt;a href="#x509-certificate-authentication"&gt;X509 certificate authentication&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;followRedirects&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;Whether the HTTP client automatically follows redirects - (default &lt;code&gt;true&lt;/code&gt;), refer to this &lt;a href="karate-demo/src/test/java/demo/redirect/redirect.feature"&gt;example&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;connectTimeout&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Set the connect timeout (milliseconds). The default is 30000 (30 seconds). Note that for &lt;code&gt;karate-apache&lt;/code&gt;, this sets the &lt;a href="https://stackoverflow.com/a/22722260/143475" rel="nofollow"&gt;socket timeout&lt;/a&gt; to the same value as well.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;readTimeout&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Set the read timeout (milliseconds). The default is 30000 (30 seconds).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;proxy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Set the URI of the HTTP proxy to use.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;proxy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JSON&lt;/td&gt;
&lt;td&gt;For a proxy that requires authentication, set the &lt;code&gt;uri&lt;/code&gt;, &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt;, see example below. Also a &lt;code&gt;nonProxyHosts&lt;/code&gt; key is supported which can take a list for e.g. &lt;code&gt;{ uri: 'http://my.proxy.host:8080',  nonProxyHosts: ['host1', 'host2']}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;charset&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;The charset that will be sent in the request &lt;code&gt;Content-Type&lt;/code&gt; which defaults to &lt;code&gt;utf-8&lt;/code&gt;. You typically never need to change this, and you can over-ride (or disable) this per-request if needed via the &lt;a href="#header"&gt;&lt;code&gt;header&lt;/code&gt;&lt;/a&gt; keyword (&lt;a href="karate-demo/src/test/java/demo/headers/content-type.feature"&gt;example&lt;/a&gt;).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;retry&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JSON&lt;/td&gt;
&lt;td&gt;defaults to &lt;code&gt;{ count: 3, interval: 3000 }&lt;/code&gt; - see &lt;a href="#retry-until"&gt;&lt;code&gt;retry until&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;outlineVariablesAuto&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;defaults to &lt;code&gt;true&lt;/code&gt;, whether each key-value pair in the &lt;code&gt;Scenario Outline&lt;/code&gt; example-row is automatically injected into the context as a variable (and not just &lt;code&gt;__row&lt;/code&gt;), see &lt;a href="#scenario-outline-enhancements"&gt;&lt;code&gt;Scenario Outline&lt;/code&gt; Enhancements&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;lowerCaseResponseHeaders&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;Converts every key and value in the &lt;a href="#responseheaders"&gt;&lt;code&gt;responseHeaders&lt;/code&gt;&lt;/a&gt; to lower-case which makes it easier to validate for e.g. using &lt;a href="#match-header"&gt;&lt;code&gt;match header&lt;/code&gt;&lt;/a&gt; (default &lt;code&gt;false&lt;/code&gt;) &lt;a href="karate-demo/src/test/java/demo/headers/content-type.feature"&gt;(example)&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;httpClientClass&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;See &lt;a href="karate-mock-servlet"&gt;karate-mock-servlet&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;httpClientInstance&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Java Object&lt;/td&gt;
&lt;td&gt;See &lt;a href="karate-mock-servlet"&gt;karate-mock-servlet&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;userDefined&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JSON&lt;/td&gt;
&lt;td&gt;See &lt;a href="karate-mock-servlet"&gt;karate-mock-servlet&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;responseHeaders&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JSON / JS function&lt;/td&gt;
&lt;td&gt;See &lt;a href="karate-netty#configure-responseheaders"&gt;karate-netty&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cors&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;See &lt;a href="karate-netty##configure-cors"&gt;karate-netty&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# pretty print the response payload&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;configure logPrettyResponse = true

&lt;span class="pl-c"&gt;# enable ssl (and no certificate is required)&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;configure ssl = true

&lt;span class="pl-c"&gt;# enable ssl and force the algorithm to TLSv1.2&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;configure ssl = &lt;span class="pl-s"&gt;'TLSv1.2'&lt;/span&gt;

&lt;span class="pl-c"&gt;# time-out if the response is not received within 10 seconds (after the connection is established)&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;configure readTimeout = 10000

&lt;span class="pl-c"&gt;# set the uri of the http proxy server to use&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;configure proxy = &lt;span class="pl-s"&gt;'http://my.proxy.host:8080'&lt;/span&gt;

&lt;span class="pl-c"&gt;# proxy which needs authentication&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;configure proxy = { uri: &lt;span class="pl-s"&gt;'http://my.proxy.host:8080'&lt;/span&gt;, username: &lt;span class="pl-s"&gt;'john'&lt;/span&gt;, password: &lt;span class="pl-s"&gt;'secret'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And if you need to set some of these 'globally' you can easily do so using &lt;a href="#the-karate-object"&gt;the &lt;code&gt;karate&lt;/code&gt; object&lt;/a&gt; in &lt;a href="#configuration"&gt;&lt;code&gt;karate-config.js&lt;/code&gt;&lt;/a&gt; - for e.g. &lt;a href="#karate-configure"&gt;&lt;code&gt;karate.configure('ssl', true)&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-report-verbosity" class="anchor" aria-hidden="true" href="#report-verbosity"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Report Verbosity&lt;/h3&gt;
&lt;p&gt;By default, when the &lt;a href="#parallel-execution"&gt;parallel runner&lt;/a&gt; is used Karate will add logs to the report output so that HTTP requests and responses appear in-line in the HTML reports. There may be cases where you want to suppress this to make the reports "lighter" and easier to read.&lt;/p&gt;
&lt;p&gt;The configure key here is &lt;code&gt;report&lt;/code&gt; and it takes a JSON value. For example:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;configure report = { showLog: true, showAllSteps: false }&lt;/pre&gt;&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;code&gt;report&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;showLog&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;HTTP requests and responses (including headers) will appear in the HTML report, default &lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;showAllSteps&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;If &lt;code&gt;false&lt;/code&gt;, any step that starts with &lt;code&gt;*&lt;/code&gt; instead of &lt;code&gt;Given&lt;/code&gt;, &lt;code&gt;When&lt;/code&gt;, &lt;code&gt;Then&lt;/code&gt; etc. will &lt;em&gt;not&lt;/em&gt; appear in the HTML report. The &lt;a href="#print"&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt; step is an exception. Default &lt;code&gt;true&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;You can 'reset' default settings by using the following short-cut:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# reset to defaults&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;configure report = true&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And this short-cut is also supported which will disable all logs:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;configure report = false&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-system-properties-for-ssl-and-http-proxy" class="anchor" aria-hidden="true" href="#system-properties-for-ssl-and-http-proxy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System Properties for SSL and HTTP proxy&lt;/h3&gt;
&lt;p&gt;For HTTPS / SSL, you can also specify a custom certificate or trust store by &lt;a href="https://docs.oracle.com/javase/8/docs/technotes/guides/security/jsse/JSSERefGuide.html#InstallationAndCustomization" rel="nofollow"&gt;setting Java system properties&lt;/a&gt;. And similarly - for &lt;a href="https://docs.oracle.com/javase/8/docs/technotes/guides/net/proxies.html" rel="nofollow"&gt;specifying the HTTP proxy&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-x509-certificate-authentication" class="anchor" aria-hidden="true" href="#x509-certificate-authentication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;X509 Certificate Authentication&lt;/h3&gt;
&lt;p&gt;Also referred to as "mutual auth" - if your API requires that clients present an X509 certificate for authentication, Karate supports this via JSON as the &lt;code&gt;configure ssl&lt;/code&gt; value.  The following parameters are supported:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required?&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;keyStore&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;path to file containing public and private keys for your client certificate.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;keyStorePassword&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;password for keyStore file.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;keyStoreType&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;Format of the keyStore file.  Allowed keystore types are as described in the &lt;a href="https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#KeyStore" rel="nofollow"&gt;Java &lt;code&gt;KeyStore&lt;/code&gt; docs&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;trustStore&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;path to file containing the trust chain for your server certificate.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;trustStorePassword&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;password for trustStore file.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;trustStoreType&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;Format of the trustStore file.  Allowed keystore types are as described in the &lt;a href="https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#KeyStore" rel="nofollow"&gt;Java &lt;code&gt;KeyStore&lt;/code&gt; docs&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;trustAll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;if all server certificates should be considered trusted. Default value is &lt;code&gt;false&lt;/code&gt;. If &lt;code&gt;true&lt;/code&gt; will allow self-signed certificates. If &lt;code&gt;false&lt;/code&gt;, will expect the whole chain in the &lt;code&gt;trustStore&lt;/code&gt; or use what is available in the environment.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;algorithm&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;force the SSL algorithm to one of &lt;a href="http://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#SSLContext" rel="nofollow"&gt;these values&lt;/a&gt;. Default is &lt;code&gt;TLS&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# enable X509 certificate authentication with PKCS12 file 'certstore.pfx' and password 'certpassword'
* configure ssl = { keyStore: 'classpath:certstore.pfx', keyStorePassword: 'certpassword', keyStoreType: 'pkcs12' };
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;# trust all server certificates, in the feature file
* configure ssl = { trustAll: true };
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;# trust all server certificates, global configuration in 'karate-config.js'
karate.configure('ssl', { trustAll: true });
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-payload-assertions" class="anchor" aria-hidden="true" href="#payload-assertions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Payload Assertions&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-prepare-mutate-assert" class="anchor" aria-hidden="true" href="#prepare-mutate-assert"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prepare, Mutate, Assert.&lt;/h2&gt;
&lt;p&gt;Now it should be clear how Karate makes it easy to express JSON or XML. If you &lt;a href="#reading-files"&gt;read from a file&lt;/a&gt;, the advantage is that multiple scripts can re-use the same data.&lt;/p&gt;
&lt;p&gt;Once you have a &lt;a href="#native-data-types"&gt;JSON or XML object&lt;/a&gt;, Karate provides multiple ways to manipulate, extract or transform data. And you can easily assert that the data is as expected by comparing it with another JSON or XML object.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-match" class="anchor" aria-hidden="true" href="#match"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;match&lt;/code&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-payload-assertions--smart-comparison" class="anchor" aria-hidden="true" href="#payload-assertions--smart-comparison"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Payload Assertions / Smart Comparison&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;match&lt;/code&gt; operation is smart because white-space does not matter, and the order of keys (or data elements) does not matter. Karate is even able to &lt;a href="#ignore-or-validate"&gt;ignore fields you choose&lt;/a&gt; - which is very useful when you want to handle server-side dynamically generated fields such as UUID-s, time-stamps, security-tokens and the like.&lt;/p&gt;
&lt;p&gt;The match syntax involves a double-equals sign '==' to represent a comparison (and not an assignment '=').&lt;/p&gt;
&lt;p&gt;Since &lt;code&gt;match&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; go well together, they are both introduced in the examples in the section below.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-set" class="anchor" aria-hidden="true" href="#set"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;set&lt;/code&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-manipulating-data" class="anchor" aria-hidden="true" href="#manipulating-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manipulating Data&lt;/h3&gt;
&lt;p&gt;Game, &lt;code&gt;set&lt;/code&gt; and &lt;code&gt;match&lt;/code&gt; - Karate !&lt;/p&gt;
&lt;p&gt;Setting values on JSON documents is simple using the &lt;code&gt;set&lt;/code&gt; keyword and &lt;a href="https://github.com/jayway/JsonPath#path-examples"&gt;JsonPath expressions&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def myJson = { foo: &lt;span class="pl-s"&gt;'bar'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;set myJson.foo = &lt;span class="pl-s"&gt;'world'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match myJson == { foo: &lt;span class="pl-s"&gt;'world'&lt;/span&gt; }

&lt;span class="pl-c"&gt;# add new keys.  you can use pure JsonPath expressions (notice how this is different from the above)&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;set myJson $.hey = &lt;span class="pl-s"&gt;'ho'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match myJson == { foo: &lt;span class="pl-s"&gt;'world'&lt;/span&gt;, hey: &lt;span class="pl-s"&gt;'ho'&lt;/span&gt; }

&lt;span class="pl-c"&gt;# and even append to json arrays (or create them automatically)&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;set myJson.zee[0] = 5
&lt;span class="pl-k"&gt;* &lt;/span&gt;match myJson == { foo: &lt;span class="pl-s"&gt;'world'&lt;/span&gt;, hey: &lt;span class="pl-s"&gt;'ho'&lt;/span&gt;, zee: [5] }

&lt;span class="pl-c"&gt;# omit the array index to append&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;set myJson.zee[] = 6
&lt;span class="pl-k"&gt;* &lt;/span&gt;match myJson == { foo: &lt;span class="pl-s"&gt;'world'&lt;/span&gt;, hey: &lt;span class="pl-s"&gt;'ho'&lt;/span&gt;, zee: [5, 6] }

&lt;span class="pl-c"&gt;# nested json ? no problem&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;set myJson.cat = { name: &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match myJson == { foo: &lt;span class="pl-s"&gt;'world'&lt;/span&gt;, hey: &lt;span class="pl-s"&gt;'ho'&lt;/span&gt;, zee: [5, 6], cat: { name: &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt; } }

&lt;span class="pl-c"&gt;# and for match - the order of keys does not matter&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match myJson == { cat: { name: &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt; }, hey: &lt;span class="pl-s"&gt;'ho'&lt;/span&gt;, foo: &lt;span class="pl-s"&gt;'world'&lt;/span&gt;, zee: [5, 6] }

&lt;span class="pl-c"&gt;# you can ignore fields marked with '#ignore'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match myJson == { cat: &lt;span class="pl-s"&gt;'#ignore'&lt;/span&gt;, hey: &lt;span class="pl-s"&gt;'ho'&lt;/span&gt;, foo: &lt;span class="pl-s"&gt;'world'&lt;/span&gt;, zee: [5, 6] }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;XML and XPath works just like you'd expect.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def cat = &lt;span class="pl-smi"&gt;&amp;lt;cat&amp;gt;&amp;lt;name&amp;gt;&lt;/span&gt;Billie&lt;span class="pl-smi"&gt;&amp;lt;/name&amp;gt;&amp;lt;/cat&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;set cat /cat/name = &lt;span class="pl-s"&gt;'Jean'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match cat / == &lt;span class="pl-smi"&gt;&amp;lt;cat&amp;gt;&amp;lt;name&amp;gt;&lt;/span&gt;Jean&lt;span class="pl-smi"&gt;&amp;lt;/name&amp;gt;&amp;lt;/cat&amp;gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;# you can even set whole fragments of xml&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def xml = &lt;span class="pl-smi"&gt;&amp;lt;foo&amp;gt;&amp;lt;bar&amp;gt;&lt;/span&gt;baz&lt;span class="pl-smi"&gt;&amp;lt;/bar&amp;gt;&amp;lt;/foo&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;set xml/foo/bar = &lt;span class="pl-smi"&gt;&amp;lt;hello&amp;gt;&lt;/span&gt;world&lt;span class="pl-smi"&gt;&amp;lt;/hello&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match xml == &lt;span class="pl-smi"&gt;&amp;lt;foo&amp;gt;&amp;lt;bar&amp;gt;&amp;lt;hello&amp;gt;&lt;/span&gt;world&lt;span class="pl-smi"&gt;&amp;lt;/hello&amp;gt;&amp;lt;/bar&amp;gt;&amp;lt;/foo&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Refer to the section on &lt;a href="#xpath-functions"&gt;XPath Functions&lt;/a&gt; for examples of advanced XPath usage.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For JSON, you can also use &lt;a href="#eval"&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; instead of &lt;code&gt;set&lt;/code&gt;, useful when the path you are trying to mutate is dynamic.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-match-and-variables" class="anchor" aria-hidden="true" href="#match-and-variables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;match&lt;/code&gt; and variables&lt;/h3&gt;
&lt;p&gt;In case you were wondering, variables (and even expressions) are supported on the right-hand-side. So you can compare 2 JSON (or XML) payloads if you wanted to:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = { hello: &lt;span class="pl-s"&gt;'world'&lt;/span&gt;, baz: &lt;span class="pl-s"&gt;'ban'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;def bar = { baz: &lt;span class="pl-s"&gt;'ban'&lt;/span&gt;, hello: &lt;span class="pl-s"&gt;'world'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == bar&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you are wondering about the finer details of the &lt;code&gt;match&lt;/code&gt; syntax, the left-hand-side has to be either a&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;variable name - e.g. &lt;code&gt;foo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;a 'named' JsonPath or XPath expression - e.g. &lt;code&gt;foo.bar&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;any valid function or method call - e.g. &lt;code&gt;foo.bar()&lt;/code&gt; or &lt;code&gt;foo.bar('hello').baz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;or anything wrapped in parantheses which will be evaluated - e.g. &lt;code&gt;(foo + bar)&lt;/code&gt; or &lt;code&gt;(42)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And the right-hand-side can be any valid &lt;a href="#karate-expressions"&gt;Karate expression&lt;/a&gt;. Refer to the section on &lt;a href="#jsonpath-short-cuts"&gt;JsonPath short-cuts&lt;/a&gt; for a deeper understanding of 'named' JsonPath expressions in Karate.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-match--not-equals" class="anchor" aria-hidden="true" href="#match--not-equals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;match !=&lt;/code&gt; (not equals)&lt;/h3&gt;
&lt;p&gt;The 'not equals' operator &lt;code&gt;!=&lt;/code&gt; works as you would expect:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def test = { foo: &lt;span class="pl-s"&gt;'bar'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match test != { foo: &lt;span class="pl-s"&gt;'baz'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;You typically will &lt;em&gt;never&lt;/em&gt; need to use the &lt;code&gt;!=&lt;/code&gt; (not-equals) operator ! Use it sparingly, and only for string, number or simple payload comparisons.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-set-multiple" class="anchor" aria-hidden="true" href="#set-multiple"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;set&lt;/code&gt; multiple&lt;/h3&gt;
&lt;p&gt;Karate has an elegant way to set multiple keys (via path expressions) in one step. For convenience, non-existent keys (or array elements) will be created automatically. You can find more JSON examples here: &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature"&gt;&lt;code&gt;js-arrays.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def cat = { name: &lt;span class="pl-s"&gt;''&lt;/span&gt; }

&lt;span class="pl-k"&gt;* &lt;/span&gt;set cat
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;path&lt;/span&gt;   | &lt;span class="pl-s1"&gt;value&lt;/span&gt; |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;name&lt;/span&gt;   | '&lt;span class="pl-s1"&gt;Bob&lt;/span&gt;' |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;age&lt;/span&gt;    | &lt;span class="pl-s1"&gt;5&lt;/span&gt;     |&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;match cat == { name: &lt;span class="pl-s"&gt;'Bob'&lt;/span&gt;, age: 5 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;One extra convenience for JSON is that if the variable itself (which was &lt;code&gt;cat&lt;/code&gt; in the above example) does not exist, it will be created automatically. You can even create (or modify existing) JSON arrays by using multiple columns.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;set foo
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;path&lt;/span&gt; | &lt;span class="pl-s1"&gt;0&lt;/span&gt;     | &lt;span class="pl-s1"&gt;1&lt;/span&gt;     |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;bar&lt;/span&gt;  | '&lt;span class="pl-s1"&gt;baz&lt;/span&gt;' | '&lt;span class="pl-s1"&gt;ban&lt;/span&gt;' |&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == [{ bar: &lt;span class="pl-s"&gt;'baz'&lt;/span&gt; }, { bar: &lt;span class="pl-s"&gt;'ban'&lt;/span&gt; }]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have to set a bunch of deeply nested keys, you can move the parent path to the top, next to the &lt;code&gt;set&lt;/code&gt; keyword and save a lot of typing !&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;set foo.bar
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;path&lt;/span&gt;   | &lt;span class="pl-s1"&gt;value&lt;/span&gt; |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;one&lt;/span&gt;    | &lt;span class="pl-s1"&gt;1&lt;/span&gt;     |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;two&lt;/span&gt;[&lt;span class="pl-s1"&gt;0&lt;/span&gt;] | &lt;span class="pl-s1"&gt;2&lt;/span&gt;     |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;two&lt;/span&gt;[&lt;span class="pl-s1"&gt;1&lt;/span&gt;] | &lt;span class="pl-s1"&gt;3&lt;/span&gt;     |&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { bar: { one: 1, two: [2, 3] } }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The same concept applies to XML and you can build complicated payloads from scratch in just a few, extremely readable lines. The &lt;code&gt;value&lt;/code&gt; column can take expressions, &lt;em&gt;even&lt;/em&gt; XML chunks. You can find more examples here: &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/xml/xml.feature"&gt;&lt;code&gt;xml.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;set search /acc:getAccountByPhoneNumber
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;path&lt;/span&gt;                        | &lt;span class="pl-s1"&gt;value&lt;/span&gt; |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;acc&lt;/span&gt;:&lt;span class="pl-s1"&gt;phone&lt;/span&gt;/@&lt;span class="pl-s1"&gt;foo&lt;/span&gt;              | '&lt;span class="pl-s1"&gt;bar&lt;/span&gt;' |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;acc&lt;/span&gt;:&lt;span class="pl-s1"&gt;phone&lt;/span&gt;/&lt;span class="pl-s1"&gt;acc&lt;/span&gt;:&lt;span class="pl-s1"&gt;number&lt;/span&gt;[&lt;span class="pl-s1"&gt;1&lt;/span&gt;]     | &lt;span class="pl-s1"&gt;1234&lt;/span&gt;  |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;acc&lt;/span&gt;:&lt;span class="pl-s1"&gt;phone&lt;/span&gt;/&lt;span class="pl-s1"&gt;acc&lt;/span&gt;:&lt;span class="pl-s1"&gt;number&lt;/span&gt;[&lt;span class="pl-s1"&gt;2&lt;/span&gt;]     | &lt;span class="pl-s1"&gt;5678&lt;/span&gt;  |     &lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;acc&lt;/span&gt;:&lt;span class="pl-s1"&gt;phoneNumberSearchOption&lt;/span&gt; | '&lt;span class="pl-s1"&gt;all&lt;/span&gt;' |&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;match search ==
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;acc:getAccountByPhoneNumber&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;acc:phone foo="bar"&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;          &amp;lt;acc:number&amp;gt;1234&amp;lt;/acc:number&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;          &amp;lt;acc:number&amp;gt;5678&amp;lt;/acc:number&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;/acc:phone&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;acc:phoneNumberSearchOption&amp;gt;all&amp;lt;/acc:phoneNumberSearchOption&amp;gt;        &lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;/acc:getAccountByPhoneNumber&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-remove" class="anchor" aria-hidden="true" href="#remove"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;This is like the opposite of &lt;a href="#set"&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; if you need to remove keys or data elements from JSON or XML instances. You can even remove JSON array elements by index.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def json = { foo: &lt;span class="pl-s"&gt;'world'&lt;/span&gt;, hey: &lt;span class="pl-s"&gt;'ho'&lt;/span&gt;, zee: [1, 2, 3] }
&lt;span class="pl-k"&gt;* &lt;/span&gt;remove json.hey
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == { foo: &lt;span class="pl-s"&gt;'world'&lt;/span&gt;, zee: [1, 2, 3] }
&lt;span class="pl-k"&gt;* &lt;/span&gt;remove json $.zee[1]
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == { foo: &lt;span class="pl-s"&gt;'world'&lt;/span&gt;, zee: [1, 3] }&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;For JSON, you can also use &lt;a href="#eval"&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; instead of &lt;code&gt;remove&lt;/code&gt;, useful when the path you are trying to mutate is dynamic.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;remove&lt;/code&gt; works for XML elements as well:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def xml = &lt;span class="pl-smi"&gt;&amp;lt;foo&amp;gt;&amp;lt;bar&amp;gt;&amp;lt;hello&amp;gt;&lt;/span&gt;world&lt;span class="pl-smi"&gt;&amp;lt;/hello&amp;gt;&amp;lt;/bar&amp;gt;&amp;lt;/foo&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;remove xml/foo/bar/hello
&lt;span class="pl-k"&gt;* &lt;/span&gt;match xml == &lt;span class="pl-smi"&gt;&amp;lt;foo&amp;gt;&amp;lt;bar/&amp;gt;&amp;lt;/foo&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;remove xml /foo/bar
&lt;span class="pl-k"&gt;* &lt;/span&gt;match xml == &lt;span class="pl-smi"&gt;&amp;lt;foo/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also take a look at how a special case of &lt;a href="#embedded-expressions"&gt;embedded-expressions&lt;/a&gt; can remove key-value pairs from a JSON (or XML) payload: &lt;a href="#remove-if-null"&gt;Remove if Null&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-fuzzy-matching" class="anchor" aria-hidden="true" href="#fuzzy-matching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fuzzy Matching&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-ignore-or-validate" class="anchor" aria-hidden="true" href="#ignore-or-validate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ignore or Validate&lt;/h3&gt;
&lt;p&gt;When expressing expected results (in JSON or &lt;a href="#match-and-xml"&gt;XML&lt;/a&gt;) you can mark some fields to be ignored when the match (comparison) is performed.  You can even use a regular-expression so that instead of checking for equality, Karate will just validate that the actual value conforms to the expected pattern.&lt;/p&gt;
&lt;p&gt;This means that even when you have dynamic server-side generated values such as UUID-s and time-stamps appearing in the response, you can still assert that the full-payload matched in one step.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def cat = { name: &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt;, type: &lt;span class="pl-s"&gt;'LOL'&lt;/span&gt;, id: &lt;span class="pl-s"&gt;'a9f7a56b-8d5c-455c-9d13-808461d17b91'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match cat == { name: &lt;span class="pl-s"&gt;'#ignore'&lt;/span&gt;, type: &lt;span class="pl-s"&gt;'#regex [A-Z]{3}'&lt;/span&gt;, id: &lt;span class="pl-s"&gt;'#uuid'&lt;/span&gt; }
&lt;span class="pl-c"&gt;# this will fail&lt;/span&gt;
&lt;span class="pl-c"&gt;# * match cat == { name: '#ignore', type: '#regex .{2}', id: '#uuid' }	&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that regex escaping has to be done with a &lt;em&gt;double&lt;/em&gt; back-slash - for e.g: &lt;code&gt;'#regex a\\.dot'&lt;/code&gt; will match &lt;code&gt;'a.dot'&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The supported markers are the following:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Marker&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#ignore&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Skip comparison for this field even if the data element or JSON key is present&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#null&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Expects actual value to be &lt;code&gt;null&lt;/code&gt;, and the data element or JSON key &lt;em&gt;must&lt;/em&gt; be present&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#notnull&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Expects actual value to be not-&lt;code&gt;null&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#present&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Actual value can be any type or &lt;em&gt;even&lt;/em&gt; &lt;code&gt;null&lt;/code&gt;, but the key &lt;em&gt;must&lt;/em&gt; be present (only for JSON / XML, see below)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#notpresent&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Expects the key to be &lt;strong&gt;not&lt;/strong&gt; present at all (only for JSON / XML, see below)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#array&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Expects actual value to be a JSON array&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#object&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Expects actual value to be a JSON object&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#boolean&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Expects actual value to be a boolean &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#number&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Expects actual value to be a number&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Expects actual value to be a string&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#uuid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Expects actual (string) value to conform to the UUID format&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#regex STR&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Expects actual (string) value to match the regular-expression 'STR' (see examples above)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#? EXPR&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Expects the JavaScript expression 'EXPR' to evaluate to true, see &lt;a href="#self-validation-expressions"&gt;self-validation expressions&lt;/a&gt; below&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#[NUM] EXPR&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Advanced array validation, see &lt;a href="#schema-validation"&gt;schema validation&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#(EXPR)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;For completeness, &lt;a href="#embedded-expressions"&gt;embedded expressions&lt;/a&gt; belong in this list as well&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Note that &lt;code&gt;#present&lt;/code&gt; and &lt;code&gt;#notpresent&lt;/code&gt; only make sense when you are matching within a JSON or XML context or using a JsonPath or XPath on the left-hand-side.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def json = { foo: &lt;span class="pl-s"&gt;'bar'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == { foo: &lt;span class="pl-s"&gt;'#present'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json.nope == &lt;span class="pl-s"&gt;'#notpresent'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The rest can also be used even in 'primitive' data matches like so:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == &lt;span class="pl-s"&gt;'#string'&lt;/span&gt;
&lt;span class="pl-c"&gt;# convenient (and recommended) way to check for array length&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match bar == &lt;span class="pl-s"&gt;'#[2]'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-optional-fields" class="anchor" aria-hidden="true" href="#optional-fields"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Optional Fields&lt;/h3&gt;
&lt;p&gt;If two cross-hatch &lt;code&gt;#&lt;/code&gt; symbols are used as the prefix (for example: &lt;code&gt;##number&lt;/code&gt;), it means that the key is optional or that the value can be null.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = { bar: &lt;span class="pl-s"&gt;'baz'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { bar: &lt;span class="pl-s"&gt;'#string'&lt;/span&gt;, ban: &lt;span class="pl-s"&gt;'##string'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-remove-if-null" class="anchor" aria-hidden="true" href="#remove-if-null"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Remove If Null&lt;/h3&gt;
&lt;p&gt;A very useful behavior when you combine the optional marker with an &lt;a href="#embedded-expressions"&gt;embedded expression&lt;/a&gt; is as follows: if the embedded expression evaluates to &lt;code&gt;null&lt;/code&gt; - the JSON key (or XML element or attribute) will be deleted from the payload (the equivalent of &lt;a href="#remove"&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def data = { a: &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;, b: null, c: null }
&lt;span class="pl-k"&gt;* &lt;/span&gt;def json = { foo: &lt;span class="pl-s"&gt;'#(data.a)'&lt;/span&gt;, bar: &lt;span class="pl-s"&gt;'#(data.b)'&lt;/span&gt;, baz: &lt;span class="pl-s"&gt;'##(data.c)'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == { foo: &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;, bar: null }&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-null-and-notpresent" class="anchor" aria-hidden="true" href="#null-and-notpresent"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;#null&lt;/code&gt; and &lt;code&gt;#notpresent&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Karate's &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; is strict, and the case where a JSON key exists but has a &lt;code&gt;null&lt;/code&gt; value (&lt;code&gt;#null&lt;/code&gt;) is considered different from the case where the key is not present at all (&lt;code&gt;#notpresent&lt;/code&gt;) in the payload.&lt;/p&gt;
&lt;p&gt;But note that &lt;code&gt;##null&lt;/code&gt; can be used to represent a convention that many teams adopt, which is that keys with &lt;code&gt;null&lt;/code&gt; values are stripped from the JSON payload. In other words, &lt;code&gt;{ a: 1, b: null }&lt;/code&gt; is considered 'equal' to &lt;code&gt;{ a: 1 }&lt;/code&gt; and &lt;code&gt;{ a: 1, b: '##null' }&lt;/code&gt; will &lt;code&gt;match&lt;/code&gt; both cases.&lt;/p&gt;
&lt;p&gt;These examples (all exact matches) can make things more clear:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = { }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'##null'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'##notnull'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'#notpresent'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'#ignore'&lt;/span&gt; }

&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = { a: null }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'#null'&lt;/span&gt; }    
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'##null'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'#present'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'#ignore'&lt;/span&gt; }

&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = { a: 1 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'#notnull'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'##notnull'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'#present'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'#ignore'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that you can alternatively use JsonPath on the left-hand-side:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = { a: 1 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo.a == &lt;span class="pl-s"&gt;'#present'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo.nope == &lt;span class="pl-s"&gt;'#notpresent'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But of course it is preferable to match whole objects in one step as far as possible.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-self-validation-expressions" class="anchor" aria-hidden="true" href="#self-validation-expressions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;'Self' Validation Expressions&lt;/h3&gt;
&lt;p&gt;The special 'predicate' marker &lt;code&gt;#? EXPR&lt;/code&gt; in the table above is an interesting one.  It is best explained via examples. Any valid JavaScript expression that evaluates to a &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Truthy" rel="nofollow"&gt;Truthy&lt;/a&gt; or &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Falsy" rel="nofollow"&gt;Falsy&lt;/a&gt; value is expected after the &lt;code&gt;#?&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Observe how the value of the field being validated (or 'self') is injected into the 'underscore' expression variable: '&lt;code&gt;_&lt;/code&gt;'&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def date = { month: 3 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match date == { month: &lt;span class="pl-s"&gt;'#? _ &amp;gt; 0 &amp;amp;&amp;amp; _ &amp;lt; 13'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What is even more interesting is that expressions can refer to variables:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def date = { month: 3 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;def min = 1
&lt;span class="pl-k"&gt;* &lt;/span&gt;def max = 12
&lt;span class="pl-k"&gt;* &lt;/span&gt;match date == { month: &lt;span class="pl-s"&gt;'#? _ &amp;gt;= min &amp;amp;&amp;amp; _ &amp;lt;= max'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And functions work as well ! You can imagine how you could evolve a nice set of utilities that validate all your domain objects.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def date = { month: 3 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;def isValidMonth = function(m) { return m &amp;gt;= 0 &amp;amp;&amp;amp; m &lt;span class="pl-smi"&gt;&amp;lt;= 12 }&lt;/span&gt;
&lt;span class="pl-smi"&gt;* match date == { month: '#? isValidMonth(_)' }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Especially since strings can be easily coerced to numbers (and vice-versa) in Javascript, you can combine built-in validators with the self-validation 'predicate' form like this: &lt;code&gt;'#number? _ &amp;gt; 0'&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# given this invalid input (string instead of number)&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def date = { month: &lt;span class="pl-s"&gt;'3'&lt;/span&gt; }
&lt;span class="pl-c"&gt;# this will pass&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match date == { month: &lt;span class="pl-s"&gt;'#? _ &amp;gt; 0'&lt;/span&gt; }
&lt;span class="pl-c"&gt;# but this 'combined form' will fail, which is what we want&lt;/span&gt;
&lt;span class="pl-c"&gt;# * match date == { month: '#number? _ &amp;gt; 0' }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-referring-to-the-json-root" class="anchor" aria-hidden="true" href="#referring-to-the-json-root"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Referring to the JSON root&lt;/h4&gt;
&lt;p&gt;You can actually refer to any JsonPath on the document via &lt;code&gt;$&lt;/code&gt; and perform cross-field or conditional validations ! This example uses &lt;a href="#match-contains"&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt; and the &lt;a href="#self-validation-expressions"&gt;&lt;code&gt;#?&lt;/code&gt;&lt;/a&gt; 'predicate' syntax, and situations where this comes in useful will be apparent when we discuss &lt;a href="#match-each"&gt;&lt;code&gt;match each&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;def temperature = { celsius: 100, fahrenheit: 212 }
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match temperature == { celsius: &lt;span class="pl-s"&gt;'#number'&lt;/span&gt;, fahrenheit: &lt;span class="pl-s"&gt;'#? _ == $.celsius * 1.8 + 32'&lt;/span&gt; }
&lt;span class="pl-c"&gt;# when validation logic is an 'equality' check, an embedded expression works better&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match temperature contains { fahrenheit: &lt;span class="pl-s"&gt;'#($.celsius * 1.8 + 32)'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-match-text-or-binary" class="anchor" aria-hidden="true" href="#match-text-or-binary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;match&lt;/code&gt; text or binary&lt;/h3&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# when the response is plain-text&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match response == &lt;span class="pl-s"&gt;'Health Check OK'&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;match response != &lt;span class="pl-s"&gt;'Error'&lt;/span&gt;

&lt;span class="pl-c"&gt;# when the response is binary (byte-array)&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match responseBytes == read(&lt;span class="pl-s"&gt;'test.pdf'&lt;/span&gt;)

&lt;span class="pl-c"&gt;# incidentally, match and assert behave exactly the same way for strings&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def hello = &lt;span class="pl-s"&gt;'Hello World!'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match hello == &lt;span class="pl-s"&gt;'Hello World!'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;assert hello == &lt;span class="pl-s"&gt;'Hello World!'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Checking if a string is contained within another string is a very common need and &lt;a href="#match-contains"&gt;&lt;code&gt;match&lt;/code&gt; (name) &lt;code&gt;contains&lt;/code&gt;&lt;/a&gt; works just like you'd expect:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def hello = &lt;span class="pl-s"&gt;'Hello World!'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match hello contains &lt;span class="pl-s"&gt;'World'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match hello !contains &lt;span class="pl-s"&gt;'blah'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For case-insensitive string comparisons, see how to create &lt;a href="#commonly-needed-utilities"&gt;custom utilities&lt;/a&gt; or &lt;a href="#karate-lowercase"&gt;&lt;code&gt;karate.lowerCase()&lt;/code&gt;&lt;/a&gt;. And for dealing with binary content - see &lt;a href="#type-bytes"&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-match-header" class="anchor" aria-hidden="true" href="#match-header"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;match header&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Since asserting against header values in the response is a common task - &lt;code&gt;match header&lt;/code&gt; has a special meaning.  It short-cuts to the pre-defined variable &lt;a href="#responseheaders"&gt;&lt;code&gt;responseHeaders&lt;/code&gt;&lt;/a&gt; and reduces some complexity - because strictly, HTTP headers are a 'multi-valued map' or a 'map of lists' - the Java-speak equivalent being &lt;code&gt;Map&amp;lt;String, List&amp;lt;String&amp;gt;&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Since &lt;a href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2" rel="nofollow"&gt;as per the HTTP spec&lt;/a&gt;, headers are &lt;em&gt;case-insensitive&lt;/em&gt; you may want to switch on this &lt;a href="#configure"&gt;setting&lt;/a&gt;: &lt;code&gt;* configure lowerCaseResponseHeaders = true&lt;/code&gt; - if you need to perform a lot of assertions on the &lt;a href="#responseheaders"&gt;&lt;code&gt;responseHeaders&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# so after a http request&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match header Content-Type == &lt;span class="pl-s"&gt;'application/json'&lt;/span&gt;
&lt;span class="pl-c"&gt;# 'contains' works as well&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match header Content-Type contains &lt;span class="pl-s"&gt;'application'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note the extra convenience where you don't have to enclose the LHS key in quotes.&lt;/p&gt;
&lt;p&gt;You can always directly access the variable called &lt;a href="#responseheaders"&gt;&lt;code&gt;responseHeaders&lt;/code&gt;&lt;/a&gt; if you wanted to do more checks, but you typically won't need to.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-match-and-xml" class="anchor" aria-hidden="true" href="#match-and-xml"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;match&lt;/code&gt; and XML&lt;/h3&gt;
&lt;p&gt;All the &lt;a href="#fuzzy-matching"&gt;fuzzy matching&lt;/a&gt; markers will work in XML as well. Here are some examples:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;  &lt;span class="pl-k"&gt;* &lt;/span&gt;def xml = &lt;span class="pl-smi"&gt;&amp;lt;root&amp;gt;&amp;lt;hello&amp;gt;&lt;/span&gt;world&lt;span class="pl-smi"&gt;&amp;lt;/hello&amp;gt;&amp;lt;foo&amp;gt;&lt;/span&gt;bar&lt;span class="pl-smi"&gt;&amp;lt;/foo&amp;gt;&amp;lt;/root&amp;gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;* &lt;/span&gt;match xml == &lt;span class="pl-smi"&gt;&amp;lt;root&amp;gt;&amp;lt;hello&amp;gt;&lt;/span&gt;world&lt;span class="pl-smi"&gt;&amp;lt;/hello&amp;gt;&amp;lt;foo&amp;gt;&lt;/span&gt;&lt;span class="pl-c"&gt;#ignore&amp;lt;/foo&amp;gt;&amp;lt;/root&amp;gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;* &lt;/span&gt;def xml = &lt;span class="pl-smi"&gt;&amp;lt;root&amp;gt;&amp;lt;hello foo="bar"&amp;gt;&lt;/span&gt;world&lt;span class="pl-smi"&gt;&amp;lt;/hello&amp;gt;&amp;lt;/root&amp;gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;* &lt;/span&gt;match xml == &lt;span class="pl-smi"&gt;&amp;lt;root&amp;gt;&amp;lt;hello foo="#ignore"&amp;gt;&lt;/span&gt;world&lt;span class="pl-smi"&gt;&amp;lt;/hello&amp;gt;&amp;lt;/root&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Refer to this file for a comprehensive set of XML examples: &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/xml/xml.feature"&gt;&lt;code&gt;xml.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-matching-sub-sets-of-json-keys-and-arrays" class="anchor" aria-hidden="true" href="#matching-sub-sets-of-json-keys-and-arrays"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Matching Sub-Sets of JSON Keys and Arrays&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-match-contains" class="anchor" aria-hidden="true" href="#match-contains"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;match contains&lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-json-keys" class="anchor" aria-hidden="true" href="#json-keys"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON Keys&lt;/h4&gt;
&lt;p&gt;In some cases where the response JSON is wildly dynamic, you may want to only check for the existence of some keys. And &lt;code&gt;match&lt;/code&gt; (name) &lt;code&gt;contains&lt;/code&gt; is how you can do so:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = { bar: 1, baz: &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;, ban: &lt;span class="pl-s"&gt;'world'&lt;/span&gt; }

&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo contains { bar: 1 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo contains { baz: &lt;span class="pl-s"&gt;'hello'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo contains { bar:1, baz: &lt;span class="pl-s"&gt;'hello'&lt;/span&gt; }
&lt;span class="pl-c"&gt;# this will fail&lt;/span&gt;
&lt;span class="pl-c"&gt;# * match foo == { bar:1, baz: 'hello' }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also note that &lt;a href="#match-contains-any"&gt;&lt;code&gt;match contains any&lt;/code&gt;&lt;/a&gt; is possible for JSON objects as well as JSON arrays.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-not-contains" class="anchor" aria-hidden="true" href="#not-contains"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;(not) &lt;code&gt;!contains&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;It is sometimes useful to be able to check if a key-value-pair does &lt;strong&gt;not&lt;/strong&gt; exist. This is possible by prefixing &lt;code&gt;contains&lt;/code&gt; with a &lt;code&gt;!&lt;/code&gt; (with no space in between).&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = { bar: 1, baz: &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;, ban: &lt;span class="pl-s"&gt;'world'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo !contains { bar: 2 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo !contains { huh: &lt;span class="pl-s"&gt;'#notnull'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's a reminder that the &lt;a href="#null-and-notpresent"&gt;&lt;code&gt;#notpresent&lt;/code&gt;&lt;/a&gt; marker can be mixed into an equality &lt;code&gt;match&lt;/code&gt; (&lt;code&gt;==&lt;/code&gt;) to assert that some keys exist and at the same time ensure that some keys do &lt;strong&gt;not&lt;/strong&gt; exist:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = { a: 1 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'#number'&lt;/span&gt;, b: &lt;span class="pl-s"&gt;'#notpresent'&lt;/span&gt; }

&lt;span class="pl-c"&gt;# if b can be present (optional) but should always be null&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'#number'&lt;/span&gt;, b: &lt;span class="pl-s"&gt;'##null'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;!&lt;/code&gt; (not) operator is especially useful for &lt;code&gt;contains&lt;/code&gt; and JSON arrays.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = [1, 2, 3]
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo !contains 4
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo !contains [5, 6]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-json-arrays" class="anchor" aria-hidden="true" href="#json-arrays"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON Arrays&lt;/h4&gt;
&lt;p&gt;This is a good time to deep-dive into JsonPath, which is perfect for slicing and dicing JSON into manageable chunks. It is worth taking a few minutes to go through the documentation and examples here: &lt;a href="https://github.com/jayway/JsonPath#path-examples"&gt;JsonPath Examples&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here are some example assertions performed while scraping a list of child elements out of the JSON below. Observe how you can &lt;code&gt;match&lt;/code&gt; the result of a JsonPath expression with your expected data.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;def cat = 
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  {&lt;/span&gt;
&lt;span class="pl-s"&gt;    name: 'Billie',&lt;/span&gt;
&lt;span class="pl-s"&gt;    kittens: [&lt;/span&gt;
&lt;span class="pl-s"&gt;      { id: 23, name: 'Bob' },&lt;/span&gt;
&lt;span class="pl-s"&gt;      { id: 42, name: 'Wild' }&lt;/span&gt;
&lt;span class="pl-s"&gt;    ]&lt;/span&gt;
&lt;span class="pl-s"&gt;  }&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;
&lt;span class="pl-c"&gt;# normal 'equality' match. note the wildcard '*' in the JsonPath (returns an array)&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match cat.kittens[*].id == [23, 42]

&lt;span class="pl-c"&gt;# when inspecting a json array, 'contains' just checks if the expected items exist&lt;/span&gt;
&lt;span class="pl-c"&gt;# and the size and order of the actual array does not matter&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match cat.kittens[*].id contains 23
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match cat.kittens[*].id contains [42]
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match cat.kittens[*].id contains [23, 42]
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match cat.kittens[*].id contains [42, 23]

&lt;span class="pl-c"&gt;# the .. operator is great because it matches nodes at any depth in the JSON "tree"&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match cat..name == [&lt;span class="pl-s"&gt;'Billie'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Bob'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Wild'&lt;/span&gt;]

&lt;span class="pl-c"&gt;# and yes, you can assert against nested objects within JSON arrays !&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match cat.kittens contains [{ id: 42, name: &lt;span class="pl-s"&gt;'Wild'&lt;/span&gt; }, { id: 23, name: &lt;span class="pl-s"&gt;'Bob'&lt;/span&gt; }]

&lt;span class="pl-c"&gt;# ... and even ignore fields at the same time !&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match cat.kittens contains { id: 42, name: &lt;span class="pl-s"&gt;'#string'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is worth mentioning that to do the equivalent of the last line in Java, you would typically have to traverse 2 Java Objects, one of which is within a list, and you would have to check for nulls as well.&lt;/p&gt;
&lt;p&gt;When you use Karate, all your data assertions can be done in pure JSON and without needing a thick forest of companion Java objects. And when you &lt;a href="#read"&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; your JSON objects from (re-usable) files, even complex response payload assertions can be accomplished in just a single line of Karate-script.&lt;/p&gt;
&lt;p&gt;Refer to this &lt;a href="https://twitter.com/KarateDSL/status/873035687817117696" rel="nofollow"&gt;case study&lt;/a&gt; for how dramatic the reduction of lines of code can be.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-match-contains-only" class="anchor" aria-hidden="true" href="#match-contains-only"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;match contains only&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;For those cases where you need to assert that &lt;strong&gt;all&lt;/strong&gt; array elements are present but in &lt;strong&gt;any order&lt;/strong&gt;
you can do this:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def data = { foo: [1, 2, 3] }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match data.foo contains 1
&lt;span class="pl-k"&gt;* &lt;/span&gt;match data.foo contains [2]
&lt;span class="pl-k"&gt;* &lt;/span&gt;match data.foo contains [3, 2]
&lt;span class="pl-k"&gt;* &lt;/span&gt;match data.foo contains only [3, 2, 1]
&lt;span class="pl-k"&gt;* &lt;/span&gt;match data.foo contains only [2, 3, 1]
&lt;span class="pl-c"&gt;# this will fail&lt;/span&gt;
&lt;span class="pl-c"&gt;# * match data.foo contains only [2, 3]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-match-contains-any" class="anchor" aria-hidden="true" href="#match-contains-any"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;match contains any&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;To assert that &lt;strong&gt;any&lt;/strong&gt; of the given array elements are present.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def data = { foo: [1, 2, 3] }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match data.foo contains any [9, 2, 8]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And this happens to work as expected for JSON object keys as well:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def data = { a: 1, b: &lt;span class="pl-s"&gt;'x'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match data contains any { b: &lt;span class="pl-s"&gt;'x'&lt;/span&gt;, c: true }&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-validate-every-element-in-a-json-array" class="anchor" aria-hidden="true" href="#validate-every-element-in-a-json-array"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Validate every element in a JSON array&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-match-each" class="anchor" aria-hidden="true" href="#match-each"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;match each&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;match&lt;/code&gt; keyword can be made to iterate over all elements in a JSON array using the &lt;code&gt;each&lt;/code&gt; modifier. Here's how it works:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def data = { foo: [{ bar: 1, baz: &lt;span class="pl-s"&gt;'a'&lt;/span&gt; }, { bar: 2, baz: &lt;span class="pl-s"&gt;'b'&lt;/span&gt; }, { bar: 3, baz: &lt;span class="pl-s"&gt;'c'&lt;/span&gt; }]}

&lt;span class="pl-k"&gt;* &lt;/span&gt;match each data.foo == { bar: &lt;span class="pl-s"&gt;'#number'&lt;/span&gt;, baz: &lt;span class="pl-s"&gt;'#string'&lt;/span&gt; }

&lt;span class="pl-c"&gt;# and you can use 'contains' the way you'd expect&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match each data.foo contains { bar: &lt;span class="pl-s"&gt;'#number'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match each data.foo contains { bar: &lt;span class="pl-s"&gt;'#? _ != 4'&lt;/span&gt; }

&lt;span class="pl-c"&gt;# some more examples of validation macros&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match each data.foo contains { baz: &lt;span class="pl-s"&gt;"#? _ != 'z'"&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;def isAbc = function(x) { return x == &lt;span class="pl-s"&gt;'a'&lt;/span&gt; || x == &lt;span class="pl-s"&gt;'b'&lt;/span&gt; || x == &lt;span class="pl-s"&gt;'c'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match each data.foo contains { baz: &lt;span class="pl-s"&gt;'#? isAbc(_)'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here is a contrived example that uses &lt;code&gt;match each&lt;/code&gt;, &lt;a href="#match-contains"&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt; and the &lt;a href="#self-validation-expressions"&gt;&lt;code&gt;#?&lt;/code&gt;&lt;/a&gt; 'predicate' marker to validate that the value of &lt;code&gt;totalPrice&lt;/code&gt; is always equal to the &lt;code&gt;roomPrice&lt;/code&gt; of the first item in the &lt;code&gt;roomInformation&lt;/code&gt; array.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;def json =
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  {&lt;/span&gt;
&lt;span class="pl-s"&gt;    "hotels": [&lt;/span&gt;
&lt;span class="pl-s"&gt;      { "roomInformation": [{ "roomPrice": 618.4 }], "totalPrice": 618.4  },&lt;/span&gt;
&lt;span class="pl-s"&gt;      { "roomInformation": [{ "roomPrice": 679.79}], "totalPrice": 679.79 }&lt;/span&gt;
&lt;span class="pl-s"&gt;    ]&lt;/span&gt;
&lt;span class="pl-s"&gt;  }&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match each json.hotels contains { totalPrice: &lt;span class="pl-s"&gt;'#? _ == _$.roomInformation[0].roomPrice'&lt;/span&gt; }
&lt;span class="pl-c"&gt;# when validation logic is an 'equality' check, an embedded expression works better&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match each json.hotels contains { totalPrice: &lt;span class="pl-s"&gt;'#(_$.roomInformation[0].roomPrice)'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-referring-to-self" class="anchor" aria-hidden="true" href="#referring-to-self"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Referring to self&lt;/h4&gt;
&lt;p&gt;While &lt;a href="#referring-to-the-json-root"&gt;&lt;code&gt;$&lt;/code&gt;&lt;/a&gt; always refers to the &lt;a href="#referring-to-the-json-root"&gt;JSON 'root'&lt;/a&gt;, note the use of &lt;code&gt;_$&lt;/code&gt; above to represent the 'current' node of a &lt;code&gt;match each&lt;/code&gt; iteration. Here is a recap of symbols that can be used in JSON &lt;a href="#embedded-expressions"&gt;embedded expressions&lt;/a&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Symbol&lt;/th&gt;
&lt;th&gt;Evaluates To&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;$&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The &lt;a href="#referring-to-the-json-root"&gt;'root'&lt;/a&gt; of the JSON document in scope&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;_&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The value of &lt;a href="#self-validation-expressions"&gt;'self'&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;_$&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The 'parent' of 'self' or 'current' item in the list, relevant when using &lt;a href="#match-each"&gt;&lt;code&gt;match each&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;There is a shortcut for &lt;code&gt;match each&lt;/code&gt; explained in the next section that can be quite useful, especially for 'in-line' schema-like validations.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-schema-validation" class="anchor" aria-hidden="true" href="#schema-validation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Schema Validation&lt;/h2&gt;
&lt;p&gt;Karate provides a far more simpler and more powerful way than &lt;a href="http://json-schema.org" rel="nofollow"&gt;JSON-schema&lt;/a&gt; to validate the structure of a given payload. You can even mix domain and conditional validations and perform all assertions in a single step.&lt;/p&gt;
&lt;p&gt;But first, a special short-cut for array validation needs to be introduced:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = [&lt;span class="pl-s"&gt;'bar'&lt;/span&gt;, &lt;span class="pl-s"&gt;'baz'&lt;/span&gt;]

&lt;span class="pl-c"&gt;# should be an array&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == &lt;span class="pl-s"&gt;'#[]'&lt;/span&gt;

&lt;span class="pl-c"&gt;# should be an array of size 2&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == &lt;span class="pl-s"&gt;'#[2]'&lt;/span&gt;

&lt;span class="pl-c"&gt;# should be an array of strings with size 2&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == &lt;span class="pl-s"&gt;'#[2] #string'&lt;/span&gt;

&lt;span class="pl-c"&gt;# each array element should have a 'length' property with value 3&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == &lt;span class="pl-s"&gt;'#[]? _.length == 3'&lt;/span&gt;

&lt;span class="pl-c"&gt;# should be an array of strings each of length 3&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == &lt;span class="pl-s"&gt;'#[] #string? _.length == 3'&lt;/span&gt;

&lt;span class="pl-c"&gt;# should be null or an array of strings&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == &lt;span class="pl-s"&gt;'##[] #string'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This 'in-line' short-cut for validating JSON arrays is similar to how &lt;a href="#match-each"&gt;&lt;code&gt;match each&lt;/code&gt;&lt;/a&gt; works. So now, complex payloads (that include arrays) can easily be validated in one step by combining &lt;a href="#ignore-or-validate"&gt;validation markers&lt;/a&gt; like so:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def oddSchema = { price: &lt;span class="pl-s"&gt;'#string'&lt;/span&gt;, status: &lt;span class="pl-s"&gt;'#? _ &amp;lt; 3'&lt;/span&gt;, ck: &lt;span class="pl-s"&gt;'##number'&lt;/span&gt;, name: &lt;span class="pl-s"&gt;'#regex[0-9X]'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;def isValidTime = read(&lt;span class="pl-s"&gt;'time-validator.js'&lt;/span&gt;)
&lt;span class="pl-k"&gt;When &lt;/span&gt;method get
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match response ==
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  { &lt;/span&gt;
&lt;span class="pl-s"&gt;    id: '#regex[0-9]+',&lt;/span&gt;
&lt;span class="pl-s"&gt;    count: '#number',&lt;/span&gt;
&lt;span class="pl-s"&gt;    odd: '#(oddSchema)',&lt;/span&gt;
&lt;span class="pl-s"&gt;    data: { &lt;/span&gt;
&lt;span class="pl-s"&gt;      countryId: '#number', &lt;/span&gt;
&lt;span class="pl-s"&gt;      countryName: '#string', &lt;/span&gt;
&lt;span class="pl-s"&gt;      leagueName: '##string', &lt;/span&gt;
&lt;span class="pl-s"&gt;      status: '#number? _ &amp;gt;= 0', &lt;/span&gt;
&lt;span class="pl-s"&gt;      sportName: '#string',&lt;/span&gt;
&lt;span class="pl-s"&gt;      time: '#? isValidTime(_)'&lt;/span&gt;
&lt;span class="pl-s"&gt;    },&lt;/span&gt;
&lt;span class="pl-s"&gt;    odds: '#[] oddSchema'  &lt;/span&gt;
&lt;span class="pl-s"&gt;  }&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Especially note the re-use of the &lt;code&gt;oddSchema&lt;/code&gt; both as an &lt;a href="#embedded-expressions"&gt;embedded-expression&lt;/a&gt; and as an array validation (on the last line).&lt;/p&gt;
&lt;p&gt;And you can perform conditional / &lt;a href="#referring-to-the-json-root"&gt;cross-field validations&lt;/a&gt; and even business-logic validations at the same time.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# optional (can be null) and if present should be an array of size greater than zero&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match $.odds == &lt;span class="pl-s"&gt;'##[_ &amp;gt; 0]'&lt;/span&gt;

&lt;span class="pl-c"&gt;# should be an array of size equal to $.count&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match $.odds == &lt;span class="pl-s"&gt;'#[$.count]'&lt;/span&gt;

&lt;span class="pl-c"&gt;# use a predicate function to validate each array element&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def isValidOdd = function(o){ return o.name.length == 1 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match $.odds == &lt;span class="pl-s"&gt;'#[]? isValidOdd(_)'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Refer to this for the complete example: &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/schema-like.feature"&gt;&lt;code&gt;schema-like.feature&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And there is another example in the &lt;a href="karate-demo"&gt;karate-demos&lt;/a&gt;: &lt;a href="karate-demo/src/test/java/demo/schema/schema.feature"&gt;&lt;code&gt;schema.feature&lt;/code&gt;&lt;/a&gt; where you can compare Karate's approach with an actual JSON-schema example. You can also find a nice visual comparison and explanation &lt;a href="https://twitter.com/KarateDSL/status/878984854012022784" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-contains-short-cuts" class="anchor" aria-hidden="true" href="#contains-short-cuts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;contains&lt;/code&gt; short-cuts&lt;/h3&gt;
&lt;p&gt;Especially when payloads are complex (or highly dynamic), it may be more practical to use &lt;a href="#match-contains"&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt; semantics. Karate has the following short-cut symbols designed to be mixed into &lt;a href="#embedded-expressions"&gt;&lt;code&gt;embedded expressions&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Symbol&lt;/th&gt;
&lt;th&gt;Means&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;^&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#match-contains"&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;^^&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#match-contains-only"&gt;&lt;code&gt;contains only&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;^*&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#match-contains-any"&gt;&lt;code&gt;contains any&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;!^&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#not-contains"&gt;&lt;code&gt;not contains&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Here'a table of the alternative 'in-line' forms compared with the 'standard' form. Note that &lt;em&gt;all&lt;/em&gt; the short-cut forms on the right-side of the table resolve to 'equality' (&lt;code&gt;==&lt;/code&gt;) matches, which enables them to be 'in-lined' into a &lt;em&gt;full&lt;/em&gt; (single-step) payload &lt;code&gt;match&lt;/code&gt;, using &lt;a href="#embedded-expressions"&gt;embedded expressions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/ptrthomas/2a1e30bcb4d782279019b3d5c10b3ed1"&gt;&lt;img src="karate-demo/src/test/resources/karate-json-assertions.jpg" height="690px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A very useful capability is to be able to check that an array &lt;code&gt;contains&lt;/code&gt; an object that &lt;code&gt;contains&lt;/code&gt; the provided &lt;em&gt;sub-set&lt;/em&gt; of keys instead of having to specify the &lt;em&gt;complete&lt;/em&gt; JSON - which can get really cumbersome for large objects. This turns out to be very useful in practice, and this particular &lt;code&gt;match&lt;/code&gt; &lt;em&gt;jsonArray&lt;/em&gt; &lt;code&gt;contains '#(^&lt;/code&gt;&lt;em&gt;partialObject&lt;/em&gt;&lt;code&gt;)'&lt;/code&gt; form has no 'in-line' equivalent (see the third-from-last row above).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The last row in the table is a little different from the rest, and this short-cut form is the recommended way to validate the length of a JSON array. As a rule of thumb, prefer &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; over &lt;a href="#assert"&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt;, because &lt;code&gt;match&lt;/code&gt; failure messages are more detailed and descriptive.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In real-life tests, these are very useful when the order of items in arrays returned from the server are not guaranteed. You can easily assert that all expected elements are present, &lt;em&gt;even&lt;/em&gt; in nested parts of your JSON - while doing a &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; on the &lt;em&gt;full&lt;/em&gt; payload.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def cat = 
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  {&lt;/span&gt;
&lt;span class="pl-s"&gt;    name: 'Billie',&lt;/span&gt;
&lt;span class="pl-s"&gt;    kittens: [&lt;/span&gt;
&lt;span class="pl-s"&gt;      { id: 23, name: 'Bob' },&lt;/span&gt;
&lt;span class="pl-s"&gt;      { id: 42, name: 'Wild' }&lt;/span&gt;
&lt;span class="pl-s"&gt;    ]&lt;/span&gt;
&lt;span class="pl-s"&gt;  }&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def expected = [{ id: 42, name: &lt;span class="pl-s"&gt;'Wild'&lt;/span&gt; }, { id: 23, name: &lt;span class="pl-s"&gt;'Bob'&lt;/span&gt; }]
&lt;span class="pl-k"&gt;* &lt;/span&gt;match cat == { name: &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt;, kittens: &lt;span class="pl-s"&gt;'#(^^expected)'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There's a lot going on in the last line above ! It validates the entire payload in one step and checks if the &lt;code&gt;kittens&lt;/code&gt; array &lt;a href="#contains-short-cuts"&gt;&lt;em&gt;&lt;strong&gt;contains all&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;  the &lt;code&gt;expected&lt;/code&gt; items but in &lt;em&gt;&lt;strong&gt;any order&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-get" class="anchor" aria-hidden="true" href="#get"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;get&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;By now, it should be clear that JsonPath can be very useful for extracting JSON 'trees' out of a given object. The &lt;code&gt;get&lt;/code&gt; keyword allows you to save the results of a JsonPath expression for later use - which is especially useful for dynamic &lt;a href="#data-driven-features"&gt;data-driven testing&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def cat = 
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  {&lt;/span&gt;
&lt;span class="pl-s"&gt;    name: 'Billie',&lt;/span&gt;
&lt;span class="pl-s"&gt;    kittens: [&lt;/span&gt;
&lt;span class="pl-s"&gt;      { id: 23, name: 'Bob' },&lt;/span&gt;
&lt;span class="pl-s"&gt;      { id: 42, name: 'Wild' }&lt;/span&gt;
&lt;span class="pl-s"&gt;    ]&lt;/span&gt;
&lt;span class="pl-s"&gt;  }&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def kitnums = get cat.kittens[*].id
&lt;span class="pl-k"&gt;* &lt;/span&gt;match kitnums == [23, 42]
&lt;span class="pl-k"&gt;* &lt;/span&gt;def kitnames = get cat $.kittens[*].name
&lt;span class="pl-k"&gt;* &lt;/span&gt;match kitnames == [&lt;span class="pl-s"&gt;'Bob'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Wild'&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-get-short-cut" class="anchor" aria-hidden="true" href="#get-short-cut"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;get&lt;/code&gt; short-cut&lt;/h3&gt;
&lt;p&gt;The 'short cut' &lt;code&gt;$variableName&lt;/code&gt; form is also supported. Refer to &lt;a href="#jsonpath-short-cuts"&gt;JsonPath short-cuts&lt;/a&gt; for a detailed explanation. So the above could be re-written as follows:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def kitnums = $cat.kittens[*].id
&lt;span class="pl-k"&gt;* &lt;/span&gt;match kitnums == [23, 42]
&lt;span class="pl-k"&gt;* &lt;/span&gt;def kitnames = $cat.kittens[*].name
&lt;span class="pl-k"&gt;* &lt;/span&gt;match kitnames == [&lt;span class="pl-s"&gt;'Bob'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Wild'&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is worth repeating that the above can be condensed into 2 lines. Note that since &lt;a href="#match-and-variables"&gt;only JsonPath is expected&lt;/a&gt; on the left-hand-side of the &lt;code&gt;==&lt;/code&gt; sign of a &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; statement, you don't need to prefix the variable reference with &lt;code&gt;$&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;match cat.kittens[*].id == [23, 42]
&lt;span class="pl-k"&gt;* &lt;/span&gt;match cat.kittens[*].name == [&lt;span class="pl-s"&gt;'Bob'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Wild'&lt;/span&gt;]

&lt;span class="pl-c"&gt;# if you prefer using 'pure' JsonPath, you can do this&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match cat $.kittens[*].id == [23, 42]
&lt;span class="pl-k"&gt;* &lt;/span&gt;match cat $.kittens[*].name == [&lt;span class="pl-s"&gt;'Bob'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Wild'&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-get-plus-index" class="anchor" aria-hidden="true" href="#get-plus-index"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;get&lt;/code&gt; plus index&lt;/h3&gt;
&lt;p&gt;A convenience that the &lt;code&gt;get&lt;/code&gt; syntax supports (but not the &lt;code&gt;$&lt;/code&gt; short-cut form) is to return a single element if the right-hand-side evaluates to a list-like result (e.g. a JSON array). This is useful because the moment you use a wildcard &lt;code&gt;[*]&lt;/code&gt; or search filter in JsonPath (see the next section), you get an &lt;em&gt;array&lt;/em&gt; back - even though typically you would only be interested in the &lt;em&gt;first&lt;/em&gt; item.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def actual = 23

&lt;span class="pl-c"&gt;# so instead of this&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def kitnums = get cat.kittens[*].id
&lt;span class="pl-k"&gt;* &lt;/span&gt;match actual == kitnums[0]

&lt;span class="pl-c"&gt;# you can do this in one line&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match actual == get[0] cat.kittens[*].id&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-jsonpath-filters" class="anchor" aria-hidden="true" href="#jsonpath-filters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JsonPath filters&lt;/h3&gt;
&lt;p&gt;JsonPath &lt;a href="https://github.com/json-path/JsonPath#filter-operators"&gt;filter expressions&lt;/a&gt; are very useful for extracting elements that meet some filter criteria out of arrays.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def cat = 
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  {&lt;/span&gt;
&lt;span class="pl-s"&gt;    name: 'Billie',&lt;/span&gt;
&lt;span class="pl-s"&gt;    kittens: [&lt;/span&gt;
&lt;span class="pl-s"&gt;      { id: 23, name: 'Bob' },&lt;/span&gt;
&lt;span class="pl-s"&gt;      { id: 42, name: 'Wild' }&lt;/span&gt;
&lt;span class="pl-s"&gt;    ]&lt;/span&gt;
&lt;span class="pl-s"&gt;  }&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;
&lt;span class="pl-c"&gt;# find single kitten where id == 23&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def bob = get[0] cat.kittens[?(&lt;span class="pl-k"&gt;@.id==23)]&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match bob.name == &lt;span class="pl-s"&gt;'Bob'&lt;/span&gt;

&lt;span class="pl-c"&gt;# using the karate object if the expression is dynamic&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def temp = karate.jsonPath(cat, &lt;span class="pl-s"&gt;"$.kittens[?(@.name=='"&lt;/span&gt; + bob.name + &lt;span class="pl-s"&gt;"')]"&lt;/span&gt;)
&lt;span class="pl-k"&gt;* &lt;/span&gt;match temp[0] == bob

&lt;span class="pl-c"&gt;# or alternatively&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def temp = karate.jsonPath(cat, &lt;span class="pl-s"&gt;"$.kittens[?(@.name=='"&lt;/span&gt; + bob.name + &lt;span class="pl-s"&gt;"')]"&lt;/span&gt;)[0]
&lt;span class="pl-k"&gt;* &lt;/span&gt;match temp == bob&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You usually won't need this, but the second-last line above shows how the &lt;code&gt;karate&lt;/code&gt; object can be used to &lt;a href="#karate-jsonpath"&gt;evaluate JsonPath&lt;/a&gt; if the filter expression depends on a variable. If you find yourself struggling to write &lt;a href="https://stackoverflow.com/a/52741196/143475" rel="nofollow"&gt;dynamic JsonPath filters&lt;/a&gt;, look at &lt;a href="#karate-filter"&gt;&lt;code&gt;karate.filter()&lt;/code&gt;&lt;/a&gt; as an alternative, described just below.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-json-transforms" class="anchor" aria-hidden="true" href="#json-transforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON Transforms&lt;/h2&gt;
&lt;p&gt;Karate supports the following &lt;a href="https://en.wikipedia.org/wiki/Functional_programming" rel="nofollow"&gt;functional-style&lt;/a&gt; operations via the JS API -  &lt;a href="#karate-map"&gt;&lt;code&gt;karate.map()&lt;/code&gt;&lt;/a&gt;, &lt;a href="#karate-filter"&gt;&lt;code&gt;karate.filter()&lt;/code&gt;&lt;/a&gt; and &lt;a href="#karate-foreach"&gt;&lt;code&gt;karate.forEach()&lt;/code&gt;&lt;/a&gt;. They can be very useful in some situations. A &lt;a href="https://stackoverflow.com/a/53120851/143475" rel="nofollow"&gt;good example&lt;/a&gt; is when you have the &lt;em&gt;expected&lt;/em&gt; data available as ready-made JSON but it is in a different "shape" from the &lt;em&gt;actual&lt;/em&gt; data or HTTP &lt;code&gt;response&lt;/code&gt;. There is also a &lt;a href="#karate-mapwithkey"&gt;&lt;code&gt;karate.mapWithKey()&lt;/code&gt;&lt;/a&gt; for a common need - which is to convert an array of primitives into an array of objects, which is the form that &lt;a href="#data-driven-features"&gt;data driven features&lt;/a&gt; expect.&lt;/p&gt;
&lt;p&gt;A few more useful "transforms" are to select a sub-set of key-value pairs using &lt;a href="#karate-filterkeys"&gt;&lt;code&gt;karate.filterKeys()&lt;/code&gt;&lt;/a&gt;, merging 2 or more JSON-s using &lt;a href="#karate-merge"&gt;&lt;code&gt;karate.merge()&lt;/code&gt;&lt;/a&gt; and combining 2 or more arrays (or objects) into a single array using &lt;a href="#karate-append"&gt;&lt;code&gt;karate.append()&lt;/code&gt;&lt;/a&gt;. And &lt;a href="#karate-appendto"&gt;&lt;code&gt;karate.appendTo()&lt;/code&gt;&lt;/a&gt; is for updating an existing variable (the equivalent of &lt;code&gt;array.push()&lt;/code&gt; in JavaScript), which is especially useful in the body of a &lt;code&gt;karate.forEach()&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that a single JS function is sufficient to transform a given JSON object into a completely new one, and you can use complex conditional logic if needed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; karate map operation&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def fun = function(x){ return x * x }
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def list = [1, 2, 3]
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def res = karate.map(list, fun)
    &lt;span class="pl-k"&gt;* &lt;/span&gt;match res == [1, 4, 9]

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; convert an array into a different shape&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def before = [{ foo: 1 }, { foo: 2 }, { foo: 3 }]
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def fun = function(x){ return { bar: x.foo } }
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def after = karate.map(before, fun)
    &lt;span class="pl-k"&gt;* &lt;/span&gt;match after == [{ bar: 1 }, { bar: 2 }, { bar: 3 }]

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; convert array of primitives into array of objects&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def list = [ &lt;span class="pl-s"&gt;'Bob'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Wild'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Nyan'&lt;/span&gt; ]
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def data = karate.mapWithKey(list, &lt;span class="pl-s"&gt;'name'&lt;/span&gt;)
    &lt;span class="pl-k"&gt;* &lt;/span&gt;match data == [{ name: &lt;span class="pl-s"&gt;'Bob'&lt;/span&gt; }, { name: &lt;span class="pl-s"&gt;'Wild'&lt;/span&gt; }, { name: &lt;span class="pl-s"&gt;'Nyan'&lt;/span&gt; }]

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; karate filter operation&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def fun = function(x){ return x % 2 == 0 }
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def list = [1, 2, 3, 4]
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def res = karate.filter(list, fun)
    &lt;span class="pl-k"&gt;* &lt;/span&gt;match res == [2, 4]

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; forEach works even on object key-values, not just arrays&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def keys = []
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def vals = []
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def idxs = []
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def fun = 
    &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;    function(x, y, i) { &lt;/span&gt;
&lt;span class="pl-s"&gt;      karate.appendTo(keys, x); &lt;/span&gt;
&lt;span class="pl-s"&gt;      karate.appendTo(vals, y); &lt;/span&gt;
&lt;span class="pl-s"&gt;      karate.appendTo(idxs, i); &lt;/span&gt;
&lt;span class="pl-s"&gt;    }&lt;/span&gt;
&lt;span class="pl-s"&gt;    """&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def map = { a: 2, b: 4, c: 6 }
    &lt;span class="pl-k"&gt;* &lt;/span&gt;karate.forEach(map, fun)
    &lt;span class="pl-k"&gt;* &lt;/span&gt;match keys == [&lt;span class="pl-s"&gt;'a'&lt;/span&gt;, &lt;span class="pl-s"&gt;'b'&lt;/span&gt;, &lt;span class="pl-s"&gt;'c'&lt;/span&gt;]
    &lt;span class="pl-k"&gt;* &lt;/span&gt;match vals == [2, 4, 6]
    &lt;span class="pl-k"&gt;* &lt;/span&gt;match idxs == [0, 1, 2]

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; filterKeys&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def schema = { a: &lt;span class="pl-s"&gt;'#string'&lt;/span&gt;, b: &lt;span class="pl-s"&gt;'#number'&lt;/span&gt;, c: &lt;span class="pl-s"&gt;'#boolean'&lt;/span&gt; }
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def response = { a: &lt;span class="pl-s"&gt;'x'&lt;/span&gt;, c: true }
&lt;span class="pl-c"&gt;    # very useful for validating a response against a schema "super-set"&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;match response == karate.filterKeys(schema, response)
    &lt;span class="pl-k"&gt;* &lt;/span&gt;match karate.filterKeys(response, &lt;span class="pl-s"&gt;'b'&lt;/span&gt;, &lt;span class="pl-s"&gt;'c'&lt;/span&gt;) == { c: true }
    &lt;span class="pl-k"&gt;* &lt;/span&gt;match karate.filterKeys(response, [&lt;span class="pl-s"&gt;'a'&lt;/span&gt;, &lt;span class="pl-s"&gt;'b'&lt;/span&gt;]) == { a: &lt;span class="pl-s"&gt;'x'&lt;/span&gt; }

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; merge&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = { a: 1 }
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def bar = karate.merge(foo, { b: 2 })
    &lt;span class="pl-k"&gt;* &lt;/span&gt;match bar == { a: 1, b: 2 }

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; append&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = [{ a: 1 }]
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def bar = karate.append(foo, { b: 2 })
    &lt;span class="pl-k"&gt;* &lt;/span&gt;match bar == [{ a: 1 }, { b: 2 }]&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-loops" class="anchor" aria-hidden="true" href="#loops"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Loops&lt;/h3&gt;
&lt;p&gt;Given the examples above, it has to be said that a best practice with Karate is to avoid JavaScript &lt;code&gt;for&lt;/code&gt; loops as far as possible. A common requirement is to build an array with &lt;code&gt;n&lt;/code&gt; elements or do something &lt;code&gt;n&lt;/code&gt; times where &lt;code&gt;n&lt;/code&gt; is an integer (that could even be a variable reference). This is easily achieved with the &lt;a href="#karate-repeat"&gt;&lt;code&gt;karate.repeat()&lt;/code&gt;&lt;/a&gt; API:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def fun = function(i){ return i * 2 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = karate.repeat(5, fun)
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == [0, 2, 4, 6, 8]

&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = []
&lt;span class="pl-k"&gt;* &lt;/span&gt;def fun = function(i){ karate.appendTo(foo, i) }
&lt;span class="pl-k"&gt;* &lt;/span&gt;karate.repeat(5, fun)
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == [0, 1, 2, 3, 4]

&lt;span class="pl-c"&gt;# generate test data easily&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def fun = function(i){ return { name: &lt;span class="pl-s"&gt;'User '&lt;/span&gt; + (i + 1) } }
&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = karate.repeat(3, fun)
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == [{ name: &lt;span class="pl-s"&gt;'User 1'&lt;/span&gt; }, { name: &lt;span class="pl-s"&gt;'User 2'&lt;/span&gt; }, { name: &lt;span class="pl-s"&gt;'User 3'&lt;/span&gt; }]&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-xpath-functions" class="anchor" aria-hidden="true" href="#xpath-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;XPath Functions&lt;/h2&gt;
&lt;p&gt;When handling XML, you sometimes need to call &lt;a href="https://docs.oracle.com/javase/tutorial/jaxp/xslt/xpath.html" rel="nofollow"&gt;XPath functions&lt;/a&gt;, for example to get the count of a node-set. Any valid XPath expression is allowed on the left-hand-side of a &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; statement.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def myXml =
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;records&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    &amp;lt;record index="1"&amp;gt;a&amp;lt;/record&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    &amp;lt;record index="2"&amp;gt;b&amp;lt;/record&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    &amp;lt;record index="3" foo="bar"&amp;gt;c&amp;lt;/record&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;/records&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo count(/records//record) == 3
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo //record[&lt;span class="pl-k"&gt;@index=2]&lt;/span&gt; == &lt;span class="pl-s"&gt;'b'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo //record[&lt;span class="pl-k"&gt;@foo='bar']&lt;/span&gt; == &lt;span class="pl-s"&gt;'c'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-advanced-xpath" class="anchor" aria-hidden="true" href="#advanced-xpath"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced XPath&lt;/h3&gt;
&lt;p&gt;Some XPath expressions return a list of nodes (instead of a single node). But since you can express a list of data-elements as a JSON array - even these XPath expressions can be used in &lt;code&gt;match&lt;/code&gt; statements.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def teachers = 
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;teachers&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    &amp;lt;teacher department="science"&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;subject&amp;gt;math&amp;lt;/subject&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;subject&amp;gt;physics&amp;lt;/subject&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    &amp;lt;/teacher&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    &amp;lt;teacher department="arts"&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;subject&amp;gt;political education&amp;lt;/subject&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;subject&amp;gt;english&amp;lt;/subject&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    &amp;lt;/teacher&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;/teachers&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match teachers //teacher[&lt;span class="pl-k"&gt;@department='science']/subject&lt;/span&gt; == [&lt;span class="pl-s"&gt;'math'&lt;/span&gt;, &lt;span class="pl-s"&gt;'physics'&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If your XPath is dynamic and has to be formed 'on the fly' perhaps by using some variable derived from previous steps, you can use the &lt;a href="#karate-xmlpath"&gt;&lt;code&gt;karate.xmlPath()&lt;/code&gt;&lt;/a&gt; helper:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def xml = &lt;span class="pl-smi"&gt;&amp;lt;query&amp;gt;&amp;lt;name&amp;gt;&amp;lt;foo&amp;gt;&lt;/span&gt;bar&lt;span class="pl-smi"&gt;&amp;lt;/foo&amp;gt;&amp;lt;/name&amp;gt;&amp;lt;/query&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def elementName = &lt;span class="pl-s"&gt;'name'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def name = karate.xmlPath(xml, &lt;span class="pl-s"&gt;'/query/'&lt;/span&gt; + elementName + &lt;span class="pl-s"&gt;'/foo'&lt;/span&gt;)
&lt;span class="pl-k"&gt;* &lt;/span&gt;match name == &lt;span class="pl-s"&gt;'bar'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def queryName = karate.xmlPath(xml, &lt;span class="pl-s"&gt;'/query/'&lt;/span&gt; + elementName)
&lt;span class="pl-k"&gt;* &lt;/span&gt;match queryName == &lt;span class="pl-smi"&gt;&amp;lt;name&amp;gt;&amp;lt;foo&amp;gt;&lt;/span&gt;bar&lt;span class="pl-smi"&gt;&amp;lt;/foo&amp;gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can refer to this file (which is part of the Karate test-suite) for more XML examples: &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/xml-and-xpath.feature"&gt;&lt;code&gt;xml-and-xpath.feature&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-special-variables" class="anchor" aria-hidden="true" href="#special-variables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Special Variables&lt;/h1&gt;
&lt;p&gt;These are 'built-in' variables, there are only a few and all of them give you access to the HTTP response.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-response" class="anchor" aria-hidden="true" href="#response"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;response&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;After every HTTP call this variable is set with the response body, and is available until the next HTTP request over-writes it. You can easily assign the whole &lt;code&gt;response&lt;/code&gt; (or just parts of it using Json-Path or XPath) to a variable, and use it in later steps.&lt;/p&gt;
&lt;p&gt;The response is automatically available as a JSON, XML or String object depending on what the response contents are.&lt;/p&gt;
&lt;p&gt;As a short-cut, when running JsonPath expressions - &lt;code&gt;$&lt;/code&gt; represents the &lt;code&gt;response&lt;/code&gt;.  This has the advantage that you can use pure &lt;a href="https://github.com/jayway/JsonPath#path-examples"&gt;JsonPath&lt;/a&gt; and be more concise.  For example:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# the three lines below are equivalent&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match response $ == { name: &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt; }
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match response == { name: &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt; }
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match $ == { name: &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt; }

&lt;span class="pl-c"&gt;# the three lines below are equivalent&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match response.name == &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match response $.name == &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match $.name == &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And similarly for XML and XPath, '/' represents the &lt;code&gt;response&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# the four lines below are equivalent&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match response / == &lt;span class="pl-smi"&gt;&amp;lt;cat&amp;gt;&amp;lt;name&amp;gt;&lt;/span&gt;Billie&lt;span class="pl-smi"&gt;&amp;lt;/name&amp;gt;&amp;lt;/cat&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match response/ == &lt;span class="pl-smi"&gt;&amp;lt;cat&amp;gt;&amp;lt;name&amp;gt;&lt;/span&gt;Billie&lt;span class="pl-smi"&gt;&amp;lt;/name&amp;gt;&amp;lt;/cat&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match response == &lt;span class="pl-smi"&gt;&amp;lt;cat&amp;gt;&amp;lt;name&amp;gt;&lt;/span&gt;Billie&lt;span class="pl-smi"&gt;&amp;lt;/name&amp;gt;&amp;lt;/cat&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match / == &lt;span class="pl-smi"&gt;&amp;lt;cat&amp;gt;&amp;lt;name&amp;gt;&lt;/span&gt;Billie&lt;span class="pl-smi"&gt;&amp;lt;/name&amp;gt;&amp;lt;/cat&amp;gt;&lt;/span&gt; 

&lt;span class="pl-c"&gt;# the three lines below are equivalent&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match response /cat/name == &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match response/cat/name == &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match /cat/name == &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-jsonpath-short-cuts" class="anchor" aria-hidden="true" href="#jsonpath-short-cuts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JsonPath short-cuts&lt;/h4&gt;
&lt;p&gt;The &lt;a href="#get-short-cut"&gt;&lt;code&gt;$varName&lt;/code&gt; form&lt;/a&gt; is used on the right-hand-side of &lt;a href="#karate-expressions"&gt;Karate expressions&lt;/a&gt; and is &lt;em&gt;slightly&lt;/em&gt; different from pure &lt;a href="https://github.com/json-path/JsonPath#path-examples"&gt;JsonPath expressions&lt;/a&gt; which always begin with &lt;code&gt;$.&lt;/code&gt; or &lt;code&gt;$[&lt;/code&gt;. Here is a summary of what the different 'shapes' mean in Karate:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Shape&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;$.bar&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Pure JsonPath equivalent of &lt;code&gt;$response.bar&lt;/code&gt; where &lt;code&gt;response&lt;/code&gt; is a JSON object&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;$[0]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Pure JsonPath equivalent of &lt;code&gt;$response[0]&lt;/code&gt; where &lt;code&gt;response&lt;/code&gt; is a JSON array&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;$foo.bar&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Evaluates the JsonPath &lt;code&gt;$.bar&lt;/code&gt; on the variable &lt;code&gt;foo&lt;/code&gt; which is a JSON object or map-like&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;$foo[0]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Evaluates the JsonPath &lt;code&gt;$[0]&lt;/code&gt; on the variable &lt;code&gt;foo&lt;/code&gt; which is a JSON array or list-like&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;There is no need to prefix variable names with &lt;code&gt;$&lt;/code&gt; on the left-hand-side of &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; statements because it is implied. You &lt;em&gt;can&lt;/em&gt; if you want to, but since &lt;a href="#match-and-variables"&gt;&lt;em&gt;only&lt;/em&gt; JsonPath (on variables)&lt;/a&gt; is allowed here, Karate ignores the &lt;code&gt;$&lt;/code&gt; and looks only at the variable name. None of the examples in the documentation use the &lt;code&gt;$varName&lt;/code&gt; form on the LHS, and this is the recommended best-practice.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-responsebytes" class="anchor" aria-hidden="true" href="#responsebytes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;responseBytes&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;This will always hold the contents of the response as a byte-array. This is rarely used, unless you are expecting binary content returned by the server. The &lt;code&gt;match&lt;/code&gt; keyword will &lt;a href="#match-text-or-binary"&gt;work as you expect&lt;/a&gt;. Here is an example: &lt;a href="karate-netty/src/test/java/com/intuit/karate/mock/binary.feature"&gt;&lt;code&gt;binary.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-responsecookies" class="anchor" aria-hidden="true" href="#responsecookies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;responseCookies&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;responseCookies&lt;/code&gt; variable is set upon any HTTP response and is a map-like (or JSON-like) object. It can be easily inspected or used in expressions.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;assert responseCookies[&lt;span class="pl-s"&gt;'my.key'&lt;/span&gt;].value == &lt;span class="pl-s"&gt;'someValue'&lt;/span&gt;

&lt;span class="pl-c"&gt;# karate's unified data handling means that even 'match' works&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match responseCookies contains { time: &lt;span class="pl-s"&gt;'#notnull'&lt;/span&gt; }

&lt;span class="pl-c"&gt;# ... which means that checking if a cookie does NOT exist is a piece of cake&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match responseCookies !contains { blah: &lt;span class="pl-s"&gt;'#notnull'&lt;/span&gt; }

&lt;span class="pl-c"&gt;# save a response cookie for later use&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def time = responseCookies.time.value&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As a convenience, cookies from the previous response are collected and passed as-is as part of the next HTTP request. This is what is normally expected and simulates a web-browser - which makes it easy to script things like HTML-form based authentication into test-flows. Refer to the documentation for &lt;a href="#cookie"&gt;&lt;code&gt;cookie&lt;/code&gt;&lt;/a&gt; for details and how you can disable this if need be.&lt;/p&gt;
&lt;p&gt;Each item within &lt;code&gt;responseCookies&lt;/code&gt; is itself a 'map-like' object. Typically you would examine the &lt;code&gt;value&lt;/code&gt; property as in the example above, but &lt;code&gt;domain&lt;/code&gt; and &lt;code&gt;path&lt;/code&gt; are also available.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-responseheaders" class="anchor" aria-hidden="true" href="#responseheaders"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;responseHeaders&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;See also &lt;a href="#match-header"&gt;&lt;code&gt;match header&lt;/code&gt;&lt;/a&gt; which is what you would normally need.&lt;/p&gt;
&lt;p&gt;But if you need to use values in the response headers - they will be in a variable named &lt;code&gt;responseHeaders&lt;/code&gt;. Note that it is a 'map of lists' so you will need to do things like this:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def contentType = responseHeaders[&lt;span class="pl-s"&gt;'Content-Type'&lt;/span&gt;][0]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And just as in the &lt;a href="#responsecookies"&gt;&lt;code&gt;responseCookies&lt;/code&gt;&lt;/a&gt; example above, you can use &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; to run complex validations on the &lt;code&gt;responseHeaders&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-responsestatus" class="anchor" aria-hidden="true" href="#responsestatus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;responseStatus&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;You would normally only need to use the &lt;a href="#status"&gt;&lt;code&gt;status&lt;/code&gt;&lt;/a&gt; keyword.  But if you really need to use the HTTP response code in an expression or save it for later, you can get it as an integer:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def uploadStatusCode = responseStatus

&lt;span class="pl-c"&gt;# check if the response status is either of two values&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;assert responseStatus == 200 || responseStatus == 204&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-responsetime" class="anchor" aria-hidden="true" href="#responsetime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;responseTime&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The response time (in milliseconds) for the current &lt;a href="#response"&gt;&lt;code&gt;response&lt;/code&gt;&lt;/a&gt; would be available in a variable called &lt;code&gt;responseTime&lt;/code&gt;. You can use this to assert that it was returned within the expected time like so:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;When &lt;/span&gt;method post
&lt;span class="pl-k"&gt;Then &lt;/span&gt;status 201
&lt;span class="pl-k"&gt;And &lt;/span&gt;assert responseTime &lt;span class="pl-smi"&gt;&amp;lt; 1000&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-requesttimestamp" class="anchor" aria-hidden="true" href="#requesttimestamp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;requestTimeStamp&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Very rarely used - but you can get the Java system-time (for the current &lt;a href="#response"&gt;&lt;code&gt;response&lt;/code&gt;&lt;/a&gt;) at the point when the HTTP request was initiated (the value of &lt;code&gt;System.currentTimeMillis()&lt;/code&gt;) which can be used for detailed logging or custom framework / stats calculations.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-http-header-manipulation" class="anchor" aria-hidden="true" href="#http-header-manipulation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTTP Header Manipulation&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-configure-headers" class="anchor" aria-hidden="true" href="#configure-headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;configure headers&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Custom header manipulation for every HTTP request is something that Karate makes very easy and pluggable. For every HTTP request made from Karate, the internal flow is as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;did we &lt;a href="#configure"&gt;&lt;code&gt;configure&lt;/code&gt;&lt;/a&gt; the value of &lt;code&gt;headers&lt;/code&gt; ?&lt;/li&gt;
&lt;li&gt;if so, is the configured value a JavaScript function ?
&lt;ul&gt;
&lt;li&gt;if so, a &lt;a href="#call"&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; is made to that function.&lt;/li&gt;
&lt;li&gt;did the function invocation return a map-like (or JSON) object ?
&lt;ul&gt;
&lt;li&gt;all the key-value pairs are added to the HTTP headers.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;or is the configured value a JSON object ?
&lt;ul&gt;
&lt;li&gt;all the key-value pairs are added to the HTTP headers.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This makes setting up of complex authentication schemes for your test-flows really easy. It typically ends up being a one-liner that appears in the &lt;code&gt;Background&lt;/code&gt; section at the start of your test-scripts.  You can re-use the function you create across your whole project.&lt;/p&gt;
&lt;p&gt;Here is an example JavaScript function that uses some variables in the context (which have been possibly set as the result of a sign-in) to build the &lt;code&gt;Authorization&lt;/code&gt; header. Note how even &lt;a href="#calling-java"&gt;calls to Java code&lt;/a&gt; can be made if needed.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In the example below, note the use of the &lt;a href="#karate-get"&gt;&lt;code&gt;karate.get()&lt;/code&gt;&lt;/a&gt; helper for getting the value of a dynamic variable. This is preferred because it takes care of situations such as if the value is &lt;code&gt;undefined&lt;/code&gt; in JavaScript. In rare cases you may need to &lt;em&gt;set&lt;/em&gt; a variable from this routine, and a good example is to make the generated UUID "visible" to the currently executing script or feature. You can easily do this via &lt;a href="#karate-set"&gt;&lt;code&gt;karate.set('someVarName', value)&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;() {
  &lt;span class="pl-k"&gt;var&lt;/span&gt; uuid &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;java&lt;/span&gt;.&lt;span class="pl-smi"&gt;util&lt;/span&gt;.&lt;span class="pl-c1"&gt;UUID&lt;/span&gt;.&lt;span class="pl-en"&gt;randomUUID&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; convert to string&lt;/span&gt;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; out &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; so now the txid_header would be a unique uuid for each request&lt;/span&gt;
    txid_header&lt;span class="pl-k"&gt;:&lt;/span&gt; uuid,
    ip_header&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;123.45.67.89&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; hard coded here, but also can be as dynamic as you want   &lt;/span&gt;
  };
  &lt;span class="pl-k"&gt;var&lt;/span&gt; authString &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; authToken &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;karate&lt;/span&gt;.&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;authToken&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; use the 'karate' helper to do a 'safe' get of a 'dynamic' variable&lt;/span&gt;
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (authToken) { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; and if 'authToken' is not null ... &lt;/span&gt;
    authString &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;,auth_type=MyAuthScheme&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;,auth_key=&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;authToken&lt;/span&gt;.&lt;span class="pl-smi"&gt;key&lt;/span&gt;
        &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;,auth_user=&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;authToken&lt;/span&gt;.&lt;span class="pl-smi"&gt;userId&lt;/span&gt;
        &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;,auth_project=&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;authToken&lt;/span&gt;.&lt;span class="pl-smi"&gt;projectId&lt;/span&gt;;
  }
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the 'appId' variable here is expected to have been set via karate-config.js (bootstrap init) and will never change&lt;/span&gt;
  out[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Authorization&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;My_Auth app_id=&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; appId &lt;span class="pl-k"&gt;+&lt;/span&gt; authString;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; out;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Assuming the above code is in a file called &lt;code&gt;my-headers.js&lt;/code&gt;, the next section on &lt;a href="#calling-other-feature-files"&gt;calling other feature files&lt;/a&gt; shows how it looks like in action at the beginning of a test script.&lt;/p&gt;
&lt;p&gt;Notice how once the &lt;code&gt;authToken&lt;/code&gt; variable is initialized, it is used by the above function to generate headers for every HTTP call made as part of the test flow.&lt;/p&gt;
&lt;p&gt;If a few steps in your flow need to temporarily change (or completely bypass) the currently-set header-manipulation scheme, just update &lt;code&gt;configure headers&lt;/code&gt; to a new value (or set it to &lt;code&gt;null&lt;/code&gt;) in the middle of a script. Then use the &lt;a href="#header"&gt;&lt;code&gt;header&lt;/code&gt;&lt;/a&gt; keyword to do a custom 'over-ride' if needed.&lt;/p&gt;
&lt;p&gt;The &lt;a href="karate-demo"&gt;karate-demo&lt;/a&gt; has an example showing various ways to &lt;code&gt;configure&lt;/code&gt; or set headers: &lt;a href="karate-demo/src/test/java/demo/headers/headers.feature"&gt;&lt;code&gt;headers.feature&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-the-karate-object" class="anchor" aria-hidden="true" href="#the-karate-object"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;karate&lt;/code&gt; object&lt;/h1&gt;
&lt;p&gt;A JavaScript function or &lt;a href="#karate-expressions"&gt;Karate expression&lt;/a&gt; at runtime has access to a utility object in a variable named: &lt;code&gt;karate&lt;/code&gt;.  This provides the following methods:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operation&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-abort"&gt;&lt;code&gt;karate.abort()&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;you can prematurely exit a &lt;code&gt;Scenario&lt;/code&gt; by combining this with &lt;a href="#conditional-logic"&gt;conditional logic&lt;/a&gt; like so: &lt;code&gt;* if (condition) karate.abort()&lt;/code&gt; - please use &lt;a href="https://martinfowler.com/articles/nonDeterminism.html" rel="nofollow"&gt;sparingly&lt;/a&gt; !&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-append"&gt;&lt;code&gt;karate.append(... items)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;useful to create lists out of items (which can be lists as well), see &lt;a href="#json-transforms"&gt;JSON transforms&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-appendto"&gt;&lt;code&gt;karate.appendTo(name, ... items)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;useful to append to a list-like variable (that has to exist) in scope, see &lt;a href="#json-transforms"&gt;JSON transforms&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-call"&gt;&lt;code&gt;karate.call(fileName, [arg])&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;invoke a &lt;a href="#calling-other-feature-files"&gt;&lt;code&gt;*.feature&lt;/code&gt; file&lt;/a&gt; or a &lt;a href="#calling-javascript-functions"&gt;JavaScript function&lt;/a&gt; the same way that &lt;a href="#call"&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; works (with an optional solitary argument)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-callsingle"&gt;&lt;code&gt;karate.callSingle(fileName, [arg])&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;like the above, but guaranteed to run &lt;strong&gt;only once&lt;/strong&gt; even across multiple features &lt;em&gt;and&lt;/em&gt; parallel threads (recommended only for advanced users) - refer to this example: &lt;a href="karate-demo/src/test/java/karate-config.js"&gt;&lt;code&gt;karate-config.js&lt;/code&gt;&lt;/a&gt; / &lt;a href="karate-demo/src/test/java/demo/headers/headers-single.feature"&gt;&lt;code&gt;headers-single.feature&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-configure"&gt;&lt;code&gt;karate.configure(key, value)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;does the same thing as the &lt;a href="#configure"&gt;&lt;code&gt;configure&lt;/code&gt;&lt;/a&gt; keyword, and a very useful example is to do &lt;code&gt;karate.configure('connectTimeout', 5000);&lt;/code&gt; in &lt;a href="#configuration"&gt;&lt;code&gt;karate-config.js&lt;/code&gt;&lt;/a&gt; - which has the 'global' effect of not wasting time if a connection cannot be established within 5 seconds&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-embed"&gt;&lt;code&gt;karate.embed(object, mimeType)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;embeds the object (can be raw bytes or an image) into the JSON report output, see this &lt;a href="karate-demo/src/test/java/demo/embed/embed.feature"&gt;example&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-env"&gt;&lt;code&gt;karate.env&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;gets the value (read-only) of the environment property 'karate.env', and this is typically used for bootstrapping &lt;a href="#configuration"&gt;configuration&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-eval"&gt;&lt;code&gt;karate.eval(expression)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;for really advanced needs, you can programmatically generate a snippet of JavaScript which can be evaluated at run-time, you can find an example &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature"&gt;here&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-exec"&gt;&lt;code&gt;karate.exec(command)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;convenient way to execute an OS specific command and return the console output, useful for calling non-Java code (that can even return data) or for starting user-interfaces to be automated&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-filter"&gt;&lt;code&gt;karate.filter(list, predicate)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;functional-style 'filter' operation useful to filter list-like objects (e.g. JSON arrays), see &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature"&gt;example&lt;/a&gt;, the second argument has to be a JS function (item, [index]) that returns a &lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-filterkeys"&gt;&lt;code&gt;karate.filterKeys(map, keys)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;extracts a sub-set of key-value pairs from the first argument, the second argument can be a list (or varargs) of keys - or even another JSON where only the keys would be used for extraction, &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature"&gt;example&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;karate.forEach(list, function)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;functional-style 'loop' operation useful to traverse list-like (or even map-like) objects (e.g. JSON / arrays), see &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature"&gt;example&lt;/a&gt;, the second argument has to be a JS function (item, [index]) for lists and (key, [value], [index]) for JSON / maps&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-get"&gt;&lt;code&gt;karate.get(name)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;get the value of a variable by name (or JsonPath expression), if not found - this returns &lt;code&gt;null&lt;/code&gt; which is easier to handle in JavaScript (than &lt;code&gt;undefined&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-info"&gt;&lt;code&gt;karate.info&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;within a test (or within the &lt;a href="#configure"&gt;&lt;code&gt;afterScenario&lt;/code&gt;&lt;/a&gt; function if configured) you can access metadata such as the &lt;code&gt;Scenario&lt;/code&gt; name, refer to this example: &lt;a href="karate-demo/src/test/java/demo/hooks/hooks.feature"&gt;&lt;code&gt;hooks.feature&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-jsonpath"&gt;&lt;code&gt;karate.jsonPath(json, expression)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;brings the power of &lt;a href="https://github.com/json-path/JsonPath"&gt;JsonPath&lt;/a&gt; into JavaScript, and you can find an example &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature"&gt;here&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-keysof"&gt;&lt;code&gt;karate.keysOf(object)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;returns only the keys of a map-like object&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-listen"&gt;&lt;code&gt;karate.listen(timeout)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;wait until &lt;a href="#karate-signal"&gt;&lt;code&gt;karate.signal(result)&lt;/code&gt;&lt;/a&gt; has been called or time-out after &lt;code&gt;timeout&lt;/code&gt; milliseconds, see &lt;a href="#async"&gt;async&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-log"&gt;&lt;code&gt;karate.log(... args)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;log to the same logger (and log file) being used by the parent process, logging can be suppressed with &lt;a href="#configure"&gt;&lt;code&gt;configure printEnabled&lt;/code&gt;&lt;/a&gt; set to &lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-lowercase"&gt;&lt;code&gt;karate.lowerCase(object)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;useful to brute-force all keys and values in a JSON or XML payload to lower-case, useful in some cases, see &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/lower-case.feature"&gt;example&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-map"&gt;&lt;code&gt;karate.map(list, function)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;functional-style 'map' operation useful to transform list-like objects (e.g. JSON arrays), see &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature"&gt;example&lt;/a&gt;, the second argument has to be a JS function (item, [index])&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-mapwithkey"&gt;&lt;code&gt;karate.mapWithKey(list, string)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;convenient for the common case of transforming an array of primitives into an array of objects, see &lt;a href="#json-transforms"&gt;JSON transforms&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-match"&gt;&lt;code&gt;karate.match(actual, expected)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;brings the power of the &lt;em&gt;fuzzy&lt;/em&gt; &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; syntax into Karate-JS, returns a JSON in the form &lt;code&gt;{ pass: '#boolean', message: '#string' }&lt;/code&gt; and you can find an example &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature"&gt;here&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-merge"&gt;&lt;code&gt;karate.merge(... maps)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;useful to merge the key-values of two (or more) JSON (or map-like) objects, see &lt;a href="#json-transforms"&gt;JSON transforms&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-os"&gt;&lt;code&gt;karate.os&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;returns the operating system details as JSON, for e.g. &lt;code&gt;{ type: 'macosx', name: 'Mac OS X' }&lt;/code&gt; - useful for writing conditional logic, the possible &lt;code&gt;type&lt;/code&gt;-s being: &lt;code&gt;macosx&lt;/code&gt;, &lt;code&gt;windows&lt;/code&gt;, &lt;code&gt;linux&lt;/code&gt; and &lt;code&gt;unknown&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-pretty"&gt;&lt;code&gt;karate.pretty(value)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;return a 'pretty-printed', nicely indented string representation of the JSON value, also see: &lt;a href="#print"&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-prettyxml"&gt;&lt;code&gt;karate.prettyXml(value)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;return a 'pretty-printed', nicely indented string representation of the XML value, also see: &lt;a href="#print"&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-prevrequest"&gt;&lt;code&gt;karate.prevRequest&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;for advanced users, you can inspect the &lt;em&gt;actual&lt;/em&gt; HTTP request after it happens, useful if you are writing a framework over Karate, refer to this example: &lt;a href="karate-demo/src/test/java/demo/request/request.feature"&gt;&lt;code&gt;request.feature&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-properties"&gt;&lt;code&gt;karate.properties[key]&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;get the value of any Java system-property by name, useful for &lt;a href="#dynamic-port-numbers"&gt;advanced custom configuration&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-read"&gt;&lt;code&gt;karate.read(filename)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;the same &lt;a href="#reading-files"&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; function - which is pre-defined even within JS blocks, so there is no need to ever do &lt;code&gt;karate.read()&lt;/code&gt;, and just &lt;code&gt;read()&lt;/code&gt; is sufficient&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-readasstring"&gt;&lt;code&gt;karate.readAsString(filename)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#read-file-as-string"&gt;rarely used&lt;/a&gt;, behaves exactly like &lt;a href="#reading-files"&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; - but does &lt;em&gt;not&lt;/em&gt; auto convert to JSON or XML&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-remove"&gt;&lt;code&gt;karate.remove(name, path)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;very rarely used - when needing to perform conditional removal of XML nodes. Behaves the same way as the &lt;a href="#remove"&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; keyword.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-repeat"&gt;&lt;code&gt;karate.repeat(count, function)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;useful for building an array with &lt;code&gt;count&lt;/code&gt; items or doing something &lt;code&gt;count&lt;/code&gt; times, refer this &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/repeat.feature"&gt;example&lt;/a&gt;. Also see &lt;a href="#loops"&gt;loops&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-set"&gt;&lt;code&gt;karate.set(name, value)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;sets the value of a variable (immediately), which may be needed in case any other routines (such as the &lt;a href="#configure-headers"&gt;configured headers&lt;/a&gt;) depend on that variable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-setall"&gt;&lt;code&gt;karate.set(object)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;where the single argument is expected to be a &lt;code&gt;Map&lt;/code&gt; or JSON-like, and will perform the above &lt;code&gt;karate.set()&lt;/code&gt; operation for all key-value pairs in one-shot, see &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/set.feature"&gt;example&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-setpath"&gt;&lt;code&gt;karate.set(name, path, value)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;only needed when you need to conditionally build payload elements, especially XML. This is best explained via &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/xml/xml.feature#L211"&gt;an example&lt;/a&gt;, and it behaves the same way as the &lt;a href="#set"&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; keyword. Also see &lt;a href="#eval"&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-setxml"&gt;&lt;code&gt;karate.setXml(name, xmlString)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;rarely used, refer to the example above&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-signal"&gt;&lt;code&gt;karate.signal(result)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;trigger an event that &lt;a href="#karate-listen"&gt;&lt;code&gt;karate.listen(timeout)&lt;/code&gt;&lt;/a&gt; is waiting for, and pass the data, see &lt;a href="#async"&gt;async&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-sizeof"&gt;&lt;code&gt;karate.sizeOf(object)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;returns the size of the map-like or list-like object&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-tags"&gt;&lt;code&gt;karate.tags&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;for advanced users - scripts can introspect the tags that apply to the current scope, refer to this example: &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/tags.feature"&gt;&lt;code&gt;tags.feature&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-tagvalues"&gt;&lt;code&gt;karate.tagValues&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;for even more advanced users - Karate natively supports tags in a &lt;code&gt;@name=val1,val2&lt;/code&gt; format, and there is an inheritance mechanism where &lt;code&gt;Scenario&lt;/code&gt; level tags can over-ride &lt;code&gt;Feature&lt;/code&gt; level tags, refer to this example: &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/tags.feature"&gt;&lt;code&gt;tags.feature&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-tobean"&gt;&lt;code&gt;karate.toBean(json, className)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;converts a JSON string or map-like object into a Java object, given the Java class name as the second argument, refer to this &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/type-conv.feature"&gt;file&lt;/a&gt; for an example&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-tojson"&gt;&lt;code&gt;karate.toJson(object)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;converts a Java object into JSON, and &lt;code&gt;karate.toJson(object, true)&lt;/code&gt; will strip all keys that have &lt;code&gt;null&lt;/code&gt; values from the resulting JSON, convenient for unit-testing Java code, see &lt;a href="karate-demo/src/test/java/demo/unit/cat.feature"&gt;example&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-valuesof"&gt;&lt;code&gt;karate.valuesOf(object)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;returns only the values of a map-like object (or itself if a list-like object)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-websocket"&gt;&lt;code&gt;karate.webSocket(url, handler)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;see &lt;a href="#websocket"&gt;websocket&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-write"&gt;&lt;code&gt;karate.write(object, path)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;writes the bytes of &lt;code&gt;object&lt;/code&gt; to a path which will &lt;em&gt;always&lt;/em&gt; be relative to the "build" directory (typically &lt;code&gt;target&lt;/code&gt;), see this example: &lt;a href="karate-demo/src/test/java/demo/embed/embed-pdf.js"&gt;&lt;code&gt;embed-pdf.js&lt;/code&gt;&lt;/a&gt; - and this method returns a &lt;code&gt;java.io.File&lt;/code&gt; reference to the file created / written to&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-xmlpath"&gt;&lt;code&gt;karate.xmlPath(xml, expression)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Just like &lt;a href="#karate-jsonpath"&gt;&lt;code&gt;karate.jsonPath()&lt;/code&gt;&lt;/a&gt; - but for XML, and allows you to use dynamic XPath if needed, see &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/xml/xml.feature"&gt;example&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-code-reuse--common-routines" class="anchor" aria-hidden="true" href="#code-reuse--common-routines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Reuse / Common Routines&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-call" class="anchor" aria-hidden="true" href="#call"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;call&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;In any complex testing endeavor, you would find yourself needing 'common' code that needs to be re-used across multiple test scripts. A typical need would be to perform a 'sign in', or create a fresh user as a pre-requisite for the scenarios being tested.&lt;/p&gt;
&lt;p&gt;There are two types of code that can be &lt;code&gt;call&lt;/code&gt;-ed. &lt;code&gt;*.feature&lt;/code&gt; files and &lt;a href="#calling-javascript-functions"&gt;JavaScript functions&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-calling-other-feature-files" class="anchor" aria-hidden="true" href="#calling-other-feature-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Calling other &lt;code&gt;*.feature&lt;/code&gt; files&lt;/h2&gt;
&lt;p&gt;When you have a sequence of HTTP calls that need to be repeated for multiple test scripts, Karate allows you to treat a &lt;code&gt;*.feature&lt;/code&gt; file as a re-usable unit. You can also pass parameters into the &lt;code&gt;*.feature&lt;/code&gt; file being called, and extract variables out of the invocation result.&lt;/p&gt;
&lt;p&gt;Here is an example of using the &lt;code&gt;call&lt;/code&gt; keyword to invoke another feature file, loaded using the &lt;a href="#reading-files"&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; function:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Feature&lt;/span&gt;:&lt;span class="pl-s"&gt; which makes a 'call' to another re-usable feature&lt;/span&gt;

&lt;span class="pl-k"&gt;Background&lt;/span&gt;:
  &lt;span class="pl-k"&gt;* &lt;/span&gt;configure headers = read(&lt;span class="pl-s"&gt;'classpath:my-headers.js'&lt;/span&gt;)
  &lt;span class="pl-k"&gt;* &lt;/span&gt;def signIn = call read(&lt;span class="pl-s"&gt;'classpath:my-signin.feature'&lt;/span&gt;) { username: &lt;span class="pl-s"&gt;'john'&lt;/span&gt;, password: &lt;span class="pl-s"&gt;'secret'&lt;/span&gt; }
  &lt;span class="pl-k"&gt;* &lt;/span&gt;def authToken = signIn.authToken

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; some scenario&lt;/span&gt;
&lt;span class="pl-c"&gt;  # main test steps&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt; can be used to &lt;em&gt;assign&lt;/em&gt; a &lt;strong&gt;feature&lt;/strong&gt; to a variable. For example look at how "&lt;code&gt;creator&lt;/code&gt;" has been defined in the &lt;code&gt;Background&lt;/code&gt; in &lt;a href="karate-demo/src/test/java/demo/calldynamic/call-dynamic-json.feature"&gt;this example&lt;/a&gt;, and used later in a &lt;code&gt;call&lt;/code&gt; statement. This is very close to how "custom keywords" work in other frameworks. See this other example for more ideas: &lt;a href="karate-demo/src/test/java/demo/dsl/dsl.feature"&gt;&lt;code&gt;dsl.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The contents of &lt;code&gt;my-signin.feature&lt;/code&gt; are shown below. A few points to note:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Karate creates a new 'context' for the feature file being invoked but passes along all variables and configuration. This means that all your &lt;a href="#configuration"&gt;config variables&lt;/a&gt; and &lt;a href="#configure"&gt;&lt;code&gt;configure&lt;/code&gt; settings&lt;/a&gt; would be available to use, for example &lt;code&gt;loginUrlBase&lt;/code&gt; in the example below.&lt;/li&gt;
&lt;li&gt;When you use &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt; in the 'called' feature, it will &lt;strong&gt;not&lt;/strong&gt; over-write variables in the 'calling' feature (unless you explicitly choose to use &lt;a href="#shared-scope"&gt;shared scope&lt;/a&gt;). But note that JSON, XML, Map-like or List-like variables are 'passed by reference' which means that 'called' feature steps can &lt;em&gt;update&lt;/em&gt; or 'mutate' them using the &lt;a href="#set"&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; keyword. Use the &lt;a href="#copy"&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt; keyword to 'clone' a JSON or XML payload if needed, and refer to this example for more details: &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/copy-caller.feature"&gt;&lt;code&gt;copy-caller.feature&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;You can add (or over-ride) variables by passing a call 'argument' as shown above. Only one JSON argument is allowed, but this does not limit you in any way as you can use any complex JSON structure. You can even initialize the JSON in a separate step and pass it by name, especially if it is complex. Observe how using JSON for parameter-passing makes things super-readable. In the 'called' feature, the argument can also be accessed using the built-in variable: &lt;a href="#built-in-variables-for-call"&gt;&lt;code&gt;__arg&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;All&lt;/strong&gt; variables that were defined (using &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt;) in the 'called' script would be returned as 'keys' within a JSON-like object. Note that this includes &lt;a href="#special-variables"&gt;'built-in' variables&lt;/a&gt;, which means that things like the last value of &lt;a href="#response"&gt;&lt;code&gt;response&lt;/code&gt;&lt;/a&gt; would also be present. In the example above you can see that the JSON 'envelope' returned - is assigned to the variable named &lt;code&gt;signIn&lt;/code&gt;. And then getting hold of any data that was generated by the 'called' script is as simple as accessing it by name, for example &lt;code&gt;signIn.authToken&lt;/code&gt; as shown above. This design has the following advantages:
&lt;ul&gt;
&lt;li&gt;'called' Karate scripts don't need to use any special keywords to 'return' data and can behave like 'normal' Karate tests in 'stand-alone' mode if needed&lt;/li&gt;
&lt;li&gt;the data 'return' mechanism is 'safe', there is no danger of the 'called' script over-writing any variables in the 'calling' (or parent) script (unless you use &lt;a href="#shared-scope"&gt;shared scope&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;the need to explicitly 'unpack' variables by name from the returned 'envelope' keeps things readable and maintainable in the 'caller' script&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that only &lt;a href="#def"&gt;variables&lt;/a&gt; and &lt;a href="#configure"&gt;configuration settings&lt;/a&gt; will be passed. You can't do things such as &lt;code&gt;* url 'http://foo.bar'&lt;/code&gt; and expect the URL to be set in the "called" feature. Use a variable in the "called" feature instead, for e.g. &lt;code&gt;* url myUrl&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Feature&lt;/span&gt;:&lt;span class="pl-s"&gt; here are the contents of 'my-signin.feature&lt;/span&gt;'

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:
  &lt;span class="pl-k"&gt;Given &lt;/span&gt;url loginUrlBase
  &lt;span class="pl-k"&gt;And &lt;/span&gt;request { userId: &lt;span class="pl-s"&gt;'#(username)'&lt;/span&gt;, userPass: &lt;span class="pl-s"&gt;'#(password)'&lt;/span&gt; }
  &lt;span class="pl-k"&gt;When &lt;/span&gt;method post
  &lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200
  &lt;span class="pl-k"&gt;And &lt;/span&gt;def authToken = response

&lt;span class="pl-c"&gt;  # second HTTP call, to get a list of 'projects'&lt;/span&gt;
  &lt;span class="pl-k"&gt;Given &lt;/span&gt;path &lt;span class="pl-s"&gt;'users'&lt;/span&gt;, authToken.userId, &lt;span class="pl-s"&gt;'projects'&lt;/span&gt;
  &lt;span class="pl-k"&gt;When &lt;/span&gt;method get
  &lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200
&lt;span class="pl-c"&gt;  # logic to 'choose' first project&lt;/span&gt;
  &lt;span class="pl-k"&gt;And &lt;/span&gt;set authToken.projectId = response.projects[0].projectId;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above example actually makes two HTTP requests - the first is a standard 'sign-in' POST and then (for illustrative purposes) another HTTP call (a GET) is made for retrieving a list of projects for the signed-in user, and the first one is 'selected' and added to the returned 'auth token' JSON object.&lt;/p&gt;
&lt;p&gt;So you get the picture, any kind of complicated 'sign-in' flow can be scripted and re-used.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If the second HTTP call above expects headers to be set by &lt;code&gt;my-headers.js&lt;/code&gt; - which in turn depends on the &lt;code&gt;authToken&lt;/code&gt; variable being updated, you will need to duplicate the line &lt;code&gt;* configure headers = read('classpath:my-headers.js')&lt;/code&gt; from the 'caller' feature here as well. The above example does &lt;strong&gt;not&lt;/strong&gt; use &lt;a href="#shared-scope"&gt;shared scope&lt;/a&gt;, which means that the variables in the 'calling' (parent) feature are &lt;em&gt;not&lt;/em&gt; shared by the 'called' &lt;code&gt;my-signin.feature&lt;/code&gt;. The above example can be made more simpler with the use of &lt;code&gt;call&lt;/code&gt; (or &lt;a href="#callonce"&gt;&lt;code&gt;callonce&lt;/code&gt;&lt;/a&gt;) &lt;em&gt;without&lt;/em&gt; a &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt;-assignment to a variable, and is the &lt;a href="#shared-scope"&gt;recommended pattern&lt;/a&gt; for implementing re-usable authentication setup flows.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Do look at the documentation and example for &lt;a href="#configure-headers"&gt;&lt;code&gt;configure headers&lt;/code&gt;&lt;/a&gt; also as it goes hand-in-hand with &lt;code&gt;call&lt;/code&gt;. In the above example, the end-result of the &lt;code&gt;call&lt;/code&gt; to &lt;code&gt;my-signin.feature&lt;/code&gt; resulted in the &lt;code&gt;authToken&lt;/code&gt; variable being initialized. Take a look at how the &lt;a href="#configure-headers"&gt;&lt;code&gt;configure headers&lt;/code&gt;&lt;/a&gt; example uses the &lt;code&gt;authToken&lt;/code&gt; variable.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-call-tag-selector" class="anchor" aria-hidden="true" href="#call-tag-selector"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Call Tag Selector&lt;/h3&gt;
&lt;p&gt;You can "select" a single &lt;code&gt;Scenario&lt;/code&gt; (or &lt;code&gt;Scenario&lt;/code&gt;-s or &lt;code&gt;Scenario Outline&lt;/code&gt;-s or even specific &lt;code&gt;Examples&lt;/code&gt; rows) by appending a "tag selector" at the end of the feature-file you are calling. For example:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;call read(&lt;span class="pl-s"&gt;'classpath:my-signin.feature@name=someScenarioName'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;While the tag does not need to be in the &lt;code&gt;@key=value&lt;/code&gt; form, it is recommended for readability when you start getting into the business of giving meaningful names to your &lt;code&gt;Scenario&lt;/code&gt;-s.&lt;/p&gt;
&lt;p&gt;This "tag selection" capability is designed for you to be able to "compose" flows out of existing test-suites when using the &lt;a href="karate-gatling"&gt;Karate Gatling integration&lt;/a&gt;. Normally we recommend that you keep your "re-usable" features lightweight - by limiting them to just one &lt;code&gt;Scenario&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-data-driven-features" class="anchor" aria-hidden="true" href="#data-driven-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data-Driven Features&lt;/h3&gt;
&lt;p&gt;If the argument passed to the &lt;a href="#calling-other-feature-files"&gt;call of a &lt;code&gt;*.feature&lt;/code&gt; file&lt;/a&gt; is a JSON array, something interesting happens. The feature is invoked for each item in the array. Each array element is expected to be a JSON object, and for each object - the behavior will be as described above.&lt;/p&gt;
&lt;p&gt;But this time, the return value from the &lt;code&gt;call&lt;/code&gt; step will be a JSON array of the same size as the input array. And each element of the returned array will be the 'envelope' of variables that resulted from each iteration where the &lt;code&gt;*.feature&lt;/code&gt; got invoked.&lt;/p&gt;
&lt;p&gt;Here is an example that combines the &lt;a href="#table"&gt;&lt;code&gt;table&lt;/code&gt;&lt;/a&gt; keyword with calling a &lt;code&gt;*.feature&lt;/code&gt;. Observe how the &lt;a href="#get"&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; &lt;a href="#get-short-cut"&gt;shortcut&lt;/a&gt; is used to 'distill' the result array of variable 'envelopes' into an array consisting only of &lt;a href="#response"&gt;&lt;code&gt;response&lt;/code&gt;&lt;/a&gt; payloads.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;table kittens 
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;name&lt;/span&gt;   | &lt;span class="pl-s1"&gt;age&lt;/span&gt; |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | '&lt;span class="pl-s1"&gt;Bob&lt;/span&gt;'  |   &lt;span class="pl-s1"&gt;2&lt;/span&gt; |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | '&lt;span class="pl-s1"&gt;Wild&lt;/span&gt;' |   &lt;span class="pl-s1"&gt;1&lt;/span&gt; |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | '&lt;span class="pl-s1"&gt;Nyan&lt;/span&gt;' |   &lt;span class="pl-s1"&gt;3&lt;/span&gt; |&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;def result = call read(&lt;span class="pl-s"&gt;'cat-create.feature'&lt;/span&gt;) kittens
&lt;span class="pl-k"&gt;* &lt;/span&gt;def created = $result[*].response
&lt;span class="pl-k"&gt;* &lt;/span&gt;match each created == { id: &lt;span class="pl-s"&gt;'#number'&lt;/span&gt;, name: &lt;span class="pl-s"&gt;'#string'&lt;/span&gt;, age: &lt;span class="pl-s"&gt;'#number'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match created[*].name contains only [&lt;span class="pl-s"&gt;'Bob'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Wild'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Nyan'&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here is how &lt;code&gt;cat-create.feature&lt;/code&gt; could look like:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@ignore&lt;/span&gt;
Feature:

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:
  &lt;span class="pl-k"&gt;Given &lt;/span&gt;url someUrlFromConfig
  &lt;span class="pl-k"&gt;And &lt;/span&gt;path &lt;span class="pl-s"&gt;'cats'&lt;/span&gt;
  &lt;span class="pl-k"&gt;And &lt;/span&gt;request { name: &lt;span class="pl-s"&gt;'#(name)'&lt;/span&gt;, age: &lt;span class="pl-s"&gt;'#(age)'&lt;/span&gt; }
  &lt;span class="pl-k"&gt;When &lt;/span&gt;method post
  &lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you replace the &lt;code&gt;table&lt;/code&gt; with perhaps a JavaScript function call that gets some JSON data from some data-source, you can imagine how you could go about dynamic data-driven testing.&lt;/p&gt;
&lt;p&gt;Although it is just a few lines of code, take time to study the above example carefully. It is a great example of how to effectively use the unique combination of Cucumber and JsonPath that Karate provides.&lt;/p&gt;
&lt;p&gt;Also look at the &lt;a href="karate-demo"&gt;demo examples&lt;/a&gt;, especially &lt;a href="karate-demo/src/test/java/demo/search/dynamic-params.feature"&gt;&lt;code&gt;dynamic-params.feature&lt;/code&gt;&lt;/a&gt; - to compare the above approach with how the Cucumber &lt;a href="#the-cucumber-way"&gt;&lt;code&gt;Scenario Outline:&lt;/code&gt;&lt;/a&gt; can be alternatively used for data-driven tests.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-built-in-variables-for-call" class="anchor" aria-hidden="true" href="#built-in-variables-for-call"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Built-in variables for &lt;code&gt;call&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Although all properties in the passed JSON-like argument are 'unpacked' into the current scope as separate 'named' variables, it sometimes makes sense to access the whole argument and this can be done via &lt;code&gt;__arg&lt;/code&gt;. And if being called in a loop, a built-in variable called &lt;code&gt;__loop&lt;/code&gt; will also be available that will hold the value of the current loop index. So you can do things like this: &lt;code&gt;* def name = name + __loop&lt;/code&gt; - or you can use the loop index value for looking up other values that may be in scope - in a data-driven style.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Variable&lt;/th&gt;
&lt;th&gt;Refers To&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__arg&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;the single &lt;code&gt;call&lt;/code&gt; (or &lt;a href="#callonce"&gt;&lt;code&gt;callonce&lt;/code&gt;&lt;/a&gt;) argument, will be &lt;code&gt;null&lt;/code&gt; if there was none&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__loop&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;the current iteration index (starts from 0) if being called in a loop, will be &lt;code&gt;-1&lt;/code&gt; if not&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Refer to this &lt;a href="karate-demo"&gt;demo feature&lt;/a&gt; for an example: &lt;a href="karate-demo/src/test/java/demo/calltable/kitten-create.feature"&gt;&lt;code&gt;kitten-create.feature&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-copy" class="anchor" aria-hidden="true" href="#copy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;For a &lt;a href="#call"&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; (or &lt;a href="#callonce"&gt;&lt;code&gt;callonce&lt;/code&gt;&lt;/a&gt;) - payload / data structures (JSON, XML, Map-like or List-like) variables are 'passed by reference' which means that steps within the 'called' feature can update or 'mutate' them, for e.g. using the &lt;a href="#set"&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; keyword. This is actually the intent most of the time and is convenient. If you want to pass a 'clone' to a 'called' feature, you can do so using the rarely used &lt;code&gt;copy&lt;/code&gt; keyword that works very similar to &lt;a href="#type-conversion"&gt;type conversion&lt;/a&gt;. This is best explained in the last scenario of this example: &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/copy-caller.feature"&gt;&lt;code&gt;copy-caller.feature&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-calling-javascript-functions" class="anchor" aria-hidden="true" href="#calling-javascript-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Calling JavaScript Functions&lt;/h2&gt;
&lt;p&gt;Examples of &lt;a href="#javascript-functions"&gt;defining and using JavaScript functions&lt;/a&gt; appear in earlier sections of this document. Being able to define and re-use JavaScript functions is a powerful capability of Karate. For example, you can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;call re-usable functions that take complex data as an argument and return complex data that can be stored in a variable&lt;/li&gt;
&lt;li&gt;&lt;a href="#calling-java"&gt;call and interoperate with Java code&lt;/a&gt; if needed&lt;/li&gt;
&lt;li&gt;share and re-use test &lt;a href="#commonly-needed-utilities"&gt;utilities&lt;/a&gt; or 'helper' functionality across your organization&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;For an advanced example of how you can build and re-use a common set of JS functions, refer to &lt;a href="https://stackoverflow.com/a/49384760/143475" rel="nofollow"&gt;this answer on Stack Overflow&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In real-life scripts, you would typically also use this capability of Karate to &lt;a href="#configure-headers"&gt;&lt;code&gt;configure headers&lt;/code&gt;&lt;/a&gt; where the specified JavaScript function uses the variables that result from a &lt;a href="#calling-other-feature-files"&gt;sign in&lt;/a&gt; to manipulate headers for all subsequent HTTP requests. And it is worth mentioning that the Karate &lt;a href="#configuration"&gt;configuration 'bootstrap'&lt;/a&gt; routine is itself a JavaScript function.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Also refer to the &lt;a href="#eval"&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; keyword for a simpler way to execute arbitrary JavaScript that can be useful in some situations.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-js-function-argument-rules-for-call" class="anchor" aria-hidden="true" href="#js-function-argument-rules-for-call"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JS function argument rules for &lt;code&gt;call&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;When using &lt;code&gt;call&lt;/code&gt; (or &lt;a href="#callonce"&gt;&lt;code&gt;callonce&lt;/code&gt;&lt;/a&gt;), only one argument is allowed. But this does not limit you in any way, because similar to how you can &lt;a href="#calling-other-feature-files"&gt;call &lt;code&gt;*.feature files&lt;/code&gt;&lt;/a&gt;, you can pass a whole JSON object as the argument. In the case of the &lt;code&gt;call&lt;/code&gt; of a JavaScript function, you can also pass a JSON array or a primitive (string, number, boolean) as the solitary argument, and the function implementation is expected to handle whatever is passed.&lt;/p&gt;
&lt;p&gt;Instead of using &lt;code&gt;call&lt;/code&gt; (or &lt;code&gt;callonce&lt;/code&gt;) you are always free to call JavaScript functions 'normally' and then you can use more than one argument.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def adder = function(a, b){ return a + b }
&lt;span class="pl-k"&gt;* &lt;/span&gt;assert adder(1, 2) == 3&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-return-types" class="anchor" aria-hidden="true" href="#return-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Return types&lt;/h3&gt;
&lt;p&gt;Naturally, only one value can be returned.  But again, you can return a JSON object. There are two things that can happen to the returned value.&lt;/p&gt;
&lt;p&gt;Either - it can be assigned to a variable like so.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def returnValue = call myFunction&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or - if a &lt;code&gt;call&lt;/code&gt; is made without an assignment, and if the function returns a map-like object, it will add each key-value pair returned as a new variable into the execution context.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# while this looks innocent ...&lt;/span&gt;
&lt;span class="pl-c"&gt;# ... behind the scenes, it could be creating (or over-writing) a bunch of variables !&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;call someFunction&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;While this sounds dangerous and should be used with care (and limits readability), the reason this feature exists is to quickly set (or over-write) a bunch of config variables when needed. In fact, this is the mechanism used when &lt;a href="#configuration"&gt;&lt;code&gt;karate-config.js&lt;/code&gt;&lt;/a&gt; is processed on start-up.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-shared-scope" class="anchor" aria-hidden="true" href="#shared-scope"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Shared Scope&lt;/h4&gt;
&lt;p&gt;This behavior where all key-value pairs in the returned map-like object get automatically added as variables - applies to the &lt;a href="#calling-other-feature-files"&gt;calling of &lt;code&gt;*.feature&lt;/code&gt; files&lt;/a&gt; as well. In other words, when &lt;a href="#call"&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; or &lt;a href="#callonce"&gt;&lt;code&gt;callonce&lt;/code&gt;&lt;/a&gt; is used without a &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt;, the 'called' script not only shares all variables (and &lt;a href="#configure"&gt;&lt;code&gt;configure&lt;/code&gt;&lt;/a&gt; settings) but can update the shared execution context. This is very useful to boil-down those 'common' steps that you may have to perform at the start of multiple test-scripts - into one-liners. But use wisely, because called scripts will now over-write variables that may have been already defined.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def config = { user: &lt;span class="pl-s"&gt;'john'&lt;/span&gt;, password: &lt;span class="pl-s"&gt;'secret'&lt;/span&gt; }
&lt;span class="pl-c"&gt;# this next line may perform many steps and result in multiple variables set for the rest of the script&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;call read(&lt;span class="pl-s"&gt;'classpath:common-setup.feature'&lt;/span&gt;) config&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can use &lt;a href="#callonce"&gt;&lt;code&gt;callonce&lt;/code&gt;&lt;/a&gt; instead of &lt;code&gt;call&lt;/code&gt; within the &lt;a href="#script-structure"&gt;&lt;code&gt;Background&lt;/code&gt;&lt;/a&gt; in case you have multiple &lt;code&gt;Scenario&lt;/code&gt; sections or &lt;a href="#data-driven-tests"&gt;&lt;code&gt;Examples&lt;/code&gt;&lt;/a&gt;. Note the 'inline' use of the &lt;a href="#reading-files"&gt;read&lt;/a&gt; function as a short-cut above. This applies to JS functions as well:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;call read(&lt;span class="pl-s"&gt;'my-function.js'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These heavily commented &lt;a href="karate-demo"&gt;demo examples&lt;/a&gt; can help you understand 'shared scope' better, and are designed to get you started with creating re-usable 'sign-in' or authentication flows:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Scope&lt;/th&gt;
&lt;th&gt;Caller Feature&lt;/th&gt;
&lt;th&gt;Called Feature&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Isolated&lt;/td&gt;
&lt;td&gt;&lt;a href="karate-demo/src/test/java/demo/headers/call-isolated-headers.feature"&gt;&lt;code&gt;call-isolated-headers.feature&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="karate-demo/src/test/java/demo/headers/common-multiple.feature"&gt;&lt;code&gt;common-multiple.feature&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Shared&lt;/td&gt;
&lt;td&gt;&lt;a href="karate-demo/src/test/java/demo/headers/call-updates-config.feature"&gt;&lt;code&gt;call-updates-config.feature&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="karate-demo/src/test/java/demo/headers/common.feature"&gt;&lt;code&gt;common.feature&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;Once you get comfortable with Karate, you can consider moving your authentication flow into a 'global' one-time flow using &lt;a href="#karate-callsingle"&gt;&lt;code&gt;karate.callSingle()&lt;/code&gt;&lt;/a&gt;, think of it as '&lt;a href="#callonce"&gt;&lt;code&gt;callonce&lt;/code&gt;&lt;/a&gt; on steroids'.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-calling-java" class="anchor" aria-hidden="true" href="#calling-java"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Calling Java&lt;/h3&gt;
&lt;p&gt;There are examples of calling JVM classes in the section on &lt;a href="#java-interop"&gt;Java Interop&lt;/a&gt; and in the &lt;a href="karate-demo"&gt;file-upload demo&lt;/a&gt;. Also look at the section on &lt;a href="#commonly-needed-utilities"&gt;commonly needed utilities&lt;/a&gt; for more ideas.&lt;/p&gt;
&lt;p&gt;Calling any Java code is that easy.  Given this custom, user-defined Java class:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;package&lt;/span&gt; &lt;span class="pl-smi"&gt;com.mycompany&lt;/span&gt;;

&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;java.util.HashMap&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;java.util.Map&lt;/span&gt;;

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;JavaDemo&lt;/span&gt; {    
    
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;Map&amp;lt;&lt;span class="pl-smi"&gt;String&lt;/span&gt;, &lt;span class="pl-smi"&gt;Object&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;doWork&lt;/span&gt;(&lt;span class="pl-smi"&gt;String&lt;/span&gt; &lt;span class="pl-v"&gt;fromJs&lt;/span&gt;) {
        &lt;span class="pl-k"&gt;Map&amp;lt;&lt;span class="pl-smi"&gt;String&lt;/span&gt;, &lt;span class="pl-smi"&gt;Object&lt;/span&gt;&amp;gt;&lt;/span&gt; map &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;HashMap&amp;lt;&amp;gt;&lt;/span&gt;();
        map&lt;span class="pl-k"&gt;.&lt;/span&gt;put(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;someKey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; fromJs);
        &lt;span class="pl-k"&gt;return&lt;/span&gt; map;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-smi"&gt;String&lt;/span&gt; &lt;span class="pl-en"&gt;doWorkStatic&lt;/span&gt;(&lt;span class="pl-smi"&gt;String&lt;/span&gt; &lt;span class="pl-v"&gt;fromJs&lt;/span&gt;) {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; fromJs;
    }   

}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is how it can be called from a test-script via &lt;a href="#javascript-functions"&gt;JavaScript&lt;/a&gt;, and yes, even static methods can be invoked:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def doWork =
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  function(arg) {&lt;/span&gt;
&lt;span class="pl-s"&gt;    var JavaDemo = Java.type('com.mycompany.JavaDemo');&lt;/span&gt;
&lt;span class="pl-s"&gt;    var jd = new JavaDemo();&lt;/span&gt;
&lt;span class="pl-s"&gt;    return jd.doWork(arg);  &lt;/span&gt;
&lt;span class="pl-s"&gt;  }&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;
&lt;span class="pl-c"&gt;# in this case the solitary 'call' argument is of type string&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def result = call doWork &lt;span class="pl-s"&gt;'world'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match result == { someKey: &lt;span class="pl-s"&gt;'hello world'&lt;/span&gt; }

&lt;span class="pl-c"&gt;# using a static method - observe how java interop is truly seamless !&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def JavaDemo = Java.type(&lt;span class="pl-s"&gt;'com.mycompany.JavaDemo'&lt;/span&gt;)
&lt;span class="pl-k"&gt;* &lt;/span&gt;def result = JavaDemo.doWorkStatic(&lt;span class="pl-s"&gt;'world'&lt;/span&gt;)
&lt;span class="pl-k"&gt;* &lt;/span&gt;assert result == &lt;span class="pl-s"&gt;'hello world'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that JSON gets auto-converted to &lt;code&gt;Map&lt;/code&gt; (or &lt;code&gt;List&lt;/code&gt;) when making the cross-over to Java. Refer to the &lt;a href="karate-demo/src/test/java/demo/java/cats-java.feature"&gt;&lt;code&gt;cats-java.feature&lt;/code&gt;&lt;/a&gt; demo for an example.&lt;/p&gt;
&lt;p&gt;Another example is &lt;a href="karate-demo/src/test/java/demo/dogs/dogs.feature"&gt;&lt;code&gt;dogs.feature&lt;/code&gt;&lt;/a&gt; -  which actually makes JDBC (database) calls, and since the data returned from the Java code is JSON, the last section of the test is able to use &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; &lt;em&gt;very&lt;/em&gt; effectively for data assertions.&lt;/p&gt;
&lt;p&gt;A great example of how you can extend Karate, even bypass the HTTP client but still use Karate's test-automation effectively, is this &lt;a href="https://grpc.io" rel="nofollow"&gt;gRPC&lt;/a&gt; example by &lt;a href="https://github.com/thinkerou"&gt;@thinkerou&lt;/a&gt;: &lt;a href="https://github.com/thinkerou/karate-grpc"&gt;&lt;code&gt;karate-grpc&lt;/code&gt;&lt;/a&gt;. And you can even handle asynchronous flows such as &lt;a href="#async"&gt;listening to message-queues&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-http-basic-authentication-example" class="anchor" aria-hidden="true" href="#http-basic-authentication-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTTP Basic Authentication Example&lt;/h4&gt;
&lt;p&gt;This should make it clear why Karate does not provide 'out of the box' support for any particular HTTP authentication scheme. Things are designed so that you can plug-in what you need, without needing to compile Java code. You get to choose how to manage your environment-specific configuration values such as user-names and passwords.&lt;/p&gt;
&lt;p&gt;First the JavaScript file, &lt;code&gt;basic-auth.js&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(&lt;span class="pl-smi"&gt;creds&lt;/span&gt;) {
  &lt;span class="pl-k"&gt;var&lt;/span&gt; temp &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;creds&lt;/span&gt;.&lt;span class="pl-smi"&gt;username&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;creds&lt;/span&gt;.&lt;span class="pl-smi"&gt;password&lt;/span&gt;;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; Base64 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Java&lt;/span&gt;.&lt;span class="pl-c1"&gt;type&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;java.util.Base64&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-k"&gt;var&lt;/span&gt; encoded &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Base64&lt;/span&gt;.&lt;span class="pl-en"&gt;getEncoder&lt;/span&gt;().&lt;span class="pl-en"&gt;encodeToString&lt;/span&gt;(&lt;span class="pl-smi"&gt;temp&lt;/span&gt;.&lt;span class="pl-smi"&gt;bytes&lt;/span&gt;);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Basic &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; encoded;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here's how it works in a test-script using the &lt;a href="#header"&gt;&lt;code&gt;header&lt;/code&gt;&lt;/a&gt; keyword.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;header Authorization = call read(&lt;span class="pl-s"&gt;'basic-auth.js'&lt;/span&gt;) { username: &lt;span class="pl-s"&gt;'john'&lt;/span&gt;, password: &lt;span class="pl-s"&gt;'secret'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can set this up for all subsequent requests or dynamically generate headers for each HTTP request if you &lt;a href="#configure-headers"&gt;&lt;code&gt;configure headers&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-callonce" class="anchor" aria-hidden="true" href="#callonce"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;callonce&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Cucumber has a limitation where &lt;a href="#script-structure"&gt;&lt;code&gt;Background&lt;/code&gt;&lt;/a&gt; steps are re-run for every &lt;code&gt;Scenario&lt;/code&gt;. And if you have a &lt;code&gt;Scenario Outline&lt;/code&gt;, this happens for &lt;em&gt;every&lt;/em&gt; row in the &lt;code&gt;Examples&lt;/code&gt;. This is a problem especially for expensive, time-consuming HTTP calls, and this has been an &lt;a href="https://github.com/cucumber/cucumber-jvm/issues/515"&gt;open issue for a long time&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Karate's &lt;code&gt;callonce&lt;/code&gt; keyword behaves exactly like &lt;a href="#call"&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; but is guaranteed to execute only once. The results of the first call are cached, and any future calls will simply return the cached result instead of executing the JavaScript function (or feature) again and again.&lt;/p&gt;
&lt;p&gt;This does require you to move 'set-up' into a separate &lt;code&gt;*.feature&lt;/code&gt; (or JavaScript) file. But this totally makes sense for things not part of the 'main' test flow and which typically need to be re-usable anyway.&lt;/p&gt;
&lt;p&gt;So when you use the combination of &lt;code&gt;callonce&lt;/code&gt; in a &lt;code&gt;Background&lt;/code&gt;, you can indeed get the same effect as using a &lt;a href="http://junit.sourceforge.net/javadoc/org/junit/BeforeClass.html" rel="nofollow"&gt;&lt;code&gt;@BeforeClass&lt;/code&gt;&lt;/a&gt; annotation, and you can find examples in the &lt;a href="karate-demo"&gt;karate-demo&lt;/a&gt;, such as this one: &lt;a href="karate-demo/src/test/java/demo/callonce/call-once.feature"&gt;&lt;code&gt;callonce.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Recommended only for experienced users - &lt;a href="#karate-callsingle"&gt;&lt;code&gt;karate.callSingle()&lt;/code&gt;&lt;/a&gt; is a way to invoke a feature or function 'globally' only once.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-eval" class="anchor" aria-hidden="true" href="#eval"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;This is for evaluating arbitrary JavaScript and you are advised to use this only as a last resort ! Conditional logic is not recommended especially within test scripts because &lt;a href="https://martinfowler.com/articles/nonDeterminism.html" rel="nofollow"&gt;tests should be deterministic&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are a few situations where this comes in handy:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you &lt;em&gt;really&lt;/em&gt; don't need to assign a result to a variable&lt;/li&gt;
&lt;li&gt;statements in the &lt;code&gt;if&lt;/code&gt; form (also see &lt;a href="#conditional-logic"&gt;conditional logic&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;'one-off' logic (or &lt;a href="#java-interop"&gt;Java interop&lt;/a&gt;) where you don't need the 'ceremony' of a &lt;a href="#calling-javascript-functions"&gt;re-usable function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;JavaScript / JSON-style mutation of existing &lt;a href="#def"&gt;variables&lt;/a&gt; as a dynamic alternative to &lt;a href="#set"&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; and &lt;a href="#remove"&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; - by using &lt;a href="#karate-get"&gt;&lt;code&gt;karate.get()&lt;/code&gt;&lt;/a&gt; and &lt;a href="#karate-setpath"&gt;&lt;code&gt;karate.set()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# just perform an action, we don't care about saving the result&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;eval myJavaScriptFunction()

&lt;span class="pl-c"&gt;# do something only if a condition is true&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;eval if (zone == &lt;span class="pl-s"&gt;'zone1'&lt;/span&gt;) karate.set(&lt;span class="pl-s"&gt;'temp'&lt;/span&gt;, &lt;span class="pl-s"&gt;'after'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As a convenience, you can omit the &lt;code&gt;eval&lt;/code&gt; keyword and so you can shorten the above to:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;myJavaScriptFunction()
&lt;span class="pl-k"&gt;* &lt;/span&gt;if (zone == &lt;span class="pl-s"&gt;'zone1'&lt;/span&gt;) karate.set(&lt;span class="pl-s"&gt;'temp'&lt;/span&gt;, &lt;span class="pl-s"&gt;'after'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is &lt;strong&gt;very&lt;/strong&gt; convenient especially if you are calling a method on a variable that has been &lt;a href="#def"&gt;defined&lt;/a&gt; such as the &lt;a href="#the-karate-object"&gt;&lt;code&gt;karate&lt;/code&gt;&lt;/a&gt; object, and for general-purpose scripting needs such as &lt;a href="karate-core"&gt;UI automation&lt;/a&gt;. Note how &lt;code&gt;karate.set()&lt;/code&gt; and &lt;code&gt;karate.remove()&lt;/code&gt; below are used directly as a script "statement".&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# you can use multiple lines of JavaScript if needed&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;eval
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  var foo = function(v){ return v * v };&lt;/span&gt;
&lt;span class="pl-s"&gt;  var nums = [0, 1, 2, 3, 4];&lt;/span&gt;
&lt;span class="pl-s"&gt;  var squares = [];&lt;/span&gt;
&lt;span class="pl-s"&gt;  for (var n in nums) {&lt;/span&gt;
&lt;span class="pl-s"&gt;    squares.push(foo(n));&lt;/span&gt;
&lt;span class="pl-s"&gt;  }&lt;/span&gt;
&lt;span class="pl-s"&gt;  karate.set('temp', squares);&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match temp == [0, 1, 4, 9, 16]

&lt;span class="pl-k"&gt;* &lt;/span&gt;def json = { a: 1 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;def key = &lt;span class="pl-s"&gt;'b'&lt;/span&gt;
&lt;span class="pl-c"&gt;# use dynamic path expressions to mutate json&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;json[key] = 2
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == { a: 1, b: 2 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;karate.remove(&lt;span class="pl-s"&gt;'json'&lt;/span&gt;, &lt;span class="pl-s"&gt;'$.'&lt;/span&gt; + key)
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == { a: 1 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;karate.set(&lt;span class="pl-s"&gt;'json'&lt;/span&gt;, &lt;span class="pl-s"&gt;'$.c[]'&lt;/span&gt;, { d: &lt;span class="pl-s"&gt;'e'&lt;/span&gt; })
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == { a: 1, c: [{ d: &lt;span class="pl-s"&gt;'e'&lt;/span&gt; }] }&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-advanced--tricks" class="anchor" aria-hidden="true" href="#advanced--tricks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced / Tricks&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-polling" class="anchor" aria-hidden="true" href="#polling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Polling&lt;/h2&gt;
&lt;p&gt;The built-in &lt;a href="#retry-until"&gt;&lt;code&gt;retry until&lt;/code&gt;&lt;/a&gt; syntax should suffice for most needs, but if you have some specific needs, this demo example (using JavaScript) should get you up and running: &lt;a href="karate-demo/src/test/java/demo/polling/polling.feature"&gt;&lt;code&gt;polling.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-conditional-logic" class="anchor" aria-hidden="true" href="#conditional-logic"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conditional Logic&lt;/h2&gt;
&lt;p&gt;The keywords &lt;a href="#given-when-then"&gt;&lt;code&gt;Given&lt;/code&gt; &lt;code&gt;When&lt;/code&gt; &lt;code&gt;Then&lt;/code&gt;&lt;/a&gt; are only for decoration and should not be thought of as similar to an &lt;code&gt;if - then - else&lt;/code&gt; statement. And as a testing framework, Karate &lt;a href="https://martinfowler.com/articles/nonDeterminism.html" rel="nofollow"&gt;discourages tests&lt;/a&gt; that give different results on every run.&lt;/p&gt;
&lt;p&gt;That said, if you really need to implement 'conditional' checks, this can be one pattern:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def filename = zone == &lt;span class="pl-s"&gt;'zone1'&lt;/span&gt; ? &lt;span class="pl-s"&gt;'test1.feature'&lt;/span&gt; : &lt;span class="pl-s"&gt;'test2.feature'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def result = call read(filename)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And this is another, using &lt;a href="#karate-call"&gt;&lt;code&gt;karate.call()&lt;/code&gt;&lt;/a&gt;. Here we want to &lt;a href="#call"&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; a file only if a condition is satisfied:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def result = responseStatus == 404 ? {} : karate.call(&lt;span class="pl-s"&gt;'delete-user.feature'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or if we don't care about the result, we can &lt;a href="#eval"&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; an &lt;code&gt;if&lt;/code&gt; statement:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;if (responseStatus == 200) karate.call(&lt;span class="pl-s"&gt;'delete-user.feature'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And this may give you more ideas. You can always use a &lt;a href="#javascript-functions"&gt;JavaScript function&lt;/a&gt; or &lt;a href="#calling-java"&gt;call Java&lt;/a&gt; for more complex logic.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def expected = zone == &lt;span class="pl-s"&gt;'zone1'&lt;/span&gt; ? { foo: &lt;span class="pl-s"&gt;'#string'&lt;/span&gt; } : { bar: &lt;span class="pl-s"&gt;'#number'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match response == expected&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In some rare cases you need to exit a &lt;code&gt;Scenario&lt;/code&gt; based on some condition. You can use &lt;a href="#karate-abort"&gt;&lt;code&gt;karate.abort()&lt;/code&gt;&lt;/a&gt; like so:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;if (responseStatus == 404) karate.abort()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also refer to &lt;a href="#polling"&gt;polling&lt;/a&gt; for more ideas.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-commonly-needed-utilities" class="anchor" aria-hidden="true" href="#commonly-needed-utilities"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commonly Needed Utilities&lt;/h2&gt;
&lt;p&gt;Since it is so easy to dive into &lt;a href="#calling-java"&gt;Java-interop&lt;/a&gt;, Karate does not include any random-number functions, uuid generator or date / time utilities out of the box. You simply roll your own.&lt;/p&gt;
&lt;p&gt;Here is an example of how to get the current date, and formatted the way you want:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def getDate =
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  function() {&lt;/span&gt;
&lt;span class="pl-s"&gt;    var SimpleDateFormat = Java.type('java.text.SimpleDateFormat');&lt;/span&gt;
&lt;span class="pl-s"&gt;    var sdf = new SimpleDateFormat('yyyy/MM/dd');&lt;/span&gt;
&lt;span class="pl-s"&gt;    var date = new java.util.Date();&lt;/span&gt;
&lt;span class="pl-s"&gt;    return sdf.format(date);&lt;/span&gt;
&lt;span class="pl-s"&gt;  } &lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;def temp = getDate()
&lt;span class="pl-k"&gt;* &lt;/span&gt;print temp&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And the above will result in something like this being logged: &lt;code&gt;[print] 2017/10/16&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here below are a few more common examples:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Utility&lt;/th&gt;
&lt;th&gt;Recipe&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;System Time (as a string)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function(){ return java.lang.System.currentTimeMillis() + '' }&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;UUID&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function(){ return java.util.UUID.randomUUID() + '' }&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Random Number (&lt;code&gt;0&lt;/code&gt; to &lt;code&gt;max-1&lt;/code&gt;)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function(max){ return Math.floor(Math.random() * max) }&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Case Insensitive Comparison&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function(a, b){ return a.equalsIgnoreCase(b) }&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sleep or Wait for &lt;code&gt;pause&lt;/code&gt; milliseconds&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function(pause){ java.lang.Thread.sleep(pause) }&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The first three are good enough for random string generation for most situations. Note that if you need to do a lot of case-insensitive string checks, &lt;a href="#karate-lowercase"&gt;&lt;code&gt;karate.lowerCase()&lt;/code&gt;&lt;/a&gt; is what you are looking for.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-multiple-functions-in-one-file" class="anchor" aria-hidden="true" href="#multiple-functions-in-one-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multiple Functions in One File&lt;/h3&gt;
&lt;p&gt;If you find yourself needing a complex helper or utility function, we strongly recommend that you &lt;a href="#calling-java"&gt;use Java&lt;/a&gt; because it is much easier to maintain and even debug if needed. And if you need multiple functions, you can easily organize them into a single Java class with multiple static methods.&lt;/p&gt;
&lt;p&gt;That said, if you want to stick to JavaScript, but find yourself accumulating a lot of helper functions that you need to use in multiple feature files, the following pattern is recommended.&lt;/p&gt;
&lt;p&gt;You can organize multiple "common" utilities into a single re-usable feature file as follows e.g. &lt;code&gt;common.feature&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@ignore&lt;/span&gt;
Feature:

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:
  &lt;span class="pl-k"&gt;* &lt;/span&gt;def hello = function(){ return &lt;span class="pl-s"&gt;'hello'&lt;/span&gt; }
  &lt;span class="pl-k"&gt;* &lt;/span&gt;def world = function(){ return &lt;span class="pl-s"&gt;'world'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then you have two options. The first option using &lt;a href="#shared-scope"&gt;shared scope&lt;/a&gt; should be fine for most projects, but if you want to "name space" your functions, use "isolated scope":&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; function re-use, global / shared scope&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;call read(&lt;span class="pl-s"&gt;'common.feature'&lt;/span&gt;)
    &lt;span class="pl-k"&gt;* &lt;/span&gt;assert hello() == &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;assert world() == &lt;span class="pl-s"&gt;'world'&lt;/span&gt;

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; function re-use, isolated / name-spaced scope&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def utils = call read(&lt;span class="pl-s"&gt;'common.feature'&lt;/span&gt;)
    &lt;span class="pl-k"&gt;* &lt;/span&gt;assert utils.hello() == &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;assert utils.world() == &lt;span class="pl-s"&gt;'world'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-async" class="anchor" aria-hidden="true" href="#async"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Async&lt;/h2&gt;
&lt;p&gt;The JS API has a couple of methods - &lt;a href="#karate-signal"&gt;&lt;code&gt;karate.signal(result)&lt;/code&gt;&lt;/a&gt; and &lt;a href="#karate-listen"&gt;&lt;code&gt;karate.listen(timeout)&lt;/code&gt;&lt;/a&gt; that are useful for involving asynchronous flows into a test. This is best &lt;a href="https://github.com/intuit/karate/tree/master/karate-netty#consumer-provider-example"&gt;explained&lt;/a&gt; in this &lt;a href="karate-demo/src/test/java/mock/contract/payment-service.feature"&gt;example&lt;/a&gt; that involves listening to an ActiveMQ / JMS queue. Note how &lt;a href="#javascript-functions"&gt;JS functions&lt;/a&gt; defined at run-time can be mixed with custom &lt;a href="#java-interop"&gt;Java code&lt;/a&gt; to get things done.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Background&lt;/span&gt;:
&lt;span class="pl-k"&gt;* &lt;/span&gt;def QueueConsumer = Java.type(&lt;span class="pl-s"&gt;'mock.contract.QueueConsumer'&lt;/span&gt;)
&lt;span class="pl-k"&gt;* &lt;/span&gt;def queue = new QueueConsumer(queueName)
&lt;span class="pl-k"&gt;* &lt;/span&gt;def handler = function(msg){ karate.signal(msg) }
&lt;span class="pl-k"&gt;* &lt;/span&gt;queue.listen(handler)
&lt;span class="pl-k"&gt;* &lt;/span&gt;url paymentServiceUrl + &lt;span class="pl-s"&gt;'/payments'&lt;/span&gt;

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; create, get, update, list and delete payments&lt;/span&gt;
    &lt;span class="pl-k"&gt;Given &lt;/span&gt;request { amount: 5.67, description: &lt;span class="pl-s"&gt;'test one'&lt;/span&gt; }
    &lt;span class="pl-k"&gt;When &lt;/span&gt;method post
    &lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200
    &lt;span class="pl-k"&gt;And &lt;/span&gt;match response == { id: &lt;span class="pl-s"&gt;'#number'&lt;/span&gt;, amount: 5.67, description: &lt;span class="pl-s"&gt;'test one'&lt;/span&gt; }
    &lt;span class="pl-k"&gt;And &lt;/span&gt;def id = response.id
    &lt;span class="pl-k"&gt;* &lt;/span&gt;json shipment = karate.listen(5000)
    &lt;span class="pl-k"&gt;* &lt;/span&gt;print &lt;span class="pl-s"&gt;'### received:'&lt;/span&gt;, shipment
    &lt;span class="pl-k"&gt;* &lt;/span&gt;match shipment == { paymentId: &lt;span class="pl-s"&gt;'#(id)'&lt;/span&gt;, status: &lt;span class="pl-s"&gt;'shipped'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-websocket" class="anchor" aria-hidden="true" href="#websocket"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WebSocket&lt;/h2&gt;
&lt;p&gt;Karate also has built-in support for &lt;a href="http://www.websocket.org" rel="nofollow"&gt;websocket&lt;/a&gt; that is based on the &lt;a href="#async"&gt;async&lt;/a&gt; capability. The following method signatures are available on the &lt;a href="#the-karate-object"&gt;&lt;code&gt;karate&lt;/code&gt; JS object&lt;/a&gt; to obtain a websocket reference:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;karate.webSocket(url)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;karate.webSocket(url, handler)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;karate.webSocket(url, handler, options)&lt;/code&gt; - where &lt;code&gt;options&lt;/code&gt; is an optional JSON (or map-like) object that takes the following optional keys:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;subProtocol&lt;/code&gt; - in case the server expects it&lt;/li&gt;
&lt;li&gt;&lt;code&gt;headers&lt;/code&gt; - another JSON of key-value pairs&lt;/li&gt;
&lt;li&gt;&lt;code&gt;maxPayloadSize&lt;/code&gt; - this defaults to 4194304 (bytes, around 4 MB)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These will init a websocket client for the given &lt;code&gt;url&lt;/code&gt; and optional &lt;code&gt;subProtocol&lt;/code&gt;. If a &lt;code&gt;handler&lt;/code&gt; &lt;a href="#javascript-functions"&gt;function&lt;/a&gt; (returning a boolean) is provided - it will be used to complete the "wait" of &lt;code&gt;socket.listen()&lt;/code&gt; if &lt;code&gt;true&lt;/code&gt; is returned - where &lt;code&gt;socket&lt;/code&gt; is the reference to the websocket client returned by &lt;code&gt;karate.webSocket()&lt;/code&gt;. A handler function is needed only if you have to ignore other incoming traffic. If you need custom headers for the websocket handshake, use JSON as the last argument.&lt;/p&gt;
&lt;p&gt;Here is an example, where the same websocket connection is used to send as well as receive a message.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def handler = function(msg){ return msg.startsWith(&lt;span class="pl-s"&gt;'hello'&lt;/span&gt;) }
&lt;span class="pl-k"&gt;* &lt;/span&gt;def socket = karate.webSocket(demoBaseUrl + &lt;span class="pl-s"&gt;'/websocket'&lt;/span&gt;, handler)
&lt;span class="pl-k"&gt;* &lt;/span&gt;socket.send(&lt;span class="pl-s"&gt;'Billie'&lt;/span&gt;)
&lt;span class="pl-k"&gt;* &lt;/span&gt;def result = socket.listen(5000)
&lt;span class="pl-k"&gt;* &lt;/span&gt;match result == &lt;span class="pl-s"&gt;'hello Billie !'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For handling binary messages, the same &lt;code&gt;karate.webSocket()&lt;/code&gt; method signatures exist for &lt;code&gt;karate.webSocketBinary()&lt;/code&gt;. Refer to these examples for more: &lt;a href="karate-demo/src/test/java/demo/websocket/echo.feature"&gt;&lt;code&gt;echo.feature&lt;/code&gt;&lt;/a&gt; | &lt;a href="karate-demo/src/test/java/demo/websocket/websocket.feature"&gt;&lt;code&gt;websocket.feature&lt;/code&gt;&lt;/a&gt;. Note that any websocket instances created will be auto-closed at the end of the &lt;code&gt;Scenario&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tags" class="anchor" aria-hidden="true" href="#tags"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tags&lt;/h2&gt;
&lt;p&gt;Gherkin has a great way to sprinkle meta-data into test-scripts - which gives you some interesting options when running tests in bulk.  The most common use-case would be to partition your tests into 'smoke', 'regression' and the like - which enables being able to selectively execute a sub-set of tests.&lt;/p&gt;
&lt;p&gt;The documentation on how to run tests via the &lt;a href="#test-suites"&gt;command line&lt;/a&gt; has an example of how to use tags to decide which tests to &lt;em&gt;not&lt;/em&gt; run (or ignore). Also see &lt;a href="karate-demo/src/test/java/demo/tags/first.feature"&gt;&lt;code&gt;first.feature&lt;/code&gt;&lt;/a&gt; and &lt;a href="karate-demo/src/test/java/demo/tags/second.feature"&gt;&lt;code&gt;second.feature&lt;/code&gt;&lt;/a&gt; in the &lt;a href="karate-demo"&gt;demos&lt;/a&gt;. If you find yourself juggling multiple tags with logical &lt;code&gt;AND&lt;/code&gt; and &lt;code&gt;OR&lt;/code&gt; complexity, refer to this &lt;a href="https://stackoverflow.com/a/34543352/143475" rel="nofollow"&gt;Stack Overflow answer&lt;/a&gt; and this &lt;a href="https://testingneeds.wordpress.com/2015/09/15/junit-runner-with-cucumberoptions/" rel="nofollow"&gt;blog post&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For advanced users, Karate supports being able to query for tags within a test, and even tags in a &lt;code&gt;@name=value&lt;/code&gt; form. Refer to &lt;a href="#karate-tags"&gt;&lt;code&gt;karate.tags&lt;/code&gt;&lt;/a&gt; and &lt;a href="#karate-tagvalues"&gt;&lt;code&gt;karate.tagValues&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-tags-and-examples" class="anchor" aria-hidden="true" href="#tags-and-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tags And Examples&lt;/h3&gt;
&lt;p&gt;A little-known capability of the Cucumber / Gherkin syntax is to be able to tag even specific rows in a bunch of examples ! You have to repeat the &lt;code&gt;Examples&lt;/code&gt; section for each tag. The example below combines this with the advanced features described above.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Scenario Outline&lt;/span&gt;:&lt;span class="pl-s"&gt; examples partitioned by tag&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def vals = karate.tagValues
&lt;span class="pl-k"&gt;* &lt;/span&gt;match vals.region[0] == &lt;span class="pl-s"&gt;'&amp;lt;expected&amp;gt;'&lt;/span&gt;

  &lt;span class="pl-k"&gt;@region=US&lt;/span&gt;
  &lt;span class="pl-k"&gt;Examples&lt;/span&gt;:
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;expected&lt;/span&gt; |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;US&lt;/span&gt;       |&lt;/span&gt;

  &lt;span class="pl-k"&gt;@region=GB&lt;/span&gt;
  &lt;span class="pl-k"&gt;Examples&lt;/span&gt;:
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;expected&lt;/span&gt; |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;GB&lt;/span&gt;       |&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-dynamic-port-numbers" class="anchor" aria-hidden="true" href="#dynamic-port-numbers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dynamic Port Numbers&lt;/h2&gt;
&lt;p&gt;In situations where you start an (embedded) application server as part of the test set-up phase, a typical challenge is that the HTTP port may be determined at run-time. So how can you get this value injected into the Karate configuration ?&lt;/p&gt;
&lt;p&gt;It so happens that the &lt;a href="#the-karate-object"&gt;&lt;code&gt;karate&lt;/code&gt;&lt;/a&gt; object has a field called &lt;code&gt;properties&lt;/code&gt; which can read a Java system-property by name like this: &lt;a href="#karate-properties"&gt;&lt;code&gt;karate.properties['myName']&lt;/code&gt;&lt;/a&gt;. Since the &lt;code&gt;karate&lt;/code&gt; object is injected within &lt;a href="#configuration"&gt;&lt;code&gt;karate-config.js&lt;/code&gt;&lt;/a&gt; on start-up, it is a simple and effective way for other processes within the same JVM to pass configuration values to Karate at run-time. Refer to the 'demo' &lt;a href="karate-demo/src/test/java/karate-config.js"&gt;&lt;code&gt;karate-config.js&lt;/code&gt;&lt;/a&gt; for an example and how the &lt;code&gt;demo.server.port&lt;/code&gt; system-property is set-up in the test runner: &lt;a href="karate-demo/src/test/java/demo/TestBase.java"&gt;&lt;code&gt;TestBase.java&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-java-api" class="anchor" aria-hidden="true" href="#java-api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Java API&lt;/h2&gt;
&lt;p&gt;It should be clear now that Karate provides a super-simple way to make HTTP requests compared to how you would have done so in Java. It is also possible to invoke a feature file via a Java API which can be very useful in some test-automation situations.&lt;/p&gt;
&lt;p&gt;A common use case is to mix API-calls into a larger test-suite, for example a Selenium or WebDriver UI test. So you can use Karate to set-up data via API calls, then run the UI test-automation, and finally again use Karate to assert that the system-state is as expected. Note that you can even include calls to a database from Karate using &lt;a href="#calling-java"&gt;Java interop&lt;/a&gt;. And &lt;a href="karate-demo/src/test/java/demo/dogs/dogs.feature"&gt;this example&lt;/a&gt; may make it clear why using Karate itself to drive even your UI-tests may be a good idea.&lt;/p&gt;
&lt;p&gt;There are two static methods in &lt;code&gt;com.intuit.karate.Runner&lt;/code&gt; (&lt;code&gt;runFeature()&lt;/code&gt; and &lt;code&gt;runClasspathFeature()&lt;/code&gt;) which are best explained in this demo unit-test: &lt;a href="karate-demo/src/test/java/demo/java/JavaApiTest.java"&gt;&lt;code&gt;JavaApiTest.java&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can optionally pass in variable values or over-ride config via a &lt;code&gt;HashMap&lt;/code&gt; or leave the second-last argument as &lt;code&gt;null&lt;/code&gt;. The variable state after feature execution would be returned as a &lt;code&gt;Map&amp;lt;String, Object&amp;gt;&lt;/code&gt;. The last &lt;code&gt;boolean&lt;/code&gt; argument is whether the &lt;a href="#configuration"&gt;&lt;code&gt;karate-config.js&lt;/code&gt;&lt;/a&gt; should be processed or not. Refer to the documentation on &lt;a href="#type-conversion"&gt;type-conversion&lt;/a&gt; to make sure you can 'unpack' data returned from Karate correctly, especially when dealing with XML.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-hooks" class="anchor" aria-hidden="true" href="#hooks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hooks&lt;/h2&gt;
&lt;p&gt;If you are looking for &lt;a href="http://toolsqa.com/cucumber/cucumber-hooks/" rel="nofollow"&gt;Cucumber 'hooks'&lt;/a&gt; Karate does not support them, mainly because they depend on Java code, which goes against the Karate Way™.&lt;/p&gt;
&lt;p&gt;Instead, Karate gives you all you need as part of the syntax. Here is a summary:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;To Run Some Code&lt;/th&gt;
&lt;th&gt;How&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Before &lt;em&gt;everything&lt;/em&gt; (or 'globally' once)&lt;/td&gt;
&lt;td&gt;Use &lt;a href="#karate-callsingle"&gt;&lt;code&gt;karate.callSingle()&lt;/code&gt;&lt;/a&gt; in &lt;a href="#karate-configjs"&gt;&lt;code&gt;karate-config.js&lt;/code&gt;&lt;/a&gt;. Only recommended for advanced users, but this guarantees a routine is run only once, &lt;em&gt;even&lt;/em&gt; when &lt;a href="#parallel-execution"&gt;running tests in parallel&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Before every &lt;code&gt;Scenario&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Use the &lt;a href="#script-structure"&gt;&lt;code&gt;Background&lt;/code&gt;&lt;/a&gt;. Note that &lt;a href="#karate-configjs"&gt;&lt;code&gt;karate-config.js&lt;/code&gt;&lt;/a&gt; is processed before &lt;em&gt;every&lt;/em&gt; &lt;code&gt;Scenario&lt;/code&gt; - so you can choose to put "global" config here, for example using &lt;a href="#karate-configure"&gt;&lt;code&gt;karate.configure()&lt;/code&gt;&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Once (or at the start of) every &lt;code&gt;Feature&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Use a &lt;a href="#callonce"&gt;&lt;code&gt;callonce&lt;/code&gt;&lt;/a&gt; in the &lt;a href="#script-structure"&gt;&lt;code&gt;Background&lt;/code&gt;&lt;/a&gt;. The advantage is that you can set up variables (using &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt; if needed) which can be used in all &lt;code&gt;Scenario&lt;/code&gt;-s within that &lt;code&gt;Feature&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;After every &lt;code&gt;Scenario&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#configure"&gt;&lt;code&gt;configure afterScenario&lt;/code&gt;&lt;/a&gt; (see &lt;a href="karate-demo/src/test/java/demo/hooks/hooks.feature"&gt;example&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;At the end of the &lt;code&gt;Feature&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#configure"&gt;&lt;code&gt;configure afterFeature&lt;/code&gt;&lt;/a&gt; (see &lt;a href="karate-demo/src/test/java/demo/hooks/hooks.feature"&gt;example&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-data-driven-tests" class="anchor" aria-hidden="true" href="#data-driven-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Driven Tests&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-the-cucumber-way" class="anchor" aria-hidden="true" href="#the-cucumber-way"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Cucumber Way&lt;/h3&gt;
&lt;p&gt;Cucumber has a concept of &lt;a href="https://docs.cucumber.io/gherkin/reference/#scenario-outline" rel="nofollow"&gt;Scenario Outlines&lt;/a&gt; where you can re-use a set of data-driven steps and assertions, and the data can be declared in a very user-friendly fashion. Observe the usage of &lt;code&gt;Scenario Outline:&lt;/code&gt; instead of &lt;code&gt;Scenario:&lt;/code&gt;, and the new &lt;code&gt;Examples:&lt;/code&gt; section.&lt;/p&gt;
&lt;p&gt;You should take a minute to compare this with the &lt;a href="https://github.com/basdijkstra/rest-assured-workshop/blob/d9734da98bfcd8087055bdcd78545581dd23cb77/src/test/java/answers/RestAssuredAnswers2Test.java"&gt;exact same example implemented in REST-assured and TestNG&lt;/a&gt;. Note that this example only does a "string equals" check on &lt;em&gt;parts&lt;/em&gt; of the JSON, but with Karate you are always encouraged to match the &lt;em&gt;entire&lt;/em&gt; payload in one step.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Feature&lt;/span&gt;:&lt;span class="pl-s"&gt; karate answers 2&lt;/span&gt;

&lt;span class="pl-k"&gt;Background&lt;/span&gt;:
  &lt;span class="pl-k"&gt;* &lt;/span&gt;url &lt;span class="pl-s"&gt;'http://localhost:8080'&lt;/span&gt;

&lt;span class="pl-k"&gt;Scenario Outline&lt;/span&gt;:&lt;span class="pl-s"&gt; given circuit name, validate country&lt;/span&gt;
  &lt;span class="pl-k"&gt;Given &lt;/span&gt;path &lt;span class="pl-s"&gt;'api/f1/circuits/&amp;lt;name&amp;gt;.json'&lt;/span&gt;
  &lt;span class="pl-k"&gt;When &lt;/span&gt;method get
  &lt;span class="pl-k"&gt;Then &lt;/span&gt;match $.MRData.CircuitTable.Circuits[0].Location.country == &lt;span class="pl-s"&gt;'&amp;lt;country&amp;gt;'&lt;/span&gt;

  &lt;span class="pl-k"&gt;Examples&lt;/span&gt;:
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;name&lt;/span&gt;   | &lt;span class="pl-s1"&gt;country&lt;/span&gt;  |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;monza&lt;/span&gt;  | &lt;span class="pl-s1"&gt;Italy&lt;/span&gt;    |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;spa&lt;/span&gt;    | &lt;span class="pl-s1"&gt;Belgium&lt;/span&gt;  |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;sepang&lt;/span&gt; | &lt;span class="pl-s1"&gt;Malaysia&lt;/span&gt; |&lt;/span&gt;

&lt;span class="pl-k"&gt;Scenario Outline&lt;/span&gt;:&lt;span class="pl-s"&gt; given race number, validate number of pitstops for Max Verstappen in 2015&lt;/span&gt;
  &lt;span class="pl-k"&gt;Given &lt;/span&gt;path &lt;span class="pl-s"&gt;'api/f1/2015/&amp;lt;race&amp;gt;/drivers/max_verstappen/pitstops.json'&lt;/span&gt;
  &lt;span class="pl-k"&gt;When &lt;/span&gt;method get
  &lt;span class="pl-k"&gt;Then &lt;/span&gt;assert response.MRData.RaceTable.Races[0].PitStops.length == &lt;span class="pl-smi"&gt;&amp;lt;stops&amp;gt;&lt;/span&gt;

  &lt;span class="pl-k"&gt;Examples&lt;/span&gt;:
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;race&lt;/span&gt; | &lt;span class="pl-s1"&gt;stops&lt;/span&gt; |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;1&lt;/span&gt;    | &lt;span class="pl-s1"&gt;1&lt;/span&gt;     |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;2&lt;/span&gt;    | &lt;span class="pl-s1"&gt;3&lt;/span&gt;     |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;3&lt;/span&gt;    | &lt;span class="pl-s1"&gt;2&lt;/span&gt;     |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;4&lt;/span&gt;    | &lt;span class="pl-s1"&gt;2&lt;/span&gt;     |&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is great for testing boundary conditions against a single end-point, with the added bonus that your test becomes even more readable. This approach can certainly enable product-owners or domain-experts who are not programmer-folk, to review, and even collaborate on test-scenarios and scripts.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-scenario-outline-enhancements" class="anchor" aria-hidden="true" href="#scenario-outline-enhancements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Scenario Outline Enhancements&lt;/h3&gt;
&lt;p&gt;Karate has enhanced the Cucumber &lt;code&gt;Scenario Outline&lt;/code&gt; as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Type Hints&lt;/strong&gt;: if the &lt;code&gt;Examples&lt;/code&gt; column header has a &lt;code&gt;!&lt;/code&gt; appended, each value will be evaluated as a JavaScript data-type (number, boolean, or &lt;em&gt;even&lt;/em&gt; in-line JSON) - else it defaults to string.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Magic Variables&lt;/strong&gt;: &lt;code&gt;__row&lt;/code&gt; gives you the entire row as a JSON object, and &lt;code&gt;__num&lt;/code&gt; gives you the row index (the first row is &lt;code&gt;0&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Auto Variables&lt;/strong&gt;: in addition to &lt;code&gt;__row&lt;/code&gt;, each column key-value will be available as a separate &lt;a href="#def"&gt;variable&lt;/a&gt;, which greatly simplifies JSON manipulation - especially when you want to re-use JSON &lt;a href="#reading-files"&gt;files&lt;/a&gt; containing &lt;a href="#embedded-expressions"&gt;embedded expressions&lt;/a&gt;.
&lt;ul&gt;
&lt;li&gt;You can disable the "auto variables" behavior by setting the &lt;code&gt;outlineVariablesAuto&lt;/code&gt; &lt;a href="#configure"&gt;&lt;code&gt;configure&lt;/code&gt; setting&lt;/a&gt; to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Any empty cells will result in a &lt;code&gt;null&lt;/code&gt; value for that column-key&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These are best explained with &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/outline.feature"&gt;examples&lt;/a&gt;. You can choose between the string-placeholder style &lt;code&gt;&amp;lt;foo&amp;gt;&lt;/code&gt; or &lt;em&gt;directly&lt;/em&gt; refer to the &lt;a href="#def"&gt;variable&lt;/a&gt; &lt;code&gt;foo&lt;/code&gt; (or even the &lt;em&gt;whole row&lt;/em&gt; JSON as &lt;code&gt;__row&lt;/code&gt;) in JSON-friendly &lt;a href="#karate-expressions"&gt;expressions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that even the scenario name can accept placeholders - which is very useful in reports.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Scenario Outline&lt;/span&gt;:&lt;span class="pl-s"&gt; name is &amp;lt;name&amp;gt; and age is &amp;lt;age&amp;gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;* &lt;/span&gt;def temp = &lt;span class="pl-s"&gt;'&amp;lt;name&amp;gt;'&lt;/span&gt;
  &lt;span class="pl-k"&gt;* &lt;/span&gt;match temp == name
  &lt;span class="pl-k"&gt;* &lt;/span&gt;match temp == __row.name
  &lt;span class="pl-k"&gt;* &lt;/span&gt;def expected = __num == 0 ? &lt;span class="pl-s"&gt;'name is Bob and age is 5'&lt;/span&gt; : &lt;span class="pl-s"&gt;'name is Nyan and age is 6'&lt;/span&gt;
  &lt;span class="pl-k"&gt;* &lt;/span&gt;match expected == karate.info.scenarioName

  &lt;span class="pl-k"&gt;Examples&lt;/span&gt;:
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;name&lt;/span&gt; | &lt;span class="pl-s1"&gt;age&lt;/span&gt; |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;Bob&lt;/span&gt;  | &lt;span class="pl-s1"&gt;5&lt;/span&gt;   |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;Nyan&lt;/span&gt; | &lt;span class="pl-s1"&gt;6&lt;/span&gt;   |&lt;/span&gt;

&lt;span class="pl-k"&gt;Scenario Outline&lt;/span&gt;:&lt;span class="pl-s"&gt; magic variables with type hints&lt;/span&gt;
  &lt;span class="pl-k"&gt;* &lt;/span&gt;def expected = [{ name: &lt;span class="pl-s"&gt;'Bob'&lt;/span&gt;, age: 5 }, { name: &lt;span class="pl-s"&gt;'Nyan'&lt;/span&gt;, age: 6 }]
  &lt;span class="pl-k"&gt;* &lt;/span&gt;match __row == expected[__num]

  &lt;span class="pl-k"&gt;Examples&lt;/span&gt;:
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;name&lt;/span&gt; | &lt;span class="pl-s1"&gt;age&lt;/span&gt;! |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;Bob&lt;/span&gt;  | &lt;span class="pl-s1"&gt;5&lt;/span&gt;    |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;Nyan&lt;/span&gt; | &lt;span class="pl-s1"&gt;6&lt;/span&gt;    |&lt;/span&gt;

&lt;span class="pl-k"&gt;Scenario Outline&lt;/span&gt;:&lt;span class="pl-s"&gt; embedded expressions and type hints&lt;/span&gt;
  &lt;span class="pl-k"&gt;* &lt;/span&gt;match __row == { name: &lt;span class="pl-s"&gt;'#(name)'&lt;/span&gt;, alive: &lt;span class="pl-s"&gt;'#boolean'&lt;/span&gt; }

  &lt;span class="pl-k"&gt;Examples&lt;/span&gt;:
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;name&lt;/span&gt; | &lt;span class="pl-s1"&gt;alive&lt;/span&gt;! |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;Bob&lt;/span&gt;  | &lt;span class="pl-s1"&gt;false&lt;/span&gt;  |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;Nyan&lt;/span&gt; | &lt;span class="pl-s1"&gt;true&lt;/span&gt;   |&lt;/span&gt;

&lt;span class="pl-k"&gt;Scenario Outline&lt;/span&gt;:&lt;span class="pl-s"&gt; inline json&lt;/span&gt;
  &lt;span class="pl-k"&gt;* &lt;/span&gt;match __row == { first: &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;, second: { a: 1 } }
  &lt;span class="pl-k"&gt;* &lt;/span&gt;match first == &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;
  &lt;span class="pl-k"&gt;* &lt;/span&gt;match second == { a: 1 }

  &lt;span class="pl-k"&gt;Examples&lt;/span&gt;:
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;first&lt;/span&gt;  | &lt;span class="pl-s1"&gt;second&lt;/span&gt;!  |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;hello&lt;/span&gt;  | { &lt;span class="pl-s1"&gt;a&lt;/span&gt;: &lt;span class="pl-s1"&gt;1&lt;/span&gt; } |&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For another example, see: &lt;a href="karate-demo/src/test/java/demo/outline/examples.feature"&gt;&lt;code&gt;examples.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-the-karate-way" class="anchor" aria-hidden="true" href="#the-karate-way"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Karate Way&lt;/h3&gt;
&lt;p&gt;The limitation of the Cucumber &lt;code&gt;Scenario Outline:&lt;/code&gt; (seen above) is that the number of rows in the &lt;code&gt;Examples:&lt;/code&gt; is fixed. But take a look at how Karate can &lt;a href="#data-driven-features"&gt;loop over a &lt;code&gt;*.feature&lt;/code&gt; file&lt;/a&gt; for each object in a JSON array - which gives you dynamic data-driven testing, if you need it. For advanced examples, refer to some of the scenarios within this &lt;a href="karate-demo"&gt;demo&lt;/a&gt;: &lt;a href="karate-demo/src/test/java/demo/search/dynamic-params.feature#L70"&gt;&lt;code&gt;dynamic-params.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also see the option below, where you can data-drive an &lt;code&gt;Examples:&lt;/code&gt; table using JSON.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-dynamic-scenario-outline" class="anchor" aria-hidden="true" href="#dynamic-scenario-outline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dynamic Scenario Outline&lt;/h3&gt;
&lt;p&gt;You can feed an &lt;code&gt;Examples&lt;/code&gt; table from a JSON array, which is great for those situations where the table-content is dynamically resolved at run-time. This capability is triggered when the table consists of a single "cell", i.e. there is exactly one row and one column in the table.  Here is an example:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Feature&lt;/span&gt;:&lt;span class="pl-s"&gt; scenario outline using a dynamic table&lt;/span&gt;

&lt;span class="pl-k"&gt;Background&lt;/span&gt;:
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def kittens = read(&lt;span class="pl-s"&gt;'../callarray/kittens.json'&lt;/span&gt;)

&lt;span class="pl-k"&gt;Scenario Outline&lt;/span&gt;:&lt;span class="pl-s"&gt; cat name: &amp;lt;name&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;Given &lt;/span&gt;url demoBaseUrl
    &lt;span class="pl-k"&gt;And &lt;/span&gt;path &lt;span class="pl-s"&gt;'cats'&lt;/span&gt;
    &lt;span class="pl-k"&gt;And &lt;/span&gt;request { name: &lt;span class="pl-s"&gt;'&amp;lt;name&amp;gt;'&lt;/span&gt; }
    &lt;span class="pl-k"&gt;When &lt;/span&gt;method post
    &lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200
    &lt;span class="pl-k"&gt;And &lt;/span&gt;match response == { id: &lt;span class="pl-s"&gt;'#number'&lt;/span&gt;, name: &lt;span class="pl-s"&gt;'&amp;lt;name&amp;gt;'&lt;/span&gt; }

&lt;span class="pl-c"&gt;    # the single cell can be any valid karate expression&lt;/span&gt;
&lt;span class="pl-c"&gt;    # and even reference a variable defined in the Background&lt;/span&gt;
    &lt;span class="pl-k"&gt;Examples&lt;/span&gt;:
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;kittens&lt;/span&gt; |&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The great thing about this approach is that you can set-up the JSON array using the &lt;code&gt;Background&lt;/code&gt; section. Any &lt;a href="#karate-expressions"&gt;Karate expression&lt;/a&gt; can be used in the "cell expression", and you can even use &lt;a href="#calling-java"&gt;Java-interop&lt;/a&gt; to use external data-sources such as a database. Note that Karate has built-in support for &lt;a href="#csv-files"&gt;CSV files&lt;/a&gt; and here is an example: &lt;a href="karate-demo/src/test/java/demo/outline/dynamic-csv.feature"&gt;&lt;code&gt;dynamic-csv.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>intuit</author><guid isPermaLink="false">https://github.com/intuit/karate</guid><pubDate>Tue, 28 Jan 2020 00:21:00 GMT</pubDate></item><item><title>bcgit/bc-java #22 in Java, This week</title><link>https://github.com/bcgit/bc-java</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;p&gt;No README was found for this project.&lt;/p&gt;</description><author>bcgit</author><guid isPermaLink="false">https://github.com/bcgit/bc-java</guid><pubDate>Tue, 28 Jan 2020 00:22:00 GMT</pubDate></item><item><title>dbeaver/dbeaver #23 in Java, This week</title><link>https://github.com/dbeaver/dbeaver</link><description>&lt;p&gt;&lt;i&gt;Free universal database tool and SQL client&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://twitter.com/dbeaver_news" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/48049253282de67a453f9f86321d8489f205e845/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f68747470732f747769747465722e636f6d2f646265617665725f6e6577732e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f77253230253430646265617665725f6e657773" alt="Twitter URL" data-canonical-src="https://img.shields.io/twitter/url/https/twitter.com/dbeaver_news.svg?style=social&amp;amp;label=Follow%20%40dbeaver_news" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/dbeaver/dbeaver" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/19dab4ffb915d171852ea2bcc596be41f54ac70e/68747470733a2f2f7472617669732d63692e6f72672f646265617665722f646265617665722e7376673f6272616e63683d646576656c" alt="Build Status" data-canonical-src="https://travis-ci.org/dbeaver/dbeaver.svg?branch=devel" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.codacy.com/manual/serge/dbeaver?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=dbeaver/dbeaver&amp;amp;utm_campaign=Badge_Grade" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/047e4327023d87153a89100f4049f5ade75ddd5f/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3730666265353538383538363461613338643234366238313830663539313661" alt="Codacy Badge" data-canonical-src="https://api.codacy.com/project/badge/Grade/70fbe55885864aa38d246b8180f5916a" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/31dd9f5cdb93eb955c6c3dad8a9c6809a1ae6c7d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f63726f6e6e2d64652f6a6972612d73796e632e737667" alt="Apache 2.0" data-canonical-src="https://img.shields.io/github/license/cronn-de/jira-sync.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/dbeaver/dbeaver/wiki/images/dbeaver-icon-64x64.png"&gt;&lt;img src="https://github.com/dbeaver/dbeaver/wiki/images/dbeaver-icon-64x64.png" align="right" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-dbeaver" class="anchor" aria-hidden="true" href="#dbeaver"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DBeaver&lt;/h1&gt;
&lt;p&gt;Free multi-platform database tool for developers, SQL programmers, database administrators and analysts.
Supports any database which has JDBC driver (which basically means - ANY database). EE version also supports non-JDBC datasources (WMI, MongoDB, Cassandra, Redis).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Has a lot of &lt;a href="https://github.com/dbeaver/dbeaver/wiki"&gt;features&lt;/a&gt; including metadata editor, SQL editor, rich data editor, ERD, data export/import/migration, SQL execution plans, etc.&lt;/li&gt;
&lt;li&gt;Based on &lt;a href="http://www.eclipse.org/" rel="nofollow"&gt;Eclipse&lt;/a&gt; platform.&lt;/li&gt;
&lt;li&gt;Uses plugins architecture and provides additional functionality for the following databases: MySQL/MariaDB, PostgreSQL, Greenplum, Oracle, DB2 LUW, Exasol, SQL Server, Sybase/SAP ASE, SQLite, Firebird, H2, HSQLDB, Derby, Teradata, Vertica, Netezza, Informix, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://dbeaver.io/product/dbeaver-ss-mock.png" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4d8aa54a7772be3934b69178e746b0ba0cee6126/68747470733a2f2f646265617665722e696f2f70726f647563742f646265617665722d73732d6d6f636b2e706e67" width="400" data-canonical-src="https://dbeaver.io/product/dbeaver-ss-mock.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dbeaver.io/product/dbeaver-ss-erd.png" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/617216bffca4d1b52a7e75c5d8e686daca82003b/68747470733a2f2f646265617665722e696f2f70726f647563742f646265617665722d73732d6572642e706e67" width="400" data-canonical-src="https://dbeaver.io/product/dbeaver-ss-erd.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dbeaver.io/product/dbeaver-ss-classic-new.png" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/62ae91ba8fda778c155ddaddf66f7ca3b1c57956/68747470733a2f2f646265617665722e696f2f70726f647563742f646265617665722d73732d636c61737369632d6e65772e706e67" width="400" data-canonical-src="https://dbeaver.io/product/dbeaver-ss-classic-new.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dbeaver.io/product/dbeaver-ss-dark-new.png" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/be67a368628000f9568c0613bbbce5f691f56399/68747470733a2f2f646265617665722e696f2f70726f647563742f646265617665722d73732d6461726b2d6e65772e706e67" width="400" data-canonical-src="https://dbeaver.io/product/dbeaver-ss-dark-new.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-download" class="anchor" aria-hidden="true" href="#download"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download&lt;/h2&gt;
&lt;p&gt;You can download prebuilt binaries from &lt;a href="https://dbeaver.io/download" rel="nofollow"&gt;official web site&lt;/a&gt; or directly from &lt;a href="https://github.com/dbeaver/dbeaver/releases"&gt;GitHub releases&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-running" class="anchor" aria-hidden="true" href="#running"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running&lt;/h2&gt;
&lt;p&gt;DBeaver requires Java (JRE) 1.8+ to run.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Windows&lt;/b&gt; and &lt;b&gt;MacOS X&lt;/b&gt; installers include JRE so just use them and don't think about internals.&lt;/li&gt;
&lt;li&gt;On &lt;b&gt;Linux&lt;/b&gt; you may need to install Java manually (usually by running &lt;code&gt;sudo apt-get install default-jre&lt;/code&gt; or something similar).&lt;/li&gt;
&lt;li&gt;If you don't use installer (on Windows or Mac OS X) you may need to download Java (JDK) from &lt;a href="https://jdk.java.net/java-se-ri/8" rel="nofollow"&gt;OpenJDK web site&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dbeaver/dbeaver/wiki"&gt;WIKI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dbeaver/dbeaver/issues"&gt;Issue tracker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites:&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Java (JDK) 8 or Java 9.&lt;/li&gt;
&lt;li&gt;Apache Maven 3+&lt;/li&gt;
&lt;li&gt;Internet access&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;&lt;a id="user-content-build" class="anchor" aria-hidden="true" href="#build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/dbeaver/dbeaver.git dbeaver
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; dbeaver
mvn package&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Binaries are in &lt;code&gt;product/standalone/target/products&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;If you have any questions, suggestions, ideas, etc - &lt;a href="mailto:dbeaver@jkiss.org"&gt;write us&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Pull requests are welcome.&lt;/li&gt;
&lt;li&gt;Visit &lt;a href="https://dbeaver.io" rel="nofollow"&gt;https://dbeaver.io&lt;/a&gt; or &lt;a href="https://dbeaver.com" rel="nofollow"&gt;https://dbeaver.com&lt;/a&gt; for more information.&lt;/li&gt;
&lt;li&gt;Follow us on Twitter: &lt;a href="https://twitter.com/dbeaver_news/" rel="nofollow"&gt;https://twitter.com/dbeaver_news/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Thanks for using DBeaver! Star if you like it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contribution-help-the-beaver" class="anchor" aria-hidden="true" href="#contribution-help-the-beaver"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution: help the Beaver!&lt;/h2&gt;
&lt;p&gt;Hooray, we have reached 10k of stars on GitHub and continue to grow!
That's really cool, we are glad that you like DBeaver.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We are actively looking for new source code contributors. We have added labels “Good first issue” and “Help wanted” to some tickets. If you want to be a part of our development team just be brave and take a ticket.&lt;/li&gt;
&lt;li&gt;You can buy &lt;a href="https://dbeaver.com/download" rel="nofollow"&gt;DBeaver EE&lt;/a&gt; version. It includes all features of CE + NoSQL databases support + EE extensions + official online support. Also, licensed users have priorities in bug fixes and new features development.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thank you!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dbeaver/dbeaver/graphs/contributors"&gt;DBeaver Team&lt;/a&gt; (contributors)&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>dbeaver</author><guid isPermaLink="false">https://github.com/dbeaver/dbeaver</guid><pubDate>Tue, 28 Jan 2020 00:23:00 GMT</pubDate></item><item><title>prestodb/presto #24 in Java, This week</title><link>https://github.com/prestodb/presto</link><description>&lt;p&gt;&lt;i&gt;The official home of the Presto distributed SQL query engine for big data&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-presto-" class="anchor" aria-hidden="true" href="#presto-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Presto &lt;a href="https://travis-ci.org/prestodb/presto" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b9d2344f5fa419f5c28c713dad9ba5883f70b0d9/68747470733a2f2f7472617669732d63692e6f72672f70726573746f64622f70726573746f2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/prestodb/presto.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Presto is a distributed SQL query engine for big data.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="https://prestodb.github.io/docs/current/" rel="nofollow"&gt;User Manual&lt;/a&gt; for deployment instructions and end user documentation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Mac OS X or Linux&lt;/li&gt;
&lt;li&gt;Java 8 Update 151 or higher (8u151+), 64-bit. Both Oracle JDK and OpenJDK are supported.&lt;/li&gt;
&lt;li&gt;Maven 3.3.9+ (for building)&lt;/li&gt;
&lt;li&gt;Python 2.4+ (for running with the launcher script)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building-presto" class="anchor" aria-hidden="true" href="#building-presto"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Presto&lt;/h2&gt;
&lt;p&gt;Presto is a standard Maven project. Simply run the following command from the project root directory:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./mvnw clean install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On the first build, Maven will download all the dependencies from the internet and cache them in the local repository (&lt;code&gt;~/.m2/repository&lt;/code&gt;), which can take a considerable amount of time. Subsequent builds will be faster.&lt;/p&gt;
&lt;p&gt;Presto has a comprehensive set of unit tests that can take several minutes to run. You can disable the tests when building:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./mvnw clean install -DskipTests
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-running-presto-in-your-ide" class="anchor" aria-hidden="true" href="#running-presto-in-your-ide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running Presto in your IDE&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h3&gt;
&lt;p&gt;After building Presto for the first time, you can load the project into your IDE and run the server. We recommend using &lt;a href="http://www.jetbrains.com/idea/" rel="nofollow"&gt;IntelliJ IDEA&lt;/a&gt;. Because Presto is a standard Maven project, you can import it into your IDE using the root &lt;code&gt;pom.xml&lt;/code&gt; file. In IntelliJ, choose Open Project from the Quick Start box or choose Open from the File menu and select the root &lt;code&gt;pom.xml&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;After opening the project in IntelliJ, double check that the Java SDK is properly configured for the project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open the File menu and select Project Structure&lt;/li&gt;
&lt;li&gt;In the SDKs section, ensure that a 1.8 JDK is selected (create one if none exist)&lt;/li&gt;
&lt;li&gt;In the Project section, ensure the Project language level is set to 8.0 as Presto makes use of several Java 8 language features&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Presto comes with sample configuration that should work out-of-the-box for development. Use the following options to create a run configuration:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Main Class: &lt;code&gt;com.facebook.presto.server.PrestoServer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;VM Options: &lt;code&gt;-ea -XX:+UseG1GC -XX:G1HeapRegionSize=32M -XX:+UseGCOverheadLimit -XX:+ExplicitGCInvokesConcurrent -Xmx2G -Dconfig=etc/config.properties -Dlog.levels-file=etc/log.properties&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Working directory: &lt;code&gt;$MODULE_DIR$&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use classpath of module: &lt;code&gt;presto-main&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The working directory should be the &lt;code&gt;presto-main&lt;/code&gt; subdirectory. In IntelliJ, using &lt;code&gt;$MODULE_DIR$&lt;/code&gt; accomplishes this automatically.&lt;/p&gt;
&lt;p&gt;Additionally, the Hive plugin must be configured with location of your Hive metastore Thrift service. Add the following to the list of VM options, replacing &lt;code&gt;localhost:9083&lt;/code&gt; with the correct host and port (or use the below value if you do not have a Hive metastore):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-Dhive.metastore.uri=thrift://localhost:9083
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-using-socks-for-hive-or-hdfs" class="anchor" aria-hidden="true" href="#using-socks-for-hive-or-hdfs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using SOCKS for Hive or HDFS&lt;/h3&gt;
&lt;p&gt;If your Hive metastore or HDFS cluster is not directly accessible to your local machine, you can use SSH port forwarding to access it. Setup a dynamic SOCKS proxy with SSH listening on local port 1080:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssh -v -N -D 1080 server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then add the following to the list of VM options:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-Dhive.metastore.thrift.client.socks-proxy=localhost:1080
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-running-the-cli" class="anchor" aria-hidden="true" href="#running-the-cli"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running the CLI&lt;/h3&gt;
&lt;p&gt;Start the CLI to connect to the server and run SQL queries:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;presto-cli/target/presto-cli-*-executable.jar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run a query to see the nodes in the cluster:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SELECT * FROM system.runtime.nodes;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the sample configuration, the Hive connector is mounted in the &lt;code&gt;hive&lt;/code&gt; catalog, so you can run the following queries to show the tables in the Hive database &lt;code&gt;default&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SHOW TABLES FROM hive.default;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-code-style" class="anchor" aria-hidden="true" href="#code-style"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Style&lt;/h2&gt;
&lt;p&gt;We recommend you use IntelliJ as your IDE. The code style template for the project can be found in the &lt;a href="https://github.com/airlift/codestyle"&gt;codestyle&lt;/a&gt; repository along with our general programming and Java guidelines. In addition to those you should also adhere to the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Alphabetize sections in the documentation source files (both in table of contents files and other regular documentation files). In general, alphabetize methods/variables/sections if such ordering already exists in the surrounding code.&lt;/li&gt;
&lt;li&gt;When appropriate, use the Java 8 stream API. However, note that the stream implementation does not perform well so avoid using it in inner loops or otherwise performance sensitive sections.&lt;/li&gt;
&lt;li&gt;Categorize errors when throwing exceptions. For example, PrestoException takes an error code as an argument, &lt;code&gt;PrestoException(HIVE_TOO_MANY_OPEN_PARTITIONS)&lt;/code&gt;. This categorization lets you generate reports so you can monitor the frequency of various failures.&lt;/li&gt;
&lt;li&gt;Ensure that all files have the appropriate license header; you can generate the license by running &lt;code&gt;mvn license:format&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Consider using String formatting (printf style formatting using the Java &lt;code&gt;Formatter&lt;/code&gt; class): &lt;code&gt;format("Session property %s is invalid: %s", name, value)&lt;/code&gt; (note that &lt;code&gt;format()&lt;/code&gt; should always be statically imported). Sometimes, if you only need to append something, consider using the &lt;code&gt;+&lt;/code&gt; operator.&lt;/li&gt;
&lt;li&gt;Avoid using the ternary operator except for trivial expressions.&lt;/li&gt;
&lt;li&gt;Use an assertion from Airlift's &lt;code&gt;Assertions&lt;/code&gt; class if there is one that covers your case rather than writing the assertion by hand. Over time we may move over to more fluent assertions like AssertJ.&lt;/li&gt;
&lt;li&gt;When writing a Git commit message, follow these &lt;a href="https://chris.beams.io/posts/git-commit/" rel="nofollow"&gt;guidelines&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building-the-web-ui" class="anchor" aria-hidden="true" href="#building-the-web-ui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the Web UI&lt;/h2&gt;
&lt;p&gt;The Presto Web UI is composed of several React components and is written in JSX and ES6. This source code is compiled and packaged into browser-compatible Javascript, which is then checked in to the Presto source code (in the &lt;code&gt;dist&lt;/code&gt; folder). You must have &lt;a href="https://nodejs.org/en/download/" rel="nofollow"&gt;Node.js&lt;/a&gt; and &lt;a href="https://yarnpkg.com/en/" rel="nofollow"&gt;Yarn&lt;/a&gt; installed to execute these commands. To update this folder after making changes, simply run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yarn --cwd presto-main/src/main/resources/webapp/src install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If no Javascript dependencies have changed (i.e., no changes to &lt;code&gt;package.json&lt;/code&gt;), it is faster to run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yarn --cwd presto-main/src/main/resources/webapp/src run package
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To simplify iteration, you can also run in &lt;code&gt;watch&lt;/code&gt; mode, which automatically re-compiles when changes to source files are detected:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yarn --cwd presto-main/src/main/resources/webapp/src run watch
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To iterate quickly, simply re-build the project in IntelliJ after packaging is complete. Project resources will be hot-reloaded and changes are reflected on browser refresh.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-release-notes" class="anchor" aria-hidden="true" href="#release-notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Release Notes&lt;/h2&gt;
&lt;p&gt;When authoring a pull request, the PR description should include its relevant release notes.
Follow &lt;a href="https://github.com/prestodb/presto/wiki/Release-Notes-Guidelines"&gt;Release Notes Guidelines&lt;/a&gt; when authoring release notes.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>prestodb</author><guid isPermaLink="false">https://github.com/prestodb/presto</guid><pubDate>Tue, 28 Jan 2020 00:24:00 GMT</pubDate></item><item><title>keycloak/keycloak #25 in Java, This week</title><link>https://github.com/keycloak/keycloak</link><description>&lt;p&gt;&lt;i&gt;Open Source Identity and Access Management For Modern Applications and Services&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-keycloak" class="anchor" aria-hidden="true" href="#keycloak"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keycloak&lt;/h1&gt;
&lt;p&gt;Keycloak is an Open Source Identity and Access Management solution for modern Applications and Services.&lt;/p&gt;
&lt;p&gt;This repository contains the source code for the Keycloak Server, Java adapters and the JavaScript adapter.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-help-and-documentation" class="anchor" aria-hidden="true" href="#help-and-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help and Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.keycloak.org/documentation.html" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/d/forum/keycloak-user" rel="nofollow"&gt;User Mailing List&lt;/a&gt; - Mailing list for help and general questions about Keycloak&lt;/li&gt;
&lt;li&gt;&lt;a href="https://issues.jboss.org/projects/KEYCLOAK" rel="nofollow"&gt;JIRA&lt;/a&gt; - Issue tracker for bugs and feature requests&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-reporting-security-vulnerabilities" class="anchor" aria-hidden="true" href="#reporting-security-vulnerabilities"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting Security Vulnerabilities&lt;/h2&gt;
&lt;p&gt;If you've found a security vulnerability, please look at the &lt;a href="http://www.keycloak.org/security.html" rel="nofollow"&gt;instructions on how to properly report it&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reporting-an-issue" class="anchor" aria-hidden="true" href="#reporting-an-issue"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting an issue&lt;/h2&gt;
&lt;p&gt;If you believe you have discovered a defect in Keycloak please open an issue in our &lt;a href="https://issues.jboss.org/projects/KEYCLOAK" rel="nofollow"&gt;Issue Tracker&lt;/a&gt;.
Please remember to provide a good summary, description as well as steps to reproduce the issue.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h2&gt;
&lt;p&gt;To run Keycloak download the distribution from our &lt;a href="https://www.keycloak.org/downloads.html" rel="nofollow"&gt;website&lt;/a&gt;. Unzip and run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bin/standalone.[sh|bat] 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternatively, you can use the Docker image by running:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run jboss/keycloak
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For more details refer to the &lt;a href="https://www.keycloak.org/documentation.html" rel="nofollow"&gt;Keycloak Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-from-source" class="anchor" aria-hidden="true" href="#building-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building from Source&lt;/h2&gt;
&lt;p&gt;To build from source refer to the &lt;a href="docs/building.md"&gt;building and working with the code base&lt;/a&gt; guide.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h3&gt;
&lt;p&gt;To run tests refer to the &lt;a href="docs/tests.md"&gt;running tests&lt;/a&gt; guide.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-writing-tests" class="anchor" aria-hidden="true" href="#writing-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Writing Tests&lt;/h3&gt;
&lt;p&gt;To write tests refer to the &lt;a href="docs/tests-development.md"&gt;writing tests&lt;/a&gt; guide.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Before contributing to Keycloak please read our &lt;a href="CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-other-keycloak-projects" class="anchor" aria-hidden="true" href="#other-keycloak-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Keycloak Projects&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/keycloak/keycloak"&gt;Keycloak&lt;/a&gt; - Keycloak Server and Java adapters&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keycloak/keycloak-documentation"&gt;Keycloak Documentation&lt;/a&gt; - Documentation for Keycloak&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keycloak/keycloak-quickstarts"&gt;Keycloak QuickStarts&lt;/a&gt; - QuickStarts for getting started with Keycloak&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keycloak/keycloak-containers"&gt;Keycloak Containers&lt;/a&gt; - Container images for Keycloak&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keycloak/keycloak-gatekeeper"&gt;Keycloak Gatekeeper&lt;/a&gt; - Proxy service to secure apps and services with Keycloak&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keycloak/keycloak-nodejs-connect"&gt;Keycloak Node.js Connect&lt;/a&gt; - Node.js adapter for Keycloak&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keycloak/keycloak-nodejs-admin-client"&gt;Keycloak Node.js Admin Client&lt;/a&gt; - Node.js library for Keycloak Admin REST API&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;Apache License, Version 2.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>keycloak</author><guid isPermaLink="false">https://github.com/keycloak/keycloak</guid><pubDate>Tue, 28 Jan 2020 00:25:00 GMT</pubDate></item></channel></rss>