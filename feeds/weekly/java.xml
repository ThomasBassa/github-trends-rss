<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Java, This week</title><link>https://github.com/trending/java?since=weekly</link><description>The top repositories on GitHub for java, measured weekly</description><pubDate>Thu, 06 Feb 2020 01:10:43 GMT</pubDate><lastBuildDate>Thu, 06 Feb 2020 01:10:43 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>williamfiset/Algorithms #1 in Java, This week</title><link>https://github.com/williamfiset/Algorithms</link><description>&lt;p&gt;&lt;i&gt;A collection of algorithms and data structures&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/williamfiset/Algorithms" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/84038731da1a8d0d43eb719f815d094cb6ce08c7/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f77696c6c69616d66697365742f416c676f726974686d732e737667" alt="Travis" data-canonical-src="https://img.shields.io/travis/williamfiset/Algorithms.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/MIT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3ccf4c50a1576b0dd30b286717451fa56b783512/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667" alt="License: MIT" data-canonical-src="https://img.shields.io/badge/License-MIT-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-algorithms--data-structures-project" class="anchor" aria-hidden="true" href="#algorithms--data-structures-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Algorithms &amp;amp; data structures project&lt;/h1&gt;
&lt;p&gt;Algorithms and data structures are fundamental to efficient code and good software design. Creating and designing excellent algorithms is required for being an exemplary programmer. This repository's goal is to demonstrate how to correctly implement common data structures and algorithms in the simplest and most elegant ways.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;This repository is contribution friendly &lt;g-emoji class="g-emoji" alias="smiley" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f603.png"&gt;😃&lt;/g-emoji&gt;. If you'd like to add or improve an algorithm, your contribution is welcome! Please be sure to checkout the &lt;a href="https://github.com/williamfiset/Algorithms/wiki"&gt;Wiki&lt;/a&gt; for instructions.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-running-an-algorithm-implementation" class="anchor" aria-hidden="true" href="#running-an-algorithm-implementation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running an algorithm implementation&lt;/h1&gt;
&lt;p&gt;To compile and run any of the algorithms here, you need at least JDK version 8. Gradle can make things more convenient for you, but it is not required.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling-and-running-with-only-a-jdk" class="anchor" aria-hidden="true" href="#compiling-and-running-with-only-a-jdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling and running with only a JDK&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-create-a-classes-folder" class="anchor" aria-hidden="true" href="#create-a-classes-folder"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Create a classes folder&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd Algorithms
mkdir classes
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-compile-the-algorithm" class="anchor" aria-hidden="true" href="#compile-the-algorithm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compile the algorithm&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;javac -sourcepath src/main/java -d classes src/main/java/ &amp;lt;relative-path-to-java-source-file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-run-the-algorithm" class="anchor" aria-hidden="true" href="#run-the-algorithm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run the algorithm&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;java -cp classes &amp;lt;class-fully-qualified-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ javac -d classes -sourcepath src/main/java src/main/java/com/williamfiset/algorithms/search/BinarySearch.java
$ java -cp classes com.williamfiset.algorithms.search.BinarySearch
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-running-with-gradle" class="anchor" aria-hidden="true" href="#running-with-gradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running with Gradle&lt;/h2&gt;
&lt;p&gt;This project supports the &lt;a href="https://docs.gradle.org/current/userguide/gradle_wrapper.html" rel="nofollow"&gt;Gradle Wrapper&lt;/a&gt;. The Gradle wrapper automatically downloads Gradle at the first time it runs, so expect a delay when running the first command below.&lt;/p&gt;
&lt;p&gt;If you are on Windows, use &lt;code&gt;gradlew.bat&lt;/code&gt; instead of &lt;code&gt;./gradlew&lt;/code&gt; below.&lt;/p&gt;
&lt;p&gt;Run a single algorithm like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew run -Palgorithm=&amp;lt;algorithm-subpackage&amp;gt;.&amp;lt;algorithm-class&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternatively, you can run a single algorithm specifying the full class name&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew run -Pmain=&amp;lt;algorithm-fully-qualified-class-name&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For instance:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew run -Palgorithm=search.BinarySearch
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew run -Pmain=com.williamfiset.algorithms.search.BinarySearch
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-data-structures" class="anchor" aria-hidden="true" href="#data-structures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Structures&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=q4fnJZr8ztY" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/balancedtree"&gt;Balanced Trees&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/balancedtree/AVLTreeRecursive.java"&gt;Avl Tree (recursive)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/balancedtree/AVLTreeRecursiveOptimized.java"&gt;Avl Tree (recursive, mildly optimized)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/balancedtree/RedBlackTree.java"&gt;Red Black Tree (recursive)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=JfSdGQdAzq8" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/binarysearchtree/BinarySearchTree.java"&gt;Binary Search Tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/binarysearchtree/SplayTree.java"&gt;Splay Tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/bloomfilter"&gt;Bloom Filter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=PEnFFiQe1pM" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/dynamicarray"&gt;Dynamic Array&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/dynamicarray/IntArray.java"&gt;Dynamic array (integer only, fast)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/dynamicarray/DynamicArray.java"&gt;Dynamic array (generic)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=RgITNht_f4Q" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/fenwicktree"&gt;Fenwick Tree&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/fenwicktree/FenwickTreeRangeQueryPointUpdate.java"&gt;Fenwick Tree (range query, point updates)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/fenwicktree/FenwickTreeRangeUpdatePointQuery.java"&gt;Fenwick Tree (range update, point query)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/set"&gt;Set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2E54GqF0H4s" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/hashtable"&gt;Hashtable&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/hashtable/HashTableDoubleHashing.java"&gt;Hashtable (double hashing)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/hashtable/HashTableLinearProbing.java"&gt;Hashtable (linear probing)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/hashtable/HashTableQuadraticProbing.java"&gt;Hashtable (quadratic probing)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/hashtable/HashTableSeparateChaining.java"&gt;Hashtable (separate chaining)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=-Yn5DU0_-lw" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/linkedlist/DoublyLinkedList.java"&gt;Linked List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=wptevk0bshY" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/priorityqueue"&gt;Priority Queue&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/priorityqueue/BinaryHeap.java"&gt;Min Binary Heap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/priorityqueue/MinIndexedBinaryHeap.java"&gt;Min Indexed Binary Heap (sorted key-value pairs, similar to hash-table)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/priorityqueue/MinDHeap.java"&gt;Min D-Heap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=DT8xZ0Uf8wo" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/priorityqueue/MinIndexedDHeap.java"&gt;Min Indexed D-Heap (sorted key-value pairs, similar to hash-table)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/quadtree/QuadTree.java"&gt;Quad Tree [WIP]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=KxzhEQ-zpDc" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/queue"&gt;Queue&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/queue/IntQueue.java"&gt;Queue (integer only, fixed size, fast)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/queue/Queue.java"&gt;Queue (linked list, generic)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/segmenttree"&gt;Segment Tree&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/segmenttree/CompactSegmentTree.java"&gt;Segment tree (array based, compact)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/segmenttree/Node.java"&gt;Segment tree (pointer implementation)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/skiplist/SkipList.java"&gt;Skip List [UNTESTED]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=L3ud3rXpIxA" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/stack"&gt;Stack&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/stack/IntStack.java"&gt;Stack (integer only, fixed size, fast)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/stack/Stack.java"&gt;Stack (linked list, generic)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=zqKlL3ZpTqs" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/suffixarray"&gt;Suffix Array&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/suffixarray/SuffixArraySlow.java"&gt;Suffix Array (O(n²logn) construction)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/suffixarray/SuffixArrayMed.java"&gt;Suffix Array (O(nlog²(n)) construction)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/suffixarray/SuffixArrayFast.java"&gt;Suffix Array (O(nlog(n)) construction)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/trie/Trie.java"&gt;Trie&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ibjEGG7ylHk" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/datastructures/unionfind/UnionFind.java"&gt;Union Find&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-dynamic-programming" class="anchor" aria-hidden="true" href="#dynamic-programming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dynamic Programming&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/dp/CoinChange.java"&gt;Coin change problem&lt;/a&gt; &lt;strong&gt;- O(nW)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/dp/EditDistance.java"&gt;Edit distance&lt;/a&gt; &lt;strong&gt;- O(nm)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cJ21moQpofY" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/dp/Knapsack_01.java"&gt;Knapsack 0/1&lt;/a&gt; &lt;strong&gt;- O(nW)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/dp/KnapsackUnbounded.java"&gt;Knapsack unbounded (0/∞)&lt;/a&gt; &lt;strong&gt;- O(nW)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/dp/MaximumSubarray.java"&gt;Maximum contiguous subarray&lt;/a&gt; &lt;strong&gt;- O(n)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/dp/LongestCommonSubsequence.java"&gt;Longest Common Subsequence (LCS)&lt;/a&gt; &lt;strong&gt;- O(nm)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/dp/LongestIncreasingSubsequence.java"&gt;Longest Increasing Subsequence (LIS)&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/dp/LongestPalindromeSubsequence.java"&gt;Longest Palindrome Subsequence (LPS)&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cY4HiiFHO1o" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/TspDynamicProgrammingIterative.java"&gt;Traveling Salesman Problem (dynamic programming, iterative)&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;2&lt;/sup&gt;2&lt;sup&gt;n&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/TspDynamicProgrammingRecursive.java"&gt;Traveling Salesman Problem (dynamic programming, recursive)&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;2&lt;/sup&gt;2&lt;sup&gt;n&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/dp/MinimumWeightPerfectMatching.java"&gt;Minimum Weight Perfect Matching (iterative, complete graph)&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;2&lt;/sup&gt;2&lt;sup&gt;n&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-geometry" class="anchor" aria-hidden="true" href="#geometry"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Geometry&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/geometry/AngleBetweenVectors2D.java"&gt;Angle between 2D vectors&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/geometry/AngleBetweenVectors3D.java"&gt;Angle between 3D vectors&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/geometry/CircleCircleIntersectionPoints.js"&gt;Circle-circle intersection point(s)&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/geometry/LineCircleIntersection.js"&gt;Circle-line intersection point(s)&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/geometry/LineSegmentCircleIntersection.js"&gt;Circle-line segment intersection point(s)&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/geometry/PointCircleTangent.java"&gt;Circle-point tangent line(s)&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/geometry/ClosestPairOfPoints.java"&gt;Closest pair of points (line sweeping algorithm)&lt;/a&gt; &lt;strong&gt;- O(nlog(n))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/geometry/CollinearPoints.java"&gt;Collinear points test (are three 2D points on the same line)&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/geometry/ConvexHullGrahamScan.java"&gt;Convex hull (Graham Scan algorithm)&lt;/a&gt; &lt;strong&gt;- O(nlog(n))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/geometry/ConvexHullMonotoneChainsAlgorithm.java"&gt;Convex hull (Monotone chain algorithm)&lt;/a&gt; &lt;strong&gt;- O(nlog(n))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/geometry/ConvexPolygonArea.java"&gt;Convex polygon area&lt;/a&gt; &lt;strong&gt;- O(n)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/geometry/ConvexPolygonCutWithLineSegment.java"&gt;Convex polygon cut&lt;/a&gt; &lt;strong&gt;- O(n)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/geometry/ConvexPolygonContainsPoint.java"&gt;Convex polygon contains points&lt;/a&gt; &lt;strong&gt;- O(log(n))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/geometry/CoplanarPoints.java"&gt;Coplanar points test (are four 3D points on the same plane)&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/geometry/Line.java"&gt;Line class (handy infinite line class)&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/geometry/LineCircleIntersection.js"&gt;Line-circle intersection point(s)&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/geometry/LineSegmentCircleIntersection.js"&gt;Line segment-circle intersection point(s)&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/geometry/LineSegmentToGeneralForm.java"&gt;Line segment to general form (ax + by = c)&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/geometry/LineSegmentLineSegmentIntersection.java"&gt;Line segment-line segment intersection&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/geometry/LongitudeLatitudeGeographicDistance.java"&gt;Longitude-Latitude geographic distance&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/geometry/PointInsideTriangle.java"&gt;Point is inside triangle check&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/geometry/PointRotation.java"&gt;Point rotation about point&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/geometry/TriangleArea.java"&gt;Triangle area algorithms&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/geometry/CircleCircleIntersectionArea.java"&gt;[UNTESTED] Circle-circle intersection area&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/geometry/CircularSegmentArea.java"&gt;[UNTESTED] Circular segment area&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-graph-theory" class="anchor" aria-hidden="true" href="#graph-theory"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Graph theory&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-tree-algorithms" class="anchor" aria-hidden="true" href="#tree-algorithms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tree algorithms&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2FFq2_je7Lg" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/treealgorithms/RootingTree.java"&gt;Rooting an undirected tree&lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=OCKvEMF0Xac" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/treealgorithms/TreeIsomorphism.java"&gt;Identifying isomorphic trees&lt;/a&gt; &lt;strong&gt;- O(?)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Fa3VYhQPTOI" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/treealgorithms/TreeCenter.java"&gt;Tree center(s)&lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/treealgorithms/TreeDiameter.java"&gt;Tree diameter&lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-network-flow" class="anchor" aria-hidden="true" href="#network-flow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Network flow&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/networkflow/BipartiteGraphCheckAdjacencyList.java"&gt;Bipartite graph verification (adjacency list)&lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=LdOnanfc5TM" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/networkflow/FordFulkersonDfsSolverAdjacencyList.java"&gt;Max flow &amp;amp; Min cut (Ford-Fulkerson with DFS, adjacency list)&lt;/a&gt; &lt;strong&gt;- O(fE)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/networkflow/FordFulkersonDFSAdjacencyMatrix.java"&gt;Max flow &amp;amp; Min cut (Ford-Fulkerson with DFS, adjacency matrix)&lt;/a&gt; &lt;strong&gt;- O(fV&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=RppuJYwlcI8" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/networkflow/EdmondsKarpAdjacencyList.java"&gt;Max flow &amp;amp; Min cut (Edmonds-Karp, adjacency list)&lt;/a&gt; &lt;strong&gt;- O(VE&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/1ewLrXUz4kk" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/networkflow/CapacityScalingSolverAdjacencyList.java"&gt;Max flow &amp;amp; Min cut (Capacity scaling, adjacency list)&lt;/a&gt; &lt;strong&gt;- O(E&lt;sup&gt;2&lt;/sup&gt;log&lt;sub&gt;2&lt;/sub&gt;(U))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/M6cm8UeeziI" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/networkflow/Dinics.java"&gt;Max flow &amp;amp; Min cut (Dinic's, adjacency list)&lt;/a&gt; &lt;strong&gt;- O(EV&lt;sup&gt;2&lt;/sup&gt;) or O(E√V) for bipartite graphs&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/networkflow/MaximumCardinalityBipartiteMatchingAugmentingPathAdjacencyList.java"&gt;Maximum Cardinality Bipartite Matching (augmenting path algorithm, adjacency list)&lt;/a&gt; &lt;strong&gt;- O(VE)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/networkflow/MinCostMaxFlowWithBellmanFord.java"&gt;Min Cost Max Flow (Bellman-Ford, adjacency list)&lt;/a&gt; &lt;strong&gt;- O(E&lt;sup&gt;2&lt;/sup&gt;V&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/networkflow/MinCostMaxFlowJohnsons.java"&gt;Min Cost Max Flow (Johnson's algorithm, adjacency list)&lt;/a&gt; &lt;strong&gt;- O(E&lt;sup&gt;2&lt;/sup&gt;Vlog(V))&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-other-graph-theory" class="anchor" aria-hidden="true" href="#other-graph-theory"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other graph theory&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aZXi1unBdJA" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/ArticulationPointsAdjacencyList.java"&gt;Articulation points/cut vertices (adjacency list)&lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/BellmanFordEdgeList.java"&gt;Bellman-Ford (edge list, negative cycles, fast &amp;amp; optimized)&lt;/a&gt; &lt;strong&gt;- O(VE)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=lyw4FaxrwHg" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/BellmanFordAdjacencyList.java"&gt;Bellman-Ford (adjacency list, negative cycles)&lt;/a&gt; &lt;strong&gt;- O(VE)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/BellmanFordAdjacencyMatrix.java"&gt;Bellman-Ford (adjacency matrix, negative cycles)&lt;/a&gt; &lt;strong&gt;- O(V&lt;sup&gt;3&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=oDqjPvD54Ss" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/BreadthFirstSearchAdjacencyListIterative.java"&gt;Breadth first search (adjacency list)&lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/BreadthFirstSearchAdjacencyListIterativeFastQueue.java"&gt;Breadth first search (adjacency list, fast queue)&lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aZXi1unBdJA" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/BridgesAdjacencyList.java"&gt;Bridges/cut edges (adjacency list)&lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/ConnectedComponentsAdjacencyList.java"&gt;Find connected components (adjacency list, union find)&lt;/a&gt; &lt;strong&gt;- O(Elog(E))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/ConnectedComponentsDfsSolverAdjacencyList.java"&gt;Find connected components (adjacency list, DFS)&lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/DepthFirstSearchAdjacencyListIterative.java"&gt;Depth first search (adjacency list, iterative)&lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/DepthFirstSearchAdjacencyListIterativeFastStack.java"&gt;Depth first search (adjacency list, iterative, fast stack)&lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=7fujbpJ0LB4" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/DepthFirstSearchAdjacencyListRecursive.java"&gt;Depth first search (adjacency list, recursive)&lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=pSqmAO-m7Lk" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/DijkstrasShortestPathAdjacencyList.java"&gt;Dijkstra's shortest path (adjacency list, lazy implementation)&lt;/a&gt; &lt;strong&gt;- O(Elog(V))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=pSqmAO-m7Lk" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/DijkstrasShortestPathAdjacencyListWithDHeap.java"&gt;Dijkstra's shortest path (adjacency list, eager implementation + D-ary heap)&lt;/a&gt; &lt;strong&gt;- O(Elog&lt;sub&gt;E/V&lt;/sub&gt;(V))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=8MpoO2zA2l4" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/EulerianPathDirectedEdgesAdjacencyList.java"&gt;Eulerian Path (directed edges)&lt;/a&gt; &lt;strong&gt;- O(E+V)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4NQ3HnhyNfQ" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/FloydWarshallSolver.java"&gt;Floyd Warshall algorithm (adjacency matrix, negative cycle check)&lt;/a&gt; &lt;strong&gt;- O(V&lt;sup&gt;3&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/GraphDiameter.java"&gt;Graph diameter (adjacency list)&lt;/a&gt; &lt;strong&gt;- O(VE)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/KruskalsEdgeList.java"&gt;Kruskal's min spanning tree algorithm (edge list, union find)&lt;/a&gt; &lt;strong&gt;- O(Elog(E))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=JZBQLXgSGfs" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/KruskalsEdgeListPartialSortSolver.java"&gt;Kruskal's min spanning tree algorithm (edge list, union find, lazy sorting)&lt;/a&gt; &lt;strong&gt;- O(Elog(E))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=jsmMtJpPnhU" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/LazyPrimsAdjacencyList.java"&gt;Prim's min spanning tree algorithm (lazy version, adjacency list)&lt;/a&gt; &lt;strong&gt;- O(Elog(E))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/LazyPrimsAdjacencyMatrix.java"&gt;Prim's min spanning tree algorithm (lazy version, adjacency matrix)&lt;/a&gt; &lt;strong&gt;- O(V&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=xq3ABa-px_g" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/EagerPrimsAdjacencyList.java"&gt;Prim's min spanning tree algorithm (eager version, adjacency list)&lt;/a&gt; &lt;strong&gt;- O(Elog(V))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/SteinerTree.java"&gt;Steiner tree (minimum spanning tree generalization)&lt;/a&gt; &lt;strong&gt;- O(V&lt;sup&gt;3&lt;/sup&gt; + V&lt;sup&gt;2&lt;/sup&gt; * 2&lt;sup&gt;T&lt;/sup&gt; + V * 3&lt;sup&gt;T&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=TyWtx7q2D7Y" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/TarjanSccSolverAdjacencyList.java"&gt;Tarjan's strongly connected components algorithm (adjacency list) &lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/TarjanAdjacencyMatrix.java"&gt;Tarjan's strongly connected components algorithm (adjacency matrix) &lt;/a&gt; &lt;strong&gt;- O(V&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=eL-KzMXSXXI" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/TopologicalSortAdjacencyList.java"&gt;Topological sort (acyclic graph, adjacency list)&lt;/a&gt; &lt;strong&gt;- O(V+E)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/TopologicalSortAdjacencyMatrix.java"&gt;Topological sort (acyclic graph, adjacency matrix)&lt;/a&gt; &lt;strong&gt;- O(V&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/TspBruteForce.java"&gt;Traveling Salesman Problem (brute force)&lt;/a&gt; &lt;strong&gt;- O(n!)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cY4HiiFHO1o" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/TspDynamicProgrammingIterative.java"&gt;Traveling Salesman Problem (dynamic programming, iterative)&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;2&lt;/sup&gt;2&lt;sup&gt;n&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/graphtheory/TspDynamicProgrammingRecursive.java"&gt;Traveling Salesman Problem (dynamic programming, recursive)&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;2&lt;/sup&gt;2&lt;sup&gt;n&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-linear-algebra" class="anchor" aria-hidden="true" href="#linear-algebra"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linear algebra&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/linearalgebra/FreivaldsAlgorithm.java"&gt;Freivald's algorithm (matrix multiplication verification)&lt;/a&gt; &lt;strong&gt;- O(kn&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/linearalgebra/GaussianElimination.java"&gt;Gaussian elimination (solve system of linear equations)&lt;/a&gt; &lt;strong&gt;- O(cr&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/linearalgebra/ModularLinearAlgebra.java"&gt;Gaussian elimination (modular version, prime finite field)&lt;/a&gt; &lt;strong&gt;- O(cr&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/linearalgebra/LinearRecurrenceSolver.java"&gt;Linear recurrence solver (finds nth term in a recurrence relation)&lt;/a&gt; &lt;strong&gt;- O(m&lt;sup&gt;3&lt;/sup&gt;log(n))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/linearalgebra/MatrixDeterminantLaplaceExpansion.java"&gt;Matrix determinant (Laplace/cofactor expansion)&lt;/a&gt; &lt;strong&gt;- O((n+2)!)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/linearalgebra/MatrixInverse.java"&gt;Matrix inverse&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;3&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/linearalgebra/MatrixMultiplication.java"&gt;Matrix multiplication&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;3&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/linearalgebra/MatrixPower.java"&gt;Matrix power&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;3&lt;/sup&gt;log(p))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/linearalgebra/RotateSquareMatrixInplace.java"&gt;Square matrix rotation&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-mathematics" class="anchor" aria-hidden="true" href="#mathematics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mathematics&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/math/ChineseRemainderTheorem.java"&gt;[UNTESTED] Chinese remainder theorem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/math/SieveOfEratosthenes.java"&gt;Prime number sieve (sieve of Eratosthenes)&lt;/a&gt; &lt;strong&gt;- O(nlog(log(n)))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/math/CompressedPrimeSieve.java"&gt;Prime number sieve (sieve of Eratosthenes, compressed)&lt;/a&gt; &lt;strong&gt;- O(nlog(log(n)))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/math/EulerTotientFunction.java"&gt;Totient function (phi function, relatively prime number count)&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;1/4&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/math/EulerTotientFunctionWithSieve.java"&gt;Totient function using sieve (phi function, relatively prime number count)&lt;/a&gt; &lt;strong&gt;- O(nlog(log(n)))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/math/ExtendedEuclideanAlgorithm.java"&gt;Extended euclidean algorithm&lt;/a&gt; &lt;strong&gt;- ~O(log(a + b))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/math/GCD.java"&gt;Greatest Common Divisor (GCD)&lt;/a&gt; &lt;strong&gt;- ~O(log(a + b))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/math/FastFourierTransform.java"&gt;Fast Fourier transform (quick polynomial multiplication)&lt;/a&gt; &lt;strong&gt;- O(nlog(n))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/math/FastFourierTransformComplexNumbers.java"&gt;Fast Fourier transform (quick polynomial multiplication, complex numbers)&lt;/a&gt; &lt;strong&gt;- O(nlog(n))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/math/IsPrime.java"&gt;Primality check&lt;/a&gt; &lt;strong&gt;- O(√n)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/math/RabinMillerPrimalityTest.py"&gt;Primality check (Rabin-Miller)&lt;/a&gt; &lt;strong&gt;- O(k)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/math/LCM.java"&gt;Least Common Multiple (LCM)&lt;/a&gt; &lt;strong&gt;- ~O(log(a + b))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/math/ModularInverse.java"&gt;Modular inverse&lt;/a&gt; &lt;strong&gt;- ~O(log(a + b))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/math/PrimeFactorization.java"&gt;Prime factorization (pollard rho)&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;1/4&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/math/RelativelyPrime.java"&gt;Relatively prime check (coprimality check)&lt;/a&gt; &lt;strong&gt;- ~O(log(a + b))&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-other" class="anchor" aria-hidden="true" href="#other"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/other/BitManipulations.java"&gt;Bit manipulations&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/other/Permutations.java"&gt;List permutations&lt;/a&gt; &lt;strong&gt;- O(n!)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=RnlHPR0lyOE" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/other/PowerSet.java"&gt;Power set (set of all subsets)&lt;/a&gt; &lt;strong&gt;- O(2&lt;sup&gt;n&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/other/Combinations.java"&gt;Set combinations&lt;/a&gt; &lt;strong&gt;- O(n choose r)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/other/CombinationsWithRepetition.java"&gt;Set combinations with repetition&lt;/a&gt; &lt;strong&gt;- O((n+r-1) choose r)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/other/SlidingWindowMaximum.java"&gt;Sliding Window Minimum/Maximum&lt;/a&gt; &lt;strong&gt;- O(1)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/other/SquareRootDecomposition.java"&gt;Square Root Decomposition&lt;/a&gt; &lt;strong&gt;- O(1) point updates, O(√n) range queries&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/other/UniqueCombinations.java"&gt;Unique set combinations&lt;/a&gt; &lt;strong&gt;- O(n choose r)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-search-algorithms" class="anchor" aria-hidden="true" href="#search-algorithms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Search algorithms&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/search/BinarySearch.java"&gt;Binary search (real numbers)&lt;/a&gt; &lt;strong&gt;- O(log(n))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/search/InterpolationSearch.java"&gt;Interpolation search (discrete discrete)&lt;/a&gt; &lt;strong&gt;- O(n) or O(log(log(n))) with uniform input&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/search/TernarySearch.java"&gt;Ternary search (real numbers)&lt;/a&gt; &lt;strong&gt;- O(log(n))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/search/TernarySearchDiscrete.java"&gt;Ternary search (discrete numbers)&lt;/a&gt; &lt;strong&gt;- O(log(n))&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-sorting-algorithms" class="anchor" aria-hidden="true" href="#sorting-algorithms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sorting algorithms&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/sorting/BubbleSort.java"&gt;Bubble sort&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/sorting/BucketSort.java"&gt;Bucket sort&lt;/a&gt; &lt;strong&gt;- Θ(n + k)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/sorting/CountingSort.java"&gt;Counting sort&lt;/a&gt; &lt;strong&gt;- O(n + k)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/sorting/Heapsort.java"&gt;Heapsort&lt;/a&gt; &lt;strong&gt;- O(nlog(n))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/sorting/InsertionSort.java"&gt;Insertion sort&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/sorting/Mergesort.java"&gt;Mergesort&lt;/a&gt; &lt;strong&gt;- O(nlog(n))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/sorting/Quicksort.java"&gt;Quicksort (in-place, Hoare partitioning)&lt;/a&gt; &lt;strong&gt;- Θ(nlog(n))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/sorting/SelectionSort.java"&gt;Selection sort&lt;/a&gt; &lt;strong&gt;- O(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-string-algorithms" class="anchor" aria-hidden="true" href="#string-algorithms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;String algorithms&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/strings/BoothsAlgorithm.java"&gt;Booth's algorithm (finds lexicographically smallest string rotation)&lt;/a&gt; &lt;strong&gt;- O(n)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/strings/KMP.java"&gt;Knuth-Morris-Pratt algorithm (finds pattern matches in text)&lt;/a&gt; &lt;strong&gt;- O(n+m)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/strings/LongestCommonPrefixArray.java"&gt;Longest Common Prefix (LCP) array&lt;/a&gt; &lt;strong&gt;- O(nlog(n)) bounded by SA construction, otherwise O(n)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Ic80xQFWevc" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/strings/LongestCommonSubstring.java"&gt;Longest Common Substring (LCS)&lt;/a&gt; &lt;strong&gt;- O(nlog(n)) bounded by SA construction, otherwise O(n)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=OptoHwC3D-Y" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="movie_camera" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png"&gt;🎥&lt;/g-emoji&gt;&lt;/a&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/strings/LongestRepeatedSubstring.java"&gt;Longest Repeated Substring (LRS)&lt;/a&gt; &lt;strong&gt;- O(nlog(n))&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/strings/ManachersAlgorithm.java"&gt;Manacher's algorithm (finds all palindromes in text)&lt;/a&gt; &lt;strong&gt;- O(n)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/strings/RabinKarp.java"&gt;Rabin-Karp algorithm (finds pattern matches in text)&lt;/a&gt; &lt;strong&gt;- O(n+m)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/williamfiset/algorithms/tree/master/src/main/java/com/williamfiset/algorithms/strings/SubstringVerificationSuffixArray.java"&gt;Substring verification with suffix array&lt;/a&gt; &lt;strong&gt;- O(nlog(n)) SA construction and O(mlog(n)) per query&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;This repository is released under the &lt;a href="https://opensource.org/licenses/MIT" rel="nofollow"&gt;MIT license&lt;/a&gt;. In short, this means you are free to use this software in any personal, open-source or commercial projects. Attribution is optional but appreciated.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>williamfiset</author><guid isPermaLink="false">https://github.com/williamfiset/Algorithms</guid><pubDate>Thu, 06 Feb 2020 00:01:00 GMT</pubDate></item><item><title>eugenp/tutorials #2 in Java, This week</title><link>https://github.com/eugenp/tutorials</link><description>&lt;p&gt;&lt;i&gt;Just Announced - "Learn Spring Security OAuth": &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;: The price of "Learn Spring Security OAuth" will permanently change on the 11th of December, along with the upcoming OAuth2 material: &lt;a href="http://bit.ly/github-lss" rel="nofollow"&gt;http://bit.ly/github-lss&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-the-courses" class="anchor" aria-hidden="true" href="#the-courses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Courses&lt;/h1&gt;
&lt;p&gt;Here's the new "Learn Spring" course: &lt;br&gt;
&lt;strong&gt;&lt;a href="https://www.baeldung.com/learn-spring-course?utm_source=github&amp;amp;utm_medium=social&amp;amp;utm_content=tutorials&amp;amp;utm_campaign=ls#master-class" rel="nofollow"&gt;&amp;gt;&amp;gt; LEARN SPRING - THE MASTER CLASS&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here's the Master Class of "REST With Spring" (along with the new announced Boot 2 material): &lt;br&gt;
&lt;strong&gt;&lt;a href="https://www.baeldung.com/rest-with-spring-course?utm_source=github&amp;amp;utm_medium=social&amp;amp;utm_content=tutorials&amp;amp;utm_campaign=rws#master-class" rel="nofollow"&gt;&amp;gt;&amp;gt; THE REST WITH SPRING - MASTER CLASS&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;And here's the Master Class of "Learn Spring Security": &lt;br&gt;
&lt;strong&gt;&lt;a href="https://www.baeldung.com/learn-spring-security-course?utm_source=github&amp;amp;utm_medium=social&amp;amp;utm_content=tutorials&amp;amp;utm_campaign=lss#master-class" rel="nofollow"&gt;&amp;gt;&amp;gt; LEARN SPRING SECURITY - MASTER CLASS&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-java-and-spring-tutorials" class="anchor" aria-hidden="true" href="#java-and-spring-tutorials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Java and Spring Tutorials&lt;/h1&gt;
&lt;p&gt;This project is &lt;strong&gt;a collection of small and focused tutorials&lt;/strong&gt; - each covering a single and well defined area of development in the Java ecosystem.
A strong focus of these is, of course, the Spring Framework - Spring, Spring Boot and Spring Security.
In additional to Spring, the modules here are covering a number of aspects in Java.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-building-the-project" class="anchor" aria-hidden="true" href="#building-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the project&lt;/h1&gt;
&lt;p&gt;To do the full build, do: &lt;code&gt;mvn clean install&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-building-a-single-module" class="anchor" aria-hidden="true" href="#building-a-single-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building a single module&lt;/h1&gt;
&lt;p&gt;To build a specific module run the command: &lt;code&gt;mvn clean install&lt;/code&gt; in the module directory&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-running-a-spring-boot-module" class="anchor" aria-hidden="true" href="#running-a-spring-boot-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running a Spring Boot module&lt;/h1&gt;
&lt;p&gt;To run a Spring Boot module run the command: &lt;code&gt;mvn spring-boot:run&lt;/code&gt; in the module directory&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-working-with-the-ide" class="anchor" aria-hidden="true" href="#working-with-the-ide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Working with the IDE&lt;/h1&gt;
&lt;p&gt;This repo contains a large number of modules.
When you're working with an individual module, there's no need to import all of them (or build all of them) - you can simply import that particular module in either Eclipse or IntelliJ.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-running-tests" class="anchor" aria-hidden="true" href="#running-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running Tests&lt;/h1&gt;
&lt;p&gt;The command &lt;code&gt;mvn clean install&lt;/code&gt; will run the unit tests in a module.
To run the integration tests, use the command &lt;code&gt;mvn clean install -Pintegration-lite-first&lt;/code&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>eugenp</author><guid isPermaLink="false">https://github.com/eugenp/tutorials</guid><pubDate>Thu, 06 Feb 2020 00:02:00 GMT</pubDate></item><item><title>obsidiandynamics/kafdrop #3 in Java, This week</title><link>https://github.com/obsidiandynamics/kafdrop</link><description>&lt;p&gt;&lt;i&gt;Kafka Web UI&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content--kafdrop--kafka-web-ui--" class="anchor" aria-hidden="true" href="#-kafdrop--kafka-web-ui--"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/wiki/obsidiandynamics/kafdrop/images/kafdrop-logo.png"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/obsidiandynamics/kafdrop/images/kafdrop-logo.png" width="90px" alt="logo" style="max-width:100%;"&gt;&lt;/a&gt; Kafdrop – Kafka Web UI   &lt;a href="https://twitter.com/intent/tweet?url=https%3A%2F%2Fgithub.com%2Fobsidiandynamics%2Fkafdrop&amp;amp;text=Get%20Kafdrop%20%E2%80%94%20a%20web-based%20UI%20for%20viewing%20%23ApacheKafka%20topics%20and%20browsing%20consumers%20" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/83d4084f7b71558e33b08844da5c773a8657e271/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c" alt="Tweet" data-canonical-src="https://img.shields.io/twitter/url/http/shields.io.svg?style=social" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/obsidiandynamics/kafdrop/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/133e591f8370e85eae29ccab6a01ed00409d73a8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f70726963652d465245452d3030393866372e737667" alt="Price" data-canonical-src="https://img.shields.io/badge/price-FREE-0098f7.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bintray.com/obsidiandynamics/kafdrop/main/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/631b85686a710df161d601b5d19258610edd077b/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f6f6273696469616e64796e616d6963732f6b616664726f702f6d61696e2f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/obsidiandynamics/kafdrop/main/images/download.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/obsidiandynamics/kafdrop#" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2b8f287d0087e080e8aed6d6f4ae0446faa26ac4/68747470733a2f2f7472617669732d63692e6f72672f6f6273696469616e64796e616d6963732f6b616664726f702e7376673f6272616e63683d6d6173746572" alt="Build" data-canonical-src="https://travis-ci.org/obsidiandynamics/kafdrop.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://hub.docker.com/r/obsidiandynamics/kafdrop" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/45a461540149cc80e9f0c2d64847867baaca2677/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f6f6273696469616e64796e616d6963732f6b616664726f702e737667" alt="Docker" data-canonical-src="https://img.shields.io/docker/pulls/obsidiandynamics/kafdrop.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://lgtm.com/projects/g/obsidiandynamics/kafdrop/context:java" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/882b2b3f54d67c8d2ed7090ab3f075bbc4033a14/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f6a6176612f672f6f6273696469616e64796e616d6963732f6b616664726f702e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138" alt="Language grade: Java" data-canonical-src="https://img.shields.io/lgtm/grade/java/g/obsidiandynamics/kafdrop.svg?logo=lgtm&amp;amp;logoWidth=18" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Kafdrop is a web UI for viewing Kafka topics and browsing consumer groups.&lt;/em&gt; The tool displays information such as brokers, topics, partitions, consumers, and lets you view messages.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/images/overview.png?raw=true"&gt;&lt;img src="docs/images/overview.png?raw=true" alt="Overview Screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This project is a reboot of Kafdrop 2.x, dragged kicking and screaming into the world of JDK 11+, Kafka 2.x, Helm and Kubernetes. It's a lightweight application that runs on Spring Boot and is dead-easy to configure, supporting SASL and TLS-secured brokers.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;View Kafka brokers&lt;/strong&gt; — topic and partition assignments, and controller status&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;View topics&lt;/strong&gt; — partition count, replication status, and custom configuration&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Browse messages&lt;/strong&gt; — JSON, plain text and Avro encoding&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;View consumer groups&lt;/strong&gt; — per-partition parked offsets, combined and per-partition lag&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create new topics&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;View ACLs&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Support for Azure Event Hubs&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Java 11 or newer&lt;/li&gt;
&lt;li&gt;Kafka (version 0.11.0 or newer) or Azure Event Hubs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Optional, additional integration:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Schema Registry&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h1&gt;
&lt;p&gt;You can run the Kafdrop JAR directly, via Docker, or in Kubernetes.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-running-from-jar" class="anchor" aria-hidden="true" href="#running-from-jar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running from JAR&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;java --add-opens=java.base/sun.nio.ch=ALL-UNNAMED \
    -jar target/kafdrop-&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;version&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;.jar \
    --kafka.brokerConnect=&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;host:port,host:port&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;,...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If unspecified, &lt;code&gt;kafka.brokerConnect&lt;/code&gt; defaults to &lt;code&gt;localhost:9092&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; As of Kafdrop 3.10.0, a ZooKeeper connection is no longer required. All necessary cluster information is retrieved via the Kafka admin API.&lt;/p&gt;
&lt;p&gt;Open a browser and navigate to &lt;a href="http://localhost:9000" rel="nofollow"&gt;http://localhost:9000&lt;/a&gt;. The port can be overridden by adding the following config:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;--server.port=&amp;lt;port&amp;gt; --management.server.port=&amp;lt;port&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Optionally, configure a schema registry connection with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;--schemaregistry.connect=http://localhost:8081
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, a default message format (e.g. to deserialize Avro messages) can optionally be configured as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;--message.format=AVRO
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Valid format values are &lt;code&gt;DEFAULT&lt;/code&gt;, &lt;code&gt;AVRO&lt;/code&gt;, &lt;code&gt;PROTOBUF&lt;/code&gt;. This can also be configured at the topic level via dropdown when viewing messages.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configure-protobuf-message-type" class="anchor" aria-hidden="true" href="#configure-protobuf-message-type"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configure Protobuf message type&lt;/h2&gt;
&lt;p&gt;In case of protobuf message type, the definition of a message could be compiled and transmitted using a descriptor file. Thus, in order for kafdrop to recognize the message, the application will need to access to the descriptor file(s). Kafdrop will allow user to select descriptor  and well as specifying name of one of the message type provided by the descriptor at runtime.&lt;/p&gt;
&lt;p&gt;To Configure a folder stores protobuf descriptor file(s) (.desc) follow:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;--protobufdesc.directory=/var/protobuf_desc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If preferred the message type could be set to default as follow:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;--message.format=PROTOBUF
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-running-with-docker" class="anchor" aria-hidden="true" href="#running-with-docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running with Docker&lt;/h2&gt;
&lt;p&gt;Images are hosted at &lt;a href="https://hub.docker.com/r/obsidiandynamics/kafdrop" rel="nofollow"&gt;hub.docker.com/r/obsidiandynamics/kafdrop&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Launch container in background:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker run -d --rm -p 9000:9000 \
    -e KAFKA_BROKERCONNECT=&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;host:port,host:port&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; \
    -e JVM_OPTS=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-Xms32M -Xmx64M&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
    -e SERVER_SERVLET_CONTEXTPATH=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
    obsidiandynamics/kafdrop&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Launch container in background with protobuff definitions:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker run -d --rm -v &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;path_to_protobuff_descriptor_files&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;:/var/protobuf_desc -p 9000:9000 \
    -e KAFKA_BROKERCONNECT=&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;host:port,host:port&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; \
    -e JVM_OPTS=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-Xms32M -Xmx64M&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
    -e SERVER_SERVLET_CONTEXTPATH=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
    -e CMD_ARGS=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--message.format=PROTOBUF --protobufdesc.directory=/var/protobuf_desc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
    obsidiandynamics/kafdrop&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then access the web UI at &lt;a href="http://localhost:9000" rel="nofollow"&gt;http://localhost:9000&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Hey there!&lt;/strong&gt; We hope you really like Kafdrop! Please take a moment to &lt;a href="https://github.com/obsidiandynamics/kafdrop"&gt;⭐&lt;/a&gt;the repo or &lt;a href="https://twitter.com/intent/tweet?url=https%3A%2F%2Fgithub.com%2Fobsidiandynamics%2Fkafdrop&amp;amp;text=Get%20Kafdrop%20%E2%80%94%20a%20web-based%20UI%20for%20viewing%20%23ApacheKafka%20topics%20and%20browsing%20consumers%20" rel="nofollow"&gt;Tweet&lt;/a&gt; about it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-running-in-kubernetes-using-a-helm-chart" class="anchor" aria-hidden="true" href="#running-in-kubernetes-using-a-helm-chart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running in Kubernetes (using a Helm Chart)&lt;/h2&gt;
&lt;p&gt;Clone the repository (if necessary):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/obsidiandynamics/kafdrop &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-c1"&gt;cd&lt;/span&gt; kafdrop&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Apply the chart:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;helm upgrade -i kafdrop chart --set image.tag=3.x.x \
    --set kafka.brokerConnect=&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;host:port,host:port&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; \
    --set server.servlet.contextPath=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
    --set jvm.opts=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-Xms32M -Xmx64M&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For all Helm configuration options, have a peek into &lt;a href="chart/values.yaml"&gt;chart/values.yaml&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Replace &lt;code&gt;3.x.x&lt;/code&gt; with the image tag of &lt;a href="https://hub.docker.com/r/obsidiandynamics/kafdrop" rel="nofollow"&gt;obsidiandynamics/kafdrop&lt;/a&gt;. Services will be bound on port 9000 by default (node port 30900).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The context path &lt;em&gt;must&lt;/em&gt; end with a slash.&lt;/p&gt;
&lt;p&gt;Proxy to the Kubernetes cluster:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;kubectl proxy&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Navigate to &lt;a href="http://localhost:8001/api/v1/namespaces/default/services/http:kafdrop:9000/proxy" rel="nofollow"&gt;http://localhost:8001/api/v1/namespaces/default/services/http:kafdrop:9000/proxy&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;After cloning the repository, building is just a matter of running a standard Maven build:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ mvn clean package&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following command will generate a Docker image:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mvn assembly:single docker:build&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-docker-compose" class="anchor" aria-hidden="true" href="#docker-compose"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker Compose&lt;/h2&gt;
&lt;p&gt;There is a &lt;code&gt;docker-compose.yaml&lt;/code&gt; file that bundles a Kafka/ZooKeeper instance with Kafdrop:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; docker-compose/kafka-kafdrop
docker-compose up&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-apis" class="anchor" aria-hidden="true" href="#apis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;APIs&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-json-endpoints" class="anchor" aria-hidden="true" href="#json-endpoints"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON endpoints&lt;/h2&gt;
&lt;p&gt;Starting with version 2.0.0, Kafdrop offers a set of Kafka APIs that mirror the existing HTML views. Any existing endpoint can be returned as JSON by simply setting the &lt;code&gt;Accept: application/json&lt;/code&gt; header. Some endpoints are JSON only:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/topic&lt;/code&gt;: Returns a list of all topics.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-swagger" class="anchor" aria-hidden="true" href="#swagger"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swagger&lt;/h2&gt;
&lt;p&gt;To help document the Kafka APIs, Swagger has been included. The Swagger output is available by default at the following Kafdrop URL:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/v2/api-docs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This can be overridden with the following configuration:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;springfox.documentation.swagger.v2.path=/new/swagger/path
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Currently only the JSON endpoints are included in the Swagger output; the HTML views and Spring Boot debug endpoints are excluded.&lt;/p&gt;
&lt;p&gt;You can disable Swagger output with the following configuration:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;swagger.enabled=false
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-cors-headers" class="anchor" aria-hidden="true" href="#cors-headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CORS Headers&lt;/h2&gt;
&lt;p&gt;Starting in version 2.0.0, Kafdrop sets CORS headers for all endpoints. You can control the CORS header values with the following configurations:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cors.allowOrigins (default is *)
cors.allowMethods (default is GET,POST,PUT,DELETE)
cors.maxAge (default is 3600)
cors.allowCredentials (default is true)
cors.allowHeaders (default is Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can also disable CORS entirely with the following configuration:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cors.enabled=false
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-actuator" class="anchor" aria-hidden="true" href="#actuator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Actuator&lt;/h2&gt;
&lt;p&gt;Health and info endpoints are available at the following path: &lt;code&gt;/actuator&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This can be overridden with the following configuration:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;management.endpoints.web.base-path=&amp;lt;path&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-guides" class="anchor" aria-hidden="true" href="#guides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Guides&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-connecting-to-a-secure-broker" class="anchor" aria-hidden="true" href="#connecting-to-a-secure-broker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Connecting to a Secure Broker&lt;/h2&gt;
&lt;p&gt;Kafdrop supports TLS (SSL) and SASL connections for &lt;a href="http://kafka.apache.org/090/documentation.html#security" rel="nofollow"&gt;encryption and authentication&lt;/a&gt;. This can be configured by providing a combination of the following files (placed into the Kafka root directory):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;kafka.truststore.jks&lt;/code&gt;: specifying the certificate for authenticating brokers, if TLS is enabled.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kafka.keystore.jks&lt;/code&gt;: specifying the private key to authenticate the client to the broker, if mutual TLS authentication is required.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kafka.properties&lt;/code&gt;: specifying the necessary configuration, including key/truststore passwords, cipher suites, enabled TLS protocol versions, username/password pairs, etc. When supplying the truststore and/or keystore files, the &lt;code&gt;ssl.truststore.location&lt;/code&gt; and &lt;code&gt;ssl.keystore.location&lt;/code&gt; properties will be assigned automatically.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-using-docker" class="anchor" aria-hidden="true" href="#using-docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Docker&lt;/h3&gt;
&lt;p&gt;The three files above can be supplied to a Docker instance in base-64-encoded form via environment variables:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker run -d --rm -p 9000:9000 \
    -e KAFKA_BROKERCONNECT=&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;host:port,host:port&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; \
    -e KAFKA_PROPERTIES=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;cat kafka.properties &lt;span class="pl-k"&gt;|&lt;/span&gt; base64&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt; \
    -e KAFKA_TRUSTSTORE=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;cat kafka.truststore.jks &lt;span class="pl-k"&gt;|&lt;/span&gt; base64&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-cce"&gt;\ &lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; optional&lt;/span&gt;
    -e KAFKA_KEYSTORE=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;cat kafka.keystore.jks &lt;span class="pl-k"&gt;|&lt;/span&gt; base64&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-cce"&gt;\ &lt;/span&gt;      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; optional&lt;/span&gt;
    obsidiandynamics/kafdrop&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-environment-variables" class="anchor" aria-hidden="true" href="#environment-variables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Environment Variables&lt;/h4&gt;
&lt;h5&gt;&lt;a id="user-content-basic-configuration" class="anchor" aria-hidden="true" href="#basic-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic configuration&lt;/h5&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;KAFKA_BROKERCONNECT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Bootstrap list of Kafka host/port pairs. Defaults to &lt;code&gt;localhost:9092&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;KAFKA_PROPERTIES&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Additional properties to configure the broker connection (base-64 encoded).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;KAFKA_TRUSTSTORE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Certificate for broker authentication (base-64 encoded). Required for TLS/SSL.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;KAFKA_KEYSTORE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Private key for mutual TLS authentication (base-64 encoded).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;SERVER_SERVLET_CONTEXTPATH&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The context path to serve requests on (must end with a &lt;code&gt;/&lt;/code&gt;). Defaults to &lt;code&gt;/&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;SERVER_PORT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The web server port to listen on. Defaults to &lt;code&gt;9000&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;CMD_ARGS&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Command line arguments to Kafdrop, e.g. &lt;code&gt;--message.format&lt;/code&gt; or &lt;code&gt;--protobufdesc.directory&lt;/code&gt; or &lt;code&gt;--server.port&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5&gt;&lt;a id="user-content-advanced-configuration" class="anchor" aria-hidden="true" href="#advanced-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced configuration&lt;/h5&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;JVM_OPTS&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JVM options.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;JMX_PORT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Port to use for JMX. No default; if unspecified, JMX will not be exposed.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The hostname to report for the RMI registry (used for JMX). Defaults to &lt;code&gt;localhost&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;KAFKA_PROPERTIES_FILE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Internal location where the Kafka properties file will be written to (if &lt;code&gt;KAFKA_PROPERTIES&lt;/code&gt; is set). Defaults to &lt;code&gt;kafka.properties&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;KAFKA_TRUSTSTORE_FILE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Internal location where the truststore file will be written to (if &lt;code&gt;KAFKA_TRUSTSTORE&lt;/code&gt; is set). Defaults to &lt;code&gt;kafka.truststore.jks&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;KAFKA_KEYSTORE_FILE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Internal location where the keystore file will be written to (if &lt;code&gt;KAFKA_KEYSTORE&lt;/code&gt; is set). Defaults to &lt;code&gt;kafka.keystore.jks&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-using-helm" class="anchor" aria-hidden="true" href="#using-helm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Helm&lt;/h3&gt;
&lt;p&gt;Like in the Docker example, supply the files in base-64 form:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;helm upgrade -i kafdrop chart --set image.tag=3.x.x \
    --set kafka.brokerConnect=&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;host:port,host:port&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; \
    --set kafka.properties=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;cat kafka.properties &lt;span class="pl-k"&gt;|&lt;/span&gt; base64&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
    --set kafka.truststore=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;cat kafka.truststore.jks &lt;span class="pl-k"&gt;|&lt;/span&gt; base64&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
    --set kafka.keystore=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;cat kafka.keystore.jks &lt;span class="pl-k"&gt;|&lt;/span&gt; base64&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-updating-the-bootstrap-theme" class="anchor" aria-hidden="true" href="#updating-the-bootstrap-theme"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Updating the Bootstrap theme&lt;/h2&gt;
&lt;p&gt;Edit the &lt;code&gt;.scss&lt;/code&gt; files in the &lt;code&gt;theme&lt;/code&gt; directory, then run &lt;code&gt;theme/install.sh&lt;/code&gt;. This will overwrite &lt;code&gt;src/main/resources/static/css/bootstrap.min.css&lt;/code&gt;. Then build as usual. (Requires &lt;code&gt;npm&lt;/code&gt;.)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-securing-the-kafdrop-ui" class="anchor" aria-hidden="true" href="#securing-the-kafdrop-ui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Securing the Kafdrop UI&lt;/h2&gt;
&lt;p&gt;Kafdrop doesn't (yet) natively implement an authentication mechanism to restrict user access. Here's a quick workaround using NGINX using Basic Auth. The instructions below are for macOS and Homebrew.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-requirements-1" class="anchor" aria-hidden="true" href="#requirements-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;NGINX: install using &lt;code&gt;which nginx &amp;gt; /dev/null || brew install nginx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Apache HTTP utilities: &lt;code&gt;which htpasswd &amp;gt; /dev/null || brew install httpd&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup&lt;/h3&gt;
&lt;p&gt;Set the admin password (you will be prompted):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;htpasswd -c /usr/local/etc/nginx/.htpasswd admin&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add a logout page in &lt;code&gt;/usr/local/opt/nginx/html/401.html&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;Not authorized. &amp;lt;&lt;span class="pl-ent"&gt;a&lt;/span&gt; &lt;span class="pl-e"&gt;href&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;!--# echo var=&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-e"&gt;scheme&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; --&amp;gt;://&amp;lt;!--# echo var=&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-e"&gt;http_host&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; --&amp;gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;Login&amp;lt;/&lt;span class="pl-ent"&gt;a&lt;/span&gt;&amp;gt;.&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use the following snippet for &lt;code&gt;/usr/local/etc/nginx/nginx.conf&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;worker_processes 4;
  
events {
  worker_connections 1024;
}

http {
  upstream kafdrop {
    server 127.0.0.1:9000;
    keepalive 64;
  }

  server {
    listen *:8080;
    server_name _;
    access_log /usr/local/var/log/nginx/nginx.access.log;
    error_log /usr/local/var/log/nginx/nginx.error.log;
    auth_basic "Restricted Area";
    auth_basic_user_file /usr/local/etc/nginx/.htpasswd;

    location / {
      proxy_pass http://kafdrop;
    }

    location /logout {
      return 401;
    }

    error_page 401 /errors/401.html;

    location /errors {
      auth_basic off;
      ssi        on;
      alias /usr/local/opt/nginx/html;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run NGINX:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;nginx&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or reload its configuration if already running:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;nginx -s reload&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To logout, browse to &lt;a href="http://localhost:8080/logout" rel="nofollow"&gt;/logout&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Hey there!&lt;/strong&gt; We hope you really like Kafdrop! Please take a moment to &lt;a href="https://github.com/obsidiandynamics/kafdrop"&gt;⭐&lt;/a&gt;the repo or &lt;a href="https://twitter.com/intent/tweet?url=https%3A%2F%2Fgithub.com%2Fobsidiandynamics%2Fkafdrop&amp;amp;text=Get%20Kafdrop%20%E2%80%94%20a%20web-based%20UI%20for%20viewing%20%23ApacheKafka%20topics%20and%20browsing%20consumers%20" rel="nofollow"&gt;Tweet&lt;/a&gt; about it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;&lt;a id="user-content-contributing-guidelines" class="anchor" aria-hidden="true" href="#contributing-guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing Guidelines&lt;/h1&gt;
&lt;p&gt;All contributions are more than welcomed. Contributions may close an issue, fix a bug (reported or not reported), add new design blocks, improve the existing code, add new feature, and so on. In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>obsidiandynamics</author><guid isPermaLink="false">https://github.com/obsidiandynamics/kafdrop</guid><pubDate>Thu, 06 Feb 2020 00:03:00 GMT</pubDate></item><item><title>quarkusio/quarkus #4 in Java, This week</title><link>https://github.com/quarkusio/quarkus</link><description>&lt;p&gt;&lt;i&gt;Quarkus: Supersonic Subatomic Java. &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://quarkus.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/be1e4ea465298c7e05b1378ff38d463cfef120a3/68747470733a2f2f64657369676e2e6a626f73732e6f72672f717561726b75732f6c6f676f2f66696e616c2f504e472f717561726b75735f6c6f676f5f686f72697a6f6e74616c5f7267625f3132383070785f64656661756c742e706e67" alt="Quarkus" data-canonical-src="https://design.jboss.org/quarkus/logo/final/PNG/quarkus_logo_horizontal_rgb_1280px_default.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/quarkusio/quarkus/releases/latest"&gt;&lt;img src="https://camo.githubusercontent.com/2281f23dec5f7d8a1a23c1dba4a7bc437cb41c6e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f717561726b7573696f2f717561726b75733f7374796c653d666f722d7468652d6261646765" alt="Version" data-canonical-src="https://img.shields.io/github/v/release/quarkusio/quarkus?style=for-the-badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dev.azure.com/quarkus-ci/quarkus/_build/latest?definitionId=1" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c37b542c49888b31c9c15ddb17aa62a3af117456/68747470733a2f2f696d672e736869656c64732e696f2f617a7572652d6465766f70732f6275696c642f717561726b75732d63692f717561726b75732f313f7374796c653d666f722d7468652d6261646765266c6f676f3d617a7572652d706970656c696e6573" alt="Build Status" data-canonical-src="https://img.shields.io/azure-devops/build/quarkus-ci/quarkus/1?style=for-the-badge&amp;amp;logo=azure-pipelines" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ab76cdff25915e2dd059979efea88f7fd3a376fa/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f717561726b7573696f2f717561726b75733f7374796c653d666f722d7468652d6261646765266c6f676f3d617061636865" alt="License" data-canonical-src="https://img.shields.io/github/license/quarkusio/quarkus?style=for-the-badge&amp;amp;logo=apache" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://quarkusio.zulipchat.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/80fc111bfaf1b18b2923b821b656a3baa793c4c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7a756c69702d6a6f696e5f636861742d627269676874677265656e2e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d7a756c6970" alt="Project Chat" data-canonical-src="https://img.shields.io/badge/zulip-join_chat-brightgreen.svg?style=for-the-badge&amp;amp;logo=zulip" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-quarkus---supersonic-subatomic-java" class="anchor" aria-hidden="true" href="#quarkus---supersonic-subatomic-java"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quarkus - Supersonic Subatomic Java&lt;/h1&gt;
&lt;p&gt;Quarkus is a Cloud Native, (Linux) Container First framework for writing Java applications.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Container First&lt;/strong&gt;:
Minimal footprint Java applications optimal for running in containers&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cloud Native&lt;/strong&gt;:
Embraces &lt;a href="https://12factor.net" rel="nofollow"&gt;12 factor architecture&lt;/a&gt; in environments like Kubernetes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Unify imperative and reactive&lt;/strong&gt;:
Brings under one programming model non blocking and imperative styles of development.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Standards-based&lt;/strong&gt;:
Based on the standards and frameworks you love and use (RESTEasy and JAX-RS, Hibernate ORM and JPA, Netty, Eclipse Vert.x, Eclipse MicroProfile, Apache Camel...)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Microservice First&lt;/strong&gt;:
Brings lightning fast startup time and code turn around to Java apps&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Developer Joy&lt;/strong&gt;:
Development centric experience without compromise to bring your amazing apps to life in no time&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;All under ONE framework.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://quarkus.io" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-build-quarkus" class="anchor" aria-hidden="true" href="#how-to-build-quarkus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to build Quarkus&lt;/h2&gt;
&lt;p&gt;The build instructions are available in the &lt;a href="CONTRIBUTING.md"&gt;contribution guide&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>quarkusio</author><guid isPermaLink="false">https://github.com/quarkusio/quarkus</guid><pubDate>Thu, 06 Feb 2020 00:04:00 GMT</pubDate></item><item><title>mission-peace/interview #5 in Java, This week</title><link>https://github.com/mission-peace/interview</link><description>&lt;p&gt;&lt;i&gt;Interview questions&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-please-visit-my-wiki-link-for-full-list-of-questions" class="anchor" aria-hidden="true" href="#please-visit-my-wiki-link-for-full-list-of-questions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Please visit my wiki link for full list of questions&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-httpsgithubcommission-peaceinterviewwiki" class="anchor" aria-hidden="true" href="#httpsgithubcommission-peaceinterviewwiki"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/mission-peace/interview/wiki"&gt;https://github.com/mission-peace/interview/wiki&lt;/a&gt;&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content--like-my-facebook-page-for-latest-updates-on-my-youtube-channel" class="anchor" aria-hidden="true" href="#-like-my-facebook-page-for-latest-updates-on-my-youtube-channel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; Like my facebook page for latest updates on my youtube channel&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-httpswwwfacebookcomtusharroy25" class="anchor" aria-hidden="true" href="#httpswwwfacebookcomtusharroy25"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://www.facebook.com/tusharroy25" rel="nofollow"&gt;https://www.facebook.com/tusharroy25&lt;/a&gt;&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content--contribution-" class="anchor" aria-hidden="true" href="#-contribution-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; Contribution &lt;/h2&gt;
Please contribute to this repository to help it make better. Any change like new question, code improvement, doc improvement etc. is very welcome. Just send me a pull request and I will review the request and approve it if it looks good. 
&lt;h2&gt;&lt;a id="user-content--how-to-use-this-repository-" class="anchor" aria-hidden="true" href="#-how-to-use-this-repository-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; How to use this repository &lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content--softwares-to-install-" class="anchor" aria-hidden="true" href="#-softwares-to-install-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; Softwares to install &lt;/h3&gt;
* Install JDK8 &lt;a href="https://docs.oracle.com/javase/8/docs/technotes/guides/install/install_overview.html" rel="nofollow"&gt;https://docs.oracle.com/javase/8/docs/technotes/guides/install/install_overview.html&lt;/a&gt;
* Install Git &lt;a href="https://git-scm.com/book/en/v2/Getting-Started-Installing-Git" rel="nofollow"&gt;https://git-scm.com/book/en/v2/Getting-Started-Installing-Git&lt;/a&gt;
* Install either Intellij &lt;a href="https://www.jetbrains.com/idea/download/" rel="nofollow"&gt;https://www.jetbrains.com/idea/download/&lt;/a&gt;
* If you like eclipse instead of intellij install eclipse &lt;a href="https://eclipse.org/downloads/" rel="nofollow"&gt;https://eclipse.org/downloads/&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content--set-up-your-desktop-" class="anchor" aria-hidden="true" href="#-set-up-your-desktop-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt; Set up your desktop &lt;/h3&gt;
* Pull the git repository. Go to command line and type git clone &lt;a href="https://github.com/mission-peace/interview.git"&gt;https://github.com/mission-peace/interview.git&lt;/a&gt;
* Go to root directory of checked out project.
* Run ./gradlew idea to generate idea related classes
* Fire up intellij. Go to Open. Go to git repo folder and open interview.ipr . On file menu go to project structure. Update language level support to 8
* If you use eclipse, do ./gradlew eclipse . This will generate eclipse related files. Go to eclipse and open up folder containing this repo.
* Go to any program and run that program
* Go to any test and run the junit test.
* Run ./gradlew build to create classes, run tests and create jar.
&lt;/article&gt;&lt;/div&gt;</description><author>mission-peace</author><guid isPermaLink="false">https://github.com/mission-peace/interview</guid><pubDate>Thu, 06 Feb 2020 00:05:00 GMT</pubDate></item><item><title>elastic/elasticsearch #6 in Java, This week</title><link>https://github.com/elastic/elasticsearch</link><description>&lt;p&gt;&lt;i&gt;Open Source, Distributed, RESTful Search Engine&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="asciidoc" data-path="README.asciidoc"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-elasticsearch" class="anchor" aria-hidden="true" href="#elasticsearch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Elasticsearch&lt;/h1&gt;
&lt;div&gt;
&lt;h2 id="user-content-a-distributed-restful-search-engine"&gt;&lt;a id="user-content-a-distributed-restful-search-engine" class="anchor" aria-hidden="true" href="#a-distributed-restful-search-engine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A Distributed RESTful Search Engine&lt;/h2&gt;
&lt;div&gt;
&lt;div&gt;
&lt;h3 id="user-content-httpswww-elastic-coproductselasticsearch"&gt;&lt;a id="user-content-httpswwwelasticcoproductselasticsearch" class="anchor" aria-hidden="true" href="#httpswwwelasticcoproductselasticsearch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://www.elastic.co/products/elasticsearch" rel="nofollow"&gt;https://www.elastic.co/products/elasticsearch&lt;/a&gt;&lt;/h3&gt;
&lt;div&gt;
&lt;p&gt;Elasticsearch is a distributed RESTful search engine built for the cloud. Features include:&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Distributed and Highly Available Search Engine.&lt;/p&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Each index is fully sharded with a configurable number of shards.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Each shard can have one or more replicas.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Read / Search operations performed on any of the replica shards.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multi Tenant.&lt;/p&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Support for more than one index.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Index level configuration (number of shards, index storage, …​).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Various set of APIs&lt;/p&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;HTTP RESTful API&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All APIs perform automatic node operation rerouting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Document oriented&lt;/p&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;No need for upfront schema definition.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Schema can be defined for customization of the indexing process.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reliable, Asynchronous Write Behind for long term persistency.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Near) Real Time Search.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Built on top of Apache Lucene&lt;/p&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Each shard is a fully functional Lucene index&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All the power of Lucene easily exposed through simple configuration / plugins.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Per operation consistency&lt;/p&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Single document level operations are atomic, consistent, isolated and durable.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h2 id="user-content-getting-started"&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;div&gt;
&lt;div&gt;
&lt;p&gt;First of all, DON’T PANIC. It will take 5 minutes to get the gist of what Elasticsearch is all about.&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h3 id="user-content-installation"&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h3&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.elastic.co/downloads/elasticsearch" rel="nofollow"&gt;Download&lt;/a&gt; and unpack the Elasticsearch official distribution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;bin/elasticsearch&lt;/code&gt; on Linux or macOS. Run &lt;code&gt;bin\elasticsearch.bat&lt;/code&gt; on Windows.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;curl -X GET &lt;a href="http://localhost:9200/" rel="nofollow"&gt;http://localhost:9200/&lt;/a&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start more servers …​&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h3 id="user-content-indexing"&gt;&lt;a id="user-content-indexing" class="anchor" aria-hidden="true" href="#indexing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Indexing&lt;/h3&gt;
&lt;div&gt;
&lt;p&gt;Let’s try and index some twitter like information. First, let’s index some tweets (the &lt;code&gt;twitter&lt;/code&gt; index will be created automatically):&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;pre&gt;curl -XPUT 'http://localhost:9200/twitter/_doc/1?pretty' -H 'Content-Type: application/json' -d '
{
    "user": "kimchy",
    "post_date": "2009-11-15T13:12:00",
    "message": "Trying out Elasticsearch, so far so good?"
}'

curl -XPUT 'http://localhost:9200/twitter/_doc/2?pretty' -H 'Content-Type: application/json' -d '
{
    "user": "kimchy",
    "post_date": "2009-11-15T14:12:12",
    "message": "Another tweet, will it be indexed?"
}'

curl -XPUT 'http://localhost:9200/twitter/_doc/3?pretty' -H 'Content-Type: application/json' -d '
{
    "user": "elastic",
    "post_date": "2010-01-15T01:46:38",
    "message": "Building the site, should be kewl"
}'&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;Now, let’s see if the information was added by GETting it:&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;pre&gt;curl -XGET 'http://localhost:9200/twitter/_doc/1?pretty=true'
curl -XGET 'http://localhost:9200/twitter/_doc/2?pretty=true'
curl -XGET 'http://localhost:9200/twitter/_doc/3?pretty=true'&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h3 id="user-content-searching"&gt;&lt;a id="user-content-searching" class="anchor" aria-hidden="true" href="#searching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Searching&lt;/h3&gt;
&lt;div&gt;
&lt;p&gt;Mmm search…​, shouldn’t it be elastic?
Let’s find all the tweets that &lt;code&gt;kimchy&lt;/code&gt; posted:&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;pre&gt;curl -XGET 'http://localhost:9200/twitter/_search?q=user:kimchy&amp;amp;pretty=true'&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;We can also use the JSON query language Elasticsearch provides instead of a query string:&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;pre&gt;curl -XGET 'http://localhost:9200/twitter/_search?pretty=true' -H 'Content-Type: application/json' -d '
{
    "query" : {
        "match" : { "user": "kimchy" }
    }
}'&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;Just for kicks, let’s get all the documents stored (we should see the tweet from &lt;code&gt;elastic&lt;/code&gt; as well):&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;pre&gt;curl -XGET 'http://localhost:9200/twitter/_search?pretty=true' -H 'Content-Type: application/json' -d '
{
    "query" : {
        "match_all" : {}
    }
}'&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;We can also do range search (the &lt;code&gt;post_date&lt;/code&gt; was automatically identified as date)&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;pre&gt;curl -XGET 'http://localhost:9200/twitter/_search?pretty=true' -H 'Content-Type: application/json' -d '
{
    "query" : {
        "range" : {
            "post_date" : { "from" : "2009-11-15T13:00:00", "to" : "2009-11-15T14:00:00" }
        }
    }
}'&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;There are many more options to perform search, after all, it’s a search product no? All the familiar Lucene queries are available through the JSON query language, or through the query parser.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h3 id="user-content-multi-tenant-and-indices"&gt;&lt;a id="user-content-multi-tenant-and-indices" class="anchor" aria-hidden="true" href="#multi-tenant-and-indices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multi Tenant and Indices&lt;/h3&gt;
&lt;div&gt;
&lt;p&gt;Man, that twitter index might get big (in this case, index size == valuation). Let’s see if we can structure our twitter system a bit differently in order to support such large amounts of data.&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;Elasticsearch supports multiple indices. In the previous example we used an index called &lt;code&gt;twitter&lt;/code&gt; that stored tweets for every user.&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;Another way to define our simple twitter system is to have a different index per user (note, though that each index has an overhead). Here is the indexing curl’s in this case:&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;pre&gt;curl -XPUT 'http://localhost:9200/kimchy/_doc/1?pretty' -H 'Content-Type: application/json' -d '
{
    "user": "kimchy",
    "post_date": "2009-11-15T13:12:00",
    "message": "Trying out Elasticsearch, so far so good?"
}'

curl -XPUT 'http://localhost:9200/kimchy/_doc/2?pretty' -H 'Content-Type: application/json' -d '
{
    "user": "kimchy",
    "post_date": "2009-11-15T14:12:12",
    "message": "Another tweet, will it be indexed?"
}'&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;The above will index information into the &lt;code&gt;kimchy&lt;/code&gt; index. Each user will get their own special index.&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;Complete control on the index level is allowed. As an example, in the above case, we might want to change from the default 1 shard with 1 replica per index, to 2 shards with 1 replica per index (because this user tweets a lot). Here is how this can be done (the configuration can be in yaml as well):&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;pre&gt;curl -XPUT http://localhost:9200/another_user?pretty -H 'Content-Type: application/json' -d '
{
    "settings" : {
        "index.number_of_shards" : 2,
        "index.number_of_replicas" : 1
    }
}'&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;Search (and similar operations) are multi index aware. This means that we can easily search on more than one
index (twitter user), for example:&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;pre&gt;curl -XGET 'http://localhost:9200/kimchy,another_user/_search?pretty=true' -H 'Content-Type: application/json' -d '
{
    "query" : {
        "match_all" : {}
    }
}'&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;Or on all the indices:&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;pre&gt;curl -XGET 'http://localhost:9200/_search?pretty=true' -H 'Content-Type: application/json' -d '
{
    "query" : {
        "match_all" : {}
    }
}'&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;And the cool part about that? You can easily search on multiple twitter users (indices), with different boost levels per user (index), making social search so much simpler (results from my friends rank higher than results from friends of my friends).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h3 id="user-content-distributed-highly-available"&gt;&lt;a id="user-content-distributed-highly-available" class="anchor" aria-hidden="true" href="#distributed-highly-available"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Distributed, Highly Available&lt;/h3&gt;
&lt;div&gt;
&lt;p&gt;Let’s face it, things will fail…​.&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;Elasticsearch is a highly available and distributed search engine. Each index is broken down into shards, and each shard can have one or more replicas. By default, an index is created with 1 shard and 1 replica per shard (1/1). There are many topologies that can be used, including 1/10 (improve search performance), or 20/1 (improve indexing performance, with search executed in a map reduce fashion across shards).&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;In order to play with the distributed nature of Elasticsearch, simply bring more nodes up and shut down nodes. The system will continue to serve requests (make sure you use the correct http port) with the latest data indexed.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h3 id="user-content-where-to-go-from-here"&gt;&lt;a id="user-content-where-to-go-from-here" class="anchor" aria-hidden="true" href="#where-to-go-from-here"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Where to go from here?&lt;/h3&gt;
&lt;div&gt;
&lt;p&gt;We have just covered a very small portion of what Elasticsearch is all about. For more information, please refer to the &lt;a href="https://www.elastic.co/products/elasticsearch" rel="nofollow"&gt;elastic.co&lt;/a&gt; website. General questions can be asked on the &lt;a href="https://discuss.elastic.co" rel="nofollow"&gt;Elastic Forum&lt;/a&gt; or &lt;a href="https://ela.st/slack" rel="nofollow"&gt;on Slack&lt;/a&gt;. The Elasticsearch GitHub repository is reserved for bug reports and feature requests only.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h3 id="user-content-building-from-source"&gt;&lt;a id="user-content-building-from-source" class="anchor" aria-hidden="true" href="#building-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building from Source&lt;/h3&gt;
&lt;div&gt;
&lt;p&gt;Elasticsearch uses &lt;a href="https://gradle.org" rel="nofollow"&gt;Gradle&lt;/a&gt; for its build system.&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;In order to create a distribution, simply run the &lt;code&gt;./gradlew assemble&lt;/code&gt; command in the cloned directory.&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;The distribution for each project will be created under the &lt;code&gt;build/distributions&lt;/code&gt; directory in that project.&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;See the &lt;a href="TESTING.asciidoc"&gt;TESTING&lt;/a&gt; for more information about running the Elasticsearch test suite.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h3 id="user-content-upgrading-from-older-elasticsearch-versions"&gt;&lt;a id="user-content-upgrading-from-older-elasticsearch-versions" class="anchor" aria-hidden="true" href="#upgrading-from-older-elasticsearch-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Upgrading from older Elasticsearch versions&lt;/h3&gt;
&lt;div&gt;
&lt;p&gt;In order to ensure a smooth upgrade process from earlier versions of Elasticsearch, please see our &lt;a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-upgrade.html" rel="nofollow"&gt;upgrade documentation&lt;/a&gt; for more details on the upgrade process.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/article&gt;&lt;/div&gt;</description><author>elastic</author><guid isPermaLink="false">https://github.com/elastic/elasticsearch</guid><pubDate>Thu, 06 Feb 2020 00:06:00 GMT</pubDate></item><item><title>TeamNewPipe/NewPipe #7 in Java, This week</title><link>https://github.com/TeamNewPipe/NewPipe</link><description>&lt;p&gt;&lt;i&gt;A libre lightweight streaming front-end for Android.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;&lt;a href="https://newpipe.schabi.org" rel="nofollow"&gt;&lt;img src="assets/new_pipe_icon_5.png" width="150" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2 align="center"&gt;&lt;a id="user-content-newpipe" class="anchor" aria-hidden="true" href="#newpipe"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;b&gt;NewPipe&lt;/b&gt;&lt;/h2&gt;
&lt;h4 align="center"&gt;&lt;a id="user-content-a-libre-lightweight-streaming-frontend-for-android" class="anchor" aria-hidden="true" href="#a-libre-lightweight-streaming-frontend-for-android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A libre lightweight streaming frontend for Android.&lt;/h4&gt;
&lt;p align="center"&gt;&lt;a href="https://f-droid.org/packages/org.schabi.newpipe/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fe347c40e0d48baa25fc425d0e54fb4671d543c9/68747470733a2f2f662d64726f69642e6f72672f77696b692f696d616765732f302f30362f462d44726f69642d627574746f6e5f6765742d69742d6f6e2e706e67" data-canonical-src="https://f-droid.org/wiki/images/0/06/F-Droid-button_get-it-on.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt;
&lt;a href="https://github.com/TeamNewPipe/NewPipe" alt="GitHub release"&gt;&lt;img src="https://camo.githubusercontent.com/8ec4697be25b8b8ad1cdcd514d359e30f08d7a5d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f5465616d4e6577506970652f4e6577506970652e737667" data-canonical-src="https://img.shields.io/github/release/TeamNewPipe/NewPipe.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.gnu.org/licenses/gpl-3.0" alt="License: GPLv3" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bf135a9cea09d0ea4bba410582c0e70ec8222736/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c25323076332d626c75652e737667" data-canonical-src="https://img.shields.io/badge/License-GPL%20v3-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/TeamNewPipe/NewPipe" alt="Build Status" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/35b7cec2b5c51b5204ed7bda8de2660c325e5035/68747470733a2f2f7472617669732d63692e6f72672f5465616d4e6577506970652f4e6577506970652e737667" data-canonical-src="https://travis-ci.org/TeamNewPipe/NewPipe.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://hosted.weblate.org/engage/NewPipe/" alt="Translation Status" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ccdf48733140a0e8e2b0f25e2d5f01ad9e8119af/68747470733a2f2f686f737465642e7765626c6174652e6f72672f776964676574732f4e6577506970652f2d2f7376672d62616467652e737667" data-canonical-src="https://hosted.weblate.org/widgets/NewPipe/-/svg-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://webchat.freenode.net/?channels=%23newpipe" alt="IRC channel: #newpipe" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a47c565df7764a10a8ac1c935dd7e93aaadd6135/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f495243253230636861742d2532336e6577706970652d627269676874677265656e2e737667" data-canonical-src="https://img.shields.io/badge/IRC%20chat-%23newpipe-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.bountysource.com/teams/newpipe" alt="Bountysource bounties" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7e67ad01dd3b836b4d1f90a0470c044352704dad/68747470733a2f2f696d672e736869656c64732e696f2f626f756e7479736f757263652f7465616d2f6e6577706970652f61637469766974792e7376673f636f6c6f72423d636432303166" data-canonical-src="https://img.shields.io/bountysource/team/newpipe/activity.svg?colorB=cd201f" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p align="center"&gt;&lt;a href="#screenshots"&gt;Screenshots&lt;/a&gt; • &lt;a href="#description"&gt;Description&lt;/a&gt; • &lt;a href="#features"&gt;Features&lt;/a&gt; • &lt;a href="#updates"&gt;Updates&lt;/a&gt; • &lt;a href="#contribution"&gt;Contribution&lt;/a&gt; • &lt;a href="#donate"&gt;Donate&lt;/a&gt; • &lt;a href="#license"&gt;License&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;&lt;a href="https://newpipe.schabi.org" rel="nofollow"&gt;Website&lt;/a&gt; • &lt;a href="https://newpipe.schabi.org/blog/" rel="nofollow"&gt;Blog&lt;/a&gt; • &lt;a href="https://newpipe.schabi.org/FAQ/" rel="nofollow"&gt;FAQ&lt;/a&gt; • &lt;a href="https://newpipe.schabi.org/press/" rel="nofollow"&gt;Press&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;b&gt;WARNING: THIS IS A BETA VERSION, THEREFORE YOU MAY ENCOUNTER BUGS. IF YOU DO, OPEN AN ISSUE VIA OUR GITHUB REPOSITORY.&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;PUTTING NEWPIPE OR ANY FORK OF IT INTO GOOGLE PLAYSTORE VIOLATES THEIR TERMS OF CONDITIONS.&lt;/b&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-screenshots" class="anchor" aria-hidden="true" href="#screenshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;a href="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_01.png"&gt;&lt;img src="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_01.png" width="160" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_02.png"&gt;&lt;img src="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_02.png" width="160" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_03.png"&gt;&lt;img src="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_03.png" width="160" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_04.png"&gt;&lt;img src="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_04.png" width="160" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_05.png"&gt;&lt;img src="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_05.png" width="160" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_06.png"&gt;&lt;img src="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_06.png" width="160" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_07.png"&gt;&lt;img src="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_07.png" width="160" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_08.png"&gt;&lt;img src="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_08.png" width="160" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_09.png"&gt;&lt;img src="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_09.png" width="160" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_10.png"&gt;&lt;img src="fastlane/metadata/android/en-US/images/phoneScreenshots/shot_10.png" width="160" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="fastlane/metadata/android/en-US/images/tenInchScreenshots/shot_11.png"&gt;&lt;img src="fastlane/metadata/android/en-US/images/tenInchScreenshots/shot_11.png" width="405" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="fastlane/metadata/android/en-US/images/tenInchScreenshots/shot_12.png"&gt;&lt;img src="fastlane/metadata/android/en-US/images/tenInchScreenshots/shot_12.png" width="405" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-description" class="anchor" aria-hidden="true" href="#description"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Description&lt;/h2&gt;
&lt;p&gt;NewPipe does not use any Google framework libraries, nor the YouTube API. Websites are only parsed to fetch required info, so this app can be used on devices without Google services installed. Also, you don't need a YouTube account to use NewPipe, which is copylefted libre software.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Search videos&lt;/li&gt;
&lt;li&gt;Display general info about videos&lt;/li&gt;
&lt;li&gt;Watch YouTube videos&lt;/li&gt;
&lt;li&gt;Listen to YouTube videos&lt;/li&gt;
&lt;li&gt;Popup mode (floating player)&lt;/li&gt;
&lt;li&gt;Select streaming player to watch video with&lt;/li&gt;
&lt;li&gt;Download videos&lt;/li&gt;
&lt;li&gt;Download audio only&lt;/li&gt;
&lt;li&gt;Open a video in Kodi&lt;/li&gt;
&lt;li&gt;Show next/related videos&lt;/li&gt;
&lt;li&gt;Search YouTube in a specific language&lt;/li&gt;
&lt;li&gt;Watch/Block age restricted material&lt;/li&gt;
&lt;li&gt;Display general info about channels&lt;/li&gt;
&lt;li&gt;Search channels&lt;/li&gt;
&lt;li&gt;Watch videos from a channel&lt;/li&gt;
&lt;li&gt;Orbot/Tor support (not yet directly)&lt;/li&gt;
&lt;li&gt;1080p/2K/4K support&lt;/li&gt;
&lt;li&gt;View history&lt;/li&gt;
&lt;li&gt;Subscribe to channels&lt;/li&gt;
&lt;li&gt;Search history&lt;/li&gt;
&lt;li&gt;Search/watch playlists&lt;/li&gt;
&lt;li&gt;Watch as enqueued playlists&lt;/li&gt;
&lt;li&gt;Enqueue videos&lt;/li&gt;
&lt;li&gt;Local playlists&lt;/li&gt;
&lt;li&gt;Subtitles&lt;/li&gt;
&lt;li&gt;Livestream support&lt;/li&gt;
&lt;li&gt;Show comments&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-coming-features" class="anchor" aria-hidden="true" href="#coming-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Coming Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Cast to UPnP and Cast&lt;/li&gt;
&lt;li&gt;… and many more&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-supported-services" class="anchor" aria-hidden="true" href="#supported-services"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Services&lt;/h3&gt;
&lt;p&gt;NewPipe supports multiple services. Our &lt;a href="https://teamnewpipe.github.io/documentation/" rel="nofollow"&gt;docs&lt;/a&gt; provide more info on how a new service can be added to the app and the extractor. Please get in touch with us if you intend to add a new one. Currently supported services are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;YouTube&lt;/li&gt;
&lt;li&gt;SoundCloud [beta]&lt;/li&gt;
&lt;li&gt;media.ccc.de [beta]&lt;/li&gt;
&lt;li&gt;PeerTube instances [beta]&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-updates" class="anchor" aria-hidden="true" href="#updates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Updates&lt;/h2&gt;
&lt;p&gt;When a change to the NewPipe code occurs (due to either adding features or bug fixing), eventually a release will occur. These are in the format x.xx.x . In order to get this new version, you can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Build a debug APK yourself. This is the fastest way to get new features on your device, but is much more complicated, so we recommend using one of the other methods.&lt;/li&gt;
&lt;li&gt;Download the APK from &lt;a href="https://github.com/TeamNewPipe/NewPipe/releases"&gt;releases&lt;/a&gt; and install it.&lt;/li&gt;
&lt;li&gt;Update via F-droid. This is the slowest method of getting updates, as F-Droid must recognize changes, build the APK itself, sign it, then push the update to users.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When you install an APK from one of these options, it will be incompatible with an APK from one of the other options. This is due to different signing keys being used. Signing keys help ensure that a user isn't tricked into installing a malicious update to an app, and are independent. F-Droid and GitHub use different signing keys, and building an APK debug excludes a key. The signing key issue is being discussed in issue &lt;a href="https://github.com/TeamNewPipe/NewPipe/issues/1981"&gt;#1981&lt;/a&gt;, and may be fixed by setting up our own repository on F-Droid.&lt;/p&gt;
&lt;p&gt;In the meanwhile, if you want to switch sources for some reason (e.g. NewPipe's core functionality was broken and F-Droid doesn't have the update yet), we recommend following this procedure:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Back up your data via "Settings&amp;gt;Content&amp;gt;Export Database" so you keep your history, subscriptions, and playlists&lt;/li&gt;
&lt;li&gt;Uninstall NewPipe&lt;/li&gt;
&lt;li&gt;Download the APK from the new source and install it&lt;/li&gt;
&lt;li&gt;Import the data from step 1 via "Settings&amp;gt;Content&amp;gt;Import Database"&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-contribution" class="anchor" aria-hidden="true" href="#contribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution&lt;/h2&gt;
&lt;p&gt;Whether you have ideas, translations, design changes, code cleaning, or real heavy code changes, help is always welcome.
The more is done the better it gets!&lt;/p&gt;
&lt;p&gt;If you'd like to get involved, check our &lt;a href=".github/CONTRIBUTING.md"&gt;contribution notes&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-donate" class="anchor" aria-hidden="true" href="#donate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Donate&lt;/h2&gt;
&lt;p&gt;If you like NewPipe we'd be happy about a donation. You can either send bitcoin or donate via Bountysource or Liberapay. For further info on donating to NewPipe, please visit our &lt;a href="https://newpipe.schabi.org/donate" rel="nofollow"&gt;website&lt;/a&gt;.&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;
    &lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/91b09ab1369d0d9ff64d380cd26444643fd19b00/68747470733a2f2f626974636f696e2e6f72672f696d672f69636f6e732f6c6f676f746f702e737667"&gt;&lt;img src="https://camo.githubusercontent.com/91b09ab1369d0d9ff64d380cd26444643fd19b00/68747470733a2f2f626974636f696e2e6f72672f696d672f69636f6e732f6c6f676f746f702e737667" alt="Bitcoin" data-canonical-src="https://bitcoin.org/img/icons/logotop.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/bitcoin_qr_code.png"&gt;&lt;img src="assets/bitcoin_qr_code.png" alt="Bitcoin QR code" width="100px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;samp&gt;16A9J59ahMRqkLSZjhYj33n9j3fMztFxnh&lt;/samp&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;a href="https://liberapay.com/TeamNewPipe/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/60fb0e3690437a0a746d94e3c4011cc8b8adcc68/68747470733a2f2f75706c6f61642e77696b696d656469612e6f72672f77696b6970656469612f636f6d6d6f6e732f322f32372f4c69626572617061795f6c6f676f5f76325f77686974652d6f6e2d79656c6c6f772e737667" alt="Liberapay" width="80px" data-canonical-src="https://upload.wikimedia.org/wikipedia/commons/2/27/Liberapay_logo_v2_white-on-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://liberapay.com/TeamNewPipe/" rel="nofollow"&gt;&lt;img src="assets/liberapay_qr_code.png" alt="Visit NewPipe at liberapay.com" width="100px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://liberapay.com/TeamNewPipe/donate" rel="nofollow"&gt;&lt;img src="assets/liberapay_donate_button.svg" alt="Donate via Liberapay" height="35px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;a href="https://www.bountysource.com/teams/newpipe" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/24d15d104e6670200a445c29817929cc166f5a6e/68747470733a2f2f75706c6f61642e77696b696d656469612e6f72672f77696b6970656469612f636f6d6d6f6e732f7468756d622f322f32322f426f756e7479736f757263652e706e672f33323070782d426f756e7479736f757263652e706e67" alt="Bountysource" width="190px" data-canonical-src="https://upload.wikimedia.org/wikipedia/commons/thumb/2/22/Bountysource.png/320px-Bountysource.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://www.bountysource.com/teams/newpipe" rel="nofollow"&gt;&lt;img src="assets/bountysource_qr_code.png" alt="Visit NewPipe at bountysource.com" width="100px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://www.bountysource.com/teams/newpipe/issues" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7e67ad01dd3b836b4d1f90a0470c044352704dad/68747470733a2f2f696d672e736869656c64732e696f2f626f756e7479736f757263652f7465616d2f6e6577706970652f61637469766974792e7376673f636f6c6f72423d636432303166" height="30px" alt="Check out how many bounties you can earn." data-canonical-src="https://img.shields.io/bountysource/team/newpipe/activity.svg?colorB=cd201f" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-privacy-policy" class="anchor" aria-hidden="true" href="#privacy-policy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Privacy Policy&lt;/h2&gt;
&lt;p&gt;The NewPipe project aims to provide a private, anonymous experience for using media web services.
Therefore, the app does not collect any data without your consent. NewPipe's privacy policy explains in detail what data is sent and stored when you send a crash report, or comment in our blog. You can find the document &lt;a href="https://newpipe.schabi.org/legal/privacy/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.gnu.org/licenses/gpl-3.0.en.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0e71b2b50532b8f93538000b46c70a78007d0117/68747470733a2f2f7777772e676e752e6f72672f67726170686963732f67706c76332d3132377835312e706e67" alt="GNU GPLv3 Image" data-canonical-src="https://www.gnu.org/graphics/gplv3-127x51.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NewPipe is Free Software: You can use, study share and improve it at your
will. Specifically you can redistribute and/or modify it under the terms of the
&lt;a href="https://www.gnu.org/licenses/gpl.html" rel="nofollow"&gt;GNU General Public License&lt;/a&gt; as
published by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>TeamNewPipe</author><guid isPermaLink="false">https://github.com/TeamNewPipe/NewPipe</guid><pubDate>Thu, 06 Feb 2020 00:07:00 GMT</pubDate></item><item><title>NationalSecurityAgency/ghidra #8 in Java, This week</title><link>https://github.com/NationalSecurityAgency/ghidra</link><description>&lt;p&gt;&lt;i&gt;Ghidra is a software reverse engineering (SRE) framework&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-ghidra-software-reverse-engineering-framework" class="anchor" aria-hidden="true" href="#ghidra-software-reverse-engineering-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ghidra Software Reverse Engineering Framework&lt;/h1&gt;
&lt;p&gt;Ghidra is a software reverse engineering (SRE) framework created and maintained by the &lt;a href="https://www.nsa.gov" rel="nofollow"&gt;National Security Agency&lt;/a&gt; Research Directorate. This framework includes a suite of full-featured, high-end software analysis tools that enable users to analyze compiled code on a variety of platforms including Windows, macOS, and Linux. Capabilities include disassembly, assembly, decompilation, graphing, and scripting, along with hundreds of other features. Ghidra supports a wide variety of processor instruction sets and executable formats and can be run in both user-interactive and automated modes. Users may also develop their own Ghidra plug-in components and/or scripts using Java or Python.&lt;/p&gt;
&lt;p&gt;In support of NSA's Cybersecurity mission, Ghidra was built to solve scaling and teaming problems on complex SRE efforts, and to provide a customizable and extensible SRE research platform. NSA has applied Ghidra SRE capabilities to a variety of problems that involve analyzing malicious code and generating deep insights for SRE analysts who seek a better understanding of potential vulnerabilities in networks and systems.&lt;/p&gt;
&lt;p&gt;To start developing extensions and scripts, try out the GhidraDev plugin for Eclipse, which is part of the distribution package.  The full release build can be downloaded from our &lt;a href="https://www.ghidra-sre.org/" rel="nofollow"&gt;project homepage&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This repository contains the source for the core framework, features, and extensions.
If you would like to contribute, please take a look at our &lt;a href="CONTRIBUTING.md"&gt;contributor guide&lt;/a&gt; to see how you can participate in this open source project.&lt;/p&gt;
&lt;p&gt;If you are a U.S. citizen interested in projects like this, to develop Ghidra, and
other cybersecurity tools, for NSA to help protect our nation and its allies,
consider applying for a &lt;a href="https://www.intelligencecareers.gov/nsa" rel="nofollow"&gt;career with us&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>NationalSecurityAgency</author><guid isPermaLink="false">https://github.com/NationalSecurityAgency/ghidra</guid><pubDate>Thu, 06 Feb 2020 00:08:00 GMT</pubDate></item><item><title>intuit/karate #9 in Java, This week</title><link>https://github.com/intuit/karate</link><description>&lt;p&gt;&lt;i&gt;Test Automation Made Simple&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content--karate" class="anchor" aria-hidden="true" href="#-karate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="karate-core/src/main/resources/karate-logo.svg"&gt;&lt;img src="karate-core/src/main/resources/karate-logo.svg" height="60" width="60" style="max-width:100%;"&gt;&lt;/a&gt; Karate&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-web-services-testing-made-simple" class="anchor" aria-hidden="true" href="#web-services-testing-made-simple"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Web-Services Testing Made &lt;code&gt;Simple.&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://mvnrepository.com/artifact/com.intuit.karate/karate-core" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0454fb17556089b79b4e52dcf34c4cdfb50d9a6f/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d63656e7472616c2f762f636f6d2e696e747569742e6b61726174652f6b61726174652d636f72652e737667" alt="Maven Central" data-canonical-src="https://img.shields.io/maven-central/v/com.intuit.karate/karate-core.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.org/intuit/karate" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/03dcdfb47b5a6e77c530df156d910635e74ba394/68747470733a2f2f7472617669732d63692e6f72672f696e747569742f6b61726174652e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/intuit/karate.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/intuit/karate/releases"&gt;&lt;img src="https://camo.githubusercontent.com/801e4e9d35d5428ebee9f65df464be7d089023f3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f696e747569742f6b61726174652e737667" alt="GitHub release" data-canonical-src="https://img.shields.io/github/release/intuit/karate.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/intuit/karate/wiki/Support"&gt;&lt;img src="https://camo.githubusercontent.com/7fc76292f6afb6c8ed100b85132382d7c5d8df2d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f737570706f72742d736c61636b2d7265642e737667" alt="Support Slack" data-canonical-src="https://img.shields.io/badge/support-slack-red.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://twitter.com/KarateDSL" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/47bd071793cdb3dbb69cdf597fac52c44c774dbc/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f4b617261746544534c2e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f77" alt="Twitter Follow" data-canonical-src="https://img.shields.io/twitter/follow/KarateDSL.svg?style=social&amp;amp;label=Follow" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Karate is the only open-source tool to combine API test-automation, &lt;a href="karate-netty"&gt;mocks&lt;/a&gt; and &lt;a href="karate-gatling"&gt;performance-testing&lt;/a&gt; into a &lt;strong&gt;single&lt;/strong&gt;, &lt;em&gt;unified&lt;/em&gt; framework. The BDD syntax popularized by Cucumber is language-neutral, and easy for even non-programmers. Besides powerful JSON &amp;amp; XML assertions, you can run tests in parallel for speed - which is critical for HTTP API testing.&lt;/p&gt;
&lt;p&gt;You can easily build (or re-use) complex request payloads, and dynamically construct more requests from response data. The  payload and schema validation engine can perform a 'smart compare' (deep-equals) of two JSON or XML documents, and you can even ignore dynamic values where needed.&lt;/p&gt;
&lt;p&gt;Test execution and report generation feels like any standard Java project. But there's also a &lt;a href="karate-netty#standalone-jar"&gt;stand-alone executable&lt;/a&gt; for teams not comfortable with Java. Just write tests in a &lt;strong&gt;simple&lt;/strong&gt;, &lt;em&gt;readable&lt;/em&gt; syntax - carefully designed for HTTP, JSON, GraphQL and XML.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-hello-world" class="anchor" aria-hidden="true" href="#hello-world"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hello World&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/ptrthomas/d5a2d9e15d0b07e4f1b46f692a599f93"&gt;&lt;img src="karate-demo/src/test/resources/karate-hello-world.jpg" height="400" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you are familiar with Cucumber / Gherkin, the &lt;a href="#cucumber-vs-karate"&gt;&lt;em&gt;big difference&lt;/em&gt;&lt;/a&gt; here is that you &lt;strong&gt;don't&lt;/strong&gt; need to write extra "glue" code or Java "step definitions" !&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It is worth pointing out that JSON is a 'first class citizen' of the syntax such that you can express payload and expected data without having to use double-quotes and without having to enclose JSON field names in quotes.  There is no need to 'escape' characters like you would have had to in Java or other programming languages.&lt;/p&gt;
&lt;p&gt;And you don't need to create additional Java classes for any of the payloads that you need to work with.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-index" class="anchor" aria-hidden="true" href="#index"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Index&lt;/h1&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
  &lt;th&gt;Start&lt;/th&gt;
  &lt;td&gt;
      &lt;a href="#maven"&gt;Maven&lt;/a&gt; 
    | &lt;a href="#gradle"&gt;Gradle&lt;/a&gt;
    | &lt;a href="#quickstart"&gt;Quickstart&lt;/a&gt;
    | &lt;a href="https://github.com/intuit/karate/tree/master/karate-netty#standalone-jar"&gt;Standalone Executable&lt;/a&gt;
    | &lt;a href="#folder-structure"&gt;Naming Conventions&lt;/a&gt;
    | &lt;a href="#script-structure"&gt;Script Structure&lt;/a&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Run&lt;/th&gt;
  &lt;td&gt;
      &lt;a href="#junit-4"&gt;JUnit 4&lt;/a&gt;
    | &lt;a href="#junit-5"&gt;JUnit 5&lt;/a&gt;
    | &lt;a href="#command-line"&gt;Command Line&lt;/a&gt;
    | &lt;a href="#ide-support"&gt;IDE Support&lt;/a&gt;    
    | &lt;a href="#tags"&gt;Tags / Grouping&lt;/a&gt;
    | &lt;a href="#parallel-execution"&gt;Parallel Execution&lt;/a&gt;
    | &lt;a href="#java-api"&gt;Java API&lt;/a&gt;    
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Report&lt;/th&gt;
  &lt;td&gt;
      &lt;a href="#configuration"&gt;Configuration&lt;/a&gt; 
    | &lt;a href="#switching-the-environment"&gt;Environment Switching&lt;/a&gt;
    | &lt;a href="#test-reports"&gt;Reports&lt;/a&gt;
    | &lt;a href="#junit-html-report"&gt;JUnit HTML Report&lt;/a&gt;
    | &lt;a href="#logging"&gt;Logging&lt;/a&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Types&lt;/th&gt;
  &lt;td&gt;
      &lt;a href="#json"&gt;JSON&lt;/a&gt; 
    | &lt;a href="#xml"&gt;XML&lt;/a&gt;
    | &lt;a href="#javascript-functions"&gt;JavaScript Functions&lt;/a&gt;
    | &lt;a href="#reading-files"&gt;Reading Files&lt;/a&gt;
    | &lt;a href="#type-conversion"&gt;Type / String Conversion&lt;/a&gt;
    | &lt;a href="#floats-and-integers"&gt;Floats and Integers&lt;/a&gt;
    | &lt;a href="#embedded-expressions"&gt;Embedded Expressions&lt;/a&gt;
    | &lt;a href="#jsonpath-filters"&gt;JsonPath&lt;/a&gt;
    | &lt;a href="#xpath-functions"&gt;XPath&lt;/a&gt;
    | &lt;a href="#karate-expressions"&gt;Karate Expressions&lt;/a&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Variables&lt;/th&gt;
  &lt;td&gt;
      &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#text"&gt;&lt;code&gt;text&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#table"&gt;&lt;code&gt;table&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#yaml"&gt;&lt;code&gt;yaml&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#csv"&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#type-string"&gt;&lt;code&gt;string&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#type-json"&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#type-xml"&gt;&lt;code&gt;xml&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#type-xmlstring"&gt;&lt;code&gt;xmlstring&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#type-bytes"&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#type-copy"&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Actions&lt;/th&gt;
  &lt;td&gt;
      &lt;a href="#assert"&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#print"&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#replace"&gt;&lt;code&gt;replace&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#get"&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; 
    | &lt;a href="#set"&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#remove"&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt;    
    | &lt;a href="#configure"&gt;&lt;code&gt;configure&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#call"&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; 
    | &lt;a href="#callonce"&gt;&lt;code&gt;callonce&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#eval"&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#reading-files"&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#the-karate-object"&gt;&lt;code&gt;karate&lt;/code&gt; API&lt;/a&gt;     
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;HTTP&lt;/th&gt;
  &lt;td&gt;
      &lt;a href="#url"&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; 
    | &lt;a href="#path"&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#request"&gt;&lt;code&gt;request&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#method"&gt;&lt;code&gt;method&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#status"&gt;&lt;code&gt;status&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#soap-action"&gt;&lt;code&gt;soap action&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#retry-until"&gt;&lt;code&gt;retry until&lt;/code&gt;&lt;/a&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Request&lt;/th&gt;
  &lt;td&gt;
      &lt;a href="#param"&gt;&lt;code&gt;param&lt;/code&gt;&lt;/a&gt; 
    | &lt;a href="#header"&gt;&lt;code&gt;header&lt;/code&gt;&lt;/a&gt;    
    | &lt;a href="#cookie"&gt;&lt;code&gt;cookie&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#form-field"&gt;&lt;code&gt;form field&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#multipart-file"&gt;&lt;code&gt;multipart file&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#multipart-field"&gt;&lt;code&gt;multipart field&lt;/code&gt;&lt;/a&gt;       
    | &lt;a href="#multipart-entity"&gt;&lt;code&gt;multipart entity&lt;/code&gt;&lt;/a&gt;    
    | &lt;a href="#params"&gt;&lt;code&gt;params&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#headers"&gt;&lt;code&gt;headers&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#cookies"&gt;&lt;code&gt;cookies&lt;/code&gt;&lt;/a&gt;        
    | &lt;a href="#form-fields"&gt;&lt;code&gt;form fields&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#multipart-files"&gt;&lt;code&gt;multipart files&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#multipart-fields"&gt;&lt;code&gt;multipart fields&lt;/code&gt;&lt;/a&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Response&lt;/th&gt;
  &lt;td&gt;
      &lt;a href="#response"&gt;&lt;code&gt;response&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#responsebytes"&gt;&lt;code&gt;responseBytes&lt;/code&gt;&lt;/a&gt; 
    | &lt;a href="#responsestatus"&gt;&lt;code&gt;responseStatus&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#responseheaders"&gt;&lt;code&gt;responseHeaders&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#responsecookies"&gt;&lt;code&gt;responseCookies&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#responsetime"&gt;&lt;code&gt;responseTime&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#requesttimestamp"&gt;&lt;code&gt;requestTimeStamp&lt;/code&gt;&lt;/a&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Assert&lt;/th&gt;
  &lt;td&gt;
      &lt;a href="#match"&gt;&lt;code&gt;match ==&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#match--not-equals"&gt;&lt;code&gt;match !=&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#match-contains"&gt;&lt;code&gt;match contains&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#match-contains-only"&gt;&lt;code&gt;match contains only&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#match-contains-any"&gt;&lt;code&gt;match contains any&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#not-contains"&gt;&lt;code&gt;match !contains&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#match-each"&gt;&lt;code&gt;match each&lt;/code&gt;&lt;/a&gt;
    | &lt;a href="#match-header"&gt;&lt;code&gt;match header&lt;/code&gt;&lt;/a&gt;    
    | &lt;a href="#fuzzy-matching"&gt;Fuzzy Matching&lt;/a&gt;
    | &lt;a href="#schema-validation"&gt;Schema Validation&lt;/a&gt;
    | &lt;a href="#contains-short-cuts"&gt;&lt;code&gt;contains&lt;/code&gt; short-cuts&lt;/a&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Re-Use&lt;/th&gt;
  &lt;td&gt;
      &lt;a href="#calling-other-feature-files"&gt;Calling Other &lt;code&gt;*.feature&lt;/code&gt; Files&lt;/a&gt;
    | &lt;a href="#data-driven-features"&gt;Data Driven Features&lt;/a&gt;       
    | &lt;a href="#calling-javascript-functions"&gt;Calling JavaScript Functions&lt;/a&gt;
    | &lt;a href="#calling-java"&gt;Calling Java Code&lt;/a&gt;
    | &lt;a href="#commonly-needed-utilities"&gt;Commonly Needed Utilities&lt;/a&gt;
    | &lt;a href="#data-driven-tests"&gt;Data Driven Scenarios&lt;/a&gt;    
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;Advanced&lt;/th&gt;
  &lt;td&gt;
      &lt;a href="#polling"&gt;Polling&lt;/a&gt;
    | &lt;a href="#conditional-logic"&gt;Conditional Logic&lt;/a&gt;
    | &lt;a href="#hooks"&gt;Before / After Hooks&lt;/a&gt;
    | &lt;a href="#json-transforms"&gt;JSON Transforms&lt;/a&gt;
    | &lt;a href="#loops"&gt;Loops&lt;/a&gt;
    | &lt;a href="#http-basic-authentication-example"&gt;HTTP Basic Auth&lt;/a&gt; 
    | &lt;a href="#http-header-manipulation"&gt;Header Manipulation&lt;/a&gt; 
    | &lt;a href="#text"&gt;GraphQL&lt;/a&gt;
    | &lt;a href="#async"&gt;Websockets / Async&lt;/a&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;th&gt;More&lt;/th&gt;
  &lt;td&gt;
      &lt;a href="karate-mock-servlet"&gt;Mock Servlet&lt;/a&gt;
    | &lt;a href="karate-netty"&gt;Test Doubles&lt;/a&gt;
    | &lt;a href="karate-gatling"&gt;Performance Testing&lt;/a&gt;
    | &lt;a href="karate-core"&gt;UI Testing&lt;/a&gt;
    | &lt;a href="https://github.com/intuit/karate/wiki/Karate-UI"&gt;Karate UI&lt;/a&gt;
    | &lt;a href="#comparison-with-rest-assured"&gt;Karate vs REST-assured&lt;/a&gt;
    | &lt;a href="#cucumber-vs-karate"&gt;Karate vs Cucumber&lt;/a&gt;
    | &lt;a href="karate-demo"&gt;Examples and Demos&lt;/a&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Java knowledge is not required and even non-programmers can write tests&lt;/li&gt;
&lt;li&gt;Scripts are plain-text, require no compilation step or IDE, and teams can collaborate using Git / standard SCM&lt;/li&gt;
&lt;li&gt;Based on the popular Cucumber / Gherkin standard - with &lt;a href="#running-in-eclipse-or-intellij"&gt;IDE support&lt;/a&gt; and syntax-coloring options&lt;/li&gt;
&lt;li&gt;Elegant &lt;a href="https://en.wikipedia.org/wiki/Domain-specific_language" rel="nofollow"&gt;DSL&lt;/a&gt; syntax 'natively' supports JSON and XML - including &lt;a href="#set"&gt;JsonPath&lt;/a&gt; and &lt;a href="#xpath-functions"&gt;XPath&lt;/a&gt; expressions&lt;/li&gt;
&lt;li&gt;Eliminate the need for 'Java Beans' or 'helper code' to represent payloads and HTTP end-points, and &lt;a href="https://twitter.com/KarateDSL/status/873035687817117696" rel="nofollow"&gt;dramatically reduce the lines of code&lt;/a&gt; needed for a test&lt;/li&gt;
&lt;li&gt;Ideal for testing the highly dynamic responses from &lt;a href="http://graphql.org" rel="nofollow"&gt;GraphQL&lt;/a&gt; API-s because of Karate's built-in &lt;a href="#text"&gt;text-manipulation&lt;/a&gt; and &lt;a href="https://github.com/json-path/JsonPath#path-examples"&gt;JsonPath&lt;/a&gt; capabilities&lt;/li&gt;
&lt;li&gt;Tests are super-readable - as scenario data can be expressed in-line, in human-friendly &lt;a href="#json"&gt;JSON&lt;/a&gt;, &lt;a href="#xml"&gt;XML&lt;/a&gt;, Cucumber &lt;a href="#the-cucumber-way"&gt;Scenario&lt;/a&gt; Outline &lt;a href="#table"&gt;tables&lt;/a&gt;, or a &lt;a href="#set-multiple"&gt;payload builder&lt;/a&gt; approach &lt;a href="https://gist.github.com/ptrthomas/d6beb17e92a43220d254af942e3ed3d9"&gt;unique to Karate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Express expected results as readable, well-formed JSON or XML, and &lt;a href="#match"&gt;assert in a single step&lt;/a&gt; that the entire response payload (no matter how complex or deeply nested) - is as expected&lt;/li&gt;
&lt;li&gt;Comprehensive &lt;a href="#fuzzy-matching"&gt;assertion capabilities&lt;/a&gt; - and failures clearly report which data element (and path) is not as expected, for easy troubleshooting of even large payloads&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/intuit/karate/wiki/Karate-UI"&gt;Embedded UI&lt;/a&gt; for stepping through a script in debug mode where you can even &lt;a href="https://twitter.com/ptrthomas/status/889356965461217281" rel="nofollow"&gt;re-play a step while editing it&lt;/a&gt; - a huge time-saver&lt;/li&gt;
&lt;li&gt;Simpler and more &lt;a href="https://twitter.com/KarateDSL/status/878984854012022784" rel="nofollow"&gt;powerful alternative&lt;/a&gt; to JSON-schema for &lt;a href="#schema-validation"&gt;validating payload structure&lt;/a&gt; and format - that even supports cross-field / domain validation logic&lt;/li&gt;
&lt;li&gt;Scripts can &lt;a href="#calling-other-feature-files"&gt;call other scripts&lt;/a&gt; - which means that you can easily re-use and maintain authentication and 'set up' flows efficiently, across multiple tests&lt;/li&gt;
&lt;li&gt;Embedded JavaScript engine that allows you to build a library of &lt;a href="#calling-javascript-functions"&gt;re-usable functions&lt;/a&gt; that suit your specific environment or organization&lt;/li&gt;
&lt;li&gt;Re-use of payload-data and user-defined functions across tests is &lt;a href="#reading-files"&gt;so easy&lt;/a&gt; - that it becomes a natural habit for the test-developer&lt;/li&gt;
&lt;li&gt;Built-in support for &lt;a href="#switching-the-environment"&gt;switching configuration&lt;/a&gt; across different environments (e.g. dev, QA, pre-prod)&lt;/li&gt;
&lt;li&gt;Support for &lt;a href="#data-driven-tests"&gt;data-driven tests&lt;/a&gt; and being able to &lt;a href="#tags"&gt;tag or group&lt;/a&gt; tests is built-in, no need to rely on an external framework&lt;/li&gt;
&lt;li&gt;Native support for reading &lt;a href="#yaml"&gt;YAML&lt;/a&gt; and even &lt;a href="#csv-files"&gt;CSV&lt;/a&gt; files - and you can use them for data-driven tests&lt;/li&gt;
&lt;li&gt;Standard Java / Maven project structure, and &lt;a href="#command-line"&gt;seamless integration&lt;/a&gt; into CI / CD pipelines - and support for &lt;a href="#junit-5"&gt;JUnit 5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Option to use as a light-weight &lt;a href="https://github.com/intuit/karate/tree/master/karate-netty#standalone-jar"&gt;stand-alone executable&lt;/a&gt; - convenient for teams not comfortable with Java&lt;/li&gt;
&lt;li&gt;Support for multi-threaded &lt;a href="#parallel-execution"&gt;parallel execution&lt;/a&gt;, which is a huge time-saver, especially for HTTP integration tests&lt;/li&gt;
&lt;li&gt;Built-in &lt;a href="#test-reports"&gt;test-reports&lt;/a&gt; compatible with Cucumber so that you have the option of using third-party (open-source) maven-plugins for even &lt;a href="karate-demo#example-report"&gt;better-looking reports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Reports include HTTP request and response &lt;a href="#test-reports"&gt;logs in-line&lt;/a&gt;, which makes &lt;a href="https://twitter.com/KarateDSL/status/899671441221623809" rel="nofollow"&gt;troubleshooting&lt;/a&gt; and &lt;a href="https://twitter.com/KarateDSL/status/935029435140489216" rel="nofollow"&gt;debugging a test&lt;/a&gt; a lot easier&lt;/li&gt;
&lt;li&gt;Easily invoke JDK classes, Java libraries, or re-use custom Java code if needed, for &lt;a href="#calling-java"&gt;ultimate extensibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Simple plug-in system for &lt;a href="#http-basic-authentication-example"&gt;authentication&lt;/a&gt; and HTTP &lt;a href="#configure-headers"&gt;header management&lt;/a&gt; that will handle any complex, real-world scenario&lt;/li&gt;
&lt;li&gt;Future-proof 'pluggable' HTTP client abstraction supports both Apache and Jersey so that you can &lt;a href="#maven"&gt;choose&lt;/a&gt; what works best in your project, and not be blocked by library or dependency conflicts&lt;/li&gt;
&lt;li&gt;Option to invoke via a &lt;a href="#java-api"&gt;Java API&lt;/a&gt;,  which means that you can easily &lt;a href="https://stackoverflow.com/q/47795762/143475" rel="nofollow"&gt;mix Karate into existing Selenium / WebDriver test-suites&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="karate-core"&gt;Cross-browser Web, Mobile and Desktop UI automation&lt;/a&gt; (experimental) so that you can test &lt;em&gt;all&lt;/em&gt; layers of your application with the same framework&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/ptrthomas/status/986463717465391104" rel="nofollow"&gt;Save significant effort&lt;/a&gt; by re-using Karate test-suites as &lt;a href="karate-gatling"&gt;Gatling performance tests&lt;/a&gt; that deeply assert that server responses are accurate under load&lt;/li&gt;
&lt;li&gt;Gatling integration can hook into &lt;a href="https://github.com/intuit/karate/tree/master/karate-gatling#custom"&gt;&lt;em&gt;any&lt;/em&gt; custom Java code&lt;/a&gt; - which means that you can perf-test even non-HTTP protocols such as &lt;a href="https://github.com/thinkerou/karate-grpc"&gt;gRPC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="karate-netty"&gt;API mocks&lt;/a&gt; or test-doubles that even &lt;a href="https://hackernoon.com/api-consumer-contract-tests-and-test-doubles-with-karate-72c30ea25c18" rel="nofollow"&gt;maintain CRUD 'state'&lt;/a&gt; across multiple calls - enabling TDD for micro-services and &lt;a href="https://martinfowler.com/articles/consumerDrivenContracts.html" rel="nofollow"&gt;Consumer Driven Contracts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#async"&gt;Async&lt;/a&gt; support that allows you to seamlessly integrate listening to message-queues within a test&lt;/li&gt;
&lt;li&gt;&lt;a href="karate-mock-servlet"&gt;Mock HTTP Servlet&lt;/a&gt; that enables you to test &lt;strong&gt;any&lt;/strong&gt; controller servlet such as Spring Boot / MVC or Jersey / JAX-RS - without having to boot an app-server, and you can use your HTTP integration tests un-changed&lt;/li&gt;
&lt;li&gt;Comprehensive support for different flavors of HTTP calls:
&lt;ul&gt;
&lt;li&gt;&lt;a href="#soap-action"&gt;SOAP&lt;/a&gt; / XML requests&lt;/li&gt;
&lt;li&gt;HTTPS / &lt;a href="#configure"&gt;SSL&lt;/a&gt; - without needing certificates, key-stores or trust-stores&lt;/li&gt;
&lt;li&gt;HTTP &lt;a href="#configure"&gt;proxy server&lt;/a&gt; support&lt;/li&gt;
&lt;li&gt;URL-encoded &lt;a href="#form-field"&gt;HTML-form&lt;/a&gt; data&lt;/li&gt;
&lt;li&gt;&lt;a href="#multipart-field"&gt;Multi-part&lt;/a&gt; file-upload - including &lt;code&gt;multipart/mixed&lt;/code&gt; and &lt;code&gt;multipart/related&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Browser-like &lt;a href="#cookie"&gt;cookie&lt;/a&gt; handling&lt;/li&gt;
&lt;li&gt;Full control over HTTP &lt;a href="#header"&gt;headers&lt;/a&gt;, &lt;a href="#path"&gt;path&lt;/a&gt; and query &lt;a href="#param"&gt;parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#retry-until"&gt;Re-try&lt;/a&gt; until condition&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.websocket.org" rel="nofollow"&gt;Websocket&lt;/a&gt; &lt;a href="#async"&gt;support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Intelligent defaults&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-real-world-examples" class="anchor" aria-hidden="true" href="#real-world-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Real World Examples&lt;/h2&gt;
&lt;p&gt;A set of real-life examples can be found here: &lt;a href="karate-demo"&gt;Karate Demos&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-comparison-with-rest-assured" class="anchor" aria-hidden="true" href="#comparison-with-rest-assured"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Comparison with REST-assured&lt;/h2&gt;
&lt;p&gt;For teams familiar with or currently using &lt;a href="http://rest-assured.io" rel="nofollow"&gt;REST-assured&lt;/a&gt;, this detailed comparison of &lt;a href="http://tinyurl.com/karatera" rel="nofollow"&gt;Karate vs REST-assured&lt;/a&gt; - can help you evaluate Karate.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-references" class="anchor" aria-hidden="true" href="#references"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.baeldung.com/karate-rest-api-testing" rel="nofollow"&gt;REST API Testing with Karate&lt;/a&gt; - tutorial by &lt;a href="http://www.baeldung.com/author/baeldung/" rel="nofollow"&gt;Baeldung&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://techbeacon.com/9-great-open-source-api-testing-tools-how-choose" rel="nofollow"&gt;9 great open-source API testing tools: how to choose&lt;/a&gt; - &lt;a href="https://techbeacon.com" rel="nofollow"&gt;TechBeacon&lt;/a&gt; article by &lt;a href="https://twitter.com/jcolantonio" rel="nofollow"&gt;Joe Colantonio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devfesttoulouse.fr/schedule/2018-11-08?sessionId=4128" rel="nofollow"&gt;Ceinture noire Karate en tests d’API REST&lt;/a&gt; - &lt;a href="https://github.com/ncomet/karate-conf2018"&gt;Slides and Code&lt;/a&gt; - &lt;a href="https://devfesttoulouse.fr" rel="nofollow"&gt;DevFest Touluse 2018&lt;/a&gt; talk by &lt;a href="https://twitter.com/NicolasComet" rel="nofollow"&gt;Nicolas Comet&lt;/a&gt; and &lt;a href="https://twitter.com/binout" rel="nofollow"&gt;Benoît Prioux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adapt.to/2018/en/schedule/karate-the-black-belt-of-http-api-testing.html" rel="nofollow"&gt;Karate, the black belt of HTTP API testing ? - Video / Slides&lt;/a&gt; / &lt;a href="https://twitter.com/bdelacretaz/status/1039444256572751873" rel="nofollow"&gt;Photo&lt;/a&gt; / &lt;a href="http://tinyurl.com/potsdam2018" rel="nofollow"&gt;Code&lt;/a&gt; - &lt;a href="https://adapt.to/2018/en.html" rel="nofollow"&gt;adaptTo() 2018&lt;/a&gt; talk by &lt;a href="https://twitter.com/bdelacretaz" rel="nofollow"&gt;Bertrand Delacretaz&lt;/a&gt; of Adobe &amp;amp; the Apache Software Foundation (&lt;a href="http://www.apache.org/foundation/#who-runs-the-asf" rel="nofollow"&gt;Board of Directors&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://automationpanda.com/2018/12/10/testing-web-services-with-karate/" rel="nofollow"&gt;Testing Web Services with Karate&lt;/a&gt; - quick start guide and review by &lt;a href="https://twitter.com/automationpanda" rel="nofollow"&gt;Andrew Knight&lt;/a&gt; at the &lt;em&gt;Automation Panda&lt;/em&gt; blog&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can find a lot more references &lt;a href="https://github.com/intuit/karate/wiki/Community-News"&gt;in the wiki&lt;/a&gt;. Karate also has its own 'tag' and a very active and supportive community at &lt;a href="https://stackoverflow.com/questions/tagged/karate" rel="nofollow"&gt;Stack Overflow&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h1&gt;
&lt;p&gt;Karate requires &lt;a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" rel="nofollow"&gt;Java&lt;/a&gt; 8 (at least version 1.8.0_112 or greater) and then either &lt;a href="http://maven.apache.org" rel="nofollow"&gt;Maven&lt;/a&gt;, &lt;a href="https://gradle.org" rel="nofollow"&gt;Gradle&lt;/a&gt;, &lt;a href="#eclipse-quickstart"&gt;Eclipse&lt;/a&gt; or &lt;a href="https://github.com/intuit/karate/wiki/IDE-Support#intellij-community-edition"&gt;IntelliJ&lt;/a&gt; to be installed.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you are new to programming or test-automation, refer to this video for &lt;a href="https://youtu.be/W-af7Cd8cMc" rel="nofollow"&gt;getting started with just the (free) IntelliJ Community Edition&lt;/a&gt;. Other options are the &lt;a href="#quickstart"&gt;quickstart&lt;/a&gt; or the &lt;a href="karate-netty#standalone-jar"&gt;standalone executable&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-maven" class="anchor" aria-hidden="true" href="#maven"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maven&lt;/h2&gt;
&lt;p&gt;Karate is designed so that you can choose between the &lt;a href="https://hc.apache.org/index.html" rel="nofollow"&gt;Apache&lt;/a&gt; or &lt;a href="https://jersey.java.net" rel="nofollow"&gt;Jersey&lt;/a&gt; HTTP client implementations.&lt;/p&gt;
&lt;p&gt;So you need two &lt;code&gt;&amp;lt;dependencies&amp;gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;com.intuit.karate&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;karate-apache&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;0.9.4&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;scope&lt;/span&gt;&amp;gt;test&amp;lt;/&lt;span class="pl-ent"&gt;scope&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;com.intuit.karate&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;karate-junit4&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;0.9.4&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;scope&lt;/span&gt;&amp;gt;test&amp;lt;/&lt;span class="pl-ent"&gt;scope&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And if you run into class-loading conflicts, for example if an older version of the Apache libraries are being used within your project - then use &lt;code&gt;karate-jersey&lt;/code&gt; instead of &lt;code&gt;karate-apache&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you want to use &lt;a href="#junit-5"&gt;JUnit 5&lt;/a&gt;, use &lt;code&gt;karate-junit5&lt;/code&gt; instead of &lt;code&gt;karate-junit4&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;a href="https://github.com/intuit/karate/wiki/Karate-UI"&gt;Karate UI&lt;/a&gt; is no longer part of the core framework from 0.9.3 onwards, and is an optional dependency called &lt;code&gt;karate-ui&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-gradle" class="anchor" aria-hidden="true" href="#gradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle&lt;/h2&gt;
&lt;p&gt;Alternatively for &lt;a href="https://gradle.org" rel="nofollow"&gt;Gradle&lt;/a&gt; you need these two entries:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;    &lt;span class="pl-s"&gt;testCompile 'com.intuit.karate:karate-junit4:0.9.4'&lt;/span&gt;
    &lt;span class="pl-s"&gt;testCompile 'com.intuit.karate:karate-apache:0.9.4'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart&lt;/h3&gt;
&lt;p&gt;It may be easier for you to use the Karate Maven archetype to create a skeleton project with one command. You can then skip the next few sections, as the &lt;code&gt;pom.xml&lt;/code&gt;, recommended directory structure, sample test and &lt;a href="#junit-5"&gt;JUnit 5&lt;/a&gt; runners - will be created for you.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you are behind a corporate proxy, or especially if your local Maven installation has been configured to point to a repository within your local network, the command below may not work. One workaround is to temporarily disable or rename your Maven &lt;a href="https://maven.apache.org/settings.html" rel="nofollow"&gt;&lt;code&gt;settings.xml&lt;/code&gt;&lt;/a&gt; file, and try again.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can replace the values of &lt;code&gt;com.mycompany&lt;/code&gt; and &lt;code&gt;myproject&lt;/code&gt; as per your needs.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mvn archetype:generate \
-DarchetypeGroupId=com.intuit.karate \
-DarchetypeArtifactId=karate-archetype \
-DarchetypeVersion=0.9.4 \
-DgroupId=com.mycompany \
-DartifactId=myproject
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will create a folder called &lt;code&gt;myproject&lt;/code&gt; (or whatever you set the name to).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There is an issue with the &lt;code&gt;0.9.4&lt;/code&gt; quickstart, please read this as well: &lt;a href="https://github.com/intuit/karate/issues/823#issuecomment-509608205"&gt;fix for 0.9.4 Maven archetype&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-intellij-quickstart" class="anchor" aria-hidden="true" href="#intellij-quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;IntelliJ Quickstart&lt;/h3&gt;
&lt;p&gt;Refer to this video for &lt;a href="https://youtu.be/W-af7Cd8cMc" rel="nofollow"&gt;getting started with the free IntelliJ Community Edition&lt;/a&gt;. It simplifies the above process, since you only need to install IntelliJ. For Eclipse, refer to the wiki on &lt;a href="https://github.com/intuit/karate/wiki/IDE-Support"&gt;IDE Support&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-folder-structure" class="anchor" aria-hidden="true" href="#folder-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Folder Structure&lt;/h2&gt;
&lt;p&gt;A Karate test script has the file extension &lt;code&gt;.feature&lt;/code&gt; which is the standard followed by Cucumber.  You are free to organize your files using regular Java package conventions.&lt;/p&gt;
&lt;p&gt;The Maven tradition is to have non-Java source files in a separate &lt;code&gt;src/test/resources&lt;/code&gt; folder structure - but we recommend that you keep them side-by-side with your &lt;code&gt;*.java&lt;/code&gt; files. When you have a large and complex project, you will end up with a few data files (e.g. &lt;code&gt;*.js&lt;/code&gt;, &lt;code&gt;*.json&lt;/code&gt;, &lt;code&gt;*.txt&lt;/code&gt;) as well and it is much more convenient to see the &lt;code&gt;*.java&lt;/code&gt; and &lt;code&gt;*.feature&lt;/code&gt; files and all related artifacts in the same place.&lt;/p&gt;
&lt;p&gt;This can be easily achieved with the following tweak to your maven &lt;code&gt;&amp;lt;build&amp;gt;&lt;/code&gt; section.&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;build&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;testResources&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;testResource&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;directory&lt;/span&gt;&amp;gt;src/test/java&amp;lt;/&lt;span class="pl-ent"&gt;directory&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;excludes&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class="pl-ent"&gt;exclude&lt;/span&gt;&amp;gt;**/*.java&amp;lt;/&lt;span class="pl-ent"&gt;exclude&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class="pl-ent"&gt;excludes&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;testResource&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;testResources&lt;/span&gt;&amp;gt;        
    &amp;lt;&lt;span class="pl-ent"&gt;plugins&lt;/span&gt;&amp;gt;
    ...
    &amp;lt;/&lt;span class="pl-ent"&gt;plugins&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;build&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is very common in the world of Maven users and keep in mind that these are tests and not production code.&lt;/p&gt;
&lt;p&gt;Alternatively, if using Gradle then add the following &lt;code&gt;sourceSets&lt;/code&gt; definition&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-s"&gt;sourceSets {&lt;/span&gt;
    &lt;span class="pl-s"&gt;test {&lt;/span&gt;
        &lt;span class="pl-s"&gt;resources {&lt;/span&gt;
            &lt;span class="pl-s"&gt;srcDir file('src/test/java')&lt;/span&gt;
            &lt;span class="pl-s"&gt;exclude '**/*.java'&lt;/span&gt;
        &lt;span class="pl-s"&gt;}&lt;/span&gt;
    &lt;span class="pl-s"&gt;}&lt;/span&gt;
&lt;span class="pl-s"&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With the above in place, you don't have to keep switching between your &lt;code&gt;src/test/java&lt;/code&gt; and &lt;code&gt;src/test/resources&lt;/code&gt; folders, you can have all your test-code and artifacts under &lt;code&gt;src/test/java&lt;/code&gt; and everything will work as expected.&lt;/p&gt;
&lt;p&gt;Once you get used to this, you may even start wondering why projects need a &lt;code&gt;src/test/resources&lt;/code&gt; folder at all !&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-naming-conventions" class="anchor" aria-hidden="true" href="#naming-conventions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Naming Conventions&lt;/h2&gt;
&lt;p&gt;Since these are tests and not production Java code, you don't need to be bound by the &lt;code&gt;com.mycompany.foo.bar&lt;/code&gt; convention and the un-necessary explosion of sub-folders that ensues. We suggest that you have a folder hierarchy only one or two levels deep - where the folder names clearly identify which 'resource', 'entity' or API is the web-service under test.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;src/test/java
    |
    +-- karate-config.js
    +-- logback-test.xml
    +-- some-reusable.feature
    +-- some-classpath-function.js
    +-- some-classpath-payload.json
    |
    \-- animals
        |
        +-- AnimalsTest.java
        |
        +-- cats
        |   |
        |   +-- cats-post.feature
        |   +-- cats-get.feature
        |   +-- cat.json
        |   \-- CatsRunner.java
        |
        \-- dogs
            |
            +-- dog-crud.feature
            +-- dog.json
            +-- some-helper-function.js
            \-- DogsRunner.java
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Assuming you use JUnit, there are some good reasons for the recommended (best practice) naming convention and choice of file-placement shown above:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Not using the &lt;code&gt;*Test.java&lt;/code&gt; convention for the JUnit classes (e.g. &lt;code&gt;CatsRunner.java&lt;/code&gt;) in the &lt;code&gt;cats&lt;/code&gt; and &lt;code&gt;dogs&lt;/code&gt; folder ensures that these tests will &lt;strong&gt;not&lt;/strong&gt; be picked up when invoking &lt;code&gt;mvn test&lt;/code&gt; (for the whole project) from the &lt;a href="#command-line"&gt;command line&lt;/a&gt;. But you can still invoke these tests from the IDE, which is convenient when in development mode.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AnimalsTest.java&lt;/code&gt; (the only file that follows the &lt;code&gt;*Test.java&lt;/code&gt; naming convention) acts as the 'test suite' for the entire project. By default, Karate will load all &lt;code&gt;*.feature&lt;/code&gt; files from sub-directories as well. But since &lt;code&gt;some-reusable.feature&lt;/code&gt; is &lt;em&gt;above&lt;/em&gt; &lt;code&gt;AnimalsTest.java&lt;/code&gt; in the folder hierarchy, it will &lt;strong&gt;not&lt;/strong&gt; be picked-up. Which is exactly what we want, because &lt;code&gt;some-reusable.feature&lt;/code&gt; is designed to be &lt;a href="#calling-other-feature-files"&gt;called&lt;/a&gt; only from one of the other test scripts (perhaps with some parameters being passed). You can also use &lt;a href="#tags"&gt;tags&lt;/a&gt; to skip files.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;some-classpath-function.js&lt;/code&gt; and &lt;code&gt;some-classpath-payload.json&lt;/code&gt; are in the 'root' of the Java &lt;a href="#classpath"&gt;'classpath'&lt;/a&gt; which means they can be easily &lt;a href="#reading-files"&gt;read&lt;/a&gt; (and re-used) from any test-script by using the &lt;code&gt;classpath:&lt;/code&gt; prefix, for e.g: &lt;code&gt;read('classpath:some-classpath-function.js')&lt;/code&gt;. Relative paths will also work.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For details on what actually goes into a script or &lt;code&gt;*.feature&lt;/code&gt; file, refer to the &lt;a href="#syntax-guide"&gt;syntax guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ide-support" class="anchor" aria-hidden="true" href="#ide-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;IDE Support&lt;/h2&gt;
&lt;p&gt;Refer to the wiki - &lt;a href="https://github.com/intuit/karate/wiki/IDE-Support"&gt;IDE Support&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-fileencoding" class="anchor" aria-hidden="true" href="#fileencoding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;file.encoding&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;In some cases, for large payloads and especially when the default system encoding is not &lt;code&gt;UTF-8&lt;/code&gt; (Windows or non-US locales), you may run into issues where a &lt;code&gt;java.io.ByteArrayInputStream&lt;/code&gt; is encountered instead of a string. Other errors could be a &lt;code&gt;java.net.URISyntaxException&lt;/code&gt; and &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; not working as expected because of special or foreign characters, e.g. German or &lt;code&gt;ISO-8859-15&lt;/code&gt;. Typical symptoms are your tests working fine via the IDE but not when running via Maven or Gradle. The solution is to ensure that when Karate tests run, the JVM &lt;code&gt;file.encoding&lt;/code&gt; is set to &lt;code&gt;UTF-8&lt;/code&gt;. This can be done via the &lt;a href="http://maven.apache.org/surefire/maven-surefire-plugin/test-mojo.html#argLine" rel="nofollow"&gt;&lt;code&gt;maven-surefire-plugin&lt;/code&gt; configuration&lt;/a&gt;. Add the plugin to the &lt;code&gt;&amp;lt;build&amp;gt;/&amp;lt;plugins&amp;gt;&lt;/code&gt; section of your &lt;code&gt;pom.xml&lt;/code&gt; if not already present:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;    &amp;lt;&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.apache.maven.plugins&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;maven-surefire-plugin&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;2.10&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;argLine&lt;/span&gt;&amp;gt;-Dfile.encoding=UTF-8&amp;lt;/&lt;span class="pl-ent"&gt;argLine&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-junit-4" class="anchor" aria-hidden="true" href="#junit-4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JUnit 4&lt;/h2&gt;
&lt;p&gt;To run a script &lt;code&gt;*.feature&lt;/code&gt; file from your Java IDE, you just need the following empty test-class in the same package. The name of the class doesn't matter, and it will automatically run any &lt;code&gt;*.feature&lt;/code&gt; file in the same package. This comes in useful because depending on how you organize your files and folders - you can have multiple feature files executed by a single JUnit test-class.&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;package&lt;/span&gt; &lt;span class="pl-smi"&gt;animals.cats&lt;/span&gt;;

&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.intuit.karate.junit4.Karate&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.junit.runner.RunWith&lt;/span&gt;;

&lt;span class="pl-k"&gt;@RunWith&lt;/span&gt;(&lt;span class="pl-smi"&gt;Karate&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;class)
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;CatsRunner&lt;/span&gt; {
	
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Refer to your IDE documentation for how to run a JUnit class.  Typically right-clicking on the file in the project browser or even within the editor view would bring up the "Run as JUnit Test" menu option.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Karate will traverse sub-directories and look for &lt;code&gt;*.feature&lt;/code&gt; files. For example if you have the JUnit class in the &lt;code&gt;com.mycompany&lt;/code&gt; package, &lt;code&gt;*.feature&lt;/code&gt; files in &lt;code&gt;com.mycompany.foo&lt;/code&gt; and &lt;code&gt;com.mycompany.bar&lt;/code&gt; will also be run. This is one reason why you may want to prefer a 'flat' directory structure as &lt;a href="#naming-conventions"&gt;explained above&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-junit-5" class="anchor" aria-hidden="true" href="#junit-5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JUnit 5&lt;/h2&gt;
&lt;p&gt;Karate supports JUnit 5 and the advantage is that you can have multiple methods in a test-class. Only one &lt;code&gt;import&lt;/code&gt; is needed, and instead of a class-level annotation, you use a nice &lt;a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself" rel="nofollow"&gt;DRY&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Fluent_interface" rel="nofollow"&gt;fluent-api&lt;/a&gt; to express which tests and tags you want to use.&lt;/p&gt;
&lt;p&gt;Note that the Java class does not need to be &lt;code&gt;public&lt;/code&gt; and even the test methods do not need to be &lt;code&gt;public&lt;/code&gt; - so tests end up being very concise.&lt;/p&gt;
&lt;p&gt;Here is an &lt;a href="karate-junit5/src/test/java/karate/SampleTest.java"&gt;example&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;package&lt;/span&gt; &lt;span class="pl-smi"&gt;karate&lt;/span&gt;;

&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.intuit.karate.junit5.Karate&lt;/span&gt;;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;SampleTest&lt;/span&gt; {

    &lt;span class="pl-k"&gt;@Karate&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-smi"&gt;Test&lt;/span&gt;
    &lt;span class="pl-smi"&gt;Karate&lt;/span&gt; &lt;span class="pl-en"&gt;testSample&lt;/span&gt;() {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Karate&lt;/span&gt;()&lt;span class="pl-k"&gt;.&lt;/span&gt;feature(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sample&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;.&lt;/span&gt;relativeTo(getClass());
    }
    
    &lt;span class="pl-k"&gt;@Karate&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-smi"&gt;Test&lt;/span&gt;
    &lt;span class="pl-smi"&gt;Karate&lt;/span&gt; &lt;span class="pl-en"&gt;testTags&lt;/span&gt;() {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Karate&lt;/span&gt;()&lt;span class="pl-k"&gt;.&lt;/span&gt;feature(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tags&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;.&lt;/span&gt;tags(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;@second&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;.&lt;/span&gt;relativeTo(getClass());
    }

    &lt;span class="pl-k"&gt;@Karate&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-smi"&gt;Test&lt;/span&gt;
    &lt;span class="pl-smi"&gt;Karate&lt;/span&gt; &lt;span class="pl-en"&gt;testFullPath&lt;/span&gt;() {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Karate&lt;/span&gt;()
                .feature(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;classpath:karate/tags.feature&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                .tags(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;@first&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    }

}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You should be able to right-click and run a single method using your IDE - which should be sufficient when you are in development mode. But to be able to run JUnit 5 tests from the command-line, you need to ensure that the latest version of the &lt;a href="https://maven.apache.org/surefire/maven-surefire-plugin/examples/junit-platform.html" rel="nofollow"&gt;maven-surefire-plugin&lt;/a&gt; is present in your project &lt;code&gt;pom.xml&lt;/code&gt; (within the &lt;code&gt;&amp;lt;build&amp;gt;/&amp;lt;plugins&amp;gt;&lt;/code&gt; section):&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.apache.maven.plugins&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;maven-surefire-plugin&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;2.22.2&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;There is an issue with the &lt;code&gt;0.9.4&lt;/code&gt; JUnit 5 dependencies, you will need to manually add &lt;a href="https://github.com/intuit/karate/issues/823#issuecomment-509608205"&gt;&lt;code&gt;junit-jupiter-engine&lt;/code&gt; as a dependency&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To run a single test method, for example the &lt;code&gt;testTags()&lt;/code&gt; in the example above, you can do this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mvn test -Dtest=SampleTest#testTags
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Also look at how to run tests via the &lt;a href="#command-line"&gt;command-line&lt;/a&gt; and the &lt;a href="#junit-5-parallel-execution"&gt;parallel runner&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-junit-html-report" class="anchor" aria-hidden="true" href="#junit-html-report"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JUnit HTML report&lt;/h3&gt;
&lt;p&gt;When you use a JUnit runner - after the execution of each feature, an HTML report is output to the &lt;code&gt;target/surefire-reports&lt;/code&gt; folder and the full path will be printed to the console (see &lt;a href="https://twitter.com/KarateDSL/status/935029435140489216" rel="nofollow"&gt;video&lt;/a&gt;).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;html report: (paste into browser to view)
-----------------------------------------
file:/projects/myproject/target/surefire-reports/TEST-mypackage.myfeature.html
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can easily select (double-click), copy and paste this &lt;code&gt;file:&lt;/code&gt; URL into your browser address bar. This report is useful for troubleshooting and debugging a test because all requests and responses are shown in-line with the steps, along with error messages and the output of &lt;a href="#print"&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt; statements. Just re-fresh your browser window if you re-run the test.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-karate-options" class="anchor" aria-hidden="true" href="#karate-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Karate Options&lt;/h2&gt;
&lt;p&gt;To run only a specific feature file from a JUnit 4 test even if there are multiple &lt;code&gt;*.feature&lt;/code&gt; files in the same folder (or sub-folders), use the &lt;code&gt;@KarateOptions&lt;/code&gt; annotation.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;a href="#junit-5"&gt;JUnit 5 support&lt;/a&gt; does not require a class-level annotation to specify the feature(s) and tags to use.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;package&lt;/span&gt; &lt;span class="pl-smi"&gt;animals.cats&lt;/span&gt;;

&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.intuit.karate.KarateOptions&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.intuit.karate.junit4.Karate&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.junit.runner.RunWith&lt;/span&gt;;

&lt;span class="pl-k"&gt;@RunWith&lt;/span&gt;(&lt;span class="pl-smi"&gt;Karate&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;class)
&lt;span class="pl-k"&gt;@KarateOptions&lt;/span&gt;(&lt;span class="pl-c1"&gt;features&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;classpath:animals/cats/cats-post.feature&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;CatsPostRunner&lt;/span&gt; {
	
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;features&lt;/code&gt; parameter in the annotation can take an array, so if you wanted to associate multiple feature files with a JUnit 4 test, you could do this:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@KarateOptions&lt;/span&gt;(&lt;span class="pl-c1"&gt;features&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;classpath:animals/cats/cats-post.feature&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;classpath:animals/cats/cats-get.feature&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can even point to a directory (or package). Combine this with &lt;a href="#test-suites"&gt;tags&lt;/a&gt; to execute multiple features, without having to list every one of them.&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@KarateOptions&lt;/span&gt;(&lt;span class="pl-c1"&gt;features&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;classpath:animals/cats&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;tags&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~@ignore&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) 
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; this will run all feature files in 'animals/cats'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; except the ones tagged as @ignore&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-command-line" class="anchor" aria-hidden="true" href="#command-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command Line&lt;/h2&gt;
&lt;p&gt;Normally in dev mode, you will use your IDE to run a &lt;code&gt;*.feature&lt;/code&gt; file directly or via the companion 'runner' JUnit Java class. When you have a 'runner' class in place, it would be possible to run it from the command-line as well.&lt;/p&gt;
&lt;p&gt;Note that the &lt;code&gt;mvn test&lt;/code&gt; command only runs test classes that follow the &lt;code&gt;*Test.java&lt;/code&gt; &lt;a href="#naming-conventions"&gt;naming convention&lt;/a&gt; by default. But you can choose a single test to run like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mvn test -Dtest=CatsRunner
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When your Java test "runner" is linked to multiple feature files, which will be the case when you use the recommended &lt;a href="#parallel-execution"&gt;parallel runner&lt;/a&gt;, you can narrow down your scope to a single feature (or even directory) via the command-line, useful in dev-mode. Note how even &lt;a href="#tags"&gt;tags&lt;/a&gt; to exclude (or include) can be specified using the &lt;a href="#karate-options"&gt;Karate options&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mvn test -Dkarate.options="--tags ~@ignore classpath:demo/cats/cats.feature" -Dtest=DemoTestParallel
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Multiple feature files (or paths) can be specified, de-limited by the space character. They should be at the end of the &lt;code&gt;karate.options&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-command-line---gradle" class="anchor" aria-hidden="true" href="#command-line---gradle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command Line - Gradle&lt;/h3&gt;
&lt;p&gt;For Gradle you must extend the test task to allow the &lt;code&gt;karate.options&lt;/code&gt; to be passed to the runtime (otherwise they get consumed by Gradle itself). To do that, add the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-s"&gt;test {&lt;/span&gt;
    &lt;span class="pl-s"&gt;// pull karate options into the runtime&lt;/span&gt;
    &lt;span class="pl-s"&gt;systemProperty "karate.options", System.properties.getProperty("karate.options")&lt;/span&gt;
    &lt;span class="pl-s"&gt;// pull karate env into the runtime&lt;/span&gt;
    &lt;span class="pl-s"&gt;systemProperty "karate.env", System.properties.getProperty("karate.env")&lt;/span&gt;
    &lt;span class="pl-s"&gt;// ensure tests are always run&lt;/span&gt;
    &lt;span class="pl-s"&gt;outputs.upToDateWhen { false }&lt;/span&gt;
&lt;span class="pl-s"&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then the above command in Gradle would look like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew test -Dtest=CatsRunner
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-test-suites" class="anchor" aria-hidden="true" href="#test-suites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Test Suites&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The recommended way to define and run test-suites and reporting in Karate is to use the &lt;a href="#parallel-execution"&gt;parallel runner&lt;/a&gt;, described in the next section. The approach in this section is more suited for troubleshooting in dev-mode, using your IDE.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;One way to define 'test-suites' in Karate is to have a JUnit class at a level 'above' (in terms of folder hierarchy) all the &lt;code&gt;*.feature&lt;/code&gt; files in your project. So if you take the previous &lt;a href="#naming-conventions"&gt;folder structure example&lt;/a&gt;, you can do this on the command-line:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mvn test -Dkarate.options="--tags ~@ignore" -Dtest=AnimalsTest
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here, &lt;code&gt;AnimalsTest&lt;/code&gt; is the name of the Java class we designated to run the multiple &lt;code&gt;*.feature&lt;/code&gt; files that make up your test-suite. There is a neat way to &lt;a href="#tags"&gt;tag your tests&lt;/a&gt; and the above example demonstrates how to run all tests &lt;em&gt;except&lt;/em&gt; the ones tagged &lt;code&gt;@ignore&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For JUnit 4, The tag options can be specified in the test-class via the &lt;code&gt;@KarateOptions&lt;/code&gt; annotation, in which case you don't need to pass the &lt;code&gt;-Dkarate.options&lt;/code&gt; on the command-line:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@KarateOptions&lt;/span&gt;(&lt;span class="pl-c1"&gt;tags&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~@ignore&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can 'lock down' the fact that you only want to execute the single JUnit class that functions as a test-suite - by using the following &lt;a href="http://maven.apache.org/surefire/maven-surefire-plugin/examples/inclusion-exclusion.html" rel="nofollow"&gt;maven-surefire-plugin configuration&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.apache.maven.plugins&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;maven-surefire-plugin&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${maven.surefire.version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;includes&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;include&lt;/span&gt;&amp;gt;animals/AnimalsTest.java&amp;lt;/&lt;span class="pl-ent"&gt;include&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;includes&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;systemProperties&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;karate&lt;/span&gt;.options&amp;gt;--tags ~@ignore&amp;lt;/&lt;span class="pl-ent"&gt;karate&lt;/span&gt;.options&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;systemProperties&lt;/span&gt;&amp;gt;            
    &amp;lt;/&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;plugin&lt;/span&gt;&amp;gt; &lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note how the &lt;code&gt;karate.options&lt;/code&gt; can be specified using the &lt;code&gt;&amp;lt;systemProperties&amp;gt;&lt;/code&gt; configuration. Options here would over-ride corresponding options specified if a &lt;code&gt;@KarateOptions&lt;/code&gt; annotation is present (on &lt;code&gt;AnimalsTest.java&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;For Gradle, you simply specify the test which is to be &lt;code&gt;include&lt;/code&gt;-d:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-s"&gt;test {&lt;/span&gt;
    &lt;span class="pl-s"&gt;include 'animals/AnimalsTest.java'&lt;/span&gt;
    &lt;span class="pl-s"&gt;// pull karate options into the runtime&lt;/span&gt;
    &lt;span class="pl-s"&gt;systemProperty "karate.options", System.properties.getProperty("karate.options")&lt;/span&gt;
    &lt;span class="pl-s"&gt;// pull karate env into the runtime&lt;/span&gt;
    &lt;span class="pl-s"&gt;systemProperty "karate.env", System.properties.getProperty("karate.env")&lt;/span&gt;
    &lt;span class="pl-s"&gt;// ensure tests are always run&lt;/span&gt;
    &lt;span class="pl-s"&gt;outputs.upToDateWhen { false }&lt;/span&gt;
&lt;span class="pl-s"&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The big drawback of the approach above is that you cannot run tests in parallel. The recommended approach for Karate reporting in a Continuous Integration set-up is described in the next section which focuses on generating the &lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/JUnit+Plugin" rel="nofollow"&gt;JUnit XML&lt;/a&gt; format that most CI tools can consume. The &lt;a href="https://relishapp.com/cucumber/cucumber/docs/formatters/json-output-formatter" rel="nofollow"&gt;Cucumber JSON format&lt;/a&gt; is also emitted, which gives you plenty of options for generating pretty reports using third-party maven plugins.&lt;/p&gt;
&lt;p&gt;And most importantly - you can run tests in parallel without having to depend on third-party hacks that introduce code-generation and config 'bloat' into your &lt;code&gt;pom.xml&lt;/code&gt; or &lt;code&gt;build.gradle&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-parallel-execution" class="anchor" aria-hidden="true" href="#parallel-execution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Parallel Execution&lt;/h2&gt;
&lt;p&gt;Karate can run tests in parallel, and dramatically cut down execution time. This is a 'core' feature and does not depend on JUnit, Maven or Gradle.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-junit-4-parallel-execution" class="anchor" aria-hidden="true" href="#junit-4-parallel-execution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JUnit 4 Parallel Execution&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Important: &lt;strong&gt;do not&lt;/strong&gt; use the &lt;code&gt;@RunWith(Karate.class)&lt;/code&gt; annotation. This is a &lt;em&gt;normal&lt;/em&gt; JUnit 4 test class !&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.intuit.karate.KarateOptions&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.intuit.karate.Results&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.intuit.karate.Runner&lt;/span&gt;;
&lt;span class="pl-k"&gt;import static&lt;/span&gt; &lt;span class="pl-smi"&gt;org.junit.Assert.*&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.junit.Test&lt;/span&gt;;

&lt;span class="pl-k"&gt;@KarateOptions&lt;/span&gt;(&lt;span class="pl-c1"&gt;tags&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~@ignore&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;TestParallel&lt;/span&gt; {
    
    &lt;span class="pl-k"&gt;@Test&lt;/span&gt;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;testParallel&lt;/span&gt;() {
        &lt;span class="pl-smi"&gt;Results&lt;/span&gt; results &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Runner&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;parallel(getClass(), &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;target/surefire-reports&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        assertTrue(results&lt;span class="pl-k"&gt;.&lt;/span&gt;getErrorMessages(), results&lt;span class="pl-k"&gt;.&lt;/span&gt;getFailCount() &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;);
    }
    
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-junit-5-parallel-execution" class="anchor" aria-hidden="true" href="#junit-5-parallel-execution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JUnit 5 Parallel Execution&lt;/h3&gt;
&lt;p&gt;For &lt;a href="#junit-5"&gt;JUnit 5&lt;/a&gt; you can omit the &lt;code&gt;public&lt;/code&gt; modifier for the class and method, and there are some changes to &lt;code&gt;import&lt;/code&gt; package names. And the method signature of the &lt;code&gt;assertTrue&lt;/code&gt; has flipped around a bit:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.intuit.karate.KarateOptions&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.intuit.karate.Results&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.intuit.karate.Runner&lt;/span&gt;;
&lt;span class="pl-k"&gt;import static&lt;/span&gt; &lt;span class="pl-smi"&gt;org.junit.jupiter.api.Assertions.*&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.junit.jupiter.api.Test&lt;/span&gt;;

&lt;span class="pl-k"&gt;@KarateOptions&lt;/span&gt;(&lt;span class="pl-c1"&gt;tags&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~@ignore&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;TestParallel&lt;/span&gt; {

    &lt;span class="pl-k"&gt;@Test&lt;/span&gt;
    &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;testParallel&lt;/span&gt;() {
        &lt;span class="pl-smi"&gt;Results&lt;/span&gt; results &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Runner&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;parallel(getClass(), &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;target/surefire-reports&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
        assertTrue(results&lt;span class="pl-k"&gt;.&lt;/span&gt;getFailCount() &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, results&lt;span class="pl-k"&gt;.&lt;/span&gt;getErrorMessages());
    }

}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Things to note:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For JUnit 4 - you don't use a JUnit runner (no &lt;code&gt;@RunWith&lt;/code&gt; annotation), and you write a plain vanilla JUnit test (it could even be a normal Java class with a &lt;code&gt;main&lt;/code&gt; method) using the &lt;code&gt;Runner.parallel()&lt;/code&gt; static method in &lt;code&gt;karate-core&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;You can use the returned &lt;code&gt;Results&lt;/code&gt; object to check if any scenarios failed, and to even summarize the errors&lt;/li&gt;
&lt;li&gt;The first argument can be any class that marks the 'root package' in which &lt;code&gt;*.feature&lt;/code&gt; files will be looked for, and sub-directories will be also scanned. As shown above you would typically refer to the enclosing test-class itself. If the class you refer to has a &lt;code&gt;@KarateOptions&lt;/code&gt; annotation, it will be processed (see below).&lt;/li&gt;
&lt;li&gt;The second argument is the number of threads to use.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/JUnit+Plugin" rel="nofollow"&gt;JUnit XML&lt;/a&gt; reports will be generated in the path you specify as the third parameter, and you can easily configure your CI to look for these files after a build (for e.g. in &lt;code&gt;**/*.xml&lt;/code&gt; or &lt;code&gt;**/surefire-reports/*.xml&lt;/code&gt;). This argument is optional and will default to &lt;code&gt;target/surefire-reports&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://relishapp.com/cucumber/cucumber/docs/formatters/json-output-formatter" rel="nofollow"&gt;Cucumber JSON reports&lt;/a&gt; will be generated side-by-side with the JUnit XML reports and with the same name, except that the extension will be &lt;code&gt;.json&lt;/code&gt; instead of &lt;code&gt;.xml&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Options passed to &lt;code&gt;@KarateOptions&lt;/code&gt; would work as expected, provided you point the &lt;code&gt;Runner&lt;/code&gt; to the annotated class as the first argument. Note that in this example, any &lt;code&gt;*.feature&lt;/code&gt; file tagged as &lt;code&gt;@ignore&lt;/code&gt; will be skipped. You can also specify tags on the &lt;a href="#test-suites"&gt;command-line&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For convenience, some stats are logged to the console when execution completes, which should look something like this:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;======================================================
elapsed:   2.35 | threads:    5 | thread time: 4.98 
features:    54 | ignored:   25 | efficiency: 0.42
scenarios:  145 | passed:   145 | failed: 0
======================================================
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The parallel runner will always run &lt;code&gt;Feature&lt;/code&gt;-s in parallel. Karate will also run &lt;code&gt;Scenario&lt;/code&gt;-s in parallel by default. So if you have a &lt;code&gt;Feature&lt;/code&gt; with multiple &lt;code&gt;Scenario&lt;/code&gt;-s in it - they will execute in parallel, and even each &lt;code&gt;Examples&lt;/code&gt; row in a &lt;code&gt;Scenario Outline&lt;/code&gt; will do so !&lt;/p&gt;
&lt;p&gt;A &lt;code&gt;timeline.html&lt;/code&gt; file will also be saved to the report output directory mentioned above (&lt;code&gt;target/surefire-reports&lt;/code&gt; by default) - which is useful for visually verifying or troubleshooting the effectiveness of the test-run (&lt;a href="https://twitter.com/KarateDSL/status/1049321708241317888" rel="nofollow"&gt;see video&lt;/a&gt;).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-parallelfalse" class="anchor" aria-hidden="true" href="#parallelfalse"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;@parallel=false&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;In rare cases you may want to suppress the default of &lt;code&gt;Scenario&lt;/code&gt;-s executing in parallel and the special &lt;a href="#tags"&gt;&lt;code&gt;tag&lt;/code&gt;&lt;/a&gt; &lt;code&gt;@parallel=false&lt;/code&gt; can be used. If you place it above the &lt;a href="#script-structure"&gt;&lt;code&gt;Feature&lt;/code&gt;&lt;/a&gt; keyword, it will apply to all &lt;code&gt;Scenario&lt;/code&gt;-s. And if you just want one or two &lt;code&gt;Scenario&lt;/code&gt;-s to NOT run in parallel, you can place this tag above only &lt;em&gt;those&lt;/em&gt; &lt;code&gt;Scenario&lt;/code&gt;-s. See &lt;a href="karate-demo/src/test/java/demo/encoding/encoding.feature"&gt;example&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There is also an API to run a chosen set of features (and tags) which may be useful in cases where you dynamically want to select features at run time. Refer to this example &lt;a href="karate-demo/src/test/java/demo/DemoTestSelected.java"&gt;&lt;code&gt;DemoTestSelected.java&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-test-reports" class="anchor" aria-hidden="true" href="#test-reports"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Test Reports&lt;/h2&gt;
&lt;p&gt;As mentioned above, most CI tools would be able to process the JUnit XML output of the &lt;a href="#parallel-execution"&gt;parallel runner&lt;/a&gt; and determine the status of the build as well as generate reports.&lt;/p&gt;
&lt;p&gt;The &lt;a href="karate-demo"&gt;Karate Demo&lt;/a&gt; has a working example of the recommended parallel-runner set up. It also &lt;a href="karate-demo#example-report"&gt;details how&lt;/a&gt; a third-party library can be easily used to generate some very nice-looking reports, from the JSON output of the parallel runner.&lt;/p&gt;
&lt;p&gt;For example, here below is an actual report generated by the &lt;a href="https://github.com/damianszczepanik/cucumber-reporting"&gt;cucumber-reporting&lt;/a&gt; open-source library.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="karate-demo/src/test/resources/karate-maven-report.jpg"&gt;&lt;img src="karate-demo/src/test/resources/karate-maven-report.jpg" height="600px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This report is recommended especially because Karate's integration includes the HTTP request and response logs &lt;a href="https://twitter.com/KarateDSL/status/899671441221623809" rel="nofollow"&gt;in-line with the test report&lt;/a&gt;, which is extremely useful for troubleshooting test failures.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="karate-demo/src/test/resources/karate-maven-report-http.jpg"&gt;&lt;img src="karate-demo/src/test/resources/karate-maven-report-http.jpg" height="600px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The demo also features &lt;a href="karate-demo#code-coverage-using-jacoco"&gt;code-coverage using Jacoco&lt;/a&gt;. Some third-party report-server solutions integrate with Karate such as &lt;a href="https://github.com/reportportal/agent-java-karate"&gt;ReportPortal.io&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-logging" class="anchor" aria-hidden="true" href="#logging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Logging&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;This is optional, and Karate will work without the logging config in place, but the default console logging may be too verbose for your needs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Karate uses &lt;a href="http://logback.qos.ch" rel="nofollow"&gt;LOGBack&lt;/a&gt; which looks for a file called &lt;code&gt;logback-test.xml&lt;/code&gt; on the '&lt;a href="#classpath"&gt;classpath&lt;/a&gt;'.&lt;/p&gt;
&lt;p&gt;Here is a sample &lt;code&gt;logback-test.xml&lt;/code&gt; for you to get started.&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;?&lt;span class="pl-ent"&gt;xml&lt;/span&gt;&lt;span class="pl-e"&gt; version&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-e"&gt; encoding&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UTF-8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;?&amp;gt;
&amp;lt;&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;
 
    &amp;lt;&lt;span class="pl-ent"&gt;appender&lt;/span&gt; &lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;STDOUT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;class&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ch.qos.logback.core.ConsoleAppender&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;encoder&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;pattern&lt;/span&gt;&amp;gt;%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n&amp;lt;/&lt;span class="pl-ent"&gt;pattern&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;encoder&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;appender&lt;/span&gt;&amp;gt;
  
    &amp;lt;&lt;span class="pl-ent"&gt;appender&lt;/span&gt; &lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FILE&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;class&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ch.qos.logback.core.FileAppender&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;file&lt;/span&gt;&amp;gt;target/karate.log&amp;lt;/&lt;span class="pl-ent"&gt;file&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;encoder&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class="pl-ent"&gt;pattern&lt;/span&gt;&amp;gt;%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n&amp;lt;/&lt;span class="pl-ent"&gt;pattern&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class="pl-ent"&gt;encoder&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;appender&lt;/span&gt;&amp;gt;    
   
    &amp;lt;&lt;span class="pl-ent"&gt;logger&lt;/span&gt; &lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.intuit.karate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;level&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;DEBUG&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;/&amp;gt;
   
    &amp;lt;&lt;span class="pl-ent"&gt;root&lt;/span&gt; &lt;span class="pl-e"&gt;level&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;info&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;appender-ref&lt;/span&gt; &lt;span class="pl-e"&gt;ref&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;STDOUT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;appender-ref&lt;/span&gt; &lt;span class="pl-e"&gt;ref&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FILE&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;root&lt;/span&gt;&amp;gt;
  
&amp;lt;/&lt;span class="pl-ent"&gt;configuration&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can change the &lt;code&gt;com.intuit.karate&lt;/code&gt; logger level to &lt;code&gt;INFO&lt;/code&gt; to reduce the amount of logging. When the level is &lt;code&gt;DEBUG&lt;/code&gt; the entire request and response payloads are logged. If you use the above config, logs will be captured in &lt;code&gt;target/karate.log&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;You can skip this section and jump straight to the &lt;a href="#syntax-guide"&gt;Syntax Guide&lt;/a&gt; if you are in a hurry to get started with Karate. Things will work even if the &lt;code&gt;karate-config.js&lt;/code&gt; file is not present.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-classpath" class="anchor" aria-hidden="true" href="#classpath"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Classpath&lt;/h2&gt;
&lt;p&gt;The 'classpath' is a Java concept and is where some configuration files such as the one for &lt;a href="#logging"&gt;logging&lt;/a&gt; are expected to be by default. If you use the Maven &lt;code&gt;&amp;lt;test-resources&amp;gt;&lt;/code&gt; tweak &lt;a href="#folder-structure"&gt;described earlier&lt;/a&gt; (recommended), the 'root' of the classpath will be in the &lt;code&gt;src/test/java&lt;/code&gt; folder, or else would be &lt;code&gt;src/test/resources&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-karate-configjs" class="anchor" aria-hidden="true" href="#karate-configjs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;karate-config.js&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The only 'rule' is that on start-up Karate expects a file called &lt;code&gt;karate-config.js&lt;/code&gt; to exist on the 'classpath' and contain a &lt;a href="#javascript-functions"&gt;JavaScript function&lt;/a&gt;. The function is expected to return a JSON object and all keys and values in that JSON object will be made available as script variables.&lt;/p&gt;
&lt;p&gt;And that's all there is to Karate configuration ! You can easily get the value of the &lt;a href="#switching-the-environment"&gt;current 'environment' or 'profile'&lt;/a&gt;, and then set up 'global' variables using some simple JavaScript. Here is an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;() {   
  &lt;span class="pl-k"&gt;var&lt;/span&gt; env &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;karate&lt;/span&gt;.&lt;span class="pl-smi"&gt;env&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; get java system property 'karate.env'&lt;/span&gt;
  &lt;span class="pl-smi"&gt;karate&lt;/span&gt;.&lt;span class="pl-en"&gt;log&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;karate.env system property was:&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, env);
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;!&lt;/span&gt;env) {
    env &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;dev&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a custom 'intelligent' default&lt;/span&gt;
  }
  &lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; base config JSON&lt;/span&gt;
    appId&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;my.app.id&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
    appSecret&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;my.secret&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
    someUrlBase&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://some-host.com/v1/auth/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
    anotherUrlBase&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://another-host.com/v1/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  };
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (env &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;stage&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; over-ride only those that need to be&lt;/span&gt;
    &lt;span class="pl-smi"&gt;config&lt;/span&gt;.&lt;span class="pl-smi"&gt;someUrlBase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://stage-host/v1/auth&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
  } &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; (env &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;e2e&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class="pl-smi"&gt;config&lt;/span&gt;.&lt;span class="pl-smi"&gt;someUrlBase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://e2e-host/v1/auth&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
  }
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; don't waste time waiting for a connection or if servers don't respond within 5 seconds&lt;/span&gt;
  &lt;span class="pl-smi"&gt;karate&lt;/span&gt;.&lt;span class="pl-en"&gt;configure&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;connectTimeout&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;5000&lt;/span&gt;);
  &lt;span class="pl-smi"&gt;karate&lt;/span&gt;.&lt;span class="pl-en"&gt;configure&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;readTimeout&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;5000&lt;/span&gt;);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; config;
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Here above, you see the &lt;a href="#karate-log"&gt;&lt;code&gt;karate.log()&lt;/code&gt;&lt;/a&gt;, &lt;a href="#karate-env"&gt;&lt;code&gt;karate.env&lt;/code&gt;&lt;/a&gt; and &lt;a href="#karate-configure"&gt;&lt;code&gt;karate.configure()&lt;/code&gt;&lt;/a&gt; "helpers" being used. Note that the &lt;code&gt;karate-config.js&lt;/code&gt; is re-processed for &lt;em&gt;every&lt;/em&gt; &lt;code&gt;Scenario&lt;/code&gt; and in rare cases, you may want to initialize (e.g. auth tokens) only once for all of your tests. This can be achieved using &lt;a href="#karate-callsingle"&gt;&lt;code&gt;karate.callSingle()&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A common requirement is to pass dynamic parameter values via the command line, and you can use the &lt;a href="#karate-properties"&gt;&lt;code&gt;karate.properties['some.name']&lt;/code&gt;&lt;/a&gt; syntax for getting a system property passed via JVM options in the form &lt;code&gt;-Dsome.name=foo&lt;/code&gt;. Refer to the section on &lt;a href="#dynamic-port-numbers"&gt;dynamic port numbers&lt;/a&gt; for an example.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can even retrieve operating-system environment variables via &lt;a href="#calling-java"&gt;Java interop&lt;/a&gt; as follows: &lt;code&gt;var systemPath = java.lang.System.getenv('PATH');&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This decision to use JavaScript for config is influenced by years of experience with the set-up of complicated test-suites and fighting with &lt;a href="http://maven.apache.org/guides/introduction/introduction-to-profiles.html" rel="nofollow"&gt;Maven profiles&lt;/a&gt;, &lt;a href="https://maven.apache.org/plugins/maven-resources-plugin/examples/filter.html" rel="nofollow"&gt;Maven resource-filtering&lt;/a&gt; and the XML-soup that somehow gets summoned by the &lt;a href="http://maven.apache.org/plugins/maven-antrun-plugin/usage.html" rel="nofollow"&gt;Maven AntRun plugin&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Karate's approach frees you from Maven, is far more expressive, allows you to eyeball all environments in one place, and is still a plain-text file.  If you want, you could even create &lt;a href="https://stackoverflow.com/a/49693808/143475" rel="nofollow"&gt;nested chunks of JSON that 'name-space' your config variables&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One way to appreciate Karate's approach is to think over what it takes to add a new environment-dependent variable (e.g. a password) into a test. In typical frameworks it could mean changing multiple properties files, maven profiles and placeholders, and maybe even threading the value via a dependency-injection framework - before you can even access the value within your test.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This approach is indeed slightly more complicated than traditional &lt;code&gt;*.properties&lt;/code&gt; files - but you &lt;em&gt;need&lt;/em&gt; this complexity. Keep in mind that these are tests (not production code) and this config is going to be maintained more by the dev or QE team instead of the 'ops' or operations team.&lt;/p&gt;
&lt;p&gt;And there is no more worrying about Maven profiles and whether the 'right' &lt;code&gt;*.properties&lt;/code&gt; file has been copied to the proper place.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-switching-the-environment" class="anchor" aria-hidden="true" href="#switching-the-environment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Switching the Environment&lt;/h2&gt;
&lt;p&gt;There is only one thing you need to do to switch the environment - which is to set a Java system property.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;By default, the value of &lt;code&gt;karate.env&lt;/code&gt; when you access it within &lt;a href="#karate-configjs"&gt;&lt;code&gt;karate-config.js&lt;/code&gt;&lt;/a&gt; - would be &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The recipe for doing this when running Maven from the command line is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mvn test -DargLine="-Dkarate.env=e2e"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or in Gradle:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew test -Dkarate.env=e2e
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can refer to the documentation of the
&lt;a href="http://maven.apache.org/plugins-archives/maven-surefire-plugin-2.12.4/examples/system-properties.html" rel="nofollow"&gt;Maven Surefire Plugin&lt;/a&gt; for alternate ways of achieving this, but the &lt;code&gt;argLine&lt;/code&gt; approach is the simplest and should be more than sufficient for your Continuous Integration or test-automation needs.&lt;/p&gt;
&lt;p&gt;Here's a reminder that running any &lt;a href="https://maven.apache.org/surefire/maven-surefire-plugin/examples/single-test.html" rel="nofollow"&gt;single JUnit test via Maven&lt;/a&gt; can be done by:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mvn test -Dtest=CatsRunner
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Where &lt;code&gt;CatsRunner&lt;/code&gt; is the JUnit class name (in any package) you wish to run.&lt;/p&gt;
&lt;p&gt;Karate is flexible, you can easily over-write config variables within each individual test-script - which is very convenient when in dev-mode or rapid-prototyping.&lt;/p&gt;
&lt;p&gt;Just for illustrative purposes, you could 'hard-code' the &lt;code&gt;karate.env&lt;/code&gt; for a specific JUnit 4 test like this. Since CI test-automation would typically use a &lt;a href="#test-suites"&gt;designated 'top-level suite' test-runner&lt;/a&gt;, you can actually have these individual test-runners lying around without any ill-effects. They are useful for running tests from the IDE and for dev-mode troubleshooting. To ensure that they don't get run by CI by mistake - just &lt;em&gt;don't&lt;/em&gt; use the &lt;a href="http://maven.apache.org/surefire/maven-surefire-plugin/examples/inclusion-exclusion.html" rel="nofollow"&gt;&lt;code&gt;*Test.java&lt;/code&gt; naming convention&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;package&lt;/span&gt; &lt;span class="pl-smi"&gt;animals.cats&lt;/span&gt;;

&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;com.intuit.karate.junit4.Karate&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.junit.BeforeClass&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;org.junit.runner.RunWith&lt;/span&gt;;

&lt;span class="pl-k"&gt;@RunWith&lt;/span&gt;(&lt;span class="pl-smi"&gt;Karate&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;class)
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;CatsRunner&lt;/span&gt; {   
    
    &lt;span class="pl-k"&gt;@BeforeClass&lt;/span&gt;
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;before&lt;/span&gt;() {
        &lt;span class="pl-smi"&gt;System&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;setProperty(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;karate.env&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pre-prod&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    }

}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-environment-specific-config" class="anchor" aria-hidden="true" href="#environment-specific-config"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Environment Specific Config&lt;/h2&gt;
&lt;p&gt;When your project gets complex, you can have separate &lt;code&gt;karate-config-&amp;lt;env&amp;gt;.js&lt;/code&gt; files that will be processed for that specific value of &lt;a href="#switching-the-environment"&gt;&lt;code&gt;karate.env&lt;/code&gt;&lt;/a&gt;. This is especially useful when you want to maintain passwords, secrets or even URL-s specific for your local dev environment.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Make sure you configure your source code management system (e.g. Git) to ignore &lt;code&gt;karate-config-*.js&lt;/code&gt; if needed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here are the rules Karate uses on bootstrap (before every &lt;code&gt;Scenario&lt;/code&gt; or &lt;code&gt;Examples&lt;/code&gt; row in a &lt;code&gt;Scenario Outline&lt;/code&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if the system-property &lt;code&gt;karate.config.dir&lt;/code&gt; was set, Karate will look in this folder for &lt;code&gt;karate-config.js&lt;/code&gt; - and if found, will process it&lt;/li&gt;
&lt;li&gt;else if &lt;code&gt;karate-config.js&lt;/code&gt; was not found in the above location (or &lt;code&gt;karate.config.dir&lt;/code&gt; was not set), &lt;a href="#configuration"&gt;&lt;code&gt;classpath:karate-config.js&lt;/code&gt;&lt;/a&gt; would be processed (this is the default / common case)&lt;/li&gt;
&lt;li&gt;if the &lt;code&gt;karate.env&lt;/code&gt; system property was set
&lt;ul&gt;
&lt;li&gt;if &lt;code&gt;karate.config.dir&lt;/code&gt; was set, Karate will also look for &lt;code&gt;file:&amp;lt;karate.config.dir&amp;gt;/karate-config-&amp;lt;env&amp;gt;.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;else (if the &lt;code&gt;karate.config.dir&lt;/code&gt; was &lt;em&gt;not&lt;/em&gt; set), Karate will look for &lt;code&gt;classpath:karate-config-&amp;lt;env&amp;gt;.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;if the over-ride &lt;code&gt;karate-config-&amp;lt;env&amp;gt;.js&lt;/code&gt; exists, it will be processed, and the configuration (JSON entries) returned by this function will over-ride any set by &lt;code&gt;karate-config.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Refer to the &lt;a href="karate-demo"&gt;karate demo&lt;/a&gt; for an &lt;a href="karate-demo/src/test/java/karate-config-contract.js"&gt;example&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-karate-basejs" class="anchor" aria-hidden="true" href="#karate-basejs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;karate-base.js&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Advanced users who build frameworks on top of Karate have the option to supply a &lt;code&gt;karate-base.js&lt;/code&gt; file that Karate will look for on the &lt;a href="#classpath"&gt;&lt;code&gt;classpath:&lt;/code&gt;&lt;/a&gt;. This is useful when you ship a JAR file containing re-usable features and JavaScript / Java code and want to 'default' a few variables that teams can 'inherit' from. So an additional rule in the above flow of 'rules' (before the &lt;em&gt;first&lt;/em&gt; step) is as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if &lt;code&gt;classpath:karate-base.js&lt;/code&gt; exists - Karate will process this as a &lt;a href="#configuration"&gt;configuration source&lt;/a&gt; before anything else&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-syntax-guide" class="anchor" aria-hidden="true" href="#syntax-guide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Syntax Guide&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-script-structure" class="anchor" aria-hidden="true" href="#script-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Script Structure&lt;/h2&gt;
&lt;p&gt;Karate scripts are technically in '&lt;a href="https://docs.cucumber.io/gherkin/reference/" rel="nofollow"&gt;Gherkin&lt;/a&gt;' format - but all you need to grok as someone who needs to test web-services are the three sections: &lt;code&gt;Feature&lt;/code&gt;, &lt;code&gt;Background&lt;/code&gt; and &lt;code&gt;Scenario&lt;/code&gt;. There can be multiple Scenario-s in a &lt;code&gt;*.feature&lt;/code&gt; file, and at least one should be present. The &lt;code&gt;Background&lt;/code&gt; is optional.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Variables set using &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;Background&lt;/code&gt; will be re-set before &lt;em&gt;every&lt;/em&gt; &lt;code&gt;Scenario&lt;/code&gt;. If you are looking for a way to do something only &lt;strong&gt;once&lt;/strong&gt; per &lt;code&gt;Feature&lt;/code&gt;, take a look at &lt;a href="#callonce"&gt;&lt;code&gt;callonce&lt;/code&gt;&lt;/a&gt;. On the other hand, if you are expecting a variable in the &lt;code&gt;Background&lt;/code&gt; to be modified by one &lt;code&gt;Scenario&lt;/code&gt; so that later ones can see the updated value - that is &lt;em&gt;not&lt;/em&gt; how you should think of them, and you should combine your 'flow' into one scenario. Keep in mind that you should be able to comment-out a &lt;code&gt;Scenario&lt;/code&gt; or skip some via &lt;a href="#tags"&gt;&lt;code&gt;tags&lt;/code&gt;&lt;/a&gt; without impacting any others. Note that the &lt;a href="#parallel-execution"&gt;parallel runner&lt;/a&gt; will run &lt;code&gt;Scenario&lt;/code&gt;-s in parallel, which means they can run in &lt;em&gt;any&lt;/em&gt; order.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Lines that start with a &lt;code&gt;#&lt;/code&gt; are comments.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Feature&lt;/span&gt;:&lt;span class="pl-s"&gt; brief description of what is being tested&lt;/span&gt;
    more lines of description if needed.

&lt;span class="pl-k"&gt;Background&lt;/span&gt;:
&lt;span class="pl-c"&gt;  # this section is optional !&lt;/span&gt;
&lt;span class="pl-c"&gt;  # steps here are executed before each Scenario in this file&lt;/span&gt;
&lt;span class="pl-c"&gt;  # variables defined here will be 'global' to all scenarios&lt;/span&gt;
&lt;span class="pl-c"&gt;  # and will be re-initialized before every scenario&lt;/span&gt;

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; brief description of this scenario&lt;/span&gt;
&lt;span class="pl-c"&gt;  # steps for this scenario&lt;/span&gt;

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; a different scenario&lt;/span&gt;
&lt;span class="pl-c"&gt;  # steps for this other scenario&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;There is also a variant of &lt;code&gt;Scenario&lt;/code&gt; called &lt;code&gt;Scenario Outline&lt;/code&gt; along with &lt;code&gt;Examples&lt;/code&gt;, useful for &lt;a href="#data-driven-tests"&gt;data-driven tests&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-given-when-then" class="anchor" aria-hidden="true" href="#given-when-then"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Given-When-Then&lt;/h3&gt;
&lt;p&gt;The business of web-services testing requires access to low-level aspects such as HTTP headers, URL-paths, query-parameters, complex JSON or XML payloads and response-codes. And Karate gives you control over these aspects with the small set of keywords focused on HTTP such as &lt;a href="#url"&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt;, &lt;a href="#path"&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt;, &lt;a href="#param"&gt;&lt;code&gt;param&lt;/code&gt;&lt;/a&gt;, etc.&lt;/p&gt;
&lt;p&gt;Karate does not attempt to have tests be in "natural language" like how Cucumber tests are &lt;a href="https://docs.cucumber.io/gherkin/reference/" rel="nofollow"&gt;traditionally expected to be&lt;/a&gt;. That said, the syntax is very concise, and the convention of every step having to start with either &lt;code&gt;Given&lt;/code&gt;, &lt;code&gt;And&lt;/code&gt;, &lt;code&gt;When&lt;/code&gt; or &lt;code&gt;Then&lt;/code&gt;, makes things very readable. You end up with a decent approximation of BDD even though web-services by nature are "headless", without a UI, and not really human-friendly.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-cucumber-vs-karate" class="anchor" aria-hidden="true" href="#cucumber-vs-karate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cucumber vs Karate&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Karate was based on Cucumber-JVM until version 0.8.0 but the parser and engine were &lt;a href="https://github.com/intuit/karate/issues/444"&gt;re-written from scratch&lt;/a&gt; in 0.9.0 onwards. So we use the same &lt;a href="https://docs.cucumber.io/gherkin/" rel="nofollow"&gt;Gherkin&lt;/a&gt; syntax - but the similarity ends there.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you are familiar with Cucumber (JVM), you may be wondering if you need to write &lt;a href="https://docs.cucumber.io/gherkin/step-organization/" rel="nofollow"&gt;step-definitions&lt;/a&gt;. The answer is &lt;strong&gt;no&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Karate's approach is that all the step-definitions you need in order to work with HTTP, JSON and XML have been already implemented. And since you can easily extend Karate &lt;a href="#call"&gt;using JavaScript&lt;/a&gt;, there is no need to compile Java code any more.&lt;/p&gt;
&lt;p&gt;The following table summarizes some key differences between Cucumber and Karate.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;g-emoji class="g-emoji" alias="white_small_square" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/25ab.png"&gt;▫️&lt;/g-emoji&gt;&lt;/th&gt;
&lt;th&gt;Cucumber&lt;/th&gt;
&lt;th&gt;Karate&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Step Definitions Built-In&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;No&lt;/strong&gt;. You need to keep implementing them as your functionality grows. &lt;a href="https://thepracticaldeveloper.com/2017/08/03/microservices-end-to-end-tests-with-cucumber-and-spring-boot/" rel="nofollow"&gt;This can get very tedious&lt;/a&gt;, especially since for &lt;a href="https://docs.cucumber.io/cucumber/state/#dependency-injection" rel="nofollow"&gt;dependency-injection&lt;/a&gt;, you are &lt;a href="http://angiejones.tech/rest-assured-with-cucumber-using-bdd-for-web-services-automation?refreshed=y#comment-40" rel="nofollow"&gt;on your own&lt;/a&gt;.&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Yes&lt;/strong&gt;. No extra Java code needed.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Single Layer of Code To Maintain&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;No&lt;/strong&gt;. There are 2 Layers. The &lt;a href="https://docs.cucumber.io/gherkin/reference/" rel="nofollow"&gt;Gherkin&lt;/a&gt; spec or &lt;code&gt;*.feature&lt;/code&gt; files make up one layer, and you will also have the corresponding Java step-definitions.&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Yes&lt;/strong&gt;. Only 1 layer of Karate-script (based on Gherkin).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Readable Specification&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Yes&lt;/strong&gt;. Cucumber will read like natural language &lt;em&gt;if&lt;/em&gt; you implement the step-definitions right.&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt; &lt;strong&gt;No&lt;/strong&gt;. Although Karate is simple, and a &lt;a href="https://ayende.com/blog/2984/dsl-vs-fluent-interface-compare-contrast" rel="nofollow"&gt;true DSL&lt;/a&gt;, it is ultimately a &lt;a href="https://hackernoon.com/yes-karate-is-not-true-bdd-698bf4a9be39" rel="nofollow"&gt;mini-programming language&lt;/a&gt;. But it is &lt;a href="https://stackoverflow.com/a/47799207/143475" rel="nofollow"&gt;perfect for testing web-services&lt;/a&gt; at the level of HTTP requests and responses.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Re-Use Feature Files&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;No&lt;/strong&gt;. Cucumber does not support being able to call (and thus re-use) other &lt;code&gt;*.feature&lt;/code&gt; files from a test-script.&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;a href="#calling-other-feature-files"&gt;&lt;strong&gt;Yes&lt;/strong&gt;&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Dynamic Data-Driven Testing&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;No&lt;/strong&gt;. Cucumber's &lt;a href="#the-cucumber-way"&gt;&lt;code&gt;Scenario Outline&lt;/code&gt;&lt;/a&gt; expects the &lt;code&gt;Examples&lt;/code&gt; to contain a fixed set of rows.&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Yes&lt;/strong&gt;. Karate's support for calling other &lt;code&gt;*.feature&lt;/code&gt; files allows you to use a &lt;a href="#data-driven-features"&gt;JSON array as the data-source&lt;/a&gt; and you can &lt;a href="https://twitter.com/KarateDSL/status/1051433711814627329" rel="nofollow"&gt;use JSON&lt;/a&gt; or &lt;a href="#csv-files"&gt;even CSV&lt;/a&gt; directly in a data-driven &lt;code&gt;Scenario Outline&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Parallel Execution&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;No&lt;/strong&gt;. There are some challenges (especially with reporting) and you can find various discussions and third-party projects on the web that attempt to close this gap: &lt;a href="https://github.com/cucumber/cucumber-jvm/issues/630"&gt;1&lt;/a&gt; &lt;a href="https://opencredo.com/test-automation-concepts-parallel-test-execution/" rel="nofollow"&gt;2&lt;/a&gt; &lt;a href="http://stackoverflow.com/questions/41034116/how-to-execute-cucumber-feature-file-parallel" rel="nofollow"&gt;3&lt;/a&gt; &lt;a href="https://github.com/DisneyStudios/cucumber-slices-maven-plugin"&gt;4&lt;/a&gt; &lt;a href="https://github.com/temyers/cucumber-jvm-parallel-plugin"&gt;5&lt;/a&gt; &lt;a href="https://github.com/trivago/cucable-plugin"&gt;6&lt;/a&gt; &lt;a href="https://github.com/eu-evops/cucumber-runner-maven-plugin"&gt;7&lt;/a&gt; &lt;a href="https://automationrhapsody.com/running-cucumber-tests-in-parallel/" rel="nofollow"&gt;8&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;a href="#parallel-execution"&gt;&lt;strong&gt;Yes&lt;/strong&gt;&lt;/a&gt;. Karate runs even &lt;code&gt;Scenario&lt;/code&gt;-s in parallel, not just &lt;code&gt;Feature&lt;/code&gt;-s.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Run 'Set-Up' Routines Only Once&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;No&lt;/strong&gt;. Cucumber has a limitation where &lt;code&gt;Background&lt;/code&gt; steps are re-run for every &lt;code&gt;Scenario&lt;/code&gt; and worse - even for every &lt;code&gt;Examples&lt;/code&gt; row within a &lt;code&gt;Scenario Outline&lt;/code&gt;. This has been a &lt;a href="https://github.com/cucumber/cucumber-jvm/issues/515"&gt;highly-requested open issue&lt;/a&gt; for a &lt;em&gt;long&lt;/em&gt; time.&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;a href="#hooks"&gt;&lt;strong&gt;Yes&lt;/strong&gt;&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Embedded JavaScript Engine&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;No&lt;/strong&gt;. And you have to roll your own approach to environment-specific configuration and worry about &lt;a href="https://docs.cucumber.io/cucumber/state/#dependency-injection" rel="nofollow"&gt;dependency-injection&lt;/a&gt;.&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;Yes&lt;/strong&gt;. Easily define all environments in a &lt;a href="#configuration"&gt;single file&lt;/a&gt; and share variables across all scenarios. Full script-ability via &lt;a href="#calling-javascript-functions"&gt;JS&lt;/a&gt; or &lt;a href="#java-interop"&gt;Java interop&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;One nice thing about the design of the Gherkin syntax is that script-steps are treated the same no matter whether they start with the keyword &lt;code&gt;Given&lt;/code&gt;, &lt;code&gt;And&lt;/code&gt;, &lt;code&gt;When&lt;/code&gt; or &lt;code&gt;Then&lt;/code&gt;.  What this means is that you are free to use whatever makes sense for you.  You could even have all the steps start with &lt;code&gt;When&lt;/code&gt; and Karate won't care.&lt;/p&gt;
&lt;p&gt;In fact Gherkin supports the &lt;a href="https://www.relishapp.com/cucumber/cucumber/docs/gherkin/using-star-notation-instead-of-given-when-then" rel="nofollow"&gt;catch-all symbol '&lt;code&gt;*&lt;/code&gt;'&lt;/a&gt; - instead of forcing you to use &lt;code&gt;Given&lt;/code&gt;, &lt;code&gt;When&lt;/code&gt; or &lt;code&gt;Then&lt;/code&gt;. This is perfect for those cases where it really doesn't make sense - for example the &lt;a href="#script-structure"&gt;&lt;code&gt;Background&lt;/code&gt;&lt;/a&gt; section or when you use the &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt; or &lt;a href="#set"&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; syntax. When eyeballing a test-script, think of the &lt;code&gt;*&lt;/code&gt; as a 'bullet-point'.&lt;/p&gt;
&lt;p&gt;You can read more about the Given-When-Then convention at the &lt;a href="https://docs.cucumber.io/gherkin/reference/" rel="nofollow"&gt;Cucumber reference documentation&lt;/a&gt;. Since Karate uses Gherkin, you can also employ &lt;a href="#data-driven-tests"&gt;data-driven&lt;/a&gt; techniques such as expressing data-tables in test scripts. Another good thing that Karate inherits is the nice IDE support for Cucumber that &lt;a href="https://www.jetbrains.com/idea/help/cucumber.html" rel="nofollow"&gt;IntelliJ&lt;/a&gt; and &lt;a href="https://cucumber.io/cucumber-eclipse/" rel="nofollow"&gt;Eclipse&lt;/a&gt; have. So you can do things like right-click and run a &lt;code&gt;*.feature&lt;/code&gt; file (or scenario) without needing to use a JUnit runner.&lt;/p&gt;
&lt;p&gt;For a detailed discussion on BDD and how Karate relates to Cucumber, please refer to this blog-post: &lt;a href="https://medium.com/@ptrthomas/yes-karate-is-not-true-bdd-698bf4a9be39" rel="nofollow"&gt;Yes, Karate is not &lt;em&gt;true&lt;/em&gt; BDD&lt;/a&gt;. It is the opinion of the author of Karate that &lt;em&gt;true&lt;/em&gt; BDD is un-necessary over-kill for API testing, and this is explained more in &lt;a href="https://stackoverflow.com/a/47799207/143475" rel="nofollow"&gt;this answer&lt;/a&gt; on &lt;a href="https://stackoverflow.com/questions/tagged/karate" rel="nofollow"&gt;Stack Overflow&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With the formalities out of the way, let's dive straight into the syntax.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-setting-and-using-variables" class="anchor" aria-hidden="true" href="#setting-and-using-variables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting and Using Variables&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-def" class="anchor" aria-hidden="true" href="#def"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;def&lt;/code&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-set-a-named-variable" class="anchor" aria-hidden="true" href="#set-a-named-variable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Set a named variable&lt;/h3&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# assigning a string value:&lt;/span&gt;
&lt;span class="pl-k"&gt;Given &lt;/span&gt;def myVar = &lt;span class="pl-s"&gt;'world'&lt;/span&gt;

&lt;span class="pl-c"&gt;# using a variable&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;print myVar

&lt;span class="pl-c"&gt;# assigning a number (you can use '*' instead of Given / When / Then)&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def myNum = 5&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that &lt;code&gt;def&lt;/code&gt; will over-write any variable that was using the same name earlier. Keep in mind that the start-up &lt;a href="#configuration"&gt;configuration routine&lt;/a&gt; could have already initialized some variables before the script even started.&lt;/p&gt;
&lt;p&gt;The examples above are simple, but a variety of expression 'shapes' are supported on the right hand side of the &lt;code&gt;=&lt;/code&gt; symbol. The section on &lt;a href="#karate-expressions"&gt;Karate Expressions&lt;/a&gt; goes into the details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-assert" class="anchor" aria-hidden="true" href="#assert"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-assert-if-an-expression-evaluates-to-true" class="anchor" aria-hidden="true" href="#assert-if-an-expression-evaluates-to-true"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Assert if an expression evaluates to &lt;code&gt;true&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Once defined, you can refer to a variable by name. Expressions are evaluated using the embedded JavaScript engine. The assert keyword can be used to assert that an expression returns a boolean value.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;def color = &lt;span class="pl-s"&gt;'red '&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;def num = 5
&lt;span class="pl-k"&gt;Then &lt;/span&gt;assert color + num == &lt;span class="pl-s"&gt;'red 5'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Everything to the right of the &lt;code&gt;assert&lt;/code&gt; keyword will be evaluated as a single expression.&lt;/p&gt;
&lt;p&gt;Something worth mentioning here is that you would hardly need to use &lt;code&gt;assert&lt;/code&gt; in your test scripts. Instead you would typically use the &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; keyword, that is designed for performing powerful assertions against JSON and XML response payloads.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-print" class="anchor" aria-hidden="true" href="#print"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;print&lt;/code&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-log-to-the-console" class="anchor" aria-hidden="true" href="#log-to-the-console"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Log to the console&lt;/h3&gt;
&lt;p&gt;You can use &lt;code&gt;print&lt;/code&gt; to log variables to the console in the middle of a script. For convenience, you can have multiple expressions separated by commas, so this is the recommended pattern:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;print &lt;span class="pl-s"&gt;'the value of a is:'&lt;/span&gt;, a&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Similar to &lt;a href="#assert"&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt;, the expressions on the right-hand-side of a &lt;code&gt;print&lt;/code&gt; have to be valid JavaScript. JsonPath and &lt;a href="#karate-expressions"&gt;Karate expressions&lt;/a&gt; are not supported.&lt;/p&gt;
&lt;p&gt;If you use commas (instead of concatenating strings using &lt;code&gt;+&lt;/code&gt;), Karate will 'pretty-print' variables, which is what you typically want when dealing with &lt;a href="#native-data-types"&gt;JSON or XML&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def myJson = { foo: &lt;span class="pl-s"&gt;'bar'&lt;/span&gt;, baz: [1, 2, 3] }
&lt;span class="pl-k"&gt;* &lt;/span&gt;print &lt;span class="pl-s"&gt;'the value of myJson is:'&lt;/span&gt;, myJson&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which results in the following output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;20:29:11.290 [main] INFO  com.intuit.karate - [print] the value of myJson is: {
  "foo": "bar",
  "baz": [
    1,
    2,
    3
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Since XML is represented internally as a JSON-like or map-like object, if you perform string concatenation when printing, you will &lt;em&gt;not&lt;/em&gt; see XML - which can be confusing at first. Use the comma-delimited form (see above) or the JS helper (see below).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The built-in &lt;a href="#the-karate-object"&gt;&lt;code&gt;karate&lt;/code&gt; object&lt;/a&gt; is explained in detail later, but for now, note that this is also injected into &lt;code&gt;print&lt;/code&gt; (and even &lt;code&gt;assert&lt;/code&gt;) statements, and it has a helpful &lt;a href="#karate-pretty"&gt;&lt;code&gt;pretty&lt;/code&gt;&lt;/a&gt; method, that takes a JSON argument and a &lt;a href="#karate-prettyxml"&gt;&lt;code&gt;prettyXml&lt;/code&gt;&lt;/a&gt; method that deals with XML. So you could have also done something like:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;print &lt;span class="pl-s"&gt;'the value of myJson is:&lt;span class="pl-cce"&gt;\n&lt;/span&gt;'&lt;/span&gt; + karate.pretty(myJson)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also refer to the &lt;a href="#configure"&gt;&lt;code&gt;configure&lt;/code&gt;&lt;/a&gt; keyword on how to switch on pretty-printing of all HTTP requests and responses.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-native-data-types" class="anchor" aria-hidden="true" href="#native-data-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;'Native' data types&lt;/h1&gt;
&lt;p&gt;Native data types mean that you can insert them into a script without having to worry about enclosing them in strings and then having to 'escape' double-quotes all over the place. They seamlessly fit 'in-line' within your test script.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-json" class="anchor" aria-hidden="true" href="#json"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON&lt;/h2&gt;
&lt;p&gt;Note that the parser is 'lenient' so that you don't have to enclose all keys in double-quotes.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def cat = { name: &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt;, scores: [2, 5] }
&lt;span class="pl-k"&gt;* &lt;/span&gt;assert cat.scores[1] == 5&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Some characters such as the hyphen &lt;code&gt;-&lt;/code&gt; are not permitted in 'lenient' JSON keys (because they are interpreted by the JS engine as a 'minus sign'). In such cases, you &lt;em&gt;have&lt;/em&gt; to use string quotes: &lt;code&gt;{ 'Content-Type': 'application/json' }&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When asserting for expected values in JSON or XML, always prefer using &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; instead of &lt;a href="#assert"&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt;. Match failure messages are much more descriptive and useful, and you get the power of &lt;a href="#embedded-expressions"&gt;embedded expressions&lt;/a&gt; and &lt;a href="#fuzzy-matching"&gt;fuzzy matching&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def cats = [{ name: &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt; }, { name: &lt;span class="pl-s"&gt;'Bob'&lt;/span&gt; }]
&lt;span class="pl-k"&gt;* &lt;/span&gt;match cats[1] == { name: &lt;span class="pl-s"&gt;'Bob'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Karate's native support for JSON means that you can assign parts of a JSON instance into another variable, which is useful when dealing with complex &lt;a href="#response"&gt;&lt;code&gt;response&lt;/code&gt;&lt;/a&gt; payloads.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def first = cats[0]
&lt;span class="pl-k"&gt;* &lt;/span&gt;match first == { name: &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For manipulating or updating JSON (or XML) using path expressions, refer to the &lt;a href="#set"&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; keyword.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-xml" class="anchor" aria-hidden="true" href="#xml"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;XML&lt;/h2&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;def cat = &lt;span class="pl-smi"&gt;&amp;lt;cat&amp;gt;&amp;lt;name&amp;gt;&lt;/span&gt;Billie&lt;span class="pl-smi"&gt;&amp;lt;/name&amp;gt;&amp;lt;scores&amp;gt;&amp;lt;score&amp;gt;&lt;/span&gt;2&lt;span class="pl-smi"&gt;&amp;lt;/score&amp;gt;&amp;lt;score&amp;gt;&lt;/span&gt;5&lt;span class="pl-smi"&gt;&amp;lt;/score&amp;gt;&amp;lt;/scores&amp;gt;&amp;lt;/cat&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;# sadly, xpath list indexes start from 1&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match cat/cat/scores/score[2] == &lt;span class="pl-s"&gt;'5'&lt;/span&gt;
&lt;span class="pl-c"&gt;# but karate allows you to traverse xml like json !!&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match cat.cat.scores.score[1] == 5&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-embedded-expressions" class="anchor" aria-hidden="true" href="#embedded-expressions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Embedded Expressions&lt;/h3&gt;
&lt;p&gt;Karate has a very useful payload 'templating' approach. Variables can be referred to within JSON, for example:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;def user = { name: &lt;span class="pl-s"&gt;'john'&lt;/span&gt;, age: 21 }
&lt;span class="pl-k"&gt;And &lt;/span&gt;def lang = &lt;span class="pl-s"&gt;'en'&lt;/span&gt;
&lt;span class="pl-k"&gt;When &lt;/span&gt;def session = { name: &lt;span class="pl-s"&gt;'#(user.name)'&lt;/span&gt;, locale: &lt;span class="pl-s"&gt;'#(lang)'&lt;/span&gt;, sessionUser: &lt;span class="pl-s"&gt;'#(user)'&lt;/span&gt;  }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So the rule is - if a string value within a JSON (or XML) object declaration is enclosed between &lt;code&gt;#(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt; - it will be evaluated as a JavaScript expression. And any variables which are alive in the context can be used in this expression. Here's how it works for XML:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;def user = &lt;span class="pl-smi"&gt;&amp;lt;user&amp;gt;&amp;lt;name&amp;gt;&lt;/span&gt;john&lt;span class="pl-smi"&gt;&amp;lt;/name&amp;gt;&amp;lt;/user&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;def lang = &lt;span class="pl-s"&gt;'en'&lt;/span&gt;
&lt;span class="pl-k"&gt;When &lt;/span&gt;def session = &lt;span class="pl-smi"&gt;&amp;lt;session&amp;gt;&amp;lt;locale&amp;gt;&lt;/span&gt;&lt;span class="pl-c"&gt;#(lang)&amp;lt;/locale&amp;gt;&amp;lt;sessionUser&amp;gt;#(user)&amp;lt;/sessionUser&amp;gt;&amp;lt;/session&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This comes in useful in some cases - and avoids needing to use the &lt;a href="#set"&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; keyword or &lt;a href="#javascript-functions"&gt;JavaScript functions&lt;/a&gt; to manipulate JSON. So you get the best of both worlds: the elegance of JSON to express complex nested data - while at the same time being able to dynamically plug values (that could even be other JSON or XML 'trees') into a 'template'.&lt;/p&gt;
&lt;p&gt;Note that embedded expressions will be evaluated even when you &lt;a href="#reading-files"&gt;&lt;code&gt;read()&lt;/code&gt; from a JSON or XML file&lt;/a&gt;. This is super-useful for re-use and data-driven tests.&lt;/p&gt;
&lt;p&gt;A few special built-in variables such as &lt;code&gt;$&lt;/code&gt; (which is a &lt;a href="#referring-to-self"&gt;reference to the JSON root&lt;/a&gt;) - can be mixed into JSON embedded expressions.&lt;/p&gt;
&lt;p&gt;A &lt;a href="#remove-if-null"&gt;special case&lt;/a&gt; of embedded expressions can remove a JSON key (or XML element / attribute) if the expression evaluates to &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-rules-for-embedded-expressions" class="anchor" aria-hidden="true" href="#rules-for-embedded-expressions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rules for Embedded Expressions&lt;/h4&gt;
&lt;p&gt;They work only within JSON or XML. And the expression &lt;em&gt;has&lt;/em&gt; to start with &lt;code&gt;"#(&lt;/code&gt; and end with &lt;code&gt;)&lt;/code&gt; - so note that string-concatenation may not work quite the way you expect:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# wrong !&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = { bar: &lt;span class="pl-s"&gt;'hello #(name)'&lt;/span&gt; }
&lt;span class="pl-c"&gt;# right !&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = { bar: &lt;span class="pl-s"&gt;'#("hello " + name)'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Observe how you can achieve string concatenation if you really want, because any valid JavaScript expression can be stuffed within an embedded expression. You could always do this in two steps:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def temp = &lt;span class="pl-s"&gt;'hello '&lt;/span&gt; + name
&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = { bar: &lt;span class="pl-s"&gt;'#(temp)'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As a convenience, embedded expressions are supported on the Right Hand Side of a &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; statement even for "quoted string" literals:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = &lt;span class="pl-s"&gt;'a1'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == &lt;span class="pl-s"&gt;'#("a" + 1)'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-enclosed-javascript" class="anchor" aria-hidden="true" href="#enclosed-javascript"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enclosed JavaScript&lt;/h3&gt;
&lt;p&gt;An alternative to embedded expressions (for JSON only) is to enclose the entire payload within parentheses - which tells Karate to evaluate it as pure JavaScript. This can be a lot simpler than embedded expressions in many cases, and JavaScript programmers will feel right at home.&lt;/p&gt;
&lt;p&gt;The example below shows the difference between embedded expressions and enclosed JavaScript:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;When &lt;/span&gt;def user = { name: &lt;span class="pl-s"&gt;'john'&lt;/span&gt;, age: 21 }
&lt;span class="pl-k"&gt;And &lt;/span&gt;def lang = &lt;span class="pl-s"&gt;'en'&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;def embedded = { name: &lt;span class="pl-s"&gt;'#(user.name)'&lt;/span&gt;, locale: &lt;span class="pl-s"&gt;'#(lang)'&lt;/span&gt;, sessionUser: &lt;span class="pl-s"&gt;'#(user)'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;def enclosed = ({ name: user.name, locale: lang, sessionUser: user })
&lt;span class="pl-k"&gt;* &lt;/span&gt;match embedded == enclosed&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;So how would you choose between the two approaches to create JSON ? &lt;a href="#embedded-expressions"&gt;Embedded expressions&lt;/a&gt; are useful when you have complex JSON &lt;a href="#reading-files"&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; from files, because you can auto-replace (or even &lt;a href="#remove-if-null"&gt;remove&lt;/a&gt;) data-elements with values dynamically evaluated from variables. And the JSON will still be 'well-formed', and editable in your IDE or text-editor. Embedded expressions also make more sense in &lt;a href="#ignore-or-validate"&gt;validation&lt;/a&gt; and &lt;a href="#schema-validation"&gt;schema-like&lt;/a&gt; short-cut situations. It can also be argued that the &lt;code&gt;#&lt;/code&gt; symbol is easy to spot when eyeballing your test scripts - which makes things more readable and clear.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-multi-line-expressions" class="anchor" aria-hidden="true" href="#multi-line-expressions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multi-Line Expressions&lt;/h3&gt;
&lt;p&gt;The keywords &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt;, &lt;a href="#set"&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt;, &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt;, &lt;a href="#request"&gt;&lt;code&gt;request&lt;/code&gt;&lt;/a&gt; and &lt;a href="#eval"&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; take multi-line input as the last argument. This is useful when you want to express a one-off lengthy snippet of text in-line, without having to split it out into a separate &lt;a href="#reading-files"&gt;file&lt;/a&gt;. Here are some examples:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# instead of:&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def cat = &lt;span class="pl-smi"&gt;&amp;lt;cat&amp;gt;&amp;lt;name&amp;gt;&lt;/span&gt;Billie&lt;span class="pl-smi"&gt;&amp;lt;/name&amp;gt;&amp;lt;scores&amp;gt;&amp;lt;score&amp;gt;&lt;/span&gt;2&lt;span class="pl-smi"&gt;&amp;lt;/score&amp;gt;&amp;lt;score&amp;gt;&lt;/span&gt;5&lt;span class="pl-smi"&gt;&amp;lt;/score&amp;gt;&amp;lt;/scores&amp;gt;&amp;lt;/cat&amp;gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;# this is more readable:&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def cat = 
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;cat&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;name&amp;gt;Billie&amp;lt;/name&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;scores&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;          &amp;lt;score&amp;gt;2&amp;lt;/score&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;          &amp;lt;score&amp;gt;5&amp;lt;/score&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;/scores&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;/cat&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;
&lt;span class="pl-c"&gt;# example of a request payload in-line&lt;/span&gt;
&lt;span class="pl-k"&gt;Given &lt;/span&gt;request 
  &lt;span class="pl-s"&gt;""" &lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;?xml version='1.0' encoding='UTF-8'?&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;S:Envelope xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;S:Body&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;ns2:QueryUsageBalance xmlns:ns2="http://www.mycompany.com/usage/V1"&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;ns2:UsageBalance&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;          &amp;lt;ns2:LicenseId&amp;gt;12341234&amp;lt;/ns2:LicenseId&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;/ns2:UsageBalance&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;/ns2:QueryUsageBalance&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;/S:Body&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;/S:Envelope&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;

&lt;span class="pl-c"&gt;# example of a payload assertion in-line&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match response ==
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  { id: { domain: "DOM", type: "entityId", value: "#ignore" },&lt;/span&gt;
&lt;span class="pl-s"&gt;    created: { on: "#ignore" }, &lt;/span&gt;
&lt;span class="pl-s"&gt;    lastUpdated: { on: "#ignore" },&lt;/span&gt;
&lt;span class="pl-s"&gt;    entityState: "ACTIVE"&lt;/span&gt;
&lt;span class="pl-s"&gt;  }&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-table" class="anchor" aria-hidden="true" href="#table"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;table&lt;/code&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-a-simple-way-to-create-json-arrays" class="anchor" aria-hidden="true" href="#a-simple-way-to-create-json-arrays"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A simple way to create JSON Arrays&lt;/h3&gt;
&lt;p&gt;Now that we have seen how JSON is a 'native' data type that Karate understands, there is a very nice way to create JSON using Cucumber's support for expressing &lt;a href="http://www.thinkcode.se/blog/2014/06/30/cucumber-data-tables" rel="nofollow"&gt;data-tables&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;table cats
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;name&lt;/span&gt;   | &lt;span class="pl-s1"&gt;age&lt;/span&gt; |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | '&lt;span class="pl-s1"&gt;Bob&lt;/span&gt;'  | &lt;span class="pl-s1"&gt;2&lt;/span&gt;   |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | '&lt;span class="pl-s1"&gt;Wild&lt;/span&gt;' | &lt;span class="pl-s1"&gt;4&lt;/span&gt;   |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | '&lt;span class="pl-s1"&gt;Nyan&lt;/span&gt;' | &lt;span class="pl-s1"&gt;3&lt;/span&gt;   |&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;match cats == [{name: &lt;span class="pl-s"&gt;'Bob'&lt;/span&gt;, age: 2}, {name: &lt;span class="pl-s"&gt;'Wild'&lt;/span&gt;, age: 4}, {name: &lt;span class="pl-s"&gt;'Nyan'&lt;/span&gt;, age: 3}]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; keyword is explained later, but it should be clear right away how convenient the &lt;code&gt;table&lt;/code&gt; keyword is. JSON can be combined with the ability to &lt;a href="#data-driven-features"&gt;call other &lt;code&gt;*.feature&lt;/code&gt; files&lt;/a&gt; to achieve dynamic data-driven testing in Karate.&lt;/p&gt;
&lt;p&gt;Notice that in the above example, string values within the table need to be enclosed in quotes. Otherwise they would be evaluated as expressions - which does come in useful for some dynamic data-driven situations:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def one = &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def two = { baz: &lt;span class="pl-s"&gt;'world'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;table json
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;foo&lt;/span&gt;     | &lt;span class="pl-s1"&gt;bar&lt;/span&gt;            |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;one&lt;/span&gt;     | { &lt;span class="pl-s1"&gt;baz&lt;/span&gt;: &lt;span class="pl-s1"&gt;1&lt;/span&gt; }     |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;two&lt;/span&gt;.&lt;span class="pl-s1"&gt;baz&lt;/span&gt; | ['&lt;span class="pl-s1"&gt;baz&lt;/span&gt;', '&lt;span class="pl-s1"&gt;ban&lt;/span&gt;'] |&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == [{ foo: &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;, bar: { baz: 1 } }, { foo: &lt;span class="pl-s"&gt;'world'&lt;/span&gt;, bar: [&lt;span class="pl-s"&gt;'baz'&lt;/span&gt;, &lt;span class="pl-s"&gt;'ban'&lt;/span&gt;] }]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yes, you can even nest chunks of JSON in tables, and things work as you would expect.&lt;/p&gt;
&lt;p&gt;Empty cells or expressions that evaluate to &lt;code&gt;null&lt;/code&gt; will result in the key being omitted from the JSON. To force a &lt;code&gt;null&lt;/code&gt; value, wrap it in parentheses:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def one = { baz: null }
&lt;span class="pl-k"&gt;* &lt;/span&gt;table json
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;foo&lt;/span&gt;     | &lt;span class="pl-s1"&gt;bar&lt;/span&gt;    |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | '&lt;span class="pl-s1"&gt;hello&lt;/span&gt;' |        |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;one&lt;/span&gt;.&lt;span class="pl-s1"&gt;baz&lt;/span&gt; | (&lt;span class="pl-s1"&gt;null&lt;/span&gt;) |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | '&lt;span class="pl-s1"&gt;world&lt;/span&gt;' | &lt;span class="pl-s1"&gt;null&lt;/span&gt;   |&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == [{ foo: &lt;span class="pl-s"&gt;'hello'&lt;/span&gt; }, { bar: null }, { foo: &lt;span class="pl-s"&gt;'world'&lt;/span&gt; }]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An alternate way to create data is using the &lt;a href="#set-multiple"&gt;&lt;code&gt;set&lt;/code&gt; multiple&lt;/a&gt; syntax. It is actually a 'transpose' of the &lt;code&gt;table&lt;/code&gt; approach, and can be very convenient when there are a large number of keys per row or if the nesting is complex. Here is an example of what is possible:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;set search
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;path&lt;/span&gt;       | &lt;span class="pl-s1"&gt;0&lt;/span&gt;        | &lt;span class="pl-s1"&gt;1&lt;/span&gt;      | &lt;span class="pl-s1"&gt;2&lt;/span&gt;       |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;name&lt;/span&gt;.&lt;span class="pl-s1"&gt;first&lt;/span&gt; | '&lt;span class="pl-s1"&gt;John&lt;/span&gt;'   | '&lt;span class="pl-s1"&gt;Jane&lt;/span&gt;' |         |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;name&lt;/span&gt;.&lt;span class="pl-s1"&gt;last&lt;/span&gt;  | '&lt;span class="pl-s1"&gt;Smith&lt;/span&gt;'  | '&lt;span class="pl-s1"&gt;Doe&lt;/span&gt;'  | '&lt;span class="pl-s1"&gt;Waldo&lt;/span&gt;' |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;age&lt;/span&gt;        | &lt;span class="pl-s1"&gt;20&lt;/span&gt;       |        |         |&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;match search[0] == { name: { first: &lt;span class="pl-s"&gt;'John'&lt;/span&gt;, last: &lt;span class="pl-s"&gt;'Smith'&lt;/span&gt; }, age: 20 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match search[1] == { name: { first: &lt;span class="pl-s"&gt;'Jane'&lt;/span&gt;, last: &lt;span class="pl-s"&gt;'Doe'&lt;/span&gt; } }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match search[2] == { name: { last: &lt;span class="pl-s"&gt;'Waldo'&lt;/span&gt; } }&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-text" class="anchor" aria-hidden="true" href="#text"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;text&lt;/code&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-dont-parse-treat-as-raw-text" class="anchor" aria-hidden="true" href="#dont-parse-treat-as-raw-text"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Don't parse, treat as raw text&lt;/h3&gt;
&lt;p&gt;Not something you would commonly use, but in some cases you need to disable Karate's default behavior of attempting to parse anything that looks like JSON (or XML) when using &lt;a href="#multi-line-expressions"&gt;multi-line&lt;/a&gt; / string &lt;a href="#karate-expressions"&gt;expressions&lt;/a&gt;. This is especially relevant when manipulating &lt;a href="http://graphql.org" rel="nofollow"&gt;GraphQL&lt;/a&gt; queries - because although they look suspiciously like JSON, they are not, and tend to confuse Karate's internals. And as shown in the example below, having text 'in-line' is useful especially when you use the &lt;code&gt;Scenario Outline:&lt;/code&gt; and &lt;code&gt;Examples:&lt;/code&gt; for &lt;a href="#data-driven-tests"&gt;data-driven tests&lt;/a&gt; involving Cucumber-style place-holder substitutions in strings.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Scenario Outline&lt;/span&gt;:
&lt;span class="pl-c"&gt;  # note the 'text' keyword instead of 'def'&lt;/span&gt;
  &lt;span class="pl-k"&gt;* &lt;/span&gt;text query =
    &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;    {&lt;/span&gt;
&lt;span class="pl-s"&gt;      hero(name: "&amp;lt;name&amp;gt;") {&lt;/span&gt;
&lt;span class="pl-s"&gt;        height&lt;/span&gt;
&lt;span class="pl-s"&gt;        mass&lt;/span&gt;
&lt;span class="pl-s"&gt;      }&lt;/span&gt;
&lt;span class="pl-s"&gt;    }&lt;/span&gt;
&lt;span class="pl-s"&gt;    """&lt;/span&gt;
  &lt;span class="pl-k"&gt;Given &lt;/span&gt;path &lt;span class="pl-s"&gt;'graphql'&lt;/span&gt;
  &lt;span class="pl-k"&gt;And &lt;/span&gt;request { query: &lt;span class="pl-s"&gt;'#(query)'&lt;/span&gt; }
  &lt;span class="pl-k"&gt;And &lt;/span&gt;header Accept = &lt;span class="pl-s"&gt;'application/json'&lt;/span&gt;
  &lt;span class="pl-k"&gt;When &lt;/span&gt;method post
  &lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200

  &lt;span class="pl-k"&gt;Examples&lt;/span&gt;:
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;name&lt;/span&gt;  |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;John&lt;/span&gt;  |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;Smith&lt;/span&gt; | &lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that if you did not need to inject &lt;a href="#data-driven-tests"&gt;&lt;code&gt;Examples:&lt;/code&gt;&lt;/a&gt; into 'placeholders' enclosed within &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;a href="#reading-files"&gt;reading from a file&lt;/a&gt; with the extension &lt;code&gt;*.txt&lt;/code&gt; may have been sufficient.&lt;/p&gt;
&lt;p&gt;For placeholder-substitution, the &lt;a href="#replace"&gt;&lt;code&gt;replace&lt;/code&gt;&lt;/a&gt; keyword can be used instead, but with the advantage that the text can be read from a file or dynamically created.&lt;/p&gt;
&lt;p&gt;Karate is a great fit for testing GraphQL because of how easy it is to deal with dynamic and deeply nested JSON responses. Refer to this example for more details: &lt;a href="karate-demo/src/test/java/demo/graphql/graphql.feature"&gt;&lt;code&gt;graphql.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-replace" class="anchor" aria-hidden="true" href="#replace"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;replace&lt;/code&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-text-placeholder-replacement" class="anchor" aria-hidden="true" href="#text-placeholder-replacement"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Text Placeholder Replacement&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Modifying existing JSON and XML is &lt;strong&gt;natively&lt;/strong&gt; supported by Karate via the &lt;a href="#set"&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; keyword, and &lt;code&gt;replace&lt;/code&gt; is primarily intended for dealing with raw strings. But when you deal with complex, nested JSON (or XML) - it may be easier in some cases to use &lt;code&gt;replace&lt;/code&gt;, especially when you want to substitute multiple placeholders with one value, and when you don't need array manipulation. Since &lt;code&gt;replace&lt;/code&gt; auto-converts the result to a string, make sure you perform &lt;a href="#type-conversion"&gt;type conversion&lt;/a&gt; back to JSON (or XML) if applicable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Karate provides an elegant 'native-like' experience for placeholder substitution within strings or text content. This is useful in any situation where you need to concatenate dynamic string fragments to form content such as GraphQL or SQL.&lt;/p&gt;
&lt;p&gt;The placeholder format defaults to angle-brackets, for example: &lt;code&gt;&amp;lt;replaceMe&amp;gt;&lt;/code&gt;. Here is how to replace one placeholder at a time:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def text = &lt;span class="pl-s"&gt;'hello &amp;lt;foo&amp;gt; world'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;replace text.foo = &lt;span class="pl-s"&gt;'bar'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match text == &lt;span class="pl-s"&gt;'hello bar world'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Karate makes it really easy to substitute multiple placeholders in a single, readable step as follows:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def text = &lt;span class="pl-s"&gt;'hello &amp;lt;one&amp;gt; world &amp;lt;two&amp;gt; bye'&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;replace text
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;token&lt;/span&gt; | &lt;span class="pl-s1"&gt;value&lt;/span&gt;   |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;one&lt;/span&gt;   | '&lt;span class="pl-s1"&gt;cruel&lt;/span&gt;' |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;two&lt;/span&gt;   | '&lt;span class="pl-s1"&gt;good&lt;/span&gt;'  |&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;match text == &lt;span class="pl-s"&gt;'hello cruel world good bye'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note how strings have to be enclosed in quotes. This is so that you can mix expressions into text replacements as shown below. This example also shows how you can use a custom placeholder format instead of the default:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def text = &lt;span class="pl-s"&gt;'hello &amp;lt;one&amp;gt; world ${two} bye'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def first = &lt;span class="pl-s"&gt;'cruel'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def json = { second: &lt;span class="pl-s"&gt;'good'&lt;/span&gt; }

&lt;span class="pl-k"&gt;* &lt;/span&gt;replace text
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;token&lt;/span&gt;  | &lt;span class="pl-s1"&gt;value&lt;/span&gt;       |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;one&lt;/span&gt;    | &lt;span class="pl-s1"&gt;first&lt;/span&gt;       |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | ${&lt;span class="pl-s1"&gt;two&lt;/span&gt;} | &lt;span class="pl-s1"&gt;json&lt;/span&gt;.&lt;span class="pl-s1"&gt;second&lt;/span&gt; |&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;match text == &lt;span class="pl-s"&gt;'hello cruel world good bye'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Refer to this file for a detailed example: &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/replace.feature"&gt;&lt;code&gt;replace.feature&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-yaml-files" class="anchor" aria-hidden="true" href="#yaml-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;YAML Files&lt;/h2&gt;
&lt;p&gt;For those who may prefer &lt;a href="http://yaml.org" rel="nofollow"&gt;YAML&lt;/a&gt; as a simpler way to represent data, Karate allows you to read YAML content from a &lt;a href="#reading-files"&gt;file&lt;/a&gt; - and it will be auto-converted into JSON.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# yaml from a file (the extension matters), and the data-type of 'bar' would be JSON&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def bar = read(&lt;span class="pl-s"&gt;'data.yaml'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-yaml" class="anchor" aria-hidden="true" href="#yaml"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;yaml&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;A very rare need is to be able to convert a string which happens to be in YAML form into JSON, and this can be done via the &lt;code&gt;yaml&lt;/code&gt; type cast keyword. For example - if a response data element or downloaded file is YAML and you need to use the data in subsequent steps.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;text foo =
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  name: John&lt;/span&gt;
&lt;span class="pl-s"&gt;  input:&lt;/span&gt;
&lt;span class="pl-s"&gt;    id: 1&lt;/span&gt;
&lt;span class="pl-s"&gt;    subType: &lt;/span&gt;
&lt;span class="pl-s"&gt;      name: Smith&lt;/span&gt;
&lt;span class="pl-s"&gt;      deleted: false&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;
&lt;span class="pl-c"&gt;# yaml to json type conversion  &lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;yaml foo = foo
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo ==
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  {&lt;/span&gt;
&lt;span class="pl-s"&gt;    name: 'John',&lt;/span&gt;
&lt;span class="pl-s"&gt;    input: { &lt;/span&gt;
&lt;span class="pl-s"&gt;      id: 1,&lt;/span&gt;
&lt;span class="pl-s"&gt;      subType: { name: 'Smith', deleted: false }    &lt;/span&gt;
&lt;span class="pl-s"&gt;    }&lt;/span&gt;
&lt;span class="pl-s"&gt;  }&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-csv-files" class="anchor" aria-hidden="true" href="#csv-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CSV Files&lt;/h2&gt;
&lt;p&gt;Karate can read &lt;code&gt;*.csv&lt;/code&gt; files and will auto-convert them to JSON. A header row is always expected. See the section on &lt;a href="#reading-files"&gt;reading files&lt;/a&gt; - and also this example &lt;a href="karate-demo/src/test/java/demo/outline/dynamic-csv.feature"&gt;&lt;code&gt;dynamic-csv.feature&lt;/code&gt;&lt;/a&gt;, which shows off the convenience of &lt;a href="#dynamic-scenario-outline"&gt;dynamic &lt;code&gt;Scenario Outline&lt;/code&gt;-s&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In rare cases you may want to use a csv-file as-is and &lt;em&gt;not&lt;/em&gt; auto-convert it to JSON. A good example is when you want to use a CSV file as the &lt;a href="#request"&gt;request-body&lt;/a&gt; for a file-upload. You could get by by renaming the file-extension to say &lt;code&gt;*.txt&lt;/code&gt; but an alternative is to use the &lt;a href="#read-file-as-string"&gt;&lt;code&gt;karate.readAsString()&lt;/code&gt;&lt;/a&gt; API.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-csv" class="anchor" aria-hidden="true" href="#csv"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Just like &lt;a href="#yaml"&gt;&lt;code&gt;yaml&lt;/code&gt;&lt;/a&gt;, you may occasionally need to convert a string which happens to be in CSV form into JSON, and this can be done via the &lt;code&gt;csv&lt;/code&gt; keyword.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;text foo =
    &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;    name,type&lt;/span&gt;
&lt;span class="pl-s"&gt;    Billie,LOL&lt;/span&gt;
&lt;span class="pl-s"&gt;    Bob,Wild&lt;/span&gt;
&lt;span class="pl-s"&gt;    """&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;csv bar = foo
&lt;span class="pl-k"&gt;* &lt;/span&gt;match bar == [{ name: &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt;, type: &lt;span class="pl-s"&gt;'LOL'&lt;/span&gt; }, { name: &lt;span class="pl-s"&gt;'Bob'&lt;/span&gt;, type: &lt;span class="pl-s"&gt;'Wild'&lt;/span&gt; }]&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-javascript-functions" class="anchor" aria-hidden="true" href="#javascript-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JavaScript Functions&lt;/h2&gt;
&lt;p&gt;JavaScript Functions are also 'native'. And yes, functions can take arguments.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Standard JavaScript syntax rules apply, but the right-hand-side (or contents of the &lt;code&gt;*.js&lt;/code&gt; file if applicable) should begin with the &lt;code&gt;function&lt;/code&gt; keyword. This means that JavaScript comments are &lt;em&gt;not&lt;/em&gt; supported if they appear &lt;em&gt;before&lt;/em&gt; the function body. Also note that &lt;a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions" rel="nofollow"&gt;ES6 arrow functions&lt;/a&gt;
are &lt;strong&gt;not&lt;/strong&gt; supported. Finally, especially when using stand-alone &lt;code&gt;*.js&lt;/code&gt; files, you can use &lt;code&gt;fn&lt;/code&gt; as the function name, so that your IDE does not complain about JavaScript syntax errors, e.g. &lt;code&gt;function fn(x){ return x + 1 }&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def greeter = function(title, name) { return &lt;span class="pl-s"&gt;'hello '&lt;/span&gt; + title + &lt;span class="pl-s"&gt;' '&lt;/span&gt; + name }
&lt;span class="pl-k"&gt;* &lt;/span&gt;assert greeter(&lt;span class="pl-s"&gt;'Mr.'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Bob'&lt;/span&gt;) == &lt;span class="pl-s"&gt;'hello Mr. Bob'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;When JavaScript executes in Karate, the built-in &lt;a href="#the-karate-object"&gt;&lt;code&gt;karate&lt;/code&gt; object&lt;/a&gt; provides some commonly used utility functions. And with &lt;a href="#karate-expressions"&gt;Karate expressions&lt;/a&gt;, you can "dive into" JavaScript without needing to define a function - and &lt;a href="#conditional-logic"&gt;conditional logic&lt;/a&gt; is a good example.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-java-interop" class="anchor" aria-hidden="true" href="#java-interop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Java Interop&lt;/h3&gt;
&lt;p&gt;For more complex functions you are better off using the &lt;a href="#multi-line-expressions"&gt;multi-line&lt;/a&gt; 'doc-string' approach. This example actually calls into existing Java code, and being able to do this opens up a whole lot of possibilities. The JavaScript interpreter will try to convert types across Java and JavaScript as smartly as possible. For e.g. JSON objects become Java &lt;code&gt;Map&lt;/code&gt;-s, JSON arrays become Java &lt;code&gt;List&lt;/code&gt;-s, and Java Bean properties are accessible (and update-able) using 'dot notation' e.g. '&lt;code&gt;object.name&lt;/code&gt;'&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def dateStringToLong =
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  function(s) {&lt;/span&gt;
&lt;span class="pl-s"&gt;    var SimpleDateFormat = Java.type('java.text.SimpleDateFormat');&lt;/span&gt;
&lt;span class="pl-s"&gt;    var sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");&lt;/span&gt;
&lt;span class="pl-s"&gt;    return sdf.parse(s).time; // '.getTime()' would also have worked instead of '.time'&lt;/span&gt;
&lt;span class="pl-s"&gt;  } &lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;assert dateStringToLong(&lt;span class="pl-s"&gt;"2016-12-24T03:39:21.081+0000"&lt;/span&gt;) == 1482550761081&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;More examples of Java interop and how to invoke custom code can be found in the section on &lt;a href="#calling-java"&gt;Calling Java&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The &lt;code&gt;call&lt;/code&gt; keyword provides an &lt;a href="#calling-javascript-functions"&gt;alternate way of calling JavaScript functions&lt;/a&gt; that have only one argument. The argument can be provided after the function name, without parentheses, which makes things slightly more readable (and less cluttered) especially when the solitary argument is JSON.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def timeLong = call dateStringToLong &lt;span class="pl-s"&gt;'2016-12-24T03:39:21.081+0000'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;assert timeLong == 1482550761081

&lt;span class="pl-c"&gt;# a better example, with a JSON argument&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def greeter = function(name){ return &lt;span class="pl-s"&gt;'Hello '&lt;/span&gt; + name.first + &lt;span class="pl-s"&gt;' '&lt;/span&gt; + name.last + &lt;span class="pl-s"&gt;'!'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;def greeting = call greeter { first: &lt;span class="pl-s"&gt;'John'&lt;/span&gt;, last: &lt;span class="pl-s"&gt;'Smith'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-reading-files" class="anchor" aria-hidden="true" href="#reading-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reading Files&lt;/h2&gt;
&lt;p&gt;Karate makes re-use of payload data, utility-functions and even other test-scripts as easy as possible. Teams typically define complicated JSON (or XML) payloads in a file and then re-use this in multiple scripts. Keywords such as &lt;a href="#set"&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; and &lt;a href="#remove"&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; allow you to to 'tweak' payload-data to fit the scenario under test. You can imagine how this greatly simplifies setting up tests for boundary conditions. And such re-use makes it easier to re-factor tests when needed, which is great for maintainability.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that the &lt;a href="#set-multiple"&gt;&lt;code&gt;set&lt;/code&gt; (multiple)&lt;/a&gt; keyword can build complex, nested JSON (or XML) from scratch in a data-driven manner, and you may not even need to read from files for many situations. Test data can be within the main flow itself, which makes scripts highly readable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Reading files is achieved using the built-in JavaScript function called &lt;code&gt;read()&lt;/code&gt;. By default, the file is expected to be in the same folder (package) and side-by-side with the &lt;code&gt;*.feature&lt;/code&gt; file. But you can prefix the name with &lt;code&gt;classpath:&lt;/code&gt; in which case the &lt;a href="#classpath"&gt;'root' folder&lt;/a&gt; would be &lt;code&gt;src/test/java&lt;/code&gt; (assuming you are using the &lt;a href="#folder-structure"&gt;recommended folder structure&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Prefer &lt;a href="#classpath"&gt;&lt;code&gt;classpath:&lt;/code&gt;&lt;/a&gt; when a file is expected to be heavily re-used all across your project.  And yes, relative paths will work.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# json&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def someJson = read(&lt;span class="pl-s"&gt;'some-json.json'&lt;/span&gt;)
&lt;span class="pl-k"&gt;* &lt;/span&gt;def moreJson = read(&lt;span class="pl-s"&gt;'classpath:more-json.json'&lt;/span&gt;)

&lt;span class="pl-c"&gt;# xml&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def someXml = read(&lt;span class="pl-s"&gt;'../common/my-xml.xml'&lt;/span&gt;)

&lt;span class="pl-c"&gt;# import yaml (will be converted to json)&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def jsonFromYaml = read(&lt;span class="pl-s"&gt;'some-data.yaml'&lt;/span&gt;)

&lt;span class="pl-c"&gt;# csv (will be converted to json)&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def jsonFromCsv = read(&lt;span class="pl-s"&gt;'some-data.csv'&lt;/span&gt;)

&lt;span class="pl-c"&gt;# string&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def someString = read(&lt;span class="pl-s"&gt;'classpath:messages.txt'&lt;/span&gt;)

&lt;span class="pl-c"&gt;# javascript (will be evaluated)&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def someValue = read(&lt;span class="pl-s"&gt;'some-js-code.js'&lt;/span&gt;)

&lt;span class="pl-c"&gt;# if the js file evaluates to a function, it can be re-used later using the 'call' keyword&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def someFunction = read(&lt;span class="pl-s"&gt;'classpath:some-reusable-code.js'&lt;/span&gt;)
&lt;span class="pl-k"&gt;* &lt;/span&gt;def someCallResult = call someFunction

&lt;span class="pl-c"&gt;# the following short-cut is also allowed&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def someCallResult = call read(&lt;span class="pl-s"&gt;'some-js-code.js'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also &lt;a href="#calling-other-feature-files"&gt;re-use other &lt;code&gt;*.feature&lt;/code&gt;&lt;/a&gt; files from test-scripts:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# perfect for all those common authentication or 'set up' flows&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def result = call read(&lt;span class="pl-s"&gt;'classpath:some-reusable-steps.feature'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When a &lt;em&gt;called&lt;/em&gt; feature depends on some side-by-side resources such as JSON or JS files, you can use the &lt;code&gt;this:&lt;/code&gt; prefix to ensure that relative paths work correctly - because by default Karate calculates relative paths from the "root" feature or the top-most "caller".&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def data = read(&lt;span class="pl-s"&gt;'this:payload.json'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If a file does not end in &lt;code&gt;.json&lt;/code&gt;, &lt;code&gt;.xml&lt;/code&gt;, &lt;code&gt;.yaml&lt;/code&gt;, &lt;code&gt;.js&lt;/code&gt;, &lt;code&gt;.csv&lt;/code&gt; or &lt;code&gt;.txt&lt;/code&gt;, it is treated as a stream - which is typically what you would need for &lt;a href="#multipart-field"&gt;&lt;code&gt;multipart&lt;/code&gt;&lt;/a&gt; file uploads.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def someStream = read(&lt;span class="pl-s"&gt;'some-pdf.pdf'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;.graphql&lt;/code&gt; and &lt;code&gt;.gql&lt;/code&gt; extensions are also recognized (for GraphQL) but are handled the same way as &lt;code&gt;.txt&lt;/code&gt; and treated as a string.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For JSON and XML files, Karate will evaluate any &lt;a href="#embedded-expressions"&gt;embedded expressions&lt;/a&gt; on load. This enables more concise tests, and the file can be re-usable in multiple, data-driven tests.&lt;/p&gt;
&lt;p&gt;Since it is internally implemented as a JavaScript function, you can mix calls to &lt;code&gt;read()&lt;/code&gt; freely wherever JavaScript expressions are allowed:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def someBigString = read(&lt;span class="pl-s"&gt;'first.txt'&lt;/span&gt;) + read(&lt;span class="pl-s"&gt;'second.txt'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Tip: you can even use JS expressions to dynamically choose a file based on some condition: &lt;code&gt;* def someConfig = read('my-config-' + someVariable + '.json')&lt;/code&gt;. Refer to &lt;a href="#conditional-logic"&gt;conditional logic&lt;/a&gt; for more ideas.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And a very common need would be to use a file as the &lt;a href="#request"&gt;&lt;code&gt;request&lt;/code&gt;&lt;/a&gt; body:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;request read(&lt;span class="pl-s"&gt;'some-big-payload.json'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or in a &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;And &lt;/span&gt;match response == read(&lt;span class="pl-s"&gt;'expected-response-payload.json'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The rarely used &lt;code&gt;file:&lt;/code&gt; prefix is also supported. You could use it for 'hard-coded' absolute paths in dev mode, but is obviously not recommended for CI test-suites. A good example of where you may need this is if you programmatically write a file to the &lt;code&gt;target&lt;/code&gt; folder, and then you can read it like this:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def payload = read(&lt;span class="pl-s"&gt;'file:target/large.xml'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To summarize the possible prefixes:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Prefix&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;classpath:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;relative to the &lt;a href="#classpath"&gt;classpath&lt;/a&gt;, recommended for re-usable features&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;file:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;do not use this unless you know what you are doing, see above&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;this:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;when in a &lt;em&gt;called&lt;/em&gt; feature, ensure that files are resolved relative to the current feature file&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Take a look at the &lt;a href="karate-demo"&gt;Karate Demos&lt;/a&gt; for real-life examples of how you can use files for validating HTTP responses, like this one: &lt;a href="karate-demo/src/test/java/demo/read/read-files.feature"&gt;&lt;code&gt;read-files.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-read-file-as-string" class="anchor" aria-hidden="true" href="#read-file-as-string"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Read File As String&lt;/h3&gt;
&lt;p&gt;In some rare cases where you don't want to auto-convert JSON, XML, YAML or CSV, and just get the raw string content (without having to re-name the file to end with &lt;code&gt;.txt&lt;/code&gt;) - you can use the &lt;a href="#karate-readasstring"&gt;&lt;code&gt;karate.readAsString()&lt;/code&gt;&lt;/a&gt; API. Here is an example of using a CSV file as the request-body:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;path &lt;span class="pl-s"&gt;'upload'&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;header Content-Type = &lt;span class="pl-s"&gt;'text/csv'&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;request karate.readAsString(&lt;span class="pl-s"&gt;'classpath:my.csv'&lt;/span&gt;)
&lt;span class="pl-k"&gt;When &lt;/span&gt;method post
&lt;span class="pl-k"&gt;Then &lt;/span&gt;status 202&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-type-conversion" class="anchor" aria-hidden="true" href="#type-conversion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Type Conversion&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Best practice is to stick to using only &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt; unless there is a very good reason to do otherwise.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Internally, Karate will auto-convert JSON (and even XML) to Java &lt;code&gt;Map&lt;/code&gt; objects. And JSON arrays would become Java &lt;code&gt;List&lt;/code&gt;-s. But you will never need to worry about this internal data-representation most of the time.&lt;/p&gt;
&lt;p&gt;In some rare cases, for e.g. if you acquired a string from some external source, or if you generated JSON (or XML) by concatenating text or using &lt;a href="#replace"&gt;&lt;code&gt;replace&lt;/code&gt;&lt;/a&gt;, you may want to convert a string to JSON and vice-versa. You can even perform a conversion from XML to JSON if you want.&lt;/p&gt;
&lt;p&gt;One example of when you may want to convert JSON (or XML) to a string is when you are passing a payload to custom code via &lt;a href="#calling-java"&gt;Java interop&lt;/a&gt;. Do note that when passing JSON, the default &lt;code&gt;Map&lt;/code&gt; and &lt;code&gt;List&lt;/code&gt; representations should suffice for most needs (&lt;a href="karate-demo/src/test/java/demo/java/cats-java.feature"&gt;see example&lt;/a&gt;), and using them would avoid un-necessary string-conversion.&lt;/p&gt;
&lt;p&gt;So you have the following type markers you can use instead of &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt; (or the rarely used &lt;a href="#text"&gt;&lt;code&gt;text&lt;/code&gt;&lt;/a&gt;). The first four below are best explained in this example file: &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/type-conv.feature"&gt;&lt;code&gt;type-conv.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a name="user-content-type-string"&gt;&lt;code&gt;string&lt;/code&gt;&lt;/a&gt; - convert JSON or any other data-type (except XML) to a string&lt;/li&gt;
&lt;li&gt;&lt;a name="user-content-type-json"&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt; - convert XML, a map-like or list-like object, a string, or even a Java object into JSON&lt;/li&gt;
&lt;li&gt;&lt;a name="user-content-type-xml"&gt;&lt;code&gt;xml&lt;/code&gt;&lt;/a&gt; - convert JSON, a map-like object, a string, or even a Java object into XML&lt;/li&gt;
&lt;li&gt;&lt;a name="user-content-type-xmlstring"&gt;&lt;code&gt;xmlstring&lt;/code&gt;&lt;/a&gt; - specifically for converting the map-like Karate internal representation of XML into a string&lt;/li&gt;
&lt;li&gt;&lt;a name="user-content-type-csv"&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt; - convert a CSV string into JSON, see &lt;a href="#csv"&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a name="user-content-type-yaml"&gt;&lt;code&gt;yaml&lt;/code&gt;&lt;/a&gt; - convert a YAML string into JSON, see &lt;a href="#yaml"&gt;&lt;code&gt;yaml&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a name="user-content-type-bytes"&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; - convert to a byte-array, useful for binary payloads or comparisons, see &lt;a href="karate-demo/src/test/java/demo/websocket/echo.feature"&gt;example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a name="user-content-type-copy"&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt; - to clone a given payload variable reference (JSON, XML, Map or List), refer: &lt;a href="#copy"&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want to 'pretty print' a JSON or XML value with indenting, refer to the documentation of the &lt;a href="#print"&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt; keyword.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-floats-and-integers" class="anchor" aria-hidden="true" href="#floats-and-integers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Floats and Integers&lt;/h3&gt;
&lt;p&gt;While converting a number to a string is easy (just concatenate an empty string e.g. &lt;code&gt;myInt + ''&lt;/code&gt;), in some rare cases, you may need to convert a string to a number. You can do this by multiplying by &lt;code&gt;1&lt;/code&gt; or using the built-in JavaScript &lt;code&gt;parseInt()&lt;/code&gt; function:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = &lt;span class="pl-s"&gt;'10'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;string json = { bar: &lt;span class="pl-s"&gt;'#(1 * foo)'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == &lt;span class="pl-s"&gt;'{"bar":10.0}'&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;string json = { bar: &lt;span class="pl-s"&gt;'#(parseInt(foo))'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == &lt;span class="pl-s"&gt;'{"bar":10.0}'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As per the JSON spec, all numeric values are treated as doubles, so for integers - it really doesn't matter if there is a decimal point or not. In fact it may be a good idea to slip doubles instead of integers into some of your tests ! Anyway, there are times when you may want to force integers (perhaps for cosmetic reasons) and you can easily do so using the 'double-tilde' &lt;a href="http://rocha.la/JavaScript-bitwise-operators-in-practice" rel="nofollow"&gt;short-cut: '&lt;code&gt;~~&lt;/code&gt;'&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = &lt;span class="pl-s"&gt;'10'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;string json = { bar: &lt;span class="pl-s"&gt;'#(~~foo)'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == &lt;span class="pl-s"&gt;'{"bar":10}'&lt;/span&gt;

&lt;span class="pl-c"&gt;# unfortunately JS math always results in a double&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = 10
&lt;span class="pl-k"&gt;* &lt;/span&gt;string json = { bar: &lt;span class="pl-s"&gt;'#(1 * foo)'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == &lt;span class="pl-s"&gt;'{"bar":10.0}'&lt;/span&gt;

&lt;span class="pl-c"&gt;# but you can easily coerce to an integer if needed&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;string json = { bar: &lt;span class="pl-s"&gt;'#(~~(1 * foo))'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == &lt;span class="pl-s"&gt;'{"bar":10}'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-large-numbers" class="anchor" aria-hidden="true" href="#large-numbers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Large Numbers&lt;/h3&gt;
&lt;p&gt;Sometimes when dealing with very large numbers, the JS engine may mangle the number into scientific notation:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def big = 123123123123
&lt;span class="pl-k"&gt;* &lt;/span&gt;string json = { num: &lt;span class="pl-s"&gt;'#(big)'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == &lt;span class="pl-s"&gt;'{"num":1.23123123123E11}'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This can be easily solved by using &lt;code&gt;java.math.BigDecimal&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def big = new java.math.BigDecimal(123123123123)
&lt;span class="pl-k"&gt;* &lt;/span&gt;string json = { num: &lt;span class="pl-s"&gt;'#(big)'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == &lt;span class="pl-s"&gt;'{"num":123123123123}'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-karate-expressions" class="anchor" aria-hidden="true" href="#karate-expressions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Karate Expressions&lt;/h1&gt;
&lt;p&gt;Before we get to the HTTP keywords, it is worth doing a recap of the various 'shapes' that the right-hand-side of an assignment statement can take:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th&gt;Shape&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = 'bar'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JS&lt;/td&gt;
&lt;td&gt;simple strings, numbers or booleans&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = 'bar' + baz[0]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JS&lt;/td&gt;
&lt;td&gt;any valid JavaScript expression, and variables can be mixed in, another example: &lt;code&gt;bar.length + 1&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = { bar: '#(baz)' }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JSON&lt;/td&gt;
&lt;td&gt;anything that starts with a &lt;code&gt;{&lt;/code&gt; or a &lt;code&gt;[&lt;/code&gt; is parsed as JSON, use &lt;a href="#text"&gt;&lt;code&gt;text&lt;/code&gt;&lt;/a&gt; instead of &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt; if you need to suppress the default behavior&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = ({ bar: baz })&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JS&lt;/td&gt;
&lt;td&gt;&lt;a href="#enclosed-javascript"&gt;enclosed JavaScript&lt;/a&gt;, the result of which is exactly equivalent to the above&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = &amp;lt;foo&amp;gt;bar&amp;lt;/foo&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;XML&lt;/td&gt;
&lt;td&gt;anything that starts with a &lt;code&gt;&amp;lt;&lt;/code&gt; is parsed as XML, use &lt;a href="#text"&gt;&lt;code&gt;text&lt;/code&gt;&lt;/a&gt; instead of &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt; if you need to suppress the default behavior&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = function(arg){ return arg + bar }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JS Fn&lt;/td&gt;
&lt;td&gt;anything that starts with &lt;code&gt;function(...){&lt;/code&gt; is parsed as a JS function.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = read('bar.json')&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JS&lt;/td&gt;
&lt;td&gt;using the built-in &lt;a href="#reading-files"&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; function&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = $.bar[0]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JsonPath&lt;/td&gt;
&lt;td&gt;short-cut JsonPath on the &lt;a href="#response"&gt;&lt;code&gt;response&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = /bar/baz&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;XPath&lt;/td&gt;
&lt;td&gt;short-cut XPath on the &lt;a href="#response"&gt;&lt;code&gt;response&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = get bar $..baz[?(@.ban)]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#get"&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; JsonPath&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/json-path/JsonPath#path-examples"&gt;JsonPath&lt;/a&gt; on the variable &lt;code&gt;bar&lt;/code&gt;, you can also use &lt;a href="#get-plus-index"&gt;&lt;code&gt;get[0]&lt;/code&gt;&lt;/a&gt; to get the first item if the JsonPath evaluates to an array - especially useful when using wildcards such as &lt;code&gt;[*]&lt;/code&gt; or &lt;a href="#jsonpath-filters"&gt;filter-criteria&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = $bar..baz[?(@.ban)]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;$var.JsonPath&lt;/td&gt;
&lt;td&gt;&lt;a href="#get-short-cut"&gt;convenience short-cut&lt;/a&gt; for the above&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = get bar count(/baz//ban)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#get"&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; XPath&lt;/td&gt;
&lt;td&gt;XPath on the variable &lt;code&gt;bar&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = karate.pretty(bar)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JS&lt;/td&gt;
&lt;td&gt;using the &lt;a href="#the-karate-object"&gt;built-in &lt;code&gt;karate&lt;/code&gt; object&lt;/a&gt; in JS expressions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def Foo = Java.type('com.mycompany.Foo')&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JS-Java&lt;/td&gt;
&lt;td&gt;&lt;a href="#java-interop"&gt;Java Interop&lt;/a&gt;, and even package-name-spaced one-liners like &lt;code&gt;java.lang.System.currentTimeMillis()&lt;/code&gt; are possible&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = call bar { baz: '#(ban)' }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#call"&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;or &lt;a href="#callonce"&gt;&lt;code&gt;callonce&lt;/code&gt;&lt;/a&gt;, where expressions like &lt;a href="#reading-files"&gt;&lt;code&gt;read('foo.js')&lt;/code&gt;&lt;/a&gt; are allowed as the object to be called or the argument&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;* def foo = bar({ baz: ban })&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JS&lt;/td&gt;
&lt;td&gt;equivalent to the above, JavaScript function invocation&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-core-keywords" class="anchor" aria-hidden="true" href="#core-keywords"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core Keywords&lt;/h1&gt;
&lt;p&gt;They are &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;request&lt;/code&gt;, &lt;code&gt;method&lt;/code&gt; and &lt;code&gt;status&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;These are essential HTTP operations, they focus on setting one (un-named or 'key-less') value at a time and therefore don't need an &lt;code&gt;=&lt;/code&gt; sign in the syntax.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-url" class="anchor" aria-hidden="true" href="#url"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;url&lt;/code&gt;&lt;/h2&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;url &lt;span class="pl-s"&gt;'https://myhost.com/v1/cats'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A URL remains constant until you use the &lt;code&gt;url&lt;/code&gt; keyword again, so this is a good place to set-up the 'non-changing' parts of your REST URL-s.&lt;/p&gt;
&lt;p&gt;A URL can take expressions, so the approach below is legal.  And yes, variables can come from global &lt;a href="#configuration"&gt;config&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;url &lt;span class="pl-s"&gt;'https://'&lt;/span&gt; + e2eHostName + &lt;span class="pl-s"&gt;'/v1/api'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you are trying to build dynamic URLs including query-string parameters in the form: &lt;code&gt;http://myhost/some/path?foo=bar&amp;amp;search=true&lt;/code&gt; - please refer to the &lt;a href="#param"&gt;&lt;code&gt;param&lt;/code&gt;&lt;/a&gt; keyword.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-path" class="anchor" aria-hidden="true" href="#path"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;path&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;REST-style path parameters.  Can be expressions that will be evaluated.  Comma delimited values are supported which can be more convenient, and takes care of URL-encoding and appending '/' where needed.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;path &lt;span class="pl-s"&gt;'documents/'&lt;/span&gt; + documentId + &lt;span class="pl-s"&gt;'/download'&lt;/span&gt;

&lt;span class="pl-c"&gt;# this is equivalent to the above&lt;/span&gt;
&lt;span class="pl-k"&gt;Given &lt;/span&gt;path &lt;span class="pl-s"&gt;'documents'&lt;/span&gt;, documentId, &lt;span class="pl-s"&gt;'download'&lt;/span&gt;

&lt;span class="pl-c"&gt;# or you can do the same on multiple lines if you wish&lt;/span&gt;
&lt;span class="pl-k"&gt;Given &lt;/span&gt;path &lt;span class="pl-s"&gt;'documents'&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;path documentId
&lt;span class="pl-k"&gt;And &lt;/span&gt;path &lt;span class="pl-s"&gt;'download'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the &lt;code&gt;path&lt;/code&gt; 'resets' after any HTTP request is made but not the &lt;code&gt;url&lt;/code&gt;. The &lt;a href="#hello-world"&gt;Hello World&lt;/a&gt; is a great example of 'REST-ful' use of the &lt;code&gt;url&lt;/code&gt; when the test focuses on a single REST 'resource'. Look at how the &lt;code&gt;path&lt;/code&gt; did not need to be specified for the second HTTP &lt;code&gt;get&lt;/code&gt; call since &lt;code&gt;/cats&lt;/code&gt; is part of the &lt;code&gt;url&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Important: If you attempt to build a URL in the form &lt;code&gt;?myparam=value&lt;/code&gt; by using &lt;code&gt;path&lt;/code&gt; the &lt;code&gt;?&lt;/code&gt; will get encoded into &lt;code&gt;%3F&lt;/code&gt;. Use either the &lt;a href="#param"&gt;&lt;code&gt;param&lt;/code&gt;&lt;/a&gt; keyword, e.g.: &lt;code&gt;* param myparam = 'value'&lt;/code&gt; or &lt;a href="#url"&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;* url 'http://example.com/v1?myparam'&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-request" class="anchor" aria-hidden="true" href="#request"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;request&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;In-line JSON:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;request { name: &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt;, type: &lt;span class="pl-s"&gt;'LOL'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In-line XML:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;And &lt;/span&gt;request &lt;span class="pl-smi"&gt;&amp;lt;cat&amp;gt;&amp;lt;name&amp;gt;&lt;/span&gt;Billie&lt;span class="pl-smi"&gt;&amp;lt;/name&amp;gt;&amp;lt;type&amp;gt;&lt;/span&gt;Ceiling&lt;span class="pl-smi"&gt;&amp;lt;/type&amp;gt;&amp;lt;/cat&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From a &lt;a href="#reading-files"&gt;file&lt;/a&gt; in the same package.  Use the &lt;code&gt;classpath:&lt;/code&gt; prefix to load from the &lt;a href="#classpath"&gt;classpath&lt;/a&gt; instead.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;request read(&lt;span class="pl-s"&gt;'my-json.json'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You could always use a variable:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;And &lt;/span&gt;request myVariable&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In most cases you won't need to set the &lt;code&gt;Content-Type&lt;/code&gt; &lt;a href="#header"&gt;&lt;code&gt;header&lt;/code&gt;&lt;/a&gt; as Karate will automatically do the right thing depending on the data-type of the &lt;code&gt;request&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Defining the &lt;code&gt;request&lt;/code&gt; is mandatory if you are using an HTTP &lt;code&gt;method&lt;/code&gt; that expects a body such as &lt;code&gt;post&lt;/code&gt;. If you really need to have an empty body, you can use an empty string as shown below, and you can force the right &lt;code&gt;Content-Type&lt;/code&gt; header by using the &lt;a href="#header"&gt;&lt;code&gt;header&lt;/code&gt;&lt;/a&gt; keyword.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;request &lt;span class="pl-s"&gt;''&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;header Content-Type = &lt;span class="pl-s"&gt;'text/html'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sending a &lt;a href="#reading-files"&gt;file&lt;/a&gt; as the entire binary request body is easy (note that &lt;a href="#multipart-file"&gt;&lt;code&gt;multipart&lt;/code&gt;&lt;/a&gt; is different):&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;path &lt;span class="pl-s"&gt;'upload'&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;request read(&lt;span class="pl-s"&gt;'my-image.jpg'&lt;/span&gt;)
&lt;span class="pl-k"&gt;When &lt;/span&gt;method put
&lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-method" class="anchor" aria-hidden="true" href="#method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;method&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The HTTP verb - &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt;, &lt;code&gt;patch&lt;/code&gt;, &lt;code&gt;options&lt;/code&gt;, &lt;code&gt;head&lt;/code&gt;, &lt;code&gt;connect&lt;/code&gt;, &lt;code&gt;trace&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Lower-case is fine.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;When &lt;/span&gt;method post&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is worth internalizing that during test-execution, it is upon the &lt;code&gt;method&lt;/code&gt; keyword that the actual HTTP request is issued. Which suggests that the step should be in the &lt;code&gt;When&lt;/code&gt; form, for example: &lt;code&gt;When method post&lt;/code&gt;. And steps that follow should logically be in the &lt;code&gt;Then&lt;/code&gt; form. Also make sure that you complete the set up of things like &lt;a href="#url"&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt;, &lt;a href="#param"&gt;&lt;code&gt;param&lt;/code&gt;&lt;/a&gt;, &lt;a href="#header"&gt;&lt;code&gt;header&lt;/code&gt;&lt;/a&gt;, &lt;a href="#configure"&gt;&lt;code&gt;configure&lt;/code&gt;&lt;/a&gt; etc. &lt;em&gt;before&lt;/em&gt; you fire the &lt;code&gt;method&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# set headers or params (if any) BEFORE the method step&lt;/span&gt;
&lt;span class="pl-k"&gt;Given &lt;/span&gt;header Accept = &lt;span class="pl-s"&gt;'application/json'&lt;/span&gt;
&lt;span class="pl-k"&gt;When &lt;/span&gt;method get
&lt;span class="pl-c"&gt;# the step that immediately follows the above would typically be:&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Although rarely needed, variable references or &lt;a href="#karate-expressions"&gt;expressions&lt;/a&gt; are also supported:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def putOrPost = (someVariable == &lt;span class="pl-s"&gt;'dev'&lt;/span&gt; ? &lt;span class="pl-s"&gt;'put'&lt;/span&gt; : &lt;span class="pl-s"&gt;'post'&lt;/span&gt;)
&lt;span class="pl-k"&gt;* &lt;/span&gt;method putOrPost&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-status" class="anchor" aria-hidden="true" href="#status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;status&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;This is a shortcut to assert the HTTP response code.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And this assertion will cause the test to fail if the HTTP response code is something else.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#responsestatus"&gt;&lt;code&gt;responseStatus&lt;/code&gt;&lt;/a&gt; if you want to do some complex assertions against the HTTP status code.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-keywords-that-set-key-value-pairs" class="anchor" aria-hidden="true" href="#keywords-that-set-key-value-pairs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keywords that set key-value pairs&lt;/h1&gt;
&lt;p&gt;They are &lt;code&gt;param&lt;/code&gt;, &lt;code&gt;header&lt;/code&gt;, &lt;code&gt;cookie&lt;/code&gt;, &lt;code&gt;form field&lt;/code&gt; and &lt;code&gt;multipart field&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The syntax will include a '=' sign between the key and the value.  The key should not be within quotes.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To make dynamic data-driven testing easier, the following keywords also exist: &lt;a href="#params"&gt;&lt;code&gt;params&lt;/code&gt;&lt;/a&gt;, &lt;a href="#headers"&gt;&lt;code&gt;headers&lt;/code&gt;&lt;/a&gt;, &lt;a href="#cookies-json"&gt;&lt;code&gt;cookies&lt;/code&gt;&lt;/a&gt; and &lt;a href="#form-fields"&gt;&lt;code&gt;form fields&lt;/code&gt;&lt;/a&gt;. They use JSON to build the relevant parts of the HTTP request.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-param" class="anchor" aria-hidden="true" href="#param"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;param&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Setting query-string parameters:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;param someKey = &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;param anotherKey = someVariable&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above would result in a URL like: &lt;code&gt;http://myhost/mypath?someKey=hello&amp;amp;anotherKey=foo&lt;/code&gt;. Note that the &lt;code&gt;?&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt; will be automatically inserted.&lt;/p&gt;
&lt;p&gt;Multi-value params are also supported:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;param myParam = &lt;span class="pl-s"&gt;'foo'&lt;/span&gt;, &lt;span class="pl-s"&gt;'bar'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also use JSON to set multiple query-parameters in one-line using &lt;a href="#params"&gt;&lt;code&gt;params&lt;/code&gt;&lt;/a&gt; and this is especially useful for dynamic data-driven testing.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-header" class="anchor" aria-hidden="true" href="#header"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;header&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;You can use &lt;a href="#calling-javascript-functions"&gt;functions&lt;/a&gt; or &lt;a href="#karate-expressions"&gt;expressions&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;header Authorization = myAuthFunction()
&lt;span class="pl-k"&gt;And &lt;/span&gt;header transaction-id = &lt;span class="pl-s"&gt;'test-'&lt;/span&gt; + myIdString&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is worth repeating that in most cases you won't need to set the &lt;code&gt;Content-Type&lt;/code&gt; header as Karate will automatically do the right thing depending on the data-type of the &lt;a href="#request"&gt;&lt;code&gt;request&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Because of how easy it is to set HTTP headers, Karate does not provide any special keywords for things like
the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept" rel="nofollow"&gt;&lt;code&gt;Accept&lt;/code&gt;&lt;/a&gt; header. You simply do
something like this:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;path &lt;span class="pl-s"&gt;'some/path'&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;request { some: &lt;span class="pl-s"&gt;'data'&lt;/span&gt; }
&lt;span class="pl-k"&gt;And &lt;/span&gt;header Accept = &lt;span class="pl-s"&gt;'application/json'&lt;/span&gt;
&lt;span class="pl-k"&gt;When &lt;/span&gt;method post
&lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A common need is to send the same header(s) for &lt;em&gt;every&lt;/em&gt; request, and &lt;a href="#configure-headers"&gt;&lt;code&gt;configure headers&lt;/code&gt;&lt;/a&gt; (with JSON) is how you can set this up once for all subsequent requests. And if you do this within a &lt;code&gt;Background:&lt;/code&gt; section, it would apply to all &lt;code&gt;Scenario:&lt;/code&gt; sections within the &lt;code&gt;*.feature&lt;/code&gt; file.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;configure headers = { &lt;span class="pl-s"&gt;'Content-Type'&lt;/span&gt;: &lt;span class="pl-s"&gt;'application/xml'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that &lt;code&gt;Content-Type&lt;/code&gt; had to be enclosed in quotes in the JSON above because the "&lt;code&gt;-&lt;/code&gt;" (hyphen character) would cause problems otherwise. Also note that "&lt;code&gt;; charset=UTF-8&lt;/code&gt;" would be appended to the &lt;code&gt;Content-Type&lt;/code&gt; header that Karate sends by default, and in some rare cases, you may need to suppress this behavior completely. You can do so by setting the &lt;code&gt;charset&lt;/code&gt; to null via the &lt;a href="#configure"&gt;&lt;code&gt;configure&lt;/code&gt;&lt;/a&gt; keyword:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;configure charset = null&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you need headers to be dynamically generated for each HTTP request, use a JavaScript function with &lt;a href="#configure-headers"&gt;&lt;code&gt;configure headers&lt;/code&gt;&lt;/a&gt; instead of JSON.&lt;/p&gt;
&lt;p&gt;Multi-value headers (though rarely used in the wild) are also supported:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;header myHeader = &lt;span class="pl-s"&gt;'foo'&lt;/span&gt;, &lt;span class="pl-s"&gt;'bar'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also look at the &lt;a href="#headers"&gt;&lt;code&gt;headers&lt;/code&gt;&lt;/a&gt; keyword which uses JSON and makes some kinds of dynamic data-driven testing easier.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-cookie" class="anchor" aria-hidden="true" href="#cookie"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;cookie&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Setting a cookie:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;cookie foo = &lt;span class="pl-s"&gt;'bar'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You also have the option of setting multiple cookies in one-step using the &lt;a href="#cookies"&gt;&lt;code&gt;cookies&lt;/code&gt;&lt;/a&gt; keyword.&lt;/p&gt;
&lt;p&gt;Note that any cookies returned in the HTTP response would be automatically set for any future requests. This mechanism works by calling &lt;a href="#configure"&gt;&lt;code&gt;configure cookies&lt;/code&gt;&lt;/a&gt; behind the scenes and if you need to stop auto-adding cookies for future requests, just do this:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;configure cookies = null&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also refer to the built-in variable &lt;a href="#responsecookies"&gt;&lt;code&gt;responseCookies&lt;/code&gt;&lt;/a&gt; for how you can access and perform assertions on cookie data values.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-form-field" class="anchor" aria-hidden="true" href="#form-field"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;form field&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;HTML form fields would be URL-encoded when the HTTP request is submitted (by the &lt;a href="#method"&gt;&lt;code&gt;method&lt;/code&gt;&lt;/a&gt; step). You would typically use these to simulate a user sign-in and then grab a security token from the &lt;a href="#response"&gt;&lt;code&gt;response&lt;/code&gt;&lt;/a&gt;. For example:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;path &lt;span class="pl-s"&gt;'login'&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;form field username = &lt;span class="pl-s"&gt;'john'&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;form field password = &lt;span class="pl-s"&gt;'secret'&lt;/span&gt;
&lt;span class="pl-k"&gt;When &lt;/span&gt;method post
&lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200
&lt;span class="pl-k"&gt;And &lt;/span&gt;def authToken = response.token&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A good example of the use of &lt;code&gt;form field&lt;/code&gt; for a typical sign-in flow is this OAuth 2 demo: &lt;a href="karate-demo/src/test/java/demo/oauth/oauth2.feature"&gt;&lt;code&gt;oauth2.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Multi-values are supported the way you would expect (e.g. for simulating check-boxes and multi-selects):&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;form field selected = &lt;span class="pl-s"&gt;'apple'&lt;/span&gt;, &lt;span class="pl-s"&gt;'orange'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also dynamically set multiple fields in one step using the &lt;a href="#form-fields"&gt;&lt;code&gt;form fields&lt;/code&gt;&lt;/a&gt; keyword.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-multipart-field" class="anchor" aria-hidden="true" href="#multipart-field"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;multipart field&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Use this for building multipart named (form) field requests. This is typically combined with &lt;code&gt;multipart file&lt;/code&gt; as shown below.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Multiple fields can be set in one step using &lt;a href="#multipart-fields"&gt;&lt;code&gt;multipart fields&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-multipart-file" class="anchor" aria-hidden="true" href="#multipart-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;multipart file&lt;/code&gt;&lt;/h2&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;multipart file myFile = { read: &lt;span class="pl-s"&gt;'test.pdf'&lt;/span&gt;, filename: &lt;span class="pl-s"&gt;'upload-name.pdf'&lt;/span&gt;, contentType: &lt;span class="pl-s"&gt;'application/pdf'&lt;/span&gt; }
&lt;span class="pl-k"&gt;And &lt;/span&gt;multipart field message = &lt;span class="pl-s"&gt;'hello world'&lt;/span&gt;
&lt;span class="pl-k"&gt;When &lt;/span&gt;method post
&lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that &lt;code&gt;multipart file&lt;/code&gt; takes a JSON argument so that you can easily set the &lt;code&gt;filename&lt;/code&gt; and the &lt;code&gt;contentType&lt;/code&gt; (mime-type) in one step.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;read&lt;/code&gt;: the name of a file, and the &lt;a href="#reading-files"&gt;&lt;code&gt;classpath:&lt;/code&gt;&lt;/a&gt; prefix also is allowed. mandatory unless &lt;code&gt;value&lt;/code&gt; is used, see below.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;: alternative to &lt;code&gt;read&lt;/code&gt; in rare cases where something like a JSON or XML file is being uploaded and you want to create it dynamically.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;filename&lt;/code&gt;: optional, will default to the multipart field name if not specified&lt;/li&gt;
&lt;li&gt;&lt;code&gt;contentType&lt;/code&gt;: optional, will default to &lt;code&gt;application/octet-stream&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When 'multipart' content is involved, the &lt;code&gt;Content-Type&lt;/code&gt; header of the HTTP request defaults to &lt;code&gt;multipart/form-data&lt;/code&gt;.
You can over-ride it by using the &lt;a href="#header"&gt;&lt;code&gt;header&lt;/code&gt;&lt;/a&gt; keyword before the &lt;code&gt;method&lt;/code&gt; step.  Look at
&lt;a href="#multipart-entity"&gt;&lt;code&gt;multipart entity&lt;/code&gt;&lt;/a&gt; for an example.&lt;/p&gt;
&lt;p&gt;Also refer to this &lt;a href="karate-demo"&gt;demo example&lt;/a&gt; for a working example of multipart file uploads: &lt;a href="karate-demo/src/test/java/demo/upload/upload.feature"&gt;&lt;code&gt;upload.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can also dynamically set multiple files in one step using &lt;a href="#multipart-files"&gt;&lt;code&gt;multipart files&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-multipart-entity" class="anchor" aria-hidden="true" href="#multipart-entity"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;multipart entity&lt;/code&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;This is technically not in the key-value form: &lt;code&gt;multipart field name = 'foo'&lt;/code&gt;, but logically
belongs here in the documentation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Use this for multipart content items that don't have field-names.  Here below is an example that
also demonstrates using the &lt;a href="https://tools.ietf.org/html/rfc2387" rel="nofollow"&gt;&lt;code&gt;multipart/related&lt;/code&gt;&lt;/a&gt; content-type.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;path &lt;span class="pl-s"&gt;'/v2/documents'&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;multipart entity read(&lt;span class="pl-s"&gt;'foo.json'&lt;/span&gt;)
&lt;span class="pl-k"&gt;And &lt;/span&gt;multipart field image = read(&lt;span class="pl-s"&gt;'bar.jpg'&lt;/span&gt;)
&lt;span class="pl-k"&gt;And &lt;/span&gt;header Content-Type = &lt;span class="pl-s"&gt;'multipart/related'&lt;/span&gt;
&lt;span class="pl-k"&gt;When &lt;/span&gt;method post 
&lt;span class="pl-k"&gt;Then &lt;/span&gt;status 201&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-multi-param-keywords" class="anchor" aria-hidden="true" href="#multi-param-keywords"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multi-Param Keywords&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-keywords-that-set-multiple-key-value-pairs-in-one-step" class="anchor" aria-hidden="true" href="#keywords-that-set-multiple-key-value-pairs-in-one-step"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keywords that set multiple key-value pairs in one step&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;params&lt;/code&gt;, &lt;code&gt;headers&lt;/code&gt;, &lt;code&gt;cookies&lt;/code&gt;, &lt;code&gt;form fields&lt;/code&gt;, &lt;code&gt;multipart fields&lt;/code&gt; and &lt;code&gt;multipart files&lt;/code&gt; take a single JSON argument (which can be in-line or a variable reference), and this enables certain types of dynamic data-driven testing, especially because any JSON key with a &lt;code&gt;null&lt;/code&gt; value will be ignored. Here is a good example in the demos: &lt;a href="karate-demo/src/test/java/demo/search/dynamic-params.feature"&gt;&lt;code&gt;dynamic-params.feature&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-params" class="anchor" aria-hidden="true" href="#params"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;params&lt;/code&gt;&lt;/h2&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;params { searchBy: &lt;span class="pl-s"&gt;'client'&lt;/span&gt;, active: true, someList: [1, 2, 3] }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See also &lt;a href="#param"&gt;&lt;code&gt;param&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-headers" class="anchor" aria-hidden="true" href="#headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;headers&lt;/code&gt;&lt;/h2&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def someData = { Authorization: &lt;span class="pl-s"&gt;'sometoken'&lt;/span&gt;, tx_id: &lt;span class="pl-s"&gt;'1234'&lt;/span&gt;, extraTokens: [&lt;span class="pl-s"&gt;'abc'&lt;/span&gt;, &lt;span class="pl-s"&gt;'def'&lt;/span&gt;] }
&lt;span class="pl-k"&gt;* &lt;/span&gt;headers someData&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See also &lt;a href="#header"&gt;&lt;code&gt;header&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-cookies" class="anchor" aria-hidden="true" href="#cookies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;cookies&lt;/code&gt;&lt;/h2&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;cookies { someKey: &lt;span class="pl-s"&gt;'someValue'&lt;/span&gt;, foo: &lt;span class="pl-s"&gt;'bar'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See also &lt;a href="#cookie"&gt;&lt;code&gt;cookie&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-form-fields" class="anchor" aria-hidden="true" href="#form-fields"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;form fields&lt;/code&gt;&lt;/h2&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def credentials = { username: &lt;span class="pl-s"&gt;'#(user.name)'&lt;/span&gt;, password: &lt;span class="pl-s"&gt;'secret'&lt;/span&gt;, projects: [&lt;span class="pl-s"&gt;'one'&lt;/span&gt;, &lt;span class="pl-s"&gt;'two'&lt;/span&gt;] }
&lt;span class="pl-k"&gt;* &lt;/span&gt;form fields credentials&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See also &lt;a href="#form-field"&gt;&lt;code&gt;form field&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-multipart-fields" class="anchor" aria-hidden="true" href="#multipart-fields"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;multipart fields&lt;/code&gt;&lt;/h2&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;And &lt;/span&gt;multipart fields { message: &lt;span class="pl-s"&gt;'hello world'&lt;/span&gt;, json: { foo: &lt;span class="pl-s"&gt;'bar'&lt;/span&gt; } }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See also &lt;a href="#multipart-field"&gt;&lt;code&gt;multipart field&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-multipart-files" class="anchor" aria-hidden="true" href="#multipart-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;multipart files&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The single JSON argument needs to be in the form &lt;code&gt;{ field1: { read: 'file1.ext' }, field2: { read: 'file2.ext' } }&lt;/code&gt; where each nested JSON is in the form expected by &lt;a href="#multipart-file"&gt;&lt;code&gt;multipart file&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def json = {}
&lt;span class="pl-k"&gt;* &lt;/span&gt;set json.myFile1 = { read: &lt;span class="pl-s"&gt;'test1.pdf'&lt;/span&gt;, filename: &lt;span class="pl-s"&gt;'upload-name1.pdf'&lt;/span&gt;, contentType: &lt;span class="pl-s"&gt;'application/pdf'&lt;/span&gt; }
&lt;span class="pl-c"&gt;# if you have dynamic keys you can do this&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def key = &lt;span class="pl-s"&gt;'myFile2'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;json[key] = { read: &lt;span class="pl-s"&gt;'test2.pdf'&lt;/span&gt;, filename: &lt;span class="pl-s"&gt;'upload-name2.pdf'&lt;/span&gt;, contentType: &lt;span class="pl-s"&gt;'application/pdf'&lt;/span&gt; }
&lt;span class="pl-k"&gt;And &lt;/span&gt;multipart files json&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-soap" class="anchor" aria-hidden="true" href="#soap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SOAP&lt;/h1&gt;
&lt;p&gt;Since a SOAP request needs special handling, this is the only case where the
&lt;a href="#method"&gt;&lt;code&gt;method&lt;/code&gt;&lt;/a&gt; step is not used to actually fire the request to the server.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-soap-action" class="anchor" aria-hidden="true" href="#soap-action"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;soap action&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The name of the SOAP action specified is used as the 'SOAPAction' header.  Here is an example
which also demonstrates how you could assert for expected values in the response XML.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;request read(&lt;span class="pl-s"&gt;'soap-request.xml'&lt;/span&gt;)
&lt;span class="pl-k"&gt;When &lt;/span&gt;soap action &lt;span class="pl-s"&gt;'QueryUsageBalance'&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200
&lt;span class="pl-k"&gt;And &lt;/span&gt;match response /Envelope/Body/QueryUsageBalanceResponse/Result/Error/Code == &lt;span class="pl-s"&gt;'DAT_USAGE_1003'&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;match response /Envelope/Body/QueryUsageBalanceResponse == read(&lt;span class="pl-s"&gt;'expected-response.xml'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/soap.feature"&gt;working example&lt;/a&gt; of calling a SOAP service can be found within the Karate project test-suite. Refer to the &lt;a href="karate-demo"&gt;demos&lt;/a&gt; for another example: &lt;a href="karate-demo/src/test/java/demo/soap/soap.feature"&gt;&lt;code&gt;soap.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;More examples are available that showcase various ways of parameter-izing and dynamically manipulating SOAP requests in a data-driven fashion. Karate is quite flexible, and provides multiple options for you to evolve patterns that fit your environment, as you can see here: &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/xml/xml.feature"&gt;&lt;code&gt;xml.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-retry-until" class="anchor" aria-hidden="true" href="#retry-until"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;retry until&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Karate has built-in support for re-trying an HTTP request until a certain condition has been met. The default setting for the max retry-attempts is 3 with a poll interval of 3000 milliseconds (3 seconds). If needed, this can be changed by using &lt;a href="#configure"&gt;&lt;code&gt;configure&lt;/code&gt;&lt;/a&gt; - any time during a test, or set globally via &lt;a href="#configuration"&gt;&lt;code&gt;karate-config.js&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;configure retry = { count: 10, interval: 5000 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;retry&lt;/code&gt; keyword is designed to extend the existing &lt;a href="#method"&gt;&lt;code&gt;method&lt;/code&gt;&lt;/a&gt; syntax (and should appear &lt;strong&gt;before&lt;/strong&gt; a &lt;code&gt;method&lt;/code&gt; step) like so:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;url demoBaseUrl
&lt;span class="pl-k"&gt;And &lt;/span&gt;path &lt;span class="pl-s"&gt;'greeting'&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;retry until response.id &amp;gt; 3
&lt;span class="pl-k"&gt;When &lt;/span&gt;method get
&lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Any JavaScript expression that uses any variable in scope can be placed after the "&lt;code&gt;retry until&lt;/code&gt;" part. So you can refer to the &lt;a href="#response"&gt;&lt;code&gt;response&lt;/code&gt;&lt;/a&gt;, &lt;a href="#responsestatus"&gt;&lt;code&gt;responseStatus&lt;/code&gt;&lt;/a&gt; or even &lt;a href="#responseheaders"&gt;&lt;code&gt;responseHeaders&lt;/code&gt;&lt;/a&gt; if needed. For example:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;url demoBaseUrl
&lt;span class="pl-k"&gt;And &lt;/span&gt;path &lt;span class="pl-s"&gt;'greeting'&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;retry until responseStatus == 200 &amp;amp;&amp;amp; response.id &amp;gt; 3
&lt;span class="pl-k"&gt;When &lt;/span&gt;method get&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that it has to be a pure JavaScript expression - which means that &lt;code&gt;match&lt;/code&gt; syntax such as &lt;code&gt;contains&lt;/code&gt; will &lt;em&gt;not&lt;/em&gt; work. But you can easily achieve any complex logic by &lt;a href="https://stackoverflow.com/a/55823180/143475" rel="nofollow"&gt;using the JS API&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Refer to &lt;a href="karate-demo/src/test/java/demo/polling/polling.feature"&gt;&lt;code&gt;polling.feature&lt;/code&gt;&lt;/a&gt; for an example, and also see the alternative way to achieve &lt;a href="#polling"&gt;polling&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-configure" class="anchor" aria-hidden="true" href="#configure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;configure&lt;/code&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-managing-headers-ssl-timeouts-and-http-proxy" class="anchor" aria-hidden="true" href="#managing-headers-ssl-timeouts-and-http-proxy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Managing Headers, SSL, Timeouts and HTTP Proxy&lt;/h2&gt;
&lt;p&gt;You can adjust configuration settings for the HTTP client used by Karate using this keyword. The syntax is similar to &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt; but instead of a named variable, you update configuration. Here are the configuration keys supported:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;headers&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JSON / JS function&lt;/td&gt;
&lt;td&gt;See &lt;a href="#configure-headers"&gt;&lt;code&gt;configure headers&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cookies&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JSON / JS function&lt;/td&gt;
&lt;td&gt;Just like &lt;code&gt;configure headers&lt;/code&gt;, but for cookies. You will typically never use this, as response cookies are auto-added to all future requests. If you need to clear cookies at any time, just do &lt;code&gt;configure cookies = null&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;logPrettyRequest&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;Pretty print the request payload JSON or XML with indenting (default &lt;code&gt;false&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;logPrettyResponse&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;Pretty print the response payload JSON or XML with indenting (default &lt;code&gt;false&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;printEnabled&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;Can be used to suppress the &lt;a href="#print"&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt; output when not in 'dev mode' by setting as &lt;code&gt;false&lt;/code&gt; (default &lt;code&gt;true&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;report&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JSON / boolean&lt;/td&gt;
&lt;td&gt;see &lt;a href="#report-verbosity"&gt;report verbosity&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;afterScenario&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JS function&lt;/td&gt;
&lt;td&gt;Will be called &lt;a href="#hooks"&gt;after every &lt;code&gt;Scenario&lt;/code&gt;&lt;/a&gt; (or &lt;code&gt;Example&lt;/code&gt; within a &lt;code&gt;Scenario Outline&lt;/code&gt;), refer to this example: &lt;a href="karate-demo/src/test/java/demo/hooks/hooks.feature"&gt;&lt;code&gt;hooks.feature&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;afterFeature&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JS function&lt;/td&gt;
&lt;td&gt;Will be called &lt;a href="#hooks"&gt;after every &lt;code&gt;Feature&lt;/code&gt;&lt;/a&gt;, refer to this example: &lt;a href="karate-demo/src/test/java/demo/hooks/hooks.feature"&gt;&lt;code&gt;hooks.feature&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ssl&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;Enable HTTPS calls without needing to configure a trusted certificate or key-store.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ssl&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Like above, but force the SSL algorithm to one of &lt;a href="http://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#SSLContext" rel="nofollow"&gt;these values&lt;/a&gt;. (The above form internally defaults to &lt;code&gt;TLS&lt;/code&gt; if simply set to &lt;code&gt;true&lt;/code&gt;).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ssl&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JSON&lt;/td&gt;
&lt;td&gt;see &lt;a href="#x509-certificate-authentication"&gt;X509 certificate authentication&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;followRedirects&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;Whether the HTTP client automatically follows redirects - (default &lt;code&gt;true&lt;/code&gt;), refer to this &lt;a href="karate-demo/src/test/java/demo/redirect/redirect.feature"&gt;example&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;connectTimeout&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Set the connect timeout (milliseconds). The default is 30000 (30 seconds). Note that for &lt;code&gt;karate-apache&lt;/code&gt;, this sets the &lt;a href="https://stackoverflow.com/a/22722260/143475" rel="nofollow"&gt;socket timeout&lt;/a&gt; to the same value as well.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;readTimeout&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Set the read timeout (milliseconds). The default is 30000 (30 seconds).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;proxy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;Set the URI of the HTTP proxy to use.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;proxy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JSON&lt;/td&gt;
&lt;td&gt;For a proxy that requires authentication, set the &lt;code&gt;uri&lt;/code&gt;, &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt;, see example below. Also a &lt;code&gt;nonProxyHosts&lt;/code&gt; key is supported which can take a list for e.g. &lt;code&gt;{ uri: 'http://my.proxy.host:8080',  nonProxyHosts: ['host1', 'host2']}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;charset&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;The charset that will be sent in the request &lt;code&gt;Content-Type&lt;/code&gt; which defaults to &lt;code&gt;utf-8&lt;/code&gt;. You typically never need to change this, and you can over-ride (or disable) this per-request if needed via the &lt;a href="#header"&gt;&lt;code&gt;header&lt;/code&gt;&lt;/a&gt; keyword (&lt;a href="karate-demo/src/test/java/demo/headers/content-type.feature"&gt;example&lt;/a&gt;).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;retry&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JSON&lt;/td&gt;
&lt;td&gt;defaults to &lt;code&gt;{ count: 3, interval: 3000 }&lt;/code&gt; - see &lt;a href="#retry-until"&gt;&lt;code&gt;retry until&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;outlineVariablesAuto&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;defaults to &lt;code&gt;true&lt;/code&gt;, whether each key-value pair in the &lt;code&gt;Scenario Outline&lt;/code&gt; example-row is automatically injected into the context as a variable (and not just &lt;code&gt;__row&lt;/code&gt;), see &lt;a href="#scenario-outline-enhancements"&gt;&lt;code&gt;Scenario Outline&lt;/code&gt; Enhancements&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;lowerCaseResponseHeaders&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;Converts every key and value in the &lt;a href="#responseheaders"&gt;&lt;code&gt;responseHeaders&lt;/code&gt;&lt;/a&gt; to lower-case which makes it easier to validate for e.g. using &lt;a href="#match-header"&gt;&lt;code&gt;match header&lt;/code&gt;&lt;/a&gt; (default &lt;code&gt;false&lt;/code&gt;) &lt;a href="karate-demo/src/test/java/demo/headers/content-type.feature"&gt;(example)&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;httpClientClass&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;See &lt;a href="karate-mock-servlet"&gt;karate-mock-servlet&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;httpClientInstance&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Java Object&lt;/td&gt;
&lt;td&gt;See &lt;a href="karate-mock-servlet"&gt;karate-mock-servlet&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;userDefined&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JSON&lt;/td&gt;
&lt;td&gt;See &lt;a href="karate-mock-servlet"&gt;karate-mock-servlet&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;responseHeaders&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JSON / JS function&lt;/td&gt;
&lt;td&gt;See &lt;a href="karate-netty#configure-responseheaders"&gt;karate-netty&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cors&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;See &lt;a href="karate-netty##configure-cors"&gt;karate-netty&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# pretty print the response payload&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;configure logPrettyResponse = true

&lt;span class="pl-c"&gt;# enable ssl (and no certificate is required)&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;configure ssl = true

&lt;span class="pl-c"&gt;# enable ssl and force the algorithm to TLSv1.2&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;configure ssl = &lt;span class="pl-s"&gt;'TLSv1.2'&lt;/span&gt;

&lt;span class="pl-c"&gt;# time-out if the response is not received within 10 seconds (after the connection is established)&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;configure readTimeout = 10000

&lt;span class="pl-c"&gt;# set the uri of the http proxy server to use&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;configure proxy = &lt;span class="pl-s"&gt;'http://my.proxy.host:8080'&lt;/span&gt;

&lt;span class="pl-c"&gt;# proxy which needs authentication&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;configure proxy = { uri: &lt;span class="pl-s"&gt;'http://my.proxy.host:8080'&lt;/span&gt;, username: &lt;span class="pl-s"&gt;'john'&lt;/span&gt;, password: &lt;span class="pl-s"&gt;'secret'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And if you need to set some of these 'globally' you can easily do so using &lt;a href="#the-karate-object"&gt;the &lt;code&gt;karate&lt;/code&gt; object&lt;/a&gt; in &lt;a href="#configuration"&gt;&lt;code&gt;karate-config.js&lt;/code&gt;&lt;/a&gt; - for e.g. &lt;a href="#karate-configure"&gt;&lt;code&gt;karate.configure('ssl', true)&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-report-verbosity" class="anchor" aria-hidden="true" href="#report-verbosity"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Report Verbosity&lt;/h3&gt;
&lt;p&gt;By default, when the &lt;a href="#parallel-execution"&gt;parallel runner&lt;/a&gt; is used Karate will add logs to the report output so that HTTP requests and responses appear in-line in the HTML reports. There may be cases where you want to suppress this to make the reports "lighter" and easier to read.&lt;/p&gt;
&lt;p&gt;The configure key here is &lt;code&gt;report&lt;/code&gt; and it takes a JSON value. For example:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;configure report = { showLog: true, showAllSteps: false }&lt;/pre&gt;&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;code&gt;report&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;showLog&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;HTTP requests and responses (including headers) will appear in the HTML report, default &lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;showAllSteps&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;If &lt;code&gt;false&lt;/code&gt;, any step that starts with &lt;code&gt;*&lt;/code&gt; instead of &lt;code&gt;Given&lt;/code&gt;, &lt;code&gt;When&lt;/code&gt;, &lt;code&gt;Then&lt;/code&gt; etc. will &lt;em&gt;not&lt;/em&gt; appear in the HTML report. The &lt;a href="#print"&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt; step is an exception. Default &lt;code&gt;true&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;You can 'reset' default settings by using the following short-cut:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# reset to defaults&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;configure report = true&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And this short-cut is also supported which will disable all logs:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;configure report = false&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-system-properties-for-ssl-and-http-proxy" class="anchor" aria-hidden="true" href="#system-properties-for-ssl-and-http-proxy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System Properties for SSL and HTTP proxy&lt;/h3&gt;
&lt;p&gt;For HTTPS / SSL, you can also specify a custom certificate or trust store by &lt;a href="https://docs.oracle.com/javase/8/docs/technotes/guides/security/jsse/JSSERefGuide.html#InstallationAndCustomization" rel="nofollow"&gt;setting Java system properties&lt;/a&gt;. And similarly - for &lt;a href="https://docs.oracle.com/javase/8/docs/technotes/guides/net/proxies.html" rel="nofollow"&gt;specifying the HTTP proxy&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-x509-certificate-authentication" class="anchor" aria-hidden="true" href="#x509-certificate-authentication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;X509 Certificate Authentication&lt;/h3&gt;
&lt;p&gt;Also referred to as "mutual auth" - if your API requires that clients present an X509 certificate for authentication, Karate supports this via JSON as the &lt;code&gt;configure ssl&lt;/code&gt; value.  The following parameters are supported:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Key&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required?&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;keyStore&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;path to file containing public and private keys for your client certificate.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;keyStorePassword&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;password for keyStore file.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;keyStoreType&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;Format of the keyStore file.  Allowed keystore types are as described in the &lt;a href="https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#KeyStore" rel="nofollow"&gt;Java &lt;code&gt;KeyStore&lt;/code&gt; docs&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;trustStore&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;path to file containing the trust chain for your server certificate.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;trustStorePassword&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;password for trustStore file.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;trustStoreType&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;Format of the trustStore file.  Allowed keystore types are as described in the &lt;a href="https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#KeyStore" rel="nofollow"&gt;Java &lt;code&gt;KeyStore&lt;/code&gt; docs&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;trustAll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;if all server certificates should be considered trusted. Default value is &lt;code&gt;false&lt;/code&gt;. If &lt;code&gt;true&lt;/code&gt; will allow self-signed certificates. If &lt;code&gt;false&lt;/code&gt;, will expect the whole chain in the &lt;code&gt;trustStore&lt;/code&gt; or use what is available in the environment.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;algorithm&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;optional&lt;/td&gt;
&lt;td&gt;force the SSL algorithm to one of &lt;a href="http://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#SSLContext" rel="nofollow"&gt;these values&lt;/a&gt;. Default is &lt;code&gt;TLS&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# enable X509 certificate authentication with PKCS12 file 'certstore.pfx' and password 'certpassword'
* configure ssl = { keyStore: 'classpath:certstore.pfx', keyStorePassword: 'certpassword', keyStoreType: 'pkcs12' };
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;# trust all server certificates, in the feature file
* configure ssl = { trustAll: true };
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;# trust all server certificates, global configuration in 'karate-config.js'
karate.configure('ssl', { trustAll: true });
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-payload-assertions" class="anchor" aria-hidden="true" href="#payload-assertions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Payload Assertions&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-prepare-mutate-assert" class="anchor" aria-hidden="true" href="#prepare-mutate-assert"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prepare, Mutate, Assert.&lt;/h2&gt;
&lt;p&gt;Now it should be clear how Karate makes it easy to express JSON or XML. If you &lt;a href="#reading-files"&gt;read from a file&lt;/a&gt;, the advantage is that multiple scripts can re-use the same data.&lt;/p&gt;
&lt;p&gt;Once you have a &lt;a href="#native-data-types"&gt;JSON or XML object&lt;/a&gt;, Karate provides multiple ways to manipulate, extract or transform data. And you can easily assert that the data is as expected by comparing it with another JSON or XML object.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-match" class="anchor" aria-hidden="true" href="#match"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;match&lt;/code&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-payload-assertions--smart-comparison" class="anchor" aria-hidden="true" href="#payload-assertions--smart-comparison"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Payload Assertions / Smart Comparison&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;match&lt;/code&gt; operation is smart because white-space does not matter, and the order of keys (or data elements) does not matter. Karate is even able to &lt;a href="#ignore-or-validate"&gt;ignore fields you choose&lt;/a&gt; - which is very useful when you want to handle server-side dynamically generated fields such as UUID-s, time-stamps, security-tokens and the like.&lt;/p&gt;
&lt;p&gt;The match syntax involves a double-equals sign '==' to represent a comparison (and not an assignment '=').&lt;/p&gt;
&lt;p&gt;Since &lt;code&gt;match&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; go well together, they are both introduced in the examples in the section below.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-set" class="anchor" aria-hidden="true" href="#set"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;set&lt;/code&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-manipulating-data" class="anchor" aria-hidden="true" href="#manipulating-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manipulating Data&lt;/h3&gt;
&lt;p&gt;Game, &lt;code&gt;set&lt;/code&gt; and &lt;code&gt;match&lt;/code&gt; - Karate !&lt;/p&gt;
&lt;p&gt;Setting values on JSON documents is simple using the &lt;code&gt;set&lt;/code&gt; keyword and &lt;a href="https://github.com/jayway/JsonPath#path-examples"&gt;JsonPath expressions&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def myJson = { foo: &lt;span class="pl-s"&gt;'bar'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;set myJson.foo = &lt;span class="pl-s"&gt;'world'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match myJson == { foo: &lt;span class="pl-s"&gt;'world'&lt;/span&gt; }

&lt;span class="pl-c"&gt;# add new keys.  you can use pure JsonPath expressions (notice how this is different from the above)&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;set myJson $.hey = &lt;span class="pl-s"&gt;'ho'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match myJson == { foo: &lt;span class="pl-s"&gt;'world'&lt;/span&gt;, hey: &lt;span class="pl-s"&gt;'ho'&lt;/span&gt; }

&lt;span class="pl-c"&gt;# and even append to json arrays (or create them automatically)&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;set myJson.zee[0] = 5
&lt;span class="pl-k"&gt;* &lt;/span&gt;match myJson == { foo: &lt;span class="pl-s"&gt;'world'&lt;/span&gt;, hey: &lt;span class="pl-s"&gt;'ho'&lt;/span&gt;, zee: [5] }

&lt;span class="pl-c"&gt;# omit the array index to append&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;set myJson.zee[] = 6
&lt;span class="pl-k"&gt;* &lt;/span&gt;match myJson == { foo: &lt;span class="pl-s"&gt;'world'&lt;/span&gt;, hey: &lt;span class="pl-s"&gt;'ho'&lt;/span&gt;, zee: [5, 6] }

&lt;span class="pl-c"&gt;# nested json ? no problem&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;set myJson.cat = { name: &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match myJson == { foo: &lt;span class="pl-s"&gt;'world'&lt;/span&gt;, hey: &lt;span class="pl-s"&gt;'ho'&lt;/span&gt;, zee: [5, 6], cat: { name: &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt; } }

&lt;span class="pl-c"&gt;# and for match - the order of keys does not matter&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match myJson == { cat: { name: &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt; }, hey: &lt;span class="pl-s"&gt;'ho'&lt;/span&gt;, foo: &lt;span class="pl-s"&gt;'world'&lt;/span&gt;, zee: [5, 6] }

&lt;span class="pl-c"&gt;# you can ignore fields marked with '#ignore'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match myJson == { cat: &lt;span class="pl-s"&gt;'#ignore'&lt;/span&gt;, hey: &lt;span class="pl-s"&gt;'ho'&lt;/span&gt;, foo: &lt;span class="pl-s"&gt;'world'&lt;/span&gt;, zee: [5, 6] }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;XML and XPath works just like you'd expect.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def cat = &lt;span class="pl-smi"&gt;&amp;lt;cat&amp;gt;&amp;lt;name&amp;gt;&lt;/span&gt;Billie&lt;span class="pl-smi"&gt;&amp;lt;/name&amp;gt;&amp;lt;/cat&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;set cat /cat/name = &lt;span class="pl-s"&gt;'Jean'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match cat / == &lt;span class="pl-smi"&gt;&amp;lt;cat&amp;gt;&amp;lt;name&amp;gt;&lt;/span&gt;Jean&lt;span class="pl-smi"&gt;&amp;lt;/name&amp;gt;&amp;lt;/cat&amp;gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;# you can even set whole fragments of xml&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def xml = &lt;span class="pl-smi"&gt;&amp;lt;foo&amp;gt;&amp;lt;bar&amp;gt;&lt;/span&gt;baz&lt;span class="pl-smi"&gt;&amp;lt;/bar&amp;gt;&amp;lt;/foo&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;set xml/foo/bar = &lt;span class="pl-smi"&gt;&amp;lt;hello&amp;gt;&lt;/span&gt;world&lt;span class="pl-smi"&gt;&amp;lt;/hello&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match xml == &lt;span class="pl-smi"&gt;&amp;lt;foo&amp;gt;&amp;lt;bar&amp;gt;&amp;lt;hello&amp;gt;&lt;/span&gt;world&lt;span class="pl-smi"&gt;&amp;lt;/hello&amp;gt;&amp;lt;/bar&amp;gt;&amp;lt;/foo&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Refer to the section on &lt;a href="#xpath-functions"&gt;XPath Functions&lt;/a&gt; for examples of advanced XPath usage.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For JSON, you can also use &lt;a href="#eval"&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; instead of &lt;code&gt;set&lt;/code&gt;, useful when the path you are trying to mutate is dynamic.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-match-and-variables" class="anchor" aria-hidden="true" href="#match-and-variables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;match&lt;/code&gt; and variables&lt;/h3&gt;
&lt;p&gt;In case you were wondering, variables (and even expressions) are supported on the right-hand-side. So you can compare 2 JSON (or XML) payloads if you wanted to:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = { hello: &lt;span class="pl-s"&gt;'world'&lt;/span&gt;, baz: &lt;span class="pl-s"&gt;'ban'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;def bar = { baz: &lt;span class="pl-s"&gt;'ban'&lt;/span&gt;, hello: &lt;span class="pl-s"&gt;'world'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == bar&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you are wondering about the finer details of the &lt;code&gt;match&lt;/code&gt; syntax, the left-hand-side has to be either a&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;variable name - e.g. &lt;code&gt;foo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;a 'named' JsonPath or XPath expression - e.g. &lt;code&gt;foo.bar&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;any valid function or method call - e.g. &lt;code&gt;foo.bar()&lt;/code&gt; or &lt;code&gt;foo.bar('hello').baz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;or anything wrapped in parantheses which will be evaluated - e.g. &lt;code&gt;(foo + bar)&lt;/code&gt; or &lt;code&gt;(42)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And the right-hand-side can be any valid &lt;a href="#karate-expressions"&gt;Karate expression&lt;/a&gt;. Refer to the section on &lt;a href="#jsonpath-short-cuts"&gt;JsonPath short-cuts&lt;/a&gt; for a deeper understanding of 'named' JsonPath expressions in Karate.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-match--not-equals" class="anchor" aria-hidden="true" href="#match--not-equals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;match !=&lt;/code&gt; (not equals)&lt;/h3&gt;
&lt;p&gt;The 'not equals' operator &lt;code&gt;!=&lt;/code&gt; works as you would expect:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def test = { foo: &lt;span class="pl-s"&gt;'bar'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match test != { foo: &lt;span class="pl-s"&gt;'baz'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;You typically will &lt;em&gt;never&lt;/em&gt; need to use the &lt;code&gt;!=&lt;/code&gt; (not-equals) operator ! Use it sparingly, and only for string, number or simple payload comparisons.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-set-multiple" class="anchor" aria-hidden="true" href="#set-multiple"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;set&lt;/code&gt; multiple&lt;/h3&gt;
&lt;p&gt;Karate has an elegant way to set multiple keys (via path expressions) in one step. For convenience, non-existent keys (or array elements) will be created automatically. You can find more JSON examples here: &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature"&gt;&lt;code&gt;js-arrays.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def cat = { name: &lt;span class="pl-s"&gt;''&lt;/span&gt; }

&lt;span class="pl-k"&gt;* &lt;/span&gt;set cat
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;path&lt;/span&gt;   | &lt;span class="pl-s1"&gt;value&lt;/span&gt; |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;name&lt;/span&gt;   | '&lt;span class="pl-s1"&gt;Bob&lt;/span&gt;' |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;age&lt;/span&gt;    | &lt;span class="pl-s1"&gt;5&lt;/span&gt;     |&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;match cat == { name: &lt;span class="pl-s"&gt;'Bob'&lt;/span&gt;, age: 5 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;One extra convenience for JSON is that if the variable itself (which was &lt;code&gt;cat&lt;/code&gt; in the above example) does not exist, it will be created automatically. You can even create (or modify existing) JSON arrays by using multiple columns.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;set foo
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;path&lt;/span&gt; | &lt;span class="pl-s1"&gt;0&lt;/span&gt;     | &lt;span class="pl-s1"&gt;1&lt;/span&gt;     |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;bar&lt;/span&gt;  | '&lt;span class="pl-s1"&gt;baz&lt;/span&gt;' | '&lt;span class="pl-s1"&gt;ban&lt;/span&gt;' |&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == [{ bar: &lt;span class="pl-s"&gt;'baz'&lt;/span&gt; }, { bar: &lt;span class="pl-s"&gt;'ban'&lt;/span&gt; }]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have to set a bunch of deeply nested keys, you can move the parent path to the top, next to the &lt;code&gt;set&lt;/code&gt; keyword and save a lot of typing !&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;set foo.bar
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;path&lt;/span&gt;   | &lt;span class="pl-s1"&gt;value&lt;/span&gt; |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;one&lt;/span&gt;    | &lt;span class="pl-s1"&gt;1&lt;/span&gt;     |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;two&lt;/span&gt;[&lt;span class="pl-s1"&gt;0&lt;/span&gt;] | &lt;span class="pl-s1"&gt;2&lt;/span&gt;     |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;two&lt;/span&gt;[&lt;span class="pl-s1"&gt;1&lt;/span&gt;] | &lt;span class="pl-s1"&gt;3&lt;/span&gt;     |&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { bar: { one: 1, two: [2, 3] } }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The same concept applies to XML and you can build complicated payloads from scratch in just a few, extremely readable lines. The &lt;code&gt;value&lt;/code&gt; column can take expressions, &lt;em&gt;even&lt;/em&gt; XML chunks. You can find more examples here: &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/xml/xml.feature"&gt;&lt;code&gt;xml.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;set search /acc:getAccountByPhoneNumber
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;path&lt;/span&gt;                        | &lt;span class="pl-s1"&gt;value&lt;/span&gt; |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;acc&lt;/span&gt;:&lt;span class="pl-s1"&gt;phone&lt;/span&gt;/@&lt;span class="pl-s1"&gt;foo&lt;/span&gt;              | '&lt;span class="pl-s1"&gt;bar&lt;/span&gt;' |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;acc&lt;/span&gt;:&lt;span class="pl-s1"&gt;phone&lt;/span&gt;/&lt;span class="pl-s1"&gt;acc&lt;/span&gt;:&lt;span class="pl-s1"&gt;number&lt;/span&gt;[&lt;span class="pl-s1"&gt;1&lt;/span&gt;]     | &lt;span class="pl-s1"&gt;1234&lt;/span&gt;  |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;acc&lt;/span&gt;:&lt;span class="pl-s1"&gt;phone&lt;/span&gt;/&lt;span class="pl-s1"&gt;acc&lt;/span&gt;:&lt;span class="pl-s1"&gt;number&lt;/span&gt;[&lt;span class="pl-s1"&gt;2&lt;/span&gt;]     | &lt;span class="pl-s1"&gt;5678&lt;/span&gt;  |     &lt;/span&gt;
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;acc&lt;/span&gt;:&lt;span class="pl-s1"&gt;phoneNumberSearchOption&lt;/span&gt; | '&lt;span class="pl-s1"&gt;all&lt;/span&gt;' |&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;match search ==
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;acc:getAccountByPhoneNumber&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;acc:phone foo="bar"&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;          &amp;lt;acc:number&amp;gt;1234&amp;lt;/acc:number&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;          &amp;lt;acc:number&amp;gt;5678&amp;lt;/acc:number&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;/acc:phone&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;acc:phoneNumberSearchOption&amp;gt;all&amp;lt;/acc:phoneNumberSearchOption&amp;gt;        &lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;/acc:getAccountByPhoneNumber&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-remove" class="anchor" aria-hidden="true" href="#remove"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;This is like the opposite of &lt;a href="#set"&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; if you need to remove keys or data elements from JSON or XML instances. You can even remove JSON array elements by index.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def json = { foo: &lt;span class="pl-s"&gt;'world'&lt;/span&gt;, hey: &lt;span class="pl-s"&gt;'ho'&lt;/span&gt;, zee: [1, 2, 3] }
&lt;span class="pl-k"&gt;* &lt;/span&gt;remove json.hey
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == { foo: &lt;span class="pl-s"&gt;'world'&lt;/span&gt;, zee: [1, 2, 3] }
&lt;span class="pl-k"&gt;* &lt;/span&gt;remove json $.zee[1]
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == { foo: &lt;span class="pl-s"&gt;'world'&lt;/span&gt;, zee: [1, 3] }&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;For JSON, you can also use &lt;a href="#eval"&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; instead of &lt;code&gt;remove&lt;/code&gt;, useful when the path you are trying to mutate is dynamic.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;remove&lt;/code&gt; works for XML elements as well:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def xml = &lt;span class="pl-smi"&gt;&amp;lt;foo&amp;gt;&amp;lt;bar&amp;gt;&amp;lt;hello&amp;gt;&lt;/span&gt;world&lt;span class="pl-smi"&gt;&amp;lt;/hello&amp;gt;&amp;lt;/bar&amp;gt;&amp;lt;/foo&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;remove xml/foo/bar/hello
&lt;span class="pl-k"&gt;* &lt;/span&gt;match xml == &lt;span class="pl-smi"&gt;&amp;lt;foo&amp;gt;&amp;lt;bar/&amp;gt;&amp;lt;/foo&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;remove xml /foo/bar
&lt;span class="pl-k"&gt;* &lt;/span&gt;match xml == &lt;span class="pl-smi"&gt;&amp;lt;foo/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also take a look at how a special case of &lt;a href="#embedded-expressions"&gt;embedded-expressions&lt;/a&gt; can remove key-value pairs from a JSON (or XML) payload: &lt;a href="#remove-if-null"&gt;Remove if Null&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-fuzzy-matching" class="anchor" aria-hidden="true" href="#fuzzy-matching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fuzzy Matching&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-ignore-or-validate" class="anchor" aria-hidden="true" href="#ignore-or-validate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ignore or Validate&lt;/h3&gt;
&lt;p&gt;When expressing expected results (in JSON or &lt;a href="#match-and-xml"&gt;XML&lt;/a&gt;) you can mark some fields to be ignored when the match (comparison) is performed.  You can even use a regular-expression so that instead of checking for equality, Karate will just validate that the actual value conforms to the expected pattern.&lt;/p&gt;
&lt;p&gt;This means that even when you have dynamic server-side generated values such as UUID-s and time-stamps appearing in the response, you can still assert that the full-payload matched in one step.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def cat = { name: &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt;, type: &lt;span class="pl-s"&gt;'LOL'&lt;/span&gt;, id: &lt;span class="pl-s"&gt;'a9f7a56b-8d5c-455c-9d13-808461d17b91'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match cat == { name: &lt;span class="pl-s"&gt;'#ignore'&lt;/span&gt;, type: &lt;span class="pl-s"&gt;'#regex [A-Z]{3}'&lt;/span&gt;, id: &lt;span class="pl-s"&gt;'#uuid'&lt;/span&gt; }
&lt;span class="pl-c"&gt;# this will fail&lt;/span&gt;
&lt;span class="pl-c"&gt;# * match cat == { name: '#ignore', type: '#regex .{2}', id: '#uuid' }	&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that regex escaping has to be done with a &lt;em&gt;double&lt;/em&gt; back-slash - for e.g: &lt;code&gt;'#regex a\\.dot'&lt;/code&gt; will match &lt;code&gt;'a.dot'&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The supported markers are the following:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Marker&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#ignore&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Skip comparison for this field even if the data element or JSON key is present&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#null&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Expects actual value to be &lt;code&gt;null&lt;/code&gt;, and the data element or JSON key &lt;em&gt;must&lt;/em&gt; be present&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#notnull&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Expects actual value to be not-&lt;code&gt;null&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#present&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Actual value can be any type or &lt;em&gt;even&lt;/em&gt; &lt;code&gt;null&lt;/code&gt;, but the key &lt;em&gt;must&lt;/em&gt; be present (only for JSON / XML, see below)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#notpresent&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Expects the key to be &lt;strong&gt;not&lt;/strong&gt; present at all (only for JSON / XML, see below)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#array&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Expects actual value to be a JSON array&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#object&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Expects actual value to be a JSON object&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#boolean&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Expects actual value to be a boolean &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#number&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Expects actual value to be a number&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Expects actual value to be a string&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#uuid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Expects actual (string) value to conform to the UUID format&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#regex STR&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Expects actual (string) value to match the regular-expression 'STR' (see examples above)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#? EXPR&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Expects the JavaScript expression 'EXPR' to evaluate to true, see &lt;a href="#self-validation-expressions"&gt;self-validation expressions&lt;/a&gt; below&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#[NUM] EXPR&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Advanced array validation, see &lt;a href="#schema-validation"&gt;schema validation&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#(EXPR)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;For completeness, &lt;a href="#embedded-expressions"&gt;embedded expressions&lt;/a&gt; belong in this list as well&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Note that &lt;code&gt;#present&lt;/code&gt; and &lt;code&gt;#notpresent&lt;/code&gt; only make sense when you are matching within a JSON or XML context or using a JsonPath or XPath on the left-hand-side.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def json = { foo: &lt;span class="pl-s"&gt;'bar'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == { foo: &lt;span class="pl-s"&gt;'#present'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json.nope == &lt;span class="pl-s"&gt;'#notpresent'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The rest can also be used even in 'primitive' data matches like so:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == &lt;span class="pl-s"&gt;'#string'&lt;/span&gt;
&lt;span class="pl-c"&gt;# convenient (and recommended) way to check for array length&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match bar == &lt;span class="pl-s"&gt;'#[2]'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-optional-fields" class="anchor" aria-hidden="true" href="#optional-fields"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Optional Fields&lt;/h3&gt;
&lt;p&gt;If two cross-hatch &lt;code&gt;#&lt;/code&gt; symbols are used as the prefix (for example: &lt;code&gt;##number&lt;/code&gt;), it means that the key is optional or that the value can be null.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = { bar: &lt;span class="pl-s"&gt;'baz'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { bar: &lt;span class="pl-s"&gt;'#string'&lt;/span&gt;, ban: &lt;span class="pl-s"&gt;'##string'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-remove-if-null" class="anchor" aria-hidden="true" href="#remove-if-null"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Remove If Null&lt;/h3&gt;
&lt;p&gt;A very useful behavior when you combine the optional marker with an &lt;a href="#embedded-expressions"&gt;embedded expression&lt;/a&gt; is as follows: if the embedded expression evaluates to &lt;code&gt;null&lt;/code&gt; - the JSON key (or XML element or attribute) will be deleted from the payload (the equivalent of &lt;a href="#remove"&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def data = { a: &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;, b: null, c: null }
&lt;span class="pl-k"&gt;* &lt;/span&gt;def json = { foo: &lt;span class="pl-s"&gt;'#(data.a)'&lt;/span&gt;, bar: &lt;span class="pl-s"&gt;'#(data.b)'&lt;/span&gt;, baz: &lt;span class="pl-s"&gt;'##(data.c)'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == { foo: &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;, bar: null }&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-null-and-notpresent" class="anchor" aria-hidden="true" href="#null-and-notpresent"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;#null&lt;/code&gt; and &lt;code&gt;#notpresent&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Karate's &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; is strict, and the case where a JSON key exists but has a &lt;code&gt;null&lt;/code&gt; value (&lt;code&gt;#null&lt;/code&gt;) is considered different from the case where the key is not present at all (&lt;code&gt;#notpresent&lt;/code&gt;) in the payload.&lt;/p&gt;
&lt;p&gt;But note that &lt;code&gt;##null&lt;/code&gt; can be used to represent a convention that many teams adopt, which is that keys with &lt;code&gt;null&lt;/code&gt; values are stripped from the JSON payload. In other words, &lt;code&gt;{ a: 1, b: null }&lt;/code&gt; is considered 'equal' to &lt;code&gt;{ a: 1 }&lt;/code&gt; and &lt;code&gt;{ a: 1, b: '##null' }&lt;/code&gt; will &lt;code&gt;match&lt;/code&gt; both cases.&lt;/p&gt;
&lt;p&gt;These examples (all exact matches) can make things more clear:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = { }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'##null'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'##notnull'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'#notpresent'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'#ignore'&lt;/span&gt; }

&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = { a: null }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'#null'&lt;/span&gt; }    
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'##null'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'#present'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'#ignore'&lt;/span&gt; }

&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = { a: 1 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'#notnull'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'##notnull'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'#present'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'#ignore'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that you can alternatively use JsonPath on the left-hand-side:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = { a: 1 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo.a == &lt;span class="pl-s"&gt;'#present'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo.nope == &lt;span class="pl-s"&gt;'#notpresent'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But of course it is preferable to match whole objects in one step as far as possible.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-self-validation-expressions" class="anchor" aria-hidden="true" href="#self-validation-expressions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;'Self' Validation Expressions&lt;/h3&gt;
&lt;p&gt;The special 'predicate' marker &lt;code&gt;#? EXPR&lt;/code&gt; in the table above is an interesting one.  It is best explained via examples. Any valid JavaScript expression that evaluates to a &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Truthy" rel="nofollow"&gt;Truthy&lt;/a&gt; or &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Falsy" rel="nofollow"&gt;Falsy&lt;/a&gt; value is expected after the &lt;code&gt;#?&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Observe how the value of the field being validated (or 'self') is injected into the 'underscore' expression variable: '&lt;code&gt;_&lt;/code&gt;'&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def date = { month: 3 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match date == { month: &lt;span class="pl-s"&gt;'#? _ &amp;gt; 0 &amp;amp;&amp;amp; _ &amp;lt; 13'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What is even more interesting is that expressions can refer to variables:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def date = { month: 3 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;def min = 1
&lt;span class="pl-k"&gt;* &lt;/span&gt;def max = 12
&lt;span class="pl-k"&gt;* &lt;/span&gt;match date == { month: &lt;span class="pl-s"&gt;'#? _ &amp;gt;= min &amp;amp;&amp;amp; _ &amp;lt;= max'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And functions work as well ! You can imagine how you could evolve a nice set of utilities that validate all your domain objects.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def date = { month: 3 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;def isValidMonth = function(m) { return m &amp;gt;= 0 &amp;amp;&amp;amp; m &lt;span class="pl-smi"&gt;&amp;lt;= 12 }&lt;/span&gt;
&lt;span class="pl-smi"&gt;* match date == { month: '#? isValidMonth(_)' }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Especially since strings can be easily coerced to numbers (and vice-versa) in Javascript, you can combine built-in validators with the self-validation 'predicate' form like this: &lt;code&gt;'#number? _ &amp;gt; 0'&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# given this invalid input (string instead of number)&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def date = { month: &lt;span class="pl-s"&gt;'3'&lt;/span&gt; }
&lt;span class="pl-c"&gt;# this will pass&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match date == { month: &lt;span class="pl-s"&gt;'#? _ &amp;gt; 0'&lt;/span&gt; }
&lt;span class="pl-c"&gt;# but this 'combined form' will fail, which is what we want&lt;/span&gt;
&lt;span class="pl-c"&gt;# * match date == { month: '#number? _ &amp;gt; 0' }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-referring-to-the-json-root" class="anchor" aria-hidden="true" href="#referring-to-the-json-root"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Referring to the JSON root&lt;/h4&gt;
&lt;p&gt;You can actually refer to any JsonPath on the document via &lt;code&gt;$&lt;/code&gt; and perform cross-field or conditional validations ! This example uses &lt;a href="#match-contains"&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt; and the &lt;a href="#self-validation-expressions"&gt;&lt;code&gt;#?&lt;/code&gt;&lt;/a&gt; 'predicate' syntax, and situations where this comes in useful will be apparent when we discuss &lt;a href="#match-each"&gt;&lt;code&gt;match each&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;def temperature = { celsius: 100, fahrenheit: 212 }
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match temperature == { celsius: &lt;span class="pl-s"&gt;'#number'&lt;/span&gt;, fahrenheit: &lt;span class="pl-s"&gt;'#? _ == $.celsius * 1.8 + 32'&lt;/span&gt; }
&lt;span class="pl-c"&gt;# when validation logic is an 'equality' check, an embedded expression works better&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match temperature contains { fahrenheit: &lt;span class="pl-s"&gt;'#($.celsius * 1.8 + 32)'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-match-text-or-binary" class="anchor" aria-hidden="true" href="#match-text-or-binary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;match&lt;/code&gt; text or binary&lt;/h3&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# when the response is plain-text&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match response == &lt;span class="pl-s"&gt;'Health Check OK'&lt;/span&gt;
&lt;span class="pl-k"&gt;And &lt;/span&gt;match response != &lt;span class="pl-s"&gt;'Error'&lt;/span&gt;

&lt;span class="pl-c"&gt;# when the response is binary (byte-array)&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match responseBytes == read(&lt;span class="pl-s"&gt;'test.pdf'&lt;/span&gt;)

&lt;span class="pl-c"&gt;# incidentally, match and assert behave exactly the same way for strings&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def hello = &lt;span class="pl-s"&gt;'Hello World!'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match hello == &lt;span class="pl-s"&gt;'Hello World!'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;assert hello == &lt;span class="pl-s"&gt;'Hello World!'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Checking if a string is contained within another string is a very common need and &lt;a href="#match-contains"&gt;&lt;code&gt;match&lt;/code&gt; (name) &lt;code&gt;contains&lt;/code&gt;&lt;/a&gt; works just like you'd expect:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def hello = &lt;span class="pl-s"&gt;'Hello World!'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match hello contains &lt;span class="pl-s"&gt;'World'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match hello !contains &lt;span class="pl-s"&gt;'blah'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For case-insensitive string comparisons, see how to create &lt;a href="#commonly-needed-utilities"&gt;custom utilities&lt;/a&gt; or &lt;a href="#karate-lowercase"&gt;&lt;code&gt;karate.lowerCase()&lt;/code&gt;&lt;/a&gt;. And for dealing with binary content - see &lt;a href="#type-bytes"&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-match-header" class="anchor" aria-hidden="true" href="#match-header"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;match header&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Since asserting against header values in the response is a common task - &lt;code&gt;match header&lt;/code&gt; has a special meaning.  It short-cuts to the pre-defined variable &lt;a href="#responseheaders"&gt;&lt;code&gt;responseHeaders&lt;/code&gt;&lt;/a&gt; and reduces some complexity - because strictly, HTTP headers are a 'multi-valued map' or a 'map of lists' - the Java-speak equivalent being &lt;code&gt;Map&amp;lt;String, List&amp;lt;String&amp;gt;&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Since &lt;a href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2" rel="nofollow"&gt;as per the HTTP spec&lt;/a&gt;, headers are &lt;em&gt;case-insensitive&lt;/em&gt; you may want to switch on this &lt;a href="#configure"&gt;setting&lt;/a&gt;: &lt;code&gt;* configure lowerCaseResponseHeaders = true&lt;/code&gt; - if you need to perform a lot of assertions on the &lt;a href="#responseheaders"&gt;&lt;code&gt;responseHeaders&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# so after a http request&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match header Content-Type == &lt;span class="pl-s"&gt;'application/json'&lt;/span&gt;
&lt;span class="pl-c"&gt;# 'contains' works as well&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match header Content-Type contains &lt;span class="pl-s"&gt;'application'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note the extra convenience where you don't have to enclose the LHS key in quotes.&lt;/p&gt;
&lt;p&gt;You can always directly access the variable called &lt;a href="#responseheaders"&gt;&lt;code&gt;responseHeaders&lt;/code&gt;&lt;/a&gt; if you wanted to do more checks, but you typically won't need to.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-match-and-xml" class="anchor" aria-hidden="true" href="#match-and-xml"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;match&lt;/code&gt; and XML&lt;/h3&gt;
&lt;p&gt;All the &lt;a href="#fuzzy-matching"&gt;fuzzy matching&lt;/a&gt; markers will work in XML as well. Here are some examples:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;  &lt;span class="pl-k"&gt;* &lt;/span&gt;def xml = &lt;span class="pl-smi"&gt;&amp;lt;root&amp;gt;&amp;lt;hello&amp;gt;&lt;/span&gt;world&lt;span class="pl-smi"&gt;&amp;lt;/hello&amp;gt;&amp;lt;foo&amp;gt;&lt;/span&gt;bar&lt;span class="pl-smi"&gt;&amp;lt;/foo&amp;gt;&amp;lt;/root&amp;gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;* &lt;/span&gt;match xml == &lt;span class="pl-smi"&gt;&amp;lt;root&amp;gt;&amp;lt;hello&amp;gt;&lt;/span&gt;world&lt;span class="pl-smi"&gt;&amp;lt;/hello&amp;gt;&amp;lt;foo&amp;gt;&lt;/span&gt;&lt;span class="pl-c"&gt;#ignore&amp;lt;/foo&amp;gt;&amp;lt;/root&amp;gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;* &lt;/span&gt;def xml = &lt;span class="pl-smi"&gt;&amp;lt;root&amp;gt;&amp;lt;hello foo="bar"&amp;gt;&lt;/span&gt;world&lt;span class="pl-smi"&gt;&amp;lt;/hello&amp;gt;&amp;lt;/root&amp;gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;* &lt;/span&gt;match xml == &lt;span class="pl-smi"&gt;&amp;lt;root&amp;gt;&amp;lt;hello foo="#ignore"&amp;gt;&lt;/span&gt;world&lt;span class="pl-smi"&gt;&amp;lt;/hello&amp;gt;&amp;lt;/root&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Refer to this file for a comprehensive set of XML examples: &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/xml/xml.feature"&gt;&lt;code&gt;xml.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-matching-sub-sets-of-json-keys-and-arrays" class="anchor" aria-hidden="true" href="#matching-sub-sets-of-json-keys-and-arrays"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Matching Sub-Sets of JSON Keys and Arrays&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-match-contains" class="anchor" aria-hidden="true" href="#match-contains"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;match contains&lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-json-keys" class="anchor" aria-hidden="true" href="#json-keys"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON Keys&lt;/h4&gt;
&lt;p&gt;In some cases where the response JSON is wildly dynamic, you may want to only check for the existence of some keys. And &lt;code&gt;match&lt;/code&gt; (name) &lt;code&gt;contains&lt;/code&gt; is how you can do so:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = { bar: 1, baz: &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;, ban: &lt;span class="pl-s"&gt;'world'&lt;/span&gt; }

&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo contains { bar: 1 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo contains { baz: &lt;span class="pl-s"&gt;'hello'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo contains { bar:1, baz: &lt;span class="pl-s"&gt;'hello'&lt;/span&gt; }
&lt;span class="pl-c"&gt;# this will fail&lt;/span&gt;
&lt;span class="pl-c"&gt;# * match foo == { bar:1, baz: 'hello' }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also note that &lt;a href="#match-contains-any"&gt;&lt;code&gt;match contains any&lt;/code&gt;&lt;/a&gt; is possible for JSON objects as well as JSON arrays.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-not-contains" class="anchor" aria-hidden="true" href="#not-contains"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;(not) &lt;code&gt;!contains&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;It is sometimes useful to be able to check if a key-value-pair does &lt;strong&gt;not&lt;/strong&gt; exist. This is possible by prefixing &lt;code&gt;contains&lt;/code&gt; with a &lt;code&gt;!&lt;/code&gt; (with no space in between).&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = { bar: 1, baz: &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;, ban: &lt;span class="pl-s"&gt;'world'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo !contains { bar: 2 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo !contains { huh: &lt;span class="pl-s"&gt;'#notnull'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's a reminder that the &lt;a href="#null-and-notpresent"&gt;&lt;code&gt;#notpresent&lt;/code&gt;&lt;/a&gt; marker can be mixed into an equality &lt;code&gt;match&lt;/code&gt; (&lt;code&gt;==&lt;/code&gt;) to assert that some keys exist and at the same time ensure that some keys do &lt;strong&gt;not&lt;/strong&gt; exist:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = { a: 1 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'#number'&lt;/span&gt;, b: &lt;span class="pl-s"&gt;'#notpresent'&lt;/span&gt; }

&lt;span class="pl-c"&gt;# if b can be present (optional) but should always be null&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == { a: &lt;span class="pl-s"&gt;'#number'&lt;/span&gt;, b: &lt;span class="pl-s"&gt;'##null'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;!&lt;/code&gt; (not) operator is especially useful for &lt;code&gt;contains&lt;/code&gt; and JSON arrays.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = [1, 2, 3]
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo !contains 4
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo !contains [5, 6]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-json-arrays" class="anchor" aria-hidden="true" href="#json-arrays"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON Arrays&lt;/h4&gt;
&lt;p&gt;This is a good time to deep-dive into JsonPath, which is perfect for slicing and dicing JSON into manageable chunks. It is worth taking a few minutes to go through the documentation and examples here: &lt;a href="https://github.com/jayway/JsonPath#path-examples"&gt;JsonPath Examples&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here are some example assertions performed while scraping a list of child elements out of the JSON below. Observe how you can &lt;code&gt;match&lt;/code&gt; the result of a JsonPath expression with your expected data.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;def cat = 
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  {&lt;/span&gt;
&lt;span class="pl-s"&gt;    name: 'Billie',&lt;/span&gt;
&lt;span class="pl-s"&gt;    kittens: [&lt;/span&gt;
&lt;span class="pl-s"&gt;      { id: 23, name: 'Bob' },&lt;/span&gt;
&lt;span class="pl-s"&gt;      { id: 42, name: 'Wild' }&lt;/span&gt;
&lt;span class="pl-s"&gt;    ]&lt;/span&gt;
&lt;span class="pl-s"&gt;  }&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;
&lt;span class="pl-c"&gt;# normal 'equality' match. note the wildcard '*' in the JsonPath (returns an array)&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match cat.kittens[*].id == [23, 42]

&lt;span class="pl-c"&gt;# when inspecting a json array, 'contains' just checks if the expected items exist&lt;/span&gt;
&lt;span class="pl-c"&gt;# and the size and order of the actual array does not matter&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match cat.kittens[*].id contains 23
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match cat.kittens[*].id contains [42]
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match cat.kittens[*].id contains [23, 42]
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match cat.kittens[*].id contains [42, 23]

&lt;span class="pl-c"&gt;# the .. operator is great because it matches nodes at any depth in the JSON "tree"&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match cat..name == [&lt;span class="pl-s"&gt;'Billie'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Bob'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Wild'&lt;/span&gt;]

&lt;span class="pl-c"&gt;# and yes, you can assert against nested objects within JSON arrays !&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match cat.kittens contains [{ id: 42, name: &lt;span class="pl-s"&gt;'Wild'&lt;/span&gt; }, { id: 23, name: &lt;span class="pl-s"&gt;'Bob'&lt;/span&gt; }]

&lt;span class="pl-c"&gt;# ... and even ignore fields at the same time !&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match cat.kittens contains { id: 42, name: &lt;span class="pl-s"&gt;'#string'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is worth mentioning that to do the equivalent of the last line in Java, you would typically have to traverse 2 Java Objects, one of which is within a list, and you would have to check for nulls as well.&lt;/p&gt;
&lt;p&gt;When you use Karate, all your data assertions can be done in pure JSON and without needing a thick forest of companion Java objects. And when you &lt;a href="#read"&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; your JSON objects from (re-usable) files, even complex response payload assertions can be accomplished in just a single line of Karate-script.&lt;/p&gt;
&lt;p&gt;Refer to this &lt;a href="https://twitter.com/KarateDSL/status/873035687817117696" rel="nofollow"&gt;case study&lt;/a&gt; for how dramatic the reduction of lines of code can be.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-match-contains-only" class="anchor" aria-hidden="true" href="#match-contains-only"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;match contains only&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;For those cases where you need to assert that &lt;strong&gt;all&lt;/strong&gt; array elements are present but in &lt;strong&gt;any order&lt;/strong&gt;
you can do this:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def data = { foo: [1, 2, 3] }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match data.foo contains 1
&lt;span class="pl-k"&gt;* &lt;/span&gt;match data.foo contains [2]
&lt;span class="pl-k"&gt;* &lt;/span&gt;match data.foo contains [3, 2]
&lt;span class="pl-k"&gt;* &lt;/span&gt;match data.foo contains only [3, 2, 1]
&lt;span class="pl-k"&gt;* &lt;/span&gt;match data.foo contains only [2, 3, 1]
&lt;span class="pl-c"&gt;# this will fail&lt;/span&gt;
&lt;span class="pl-c"&gt;# * match data.foo contains only [2, 3]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-match-contains-any" class="anchor" aria-hidden="true" href="#match-contains-any"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;match contains any&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;To assert that &lt;strong&gt;any&lt;/strong&gt; of the given array elements are present.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def data = { foo: [1, 2, 3] }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match data.foo contains any [9, 2, 8]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And this happens to work as expected for JSON object keys as well:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def data = { a: 1, b: &lt;span class="pl-s"&gt;'x'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match data contains any { b: &lt;span class="pl-s"&gt;'x'&lt;/span&gt;, c: true }&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-validate-every-element-in-a-json-array" class="anchor" aria-hidden="true" href="#validate-every-element-in-a-json-array"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Validate every element in a JSON array&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-match-each" class="anchor" aria-hidden="true" href="#match-each"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;match each&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;match&lt;/code&gt; keyword can be made to iterate over all elements in a JSON array using the &lt;code&gt;each&lt;/code&gt; modifier. Here's how it works:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def data = { foo: [{ bar: 1, baz: &lt;span class="pl-s"&gt;'a'&lt;/span&gt; }, { bar: 2, baz: &lt;span class="pl-s"&gt;'b'&lt;/span&gt; }, { bar: 3, baz: &lt;span class="pl-s"&gt;'c'&lt;/span&gt; }]}

&lt;span class="pl-k"&gt;* &lt;/span&gt;match each data.foo == { bar: &lt;span class="pl-s"&gt;'#number'&lt;/span&gt;, baz: &lt;span class="pl-s"&gt;'#string'&lt;/span&gt; }

&lt;span class="pl-c"&gt;# and you can use 'contains' the way you'd expect&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match each data.foo contains { bar: &lt;span class="pl-s"&gt;'#number'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match each data.foo contains { bar: &lt;span class="pl-s"&gt;'#? _ != 4'&lt;/span&gt; }

&lt;span class="pl-c"&gt;# some more examples of validation macros&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match each data.foo contains { baz: &lt;span class="pl-s"&gt;"#? _ != 'z'"&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;def isAbc = function(x) { return x == &lt;span class="pl-s"&gt;'a'&lt;/span&gt; || x == &lt;span class="pl-s"&gt;'b'&lt;/span&gt; || x == &lt;span class="pl-s"&gt;'c'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match each data.foo contains { baz: &lt;span class="pl-s"&gt;'#? isAbc(_)'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here is a contrived example that uses &lt;code&gt;match each&lt;/code&gt;, &lt;a href="#match-contains"&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt; and the &lt;a href="#self-validation-expressions"&gt;&lt;code&gt;#?&lt;/code&gt;&lt;/a&gt; 'predicate' marker to validate that the value of &lt;code&gt;totalPrice&lt;/code&gt; is always equal to the &lt;code&gt;roomPrice&lt;/code&gt; of the first item in the &lt;code&gt;roomInformation&lt;/code&gt; array.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Given &lt;/span&gt;def json =
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  {&lt;/span&gt;
&lt;span class="pl-s"&gt;    "hotels": [&lt;/span&gt;
&lt;span class="pl-s"&gt;      { "roomInformation": [{ "roomPrice": 618.4 }], "totalPrice": 618.4  },&lt;/span&gt;
&lt;span class="pl-s"&gt;      { "roomInformation": [{ "roomPrice": 679.79}], "totalPrice": 679.79 }&lt;/span&gt;
&lt;span class="pl-s"&gt;    ]&lt;/span&gt;
&lt;span class="pl-s"&gt;  }&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match each json.hotels contains { totalPrice: &lt;span class="pl-s"&gt;'#? _ == _$.roomInformation[0].roomPrice'&lt;/span&gt; }
&lt;span class="pl-c"&gt;# when validation logic is an 'equality' check, an embedded expression works better&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match each json.hotels contains { totalPrice: &lt;span class="pl-s"&gt;'#(_$.roomInformation[0].roomPrice)'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-referring-to-self" class="anchor" aria-hidden="true" href="#referring-to-self"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Referring to self&lt;/h4&gt;
&lt;p&gt;While &lt;a href="#referring-to-the-json-root"&gt;&lt;code&gt;$&lt;/code&gt;&lt;/a&gt; always refers to the &lt;a href="#referring-to-the-json-root"&gt;JSON 'root'&lt;/a&gt;, note the use of &lt;code&gt;_$&lt;/code&gt; above to represent the 'current' node of a &lt;code&gt;match each&lt;/code&gt; iteration. Here is a recap of symbols that can be used in JSON &lt;a href="#embedded-expressions"&gt;embedded expressions&lt;/a&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Symbol&lt;/th&gt;
&lt;th&gt;Evaluates To&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;$&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The &lt;a href="#referring-to-the-json-root"&gt;'root'&lt;/a&gt; of the JSON document in scope&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;_&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The value of &lt;a href="#self-validation-expressions"&gt;'self'&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;_$&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The 'parent' of 'self' or 'current' item in the list, relevant when using &lt;a href="#match-each"&gt;&lt;code&gt;match each&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;There is a shortcut for &lt;code&gt;match each&lt;/code&gt; explained in the next section that can be quite useful, especially for 'in-line' schema-like validations.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-schema-validation" class="anchor" aria-hidden="true" href="#schema-validation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Schema Validation&lt;/h2&gt;
&lt;p&gt;Karate provides a far more simpler and more powerful way than &lt;a href="http://json-schema.org" rel="nofollow"&gt;JSON-schema&lt;/a&gt; to validate the structure of a given payload. You can even mix domain and conditional validations and perform all assertions in a single step.&lt;/p&gt;
&lt;p&gt;But first, a special short-cut for array validation needs to be introduced:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = [&lt;span class="pl-s"&gt;'bar'&lt;/span&gt;, &lt;span class="pl-s"&gt;'baz'&lt;/span&gt;]

&lt;span class="pl-c"&gt;# should be an array&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == &lt;span class="pl-s"&gt;'#[]'&lt;/span&gt;

&lt;span class="pl-c"&gt;# should be an array of size 2&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == &lt;span class="pl-s"&gt;'#[2]'&lt;/span&gt;

&lt;span class="pl-c"&gt;# should be an array of strings with size 2&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == &lt;span class="pl-s"&gt;'#[2] #string'&lt;/span&gt;

&lt;span class="pl-c"&gt;# each array element should have a 'length' property with value 3&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == &lt;span class="pl-s"&gt;'#[]? _.length == 3'&lt;/span&gt;

&lt;span class="pl-c"&gt;# should be an array of strings each of length 3&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == &lt;span class="pl-s"&gt;'#[] #string? _.length == 3'&lt;/span&gt;

&lt;span class="pl-c"&gt;# should be null or an array of strings&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == &lt;span class="pl-s"&gt;'##[] #string'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This 'in-line' short-cut for validating JSON arrays is similar to how &lt;a href="#match-each"&gt;&lt;code&gt;match each&lt;/code&gt;&lt;/a&gt; works. So now, complex payloads (that include arrays) can easily be validated in one step by combining &lt;a href="#ignore-or-validate"&gt;validation markers&lt;/a&gt; like so:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def oddSchema = { price: &lt;span class="pl-s"&gt;'#string'&lt;/span&gt;, status: &lt;span class="pl-s"&gt;'#? _ &amp;lt; 3'&lt;/span&gt;, ck: &lt;span class="pl-s"&gt;'##number'&lt;/span&gt;, name: &lt;span class="pl-s"&gt;'#regex[0-9X]'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;def isValidTime = read(&lt;span class="pl-s"&gt;'time-validator.js'&lt;/span&gt;)
&lt;span class="pl-k"&gt;When &lt;/span&gt;method get
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match response ==
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  { &lt;/span&gt;
&lt;span class="pl-s"&gt;    id: '#regex[0-9]+',&lt;/span&gt;
&lt;span class="pl-s"&gt;    count: '#number',&lt;/span&gt;
&lt;span class="pl-s"&gt;    odd: '#(oddSchema)',&lt;/span&gt;
&lt;span class="pl-s"&gt;    data: { &lt;/span&gt;
&lt;span class="pl-s"&gt;      countryId: '#number', &lt;/span&gt;
&lt;span class="pl-s"&gt;      countryName: '#string', &lt;/span&gt;
&lt;span class="pl-s"&gt;      leagueName: '##string', &lt;/span&gt;
&lt;span class="pl-s"&gt;      status: '#number? _ &amp;gt;= 0', &lt;/span&gt;
&lt;span class="pl-s"&gt;      sportName: '#string',&lt;/span&gt;
&lt;span class="pl-s"&gt;      time: '#? isValidTime(_)'&lt;/span&gt;
&lt;span class="pl-s"&gt;    },&lt;/span&gt;
&lt;span class="pl-s"&gt;    odds: '#[] oddSchema'  &lt;/span&gt;
&lt;span class="pl-s"&gt;  }&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Especially note the re-use of the &lt;code&gt;oddSchema&lt;/code&gt; both as an &lt;a href="#embedded-expressions"&gt;embedded-expression&lt;/a&gt; and as an array validation (on the last line).&lt;/p&gt;
&lt;p&gt;And you can perform conditional / &lt;a href="#referring-to-the-json-root"&gt;cross-field validations&lt;/a&gt; and even business-logic validations at the same time.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# optional (can be null) and if present should be an array of size greater than zero&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match $.odds == &lt;span class="pl-s"&gt;'##[_ &amp;gt; 0]'&lt;/span&gt;

&lt;span class="pl-c"&gt;# should be an array of size equal to $.count&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match $.odds == &lt;span class="pl-s"&gt;'#[$.count]'&lt;/span&gt;

&lt;span class="pl-c"&gt;# use a predicate function to validate each array element&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def isValidOdd = function(o){ return o.name.length == 1 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match $.odds == &lt;span class="pl-s"&gt;'#[]? isValidOdd(_)'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Refer to this for the complete example: &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/schema-like.feature"&gt;&lt;code&gt;schema-like.feature&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And there is another example in the &lt;a href="karate-demo"&gt;karate-demos&lt;/a&gt;: &lt;a href="karate-demo/src/test/java/demo/schema/schema.feature"&gt;&lt;code&gt;schema.feature&lt;/code&gt;&lt;/a&gt; where you can compare Karate's approach with an actual JSON-schema example. You can also find a nice visual comparison and explanation &lt;a href="https://twitter.com/KarateDSL/status/878984854012022784" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-contains-short-cuts" class="anchor" aria-hidden="true" href="#contains-short-cuts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;contains&lt;/code&gt; short-cuts&lt;/h3&gt;
&lt;p&gt;Especially when payloads are complex (or highly dynamic), it may be more practical to use &lt;a href="#match-contains"&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt; semantics. Karate has the following short-cut symbols designed to be mixed into &lt;a href="#embedded-expressions"&gt;&lt;code&gt;embedded expressions&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Symbol&lt;/th&gt;
&lt;th&gt;Means&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;^&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#match-contains"&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;^^&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#match-contains-only"&gt;&lt;code&gt;contains only&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;^*&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#match-contains-any"&gt;&lt;code&gt;contains any&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;!^&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#not-contains"&gt;&lt;code&gt;not contains&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Here'a table of the alternative 'in-line' forms compared with the 'standard' form. Note that &lt;em&gt;all&lt;/em&gt; the short-cut forms on the right-side of the table resolve to 'equality' (&lt;code&gt;==&lt;/code&gt;) matches, which enables them to be 'in-lined' into a &lt;em&gt;full&lt;/em&gt; (single-step) payload &lt;code&gt;match&lt;/code&gt;, using &lt;a href="#embedded-expressions"&gt;embedded expressions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/ptrthomas/2a1e30bcb4d782279019b3d5c10b3ed1"&gt;&lt;img src="karate-demo/src/test/resources/karate-json-assertions.jpg" height="690px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A very useful capability is to be able to check that an array &lt;code&gt;contains&lt;/code&gt; an object that &lt;code&gt;contains&lt;/code&gt; the provided &lt;em&gt;sub-set&lt;/em&gt; of keys instead of having to specify the &lt;em&gt;complete&lt;/em&gt; JSON - which can get really cumbersome for large objects. This turns out to be very useful in practice, and this particular &lt;code&gt;match&lt;/code&gt; &lt;em&gt;jsonArray&lt;/em&gt; &lt;code&gt;contains '#(^&lt;/code&gt;&lt;em&gt;partialObject&lt;/em&gt;&lt;code&gt;)'&lt;/code&gt; form has no 'in-line' equivalent (see the third-from-last row above).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The last row in the table is a little different from the rest, and this short-cut form is the recommended way to validate the length of a JSON array. As a rule of thumb, prefer &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; over &lt;a href="#assert"&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt;, because &lt;code&gt;match&lt;/code&gt; failure messages are more detailed and descriptive.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In real-life tests, these are very useful when the order of items in arrays returned from the server are not guaranteed. You can easily assert that all expected elements are present, &lt;em&gt;even&lt;/em&gt; in nested parts of your JSON - while doing a &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; on the &lt;em&gt;full&lt;/em&gt; payload.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def cat = 
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  {&lt;/span&gt;
&lt;span class="pl-s"&gt;    name: 'Billie',&lt;/span&gt;
&lt;span class="pl-s"&gt;    kittens: [&lt;/span&gt;
&lt;span class="pl-s"&gt;      { id: 23, name: 'Bob' },&lt;/span&gt;
&lt;span class="pl-s"&gt;      { id: 42, name: 'Wild' }&lt;/span&gt;
&lt;span class="pl-s"&gt;    ]&lt;/span&gt;
&lt;span class="pl-s"&gt;  }&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def expected = [{ id: 42, name: &lt;span class="pl-s"&gt;'Wild'&lt;/span&gt; }, { id: 23, name: &lt;span class="pl-s"&gt;'Bob'&lt;/span&gt; }]
&lt;span class="pl-k"&gt;* &lt;/span&gt;match cat == { name: &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt;, kittens: &lt;span class="pl-s"&gt;'#(^^expected)'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There's a lot going on in the last line above ! It validates the entire payload in one step and checks if the &lt;code&gt;kittens&lt;/code&gt; array &lt;a href="#contains-short-cuts"&gt;&lt;em&gt;&lt;strong&gt;contains all&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;  the &lt;code&gt;expected&lt;/code&gt; items but in &lt;em&gt;&lt;strong&gt;any order&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-get" class="anchor" aria-hidden="true" href="#get"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;get&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;By now, it should be clear that JsonPath can be very useful for extracting JSON 'trees' out of a given object. The &lt;code&gt;get&lt;/code&gt; keyword allows you to save the results of a JsonPath expression for later use - which is especially useful for dynamic &lt;a href="#data-driven-features"&gt;data-driven testing&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def cat = 
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  {&lt;/span&gt;
&lt;span class="pl-s"&gt;    name: 'Billie',&lt;/span&gt;
&lt;span class="pl-s"&gt;    kittens: [&lt;/span&gt;
&lt;span class="pl-s"&gt;      { id: 23, name: 'Bob' },&lt;/span&gt;
&lt;span class="pl-s"&gt;      { id: 42, name: 'Wild' }&lt;/span&gt;
&lt;span class="pl-s"&gt;    ]&lt;/span&gt;
&lt;span class="pl-s"&gt;  }&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def kitnums = get cat.kittens[*].id
&lt;span class="pl-k"&gt;* &lt;/span&gt;match kitnums == [23, 42]
&lt;span class="pl-k"&gt;* &lt;/span&gt;def kitnames = get cat $.kittens[*].name
&lt;span class="pl-k"&gt;* &lt;/span&gt;match kitnames == [&lt;span class="pl-s"&gt;'Bob'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Wild'&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-get-short-cut" class="anchor" aria-hidden="true" href="#get-short-cut"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;get&lt;/code&gt; short-cut&lt;/h3&gt;
&lt;p&gt;The 'short cut' &lt;code&gt;$variableName&lt;/code&gt; form is also supported. Refer to &lt;a href="#jsonpath-short-cuts"&gt;JsonPath short-cuts&lt;/a&gt; for a detailed explanation. So the above could be re-written as follows:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def kitnums = $cat.kittens[*].id
&lt;span class="pl-k"&gt;* &lt;/span&gt;match kitnums == [23, 42]
&lt;span class="pl-k"&gt;* &lt;/span&gt;def kitnames = $cat.kittens[*].name
&lt;span class="pl-k"&gt;* &lt;/span&gt;match kitnames == [&lt;span class="pl-s"&gt;'Bob'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Wild'&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is worth repeating that the above can be condensed into 2 lines. Note that since &lt;a href="#match-and-variables"&gt;only JsonPath is expected&lt;/a&gt; on the left-hand-side of the &lt;code&gt;==&lt;/code&gt; sign of a &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; statement, you don't need to prefix the variable reference with &lt;code&gt;$&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;match cat.kittens[*].id == [23, 42]
&lt;span class="pl-k"&gt;* &lt;/span&gt;match cat.kittens[*].name == [&lt;span class="pl-s"&gt;'Bob'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Wild'&lt;/span&gt;]

&lt;span class="pl-c"&gt;# if you prefer using 'pure' JsonPath, you can do this&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match cat $.kittens[*].id == [23, 42]
&lt;span class="pl-k"&gt;* &lt;/span&gt;match cat $.kittens[*].name == [&lt;span class="pl-s"&gt;'Bob'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Wild'&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-get-plus-index" class="anchor" aria-hidden="true" href="#get-plus-index"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;get&lt;/code&gt; plus index&lt;/h3&gt;
&lt;p&gt;A convenience that the &lt;code&gt;get&lt;/code&gt; syntax supports (but not the &lt;code&gt;$&lt;/code&gt; short-cut form) is to return a single element if the right-hand-side evaluates to a list-like result (e.g. a JSON array). This is useful because the moment you use a wildcard &lt;code&gt;[*]&lt;/code&gt; or search filter in JsonPath (see the next section), you get an &lt;em&gt;array&lt;/em&gt; back - even though typically you would only be interested in the &lt;em&gt;first&lt;/em&gt; item.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def actual = 23

&lt;span class="pl-c"&gt;# so instead of this&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def kitnums = get cat.kittens[*].id
&lt;span class="pl-k"&gt;* &lt;/span&gt;match actual == kitnums[0]

&lt;span class="pl-c"&gt;# you can do this in one line&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match actual == get[0] cat.kittens[*].id&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-jsonpath-filters" class="anchor" aria-hidden="true" href="#jsonpath-filters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JsonPath filters&lt;/h3&gt;
&lt;p&gt;JsonPath &lt;a href="https://github.com/json-path/JsonPath#filter-operators"&gt;filter expressions&lt;/a&gt; are very useful for extracting elements that meet some filter criteria out of arrays.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def cat = 
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  {&lt;/span&gt;
&lt;span class="pl-s"&gt;    name: 'Billie',&lt;/span&gt;
&lt;span class="pl-s"&gt;    kittens: [&lt;/span&gt;
&lt;span class="pl-s"&gt;      { id: 23, name: 'Bob' },&lt;/span&gt;
&lt;span class="pl-s"&gt;      { id: 42, name: 'Wild' }&lt;/span&gt;
&lt;span class="pl-s"&gt;    ]&lt;/span&gt;
&lt;span class="pl-s"&gt;  }&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;
&lt;span class="pl-c"&gt;# find single kitten where id == 23&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def bob = get[0] cat.kittens[?(&lt;span class="pl-k"&gt;@.id==23)]&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match bob.name == &lt;span class="pl-s"&gt;'Bob'&lt;/span&gt;

&lt;span class="pl-c"&gt;# using the karate object if the expression is dynamic&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def temp = karate.jsonPath(cat, &lt;span class="pl-s"&gt;"$.kittens[?(@.name=='"&lt;/span&gt; + bob.name + &lt;span class="pl-s"&gt;"')]"&lt;/span&gt;)
&lt;span class="pl-k"&gt;* &lt;/span&gt;match temp[0] == bob

&lt;span class="pl-c"&gt;# or alternatively&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def temp = karate.jsonPath(cat, &lt;span class="pl-s"&gt;"$.kittens[?(@.name=='"&lt;/span&gt; + bob.name + &lt;span class="pl-s"&gt;"')]"&lt;/span&gt;)[0]
&lt;span class="pl-k"&gt;* &lt;/span&gt;match temp == bob&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You usually won't need this, but the second-last line above shows how the &lt;code&gt;karate&lt;/code&gt; object can be used to &lt;a href="#karate-jsonpath"&gt;evaluate JsonPath&lt;/a&gt; if the filter expression depends on a variable. If you find yourself struggling to write &lt;a href="https://stackoverflow.com/a/52741196/143475" rel="nofollow"&gt;dynamic JsonPath filters&lt;/a&gt;, look at &lt;a href="#karate-filter"&gt;&lt;code&gt;karate.filter()&lt;/code&gt;&lt;/a&gt; as an alternative, described just below.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-json-transforms" class="anchor" aria-hidden="true" href="#json-transforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON Transforms&lt;/h2&gt;
&lt;p&gt;Karate supports the following &lt;a href="https://en.wikipedia.org/wiki/Functional_programming" rel="nofollow"&gt;functional-style&lt;/a&gt; operations via the JS API -  &lt;a href="#karate-map"&gt;&lt;code&gt;karate.map()&lt;/code&gt;&lt;/a&gt;, &lt;a href="#karate-filter"&gt;&lt;code&gt;karate.filter()&lt;/code&gt;&lt;/a&gt; and &lt;a href="#karate-foreach"&gt;&lt;code&gt;karate.forEach()&lt;/code&gt;&lt;/a&gt;. They can be very useful in some situations. A &lt;a href="https://stackoverflow.com/a/53120851/143475" rel="nofollow"&gt;good example&lt;/a&gt; is when you have the &lt;em&gt;expected&lt;/em&gt; data available as ready-made JSON but it is in a different "shape" from the &lt;em&gt;actual&lt;/em&gt; data or HTTP &lt;code&gt;response&lt;/code&gt;. There is also a &lt;a href="#karate-mapwithkey"&gt;&lt;code&gt;karate.mapWithKey()&lt;/code&gt;&lt;/a&gt; for a common need - which is to convert an array of primitives into an array of objects, which is the form that &lt;a href="#data-driven-features"&gt;data driven features&lt;/a&gt; expect.&lt;/p&gt;
&lt;p&gt;A few more useful "transforms" are to select a sub-set of key-value pairs using &lt;a href="#karate-filterkeys"&gt;&lt;code&gt;karate.filterKeys()&lt;/code&gt;&lt;/a&gt;, merging 2 or more JSON-s using &lt;a href="#karate-merge"&gt;&lt;code&gt;karate.merge()&lt;/code&gt;&lt;/a&gt; and combining 2 or more arrays (or objects) into a single array using &lt;a href="#karate-append"&gt;&lt;code&gt;karate.append()&lt;/code&gt;&lt;/a&gt;. And &lt;a href="#karate-appendto"&gt;&lt;code&gt;karate.appendTo()&lt;/code&gt;&lt;/a&gt; is for updating an existing variable (the equivalent of &lt;code&gt;array.push()&lt;/code&gt; in JavaScript), which is especially useful in the body of a &lt;code&gt;karate.forEach()&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that a single JS function is sufficient to transform a given JSON object into a completely new one, and you can use complex conditional logic if needed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; karate map operation&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def fun = function(x){ return x * x }
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def list = [1, 2, 3]
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def res = karate.map(list, fun)
    &lt;span class="pl-k"&gt;* &lt;/span&gt;match res == [1, 4, 9]

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; convert an array into a different shape&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def before = [{ foo: 1 }, { foo: 2 }, { foo: 3 }]
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def fun = function(x){ return { bar: x.foo } }
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def after = karate.map(before, fun)
    &lt;span class="pl-k"&gt;* &lt;/span&gt;match after == [{ bar: 1 }, { bar: 2 }, { bar: 3 }]

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; convert array of primitives into array of objects&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def list = [ &lt;span class="pl-s"&gt;'Bob'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Wild'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Nyan'&lt;/span&gt; ]
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def data = karate.mapWithKey(list, &lt;span class="pl-s"&gt;'name'&lt;/span&gt;)
    &lt;span class="pl-k"&gt;* &lt;/span&gt;match data == [{ name: &lt;span class="pl-s"&gt;'Bob'&lt;/span&gt; }, { name: &lt;span class="pl-s"&gt;'Wild'&lt;/span&gt; }, { name: &lt;span class="pl-s"&gt;'Nyan'&lt;/span&gt; }]

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; karate filter operation&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def fun = function(x){ return x % 2 == 0 }
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def list = [1, 2, 3, 4]
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def res = karate.filter(list, fun)
    &lt;span class="pl-k"&gt;* &lt;/span&gt;match res == [2, 4]

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; forEach works even on object key-values, not just arrays&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def keys = []
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def vals = []
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def idxs = []
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def fun = 
    &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;    function(x, y, i) { &lt;/span&gt;
&lt;span class="pl-s"&gt;      karate.appendTo(keys, x); &lt;/span&gt;
&lt;span class="pl-s"&gt;      karate.appendTo(vals, y); &lt;/span&gt;
&lt;span class="pl-s"&gt;      karate.appendTo(idxs, i); &lt;/span&gt;
&lt;span class="pl-s"&gt;    }&lt;/span&gt;
&lt;span class="pl-s"&gt;    """&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def map = { a: 2, b: 4, c: 6 }
    &lt;span class="pl-k"&gt;* &lt;/span&gt;karate.forEach(map, fun)
    &lt;span class="pl-k"&gt;* &lt;/span&gt;match keys == [&lt;span class="pl-s"&gt;'a'&lt;/span&gt;, &lt;span class="pl-s"&gt;'b'&lt;/span&gt;, &lt;span class="pl-s"&gt;'c'&lt;/span&gt;]
    &lt;span class="pl-k"&gt;* &lt;/span&gt;match vals == [2, 4, 6]
    &lt;span class="pl-k"&gt;* &lt;/span&gt;match idxs == [0, 1, 2]

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; filterKeys&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def schema = { a: &lt;span class="pl-s"&gt;'#string'&lt;/span&gt;, b: &lt;span class="pl-s"&gt;'#number'&lt;/span&gt;, c: &lt;span class="pl-s"&gt;'#boolean'&lt;/span&gt; }
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def response = { a: &lt;span class="pl-s"&gt;'x'&lt;/span&gt;, c: true }
&lt;span class="pl-c"&gt;    # very useful for validating a response against a schema "super-set"&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;match response == karate.filterKeys(schema, response)
    &lt;span class="pl-k"&gt;* &lt;/span&gt;match karate.filterKeys(response, &lt;span class="pl-s"&gt;'b'&lt;/span&gt;, &lt;span class="pl-s"&gt;'c'&lt;/span&gt;) == { c: true }
    &lt;span class="pl-k"&gt;* &lt;/span&gt;match karate.filterKeys(response, [&lt;span class="pl-s"&gt;'a'&lt;/span&gt;, &lt;span class="pl-s"&gt;'b'&lt;/span&gt;]) == { a: &lt;span class="pl-s"&gt;'x'&lt;/span&gt; }

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; merge&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = { a: 1 }
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def bar = karate.merge(foo, { b: 2 })
    &lt;span class="pl-k"&gt;* &lt;/span&gt;match bar == { a: 1, b: 2 }

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; append&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = [{ a: 1 }]
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def bar = karate.append(foo, { b: 2 })
    &lt;span class="pl-k"&gt;* &lt;/span&gt;match bar == [{ a: 1 }, { b: 2 }]&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-loops" class="anchor" aria-hidden="true" href="#loops"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Loops&lt;/h3&gt;
&lt;p&gt;Given the examples above, it has to be said that a best practice with Karate is to avoid JavaScript &lt;code&gt;for&lt;/code&gt; loops as far as possible. A common requirement is to build an array with &lt;code&gt;n&lt;/code&gt; elements or do something &lt;code&gt;n&lt;/code&gt; times where &lt;code&gt;n&lt;/code&gt; is an integer (that could even be a variable reference). This is easily achieved with the &lt;a href="#karate-repeat"&gt;&lt;code&gt;karate.repeat()&lt;/code&gt;&lt;/a&gt; API:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def fun = function(i){ return i * 2 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = karate.repeat(5, fun)
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == [0, 2, 4, 6, 8]

&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = []
&lt;span class="pl-k"&gt;* &lt;/span&gt;def fun = function(i){ karate.appendTo(foo, i) }
&lt;span class="pl-k"&gt;* &lt;/span&gt;karate.repeat(5, fun)
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == [0, 1, 2, 3, 4]

&lt;span class="pl-c"&gt;# generate test data easily&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def fun = function(i){ return { name: &lt;span class="pl-s"&gt;'User '&lt;/span&gt; + (i + 1) } }
&lt;span class="pl-k"&gt;* &lt;/span&gt;def foo = karate.repeat(3, fun)
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo == [{ name: &lt;span class="pl-s"&gt;'User 1'&lt;/span&gt; }, { name: &lt;span class="pl-s"&gt;'User 2'&lt;/span&gt; }, { name: &lt;span class="pl-s"&gt;'User 3'&lt;/span&gt; }]&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-xpath-functions" class="anchor" aria-hidden="true" href="#xpath-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;XPath Functions&lt;/h2&gt;
&lt;p&gt;When handling XML, you sometimes need to call &lt;a href="https://docs.oracle.com/javase/tutorial/jaxp/xslt/xpath.html" rel="nofollow"&gt;XPath functions&lt;/a&gt;, for example to get the count of a node-set. Any valid XPath expression is allowed on the left-hand-side of a &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; statement.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def myXml =
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;records&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    &amp;lt;record index="1"&amp;gt;a&amp;lt;/record&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    &amp;lt;record index="2"&amp;gt;b&amp;lt;/record&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    &amp;lt;record index="3" foo="bar"&amp;gt;c&amp;lt;/record&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;/records&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo count(/records//record) == 3
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo //record[&lt;span class="pl-k"&gt;@index=2]&lt;/span&gt; == &lt;span class="pl-s"&gt;'b'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match foo //record[&lt;span class="pl-k"&gt;@foo='bar']&lt;/span&gt; == &lt;span class="pl-s"&gt;'c'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-advanced-xpath" class="anchor" aria-hidden="true" href="#advanced-xpath"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced XPath&lt;/h3&gt;
&lt;p&gt;Some XPath expressions return a list of nodes (instead of a single node). But since you can express a list of data-elements as a JSON array - even these XPath expressions can be used in &lt;code&gt;match&lt;/code&gt; statements.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def teachers = 
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;teachers&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    &amp;lt;teacher department="science"&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;subject&amp;gt;math&amp;lt;/subject&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;subject&amp;gt;physics&amp;lt;/subject&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    &amp;lt;/teacher&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    &amp;lt;teacher department="arts"&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;subject&amp;gt;political education&amp;lt;/subject&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      &amp;lt;subject&amp;gt;english&amp;lt;/subject&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    &amp;lt;/teacher&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  &amp;lt;/teachers&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match teachers //teacher[&lt;span class="pl-k"&gt;@department='science']/subject&lt;/span&gt; == [&lt;span class="pl-s"&gt;'math'&lt;/span&gt;, &lt;span class="pl-s"&gt;'physics'&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If your XPath is dynamic and has to be formed 'on the fly' perhaps by using some variable derived from previous steps, you can use the &lt;a href="#karate-xmlpath"&gt;&lt;code&gt;karate.xmlPath()&lt;/code&gt;&lt;/a&gt; helper:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def xml = &lt;span class="pl-smi"&gt;&amp;lt;query&amp;gt;&amp;lt;name&amp;gt;&amp;lt;foo&amp;gt;&lt;/span&gt;bar&lt;span class="pl-smi"&gt;&amp;lt;/foo&amp;gt;&amp;lt;/name&amp;gt;&amp;lt;/query&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def elementName = &lt;span class="pl-s"&gt;'name'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def name = karate.xmlPath(xml, &lt;span class="pl-s"&gt;'/query/'&lt;/span&gt; + elementName + &lt;span class="pl-s"&gt;'/foo'&lt;/span&gt;)
&lt;span class="pl-k"&gt;* &lt;/span&gt;match name == &lt;span class="pl-s"&gt;'bar'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def queryName = karate.xmlPath(xml, &lt;span class="pl-s"&gt;'/query/'&lt;/span&gt; + elementName)
&lt;span class="pl-k"&gt;* &lt;/span&gt;match queryName == &lt;span class="pl-smi"&gt;&amp;lt;name&amp;gt;&amp;lt;foo&amp;gt;&lt;/span&gt;bar&lt;span class="pl-smi"&gt;&amp;lt;/foo&amp;gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can refer to this file (which is part of the Karate test-suite) for more XML examples: &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/xml-and-xpath.feature"&gt;&lt;code&gt;xml-and-xpath.feature&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-special-variables" class="anchor" aria-hidden="true" href="#special-variables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Special Variables&lt;/h1&gt;
&lt;p&gt;These are 'built-in' variables, there are only a few and all of them give you access to the HTTP response.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-response" class="anchor" aria-hidden="true" href="#response"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;response&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;After every HTTP call this variable is set with the response body, and is available until the next HTTP request over-writes it. You can easily assign the whole &lt;code&gt;response&lt;/code&gt; (or just parts of it using Json-Path or XPath) to a variable, and use it in later steps.&lt;/p&gt;
&lt;p&gt;The response is automatically available as a JSON, XML or String object depending on what the response contents are.&lt;/p&gt;
&lt;p&gt;As a short-cut, when running JsonPath expressions - &lt;code&gt;$&lt;/code&gt; represents the &lt;code&gt;response&lt;/code&gt;.  This has the advantage that you can use pure &lt;a href="https://github.com/jayway/JsonPath#path-examples"&gt;JsonPath&lt;/a&gt; and be more concise.  For example:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# the three lines below are equivalent&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match response $ == { name: &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt; }
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match response == { name: &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt; }
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match $ == { name: &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt; }

&lt;span class="pl-c"&gt;# the three lines below are equivalent&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match response.name == &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match response $.name == &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match $.name == &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And similarly for XML and XPath, '/' represents the &lt;code&gt;response&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# the four lines below are equivalent&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match response / == &lt;span class="pl-smi"&gt;&amp;lt;cat&amp;gt;&amp;lt;name&amp;gt;&lt;/span&gt;Billie&lt;span class="pl-smi"&gt;&amp;lt;/name&amp;gt;&amp;lt;/cat&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match response/ == &lt;span class="pl-smi"&gt;&amp;lt;cat&amp;gt;&amp;lt;name&amp;gt;&lt;/span&gt;Billie&lt;span class="pl-smi"&gt;&amp;lt;/name&amp;gt;&amp;lt;/cat&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match response == &lt;span class="pl-smi"&gt;&amp;lt;cat&amp;gt;&amp;lt;name&amp;gt;&lt;/span&gt;Billie&lt;span class="pl-smi"&gt;&amp;lt;/name&amp;gt;&amp;lt;/cat&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match / == &lt;span class="pl-smi"&gt;&amp;lt;cat&amp;gt;&amp;lt;name&amp;gt;&lt;/span&gt;Billie&lt;span class="pl-smi"&gt;&amp;lt;/name&amp;gt;&amp;lt;/cat&amp;gt;&lt;/span&gt; 

&lt;span class="pl-c"&gt;# the three lines below are equivalent&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match response /cat/name == &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match response/cat/name == &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;match /cat/name == &lt;span class="pl-s"&gt;'Billie'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-jsonpath-short-cuts" class="anchor" aria-hidden="true" href="#jsonpath-short-cuts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JsonPath short-cuts&lt;/h4&gt;
&lt;p&gt;The &lt;a href="#get-short-cut"&gt;&lt;code&gt;$varName&lt;/code&gt; form&lt;/a&gt; is used on the right-hand-side of &lt;a href="#karate-expressions"&gt;Karate expressions&lt;/a&gt; and is &lt;em&gt;slightly&lt;/em&gt; different from pure &lt;a href="https://github.com/json-path/JsonPath#path-examples"&gt;JsonPath expressions&lt;/a&gt; which always begin with &lt;code&gt;$.&lt;/code&gt; or &lt;code&gt;$[&lt;/code&gt;. Here is a summary of what the different 'shapes' mean in Karate:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Shape&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;$.bar&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Pure JsonPath equivalent of &lt;code&gt;$response.bar&lt;/code&gt; where &lt;code&gt;response&lt;/code&gt; is a JSON object&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;$[0]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Pure JsonPath equivalent of &lt;code&gt;$response[0]&lt;/code&gt; where &lt;code&gt;response&lt;/code&gt; is a JSON array&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;$foo.bar&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Evaluates the JsonPath &lt;code&gt;$.bar&lt;/code&gt; on the variable &lt;code&gt;foo&lt;/code&gt; which is a JSON object or map-like&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;$foo[0]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Evaluates the JsonPath &lt;code&gt;$[0]&lt;/code&gt; on the variable &lt;code&gt;foo&lt;/code&gt; which is a JSON array or list-like&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;There is no need to prefix variable names with &lt;code&gt;$&lt;/code&gt; on the left-hand-side of &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; statements because it is implied. You &lt;em&gt;can&lt;/em&gt; if you want to, but since &lt;a href="#match-and-variables"&gt;&lt;em&gt;only&lt;/em&gt; JsonPath (on variables)&lt;/a&gt; is allowed here, Karate ignores the &lt;code&gt;$&lt;/code&gt; and looks only at the variable name. None of the examples in the documentation use the &lt;code&gt;$varName&lt;/code&gt; form on the LHS, and this is the recommended best-practice.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-responsebytes" class="anchor" aria-hidden="true" href="#responsebytes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;responseBytes&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;This will always hold the contents of the response as a byte-array. This is rarely used, unless you are expecting binary content returned by the server. The &lt;code&gt;match&lt;/code&gt; keyword will &lt;a href="#match-text-or-binary"&gt;work as you expect&lt;/a&gt;. Here is an example: &lt;a href="karate-netty/src/test/java/com/intuit/karate/mock/binary.feature"&gt;&lt;code&gt;binary.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-responsecookies" class="anchor" aria-hidden="true" href="#responsecookies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;responseCookies&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;responseCookies&lt;/code&gt; variable is set upon any HTTP response and is a map-like (or JSON-like) object. It can be easily inspected or used in expressions.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;assert responseCookies[&lt;span class="pl-s"&gt;'my.key'&lt;/span&gt;].value == &lt;span class="pl-s"&gt;'someValue'&lt;/span&gt;

&lt;span class="pl-c"&gt;# karate's unified data handling means that even 'match' works&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match responseCookies contains { time: &lt;span class="pl-s"&gt;'#notnull'&lt;/span&gt; }

&lt;span class="pl-c"&gt;# ... which means that checking if a cookie does NOT exist is a piece of cake&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match responseCookies !contains { blah: &lt;span class="pl-s"&gt;'#notnull'&lt;/span&gt; }

&lt;span class="pl-c"&gt;# save a response cookie for later use&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def time = responseCookies.time.value&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As a convenience, cookies from the previous response are collected and passed as-is as part of the next HTTP request. This is what is normally expected and simulates a web-browser - which makes it easy to script things like HTML-form based authentication into test-flows. Refer to the documentation for &lt;a href="#cookie"&gt;&lt;code&gt;cookie&lt;/code&gt;&lt;/a&gt; for details and how you can disable this if need be.&lt;/p&gt;
&lt;p&gt;Each item within &lt;code&gt;responseCookies&lt;/code&gt; is itself a 'map-like' object. Typically you would examine the &lt;code&gt;value&lt;/code&gt; property as in the example above, but &lt;code&gt;domain&lt;/code&gt; and &lt;code&gt;path&lt;/code&gt; are also available.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-responseheaders" class="anchor" aria-hidden="true" href="#responseheaders"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;responseHeaders&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;See also &lt;a href="#match-header"&gt;&lt;code&gt;match header&lt;/code&gt;&lt;/a&gt; which is what you would normally need.&lt;/p&gt;
&lt;p&gt;But if you need to use values in the response headers - they will be in a variable named &lt;code&gt;responseHeaders&lt;/code&gt;. Note that it is a 'map of lists' so you will need to do things like this:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def contentType = responseHeaders[&lt;span class="pl-s"&gt;'Content-Type'&lt;/span&gt;][0]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And just as in the &lt;a href="#responsecookies"&gt;&lt;code&gt;responseCookies&lt;/code&gt;&lt;/a&gt; example above, you can use &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; to run complex validations on the &lt;code&gt;responseHeaders&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-responsestatus" class="anchor" aria-hidden="true" href="#responsestatus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;responseStatus&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;You would normally only need to use the &lt;a href="#status"&gt;&lt;code&gt;status&lt;/code&gt;&lt;/a&gt; keyword.  But if you really need to use the HTTP response code in an expression or save it for later, you can get it as an integer:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def uploadStatusCode = responseStatus

&lt;span class="pl-c"&gt;# check if the response status is either of two values&lt;/span&gt;
&lt;span class="pl-k"&gt;Then &lt;/span&gt;assert responseStatus == 200 || responseStatus == 204&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-responsetime" class="anchor" aria-hidden="true" href="#responsetime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;responseTime&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The response time (in milliseconds) for the current &lt;a href="#response"&gt;&lt;code&gt;response&lt;/code&gt;&lt;/a&gt; would be available in a variable called &lt;code&gt;responseTime&lt;/code&gt;. You can use this to assert that it was returned within the expected time like so:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;When &lt;/span&gt;method post
&lt;span class="pl-k"&gt;Then &lt;/span&gt;status 201
&lt;span class="pl-k"&gt;And &lt;/span&gt;assert responseTime &lt;span class="pl-smi"&gt;&amp;lt; 1000&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-requesttimestamp" class="anchor" aria-hidden="true" href="#requesttimestamp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;requestTimeStamp&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Very rarely used - but you can get the Java system-time (for the current &lt;a href="#response"&gt;&lt;code&gt;response&lt;/code&gt;&lt;/a&gt;) at the point when the HTTP request was initiated (the value of &lt;code&gt;System.currentTimeMillis()&lt;/code&gt;) which can be used for detailed logging or custom framework / stats calculations.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-http-header-manipulation" class="anchor" aria-hidden="true" href="#http-header-manipulation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTTP Header Manipulation&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-configure-headers" class="anchor" aria-hidden="true" href="#configure-headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;configure headers&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Custom header manipulation for every HTTP request is something that Karate makes very easy and pluggable. For every HTTP request made from Karate, the internal flow is as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;did we &lt;a href="#configure"&gt;&lt;code&gt;configure&lt;/code&gt;&lt;/a&gt; the value of &lt;code&gt;headers&lt;/code&gt; ?&lt;/li&gt;
&lt;li&gt;if so, is the configured value a JavaScript function ?
&lt;ul&gt;
&lt;li&gt;if so, a &lt;a href="#call"&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; is made to that function.&lt;/li&gt;
&lt;li&gt;did the function invocation return a map-like (or JSON) object ?
&lt;ul&gt;
&lt;li&gt;all the key-value pairs are added to the HTTP headers.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;or is the configured value a JSON object ?
&lt;ul&gt;
&lt;li&gt;all the key-value pairs are added to the HTTP headers.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This makes setting up of complex authentication schemes for your test-flows really easy. It typically ends up being a one-liner that appears in the &lt;code&gt;Background&lt;/code&gt; section at the start of your test-scripts.  You can re-use the function you create across your whole project.&lt;/p&gt;
&lt;p&gt;Here is an example JavaScript function that uses some variables in the context (which have been possibly set as the result of a sign-in) to build the &lt;code&gt;Authorization&lt;/code&gt; header. Note how even &lt;a href="#calling-java"&gt;calls to Java code&lt;/a&gt; can be made if needed.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In the example below, note the use of the &lt;a href="#karate-get"&gt;&lt;code&gt;karate.get()&lt;/code&gt;&lt;/a&gt; helper for getting the value of a dynamic variable. This is preferred because it takes care of situations such as if the value is &lt;code&gt;undefined&lt;/code&gt; in JavaScript. In rare cases you may need to &lt;em&gt;set&lt;/em&gt; a variable from this routine, and a good example is to make the generated UUID "visible" to the currently executing script or feature. You can easily do this via &lt;a href="#karate-set"&gt;&lt;code&gt;karate.set('someVarName', value)&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;() {
  &lt;span class="pl-k"&gt;var&lt;/span&gt; uuid &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;java&lt;/span&gt;.&lt;span class="pl-smi"&gt;util&lt;/span&gt;.&lt;span class="pl-c1"&gt;UUID&lt;/span&gt;.&lt;span class="pl-en"&gt;randomUUID&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; convert to string&lt;/span&gt;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; out &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; so now the txid_header would be a unique uuid for each request&lt;/span&gt;
    txid_header&lt;span class="pl-k"&gt;:&lt;/span&gt; uuid,
    ip_header&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;123.45.67.89&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; hard coded here, but also can be as dynamic as you want   &lt;/span&gt;
  };
  &lt;span class="pl-k"&gt;var&lt;/span&gt; authString &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; authToken &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;karate&lt;/span&gt;.&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;authToken&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; use the 'karate' helper to do a 'safe' get of a 'dynamic' variable&lt;/span&gt;
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (authToken) { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; and if 'authToken' is not null ... &lt;/span&gt;
    authString &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;,auth_type=MyAuthScheme&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;,auth_key=&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;authToken&lt;/span&gt;.&lt;span class="pl-smi"&gt;key&lt;/span&gt;
        &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;,auth_user=&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;authToken&lt;/span&gt;.&lt;span class="pl-smi"&gt;userId&lt;/span&gt;
        &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;,auth_project=&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;authToken&lt;/span&gt;.&lt;span class="pl-smi"&gt;projectId&lt;/span&gt;;
  }
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the 'appId' variable here is expected to have been set via karate-config.js (bootstrap init) and will never change&lt;/span&gt;
  out[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Authorization&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;My_Auth app_id=&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; appId &lt;span class="pl-k"&gt;+&lt;/span&gt; authString;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; out;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Assuming the above code is in a file called &lt;code&gt;my-headers.js&lt;/code&gt;, the next section on &lt;a href="#calling-other-feature-files"&gt;calling other feature files&lt;/a&gt; shows how it looks like in action at the beginning of a test script.&lt;/p&gt;
&lt;p&gt;Notice how once the &lt;code&gt;authToken&lt;/code&gt; variable is initialized, it is used by the above function to generate headers for every HTTP call made as part of the test flow.&lt;/p&gt;
&lt;p&gt;If a few steps in your flow need to temporarily change (or completely bypass) the currently-set header-manipulation scheme, just update &lt;code&gt;configure headers&lt;/code&gt; to a new value (or set it to &lt;code&gt;null&lt;/code&gt;) in the middle of a script. Then use the &lt;a href="#header"&gt;&lt;code&gt;header&lt;/code&gt;&lt;/a&gt; keyword to do a custom 'over-ride' if needed.&lt;/p&gt;
&lt;p&gt;The &lt;a href="karate-demo"&gt;karate-demo&lt;/a&gt; has an example showing various ways to &lt;code&gt;configure&lt;/code&gt; or set headers: &lt;a href="karate-demo/src/test/java/demo/headers/headers.feature"&gt;&lt;code&gt;headers.feature&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-the-karate-object" class="anchor" aria-hidden="true" href="#the-karate-object"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;karate&lt;/code&gt; object&lt;/h1&gt;
&lt;p&gt;A JavaScript function or &lt;a href="#karate-expressions"&gt;Karate expression&lt;/a&gt; at runtime has access to a utility object in a variable named: &lt;code&gt;karate&lt;/code&gt;.  This provides the following methods:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operation&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-abort"&gt;&lt;code&gt;karate.abort()&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;you can prematurely exit a &lt;code&gt;Scenario&lt;/code&gt; by combining this with &lt;a href="#conditional-logic"&gt;conditional logic&lt;/a&gt; like so: &lt;code&gt;* if (condition) karate.abort()&lt;/code&gt; - please use &lt;a href="https://martinfowler.com/articles/nonDeterminism.html" rel="nofollow"&gt;sparingly&lt;/a&gt; !&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-append"&gt;&lt;code&gt;karate.append(... items)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;useful to create lists out of items (which can be lists as well), see &lt;a href="#json-transforms"&gt;JSON transforms&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-appendto"&gt;&lt;code&gt;karate.appendTo(name, ... items)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;useful to append to a list-like variable (that has to exist) in scope, see &lt;a href="#json-transforms"&gt;JSON transforms&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-call"&gt;&lt;code&gt;karate.call(fileName, [arg])&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;invoke a &lt;a href="#calling-other-feature-files"&gt;&lt;code&gt;*.feature&lt;/code&gt; file&lt;/a&gt; or a &lt;a href="#calling-javascript-functions"&gt;JavaScript function&lt;/a&gt; the same way that &lt;a href="#call"&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; works (with an optional solitary argument)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-callsingle"&gt;&lt;code&gt;karate.callSingle(fileName, [arg])&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;like the above, but guaranteed to run &lt;strong&gt;only once&lt;/strong&gt; even across multiple features &lt;em&gt;and&lt;/em&gt; parallel threads (recommended only for advanced users) - refer to this example: &lt;a href="karate-demo/src/test/java/karate-config.js"&gt;&lt;code&gt;karate-config.js&lt;/code&gt;&lt;/a&gt; / &lt;a href="karate-demo/src/test/java/demo/headers/headers-single.feature"&gt;&lt;code&gt;headers-single.feature&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-configure"&gt;&lt;code&gt;karate.configure(key, value)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;does the same thing as the &lt;a href="#configure"&gt;&lt;code&gt;configure&lt;/code&gt;&lt;/a&gt; keyword, and a very useful example is to do &lt;code&gt;karate.configure('connectTimeout', 5000);&lt;/code&gt; in &lt;a href="#configuration"&gt;&lt;code&gt;karate-config.js&lt;/code&gt;&lt;/a&gt; - which has the 'global' effect of not wasting time if a connection cannot be established within 5 seconds&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-embed"&gt;&lt;code&gt;karate.embed(object, mimeType)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;embeds the object (can be raw bytes or an image) into the JSON report output, see this &lt;a href="karate-demo/src/test/java/demo/embed/embed.feature"&gt;example&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-env"&gt;&lt;code&gt;karate.env&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;gets the value (read-only) of the environment property 'karate.env', and this is typically used for bootstrapping &lt;a href="#configuration"&gt;configuration&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-eval"&gt;&lt;code&gt;karate.eval(expression)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;for really advanced needs, you can programmatically generate a snippet of JavaScript which can be evaluated at run-time, you can find an example &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature"&gt;here&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-exec"&gt;&lt;code&gt;karate.exec(command)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;convenient way to execute an OS specific command and return the console output, useful for calling non-Java code (that can even return data) or for starting user-interfaces to be automated&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-filter"&gt;&lt;code&gt;karate.filter(list, predicate)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;functional-style 'filter' operation useful to filter list-like objects (e.g. JSON arrays), see &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature"&gt;example&lt;/a&gt;, the second argument has to be a JS function (item, [index]) that returns a &lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-filterkeys"&gt;&lt;code&gt;karate.filterKeys(map, keys)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;extracts a sub-set of key-value pairs from the first argument, the second argument can be a list (or varargs) of keys - or even another JSON where only the keys would be used for extraction, &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature"&gt;example&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;karate.forEach(list, function)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;functional-style 'loop' operation useful to traverse list-like (or even map-like) objects (e.g. JSON / arrays), see &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature"&gt;example&lt;/a&gt;, the second argument has to be a JS function (item, [index]) for lists and (key, [value], [index]) for JSON / maps&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-get"&gt;&lt;code&gt;karate.get(name)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;get the value of a variable by name (or JsonPath expression), if not found - this returns &lt;code&gt;null&lt;/code&gt; which is easier to handle in JavaScript (than &lt;code&gt;undefined&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-info"&gt;&lt;code&gt;karate.info&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;within a test (or within the &lt;a href="#configure"&gt;&lt;code&gt;afterScenario&lt;/code&gt;&lt;/a&gt; function if configured) you can access metadata such as the &lt;code&gt;Scenario&lt;/code&gt; name, refer to this example: &lt;a href="karate-demo/src/test/java/demo/hooks/hooks.feature"&gt;&lt;code&gt;hooks.feature&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-jsonpath"&gt;&lt;code&gt;karate.jsonPath(json, expression)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;brings the power of &lt;a href="https://github.com/json-path/JsonPath"&gt;JsonPath&lt;/a&gt; into JavaScript, and you can find an example &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature"&gt;here&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-keysof"&gt;&lt;code&gt;karate.keysOf(object)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;returns only the keys of a map-like object&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-listen"&gt;&lt;code&gt;karate.listen(timeout)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;wait until &lt;a href="#karate-signal"&gt;&lt;code&gt;karate.signal(result)&lt;/code&gt;&lt;/a&gt; has been called or time-out after &lt;code&gt;timeout&lt;/code&gt; milliseconds, see &lt;a href="#async"&gt;async&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-log"&gt;&lt;code&gt;karate.log(... args)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;log to the same logger (and log file) being used by the parent process, logging can be suppressed with &lt;a href="#configure"&gt;&lt;code&gt;configure printEnabled&lt;/code&gt;&lt;/a&gt; set to &lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-lowercase"&gt;&lt;code&gt;karate.lowerCase(object)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;useful to brute-force all keys and values in a JSON or XML payload to lower-case, useful in some cases, see &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/lower-case.feature"&gt;example&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-map"&gt;&lt;code&gt;karate.map(list, function)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;functional-style 'map' operation useful to transform list-like objects (e.g. JSON arrays), see &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature"&gt;example&lt;/a&gt;, the second argument has to be a JS function (item, [index])&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-mapwithkey"&gt;&lt;code&gt;karate.mapWithKey(list, string)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;convenient for the common case of transforming an array of primitives into an array of objects, see &lt;a href="#json-transforms"&gt;JSON transforms&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-match"&gt;&lt;code&gt;karate.match(actual, expected)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;brings the power of the &lt;em&gt;fuzzy&lt;/em&gt; &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; syntax into Karate-JS, returns a JSON in the form &lt;code&gt;{ pass: '#boolean', message: '#string' }&lt;/code&gt; and you can find an example &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/js-arrays.feature"&gt;here&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-merge"&gt;&lt;code&gt;karate.merge(... maps)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;useful to merge the key-values of two (or more) JSON (or map-like) objects, see &lt;a href="#json-transforms"&gt;JSON transforms&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-os"&gt;&lt;code&gt;karate.os&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;returns the operating system details as JSON, for e.g. &lt;code&gt;{ type: 'macosx', name: 'Mac OS X' }&lt;/code&gt; - useful for writing conditional logic, the possible &lt;code&gt;type&lt;/code&gt;-s being: &lt;code&gt;macosx&lt;/code&gt;, &lt;code&gt;windows&lt;/code&gt;, &lt;code&gt;linux&lt;/code&gt; and &lt;code&gt;unknown&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-pretty"&gt;&lt;code&gt;karate.pretty(value)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;return a 'pretty-printed', nicely indented string representation of the JSON value, also see: &lt;a href="#print"&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-prettyxml"&gt;&lt;code&gt;karate.prettyXml(value)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;return a 'pretty-printed', nicely indented string representation of the XML value, also see: &lt;a href="#print"&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-prevrequest"&gt;&lt;code&gt;karate.prevRequest&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;for advanced users, you can inspect the &lt;em&gt;actual&lt;/em&gt; HTTP request after it happens, useful if you are writing a framework over Karate, refer to this example: &lt;a href="karate-demo/src/test/java/demo/request/request.feature"&gt;&lt;code&gt;request.feature&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-properties"&gt;&lt;code&gt;karate.properties[key]&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;get the value of any Java system-property by name, useful for &lt;a href="#dynamic-port-numbers"&gt;advanced custom configuration&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-read"&gt;&lt;code&gt;karate.read(filename)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;the same &lt;a href="#reading-files"&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; function - which is pre-defined even within JS blocks, so there is no need to ever do &lt;code&gt;karate.read()&lt;/code&gt;, and just &lt;code&gt;read()&lt;/code&gt; is sufficient&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-readasstring"&gt;&lt;code&gt;karate.readAsString(filename)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#read-file-as-string"&gt;rarely used&lt;/a&gt;, behaves exactly like &lt;a href="#reading-files"&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; - but does &lt;em&gt;not&lt;/em&gt; auto convert to JSON or XML&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-remove"&gt;&lt;code&gt;karate.remove(name, path)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;very rarely used - when needing to perform conditional removal of XML nodes. Behaves the same way as the &lt;a href="#remove"&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; keyword.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-repeat"&gt;&lt;code&gt;karate.repeat(count, function)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;useful for building an array with &lt;code&gt;count&lt;/code&gt; items or doing something &lt;code&gt;count&lt;/code&gt; times, refer this &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/repeat.feature"&gt;example&lt;/a&gt;. Also see &lt;a href="#loops"&gt;loops&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-set"&gt;&lt;code&gt;karate.set(name, value)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;sets the value of a variable (immediately), which may be needed in case any other routines (such as the &lt;a href="#configure-headers"&gt;configured headers&lt;/a&gt;) depend on that variable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-setall"&gt;&lt;code&gt;karate.set(object)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;where the single argument is expected to be a &lt;code&gt;Map&lt;/code&gt; or JSON-like, and will perform the above &lt;code&gt;karate.set()&lt;/code&gt; operation for all key-value pairs in one-shot, see &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/set.feature"&gt;example&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-setpath"&gt;&lt;code&gt;karate.set(name, path, value)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;only needed when you need to conditionally build payload elements, especially XML. This is best explained via &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/xml/xml.feature#L211"&gt;an example&lt;/a&gt;, and it behaves the same way as the &lt;a href="#set"&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; keyword. Also see &lt;a href="#eval"&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-setxml"&gt;&lt;code&gt;karate.setXml(name, xmlString)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;rarely used, refer to the example above&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-signal"&gt;&lt;code&gt;karate.signal(result)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;trigger an event that &lt;a href="#karate-listen"&gt;&lt;code&gt;karate.listen(timeout)&lt;/code&gt;&lt;/a&gt; is waiting for, and pass the data, see &lt;a href="#async"&gt;async&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-sizeof"&gt;&lt;code&gt;karate.sizeOf(object)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;returns the size of the map-like or list-like object&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-tags"&gt;&lt;code&gt;karate.tags&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;for advanced users - scripts can introspect the tags that apply to the current scope, refer to this example: &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/tags.feature"&gt;&lt;code&gt;tags.feature&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-tagvalues"&gt;&lt;code&gt;karate.tagValues&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;for even more advanced users - Karate natively supports tags in a &lt;code&gt;@name=val1,val2&lt;/code&gt; format, and there is an inheritance mechanism where &lt;code&gt;Scenario&lt;/code&gt; level tags can over-ride &lt;code&gt;Feature&lt;/code&gt; level tags, refer to this example: &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/tags.feature"&gt;&lt;code&gt;tags.feature&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-tobean"&gt;&lt;code&gt;karate.toBean(json, className)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;converts a JSON string or map-like object into a Java object, given the Java class name as the second argument, refer to this &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/type-conv.feature"&gt;file&lt;/a&gt; for an example&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-tojson"&gt;&lt;code&gt;karate.toJson(object)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;converts a Java object into JSON, and &lt;code&gt;karate.toJson(object, true)&lt;/code&gt; will strip all keys that have &lt;code&gt;null&lt;/code&gt; values from the resulting JSON, convenient for unit-testing Java code, see &lt;a href="karate-demo/src/test/java/demo/unit/cat.feature"&gt;example&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-valuesof"&gt;&lt;code&gt;karate.valuesOf(object)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;returns only the values of a map-like object (or itself if a list-like object)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-websocket"&gt;&lt;code&gt;karate.webSocket(url, handler)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;see &lt;a href="#websocket"&gt;websocket&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-write"&gt;&lt;code&gt;karate.write(object, path)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;writes the bytes of &lt;code&gt;object&lt;/code&gt; to a path which will &lt;em&gt;always&lt;/em&gt; be relative to the "build" directory (typically &lt;code&gt;target&lt;/code&gt;), see this example: &lt;a href="karate-demo/src/test/java/demo/embed/embed-pdf.js"&gt;&lt;code&gt;embed-pdf.js&lt;/code&gt;&lt;/a&gt; - and this method returns a &lt;code&gt;java.io.File&lt;/code&gt; reference to the file created / written to&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a name="user-content-karate-xmlpath"&gt;&lt;code&gt;karate.xmlPath(xml, expression)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Just like &lt;a href="#karate-jsonpath"&gt;&lt;code&gt;karate.jsonPath()&lt;/code&gt;&lt;/a&gt; - but for XML, and allows you to use dynamic XPath if needed, see &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/xml/xml.feature"&gt;example&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-code-reuse--common-routines" class="anchor" aria-hidden="true" href="#code-reuse--common-routines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Reuse / Common Routines&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-call" class="anchor" aria-hidden="true" href="#call"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;call&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;In any complex testing endeavor, you would find yourself needing 'common' code that needs to be re-used across multiple test scripts. A typical need would be to perform a 'sign in', or create a fresh user as a pre-requisite for the scenarios being tested.&lt;/p&gt;
&lt;p&gt;There are two types of code that can be &lt;code&gt;call&lt;/code&gt;-ed. &lt;code&gt;*.feature&lt;/code&gt; files and &lt;a href="#calling-javascript-functions"&gt;JavaScript functions&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-calling-other-feature-files" class="anchor" aria-hidden="true" href="#calling-other-feature-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Calling other &lt;code&gt;*.feature&lt;/code&gt; files&lt;/h2&gt;
&lt;p&gt;When you have a sequence of HTTP calls that need to be repeated for multiple test scripts, Karate allows you to treat a &lt;code&gt;*.feature&lt;/code&gt; file as a re-usable unit. You can also pass parameters into the &lt;code&gt;*.feature&lt;/code&gt; file being called, and extract variables out of the invocation result.&lt;/p&gt;
&lt;p&gt;Here is an example of using the &lt;code&gt;call&lt;/code&gt; keyword to invoke another feature file, loaded using the &lt;a href="#reading-files"&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; function:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Feature&lt;/span&gt;:&lt;span class="pl-s"&gt; which makes a 'call' to another re-usable feature&lt;/span&gt;

&lt;span class="pl-k"&gt;Background&lt;/span&gt;:
  &lt;span class="pl-k"&gt;* &lt;/span&gt;configure headers = read(&lt;span class="pl-s"&gt;'classpath:my-headers.js'&lt;/span&gt;)
  &lt;span class="pl-k"&gt;* &lt;/span&gt;def signIn = call read(&lt;span class="pl-s"&gt;'classpath:my-signin.feature'&lt;/span&gt;) { username: &lt;span class="pl-s"&gt;'john'&lt;/span&gt;, password: &lt;span class="pl-s"&gt;'secret'&lt;/span&gt; }
  &lt;span class="pl-k"&gt;* &lt;/span&gt;def authToken = signIn.authToken

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; some scenario&lt;/span&gt;
&lt;span class="pl-c"&gt;  # main test steps&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt; can be used to &lt;em&gt;assign&lt;/em&gt; a &lt;strong&gt;feature&lt;/strong&gt; to a variable. For example look at how "&lt;code&gt;creator&lt;/code&gt;" has been defined in the &lt;code&gt;Background&lt;/code&gt; in &lt;a href="karate-demo/src/test/java/demo/calldynamic/call-dynamic-json.feature"&gt;this example&lt;/a&gt;, and used later in a &lt;code&gt;call&lt;/code&gt; statement. This is very close to how "custom keywords" work in other frameworks. See this other example for more ideas: &lt;a href="karate-demo/src/test/java/demo/dsl/dsl.feature"&gt;&lt;code&gt;dsl.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The contents of &lt;code&gt;my-signin.feature&lt;/code&gt; are shown below. A few points to note:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Karate creates a new 'context' for the feature file being invoked but passes along all variables and configuration. This means that all your &lt;a href="#configuration"&gt;config variables&lt;/a&gt; and &lt;a href="#configure"&gt;&lt;code&gt;configure&lt;/code&gt; settings&lt;/a&gt; would be available to use, for example &lt;code&gt;loginUrlBase&lt;/code&gt; in the example below.&lt;/li&gt;
&lt;li&gt;When you use &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt; in the 'called' feature, it will &lt;strong&gt;not&lt;/strong&gt; over-write variables in the 'calling' feature (unless you explicitly choose to use &lt;a href="#shared-scope"&gt;shared scope&lt;/a&gt;). But note that JSON, XML, Map-like or List-like variables are 'passed by reference' which means that 'called' feature steps can &lt;em&gt;update&lt;/em&gt; or 'mutate' them using the &lt;a href="#set"&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; keyword. Use the &lt;a href="#copy"&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt; keyword to 'clone' a JSON or XML payload if needed, and refer to this example for more details: &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/copy-caller.feature"&gt;&lt;code&gt;copy-caller.feature&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;You can add (or over-ride) variables by passing a call 'argument' as shown above. Only one JSON argument is allowed, but this does not limit you in any way as you can use any complex JSON structure. You can even initialize the JSON in a separate step and pass it by name, especially if it is complex. Observe how using JSON for parameter-passing makes things super-readable. In the 'called' feature, the argument can also be accessed using the built-in variable: &lt;a href="#built-in-variables-for-call"&gt;&lt;code&gt;__arg&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;All&lt;/strong&gt; variables that were defined (using &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt;) in the 'called' script would be returned as 'keys' within a JSON-like object. Note that this includes &lt;a href="#special-variables"&gt;'built-in' variables&lt;/a&gt;, which means that things like the last value of &lt;a href="#response"&gt;&lt;code&gt;response&lt;/code&gt;&lt;/a&gt; would also be present. In the example above you can see that the JSON 'envelope' returned - is assigned to the variable named &lt;code&gt;signIn&lt;/code&gt;. And then getting hold of any data that was generated by the 'called' script is as simple as accessing it by name, for example &lt;code&gt;signIn.authToken&lt;/code&gt; as shown above. This design has the following advantages:
&lt;ul&gt;
&lt;li&gt;'called' Karate scripts don't need to use any special keywords to 'return' data and can behave like 'normal' Karate tests in 'stand-alone' mode if needed&lt;/li&gt;
&lt;li&gt;the data 'return' mechanism is 'safe', there is no danger of the 'called' script over-writing any variables in the 'calling' (or parent) script (unless you use &lt;a href="#shared-scope"&gt;shared scope&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;the need to explicitly 'unpack' variables by name from the returned 'envelope' keeps things readable and maintainable in the 'caller' script&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that only &lt;a href="#def"&gt;variables&lt;/a&gt; and &lt;a href="#configure"&gt;configuration settings&lt;/a&gt; will be passed. You can't do things such as &lt;code&gt;* url 'http://foo.bar'&lt;/code&gt; and expect the URL to be set in the "called" feature. Use a variable in the "called" feature instead, for e.g. &lt;code&gt;* url myUrl&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Feature&lt;/span&gt;:&lt;span class="pl-s"&gt; here are the contents of 'my-signin.feature&lt;/span&gt;'

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:
  &lt;span class="pl-k"&gt;Given &lt;/span&gt;url loginUrlBase
  &lt;span class="pl-k"&gt;And &lt;/span&gt;request { userId: &lt;span class="pl-s"&gt;'#(username)'&lt;/span&gt;, userPass: &lt;span class="pl-s"&gt;'#(password)'&lt;/span&gt; }
  &lt;span class="pl-k"&gt;When &lt;/span&gt;method post
  &lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200
  &lt;span class="pl-k"&gt;And &lt;/span&gt;def authToken = response

&lt;span class="pl-c"&gt;  # second HTTP call, to get a list of 'projects'&lt;/span&gt;
  &lt;span class="pl-k"&gt;Given &lt;/span&gt;path &lt;span class="pl-s"&gt;'users'&lt;/span&gt;, authToken.userId, &lt;span class="pl-s"&gt;'projects'&lt;/span&gt;
  &lt;span class="pl-k"&gt;When &lt;/span&gt;method get
  &lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200
&lt;span class="pl-c"&gt;  # logic to 'choose' first project&lt;/span&gt;
  &lt;span class="pl-k"&gt;And &lt;/span&gt;set authToken.projectId = response.projects[0].projectId;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above example actually makes two HTTP requests - the first is a standard 'sign-in' POST and then (for illustrative purposes) another HTTP call (a GET) is made for retrieving a list of projects for the signed-in user, and the first one is 'selected' and added to the returned 'auth token' JSON object.&lt;/p&gt;
&lt;p&gt;So you get the picture, any kind of complicated 'sign-in' flow can be scripted and re-used.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If the second HTTP call above expects headers to be set by &lt;code&gt;my-headers.js&lt;/code&gt; - which in turn depends on the &lt;code&gt;authToken&lt;/code&gt; variable being updated, you will need to duplicate the line &lt;code&gt;* configure headers = read('classpath:my-headers.js')&lt;/code&gt; from the 'caller' feature here as well. The above example does &lt;strong&gt;not&lt;/strong&gt; use &lt;a href="#shared-scope"&gt;shared scope&lt;/a&gt;, which means that the variables in the 'calling' (parent) feature are &lt;em&gt;not&lt;/em&gt; shared by the 'called' &lt;code&gt;my-signin.feature&lt;/code&gt;. The above example can be made more simpler with the use of &lt;code&gt;call&lt;/code&gt; (or &lt;a href="#callonce"&gt;&lt;code&gt;callonce&lt;/code&gt;&lt;/a&gt;) &lt;em&gt;without&lt;/em&gt; a &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt;-assignment to a variable, and is the &lt;a href="#shared-scope"&gt;recommended pattern&lt;/a&gt; for implementing re-usable authentication setup flows.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Do look at the documentation and example for &lt;a href="#configure-headers"&gt;&lt;code&gt;configure headers&lt;/code&gt;&lt;/a&gt; also as it goes hand-in-hand with &lt;code&gt;call&lt;/code&gt;. In the above example, the end-result of the &lt;code&gt;call&lt;/code&gt; to &lt;code&gt;my-signin.feature&lt;/code&gt; resulted in the &lt;code&gt;authToken&lt;/code&gt; variable being initialized. Take a look at how the &lt;a href="#configure-headers"&gt;&lt;code&gt;configure headers&lt;/code&gt;&lt;/a&gt; example uses the &lt;code&gt;authToken&lt;/code&gt; variable.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-call-tag-selector" class="anchor" aria-hidden="true" href="#call-tag-selector"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Call Tag Selector&lt;/h3&gt;
&lt;p&gt;You can "select" a single &lt;code&gt;Scenario&lt;/code&gt; (or &lt;code&gt;Scenario&lt;/code&gt;-s or &lt;code&gt;Scenario Outline&lt;/code&gt;-s or even specific &lt;code&gt;Examples&lt;/code&gt; rows) by appending a "tag selector" at the end of the feature-file you are calling. For example:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;call read(&lt;span class="pl-s"&gt;'classpath:my-signin.feature@name=someScenarioName'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;While the tag does not need to be in the &lt;code&gt;@key=value&lt;/code&gt; form, it is recommended for readability when you start getting into the business of giving meaningful names to your &lt;code&gt;Scenario&lt;/code&gt;-s.&lt;/p&gt;
&lt;p&gt;This "tag selection" capability is designed for you to be able to "compose" flows out of existing test-suites when using the &lt;a href="karate-gatling"&gt;Karate Gatling integration&lt;/a&gt;. Normally we recommend that you keep your "re-usable" features lightweight - by limiting them to just one &lt;code&gt;Scenario&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-data-driven-features" class="anchor" aria-hidden="true" href="#data-driven-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data-Driven Features&lt;/h3&gt;
&lt;p&gt;If the argument passed to the &lt;a href="#calling-other-feature-files"&gt;call of a &lt;code&gt;*.feature&lt;/code&gt; file&lt;/a&gt; is a JSON array, something interesting happens. The feature is invoked for each item in the array. Each array element is expected to be a JSON object, and for each object - the behavior will be as described above.&lt;/p&gt;
&lt;p&gt;But this time, the return value from the &lt;code&gt;call&lt;/code&gt; step will be a JSON array of the same size as the input array. And each element of the returned array will be the 'envelope' of variables that resulted from each iteration where the &lt;code&gt;*.feature&lt;/code&gt; got invoked.&lt;/p&gt;
&lt;p&gt;Here is an example that combines the &lt;a href="#table"&gt;&lt;code&gt;table&lt;/code&gt;&lt;/a&gt; keyword with calling a &lt;code&gt;*.feature&lt;/code&gt;. Observe how the &lt;a href="#get"&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; &lt;a href="#get-short-cut"&gt;shortcut&lt;/a&gt; is used to 'distill' the result array of variable 'envelopes' into an array consisting only of &lt;a href="#response"&gt;&lt;code&gt;response&lt;/code&gt;&lt;/a&gt; payloads.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;table kittens 
&lt;span class="pl-k"&gt;  | &lt;span class="pl-s1"&gt;name&lt;/span&gt;   | &lt;span class="pl-s1"&gt;age&lt;/span&gt; |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | '&lt;span class="pl-s1"&gt;Bob&lt;/span&gt;'  |   &lt;span class="pl-s1"&gt;2&lt;/span&gt; |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | '&lt;span class="pl-s1"&gt;Wild&lt;/span&gt;' |   &lt;span class="pl-s1"&gt;1&lt;/span&gt; |&lt;/span&gt;
&lt;span class="pl-k"&gt;  | '&lt;span class="pl-s1"&gt;Nyan&lt;/span&gt;' |   &lt;span class="pl-s1"&gt;3&lt;/span&gt; |&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;def result = call read(&lt;span class="pl-s"&gt;'cat-create.feature'&lt;/span&gt;) kittens
&lt;span class="pl-k"&gt;* &lt;/span&gt;def created = $result[*].response
&lt;span class="pl-k"&gt;* &lt;/span&gt;match each created == { id: &lt;span class="pl-s"&gt;'#number'&lt;/span&gt;, name: &lt;span class="pl-s"&gt;'#string'&lt;/span&gt;, age: &lt;span class="pl-s"&gt;'#number'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match created[*].name contains only [&lt;span class="pl-s"&gt;'Bob'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Wild'&lt;/span&gt;, &lt;span class="pl-s"&gt;'Nyan'&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here is how &lt;code&gt;cat-create.feature&lt;/code&gt; could look like:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@ignore&lt;/span&gt;
Feature:

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:
  &lt;span class="pl-k"&gt;Given &lt;/span&gt;url someUrlFromConfig
  &lt;span class="pl-k"&gt;And &lt;/span&gt;path &lt;span class="pl-s"&gt;'cats'&lt;/span&gt;
  &lt;span class="pl-k"&gt;And &lt;/span&gt;request { name: &lt;span class="pl-s"&gt;'#(name)'&lt;/span&gt;, age: &lt;span class="pl-s"&gt;'#(age)'&lt;/span&gt; }
  &lt;span class="pl-k"&gt;When &lt;/span&gt;method post
  &lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you replace the &lt;code&gt;table&lt;/code&gt; with perhaps a JavaScript function call that gets some JSON data from some data-source, you can imagine how you could go about dynamic data-driven testing.&lt;/p&gt;
&lt;p&gt;Although it is just a few lines of code, take time to study the above example carefully. It is a great example of how to effectively use the unique combination of Cucumber and JsonPath that Karate provides.&lt;/p&gt;
&lt;p&gt;Also look at the &lt;a href="karate-demo"&gt;demo examples&lt;/a&gt;, especially &lt;a href="karate-demo/src/test/java/demo/search/dynamic-params.feature"&gt;&lt;code&gt;dynamic-params.feature&lt;/code&gt;&lt;/a&gt; - to compare the above approach with how the Cucumber &lt;a href="#the-cucumber-way"&gt;&lt;code&gt;Scenario Outline:&lt;/code&gt;&lt;/a&gt; can be alternatively used for data-driven tests.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-built-in-variables-for-call" class="anchor" aria-hidden="true" href="#built-in-variables-for-call"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Built-in variables for &lt;code&gt;call&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Although all properties in the passed JSON-like argument are 'unpacked' into the current scope as separate 'named' variables, it sometimes makes sense to access the whole argument and this can be done via &lt;code&gt;__arg&lt;/code&gt;. And if being called in a loop, a built-in variable called &lt;code&gt;__loop&lt;/code&gt; will also be available that will hold the value of the current loop index. So you can do things like this: &lt;code&gt;* def name = name + __loop&lt;/code&gt; - or you can use the loop index value for looking up other values that may be in scope - in a data-driven style.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Variable&lt;/th&gt;
&lt;th&gt;Refers To&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__arg&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;the single &lt;code&gt;call&lt;/code&gt; (or &lt;a href="#callonce"&gt;&lt;code&gt;callonce&lt;/code&gt;&lt;/a&gt;) argument, will be &lt;code&gt;null&lt;/code&gt; if there was none&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__loop&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;the current iteration index (starts from 0) if being called in a loop, will be &lt;code&gt;-1&lt;/code&gt; if not&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Refer to this &lt;a href="karate-demo"&gt;demo feature&lt;/a&gt; for an example: &lt;a href="karate-demo/src/test/java/demo/calltable/kitten-create.feature"&gt;&lt;code&gt;kitten-create.feature&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-copy" class="anchor" aria-hidden="true" href="#copy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;For a &lt;a href="#call"&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; (or &lt;a href="#callonce"&gt;&lt;code&gt;callonce&lt;/code&gt;&lt;/a&gt;) - payload / data structures (JSON, XML, Map-like or List-like) variables are 'passed by reference' which means that steps within the 'called' feature can update or 'mutate' them, for e.g. using the &lt;a href="#set"&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; keyword. This is actually the intent most of the time and is convenient. If you want to pass a 'clone' to a 'called' feature, you can do so using the rarely used &lt;code&gt;copy&lt;/code&gt; keyword that works very similar to &lt;a href="#type-conversion"&gt;type conversion&lt;/a&gt;. This is best explained in the last scenario of this example: &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/copy-caller.feature"&gt;&lt;code&gt;copy-caller.feature&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-calling-javascript-functions" class="anchor" aria-hidden="true" href="#calling-javascript-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Calling JavaScript Functions&lt;/h2&gt;
&lt;p&gt;Examples of &lt;a href="#javascript-functions"&gt;defining and using JavaScript functions&lt;/a&gt; appear in earlier sections of this document. Being able to define and re-use JavaScript functions is a powerful capability of Karate. For example, you can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;call re-usable functions that take complex data as an argument and return complex data that can be stored in a variable&lt;/li&gt;
&lt;li&gt;&lt;a href="#calling-java"&gt;call and interoperate with Java code&lt;/a&gt; if needed&lt;/li&gt;
&lt;li&gt;share and re-use test &lt;a href="#commonly-needed-utilities"&gt;utilities&lt;/a&gt; or 'helper' functionality across your organization&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;For an advanced example of how you can build and re-use a common set of JS functions, refer to &lt;a href="https://stackoverflow.com/a/49384760/143475" rel="nofollow"&gt;this answer on Stack Overflow&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In real-life scripts, you would typically also use this capability of Karate to &lt;a href="#configure-headers"&gt;&lt;code&gt;configure headers&lt;/code&gt;&lt;/a&gt; where the specified JavaScript function uses the variables that result from a &lt;a href="#calling-other-feature-files"&gt;sign in&lt;/a&gt; to manipulate headers for all subsequent HTTP requests. And it is worth mentioning that the Karate &lt;a href="#configuration"&gt;configuration 'bootstrap'&lt;/a&gt; routine is itself a JavaScript function.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Also refer to the &lt;a href="#eval"&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; keyword for a simpler way to execute arbitrary JavaScript that can be useful in some situations.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-js-function-argument-rules-for-call" class="anchor" aria-hidden="true" href="#js-function-argument-rules-for-call"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JS function argument rules for &lt;code&gt;call&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;When using &lt;code&gt;call&lt;/code&gt; (or &lt;a href="#callonce"&gt;&lt;code&gt;callonce&lt;/code&gt;&lt;/a&gt;), only one argument is allowed. But this does not limit you in any way, because similar to how you can &lt;a href="#calling-other-feature-files"&gt;call &lt;code&gt;*.feature files&lt;/code&gt;&lt;/a&gt;, you can pass a whole JSON object as the argument. In the case of the &lt;code&gt;call&lt;/code&gt; of a JavaScript function, you can also pass a JSON array or a primitive (string, number, boolean) as the solitary argument, and the function implementation is expected to handle whatever is passed.&lt;/p&gt;
&lt;p&gt;Instead of using &lt;code&gt;call&lt;/code&gt; (or &lt;code&gt;callonce&lt;/code&gt;) you are always free to call JavaScript functions 'normally' and then you can use more than one argument.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def adder = function(a, b){ return a + b }
&lt;span class="pl-k"&gt;* &lt;/span&gt;assert adder(1, 2) == 3&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-return-types" class="anchor" aria-hidden="true" href="#return-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Return types&lt;/h3&gt;
&lt;p&gt;Naturally, only one value can be returned.  But again, you can return a JSON object. There are two things that can happen to the returned value.&lt;/p&gt;
&lt;p&gt;Either - it can be assigned to a variable like so.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def returnValue = call myFunction&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or - if a &lt;code&gt;call&lt;/code&gt; is made without an assignment, and if the function returns a map-like object, it will add each key-value pair returned as a new variable into the execution context.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# while this looks innocent ...&lt;/span&gt;
&lt;span class="pl-c"&gt;# ... behind the scenes, it could be creating (or over-writing) a bunch of variables !&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;call someFunction&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;While this sounds dangerous and should be used with care (and limits readability), the reason this feature exists is to quickly set (or over-write) a bunch of config variables when needed. In fact, this is the mechanism used when &lt;a href="#configuration"&gt;&lt;code&gt;karate-config.js&lt;/code&gt;&lt;/a&gt; is processed on start-up.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-shared-scope" class="anchor" aria-hidden="true" href="#shared-scope"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Shared Scope&lt;/h4&gt;
&lt;p&gt;This behavior where all key-value pairs in the returned map-like object get automatically added as variables - applies to the &lt;a href="#calling-other-feature-files"&gt;calling of &lt;code&gt;*.feature&lt;/code&gt; files&lt;/a&gt; as well. In other words, when &lt;a href="#call"&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; or &lt;a href="#callonce"&gt;&lt;code&gt;callonce&lt;/code&gt;&lt;/a&gt; is used without a &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt;, the 'called' script not only shares all variables (and &lt;a href="#configure"&gt;&lt;code&gt;configure&lt;/code&gt;&lt;/a&gt; settings) but can update the shared execution context. This is very useful to boil-down those 'common' steps that you may have to perform at the start of multiple test-scripts - into one-liners. But use wisely, because called scripts will now over-write variables that may have been already defined.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def config = { user: &lt;span class="pl-s"&gt;'john'&lt;/span&gt;, password: &lt;span class="pl-s"&gt;'secret'&lt;/span&gt; }
&lt;span class="pl-c"&gt;# this next line may perform many steps and result in multiple variables set for the rest of the script&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;call read(&lt;span class="pl-s"&gt;'classpath:common-setup.feature'&lt;/span&gt;) config&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can use &lt;a href="#callonce"&gt;&lt;code&gt;callonce&lt;/code&gt;&lt;/a&gt; instead of &lt;code&gt;call&lt;/code&gt; within the &lt;a href="#script-structure"&gt;&lt;code&gt;Background&lt;/code&gt;&lt;/a&gt; in case you have multiple &lt;code&gt;Scenario&lt;/code&gt; sections or &lt;a href="#data-driven-tests"&gt;&lt;code&gt;Examples&lt;/code&gt;&lt;/a&gt;. Note the 'inline' use of the &lt;a href="#reading-files"&gt;read&lt;/a&gt; function as a short-cut above. This applies to JS functions as well:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;call read(&lt;span class="pl-s"&gt;'my-function.js'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These heavily commented &lt;a href="karate-demo"&gt;demo examples&lt;/a&gt; can help you understand 'shared scope' better, and are designed to get you started with creating re-usable 'sign-in' or authentication flows:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Scope&lt;/th&gt;
&lt;th&gt;Caller Feature&lt;/th&gt;
&lt;th&gt;Called Feature&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Isolated&lt;/td&gt;
&lt;td&gt;&lt;a href="karate-demo/src/test/java/demo/headers/call-isolated-headers.feature"&gt;&lt;code&gt;call-isolated-headers.feature&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="karate-demo/src/test/java/demo/headers/common-multiple.feature"&gt;&lt;code&gt;common-multiple.feature&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Shared&lt;/td&gt;
&lt;td&gt;&lt;a href="karate-demo/src/test/java/demo/headers/call-updates-config.feature"&gt;&lt;code&gt;call-updates-config.feature&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="karate-demo/src/test/java/demo/headers/common.feature"&gt;&lt;code&gt;common.feature&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;Once you get comfortable with Karate, you can consider moving your authentication flow into a 'global' one-time flow using &lt;a href="#karate-callsingle"&gt;&lt;code&gt;karate.callSingle()&lt;/code&gt;&lt;/a&gt;, think of it as '&lt;a href="#callonce"&gt;&lt;code&gt;callonce&lt;/code&gt;&lt;/a&gt; on steroids'.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-calling-java" class="anchor" aria-hidden="true" href="#calling-java"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Calling Java&lt;/h3&gt;
&lt;p&gt;There are examples of calling JVM classes in the section on &lt;a href="#java-interop"&gt;Java Interop&lt;/a&gt; and in the &lt;a href="karate-demo"&gt;file-upload demo&lt;/a&gt;. Also look at the section on &lt;a href="#commonly-needed-utilities"&gt;commonly needed utilities&lt;/a&gt; for more ideas.&lt;/p&gt;
&lt;p&gt;Calling any Java code is that easy.  Given this custom, user-defined Java class:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;package&lt;/span&gt; &lt;span class="pl-smi"&gt;com.mycompany&lt;/span&gt;;

&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;java.util.HashMap&lt;/span&gt;;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;java.util.Map&lt;/span&gt;;

&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;JavaDemo&lt;/span&gt; {    
    
    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;Map&amp;lt;&lt;span class="pl-smi"&gt;String&lt;/span&gt;, &lt;span class="pl-smi"&gt;Object&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;doWork&lt;/span&gt;(&lt;span class="pl-smi"&gt;String&lt;/span&gt; &lt;span class="pl-v"&gt;fromJs&lt;/span&gt;) {
        &lt;span class="pl-k"&gt;Map&amp;lt;&lt;span class="pl-smi"&gt;String&lt;/span&gt;, &lt;span class="pl-smi"&gt;Object&lt;/span&gt;&amp;gt;&lt;/span&gt; map &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-k"&gt;HashMap&amp;lt;&amp;gt;&lt;/span&gt;();
        map&lt;span class="pl-k"&gt;.&lt;/span&gt;put(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;someKey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; fromJs);
        &lt;span class="pl-k"&gt;return&lt;/span&gt; map;
    }

    &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-smi"&gt;String&lt;/span&gt; &lt;span class="pl-en"&gt;doWorkStatic&lt;/span&gt;(&lt;span class="pl-smi"&gt;String&lt;/span&gt; &lt;span class="pl-v"&gt;fromJs&lt;/span&gt;) {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; fromJs;
    }   

}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is how it can be called from a test-script via &lt;a href="#javascript-functions"&gt;JavaScript&lt;/a&gt;, and yes, even static methods can be invoked:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def doWork =
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  function(arg) {&lt;/span&gt;
&lt;span class="pl-s"&gt;    var JavaDemo = Java.type('com.mycompany.JavaDemo');&lt;/span&gt;
&lt;span class="pl-s"&gt;    var jd = new JavaDemo();&lt;/span&gt;
&lt;span class="pl-s"&gt;    return jd.doWork(arg);  &lt;/span&gt;
&lt;span class="pl-s"&gt;  }&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;
&lt;span class="pl-c"&gt;# in this case the solitary 'call' argument is of type string&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def result = call doWork &lt;span class="pl-s"&gt;'world'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match result == { someKey: &lt;span class="pl-s"&gt;'hello world'&lt;/span&gt; }

&lt;span class="pl-c"&gt;# using a static method - observe how java interop is truly seamless !&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def JavaDemo = Java.type(&lt;span class="pl-s"&gt;'com.mycompany.JavaDemo'&lt;/span&gt;)
&lt;span class="pl-k"&gt;* &lt;/span&gt;def result = JavaDemo.doWorkStatic(&lt;span class="pl-s"&gt;'world'&lt;/span&gt;)
&lt;span class="pl-k"&gt;* &lt;/span&gt;assert result == &lt;span class="pl-s"&gt;'hello world'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that JSON gets auto-converted to &lt;code&gt;Map&lt;/code&gt; (or &lt;code&gt;List&lt;/code&gt;) when making the cross-over to Java. Refer to the &lt;a href="karate-demo/src/test/java/demo/java/cats-java.feature"&gt;&lt;code&gt;cats-java.feature&lt;/code&gt;&lt;/a&gt; demo for an example.&lt;/p&gt;
&lt;p&gt;Another example is &lt;a href="karate-demo/src/test/java/demo/dogs/dogs.feature"&gt;&lt;code&gt;dogs.feature&lt;/code&gt;&lt;/a&gt; -  which actually makes JDBC (database) calls, and since the data returned from the Java code is JSON, the last section of the test is able to use &lt;a href="#match"&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; &lt;em&gt;very&lt;/em&gt; effectively for data assertions.&lt;/p&gt;
&lt;p&gt;A great example of how you can extend Karate, even bypass the HTTP client but still use Karate's test-automation effectively, is this &lt;a href="https://grpc.io" rel="nofollow"&gt;gRPC&lt;/a&gt; example by &lt;a href="https://github.com/thinkerou"&gt;@thinkerou&lt;/a&gt;: &lt;a href="https://github.com/thinkerou/karate-grpc"&gt;&lt;code&gt;karate-grpc&lt;/code&gt;&lt;/a&gt;. And you can even handle asynchronous flows such as &lt;a href="#async"&gt;listening to message-queues&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-http-basic-authentication-example" class="anchor" aria-hidden="true" href="#http-basic-authentication-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTTP Basic Authentication Example&lt;/h4&gt;
&lt;p&gt;This should make it clear why Karate does not provide 'out of the box' support for any particular HTTP authentication scheme. Things are designed so that you can plug-in what you need, without needing to compile Java code. You get to choose how to manage your environment-specific configuration values such as user-names and passwords.&lt;/p&gt;
&lt;p&gt;First the JavaScript file, &lt;code&gt;basic-auth.js&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;fn&lt;/span&gt;(&lt;span class="pl-smi"&gt;creds&lt;/span&gt;) {
  &lt;span class="pl-k"&gt;var&lt;/span&gt; temp &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;creds&lt;/span&gt;.&lt;span class="pl-smi"&gt;username&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;creds&lt;/span&gt;.&lt;span class="pl-smi"&gt;password&lt;/span&gt;;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; Base64 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Java&lt;/span&gt;.&lt;span class="pl-c1"&gt;type&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;java.util.Base64&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
  &lt;span class="pl-k"&gt;var&lt;/span&gt; encoded &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Base64&lt;/span&gt;.&lt;span class="pl-en"&gt;getEncoder&lt;/span&gt;().&lt;span class="pl-en"&gt;encodeToString&lt;/span&gt;(&lt;span class="pl-smi"&gt;temp&lt;/span&gt;.&lt;span class="pl-smi"&gt;bytes&lt;/span&gt;);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Basic &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; encoded;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here's how it works in a test-script using the &lt;a href="#header"&gt;&lt;code&gt;header&lt;/code&gt;&lt;/a&gt; keyword.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;header Authorization = call read(&lt;span class="pl-s"&gt;'basic-auth.js'&lt;/span&gt;) { username: &lt;span class="pl-s"&gt;'john'&lt;/span&gt;, password: &lt;span class="pl-s"&gt;'secret'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can set this up for all subsequent requests or dynamically generate headers for each HTTP request if you &lt;a href="#configure-headers"&gt;&lt;code&gt;configure headers&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-callonce" class="anchor" aria-hidden="true" href="#callonce"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;callonce&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Cucumber has a limitation where &lt;a href="#script-structure"&gt;&lt;code&gt;Background&lt;/code&gt;&lt;/a&gt; steps are re-run for every &lt;code&gt;Scenario&lt;/code&gt;. And if you have a &lt;code&gt;Scenario Outline&lt;/code&gt;, this happens for &lt;em&gt;every&lt;/em&gt; row in the &lt;code&gt;Examples&lt;/code&gt;. This is a problem especially for expensive, time-consuming HTTP calls, and this has been an &lt;a href="https://github.com/cucumber/cucumber-jvm/issues/515"&gt;open issue for a long time&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Karate's &lt;code&gt;callonce&lt;/code&gt; keyword behaves exactly like &lt;a href="#call"&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; but is guaranteed to execute only once. The results of the first call are cached, and any future calls will simply return the cached result instead of executing the JavaScript function (or feature) again and again.&lt;/p&gt;
&lt;p&gt;This does require you to move 'set-up' into a separate &lt;code&gt;*.feature&lt;/code&gt; (or JavaScript) file. But this totally makes sense for things not part of the 'main' test flow and which typically need to be re-usable anyway.&lt;/p&gt;
&lt;p&gt;So when you use the combination of &lt;code&gt;callonce&lt;/code&gt; in a &lt;code&gt;Background&lt;/code&gt;, you can indeed get the same effect as using a &lt;a href="http://junit.sourceforge.net/javadoc/org/junit/BeforeClass.html" rel="nofollow"&gt;&lt;code&gt;@BeforeClass&lt;/code&gt;&lt;/a&gt; annotation, and you can find examples in the &lt;a href="karate-demo"&gt;karate-demo&lt;/a&gt;, such as this one: &lt;a href="karate-demo/src/test/java/demo/callonce/call-once.feature"&gt;&lt;code&gt;callonce.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Recommended only for experienced users - &lt;a href="#karate-callsingle"&gt;&lt;code&gt;karate.callSingle()&lt;/code&gt;&lt;/a&gt; is a way to invoke a feature or function 'globally' only once.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-eval" class="anchor" aria-hidden="true" href="#eval"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;This is for evaluating arbitrary JavaScript and you are advised to use this only as a last resort ! Conditional logic is not recommended especially within test scripts because &lt;a href="https://martinfowler.com/articles/nonDeterminism.html" rel="nofollow"&gt;tests should be deterministic&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are a few situations where this comes in handy:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you &lt;em&gt;really&lt;/em&gt; don't need to assign a result to a variable&lt;/li&gt;
&lt;li&gt;statements in the &lt;code&gt;if&lt;/code&gt; form (also see &lt;a href="#conditional-logic"&gt;conditional logic&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;'one-off' logic (or &lt;a href="#java-interop"&gt;Java interop&lt;/a&gt;) where you don't need the 'ceremony' of a &lt;a href="#calling-javascript-functions"&gt;re-usable function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;JavaScript / JSON-style mutation of existing &lt;a href="#def"&gt;variables&lt;/a&gt; as a dynamic alternative to &lt;a href="#set"&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; and &lt;a href="#remove"&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; - by using &lt;a href="#karate-get"&gt;&lt;code&gt;karate.get()&lt;/code&gt;&lt;/a&gt; and &lt;a href="#karate-setpath"&gt;&lt;code&gt;karate.set()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# just perform an action, we don't care about saving the result&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;eval myJavaScriptFunction()

&lt;span class="pl-c"&gt;# do something only if a condition is true&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;eval if (zone == &lt;span class="pl-s"&gt;'zone1'&lt;/span&gt;) karate.set(&lt;span class="pl-s"&gt;'temp'&lt;/span&gt;, &lt;span class="pl-s"&gt;'after'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As a convenience, you can omit the &lt;code&gt;eval&lt;/code&gt; keyword and so you can shorten the above to:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;myJavaScriptFunction()
&lt;span class="pl-k"&gt;* &lt;/span&gt;if (zone == &lt;span class="pl-s"&gt;'zone1'&lt;/span&gt;) karate.set(&lt;span class="pl-s"&gt;'temp'&lt;/span&gt;, &lt;span class="pl-s"&gt;'after'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is &lt;strong&gt;very&lt;/strong&gt; convenient especially if you are calling a method on a variable that has been &lt;a href="#def"&gt;defined&lt;/a&gt; such as the &lt;a href="#the-karate-object"&gt;&lt;code&gt;karate&lt;/code&gt;&lt;/a&gt; object, and for general-purpose scripting needs such as &lt;a href="karate-core"&gt;UI automation&lt;/a&gt;. Note how &lt;code&gt;karate.set()&lt;/code&gt; and &lt;code&gt;karate.remove()&lt;/code&gt; below are used directly as a script "statement".&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;# you can use multiple lines of JavaScript if needed&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;eval
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  var foo = function(v){ return v * v };&lt;/span&gt;
&lt;span class="pl-s"&gt;  var nums = [0, 1, 2, 3, 4];&lt;/span&gt;
&lt;span class="pl-s"&gt;  var squares = [];&lt;/span&gt;
&lt;span class="pl-s"&gt;  for (var n in nums) {&lt;/span&gt;
&lt;span class="pl-s"&gt;    squares.push(foo(n));&lt;/span&gt;
&lt;span class="pl-s"&gt;  }&lt;/span&gt;
&lt;span class="pl-s"&gt;  karate.set('temp', squares);&lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;match temp == [0, 1, 4, 9, 16]

&lt;span class="pl-k"&gt;* &lt;/span&gt;def json = { a: 1 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;def key = &lt;span class="pl-s"&gt;'b'&lt;/span&gt;
&lt;span class="pl-c"&gt;# use dynamic path expressions to mutate json&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;json[key] = 2
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == { a: 1, b: 2 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;karate.remove(&lt;span class="pl-s"&gt;'json'&lt;/span&gt;, &lt;span class="pl-s"&gt;'$.'&lt;/span&gt; + key)
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == { a: 1 }
&lt;span class="pl-k"&gt;* &lt;/span&gt;karate.set(&lt;span class="pl-s"&gt;'json'&lt;/span&gt;, &lt;span class="pl-s"&gt;'$.c[]'&lt;/span&gt;, { d: &lt;span class="pl-s"&gt;'e'&lt;/span&gt; })
&lt;span class="pl-k"&gt;* &lt;/span&gt;match json == { a: 1, c: [{ d: &lt;span class="pl-s"&gt;'e'&lt;/span&gt; }] }&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-advanced--tricks" class="anchor" aria-hidden="true" href="#advanced--tricks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced / Tricks&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-polling" class="anchor" aria-hidden="true" href="#polling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Polling&lt;/h2&gt;
&lt;p&gt;The built-in &lt;a href="#retry-until"&gt;&lt;code&gt;retry until&lt;/code&gt;&lt;/a&gt; syntax should suffice for most needs, but if you have some specific needs, this demo example (using JavaScript) should get you up and running: &lt;a href="karate-demo/src/test/java/demo/polling/polling.feature"&gt;&lt;code&gt;polling.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-conditional-logic" class="anchor" aria-hidden="true" href="#conditional-logic"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conditional Logic&lt;/h2&gt;
&lt;p&gt;The keywords &lt;a href="#given-when-then"&gt;&lt;code&gt;Given&lt;/code&gt; &lt;code&gt;When&lt;/code&gt; &lt;code&gt;Then&lt;/code&gt;&lt;/a&gt; are only for decoration and should not be thought of as similar to an &lt;code&gt;if - then - else&lt;/code&gt; statement. And as a testing framework, Karate &lt;a href="https://martinfowler.com/articles/nonDeterminism.html" rel="nofollow"&gt;discourages tests&lt;/a&gt; that give different results on every run.&lt;/p&gt;
&lt;p&gt;That said, if you really need to implement 'conditional' checks, this can be one pattern:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def filename = zone == &lt;span class="pl-s"&gt;'zone1'&lt;/span&gt; ? &lt;span class="pl-s"&gt;'test1.feature'&lt;/span&gt; : &lt;span class="pl-s"&gt;'test2.feature'&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def result = call read(filename)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And this is another, using &lt;a href="#karate-call"&gt;&lt;code&gt;karate.call()&lt;/code&gt;&lt;/a&gt;. Here we want to &lt;a href="#call"&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; a file only if a condition is satisfied:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def result = responseStatus == 404 ? {} : karate.call(&lt;span class="pl-s"&gt;'delete-user.feature'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or if we don't care about the result, we can &lt;a href="#eval"&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; an &lt;code&gt;if&lt;/code&gt; statement:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;if (responseStatus == 200) karate.call(&lt;span class="pl-s"&gt;'delete-user.feature'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And this may give you more ideas. You can always use a &lt;a href="#javascript-functions"&gt;JavaScript function&lt;/a&gt; or &lt;a href="#calling-java"&gt;call Java&lt;/a&gt; for more complex logic.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def expected = zone == &lt;span class="pl-s"&gt;'zone1'&lt;/span&gt; ? { foo: &lt;span class="pl-s"&gt;'#string'&lt;/span&gt; } : { bar: &lt;span class="pl-s"&gt;'#number'&lt;/span&gt; }
&lt;span class="pl-k"&gt;* &lt;/span&gt;match response == expected&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In some rare cases you need to exit a &lt;code&gt;Scenario&lt;/code&gt; based on some condition. You can use &lt;a href="#karate-abort"&gt;&lt;code&gt;karate.abort()&lt;/code&gt;&lt;/a&gt; like so:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;if (responseStatus == 404) karate.abort()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also refer to &lt;a href="#polling"&gt;polling&lt;/a&gt; for more ideas.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-commonly-needed-utilities" class="anchor" aria-hidden="true" href="#commonly-needed-utilities"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commonly Needed Utilities&lt;/h2&gt;
&lt;p&gt;Since it is so easy to dive into &lt;a href="#calling-java"&gt;Java-interop&lt;/a&gt;, Karate does not include any random-number functions, uuid generator or date / time utilities out of the box. You simply roll your own.&lt;/p&gt;
&lt;p&gt;Here is an example of how to get the current date, and formatted the way you want:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def getDate =
  &lt;span class="pl-s"&gt;"""&lt;/span&gt;
&lt;span class="pl-s"&gt;  function() {&lt;/span&gt;
&lt;span class="pl-s"&gt;    var SimpleDateFormat = Java.type('java.text.SimpleDateFormat');&lt;/span&gt;
&lt;span class="pl-s"&gt;    var sdf = new SimpleDateFormat('yyyy/MM/dd');&lt;/span&gt;
&lt;span class="pl-s"&gt;    var date = new java.util.Date();&lt;/span&gt;
&lt;span class="pl-s"&gt;    return sdf.format(date);&lt;/span&gt;
&lt;span class="pl-s"&gt;  } &lt;/span&gt;
&lt;span class="pl-s"&gt;  """&lt;/span&gt;

&lt;span class="pl-k"&gt;* &lt;/span&gt;def temp = getDate()
&lt;span class="pl-k"&gt;* &lt;/span&gt;print temp&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And the above will result in something like this being logged: &lt;code&gt;[print] 2017/10/16&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here below are a few more common examples:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Utility&lt;/th&gt;
&lt;th&gt;Recipe&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;System Time (as a string)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function(){ return java.lang.System.currentTimeMillis() + '' }&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;UUID&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function(){ return java.util.UUID.randomUUID() + '' }&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Random Number (&lt;code&gt;0&lt;/code&gt; to &lt;code&gt;max-1&lt;/code&gt;)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function(max){ return Math.floor(Math.random() * max) }&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Case Insensitive Comparison&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function(a, b){ return a.equalsIgnoreCase(b) }&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sleep or Wait for &lt;code&gt;pause&lt;/code&gt; milliseconds&lt;/td&gt;
&lt;td&gt;&lt;code&gt;function(pause){ java.lang.Thread.sleep(pause) }&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The first three are good enough for random string generation for most situations. Note that if you need to do a lot of case-insensitive string checks, &lt;a href="#karate-lowercase"&gt;&lt;code&gt;karate.lowerCase()&lt;/code&gt;&lt;/a&gt; is what you are looking for.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-multiple-functions-in-one-file" class="anchor" aria-hidden="true" href="#multiple-functions-in-one-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multiple Functions in One File&lt;/h3&gt;
&lt;p&gt;If you find yourself needing a complex helper or utility function, we strongly recommend that you &lt;a href="#calling-java"&gt;use Java&lt;/a&gt; because it is much easier to maintain and even debug if needed. And if you need multiple functions, you can easily organize them into a single Java class with multiple static methods.&lt;/p&gt;
&lt;p&gt;That said, if you want to stick to JavaScript, but find yourself accumulating a lot of helper functions that you need to use in multiple feature files, the following pattern is recommended.&lt;/p&gt;
&lt;p&gt;You can organize multiple "common" utilities into a single re-usable feature file as follows e.g. &lt;code&gt;common.feature&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@ignore&lt;/span&gt;
Feature:

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:
  &lt;span class="pl-k"&gt;* &lt;/span&gt;def hello = function(){ return &lt;span class="pl-s"&gt;'hello'&lt;/span&gt; }
  &lt;span class="pl-k"&gt;* &lt;/span&gt;def world = function(){ return &lt;span class="pl-s"&gt;'world'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then you have two options. The first option using &lt;a href="#shared-scope"&gt;shared scope&lt;/a&gt; should be fine for most projects, but if you want to "name space" your functions, use "isolated scope":&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; function re-use, global / shared scope&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;call read(&lt;span class="pl-s"&gt;'common.feature'&lt;/span&gt;)
    &lt;span class="pl-k"&gt;* &lt;/span&gt;assert hello() == &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;assert world() == &lt;span class="pl-s"&gt;'world'&lt;/span&gt;

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; function re-use, isolated / name-spaced scope&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def utils = call read(&lt;span class="pl-s"&gt;'common.feature'&lt;/span&gt;)
    &lt;span class="pl-k"&gt;* &lt;/span&gt;assert utils.hello() == &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;
    &lt;span class="pl-k"&gt;* &lt;/span&gt;assert utils.world() == &lt;span class="pl-s"&gt;'world'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-async" class="anchor" aria-hidden="true" href="#async"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Async&lt;/h2&gt;
&lt;p&gt;The JS API has a couple of methods - &lt;a href="#karate-signal"&gt;&lt;code&gt;karate.signal(result)&lt;/code&gt;&lt;/a&gt; and &lt;a href="#karate-listen"&gt;&lt;code&gt;karate.listen(timeout)&lt;/code&gt;&lt;/a&gt; that are useful for involving asynchronous flows into a test. This is best &lt;a href="https://github.com/intuit/karate/tree/master/karate-netty#consumer-provider-example"&gt;explained&lt;/a&gt; in this &lt;a href="karate-demo/src/test/java/mock/contract/payment-service.feature"&gt;example&lt;/a&gt; that involves listening to an ActiveMQ / JMS queue. Note how &lt;a href="#javascript-functions"&gt;JS functions&lt;/a&gt; defined at run-time can be mixed with custom &lt;a href="#java-interop"&gt;Java code&lt;/a&gt; to get things done.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Background&lt;/span&gt;:
&lt;span class="pl-k"&gt;* &lt;/span&gt;def QueueConsumer = Java.type(&lt;span class="pl-s"&gt;'mock.contract.QueueConsumer'&lt;/span&gt;)
&lt;span class="pl-k"&gt;* &lt;/span&gt;def queue = new QueueConsumer(queueName)
&lt;span class="pl-k"&gt;* &lt;/span&gt;def handler = function(msg){ karate.signal(msg) }
&lt;span class="pl-k"&gt;* &lt;/span&gt;queue.listen(handler)
&lt;span class="pl-k"&gt;* &lt;/span&gt;url paymentServiceUrl + &lt;span class="pl-s"&gt;'/payments'&lt;/span&gt;

&lt;span class="pl-k"&gt;Scenario&lt;/span&gt;:&lt;span class="pl-s"&gt; create, get, update, list and delete payments&lt;/span&gt;
    &lt;span class="pl-k"&gt;Given &lt;/span&gt;request { amount: 5.67, description: &lt;span class="pl-s"&gt;'test one'&lt;/span&gt; }
    &lt;span class="pl-k"&gt;When &lt;/span&gt;method post
    &lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200
    &lt;span class="pl-k"&gt;And &lt;/span&gt;match response == { id: &lt;span class="pl-s"&gt;'#number'&lt;/span&gt;, amount: 5.67, description: &lt;span class="pl-s"&gt;'test one'&lt;/span&gt; }
    &lt;span class="pl-k"&gt;And &lt;/span&gt;def id = response.id
    &lt;span class="pl-k"&gt;* &lt;/span&gt;json shipment = karate.listen(5000)
    &lt;span class="pl-k"&gt;* &lt;/span&gt;print &lt;span class="pl-s"&gt;'### received:'&lt;/span&gt;, shipment
    &lt;span class="pl-k"&gt;* &lt;/span&gt;match shipment == { paymentId: &lt;span class="pl-s"&gt;'#(id)'&lt;/span&gt;, status: &lt;span class="pl-s"&gt;'shipped'&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-websocket" class="anchor" aria-hidden="true" href="#websocket"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WebSocket&lt;/h2&gt;
&lt;p&gt;Karate also has built-in support for &lt;a href="http://www.websocket.org" rel="nofollow"&gt;websocket&lt;/a&gt; that is based on the &lt;a href="#async"&gt;async&lt;/a&gt; capability. The following method signatures are available on the &lt;a href="#the-karate-object"&gt;&lt;code&gt;karate&lt;/code&gt; JS object&lt;/a&gt; to obtain a websocket reference:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;karate.webSocket(url)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;karate.webSocket(url, handler)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;karate.webSocket(url, handler, options)&lt;/code&gt; - where &lt;code&gt;options&lt;/code&gt; is an optional JSON (or map-like) object that takes the following optional keys:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;subProtocol&lt;/code&gt; - in case the server expects it&lt;/li&gt;
&lt;li&gt;&lt;code&gt;headers&lt;/code&gt; - another JSON of key-value pairs&lt;/li&gt;
&lt;li&gt;&lt;code&gt;maxPayloadSize&lt;/code&gt; - this defaults to 4194304 (bytes, around 4 MB)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These will init a websocket client for the given &lt;code&gt;url&lt;/code&gt; and optional &lt;code&gt;subProtocol&lt;/code&gt;. If a &lt;code&gt;handler&lt;/code&gt; &lt;a href="#javascript-functions"&gt;function&lt;/a&gt; (returning a boolean) is provided - it will be used to complete the "wait" of &lt;code&gt;socket.listen()&lt;/code&gt; if &lt;code&gt;true&lt;/code&gt; is returned - where &lt;code&gt;socket&lt;/code&gt; is the reference to the websocket client returned by &lt;code&gt;karate.webSocket()&lt;/code&gt;. A handler function is needed only if you have to ignore other incoming traffic. If you need custom headers for the websocket handshake, use JSON as the last argument.&lt;/p&gt;
&lt;p&gt;Here is an example, where the same websocket connection is used to send as well as receive a message.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;* &lt;/span&gt;def handler = function(msg){ return msg.startsWith(&lt;span class="pl-s"&gt;'hello'&lt;/span&gt;) }
&lt;span class="pl-k"&gt;* &lt;/span&gt;def socket = karate.webSocket(demoBaseUrl + &lt;span class="pl-s"&gt;'/websocket'&lt;/span&gt;, handler)
&lt;span class="pl-k"&gt;* &lt;/span&gt;socket.send(&lt;span class="pl-s"&gt;'Billie'&lt;/span&gt;)
&lt;span class="pl-k"&gt;* &lt;/span&gt;def result = socket.listen(5000)
&lt;span class="pl-k"&gt;* &lt;/span&gt;match result == &lt;span class="pl-s"&gt;'hello Billie !'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For handling binary messages, the same &lt;code&gt;karate.webSocket()&lt;/code&gt; method signatures exist for &lt;code&gt;karate.webSocketBinary()&lt;/code&gt;. Refer to these examples for more: &lt;a href="karate-demo/src/test/java/demo/websocket/echo.feature"&gt;&lt;code&gt;echo.feature&lt;/code&gt;&lt;/a&gt; | &lt;a href="karate-demo/src/test/java/demo/websocket/websocket.feature"&gt;&lt;code&gt;websocket.feature&lt;/code&gt;&lt;/a&gt;. Note that any websocket instances created will be auto-closed at the end of the &lt;code&gt;Scenario&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tags" class="anchor" aria-hidden="true" href="#tags"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tags&lt;/h2&gt;
&lt;p&gt;Gherkin has a great way to sprinkle meta-data into test-scripts - which gives you some interesting options when running tests in bulk.  The most common use-case would be to partition your tests into 'smoke', 'regression' and the like - which enables being able to selectively execute a sub-set of tests.&lt;/p&gt;
&lt;p&gt;The documentation on how to run tests via the &lt;a href="#test-suites"&gt;command line&lt;/a&gt; has an example of how to use tags to decide which tests to &lt;em&gt;not&lt;/em&gt; run (or ignore). Also see &lt;a href="karate-demo/src/test/java/demo/tags/first.feature"&gt;&lt;code&gt;first.feature&lt;/code&gt;&lt;/a&gt; and &lt;a href="karate-demo/src/test/java/demo/tags/second.feature"&gt;&lt;code&gt;second.feature&lt;/code&gt;&lt;/a&gt; in the &lt;a href="karate-demo"&gt;demos&lt;/a&gt;. If you find yourself juggling multiple tags with logical &lt;code&gt;AND&lt;/code&gt; and &lt;code&gt;OR&lt;/code&gt; complexity, refer to this &lt;a href="https://stackoverflow.com/a/34543352/143475" rel="nofollow"&gt;Stack Overflow answer&lt;/a&gt; and this &lt;a href="https://testingneeds.wordpress.com/2015/09/15/junit-runner-with-cucumberoptions/" rel="nofollow"&gt;blog post&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For advanced users, Karate supports being able to query for tags within a test, and even tags in a &lt;code&gt;@name=value&lt;/code&gt; form. Refer to &lt;a href="#karate-tags"&gt;&lt;code&gt;karate.tags&lt;/code&gt;&lt;/a&gt; and &lt;a href="#karate-tagvalues"&gt;&lt;code&gt;karate.tagValues&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-tags-and-examples" class="anchor" aria-hidden="true" href="#tags-and-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tags And Examples&lt;/h3&gt;
&lt;p&gt;A little-known capability of the Cucumber / Gherkin syntax is to be able to tag even specific rows in a bunch of examples ! You have to repeat the &lt;code&gt;Examples&lt;/code&gt; section for each tag. The example below combines this with the advanced features described above.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Scenario Outline&lt;/span&gt;:&lt;span class="pl-s"&gt; examples partitioned by tag&lt;/span&gt;
&lt;span class="pl-k"&gt;* &lt;/span&gt;def vals = karate.tagValues
&lt;span class="pl-k"&gt;* &lt;/span&gt;match vals.region[0] == &lt;span class="pl-s"&gt;'&amp;lt;expected&amp;gt;'&lt;/span&gt;

  &lt;span class="pl-k"&gt;@region=US&lt;/span&gt;
  &lt;span class="pl-k"&gt;Examples&lt;/span&gt;:
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;expected&lt;/span&gt; |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;US&lt;/span&gt;       |&lt;/span&gt;

  &lt;span class="pl-k"&gt;@region=GB&lt;/span&gt;
  &lt;span class="pl-k"&gt;Examples&lt;/span&gt;:
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;expected&lt;/span&gt; |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;GB&lt;/span&gt;       |&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-dynamic-port-numbers" class="anchor" aria-hidden="true" href="#dynamic-port-numbers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dynamic Port Numbers&lt;/h2&gt;
&lt;p&gt;In situations where you start an (embedded) application server as part of the test set-up phase, a typical challenge is that the HTTP port may be determined at run-time. So how can you get this value injected into the Karate configuration ?&lt;/p&gt;
&lt;p&gt;It so happens that the &lt;a href="#the-karate-object"&gt;&lt;code&gt;karate&lt;/code&gt;&lt;/a&gt; object has a field called &lt;code&gt;properties&lt;/code&gt; which can read a Java system-property by name like this: &lt;a href="#karate-properties"&gt;&lt;code&gt;karate.properties['myName']&lt;/code&gt;&lt;/a&gt;. Since the &lt;code&gt;karate&lt;/code&gt; object is injected within &lt;a href="#configuration"&gt;&lt;code&gt;karate-config.js&lt;/code&gt;&lt;/a&gt; on start-up, it is a simple and effective way for other processes within the same JVM to pass configuration values to Karate at run-time. Refer to the 'demo' &lt;a href="karate-demo/src/test/java/karate-config.js"&gt;&lt;code&gt;karate-config.js&lt;/code&gt;&lt;/a&gt; for an example and how the &lt;code&gt;demo.server.port&lt;/code&gt; system-property is set-up in the test runner: &lt;a href="karate-demo/src/test/java/demo/TestBase.java"&gt;&lt;code&gt;TestBase.java&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-java-api" class="anchor" aria-hidden="true" href="#java-api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Java API&lt;/h2&gt;
&lt;p&gt;It should be clear now that Karate provides a super-simple way to make HTTP requests compared to how you would have done so in Java. It is also possible to invoke a feature file via a Java API which can be very useful in some test-automation situations.&lt;/p&gt;
&lt;p&gt;A common use case is to mix API-calls into a larger test-suite, for example a Selenium or WebDriver UI test. So you can use Karate to set-up data via API calls, then run the UI test-automation, and finally again use Karate to assert that the system-state is as expected. Note that you can even include calls to a database from Karate using &lt;a href="#calling-java"&gt;Java interop&lt;/a&gt;. And &lt;a href="karate-demo/src/test/java/demo/dogs/dogs.feature"&gt;this example&lt;/a&gt; may make it clear why using Karate itself to drive even your UI-tests may be a good idea.&lt;/p&gt;
&lt;p&gt;There are two static methods in &lt;code&gt;com.intuit.karate.Runner&lt;/code&gt; (&lt;code&gt;runFeature()&lt;/code&gt; and &lt;code&gt;runClasspathFeature()&lt;/code&gt;) which are best explained in this demo unit-test: &lt;a href="karate-demo/src/test/java/demo/java/JavaApiTest.java"&gt;&lt;code&gt;JavaApiTest.java&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can optionally pass in variable values or over-ride config via a &lt;code&gt;HashMap&lt;/code&gt; or leave the second-last argument as &lt;code&gt;null&lt;/code&gt;. The variable state after feature execution would be returned as a &lt;code&gt;Map&amp;lt;String, Object&amp;gt;&lt;/code&gt;. The last &lt;code&gt;boolean&lt;/code&gt; argument is whether the &lt;a href="#configuration"&gt;&lt;code&gt;karate-config.js&lt;/code&gt;&lt;/a&gt; should be processed or not. Refer to the documentation on &lt;a href="#type-conversion"&gt;type-conversion&lt;/a&gt; to make sure you can 'unpack' data returned from Karate correctly, especially when dealing with XML.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-hooks" class="anchor" aria-hidden="true" href="#hooks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hooks&lt;/h2&gt;
&lt;p&gt;If you are looking for &lt;a href="http://toolsqa.com/cucumber/cucumber-hooks/" rel="nofollow"&gt;Cucumber 'hooks'&lt;/a&gt; Karate does not support them, mainly because they depend on Java code, which goes against the Karate Way™.&lt;/p&gt;
&lt;p&gt;Instead, Karate gives you all you need as part of the syntax. Here is a summary:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;To Run Some Code&lt;/th&gt;
&lt;th&gt;How&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Before &lt;em&gt;everything&lt;/em&gt; (or 'globally' once)&lt;/td&gt;
&lt;td&gt;Use &lt;a href="#karate-callsingle"&gt;&lt;code&gt;karate.callSingle()&lt;/code&gt;&lt;/a&gt; in &lt;a href="#karate-configjs"&gt;&lt;code&gt;karate-config.js&lt;/code&gt;&lt;/a&gt;. Only recommended for advanced users, but this guarantees a routine is run only once, &lt;em&gt;even&lt;/em&gt; when &lt;a href="#parallel-execution"&gt;running tests in parallel&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Before every &lt;code&gt;Scenario&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Use the &lt;a href="#script-structure"&gt;&lt;code&gt;Background&lt;/code&gt;&lt;/a&gt;. Note that &lt;a href="#karate-configjs"&gt;&lt;code&gt;karate-config.js&lt;/code&gt;&lt;/a&gt; is processed before &lt;em&gt;every&lt;/em&gt; &lt;code&gt;Scenario&lt;/code&gt; - so you can choose to put "global" config here, for example using &lt;a href="#karate-configure"&gt;&lt;code&gt;karate.configure()&lt;/code&gt;&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Once (or at the start of) every &lt;code&gt;Feature&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Use a &lt;a href="#callonce"&gt;&lt;code&gt;callonce&lt;/code&gt;&lt;/a&gt; in the &lt;a href="#script-structure"&gt;&lt;code&gt;Background&lt;/code&gt;&lt;/a&gt;. The advantage is that you can set up variables (using &lt;a href="#def"&gt;&lt;code&gt;def&lt;/code&gt;&lt;/a&gt; if needed) which can be used in all &lt;code&gt;Scenario&lt;/code&gt;-s within that &lt;code&gt;Feature&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;After every &lt;code&gt;Scenario&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#configure"&gt;&lt;code&gt;configure afterScenario&lt;/code&gt;&lt;/a&gt; (see &lt;a href="karate-demo/src/test/java/demo/hooks/hooks.feature"&gt;example&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;At the end of the &lt;code&gt;Feature&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#configure"&gt;&lt;code&gt;configure afterFeature&lt;/code&gt;&lt;/a&gt; (see &lt;a href="karate-demo/src/test/java/demo/hooks/hooks.feature"&gt;example&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-data-driven-tests" class="anchor" aria-hidden="true" href="#data-driven-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Driven Tests&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-the-cucumber-way" class="anchor" aria-hidden="true" href="#the-cucumber-way"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Cucumber Way&lt;/h3&gt;
&lt;p&gt;Cucumber has a concept of &lt;a href="https://docs.cucumber.io/gherkin/reference/#scenario-outline" rel="nofollow"&gt;Scenario Outlines&lt;/a&gt; where you can re-use a set of data-driven steps and assertions, and the data can be declared in a very user-friendly fashion. Observe the usage of &lt;code&gt;Scenario Outline:&lt;/code&gt; instead of &lt;code&gt;Scenario:&lt;/code&gt;, and the new &lt;code&gt;Examples:&lt;/code&gt; section.&lt;/p&gt;
&lt;p&gt;You should take a minute to compare this with the &lt;a href="https://github.com/basdijkstra/rest-assured-workshop/blob/d9734da98bfcd8087055bdcd78545581dd23cb77/src/test/java/answers/RestAssuredAnswers2Test.java"&gt;exact same example implemented in REST-assured and TestNG&lt;/a&gt;. Note that this example only does a "string equals" check on &lt;em&gt;parts&lt;/em&gt; of the JSON, but with Karate you are always encouraged to match the &lt;em&gt;entire&lt;/em&gt; payload in one step.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Feature&lt;/span&gt;:&lt;span class="pl-s"&gt; karate answers 2&lt;/span&gt;

&lt;span class="pl-k"&gt;Background&lt;/span&gt;:
  &lt;span class="pl-k"&gt;* &lt;/span&gt;url &lt;span class="pl-s"&gt;'http://localhost:8080'&lt;/span&gt;

&lt;span class="pl-k"&gt;Scenario Outline&lt;/span&gt;:&lt;span class="pl-s"&gt; given circuit name, validate country&lt;/span&gt;
  &lt;span class="pl-k"&gt;Given &lt;/span&gt;path &lt;span class="pl-s"&gt;'api/f1/circuits/&amp;lt;name&amp;gt;.json'&lt;/span&gt;
  &lt;span class="pl-k"&gt;When &lt;/span&gt;method get
  &lt;span class="pl-k"&gt;Then &lt;/span&gt;match $.MRData.CircuitTable.Circuits[0].Location.country == &lt;span class="pl-s"&gt;'&amp;lt;country&amp;gt;'&lt;/span&gt;

  &lt;span class="pl-k"&gt;Examples&lt;/span&gt;:
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;name&lt;/span&gt;   | &lt;span class="pl-s1"&gt;country&lt;/span&gt;  |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;monza&lt;/span&gt;  | &lt;span class="pl-s1"&gt;Italy&lt;/span&gt;    |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;spa&lt;/span&gt;    | &lt;span class="pl-s1"&gt;Belgium&lt;/span&gt;  |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;sepang&lt;/span&gt; | &lt;span class="pl-s1"&gt;Malaysia&lt;/span&gt; |&lt;/span&gt;

&lt;span class="pl-k"&gt;Scenario Outline&lt;/span&gt;:&lt;span class="pl-s"&gt; given race number, validate number of pitstops for Max Verstappen in 2015&lt;/span&gt;
  &lt;span class="pl-k"&gt;Given &lt;/span&gt;path &lt;span class="pl-s"&gt;'api/f1/2015/&amp;lt;race&amp;gt;/drivers/max_verstappen/pitstops.json'&lt;/span&gt;
  &lt;span class="pl-k"&gt;When &lt;/span&gt;method get
  &lt;span class="pl-k"&gt;Then &lt;/span&gt;assert response.MRData.RaceTable.Races[0].PitStops.length == &lt;span class="pl-smi"&gt;&amp;lt;stops&amp;gt;&lt;/span&gt;

  &lt;span class="pl-k"&gt;Examples&lt;/span&gt;:
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;race&lt;/span&gt; | &lt;span class="pl-s1"&gt;stops&lt;/span&gt; |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;1&lt;/span&gt;    | &lt;span class="pl-s1"&gt;1&lt;/span&gt;     |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;2&lt;/span&gt;    | &lt;span class="pl-s1"&gt;3&lt;/span&gt;     |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;3&lt;/span&gt;    | &lt;span class="pl-s1"&gt;2&lt;/span&gt;     |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;4&lt;/span&gt;    | &lt;span class="pl-s1"&gt;2&lt;/span&gt;     |&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is great for testing boundary conditions against a single end-point, with the added bonus that your test becomes even more readable. This approach can certainly enable product-owners or domain-experts who are not programmer-folk, to review, and even collaborate on test-scenarios and scripts.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-scenario-outline-enhancements" class="anchor" aria-hidden="true" href="#scenario-outline-enhancements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Scenario Outline Enhancements&lt;/h3&gt;
&lt;p&gt;Karate has enhanced the Cucumber &lt;code&gt;Scenario Outline&lt;/code&gt; as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Type Hints&lt;/strong&gt;: if the &lt;code&gt;Examples&lt;/code&gt; column header has a &lt;code&gt;!&lt;/code&gt; appended, each value will be evaluated as a JavaScript data-type (number, boolean, or &lt;em&gt;even&lt;/em&gt; in-line JSON) - else it defaults to string.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Magic Variables&lt;/strong&gt;: &lt;code&gt;__row&lt;/code&gt; gives you the entire row as a JSON object, and &lt;code&gt;__num&lt;/code&gt; gives you the row index (the first row is &lt;code&gt;0&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Auto Variables&lt;/strong&gt;: in addition to &lt;code&gt;__row&lt;/code&gt;, each column key-value will be available as a separate &lt;a href="#def"&gt;variable&lt;/a&gt;, which greatly simplifies JSON manipulation - especially when you want to re-use JSON &lt;a href="#reading-files"&gt;files&lt;/a&gt; containing &lt;a href="#embedded-expressions"&gt;embedded expressions&lt;/a&gt;.
&lt;ul&gt;
&lt;li&gt;You can disable the "auto variables" behavior by setting the &lt;code&gt;outlineVariablesAuto&lt;/code&gt; &lt;a href="#configure"&gt;&lt;code&gt;configure&lt;/code&gt; setting&lt;/a&gt; to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Any empty cells will result in a &lt;code&gt;null&lt;/code&gt; value for that column-key&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These are best explained with &lt;a href="karate-junit4/src/test/java/com/intuit/karate/junit4/demos/outline.feature"&gt;examples&lt;/a&gt;. You can choose between the string-placeholder style &lt;code&gt;&amp;lt;foo&amp;gt;&lt;/code&gt; or &lt;em&gt;directly&lt;/em&gt; refer to the &lt;a href="#def"&gt;variable&lt;/a&gt; &lt;code&gt;foo&lt;/code&gt; (or even the &lt;em&gt;whole row&lt;/em&gt; JSON as &lt;code&gt;__row&lt;/code&gt;) in JSON-friendly &lt;a href="#karate-expressions"&gt;expressions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that even the scenario name can accept placeholders - which is very useful in reports.&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Scenario Outline&lt;/span&gt;:&lt;span class="pl-s"&gt; name is &amp;lt;name&amp;gt; and age is &amp;lt;age&amp;gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;* &lt;/span&gt;def temp = &lt;span class="pl-s"&gt;'&amp;lt;name&amp;gt;'&lt;/span&gt;
  &lt;span class="pl-k"&gt;* &lt;/span&gt;match temp == name
  &lt;span class="pl-k"&gt;* &lt;/span&gt;match temp == __row.name
  &lt;span class="pl-k"&gt;* &lt;/span&gt;def expected = __num == 0 ? &lt;span class="pl-s"&gt;'name is Bob and age is 5'&lt;/span&gt; : &lt;span class="pl-s"&gt;'name is Nyan and age is 6'&lt;/span&gt;
  &lt;span class="pl-k"&gt;* &lt;/span&gt;match expected == karate.info.scenarioName

  &lt;span class="pl-k"&gt;Examples&lt;/span&gt;:
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;name&lt;/span&gt; | &lt;span class="pl-s1"&gt;age&lt;/span&gt; |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;Bob&lt;/span&gt;  | &lt;span class="pl-s1"&gt;5&lt;/span&gt;   |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;Nyan&lt;/span&gt; | &lt;span class="pl-s1"&gt;6&lt;/span&gt;   |&lt;/span&gt;

&lt;span class="pl-k"&gt;Scenario Outline&lt;/span&gt;:&lt;span class="pl-s"&gt; magic variables with type hints&lt;/span&gt;
  &lt;span class="pl-k"&gt;* &lt;/span&gt;def expected = [{ name: &lt;span class="pl-s"&gt;'Bob'&lt;/span&gt;, age: 5 }, { name: &lt;span class="pl-s"&gt;'Nyan'&lt;/span&gt;, age: 6 }]
  &lt;span class="pl-k"&gt;* &lt;/span&gt;match __row == expected[__num]

  &lt;span class="pl-k"&gt;Examples&lt;/span&gt;:
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;name&lt;/span&gt; | &lt;span class="pl-s1"&gt;age&lt;/span&gt;! |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;Bob&lt;/span&gt;  | &lt;span class="pl-s1"&gt;5&lt;/span&gt;    |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;Nyan&lt;/span&gt; | &lt;span class="pl-s1"&gt;6&lt;/span&gt;    |&lt;/span&gt;

&lt;span class="pl-k"&gt;Scenario Outline&lt;/span&gt;:&lt;span class="pl-s"&gt; embedded expressions and type hints&lt;/span&gt;
  &lt;span class="pl-k"&gt;* &lt;/span&gt;match __row == { name: &lt;span class="pl-s"&gt;'#(name)'&lt;/span&gt;, alive: &lt;span class="pl-s"&gt;'#boolean'&lt;/span&gt; }

  &lt;span class="pl-k"&gt;Examples&lt;/span&gt;:
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;name&lt;/span&gt; | &lt;span class="pl-s1"&gt;alive&lt;/span&gt;! |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;Bob&lt;/span&gt;  | &lt;span class="pl-s1"&gt;false&lt;/span&gt;  |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;Nyan&lt;/span&gt; | &lt;span class="pl-s1"&gt;true&lt;/span&gt;   |&lt;/span&gt;

&lt;span class="pl-k"&gt;Scenario Outline&lt;/span&gt;:&lt;span class="pl-s"&gt; inline json&lt;/span&gt;
  &lt;span class="pl-k"&gt;* &lt;/span&gt;match __row == { first: &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;, second: { a: 1 } }
  &lt;span class="pl-k"&gt;* &lt;/span&gt;match first == &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;
  &lt;span class="pl-k"&gt;* &lt;/span&gt;match second == { a: 1 }

  &lt;span class="pl-k"&gt;Examples&lt;/span&gt;:
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;first&lt;/span&gt;  | &lt;span class="pl-s1"&gt;second&lt;/span&gt;!  |&lt;/span&gt;
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;hello&lt;/span&gt;  | { &lt;span class="pl-s1"&gt;a&lt;/span&gt;: &lt;span class="pl-s1"&gt;1&lt;/span&gt; } |&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For another example, see: &lt;a href="karate-demo/src/test/java/demo/outline/examples.feature"&gt;&lt;code&gt;examples.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-the-karate-way" class="anchor" aria-hidden="true" href="#the-karate-way"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Karate Way&lt;/h3&gt;
&lt;p&gt;The limitation of the Cucumber &lt;code&gt;Scenario Outline:&lt;/code&gt; (seen above) is that the number of rows in the &lt;code&gt;Examples:&lt;/code&gt; is fixed. But take a look at how Karate can &lt;a href="#data-driven-features"&gt;loop over a &lt;code&gt;*.feature&lt;/code&gt; file&lt;/a&gt; for each object in a JSON array - which gives you dynamic data-driven testing, if you need it. For advanced examples, refer to some of the scenarios within this &lt;a href="karate-demo"&gt;demo&lt;/a&gt;: &lt;a href="karate-demo/src/test/java/demo/search/dynamic-params.feature#L70"&gt;&lt;code&gt;dynamic-params.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also see the option below, where you can data-drive an &lt;code&gt;Examples:&lt;/code&gt; table using JSON.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-dynamic-scenario-outline" class="anchor" aria-hidden="true" href="#dynamic-scenario-outline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dynamic Scenario Outline&lt;/h3&gt;
&lt;p&gt;You can feed an &lt;code&gt;Examples&lt;/code&gt; table from a JSON array, which is great for those situations where the table-content is dynamically resolved at run-time. This capability is triggered when the table consists of a single "cell", i.e. there is exactly one row and one column in the table.  Here is an example:&lt;/p&gt;
&lt;div class="highlight highlight-text-gherkin-feature"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;Feature&lt;/span&gt;:&lt;span class="pl-s"&gt; scenario outline using a dynamic table&lt;/span&gt;

&lt;span class="pl-k"&gt;Background&lt;/span&gt;:
    &lt;span class="pl-k"&gt;* &lt;/span&gt;def kittens = read(&lt;span class="pl-s"&gt;'../callarray/kittens.json'&lt;/span&gt;)

&lt;span class="pl-k"&gt;Scenario Outline&lt;/span&gt;:&lt;span class="pl-s"&gt; cat name: &amp;lt;name&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;Given &lt;/span&gt;url demoBaseUrl
    &lt;span class="pl-k"&gt;And &lt;/span&gt;path &lt;span class="pl-s"&gt;'cats'&lt;/span&gt;
    &lt;span class="pl-k"&gt;And &lt;/span&gt;request { name: &lt;span class="pl-s"&gt;'&amp;lt;name&amp;gt;'&lt;/span&gt; }
    &lt;span class="pl-k"&gt;When &lt;/span&gt;method post
    &lt;span class="pl-k"&gt;Then &lt;/span&gt;status 200
    &lt;span class="pl-k"&gt;And &lt;/span&gt;match response == { id: &lt;span class="pl-s"&gt;'#number'&lt;/span&gt;, name: &lt;span class="pl-s"&gt;'&amp;lt;name&amp;gt;'&lt;/span&gt; }

&lt;span class="pl-c"&gt;    # the single cell can be any valid karate expression&lt;/span&gt;
&lt;span class="pl-c"&gt;    # and even reference a variable defined in the Background&lt;/span&gt;
    &lt;span class="pl-k"&gt;Examples&lt;/span&gt;:
&lt;span class="pl-k"&gt;    | &lt;span class="pl-s1"&gt;kittens&lt;/span&gt; |&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The great thing about this approach is that you can set-up the JSON array using the &lt;code&gt;Background&lt;/code&gt; section. Any &lt;a href="#karate-expressions"&gt;Karate expression&lt;/a&gt; can be used in the "cell expression", and you can even use &lt;a href="#calling-java"&gt;Java-interop&lt;/a&gt; to use external data-sources such as a database. Note that Karate has built-in support for &lt;a href="#csv-files"&gt;CSV files&lt;/a&gt; and here is an example: &lt;a href="karate-demo/src/test/java/demo/outline/dynamic-csv.feature"&gt;&lt;code&gt;dynamic-csv.feature&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>intuit</author><guid isPermaLink="false">https://github.com/intuit/karate</guid><pubDate>Thu, 06 Feb 2020 00:09:00 GMT</pubDate></item><item><title>trojan-gfw/igniter #10 in Java, This week</title><link>https://github.com/trojan-gfw/igniter</link><description>&lt;p&gt;&lt;i&gt;A trojan client for Android (UNDER CONSTRUCTION).&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-igniter" class="anchor" aria-hidden="true" href="#igniter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;igniter&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/trojan-gfw/igniter/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/201abe83d18b65de2eccd8227525abdcc241d680/68747470733a2f2f636972636c6563692e636f6d2f67682f74726f6a616e2d6766772f69676e697465722f747265652f6d61737465722e7376673f7374796c653d737667" alt="CircleCI" data-canonical-src="https://circleci.com/gh/trojan-gfw/igniter/tree/master.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A trojan client for Android.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-thanks" class="anchor" aria-hidden="true" href="#thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thanks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Dreamacro/clash &lt;a href="https://github.com/Dreamacro/clash/blob/master/LICENSE"&gt;MIT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;eycorsican/go-tun2socks &lt;a href="https://github.com/eycorsican/go-tun2socks/blob/master/LICENSE"&gt;MIT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>trojan-gfw</author><guid isPermaLink="false">https://github.com/trojan-gfw/igniter</guid><pubDate>Thu, 06 Feb 2020 00:10:00 GMT</pubDate></item><item><title>h2pl/Java-Tutorial #11 in Java, This week</title><link>https://github.com/h2pl/Java-Tutorial</link><description>&lt;p&gt;&lt;i&gt;【Java工程师面试复习指南】本仓库涵盖大部分Java程序员所需要掌握的核心知识，整合了互联网上的很多优质Java技术文章，力求打造为最完整最实用的Java开发者学习指南，如果对你有帮助，给个star告诉我吧，谢谢！&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="ReadMe.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;本仓库为【Java工程师技术指南】力求打造最完整最实用的Java工程师学习指南！&lt;/p&gt;
&lt;p&gt;这些文章和总结都是我近几年学习Java总结和整理出来的，非常实用，对于学习Java后端的朋友来说应该是最全面最完整的技术仓库。
我靠着这些内容进行复习，拿到了BAT等大厂的offer，这个仓库也已经帮助了很多的Java学习者，如果对你有用，希望能给个star支持我，谢谢！&lt;/p&gt;
&lt;p&gt;为了更好地讲清楚每个知识模块，我们也参考了很多网上的优质博文，力求不漏掉每一个知识点，所有参考博文都将声明转载来源，如有侵权，请联系我。&lt;/p&gt;
&lt;p&gt;点击关注&lt;a href="#%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7"&gt;微信公众号&lt;/a&gt;及时获取笔主最新更新文章，并可免费领取Java工程师必备学习资源，以及我原创的电子书《菜鸟程序员成长之路：从技术小白到阿里巴巴Java工程师》&lt;/p&gt;
&lt;p align="center"&gt;
&lt;a href="https://github.com/h2pl/Java-Tutorial"&gt;
    &lt;img src="https://camo.githubusercontent.com/07fe96f47138a932c54d355da80721f7be314bb2/68747470733a2f2f696d67636f6e766572742e6373646e696d672e636e2f6148523063484d364c7939756233526c4c6e6c76645752686279356a623230766558647a4c334231596d7870597939795a584e7664584a6a5a5338774e6a6b314f4449774d7a63354d6a68684d4755304f57566959325579596a56684f44566d4d3255775a693934625778756233526c4c7a52434e6a68464f4456434d7a41344d7a51774d6a4a434e7a42474d5442424d5452444f4556454e4456444c7a67344d4451333f782d6f73732d70726f636573733d696d6167652f666f726d61742c706e67" width="200" height="160" data-canonical-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9ub3RlLnlvdWRhby5jb20veXdzL3B1YmxpYy9yZXNvdXJjZS8wNjk1ODIwMzc5MjhhMGU0OWViY2UyYjVhODVmM2UwZi94bWxub3RlLzRCNjhFODVCMzA4MzQwMjJCNzBGMTBBMTRDOEVENDVDLzg4MDQ3?x-oss-process=image/format,png" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;推荐使用 &lt;a href="https://how2playlife.com/" rel="nofollow"&gt;https://how2playlife.com/&lt;/a&gt; 在线阅读，在线阅读内容本仓库同步一致。这种方式阅读的优势在于：左侧边栏有目录，阅读体验更好。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-目录" class="anchor" aria-hidden="true" href="#目录"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;目录&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#Java%E5%9F%BA%E7%A1%80"&gt;Java基础&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86"&gt;基础知识&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%AE%B9%E5%99%A8"&gt;容器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F"&gt;设计模式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#JavaWeb"&gt;JavaWeb&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#Spring"&gt;Srping&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#SpringMVC"&gt;SpringMVC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#SpringBoot"&gt;SpringBoot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#Java%E8%BF%9B%E9%98%B6"&gt;Java进阶&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E5%B9%B6%E5%8F%91"&gt;并发&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#JVM"&gt;JVM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Java%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B"&gt;Java网络编程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80"&gt;计算机基础&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C"&gt;计算机网络&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F"&gt;操作系统&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#linux%E7%9B%B8%E5%85%B3"&gt;Linux相关&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95"&gt;数据结构与算法&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84"&gt;数据结构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%AE%97%E6%B3%95"&gt;算法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%95%B0%E6%8D%AE%E5%BA%93"&gt;数据库&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#MySQL"&gt;MySQL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%BC%93%E5%AD%98"&gt;缓存&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#Redis"&gt;Redis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97"&gt;消息队列&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#Kafka"&gt;Kafka&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%A4%A7%E5%90%8E%E7%AB%AF"&gt;大后端&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%88%86%E5%B8%83%E5%BC%8F"&gt;分布式&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E7%90%86%E8%AE%BA"&gt;理论&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%AE%9E%E6%88%98"&gt;实战&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%9D%A2%E8%AF%95%E6%8C%87%E5%8D%97"&gt;面试指南&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E6%A0%A1%E6%8B%9B%E6%8C%87%E5%8D%97"&gt;校招指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%9D%A2%E7%BB%8F"&gt;面经&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%B7%A5%E5%85%B7"&gt;工具&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#git"&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%B5%84%E6%96%99"&gt;资料&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E4%B9%A6%E5%8D%95"&gt;书单&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%BE%85%E5%8A%9E"&gt;待办&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%AF%B4%E6%98%8E"&gt;说明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7"&gt;微信公众号&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-java基础" class="anchor" aria-hidden="true" href="#java基础"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Java基础&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-基础知识" class="anchor" aria-hidden="true" href="#基础知识"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;基础知识&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/java/basic/1%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80.md"&gt;面向对象基础&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/basic/2%E3%80%81Java%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.md"&gt;Java基本数据类型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/basic/3%E3%80%81string%E5%92%8C%E5%8C%85%E8%A3%85%E7%B1%BB.md"&gt;string和包装类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/basic/4%E3%80%81final%E5%85%B3%E9%94%AE%E5%AD%97%E7%89%B9%E6%80%A7.md"&gt;final关键字特性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/basic/5%E3%80%81Java%E7%B1%BB%E5%92%8C%E5%8C%85.md"&gt;Java类和包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/basic/6%E3%80%81%E6%8A%BD%E8%B1%A1%E7%B1%BB%E5%92%8C%E6%8E%A5%E5%8F%A3.md"&gt;抽象类和接口&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/basic/7%E3%80%81%E4%BB%A3%E7%A0%81%E5%9D%97%E5%92%8C%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F.md"&gt;代码块和代码执行顺序&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/basic/8%E3%80%81Java%E8%87%AA%E5%8A%A8%E6%8B%86%E7%AE%B1%E8%A3%85%E7%AE%B1%E9%87%8C%E9%9A%90%E8%97%8F%E7%9A%84%E7%A7%98%E5%AF%86.md"&gt;Java自动拆箱装箱里隐藏的秘密&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/basic/9%E3%80%81Java%E4%B8%AD%E7%9A%84Class%E7%B1%BB%E5%92%8CObject%E7%B1%BB.md"&gt;Java中的Class类和Object类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/basic/10%E3%80%81Java%E5%BC%82%E5%B8%B8.md"&gt;Java异常&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/basic/11%E3%80%81%E8%A7%A3%E8%AF%BBJava%E4%B8%AD%E7%9A%84%E5%9B%9E%E8%B0%83.md"&gt;解读Java中的回调&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/basic/12%E3%80%81%E5%8F%8D%E5%B0%84.md"&gt;反射&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/basic/13%E3%80%81%E6%B3%9B%E5%9E%8B.md"&gt;泛型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/basic/14%E3%80%81%E6%9E%9A%E4%B8%BE%E7%B1%BB.md"&gt;枚举类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/basic/15%E3%80%81Java%E6%B3%A8%E8%A7%A3%E5%92%8C%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5.md"&gt;Java注解和最佳实践&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/basic/16%E3%80%81JavaIO%E6%B5%81.md"&gt;JavaIO流&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/basic/17%E3%80%81%E5%A4%9A%E7%BA%BF%E7%A8%8B.md"&gt;多线程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/basic/18%E3%80%81%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E5%86%85%E9%83%A8%E7%B1%BB.md"&gt;深入理解内部类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/basic/19%E3%80%81Java%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%E6%A2%B3%E7%90%86.md"&gt;javac和javap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/basic/20%E3%80%81javac%E5%92%8Cjavap.md"&gt;Java8新特性终极指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/basic/21%E3%80%81Java8%E6%96%B0%E7%89%B9%E6%80%A7%E7%BB%88%E6%9E%81%E6%8C%87%E5%8D%97.md"&gt;Java类和包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/basic/22%E3%80%81%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.md"&gt;序列化和反序列化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/basic/23%E3%80%81%E7%BB%A7%E6%89%BF%E3%80%81%E5%B0%81%E8%A3%85%E3%80%81%E5%A4%9A%E6%80%81%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86.md"&gt;继承、封装、多态的实现原理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-容器" class="anchor" aria-hidden="true" href="#容器"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;容器&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/java/collection/Java%E9%9B%86%E5%90%88%E7%B1%BB%E6%80%BB%E7%BB%93.md"&gt;Java集合类总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/collection/Java%E9%9B%86%E5%90%88%E8%AF%A6%E8%A7%A31%EF%BC%9A%E4%B8%80%E6%96%87%E8%AF%BB%E6%87%82ArrayList,Vector%E4%B8%8EStack%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%E5%92%8C%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86.md"&gt;Java集合详解1：一文读懂ArrayList,Vector与Stack使用方法和实现原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/collection/Java%E9%9B%86%E5%90%88%E8%AF%A6%E8%A7%A32%EF%BC%9AQueue%E5%92%8CLinkedList.md"&gt;Java集合详解2：Queue和LinkedList&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/collection/Java%E9%9B%86%E5%90%88%E8%AF%A6%E8%A7%A33%EF%BC%9AIterator%EF%BC%8Cfail-fast%E6%9C%BA%E5%88%B6%E4%B8%8E%E6%AF%94%E8%BE%83%E5%99%A8.md"&gt;Java集合详解3：Iterator，fail-fast机制与比较器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/collection/Java%E9%9B%86%E5%90%88%E8%AF%A6%E8%A7%A34%EF%BC%9AHashMap%E5%92%8CHashTable.md"&gt;Java集合详解4：HashMap和HashTable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/collection/Java%E9%9B%86%E5%90%88%E8%AF%A6%E8%A7%A35%EF%BC%9A%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3LinkedHashMap%E5%92%8CLRU%E7%BC%93%E5%AD%98.md"&gt;Java集合详解5：深入理解LinkedHashMap和LRU缓存&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/collection/Java%E9%9B%86%E5%90%88%E8%AF%A6%E8%A7%A36%EF%BC%9ATreeMap%E5%92%8C%E7%BA%A2%E9%BB%91%E6%A0%91.md"&gt;Java集合详解6：TreeMap和红黑树&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/collection/Java%E9%9B%86%E5%90%88%E8%AF%A6%E8%A7%A37%EF%BC%9AHashSet%EF%BC%8CTreeSet%E4%B8%8ELinkedHashSet.md"&gt;Java集合详解7：HashSet，TreeSet与LinkedHashSet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/collection/Java%E9%9B%86%E5%90%88%E8%AF%A6%E8%A7%A38%EF%BC%9AJava%E9%9B%86%E5%90%88%E7%B1%BB%E7%BB%86%E8%8A%82%E7%B2%BE%E8%AE%B2.md"&gt;Java集合详解8：Java集合类细节精讲&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-设计模式" class="anchor" aria-hidden="true" href="#设计模式"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;设计模式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/java/design-parttern/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93.md"&gt;设计模式学习总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/design-parttern/%E5%88%9D%E6%8E%A2Java%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F1%EF%BC%9A%E5%88%9B%E5%BB%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F%EF%BC%88%E5%B7%A5%E5%8E%82%EF%BC%8C%E5%8D%95%E4%BE%8B%E7%AD%89%EF%BC%89.md"&gt;初探Java设计模式1：创建型模式（工厂，单例等）.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/design-parttern/%E5%88%9D%E6%8E%A2Java%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F2%EF%BC%9A%E7%BB%93%E6%9E%84%E5%9E%8B%E6%A8%A1%E5%BC%8F%EF%BC%88%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%EF%BC%8C%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F%E7%AD%89%EF%BC%89.md"&gt;初探Java设计模式2：结构型模式（代理模式，适配器模式等）.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/design-parttern/%E5%88%9D%E6%8E%A2Java%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F3%EF%BC%9A%E8%A1%8C%E4%B8%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F%EF%BC%88%E7%AD%96%E7%95%A5%EF%BC%8C%E8%A7%82%E5%AF%9F%E8%80%85%E7%AD%89%EF%BC%89.md"&gt;初探Java设计模式3：行为型模式（策略，观察者等）.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/design-parttern/%E5%88%9D%E6%8E%A2Java%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F4%EF%BC%9AJDK%E4%B8%AD%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.md"&gt;初探Java设计模式4：JDK中的设计模式.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/design-parttern/%E5%88%9D%E6%8E%A2Java%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F5%EF%BC%9ASpring%E6%B6%89%E5%8F%8A%E5%88%B0%E7%9A%849%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.md"&gt;初探Java设计模式5：Spring涉及到的9种设计模式.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-javaweb" class="anchor" aria-hidden="true" href="#javaweb"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JavaWeb&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/java-web/%E8%B5%B0%E8%BF%9BJavaWeb%E6%8A%80%E6%9C%AF%E4%B8%96%E7%95%8C1%EF%BC%9AJavaWeb%E7%9A%84%E7%94%B1%E6%9D%A5%E5%92%8C%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.md"&gt;走进JavaWeb技术世界1：JavaWeb的由来和基础知识&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/%E8%B5%B0%E8%BF%9BJavaWeb%E6%8A%80%E6%9C%AF%E4%B8%96%E7%95%8C2%EF%BC%9AJSP%E4%B8%8EServlet%E7%9A%84%E6%9B%BE%E7%BB%8F%E4%B8%8E%E7%8E%B0%E5%9C%A8.md"&gt;走进JavaWeb技术世界2：JSP与Servlet的曾经与现在&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/%E8%B5%B0%E8%BF%9BJavaWeb%E6%8A%80%E6%9C%AF%E4%B8%96%E7%95%8C3%EF%BC%9AJDBC%E7%9A%84%E8%BF%9B%E5%8C%96%E4%B8%8E%E8%BF%9E%E6%8E%A5%E6%B1%A0%E6%8A%80%E6%9C%AF.md"&gt;走进JavaWeb技术世界3：JDBC的进化与连接池技术&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/%E8%B5%B0%E8%BF%9BJavaWeb%E6%8A%80%E6%9C%AF%E4%B8%96%E7%95%8C4%EF%BC%9AServlet%29%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E8%AF%A6%E8%A7%A3.md"&gt;走进JavaWeb技术世界4：Servlet 工作原理详解&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/%E8%B5%B0%E8%BF%9BJavaWeb%E6%8A%80%E6%9C%AF%E4%B8%96%E7%95%8C5%EF%BC%9A%E5%88%9D%E6%8E%A2Tomcat%E7%9A%84HTTP%E8%AF%B7%E6%B1%82%E8%BF%87%E7%A8%8B.md"&gt;走进JavaWeb技术世界5：初探Tomcat的HTTP请求过程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/%E8%B5%B0%E8%BF%9BJavaWeb%E6%8A%80%E6%9C%AF%E4%B8%96%E7%95%8C6%EF%BC%9ATomcat5%E6%80%BB%E4%BD%93%E6%9E%B6%E6%9E%84%E5%89%96%E6%9E%90.md"&gt;走进JavaWeb技术世界6：Tomcat5总体架构剖析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/%E8%B5%B0%E8%BF%9BJavaWeb%E6%8A%80%E6%9C%AF%E4%B8%96%E7%95%8C7%EF%BC%9ATomcat%E5%92%8C%E5%85%B6%E4%BB%96WEB%E5%AE%B9%E5%99%A8%E7%9A%84%E5%8C%BA%E5%88%AB.md"&gt;走进JavaWeb技术世界7：Tomcat和其他WEB容器的区别&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/%E8%B5%B0%E8%BF%9BJavaWeb%E6%8A%80%E6%9C%AF%E4%B8%96%E7%95%8C8%EF%BC%9A%E6%B5%85%E6%9E%90Tomcat9%E8%AF%B7%E6%B1%82%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B%E4%B8%8E%E5%90%AF%E5%8A%A8%E9%83%A8%E7%BD%B2%E8%BF%87%E7%A8%8B.md"&gt;走进JavaWeb技术世界8：浅析Tomcat9请求处理流程与启动部署过程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/%E8%B5%B0%E8%BF%9BJavaWeb%E6%8A%80%E6%9C%AF%E4%B8%96%E7%95%8C9%EF%BC%9AJava%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AF%9E%E7%94%9F%E4%B8%8E%E5%8F%91%E5%B1%95.md"&gt;走进JavaWeb技术世界9：Java日志系统的诞生与发展&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/%E8%B5%B0%E8%BF%9BJavaWeb%E6%8A%80%E6%9C%AF%E4%B8%96%E7%95%8C10%EF%BC%9A%E4%BB%8EJavaBean%E8%AE%B2%E5%88%B0Spring.md"&gt;走进JavaWeb技术世界10：从JavaBean讲到Spring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/%E8%B5%B0%E8%BF%9BJavaWeb%E6%8A%80%E6%9C%AF%E4%B8%96%E7%95%8C11%EF%BC%9A%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6Junit.md"&gt;走进JavaWeb技术世界11：单元测试框架Junit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/%E8%B5%B0%E8%BF%9BJavaWeb%E6%8A%80%E6%9C%AF%E4%B8%96%E7%95%8C12%EF%BC%9A%E4%BB%8E%E6%89%8B%E5%8A%A8%E7%BC%96%E8%AF%91%E6%89%93%E5%8C%85%E5%88%B0%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7Maven.md"&gt;走进JavaWeb技术世界12：从手动编译打包到项目构建工具Maven&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/%E8%B5%B0%E8%BF%9BJavaWeb%E6%8A%80%E6%9C%AF%E4%B8%96%E7%95%8C13%EF%BC%9AHibernate%E5%85%A5%E9%97%A8%E7%BB%8F%E5%85%B8%E4%B8%8E%E6%B3%A8%E8%A7%A3%E5%BC%8F%E5%BC%80%E5%8F%91.md"&gt;走进JavaWeb技术世界13：Hibernate入门经典与注解式开发&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/%E8%B5%B0%E8%BF%9BJavaWeb%E6%8A%80%E6%9C%AF%E4%B8%96%E7%95%8C14%EF%BC%9AMybatis%E5%85%A5%E9%97%A8.md"&gt;走进JavaWeb技术世界14：Mybatis入门&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/%E6%B7%B1%E5%85%A5JavaWeb%E6%8A%80%E6%9C%AF%E4%B8%96%E7%95%8C15%EF%BC%9A%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAMybatis%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86.md"&gt;深入JavaWeb技术世界15：深入浅出Mybatis基本原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/%E8%B5%B0%E8%BF%9BJavaWeb%E6%8A%80%E6%9C%AF%E4%B8%96%E7%95%8C16%EF%BC%9A%E6%9E%81%E7%AE%80%E9%85%8D%E7%BD%AE%E7%9A%84SpringBoot.md"&gt;走进JavaWeb技术世界16：极简配置的SpringBoot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-spring" class="anchor" aria-hidden="true" href="#spring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spring&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/java-web/Spring/Spring%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%901%EF%BC%9ASpring%E6%A6%82%E8%BF%B0.md"&gt;Spring源码剖析1：Spring概述&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/Spring/Spring%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%902%EF%BC%9A%E5%88%9D%E6%8E%A2Spring%20IOC%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B.md"&gt;Spring源码剖析2：初探Spring IOC核心流程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/Spring/Spring%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%903%EF%BC%9ASpring%20IOC%E5%AE%B9%E5%99%A8%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B.md"&gt;Spring源码剖析3：Spring IOC容器的加载过程 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/Spring/Spring%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%904%EF%BC%9A%E6%87%92%E5%8A%A0%E8%BD%BD%E7%9A%84%E5%8D%95%E4%BE%8BBean%E8%8E%B7%E5%8F%96%E8%BF%87%E7%A8%8B%E5%88%86%E6%9E%90.md"&gt;Spring源码剖析4：懒加载的单例Bean获取过程分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/Spring/Spring%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%905%EF%BC%9AJDK%E5%92%8Ccglib%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E5%8E%9F%E7%90%86%E8%AF%A6%E8%A7%A3.md"&gt;Spring源码剖析5：JDK和cglib动态代理原理详解 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/Spring/Spring%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%906%EF%BC%9ASpring%20AOP%E6%A6%82%E8%BF%B0.md"&gt;Spring源码剖析6：Spring AOP概述&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/Spring/Spring%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%907%EF%BC%9AAOP%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E8%AF%A6%E8%A7%A3.md"&gt;Spring源码剖析7：AOP实现原理详解 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/Spring/Spring%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%908%EF%BC%9ASpring%E4%BA%8B%E5%8A%A1%E6%A6%82%E8%BF%B0.md"&gt;Spring源码剖析8：Spring事务概述&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/Spring/Spring%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%909%EF%BC%9ASpring%E4%BA%8B%E5%8A%A1%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90.md"&gt;Spring源码剖析9：Spring事务源码剖析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-springmvc" class="anchor" aria-hidden="true" href="#springmvc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SpringMVC&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/java-web/Spring/SSM/SpringMVC%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%901%EF%BC%9ASpringMVC%E6%A6%82%E8%BF%B0.md"&gt;SpringMVC源码分析1：SpringMVC概述&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/Spring/SSM/SpringMVC%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%902%EF%BC%9ASpringMVC%E8%AE%BE%E8%AE%A1%E7%90%86%E5%BF%B5%E4%B8%8EDispatcherServlet.md"&gt;SpringMVC源码分析2：SpringMVC设计理念与DispatcherServlet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/Spring/SSM/SpringMVC%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%903%EF%BC%9ADispatcherServlet%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%8E%E8%AF%B7%E6%B1%82%E8%BD%AC%E5%8F%91.md"&gt;SpringMVC源码分析3：DispatcherServlet的初始化与请求转发 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/Spring/SSM/SpringMVC%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%904%EF%BC%9ADispatcherServlet%E5%A6%82%E4%BD%95%E6%89%BE%E5%88%B0%E6%AD%A3%E7%A1%AE%E7%9A%84Controller.md"&gt;SpringMVC源码分析4：DispatcherServlet如何找到正确的Controller &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/Spring/SSM/SpringMVC%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%905%EF%BC%9A%E6%B6%88%E6%81%AF%E8%BD%AC%E6%8D%A2%E5%99%A8HttpMessageConverter%E4%B8%8E@ResponseBody%E6%B3%A8%E8%A7%A3.md"&gt;SpringMVC源码剖析5：消息转换器HttpMessageConverter与@ResponseBody注解&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java-web/Spring/SSM/SpringMVC%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%906%EF%BC%9ASpringMVC%E7%9A%84%E8%A7%86%E5%9B%BE%E8%A7%A3%E6%9E%90%E5%8E%9F%E7%90%86.md"&gt;SpringMVC源码分析6：SpringMVC的视图解析原理 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-springboot" class="anchor" aria-hidden="true" href="#springboot"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SpringBoot&lt;/h3&gt;
&lt;p&gt;todo&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-springcloud" class="anchor" aria-hidden="true" href="#springcloud"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SpringCloud&lt;/h3&gt;
&lt;p&gt;todo&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-java进阶" class="anchor" aria-hidden="true" href="#java进阶"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Java进阶&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-并发" class="anchor" aria-hidden="true" href="#并发"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;并发&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/java/currency/Java%E5%B9%B6%E5%8F%91%E6%8C%87%E5%8D%971%EF%BC%9A%E5%B9%B6%E5%8F%91%E5%9F%BA%E7%A1%80%E4%B8%8EJava%E5%A4%9A%E7%BA%BF%E7%A8%8B.md"&gt;Java并发指南1：并发基础与Java多线程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/currency/Java%E5%B9%B6%E5%8F%91%E6%8C%87%E5%8D%972%EF%BC%9A%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8BJMM.md"&gt;Java并发指南2：深入理解Java内存模型JMM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/currency/Java%E5%B9%B6%E5%8F%91%E6%8C%87%E5%8D%973%EF%BC%9A%E5%B9%B6%E5%8F%91%E4%B8%89%E5%A4%A7%E9%97%AE%E9%A2%98%E4%B8%8Evolatile%E5%85%B3%E9%94%AE%E5%AD%97%EF%BC%8CCAS%E6%93%8D%E4%BD%9C.md"&gt;Java并发指南3：并发三大问题与volatile关键字，CAS操作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/currency/Java%E5%B9%B6%E5%8F%91%E6%8C%87%E5%8D%974%EF%BC%9AJava%E4%B8%AD%E7%9A%84%E9%94%81%20Lock%E5%92%8Csynchronized.md"&gt;Java并发指南4：Java中的锁 Lock和synchronized&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/currency/Java%E5%B9%B6%E5%8F%91%E6%8C%87%E5%8D%975%EF%BC%9AJMM%E4%B8%AD%E7%9A%84final%E5%85%B3%E9%94%AE%E5%AD%97%E8%A7%A3%E6%9E%90.md"&gt;Java并发指南5：JMM中的final关键字解析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/currency/Java%E5%B9%B6%E5%8F%91%E6%8C%87%E5%8D%976%EF%BC%9AJava%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8BJMM%E6%80%BB%E7%BB%93.md"&gt;Java并发指南6：Java内存模型JMM总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/currency/Java%E5%B9%B6%E5%8F%91%E6%8C%87%E5%8D%977%EF%BC%9AJUC%E7%9A%84%E6%A0%B8%E5%BF%83%E7%B1%BBAQS%E8%AF%A6%E8%A7%A3.md"&gt;Java并发指南7：JUC的核心类AQS详解&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/currency/Java%E5%B9%B6%E5%8F%91%E6%8C%87%E5%8D%978%EF%BC%9AAQS%E4%B8%AD%E7%9A%84%E5%85%AC%E5%B9%B3%E9%94%81%E4%B8%8E%E9%9D%9E%E5%85%AC%E5%B9%B3%E9%94%81%EF%BC%8CCondtion.md"&gt;Java并发指南8：AQS中的公平锁与非公平锁，Condtion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/currency/Java%E5%B9%B6%E5%8F%91%E6%8C%87%E5%8D%979%EF%BC%9AAQS%E5%85%B1%E4%BA%AB%E6%A8%A1%E5%BC%8F%E4%B8%8E%E5%B9%B6%E5%8F%91%E5%B7%A5%E5%85%B7%E7%B1%BB%E7%9A%84%E5%AE%9E%E7%8E%B0.md"&gt;Java并发指南9：AQS共享模式与并发工具类的实现&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/currency/Java%E5%B9%B6%E5%8F%91%E6%8C%87%E5%8D%9710%EF%BC%9AJava%20%E8%AF%BB%E5%86%99%E9%94%81%20ReentrantReadWriteLock%20%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90.md"&gt;Java并发指南10：Java 读写锁 ReentrantReadWriteLock 源码分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/currency/Java%E5%B9%B6%E5%8F%91%E6%8C%87%E5%8D%9711%EF%BC%9A%E8%A7%A3%E8%AF%BB%20Java%20%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97%20BlockingQueue.md"&gt;Java并发指南11：解读 Java 阻塞队列 BlockingQueue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/currency/Java%E5%B9%B6%E5%8F%91%E6%8C%87%E5%8D%9712%EF%BC%9A%E6%B7%B1%E5%BA%A6%E8%A7%A3%E8%AF%BB%20java%20%E7%BA%BF%E7%A8%8B%E6%B1%A0%E8%AE%BE%E8%AE%A1%E6%80%9D%E6%83%B3%E5%8F%8A%E6%BA%90%E7%A0%81%E5%AE%9E%E7%8E%B0.md"&gt;Java并发指南12：深度解读 java 线程池设计思想及源码实现&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/h2pl/Java-Tutorial/blob/master/docs/java/currency/Java%E5%B9%B6%E5%8F%91%E6%8C%87%E5%8D%9713%EF%BC%9AJava%20%E4%B8%AD%E7%9A%84%20HashMap%20%E5%92%8C%20ConcurrentHashMap%20%E5%85%A8%E8%A7%A3%E6%9E%90.md"&gt;Java并发指南13：Java 中的 HashMap 和 ConcurrentHashMap 全解析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/currency/Java%E5%B9%B6%E5%8F%91%E6%8C%87%E5%8D%9714%EF%BC%9AJUC%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84Unsafe%E5%92%8CLocksupport.md"&gt;Java并发指南14：JUC中常用的Unsafe和Locksupport&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/currency/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E6%8C%87%E5%8D%9715%EF%BC%9AFork%20join%E5%B9%B6%E5%8F%91%E6%A1%86%E6%9E%B6%E4%B8%8E%E5%B7%A5%E4%BD%9C%E7%AA%83%E5%8F%96%E7%AE%97%E6%B3%95%E5%89%96%E6%9E%90.md"&gt;Java并发指南15：Fork join并发框架与工作窃取算法剖析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/h2pl/Java-Tutorial/blob/master/docs/java/currency/Java%E5%B9%B6%E5%8F%91%E6%80%BB%E7%BB%93.md"&gt;Java并发编程学习总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-jvm" class="anchor" aria-hidden="true" href="#jvm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JVM&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/java/jvm/JVM%E6%80%BB%E7%BB%93.md"&gt;JVM总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM%E8%99%9A%E6%8B%9F%E6%9C%BA1%EF%BC%9AJVM%E5%86%85%E5%AD%98%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8E%E6%B6%88%E5%A4%B1%E7%9A%84%E6%B0%B8%E4%B9%85%E4%BB%A3.md"&gt;深入理解JVM虚拟机1：JVM内存的结构与消失的永久代&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM%E8%99%9A%E6%8B%9F%E6%9C%BA2%EF%BC%9AJVM%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86%E5%92%8C%E7%AE%97%E6%B3%95.md"&gt;深入理解JVM虚拟机2：JVM垃圾回收基本原理和算法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM%E8%99%9A%E6%8B%9F%E6%9C%BA3%EF%BC%9A%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8%E8%AF%A6%E8%A7%A3.md"&gt;深入理解JVM虚拟机3：垃圾回收器详解&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM%E8%99%9A%E6%8B%9F%E6%9C%BA4%EF%BC%9AJavaclass%E4%BB%8B%E7%BB%8D%E4%B8%8E%E8%A7%A3%E6%9E%90%E5%AE%9E%E8%B7%B5.md"&gt;深入理解JVM虚拟机4：Javaclass介绍与解析实践&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM%E8%99%9A%E6%8B%9F%E6%9C%BA5%EF%BC%9A%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AD%97%E8%8A%82%E7%A0%81%E6%89%A7%E8%A1%8C%E5%BC%95%E6%93%8E.md"&gt;深入理解JVM虚拟机5：虚拟机字节码执行引擎&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM%E8%99%9A%E6%8B%9F%E6%9C%BA6%EF%BC%9A%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6.md"&gt;深入理解JVM虚拟机6：深入理解JVM类加载机制&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM%E8%99%9A%E6%8B%9F%E6%9C%BA7%EF%BC%9AJNDI%EF%BC%8COSGI%EF%BC%8CTomcat%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%AE%9E%E7%8E%B0.md"&gt;深入理解JVM虚拟机7：JNDI，OSGI，Tomcat类加载器实现&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/jvm/%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3JVM%E8%99%9A%E6%8B%9F%E6%9C%BA8%EF%BC%9AJava%E7%9A%84%E7%BC%96%E8%AF%91%E6%9C%9F%E4%BC%98%E5%8C%96%E4%B8%8E%E8%BF%90%E8%A1%8C%E6%9C%9F%E4%BC%98%E5%8C%96.md"&gt;深入了解JVM虚拟机8：Java的编译期优化与运行期优化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM%E8%99%9A%E6%8B%9F%E6%9C%BA9%EF%BC%9AJVM%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7%E4%B8%8E%E8%AF%8A%E6%96%AD%E5%AE%9E%E8%B7%B5.md"&gt;深入理解JVM虚拟机9：JVM监控工具与诊断实践&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM%E8%99%9A%E6%8B%9F%E6%9C%BA10%EF%BC%9AJVM%E5%B8%B8%E7%94%A8%E5%8F%82%E6%95%B0%E4%BB%A5%E5%8F%8A%E8%B0%83%E4%BC%98%E5%AE%9E%E8%B7%B5.md"&gt;深入理解JVM虚拟机10：JVM常用参数以及调优实践&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM%E8%99%9A%E6%8B%9F%E6%9C%BA11%EF%BC%9AJava%E5%86%85%E5%AD%98%E5%BC%82%E5%B8%B8%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E8%B7%B5.md"&gt;深入理解JVM虚拟机11：Java内存异常原理与实践&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM%E8%99%9A%E6%8B%9F%E6%9C%BA12%EF%BC%9AJVM%E6%80%A7%E8%83%BD%E7%AE%A1%E7%90%86%E7%A5%9E%E5%99%A8VisualVM%E4%BB%8B%E7%BB%8D%E4%B8%8E%E5%AE%9E%E6%88%98.md"&gt;深入理解JVM虚拟机12：JVM性能管理神器VisualVM介绍与实战&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM%E8%99%9A%E6%8B%9F%E6%9C%BA13%EF%BC%9A%E5%86%8D%E8%B0%88%E5%9B%9B%E7%A7%8D%E5%BC%95%E7%94%A8%E5%8F%8AGC%E5%AE%9E%E8%B7%B5.md"&gt;深入理解JVM虚拟机13：再谈四种引用及GC实践&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM%E8%99%9A%E6%8B%9F%E6%9C%BA%EF%BC%9AGC%E8%B0%83%E4%BC%98%E6%80%9D%E8%B7%AF%E4%B8%8E%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7.md"&gt;深入理解JVM虚拟机14：GC调优思路与常用工具&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-java网络编程" class="anchor" aria-hidden="true" href="#java网络编程"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Java网络编程&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/java/jvm/Java%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%92%8CNIO%E8%AF%A6%E8%A7%A31%EF%BC%9AJAVA%20%E4%B8%AD%E5%8E%9F%E7%94%9F%E7%9A%84%20socket%20%E9%80%9A%E4%BF%A1%E6%9C%BA%E5%88%B6.md"&gt;Java网络编程和NIO详解1：JAVA 中原生的 socket 通信机制&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/jvm/Java%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E4%B8%8ENIO%E8%AF%A6%E8%A7%A32%EF%BC%9AJAVA%20NIO%20%E4%B8%80%E6%AD%A5%E6%AD%A5%E6%9E%84%E5%BB%BAIO%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8%E7%9A%84%E8%AF%B7%E6%B1%82%E6%A8%A1%E5%9E%8B.md"&gt;Java网络编程与NIO详解2：JAVA NIO 一步步构建IO多路复用的请求模型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/jvm/Java%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%92%8CNIO%E8%AF%A6%E8%A7%A33%EF%BC%9AIO%E6%A8%A1%E5%9E%8B%E4%B8%8EJava%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E6%A8%A1%E5%9E%8B.md"&gt;Java网络编程和NIO详解3：IO模型与Java网络编程模型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/h2pl/Java-Tutorial/blob/master/docs/java/network-programming/Java%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E4%B8%8ENIO%E8%AF%A6%E8%A7%A34%EF%BC%9A%E6%B5%85%E6%9E%90NIO%E5%8C%85%E4%B8%AD%E7%9A%84Buffer%E3%80%81Channel%20%E5%92%8C%20Selector.md"&gt;Java网络编程与NIO详解4：浅析NIO包中的Buffer、Channel 和 Selector&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/h2pl/Java-Tutorial/blob/master/docs/java/network-programming/Java%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%92%8CNIO%E8%AF%A6%E8%A7%A35%EF%BC%9AJava%20%E9%9D%9E%E9%98%BB%E5%A1%9E%20IO%20%E5%92%8C%E5%BC%82%E6%AD%A5%20IO.md"&gt;Java网络编程和NIO详解5：Java 非阻塞 IO 和异步 IO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/jvm/Java%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%92%8CNIO%E8%AF%A6%E8%A7%A36%EF%BC%9ALinux%20epoll%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E8%AF%A6%E8%A7%A3.md"&gt;Java网络编程和NIO详解6：Linux epoll实现原理详解&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Java%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%92%8CNIO%E8%AF%A6%E8%A7%A37%EF%BC%9A%E6%B5%85%E8%B0%88%20Linux%20%E4%B8%ADNIO%20Selector%20%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86.md"&gt;Java网络编程和NIO详解7：浅谈 Linux 中NIO Selector 的实现原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/h2pl/Java-Tutorial/blob/master/docs/java/network-programming/Java%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E4%B8%8ENIO%E8%AF%A6%E8%A7%A38%EF%BC%9A%E6%B5%85%E6%9E%90mmap%E5%92%8CDirect%20Buffer.md"&gt;Java网络编程与NIO详解8：浅析mmap和Direct Buffer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/jvm/Java%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%92%8CNIO%E8%AF%A6%E8%A7%A39%EF%BC%9A%E5%9F%BA%E4%BA%8ENIO%E7%9A%84%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E6%A1%86%E6%9E%B6Netty.md"&gt;Java网络编程和NIO详解9：基于NIO的网络编程框架Netty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/h2pl/Java-Tutorial/blob/master/docs/java/network-programming/Java%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E4%B8%8ENIO%E8%AF%A6%E8%A7%A310%EF%BC%9A%E6%B7%B1%E5%BA%A6%E8%A7%A3%E8%AF%BBTomcat%E4%B8%AD%E7%9A%84NIO%E6%A8%A1%E5%9E%8B.md"&gt;Java网络编程与NIO详解10：深度解读Tomcat中的NIO模型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/java/jvm/Java%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E4%B8%8ENIO%E8%AF%A6%E8%A7%A311%EF%BC%9ATomcat%E4%B8%AD%E7%9A%84Connector%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%EF%BC%88NIO%EF%BC%89.md"&gt;Java网络编程与NIO详解11：Tomcat中的Connector源码分析（NIO）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-计算机基础" class="anchor" aria-hidden="true" href="#计算机基础"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;计算机基础&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-计算机网络" class="anchor" aria-hidden="true" href="#计算机网络"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;计算机网络&lt;/h3&gt;
&lt;p&gt;todo&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-操作系统" class="anchor" aria-hidden="true" href="#操作系统"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;操作系统&lt;/h3&gt;
&lt;p&gt;todo&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-linux相关" class="anchor" aria-hidden="true" href="#linux相关"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux相关&lt;/h4&gt;
&lt;p&gt;todo&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-数据结构与算法" class="anchor" aria-hidden="true" href="#数据结构与算法"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;数据结构与算法&lt;/h3&gt;
&lt;p&gt;todo&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-数据结构" class="anchor" aria-hidden="true" href="#数据结构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;数据结构&lt;/h4&gt;
&lt;p&gt;todo&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-算法" class="anchor" aria-hidden="true" href="#算法"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;算法&lt;/h4&gt;
&lt;p&gt;todo&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-数据库" class="anchor" aria-hidden="true" href="#数据库"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;数据库&lt;/h2&gt;
&lt;p&gt;todo&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mysql" class="anchor" aria-hidden="true" href="#mysql"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MySQL&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/database/Mysql%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%93.md"&gt;Mysql原理与实践总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/database/%E9%87%8D%E6%96%B0%E5%AD%A6%E4%B9%A0Mysql%E6%95%B0%E6%8D%AE%E5%BA%931%EF%BC%9A%E6%97%A0%E5%BA%9F%E8%AF%9DMySQL%E5%85%A5%E9%97%A8.md"&gt;重新学习Mysql数据库1：无废话MySQL入门&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/database/%E9%87%8D%E6%96%B0%E5%AD%A6%E4%B9%A0Mysql%E6%95%B0%E6%8D%AE%E5%BA%932%EF%BC%9A%20%E3%80%8E%E6%B5%85%E5%85%A5%E6%B5%85%E5%87%BA%E3%80%8FMySQL%20%E5%92%8C%20InnoDB.md"&gt;重新学习Mysql数据库2：『浅入浅出』MySQL 和 InnoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/database/%E9%87%8D%E6%96%B0%E5%AD%A6%E4%B9%A0Mysql%E6%95%B0%E6%8D%AE%E5%BA%933%EF%BC%9AMysql%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E5%8E%9F%E7%90%86.md"&gt;重新学习Mysql数据库3：Mysql存储引擎与数据存储原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/database/%E9%87%8D%E6%96%B0%E5%AD%A6%E4%B9%A0Mysql%E6%95%B0%E6%8D%AE%E5%BA%934%EF%BC%9AMysql%E7%B4%A2%E5%BC%95%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E5%92%8C%E7%9B%B8%E5%85%B3%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95.md"&gt;重新学习Mysql数据库4：Mysql索引实现原理和相关数据结构算法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/database/%E9%87%8D%E6%96%B0%E5%AD%A6%E4%B9%A0Mysql%E6%95%B0%E6%8D%AE%E5%BA%935%EF%BC%9A%E6%A0%B9%E6%8D%AEMySQL%E7%B4%A2%E5%BC%95%E5%8E%9F%E7%90%86%E8%BF%9B%E8%A1%8C%E5%88%86%E6%9E%90%E4%B8%8E%E4%BC%98%E5%8C%96.md"&gt;重新学习Mysql数据库5：根据MySQL索引原理进行分析与优化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/database/%E9%87%8D%E6%96%B0%E5%AD%A6%E4%B9%A0MySQL%E6%95%B0%E6%8D%AE%E5%BA%936%EF%BC%9A%E6%B5%85%E8%B0%88MySQL%E7%9A%84%E4%B8%AD%E4%BA%8B%E5%8A%A1%E4%B8%8E%E9%94%81.md"&gt;重新学习MySQL数据库6：浅谈MySQL的中事务与锁&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/database/%E9%87%8D%E6%96%B0%E5%AD%A6%E4%B9%A0Mysql%E6%95%B0%E6%8D%AE%E5%BA%937%EF%BC%9A%E8%AF%A6%E8%A7%A3MyIsam%E4%B8%8EInnoDB%E5%BC%95%E6%93%8E%E7%9A%84%E9%94%81%E5%AE%9E%E7%8E%B0.md"&gt;重新学习Mysql数据库7：详解MyIsam与InnoDB引擎的锁实现&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/database/%E9%87%8D%E6%96%B0%E5%AD%A6%E4%B9%A0Mysql%E6%95%B0%E6%8D%AE%E5%BA%938%EF%BC%9AMySQL%E7%9A%84%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB%E5%AE%9E%E6%88%98.md"&gt;重新学习Mysql数据库8：MySQL的事务隔离级别实战&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/database/%E9%87%8D%E6%96%B0%E5%AD%A6%E4%B9%A0MySQL%E6%95%B0%E6%8D%AE%E5%BA%939%EF%BC%9AInnodb%E4%B8%AD%E7%9A%84%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB%E5%92%8C%E9%94%81%E7%9A%84%E5%85%B3%E7%B3%BB.md"&gt;重新学习MySQL数据库9：Innodb中的事务隔离级别和锁的关系&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/database/%E9%87%8D%E6%96%B0%E5%AD%A6%E4%B9%A0MySQL%E6%95%B0%E6%8D%AE%E5%BA%9310%EF%BC%9AMySQL%E9%87%8C%E7%9A%84%E9%82%A3%E4%BA%9B%E6%97%A5%E5%BF%97%E4%BB%AC.md"&gt;重新学习MySQL数据库10：MySQL里的那些日志们&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/database/%E9%87%8D%E6%96%B0%E5%AD%A6%E4%B9%A0MySQL%E6%95%B0%E6%8D%AE%E5%BA%9311%EF%BC%9A%E4%BB%A5Java%E7%9A%84%E8%A7%86%E8%A7%92%E6%9D%A5%E8%81%8A%E8%81%8ASQL%E6%B3%A8%E5%85%A5.md"&gt;重新学习MySQL数据库11：以Java的视角来聊聊SQL注入&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/database/%E9%87%8D%E6%96%B0%E5%AD%A6%E4%B9%A0MySQL%E6%95%B0%E6%8D%AE%E5%BA%9312%EF%BC%9A%E4%BB%8E%E5%AE%9E%E8%B7%B5sql%E8%AF%AD%E5%8F%A5%E4%BC%98%E5%8C%96%E5%BC%80%E5%A7%8B.md"&gt;重新学习MySQL数据库12：从实践sql语句优化开始&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/database/%E9%87%8D%E6%96%B0%E5%AD%A6%E4%B9%A0Mysql%E6%95%B0%E6%8D%AE13%EF%BC%9AMysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%EF%BC%8C%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%EF%BC%8C%E5%88%86%E8%A1%A8%E5%88%86%E5%BA%93%E7%AD%96%E7%95%A5%E4%B8%8E%E5%AE%9E%E8%B7%B5.md"&gt;重新学习Mysql数据库13：Mysql主从复制，读写分离，分表分库策略与实践&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-缓存" class="anchor" aria-hidden="true" href="#缓存"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;缓存&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-redis" class="anchor" aria-hidden="true" href="#redis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Redis&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/cache/Redis%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%93.md"&gt;Redis原理与实践总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cache/%E6%8E%A2%E7%B4%A2Redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E5%BC%80%E7%AF%87%EF%BC%9A%E4%BB%80%E4%B9%88%E6%98%AFRedis.md"&gt;探索Redis设计与实现开篇：什么是Redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cache/%E6%8E%A2%E7%B4%A2Redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B01%EF%BC%9ARedis%20%E7%9A%84%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%A6%82%E8%A7%88.md"&gt;探索Redis设计与实现1：Redis 的基础数据结构概览&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cache/%E6%8E%A2%E7%B4%A2Redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B02%EF%BC%9ARedis%E5%86%85%E9%83%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%A6%E8%A7%A3%E2%80%94%E2%80%94dict.md"&gt;探索Redis设计与实现2：Redis内部数据结构详解——dict&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cache/%E6%8E%A2%E7%B4%A2Redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B03%EF%BC%9ARedis%E5%86%85%E9%83%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%A6%E8%A7%A3%E2%80%94%E2%80%94sds.md"&gt;探索Redis设计与实现3：Redis内部数据结构详解——sds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cache/%E6%8E%A2%E7%B4%A2Redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B04%EF%BC%9ARedis%E5%86%85%E9%83%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%A6%E8%A7%A3%E2%80%94%E2%80%94ziplist.md"&gt;探索Redis设计与实现4：Redis内部数据结构详解——ziplist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cache/%E6%8E%A2%E7%B4%A2Redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B05%EF%BC%9ARedis%E5%86%85%E9%83%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%A6%E8%A7%A3%E2%80%94%E2%80%94quicklist.md"&gt;探索Redis设计与实现5：Redis内部数据结构详解——quicklist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cache/%E6%8E%A2%E7%B4%A2Redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B06%EF%BC%9ARedis%E5%86%85%E9%83%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%A6%E8%A7%A3%E2%80%94%E2%80%94skiplist.md"&gt;探索Redis设计与实现6：Redis内部数据结构详解——skiplist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cache/%E6%8E%A2%E7%B4%A2Redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B07%EF%BC%9ARedis%E5%86%85%E9%83%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%A6%E8%A7%A3%E2%80%94%E2%80%94intset.md"&gt;探索Redis设计与实现7：Redis内部数据结构详解——intset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cache/%E6%8E%A2%E7%B4%A2Redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B08%EF%BC%9A%E8%BF%9E%E6%8E%A5%E5%BA%95%E5%B1%82%E4%B8%8E%E8%A1%A8%E9%9D%A2%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84robj.md"&gt;探索Redis设计与实现8：连接底层与表面的数据结构robj&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cache/%E6%8E%A2%E7%B4%A2Redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B09%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93redisDb%E4%B8%8E%E9%94%AE%E8%BF%87%E6%9C%9F%E5%88%A0%E9%99%A4%E7%AD%96%E7%95%A5.md"&gt;探索Redis设计与实现9：数据库redisDb与键过期删除策略&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cache/%E6%8E%A2%E7%B4%A2Redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B010%EF%BC%9ARedis%E7%9A%84%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8%E6%A8%A1%E5%9E%8B%E4%B8%8E%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B.md"&gt;探索Redis设计与实现10：Redis的事件驱动模型与命令执行过程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cache/%E6%8E%A2%E7%B4%A2Redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B011%EF%BC%9A%E4%BD%BF%E7%94%A8%E5%BF%AB%E7%85%A7%E5%92%8CAOF%E5%B0%86Redis%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96%E5%88%B0%E7%A1%AC%E7%9B%98%E4%B8%AD.md"&gt;探索Redis设计与实现11：使用快照和AOF将Redis数据持久化到硬盘中&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cache/%E6%8E%A2%E7%B4%A2Redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B012%EF%BC%9A%E6%B5%85%E6%9E%90Redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6.md"&gt;探索Redis设计与实现12：浅析Redis主从复制&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cache/%E6%8E%A2%E7%B4%A2Redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B013%EF%BC%9ARedis%E9%9B%86%E7%BE%A4%E6%9C%BA%E5%88%B6%E5%8F%8A%E4%B8%80%E4%B8%AARedis%E6%9E%B6%E6%9E%84%E6%BC%94%E8%BF%9B%E5%AE%9E%E4%BE%8B.md"&gt;探索Redis设计与实现13：Redis集群机制及一个Redis架构演进实例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cache/%E6%8E%A2%E7%B4%A2Redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B014%EF%BC%9ARedis%E4%BA%8B%E5%8A%A1%E6%B5%85%E6%9E%90%E4%B8%8EACID%E7%89%B9%E6%80%A7%E4%BB%8B%E7%BB%8D.md"&gt;探索Redis设计与实现14：Redis事务浅析与ACID特性介绍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/cache/%E6%8E%A2%E7%B4%A2Redis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B015%EF%BC%9ARedis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E8%BF%9B%E5%8C%96%E5%8F%B2.md"&gt;探索Redis设计与实现15：Redis分布式锁进化史 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-消息队列" class="anchor" aria-hidden="true" href="#消息队列"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;消息队列&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-kafka" class="anchor" aria-hidden="true" href="#kafka"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Kafka&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-大后端" class="anchor" aria-hidden="true" href="#大后端"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;大后端&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/big-backEnd/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%9D%82%E8%B0%88%E5%BC%80%E7%AF%87%EF%BC%9A%E4%BA%91%E8%AE%A1%E7%AE%97%EF%BC%8C%E5%A4%A7%E6%95%B0%E6%8D%AE%E4%B8%8EAI%E7%9A%84%E6%95%85%E4%BA%8B.md"&gt;后端技术杂谈开篇：云计算，大数据与AI的故事&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/big-backEnd/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%9D%82%E8%B0%881%EF%BC%9A%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E5%9F%BA%E7%A1%80%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95.md"&gt;后端技术杂谈1：搜索引擎基础倒排索引&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/big-backEnd/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%9D%82%E8%B0%882%EF%BC%9A%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86.md"&gt;后端技术杂谈2：搜索引擎工作原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/big-backEnd/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%9D%82%E8%B0%883%EF%BC%9ALucene%E5%9F%BA%E7%A1%80%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E8%B7%B5.md"&gt;后端技术杂谈3：Lucene基础原理与实践&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/big-backEnd/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%9D%82%E8%B0%884%EF%BC%9AElasticsearch%E4%B8%8Esolr%E5%85%A5%E9%97%A8%E5%AE%9E%E8%B7%B5.md"&gt;后端技术杂谈4：Elasticsearch与solr入门实践&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/big-backEnd/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%9D%82%E8%B0%885%EF%BC%9A%E4%BA%91%E8%AE%A1%E7%AE%97%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F.md"&gt;后端技术杂谈5：云计算的前世今生&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/big-backEnd/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%9D%82%E8%B0%886%EF%BC%9A%E7%99%BD%E8%AF%9D%E8%99%9A%E6%8B%9F%E5%8C%96%E6%8A%80%E6%9C%AF.md"&gt;后端技术杂谈6：白话虚拟化技术&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/big-backEnd/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%9D%82%E8%B0%887%EF%BC%9AOpenStack%E7%9A%84%E5%9F%BA%E7%9F%B3KVM.md"&gt;后端技术杂谈7：OpenStack的基石KVM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/big-backEnd/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%9D%82%E8%B0%888%EF%BC%9AOpenStack%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.md"&gt;后端技术杂谈8：OpenStack架构设计&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/big-backEnd/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%9D%82%E8%B0%889%EF%BC%9A%E5%85%88%E6%90%9E%E6%87%82Docker%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E5%90%A7.md"&gt;后端技术杂谈9：先搞懂Docker核心概念吧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/big-backEnd/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%9D%82%E8%B0%8810%EF%BC%9ADocker%20%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86.md"&gt;后端技术杂谈10：Docker 核心技术与实现原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/big-backEnd/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%9D%82%E8%B0%8811%EF%BC%9A%E5%8D%81%E5%88%86%E9%92%9F%E7%90%86%E8%A7%A3Kubernetes%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5.md"&gt;后端技术杂谈11：十分钟理解Kubernetes核心概念&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/big-backEnd/%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%E6%9D%82%E8%B0%8812%EF%BC%9A%E6%8D%8B%E4%B8%80%E6%8D%8B%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%A0%94%E5%8F%91%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.md"&gt;后端技术杂谈12：捋一捋大数据研发的基本概念&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-分布式" class="anchor" aria-hidden="true" href="#分布式"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;分布式&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-理论" class="anchor" aria-hidden="true" href="#理论"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;理论&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E7%90%86%E8%AE%BA/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80%E5%BC%80%E7%AF%87%EF%BC%9A%E4%BB%8E%E6%94%BE%E5%BC%83%E5%88%B0%E5%85%A5%E9%97%A8.md"&gt;分布式系统理论基础开篇：从放弃到入门&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E7%90%86%E8%AE%BA/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%801%EF%BC%9A%20%E4%B8%80%E8%87%B4%E6%80%A7%E3%80%812PC%E5%92%8C3PC.md"&gt;分布式系统理论基础1： 一致性、2PC和3PC &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E7%90%86%E8%AE%BA/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%802%20%EF%BC%9ACAP.md"&gt;分布式系统理论基础2：CAP &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E7%90%86%E8%AE%BA/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%803%EF%BC%9A%20%E6%97%B6%E9%97%B4%E3%80%81%E6%97%B6%E9%92%9F%E5%92%8C%E4%BA%8B%E4%BB%B6%E9%A1%BA%E5%BA%8F.md"&gt;分布式系统理论基础3： 时间、时钟和事件顺序&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E7%90%86%E8%AE%BA/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%804%EF%BC%9APaxos.md"&gt;分布式系统理论基础4：Paxos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E7%90%86%E8%AE%BA/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%805%EF%BC%9A%E9%80%89%E4%B8%BE%E3%80%81%E5%A4%9A%E6%95%B0%E6%B4%BE%E5%92%8C%E7%A7%9F%E7%BA%A6.md"&gt;分布式系统理论基础5：选举、多数派和租约&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E7%90%86%E8%AE%BA/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%806%EF%BC%9ARaft%E3%80%81Zab.md"&gt;分布式系统理论基础6：Raft、Zab &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E7%90%86%E8%AE%BA/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E8%BF%9B%E9%98%B67%EF%BC%9APaxos%E5%8F%98%E7%A7%8D%E5%92%8C%E4%BC%98%E5%8C%96.md"&gt;分布式系统理论进阶7：Paxos变种和优化 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E7%90%86%E8%AE%BA/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%808%EF%BC%9Azookeeper%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E8%B0%83%E6%9C%8D%E5%8A%A1.md"&gt;分布式系统理论基础8：zookeeper分布式协调服务 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-技术" class="anchor" aria-hidden="true" href="#技术"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;技术&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E5%AE%9E%E6%88%98/%E6%90%9E%E6%87%82%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF1%EF%BC%9A%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.md"&gt;搞懂分布式技术1：分布式系统的一些基本概念 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E5%AE%9E%E6%88%98/%E6%90%9E%E6%87%82%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF2%EF%BC%9A%E5%88%86%E5%B8%83%E5%BC%8F%E4%B8%80%E8%87%B4%E6%80%A7%E5%8D%8F%E8%AE%AE%E4%B8%8EPaxos%EF%BC%8CRaft%E7%AE%97%E6%B3%95.md"&gt;搞懂分布式技术2：分布式一致性协议与Paxos，Raft算法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E5%AE%9E%E6%88%98/%E6%90%9E%E6%87%82%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF3%EF%BC%9A%E5%88%9D%E6%8E%A2%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E8%B0%83%E6%9C%8D%E5%8A%A1zookeeper.md"&gt;搞懂分布式技术3：初探分布式协调服务zookeeper &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E5%AE%9E%E6%88%98/%E6%90%9E%E6%87%82%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF4%EF%BC%9AZAB%E5%8D%8F%E8%AE%AE%E6%A6%82%E8%BF%B0%E4%B8%8E%E9%80%89%E4%B8%BB%E6%B5%81%E7%A8%8B%E8%AF%A6%E8%A7%A3.md"&gt;搞懂分布式技术4：ZAB协议概述与选主流程详解 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E5%AE%9E%E6%88%98/%E6%90%9E%E6%87%82%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF5%EF%BC%9AZookeeper%E7%9A%84%E9%85%8D%E7%BD%AE%E4%B8%8E%E9%9B%86%E7%BE%A4%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98.md"&gt;搞懂分布式技术5：Zookeeper的配置与集群管理实战&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E5%AE%9E%E6%88%98/%E6%90%9E%E6%87%82%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF6%EF%BC%9AZookeeper%E5%85%B8%E5%9E%8B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E5%8F%8A%E5%AE%9E%E8%B7%B5.md"&gt;搞懂分布式技术6：Zookeeper典型应用场景及实践 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E5%AE%9E%E6%88%98/%E6%90%9E%E6%87%82%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF7%EF%BC%9A%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E6%A6%82%E5%BF%B5%E4%B8%8E%E4%B8%BB%E6%B5%81%E6%96%B9%E6%A1%88.md"&gt;搞懂分布式技术7：负载均衡概念与主流方案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E5%AE%9E%E6%88%98/%E6%90%9E%E6%87%82%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF8%EF%BC%9A%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E5%8E%9F%E7%90%86%E5%89%96%E6%9E%90.md"&gt;搞懂分布式技术8：负载均衡原理剖析 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E5%AE%9E%E6%88%98/%E6%90%9E%E6%87%82%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF9%EF%BC%9ANginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E8%B7%B5.md"&gt;搞懂分布式技术9：Nginx负载均衡原理与实践 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E5%AE%9E%E6%88%98/%E6%90%9E%E6%87%82%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF10%EF%BC%9ALVS%E5%AE%9E%E7%8E%B0%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%9A%84%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E8%B7%B5.md"&gt;搞懂分布式技术10：LVS实现负载均衡的原理与实践 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E5%AE%9E%E6%88%98/%E6%90%9E%E6%87%82%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF11%EF%BC%9A%E5%88%86%E5%B8%83%E5%BC%8Fsession%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E4%B8%8E%E4%B8%80%E8%87%B4%E6%80%A7hash.md"&gt;搞懂分布式技术11：分布式session解决方案与一致性hash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E5%AE%9E%E6%88%98/%E6%90%9E%E6%87%82%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF12%EF%BC%9A%E5%88%86%E5%B8%83%E5%BC%8FID%E7%94%9F%E6%88%90%E6%96%B9%E6%A1%88.md"&gt;搞懂分布式技术12：分布式ID生成方案 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E5%AE%9E%E6%88%98/%E6%90%9E%E6%87%82%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF13%EF%BC%9A%E7%BC%93%E5%AD%98%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B.md"&gt;搞懂分布式技术13：缓存的那些事&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E5%AE%9E%E6%88%98/%E6%90%9E%E6%87%82%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF14%EF%BC%9ASpring%20Boot%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%9B%86%E6%88%90Redis%E7%BC%93%E5%AD%98.md"&gt;搞懂分布式技术14：Spring Boot使用注解集成Redis缓存&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E5%AE%9E%E6%88%98/%E6%90%9E%E6%87%82%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF15%EF%BC%9A%E7%BC%93%E5%AD%98%E6%9B%B4%E6%96%B0%E7%9A%84%E5%A5%97%E8%B7%AF.md"&gt;搞懂分布式技术15：缓存更新的套路 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E5%AE%9E%E6%88%98/%E6%90%9E%E6%87%82%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF16%EF%BC%9A%E6%B5%85%E8%B0%88%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%A1%88.md"&gt;搞懂分布式技术16：浅谈分布式锁的几种方案 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E5%AE%9E%E6%88%98/%E6%90%9E%E6%87%82%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF17%EF%BC%9A%E6%B5%85%E6%9E%90%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1.md"&gt;搞懂分布式技术17：浅析分布式事务 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E5%AE%9E%E6%88%98/%E6%90%9E%E6%87%82%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF18%EF%BC%9A%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E5%B8%B8%E7%94%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.md"&gt;搞懂分布式技术18：分布式事务常用解决方案 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E5%AE%9E%E6%88%98/%E6%90%9E%E6%87%82%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF19%EF%BC%9A%E4%BD%BF%E7%94%A8RocketMQ%E4%BA%8B%E5%8A%A1%E6%B6%88%E6%81%AF%E8%A7%A3%E5%86%B3%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1.md"&gt;搞懂分布式技术19：使用RocketMQ事务消息解决分布式事务 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E5%AE%9E%E6%88%98/%E6%90%9E%E6%87%82%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF20%EF%BC%9A%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E5%9B%A0%E4%BD%95%E8%80%8C%E7%94%9F.md"&gt;搞懂分布式技术20：消息队列因何而生&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/distrubuted/%E5%AE%9E%E6%88%98/%E6%90%9E%E6%87%82%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF21%EF%BC%9A%E6%B5%85%E8%B0%88%E5%88%86%E5%B8%83%E5%BC%8F%E6%B6%88%E6%81%AF%E6%8A%80%E6%9C%AF%20Kafka.md"&gt;搞懂分布式技术21：浅谈分布式消息技术 Kafka &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-面试指南" class="anchor" aria-hidden="true" href="#面试指南"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;面试指南&lt;/h2&gt;
&lt;p&gt;todo&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-校招指南" class="anchor" aria-hidden="true" href="#校招指南"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;校招指南&lt;/h3&gt;
&lt;p&gt;todo&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-面经" class="anchor" aria-hidden="true" href="#面经"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;面经&lt;/h3&gt;
&lt;p&gt;todo&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-工具" class="anchor" aria-hidden="true" href="#工具"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;工具&lt;/h2&gt;
&lt;p&gt;todo&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-资料" class="anchor" aria-hidden="true" href="#资料"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;资料&lt;/h2&gt;
&lt;p&gt;todo&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-书单" class="anchor" aria-hidden="true" href="#书单"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;书单&lt;/h3&gt;
&lt;p&gt;todo&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-待办" class="anchor" aria-hidden="true" href="#待办"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;待办&lt;/h2&gt;
&lt;p&gt;springboot和springcloud&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-微信公众号" class="anchor" aria-hidden="true" href="#微信公众号"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;微信公众号&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-java技术江湖" class="anchor" aria-hidden="true" href="#java技术江湖"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Java技术江湖&lt;/h3&gt;
&lt;p&gt;如果大家想要实时关注我更新的文章以及分享的干货的话，可以关注我的公众号【Java技术江湖】一位阿里 Java 工程师的技术小站，作者黄小斜，专注 Java 相关技术：SSM、SpringBoot、MySQL、分布式、中间件、集群、Linux、网络、多线程，偶尔讲点Docker、ELK，同时也分享技术干货和学习经验，致力于Java全栈开发！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Java工程师技术学习资料:&lt;/strong&gt; 一些Java工程师常用学习资源，关注公众号后，后台回复关键字 &lt;strong&gt;“Java”&lt;/strong&gt; 即可免费无套路获取。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Java进阶架构师资料:&lt;/strong&gt; 关注公众号后回复 &lt;strong&gt;”架构师“&lt;/strong&gt; 即可领取 Java基础、进阶、项目和架构师等免费学习资料，更有数据库、分布式、微服务等热门技术学习视频，内容丰富，兼顾原理和实践，另外也将赠送作者原创的Java学习指南、Java程序员面试指南等干货资源&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1d3aaa6b7683d87afbd3ccc0efb023e72f87ed7c/68747470733a2f2f696d672d626c6f672e6373646e696d672e636e2f32303139303830353039303130383938342e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/1d3aaa6b7683d87afbd3ccc0efb023e72f87ed7c/68747470733a2f2f696d672d626c6f672e6373646e696d672e636e2f32303139303830353039303130383938342e6a7067" alt="我的公众号" data-canonical-src="https://img-blog.csdnimg.cn/20190805090108984.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-个人公众号程序员黄小斜" class="anchor" aria-hidden="true" href="#个人公众号程序员黄小斜"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;个人公众号：程序员黄小斜&lt;/h3&gt;
&lt;p&gt;​
黄小斜是 985 硕士，阿里巴巴Java工程师，在自学编程、技术求职、Java学习等方面有丰富经验和独到见解，希望帮助到更多想要从事互联网行业的程序员们。
​
作者专注于 JAVA 后端技术栈，热衷于分享程序员干货、学习经验、求职心得，以及自学编程和Java技术栈的相关干货。
​
黄小斜是一个斜杠青年，坚持学习和写作，相信终身学习的力量，希望和更多的程序员交朋友，一起进步和成长！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;原创电子书:&lt;/strong&gt; 关注微信公众号【程序员黄小斜】后回复 &lt;strong&gt;"原创电子书"&lt;/strong&gt; 即可领取我原创的电子书《菜鸟程序员修炼手册：从技术小白到阿里巴巴Java工程师》这份电子书总结了我2年的Java学习之路，包括学习方法、技术总结、求职经验和面试技巧等内容，已经帮助很多的程序员拿到了心仪的offer！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;程序员3T技术学习资源：&lt;/strong&gt; 一些程序员学习技术的资源大礼包，关注公众号【程序员黄小斜】后，后台回复关键字 &lt;strong&gt;“资料”&lt;/strong&gt; 即可免费无套路获取，包括Java、python、C++、大数据、机器学习、前端、移动端等方向的技术资料。&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d704f03eca55539c23bb3405413edde5502a8bb0/68747470733a2f2f696d672d626c6f672e6373646e696d672e636e2f32303139303832393232323735303535362e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/d704f03eca55539c23bb3405413edde5502a8bb0/68747470733a2f2f696d672d626c6f672e6373646e696d672e636e2f32303139303832393232323735303535362e6a7067" alt="" data-canonical-src="https://img-blog.csdnimg.cn/20190829222750556.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>h2pl</author><guid isPermaLink="false">https://github.com/h2pl/Java-Tutorial</guid><pubDate>Thu, 06 Feb 2020 00:11:00 GMT</pubDate></item><item><title>graphhopper/graphhopper #12 in Java, This week</title><link>https://github.com/graphhopper/graphhopper</link><description>&lt;p&gt;&lt;i&gt;An open source routing engine. Use it as Java library or server. With OpenStreetMap.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-graphhopper-routing-engine" class="anchor" aria-hidden="true" href="#graphhopper-routing-engine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GraphHopper Routing Engine&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://travis-ci.org/graphhopper/graphhopper" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7d61c60b70c7079b50192349ad5f12197b5af016/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f6772617068686f707065722f6772617068686f707065722e706e673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://secure.travis-ci.org/graphhopper/graphhopper.png?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GraphHopper is a fast and memory efficient Java routing engine, released under Apache License 2.0.
By default it uses OpenStreetMap and GTFS data, but it can import other data sources.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h1&gt;
&lt;p&gt;We have a prospering community and welcome everyone. Let us know your problems, use cases or just &lt;a href="https://discuss.graphhopper.com/" rel="nofollow"&gt;say hello&lt;/a&gt;. Please see our &lt;a href="https://graphhopper.com/agreements/cccoc.html" rel="nofollow"&gt;community guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-get-started" class="anchor" aria-hidden="true" href="#get-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Get Started&lt;/h2&gt;
&lt;p&gt;To get started, read through our documentation and install the GraphHopper Web Service locally.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;unstable: &lt;a href="https://github.com/graphhopper/graphhopper/blob/master/docs/index.md"&gt;documentation&lt;/a&gt;, &lt;a href="https://oss.sonatype.org/content/groups/public/com/graphhopper/graphhopper-web/1.0-SNAPSHOT/" rel="nofollow"&gt;web service jar&lt;/a&gt;, &lt;a href="https://oss.sonatype.org/content/groups/public/com/graphhopper/graphhopper-android/1.0-SNAPSHOT/" rel="nofollow"&gt;Android APK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;0.13.0: &lt;a href="https://www.graphhopper.com/blog/2019/09/18/graphhopper-routing-engine-0-13-released/" rel="nofollow"&gt;announcement&lt;/a&gt;, &lt;a href="https://github.com/graphhopper/graphhopper/blob/0.13/docs/index.md"&gt;documentation&lt;/a&gt;, &lt;a href="https://graphhopper.com/public/releases/graphhopper-web-0.13.0.jar" rel="nofollow"&gt;web service jar&lt;/a&gt;, &lt;a href="https://graphhopper.com/public/releases/graphhopper-android-0.13.0.apk" rel="nofollow"&gt;Android APK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;0.12.0: &lt;a href="https://www.graphhopper.com/blog/2019/03/26/graphhopper-routing-engine-0-12-released/" rel="nofollow"&gt;announcement&lt;/a&gt;, &lt;a href="https://github.com/graphhopper/graphhopper/blob/0.12/docs/index.md"&gt;documentation&lt;/a&gt;, &lt;a href="https://graphhopper.com/public/releases/graphhopper-web-0.12.0.jar" rel="nofollow"&gt;web service jar&lt;/a&gt;, &lt;a href="https://graphhopper.com/public/releases/graphhopper-android-0.12.0.apk" rel="nofollow"&gt;Android APK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;0.11.0: &lt;a href="https://www.graphhopper.com/blog/2018/09/17/graphhopper-routing-engine-0-11-release-open-sourcing-the-isochrone-module/" rel="nofollow"&gt;announcement&lt;/a&gt;, &lt;a href="https://github.com/graphhopper/graphhopper/blob/0.11/docs/index.md"&gt;documentation&lt;/a&gt;, &lt;a href="https://graphhopper.com/public/releases/graphhopper-web-0.11.0.jar" rel="nofollow"&gt;web service jar&lt;/a&gt;, &lt;a href="https://graphhopper.com/public/releases/graphhopper-android-0.11.0.apk" rel="nofollow"&gt;Android APK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;0.10.0: &lt;a href="https://www.graphhopper.com/blog/2018/03/08/graphhopper-routing-engine-0-10-released/" rel="nofollow"&gt;announcement&lt;/a&gt;, &lt;a href="https://github.com/graphhopper/graphhopper/blob/0.10/docs/index.md"&gt;documentation&lt;/a&gt;, &lt;a href="https://graphhopper.com/public/releases/graphhopper-web-0.10.3-bin.zip" rel="nofollow"&gt;web service zip&lt;/a&gt;, &lt;a href="https://graphhopper.com/public/releases/graphhopper-android-0.10.3.apk" rel="nofollow"&gt;Android APK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;0.9.0: &lt;a href="https://www.graphhopper.com/blog/2017/05/31/graphhopper-routing-engine-0-9-released/" rel="nofollow"&gt;announcement&lt;/a&gt;, &lt;a href="https://github.com/graphhopper/graphhopper/blob/0.9/docs/index.md"&gt;documentation&lt;/a&gt;, &lt;a href="https://graphhopper.com/public/releases/graphhopper-web-0.9.0-bin.zip" rel="nofollow"&gt;web service zip&lt;/a&gt;, &lt;a href="https://graphhopper.com/public/releases/graphhopper-android-0.9.0.apk" rel="nofollow"&gt;Android APK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;0.8.2: &lt;a href="https://www.graphhopper.com/blog/2016/10/18/graphhopper-routing-engine-0-8-released/" rel="nofollow"&gt;announcement&lt;/a&gt;, &lt;a href="https://github.com/graphhopper/graphhopper/blob/0.8/docs/index.md"&gt;documentation&lt;/a&gt;, &lt;a href="https://graphhopper.com/public/releases/graphhopper-web-0.8.2-bin.zip" rel="nofollow"&gt;web service zip&lt;/a&gt;, &lt;a href="https://graphhopper.com/public/releases/graphhopper-android-0.8.2.apk" rel="nofollow"&gt;Android APK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;0.7.0: &lt;a href="https://www.graphhopper.com/blog/2016/06/15/graphhopper-routing-engine-0-7-released/" rel="nofollow"&gt;announcement&lt;/a&gt;, &lt;a href="https://github.com/graphhopper/graphhopper/blob/0.7/docs/index.md"&gt;documentation&lt;/a&gt;, &lt;a href="https://graphhopper.com/public/releases/graphhopper-web-0.7.0-bin.zip" rel="nofollow"&gt;web service zip&lt;/a&gt;, &lt;a href="https://graphhopper.com/public/releases/graphhopper-android-0.7.0.apk" rel="nofollow"&gt;Android APK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-docker" class="anchor" aria-hidden="true" href="#docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker&lt;/h3&gt;
&lt;p&gt;Run a dockerized GraphHopper from sources:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker build -t graphhopper:master &lt;span class="pl-c1"&gt;.&lt;/span&gt;
docker run -d --name graphhopper -v &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;path_data_directory&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;/data:/data -p 8989:8989 graphhopper:master&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See also the builds at &lt;a href="https://hub.docker.com/r/graphhopper/graphhopper" rel="nofollow"&gt;Docker Hub&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-deb-or-rpm-package" class="anchor" aria-hidden="true" href="#deb-or-rpm-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DEB or RPM package&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/graphhopper/graphhopper/issues/561#issuecomment-473567727"&gt;There is an experimental step by step guide&lt;/a&gt; that creates a debian or rpm package from the cloned and compiled repository. Before we can recommend this we need some more testers and feedback :)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-questions" class="anchor" aria-hidden="true" href="#questions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Questions&lt;/h2&gt;
&lt;p&gt;All questions can go to our &lt;a href="https://discuss.graphhopper.com/" rel="nofollow"&gt;forum&lt;/a&gt; where we also have subsections specially for developers, mobile usage (iOS&amp;amp;Android), and &lt;a href="https://github.com/graphhopper/map-matching"&gt;our map matching component&lt;/a&gt;. Another place to ask questions would be on &lt;a href="http://stackoverflow.com/questions/tagged/graphhopper" rel="nofollow"&gt;Stackoverflow&lt;/a&gt;, but please do &lt;strong&gt;not&lt;/strong&gt; use our issue section. Create new issues only if you are sure that this is a bug. Also, see how to contribute in the next section.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contribute" class="anchor" aria-hidden="true" href="#contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribute&lt;/h2&gt;
&lt;p&gt;Read through &lt;a href="CONTRIBUTING.md"&gt;how to contribute&lt;/a&gt; for information on topics
like finding and fixing bugs and improving our documentation or translations!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-for-the-web" class="anchor" aria-hidden="true" href="#for-the-web"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;For the Web&lt;/h2&gt;
&lt;p&gt;See GraphHopper in action on &lt;a href="https://graphhopper.com/maps" rel="nofollow"&gt;GraphHopper Maps&lt;/a&gt; and &lt;a href="./docs/index.md"&gt;install it&lt;/a&gt; on your own machine:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://graphhopper.com/maps" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d40f22b9d8f7e8c99cc9766f3e294e40e2099b56/68747470733a2f2f6b6172757373656c6c2e66696c65732e776f726470726573732e636f6d2f323031342f31322f6772617068686f707065722d6d6170732d302d342d707265766965772e706e67" alt="GraphHopper Maps" data-canonical-src="https://karussell.files.wordpress.com/2014/12/graphhopper-maps-0-4-preview.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GraphHopper Maps uses the &lt;a href="https://graphhopper.com/#directions-api" rel="nofollow"&gt;Directions API for Business&lt;/a&gt; under the hood, which provides
a Routing API via GraphHopper, a Route Optimization API via &lt;a href="http://jsprit.github.io/" rel="nofollow"&gt;jsprit&lt;/a&gt;, a fast Matrix API
and an address search via &lt;a href="https://github.com/komoot/photon"&gt;Photon&lt;/a&gt;. Additionally, map tiles from various providers are used
where the default is &lt;a href="http://omniscale.com/" rel="nofollow"&gt;Omniscale&lt;/a&gt;. All of these are available for free, via encrypted connections and from German servers for a nice and private route planning experience!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-for-public-transit" class="anchor" aria-hidden="true" href="#for-public-transit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;For Public Transit&lt;/h2&gt;
&lt;p&gt;&lt;a href="./reader-gtfs/README.md#quick-start"&gt;Get started&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="./reader-gtfs/README.md#quick-start"&gt;&lt;img src="https://camo.githubusercontent.com/2fada1417ce2d96b8976a516a01aa2f862f6c7bb/68747470733a2f2f7777772e6772617068686f707065722e636f6d2f77702d636f6e74656e742f75706c6f6164732f323031382f30352f53637265656e2d53686f742d323031382d30352d31362d61742d32312e32332e32352d363030783533382e706e67" alt="Realtime Demo" data-canonical-src="https://www.graphhopper.com/wp-content/uploads/2018/05/Screen-Shot-2018-05-16-at-21.23.25-600x538.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-for-mobile-apps" class="anchor" aria-hidden="true" href="#for-mobile-apps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;For Mobile Apps&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-offline" class="anchor" aria-hidden="true" href="#offline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Offline&lt;/h3&gt;
&lt;p&gt;There are subprojects to make GraphHopper working offline on &lt;a href="./android/README.md"&gt;Android&lt;/a&gt; and &lt;a href="http://github.com/graphhopper/graphhopper-ios"&gt;iOS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="./android/README.md"&gt;&lt;img src="https://camo.githubusercontent.com/42186491ae7e0f1f9382e48f0bf70c03c3e3babe/68747470733a2f2f7777772e6772617068686f707065722e636f6d2f77702d636f6e74656e742f75706c6f6164732f323031362f31302f616e64726f69642d64656d6f2d73637265656e73686f742d322e706e67" alt="simple routing" data-canonical-src="https://www.graphhopper.com/wp-content/uploads/2016/10/android-demo-screenshot-2.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-online" class="anchor" aria-hidden="true" href="#online"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Online&lt;/h3&gt;
&lt;p&gt;There is an extension that creates a &lt;a href="https://github.com/graphhopper/graphhopper-navigation"&gt;navigation endpoint&lt;/a&gt; to feed a
&lt;a href="https://github.com/graphhopper/graphhopper-navigation-example"&gt;lightweight navigation Android client&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/graphhopper/graphhopper-navigation-example"&gt;&lt;img src="https://raw.githubusercontent.com/graphhopper/graphhopper-navigation-example/master/files/graphhopper-navigation-example.png" alt="android navigation demo app" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-for-analysis" class="anchor" aria-hidden="true" href="#for-analysis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;For Analysis&lt;/h2&gt;
&lt;p&gt;There is the isochrone subproject to calculate and visualize the reachable area for a certain travel mode&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="./docs/web/api-doc.md#isochrone"&gt;Isochrone Web API&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="./docs/web/api-doc.md#isochrone"&gt;&lt;img src="./docs/isochrone/images/isochrone.png" alt="Isochrone API image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="//www.graphhopper.com/blog/2018/07/04/high-precision-reachability/" rel="nofollow"&gt;Shortest Path Tree API&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.graphhopper.com/blog/2018/07/04/high-precision-reachability/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8c0c9a85b7ad816754f6d171ff5fdfb0a452673b/68747470733a2f2f7777772e6772617068686f707065722e636f6d2f77702d636f6e74656e742f75706c6f6164732f323031382f30362f6265726c696e2d72656163686162696c6974792d373638783430312e706e67" alt="high precision reachability image" data-canonical-src="https://www.graphhopper.com/wp-content/uploads/2018/06/berlin-reachability-768x401.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To support these high precision reachability approaches there is a special /spt
endpoint (shortest path tree). &lt;a href="https://github.com/graphhopper/graphhopper/pull/1577"&gt;See #1577&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-technical-overview" class="anchor" aria-hidden="true" href="#technical-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Technical Overview&lt;/h1&gt;
&lt;p&gt;GraphHopper supports several routing algorithms, such as
&lt;a href="https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm" rel="nofollow"&gt;Dijkstra&lt;/a&gt; and
&lt;a href="https://en.wikipedia.org/wiki/A*_search_algorithm" rel="nofollow"&gt;A&lt;/a&gt;&lt;code&gt;*&lt;/code&gt; and its bidirectional variants.
Furthermore, it allows you to use
&lt;a href="https://en.wikipedia.org/wiki/Contraction_hierarchies" rel="nofollow"&gt;Contraction Hierarchies&lt;/a&gt; (CH)
very easily. We call this &lt;strong&gt;speed mode&lt;/strong&gt;; without this CH preparation, we call it &lt;strong&gt;flexible mode&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The speed mode comes with very fast and lightweight (less RAM) responses, although it does not use heuristics
in its default settings. The downsides are that the speed mode allows only pre-defined vehicle profiles (multiple possible in GraphHopper)
and requires a time consuming and resource-intensive preparation. Finally, implementing certain features is not possible
or very complex compared to the flexible mode.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;hybrid mode&lt;/strong&gt; also requires preparation time and memory,
but it is much more flexible regarding changing properties per request or e.g. integrating traffic data and more.
Furthermore, this hybrid mode is slower than the speed mode, but it is an
order of magnitude faster than the flexible mode and uses also less RAM for one request.&lt;/p&gt;
&lt;p&gt;You can switch between all modes at request time.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;We chose the Apache License to make it easy for you to embed GraphHopper in your products, even closed source.
We suggest that you contribute back your changes, as GraphHopper evolves fast,
but of course this is not necessary.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-openstreetmap-support" class="anchor" aria-hidden="true" href="#openstreetmap-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenStreetMap Support&lt;/h2&gt;
&lt;p&gt;OpenStreetMap is directly supported from GraphHopper. Without the amazing data from
OpenStreetMap, GraphHopper wouldn't be possible at all.
Other map data will need a custom import procedure, see e.g. &lt;a href="https://github.com/graphhopper/graphhopper/issues/277"&gt;Ordnance Survey&lt;/a&gt;,
&lt;a href="https://github.com/graphhopper/graphhopper-reader-shp"&gt;Shapefile like ESRI&lt;/a&gt; or &lt;a href="https://github.com/knowname/morituri"&gt;Navteq&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-written-in-java" class="anchor" aria-hidden="true" href="#written-in-java"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Written in Java&lt;/h2&gt;
&lt;p&gt;GraphHopper is written in Java and runs on Linux, Mac OS X,
Windows, BSD, Solaris, Raspberry Pi, Android, Blackberry, and even iOS.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-maven" class="anchor" aria-hidden="true" href="#maven"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maven&lt;/h3&gt;
&lt;p&gt;Embed GraphHopper with OpenStreetMap support into your Java application via the following snippet:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;com.graphhopper&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;graphhopper-reader-osm&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;[LATEST-VERSION]&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want to write your own import procedure or you don't need OSM import like
on &lt;a href="./docs/android/index.md"&gt;Android&lt;/a&gt;, then use:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;com.graphhopper&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;graphhopper-core&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;[LATEST-VERSION]&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-customizable" class="anchor" aria-hidden="true" href="#customizable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizable&lt;/h2&gt;
&lt;p&gt;We've built the GraphHopper class which makes simple things easy and complex things like multi-modal routing possible.
Still, you can use the low level API of GraphHopper and you'll see that
it was created to allow fast and memory efficient use of the underlying data structures and algorithms.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-android--blackberry" class="anchor" aria-hidden="true" href="#android--blackberry"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android / Blackberry&lt;/h3&gt;
&lt;p&gt;On Android and Blackberry (since 10.2.1), we provide an integration with Mapsforge which makes offline navigation one step closer.
Due to the usage of memory mapped files and Contraction Hierarchies,
we avoid allocating too much memory. This makes it possible to run Germany-wide queries with only
32MB in a few seconds. We provide an Android studio project as well as the Maven-Android integration to be
used in other IDEs.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-web-ui-and-api" class="anchor" aria-hidden="true" href="#web-ui-and-api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Web UI and API&lt;/h3&gt;
&lt;p&gt;With the web module, we provide code to query GraphHopper over HTTP and decrease bandwidth usage as much as possible.
For that we use a polyline encoding from Google, the Ramer–Douglas–Peucker algorithm, and a simple
GZIP servlet filter.&lt;br&gt;
On the client side, we provide Java and JavaScript code (via Leaflet) to consume that service and
visualize the routes.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-desktop" class="anchor" aria-hidden="true" href="#desktop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Desktop&lt;/h3&gt;
&lt;p&gt;GraphHopper also runs on the Desktop in a Java application without internet access.
For debugging purposes GraphHopper can produce vector tiles, i.e. a visualization of the road network in the browser (see #1572). Also a more low level Swing-based UI is provided via MiniGraphUI in the tools module, see some
visualizations done with it &lt;a href="https://graphhopper.com/blog/2016/01/19/alternative-roads-to-rome/" rel="nofollow"&gt;here&lt;/a&gt;.
A fast and production ready map visualization for the Desktop can be implemented via &lt;a href="https://github.com/mapsforge/mapsforge"&gt;mapsforge&lt;/a&gt; or &lt;a href="https://github.com/mapsforge/vtm"&gt;mapsforge vtm&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h1&gt;
&lt;p&gt;Here is a list of the more detailed features including a link to the documentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./docs/web/quickstart.md"&gt;Quick installation and start for users&lt;/a&gt; - just Java necessary! &lt;a href="./docs/core/quickstart-from-source.md"&gt;Simple start for developers&lt;/a&gt; due to Maven.&lt;/li&gt;
&lt;li&gt;Works out of the box with OpenStreetMap (osm/xml and pbf) and can be adapted to custom data&lt;/li&gt;
&lt;li&gt;OpenStreetMap integration: stores and considers road type, speed limit, the surface, barriers, access restrictions, ferries, &lt;a href="https://github.com/graphhopper/graphhopper/pull/621"&gt;conditional access restrictions&lt;/a&gt;, ...&lt;/li&gt;
&lt;li&gt;GraphHopper is fast. And with the so called "Contraction Hierarchies" it can be even faster (enabled by default).&lt;/li&gt;
&lt;li&gt;Memory efficient data structures, algorithms and &lt;a href="./docs/core/low-level-api.md"&gt;the low and high level API&lt;/a&gt; is tuned towards ease of use and efficiency&lt;/li&gt;
&lt;li&gt;Provides a simple &lt;a href="./docs/web/api-doc.md"&gt;web API&lt;/a&gt; including JavaScript and Java clients&lt;/li&gt;
&lt;li&gt;Multiple weightings (fastest/shortest/...) and pre-built routing profiles: car, bike, racingbike, mountain bike, foot, motorcycle, ...&lt;/li&gt;
&lt;li&gt;Supports public transit routing and &lt;a href="./reader-gtfs/README.md"&gt;GTFS&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Offers turn instructions in more than 42 languages, contribute or improve &lt;a href="./docs/core/translations.md"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Displays and takes into account &lt;a href="./docs/core/elevation.md"&gt;elevation data&lt;/a&gt; (per default disabled)&lt;/li&gt;
&lt;li&gt;Can apply &lt;a href="https://graphhopper.com/blog/2015/04/08/visualize-and-handle-traffic-information-with-graphhopper-in-real-time-for-cologne-germany-koln/" rel="nofollow"&gt;real time changes to edge weights&lt;/a&gt; (flexible and hybrid mode only)&lt;/li&gt;
&lt;li&gt;Customization of vehicle profiles per request are possible (flexible and hybrid mode only)&lt;/li&gt;
&lt;li&gt;Possibility to specify a &lt;a href="./docs/core/routing.md"&gt;heading parameter&lt;/a&gt; of the vehicle for start, end and via points for navigation applications via &lt;code&gt;pass_through&lt;/code&gt; or &lt;code&gt;heading&lt;/code&gt; parameters (flexible and hybrid mode only)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discuss.graphhopper.com/t/alternative-routes/424" rel="nofollow"&gt;Alternative routes&lt;/a&gt; (flexible and hybrid mode only)&lt;/li&gt;
&lt;li&gt;&lt;a href="./docs/core/turn-restrictions.md"&gt;Turn costs and restrictions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Country specific routing via SpatialRules&lt;/li&gt;
&lt;li&gt;The core uses only a few dependencies (hppc, jts and slf4j)&lt;/li&gt;
&lt;li&gt;Scales from small indoor-sized to world-wide-sized graphs&lt;/li&gt;
&lt;li&gt;Finds nearest point on street e.g. to get elevation or 'snap to road' or being used as spatial index (see &lt;a href="https://github.com/graphhopper/graphhopper/pull/1485"&gt;#1485&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Does &lt;a href="https://github.com/graphhopper/map-matching"&gt;map matching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Calculates &lt;a href="./docs/web/api-doc.md#isochrone"&gt;isochrones&lt;/a&gt; and &lt;a href="https://github.com/graphhopper/graphhopper/pull/1577"&gt;shortest path trees&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Shows the whole road network in the browser for debugging purposes ("vector tile support") &lt;a href="https://github.com/graphhopper/graphhopper/pull/1572"&gt;#1572&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Shows details along a route like road_class or max_speed ("path details") &lt;a href="https://github.com/graphhopper/graphhopper/pull/1142"&gt;#1142&lt;/a&gt; or for the whole road network via the "vector tile support"&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>graphhopper</author><guid isPermaLink="false">https://github.com/graphhopper/graphhopper</guid><pubDate>Thu, 06 Feb 2020 00:12:00 GMT</pubDate></item><item><title>OpenAPITools/openapi-generator #13 in Java, This week</title><link>https://github.com/OpenAPITools/openapi-generator</link><description>&lt;p&gt;&lt;i&gt;OpenAPI Generator allows generation of API client libraries (SDK generation), server stubs, documentation and configuration automatically given an OpenAPI Spec (v2, v3)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1 align="center"&gt;&lt;a id="user-content-openapi-generator" class="anchor" aria-hidden="true" href="#openapi-generator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenAPI Generator&lt;/h1&gt;
&lt;div align="center"&gt;
&lt;p&gt;&lt;a href="https://github.com/OpenAPITools/openapi-generator/tree/master"&gt;Master&lt;/a&gt; (&lt;code&gt;4.3.0&lt;/code&gt;): &lt;a href="https://travis-ci.org/OpenAPITools/openapi-generator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bd23c2789ffee568debdbed0cb1fa09cf4e75986/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f4f70656e415049546f6f6c732f6f70656e6170692d67656e657261746f722f6d61737465722e7376673f6c6162656c3d496e746567726174696f6e25323054657374" alt="Build Status" data-canonical-src="https://img.shields.io/travis/OpenAPITools/openapi-generator/master.svg?label=Integration%20Test" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/OpenAPITools/openapi-generator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bd93f5f0b455ecdefce991685f62d3b5efec25d0/68747470733a2f2f636972636c6563692e636f6d2f67682f4f70656e415049546f6f6c732f6f70656e6170692d67656e657261746f722e7376673f7374796c653d736869656c64" alt="Integration Test2" data-canonical-src="https://circleci.com/gh/OpenAPITools/openapi-generator.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://app.shippable.com/github/OpenAPITools/openapi-generator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e30e124bd50d70595e7a830131f794216ffacf15/68747470733a2f2f6170692e736869707061626c652e636f6d2f70726f6a656374732f3561663662663734653739306634303730303834613131352f62616467653f6272616e63683d6d6173746572" alt="Run Status" data-canonical-src="https://api.shippable.com/projects/5af6bf74e790f4070084a115/badge?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/WilliamCheng/openapi-generator-wh2wu" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a01041cac45b71d2a5afabe174f41e8b7a3d934e/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f6f70656e617069746f6f6c732f6f70656e6170692d67656e657261746f723f6272616e63683d6d6173746572267376673d747275652670617373696e67546578743d57696e646f7773253230546573742532302d2532304f4b266661696c696e67546578743d57696e646f7773253230546573742532302d2532304661696c73" alt="Windows Test" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/openapitools/openapi-generator?branch=master&amp;amp;svg=true&amp;amp;passingText=Windows%20Test%20-%20OK&amp;amp;failingText=Windows%20Test%20-%20Fails" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cloud.drone.io/OpenAPITools/openapi-generator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9992be008ebb0a1fd9927b3dbf1f35df0367eb18/68747470733a2f2f636c6f75642e64726f6e652e696f2f6170692f6261646765732f4f70656e415049546f6f6c732f6f70656e6170692d67656e657261746f722f7374617475732e7376673f7265663d726566732f68656164732f6d6173746572" alt="JDK11 Build" data-canonical-src="https://cloud.drone.io/api/badges/OpenAPITools/openapi-generator/status.svg?ref=refs/heads/master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://app.bitrise.io/app/4a2b10a819d12b67" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/26bc15dd3186973e7a9ce5ef367d2b3ce3a77038/68747470733a2f2f6170702e626974726973652e696f2f6170702f346132623130613831396431326236372f7374617475732e7376673f746f6b656e3d383539464d4452385148776162437a77765a4b367651266272616e63683d6d6173746572" alt="iOS Build Status" data-canonical-src="https://app.bitrise.io/app/4a2b10a819d12b67/status.svg?token=859FMDR8QHwabCzwvZK6vQ&amp;amp;branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/OpenAPITools/openapi-generator/tree/5.0.x"&gt;&lt;code&gt;5.0.x&lt;/code&gt;&lt;/a&gt; branch: &lt;a href="https://travis-ci.org/OpenAPITools/openapi-generator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9850f73c15300e1f0f20322162d0efa1ff092acf/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f4f70656e415049546f6f6c732f6f70656e6170692d67656e657261746f722f352e302e782e7376673f6c6162656c3d496e746567726174696f6e25323054657374" alt="Build Status" data-canonical-src="https://img.shields.io/travis/OpenAPITools/openapi-generator/5.0.x.svg?label=Integration%20Test" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/OpenAPITools/openapi-generator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c137fa2ae7d721a15b68345cf9acce4879c04116/68747470733a2f2f636972636c6563692e636f6d2f67682f4f70656e415049546f6f6c732f6f70656e6170692d67656e657261746f722f747265652f352e302e782e7376673f7374796c653d736869656c64" alt="Integration Test2" data-canonical-src="https://circleci.com/gh/OpenAPITools/openapi-generator/tree/5.0.x.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://app.shippable.com/github/OpenAPITools/openapi-generator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a1caff5a4583b1179fd36e0ffe7cdf1c72340999/68747470733a2f2f6170692e736869707061626c652e636f6d2f70726f6a656374732f3561663662663734653739306634303730303834613131352f62616467653f6272616e63683d352e302e78" alt="Run Status" data-canonical-src="https://api.shippable.com/projects/5af6bf74e790f4070084a115/badge?branch=5.0.x" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/WilliamCheng/openapi-generator-wh2wu" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/71f86909d810b012c43bdda74c151ecef676e209/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f6f70656e617069746f6f6c732f6f70656e6170692d67656e657261746f723f6272616e63683d352e302e78267376673d747275652670617373696e67546578743d57696e646f7773253230546573742532302d2532304f4b266661696c696e67546578743d57696e646f7773253230546573742532302d2532304661696c73" alt="Windows Test" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/openapitools/openapi-generator?branch=5.0.x&amp;amp;svg=true&amp;amp;passingText=Windows%20Test%20-%20OK&amp;amp;failingText=Windows%20Test%20-%20Fails" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cloud.drone.io/OpenAPITools/openapi-generator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/29fdc5f16446cc3a517dabb07614880ac66b032e/68747470733a2f2f636c6f75642e64726f6e652e696f2f6170692f6261646765732f4f70656e415049546f6f6c732f6f70656e6170692d67656e657261746f722f7374617475732e7376673f7265663d726566732f68656164732f352e302e78" alt="JDK11 Build" data-canonical-src="https://cloud.drone.io/api/badges/OpenAPITools/openapi-generator/status.svg?ref=refs/heads/5.0.x" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://app.bitrise.io/app/4a2b10a819d12b67" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/329ef41c15fac0c72814e43be3d966896269b739/68747470733a2f2f6170702e626974726973652e696f2f6170702f346132623130613831396431326236372f7374617475732e7376673f746f6b656e3d383539464d4452385148776162437a77765a4b367651266272616e63683d352e302e78" alt="iOS Build Status" data-canonical-src="https://app.bitrise.io/app/4a2b10a819d12b67/status.svg?token=859FMDR8QHwabCzwvZK6vQ&amp;amp;branch=5.0.x" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div align="center"&gt;
&lt;p&gt;&lt;a href="https://join.slack.com/t/openapi-generator/shared_invite/enQtNzAyNDMyOTU0OTE1LTY5ZDBiNDI5NzI5ZjQ1Y2E5OWVjMjZkYzY1ZGM2MWQ4YWFjMzcyNDY5MGI4NjQxNDBiMTlmZTc5NjY2ZTQ5MGM" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/99c4017d47baf367ead2bcc58f48d87f81255f68/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f536c61636b2d4a6f696e25323074686525323063686174253230726f6f6d2d6f72616e6765" alt="Jion the Slack chat room" data-canonical-src="https://img.shields.io/badge/Slack-Join%20the%20chat%20room-orange" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.openapitools%22%20AND%20a%3A%22openapi-generator%22" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c37d8128603b8da5febf9d2c322684a332bc6a3b/68747470733a2f2f696d672e736869656c64732e696f2f6d6176656e2d6d657461646174612f762f68747470732f7265706f312e6d6176656e2e6f72672f6d6176656e322f6f72672f6f70656e617069746f6f6c732f6f70656e6170692d67656e657261746f722f6d6176656e2d6d657461646174612e786d6c2e737667" alt="Stable releaases in the Maven store" data-canonical-src="https://img.shields.io/maven-metadata/v/https/repo1.maven.org/maven2/org/openapitools/openapi-generator/maven-metadata.xml.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/oas_generator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/222bcf0d47388e9f84939a88a3b767da4c772ea8/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f6f61735f67656e657261746f722e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f77" alt="Follow OpenAPI Generator Twitter account to get the latest update" data-canonical-src="https://img.shields.io/twitter/follow/oas_generator.svg?style=social&amp;amp;label=Follow" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div align="center"&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt; If you would like to contribute, please refer to &lt;a href="CONTRIBUTING.md"&gt;guidelines&lt;/a&gt; and a list of &lt;a href="https://github.com/openapitools/openapi-generator/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22"&gt;open tasks&lt;/a&gt;.&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bangbang" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/203c.png"&gt;‼️&lt;/g-emoji&gt; To migrate from Swagger Codegen to OpenAPI Generator, please refer to the &lt;a href="docs/migration-from-swagger-codegen.md"&gt;migration guide&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="bangbang" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/203c.png"&gt;‼️&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="notebook_with_decorative_cover" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d4.png"&gt;📔&lt;/g-emoji&gt; For more information, please refer to the &lt;a href="https://github.com/openapitools/openapi-generator/wiki"&gt;Wiki page&lt;/a&gt; and &lt;a href="https://github.com/openapitools/openapi-generator/wiki/FAQ"&gt;FAQ&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="notebook_with_decorative_cover" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d4.png"&gt;📔&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="notebook_with_decorative_cover" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d4.png"&gt;📔&lt;/g-emoji&gt; The eBook &lt;a href="https://gum.co/openapi_generator_ebook" rel="nofollow"&gt;A Beginner's Guide to Code Generation for REST APIs&lt;/a&gt; is a good starting point for beginners &lt;g-emoji class="g-emoji" alias="notebook_with_decorative_cover" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d4.png"&gt;📔&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; If the OpenAPI spec, templates or any input (e.g. options, environment variables) is obtained from an untrusted source or environment, please make sure you've reviewed these inputs before using OpenAPI Generator to generate the API client, server stub or documentation to avoid potential security issues (e.g. &lt;a href="https://en.wikipedia.org/wiki/Code_injection" rel="nofollow"&gt;code injection&lt;/a&gt;) &lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bangbang" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/203c.png"&gt;‼️&lt;/g-emoji&gt; Both "OpenAPI Tools" (&lt;a href="https://OpenAPITools.org" rel="nofollow"&gt;https://OpenAPITools.org&lt;/a&gt; - the parent organization of OpenAPI Generator) and "OpenAPI Generator" are not affiliated with OpenAPI Initiative (OAI) &lt;g-emoji class="g-emoji" alias="bangbang" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/203c.png"&gt;‼️&lt;/g-emoji&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-sponsors" class="anchor" aria-hidden="true" href="#sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsors&lt;/h2&gt;
&lt;p&gt;If you find OpenAPI Generator useful for work, please consider asking your company to support this Open Source project by &lt;a href="https://opencollective.com/openapi_generator" rel="nofollow"&gt;becoming a sponsor&lt;/a&gt;. You can also individually sponsor the project by &lt;a href="https://opencollective.com/openapi_generator" rel="nofollow"&gt;becoming a backer&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-thank-you-to-our-bronze-sponsors" class="anchor" aria-hidden="true" href="#thank-you-to-our-bronze-sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thank you to our bronze sponsors!&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://www.namsor.com/?utm_source=openapi_generator&amp;amp;utm_medium=github_webpage&amp;amp;utm_campaign=sponsor" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/420f0e8af4df9be719bf4e2b41622a3ce8a3961b/68747470733a2f2f6f70656e6170692d67656e657261746f722e746563682f696d672f636f6d70616e6965732f6e616d736f722e706e67" alt="NamSor" data-canonical-src="https://openapi-generator.tech/img/companies/namsor.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.lightbow.net/?utm_source=openapi_generator&amp;amp;utm_medium=github_webpage&amp;amp;utm_campaign=sponsor" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8626b71735941ad44e084775be828faa34d96bff/68747470733a2f2f6f70656e6170692d67656e657261746f722e746563682f696d672f636f6d70616e6965732f6c69676874626f772e706e67" alt="LightBow" data-canonical-src="https://openapi-generator.tech/img/companies/lightbow.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://docspring.com/?utm_source=openapi_generator&amp;amp;utm_medium=github_webpage&amp;amp;utm_campaign=sponsor" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/db3be36ccec619dd67bd4e05e42ae288f1cc1125/68747470733a2f2f6f70656e6170692d67656e657261746f722e746563682f696d672f636f6d70616e6965732f646f63737072696e672e706e67" width="128" height="128" data-canonical-src="https://openapi-generator.tech/img/companies/docspring.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-thank-you-godaddy-for-sponsoring-the-domain-names-and-linode-for-sponsoring-the-vps" class="anchor" aria-hidden="true" href="#thank-you-godaddy-for-sponsoring-the-domain-names-and-linode-for-sponsoring-the-vps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thank you GoDaddy for sponsoring the domain names and Linode for sponsoring the VPS&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://www.godaddy.com/?utm_source=openapi_generator&amp;amp;utm_medium=github_webpage&amp;amp;utm_campaign=sponsor" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/142d41158c036fb6aee80de3c910c526ca7ea8c7/68747470733a2f2f6f70656e6170692d67656e657261746f722e746563682f696d672f636f6d70616e6965732f676f64616464792e706e67" width="150" data-canonical-src="https://openapi-generator.tech/img/companies/godaddy.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.linode.com/?utm_source=openapi_generator&amp;amp;utm_medium=github_webpage&amp;amp;utm_campaign=sponsor" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3de572a1fbdd4f31adf90062c5a7245cda504bca/68747470733a2f2f7777772e6c696e6f64652e636f6d2f6d656469612f696d616765732f6c6f676f732f7374616e646172642f6c696768742f6c696e6f64652d6c6f676f5f7374616e646172645f6c696768745f736d616c6c2e706e67" alt="Linode" data-canonical-src="https://www.linode.com/media/images/logos/standard/light/linode-logo_standard_light_small.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;OpenAPI Generator allows generation of API client libraries (SDK generation), server stubs,  documentation and configuration automatically given an &lt;a href="https://github.com/OAI/OpenAPI-Specification"&gt;OpenAPI Spec&lt;/a&gt; (both 2.0 and 3.0 are supported). Currently, the following languages/frameworks are supported:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Languages/Frameworks&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;API clients&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;ActionScript&lt;/strong&gt;, &lt;strong&gt;Ada&lt;/strong&gt;, &lt;strong&gt;Apex&lt;/strong&gt;, &lt;strong&gt;Bash&lt;/strong&gt;, &lt;strong&gt;C&lt;/strong&gt;, &lt;strong&gt;C#&lt;/strong&gt; (.net 2.0, 3.5 or later, .NET Standard 1.3 - 2.0, .NET Core 2.0), &lt;strong&gt;C++&lt;/strong&gt; (cpp-restsdk, Qt5, Tizen), &lt;strong&gt;Clojure&lt;/strong&gt;, &lt;strong&gt;Dart (1.x, 2.x)&lt;/strong&gt;, &lt;strong&gt;Elixir&lt;/strong&gt;, &lt;strong&gt;Elm&lt;/strong&gt;, &lt;strong&gt;Eiffel&lt;/strong&gt;, &lt;strong&gt;Erlang&lt;/strong&gt;, &lt;strong&gt;Go&lt;/strong&gt;, &lt;strong&gt;Groovy&lt;/strong&gt;, &lt;strong&gt;Haskell&lt;/strong&gt; (http-client, Servant), &lt;strong&gt;Java&lt;/strong&gt; (Jersey1.x, Jersey2.x, OkHttp, Retrofit1.x, Retrofit2.x, Feign, RestTemplate, RESTEasy, Vertx, Google API Client Library for Java, Rest-assured, Spring 5 Web Client, MicroProfile Rest Client), &lt;strong&gt;Kotlin&lt;/strong&gt;, &lt;strong&gt;Lua&lt;/strong&gt;, &lt;strong&gt;Nim&lt;/strong&gt;, &lt;strong&gt;Node.js/JavaScript&lt;/strong&gt; (ES5, ES6, AngularJS with Google Closure Compiler annotations, Flow types), &lt;strong&gt;Objective-C&lt;/strong&gt;, &lt;strong&gt;OCaml&lt;/strong&gt;, &lt;strong&gt;Perl&lt;/strong&gt;, &lt;strong&gt;PHP&lt;/strong&gt;, &lt;strong&gt;PowerShell&lt;/strong&gt;, &lt;strong&gt;Python&lt;/strong&gt;, &lt;strong&gt;R&lt;/strong&gt;, &lt;strong&gt;Ruby&lt;/strong&gt;, &lt;strong&gt;Rust&lt;/strong&gt; (rust, rust-server), &lt;strong&gt;Scala&lt;/strong&gt; (akka, http4s, scalaz, swagger-async-httpclient), &lt;strong&gt;Swift&lt;/strong&gt; (2.x, 3.x, 4.x, 5.x), &lt;strong&gt;Typescript&lt;/strong&gt; (AngularJS, Angular (2.x - 8.x), Aurelia, Axios, Fetch, Inversify, jQuery, Node, Rxjs)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Server stubs&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Ada&lt;/strong&gt;, &lt;strong&gt;C#&lt;/strong&gt; (ASP.NET Core, NancyFx), &lt;strong&gt;C++&lt;/strong&gt; (Pistache, Restbed, Qt5 QHTTPEngine), &lt;strong&gt;Erlang&lt;/strong&gt;, &lt;strong&gt;F#&lt;/strong&gt; (Giraffe), &lt;strong&gt;Go&lt;/strong&gt; (net/http, Gin), &lt;strong&gt;Haskell&lt;/strong&gt; (Servant), &lt;strong&gt;Java&lt;/strong&gt; (MSF4J, Spring, Undertow, JAX-RS: CDI, CXF, Inflector, Jersey, RestEasy, Play Framework, &lt;a href="https://github.com/ProKarma-Inc/pkmst-getting-started-examples"&gt;PKMST&lt;/a&gt;, &lt;a href="https://vertx.io/" rel="nofollow"&gt;Vert.x&lt;/a&gt;), &lt;strong&gt;Kotlin&lt;/strong&gt; (Spring Boot, Ktor, Vertx), &lt;strong&gt;PHP&lt;/strong&gt; (Laravel, Lumen, Slim, Silex, &lt;a href="https://symfony.com/" rel="nofollow"&gt;Symfony&lt;/a&gt;, &lt;a href="https://github.com/zendframework/zend-expressive"&gt;Zend Expressive&lt;/a&gt;), &lt;strong&gt;Python&lt;/strong&gt; (Flask), &lt;strong&gt;NodeJS&lt;/strong&gt;, &lt;strong&gt;Ruby&lt;/strong&gt; (Sinatra, Rails5), &lt;strong&gt;Rust&lt;/strong&gt; (rust-server), &lt;strong&gt;Scala&lt;/strong&gt; (&lt;a href="https://github.com/finagle/finch"&gt;Finch&lt;/a&gt;, &lt;a href="https://github.com/lagom/lagom"&gt;Lagom&lt;/a&gt;, &lt;a href="https://www.playframework.com/" rel="nofollow"&gt;Play&lt;/a&gt;, Scalatra)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;API documentation generators&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;HTML&lt;/strong&gt;, &lt;strong&gt;Confluence Wiki&lt;/strong&gt;, &lt;strong&gt;Asciidoc&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Configuration files&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://httpd.apache.org/" rel="nofollow"&gt;&lt;strong&gt;Apache2&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Others&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;GraphQL&lt;/strong&gt;, &lt;strong&gt;JMeter&lt;/strong&gt;, &lt;strong&gt;MySQL Schema&lt;/strong&gt;, &lt;strong&gt;Protocol Buffer&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#openapi-generator"&gt;OpenAPI Generator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#1---installation"&gt;1 - Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#11---compatibility"&gt;1.1 - Compatibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#12---artifacts-on-maven-central"&gt;1.2 - Artifacts on Maven Central&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#13---download-jar"&gt;1.3 - Download JAR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#14---build-projects"&gt;1.4 - Build Projects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#15---homebrew"&gt;1.5 - Homebrew&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#16---docker"&gt;1.6 - Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#17---npm"&gt;1.7 - NPM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#2---getting-started"&gt;2 - Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3---usage"&gt;3 - Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#31---customization"&gt;3.1 - Customization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#32---workflow-integration-maven-gradle-github-cicd"&gt;3.2 - Workflow Integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#33---online-openapi-generator"&gt;3.3 - Online Generators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#34---license-information-on-generated-code"&gt;3.4 - License Information on Generated Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#35---ide-integration"&gt;3.5 - IDE Integration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#4---companiesprojects-using-openapi-generator"&gt;4 - Companies/Projects using OpenAPI Generator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#5---presentationsvideostutorialsbooks"&gt;5 - Presentations/Videos/Tutorials/Books&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#6---about-us"&gt;6 - About Us&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#61---openapi-generator-core-team"&gt;6.1 - OpenAPI Generator Core Team&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#62---openapi-generator-technical-committee"&gt;6.2 - OpenAPI Generator Technical Committee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#63---history-of-openapi-generator"&gt;6.3 - History of OpenAPI Generator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#7---license"&gt;7 - License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-1---installation" class="anchor" aria-hidden="true" href="#1---installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;1 - Installation&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-11---compatibility" class="anchor" aria-hidden="true" href="#11---compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;1.1 - Compatibility&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The OpenAPI Specification has undergone 3 revisions since initial creation in 2010.  The openapi-generator project has the following compatibilities with the OpenAPI Specification:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;OpenAPI Generator Version&lt;/th&gt;
&lt;th&gt;Release Date&lt;/th&gt;
&lt;th&gt;Notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;5.0.0 (upcoming major release) &lt;a href="https://oss.sonatype.org/content/repositories/snapshots/org/openapitools/openapi-generator-cli/5.0.0-SNAPSHOT/" rel="nofollow"&gt;SNAPSHOT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;13.05.2020&lt;/td&gt;
&lt;td&gt;Major release with breaking changes (no fallback)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.3.0 (upcoming minor release) &lt;a href="https://oss.sonatype.org/content/repositories/snapshots/org/openapitools/openapi-generator-cli/4.3.0-SNAPSHOT/" rel="nofollow"&gt;SNAPSHOT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;29.02.2020&lt;/td&gt;
&lt;td&gt;Minor release (breaking changes with fallbacks)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/OpenAPITools/openapi-generator/releases/tag/v4.2.3"&gt;4.2.3&lt;/a&gt; (latest stable release)&lt;/td&gt;
&lt;td&gt;31.01.2019&lt;/td&gt;
&lt;td&gt;Backward-compatible release&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;OpenAPI Spec compatibility: 1.0, 1.1, 1.2, 2.0, 3.0&lt;/p&gt;
&lt;p&gt;For old releases, please refer to the &lt;a href="https://github.com/OpenAPITools/openapi-generator/releases"&gt;&lt;strong&gt;Release&lt;/strong&gt;&lt;/a&gt; page.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-12---artifacts-on-maven-central" class="anchor" aria-hidden="true" href="#12---artifacts-on-maven-central"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;1.2 - Artifacts on Maven Central&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can find our released artifacts on maven central:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Core:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.openapitools&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;openapi-generator&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${openapi-generator-version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the different versions of the &lt;a href="https://mvnrepository.com/artifact/org.openapitools/openapi-generator" rel="nofollow"&gt;openapi-generator&lt;/a&gt; artifact available on maven central.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cli:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.openapitools&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;openapi-generator-cli&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${openapi-generator-version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the different versions of the &lt;a href="https://mvnrepository.com/artifact/org.openapitools/openapi-generator-cli" rel="nofollow"&gt;openapi-generator-cli&lt;/a&gt; artifact available on maven central.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Maven plugin:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.openapitools&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;openapi-generator-maven-plugin&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${openapi-generator-version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;See the different versions of the &lt;a href="https://mvnrepository.com/artifact/org.openapitools/openapi-generator-maven-plugin" rel="nofollow"&gt;openapi-generator-maven-plugin&lt;/a&gt; artifact available on maven central.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator-maven-plugin/README.md"&gt;Readme&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Gradle plugin:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;org.openapitools&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;openapi-generator-gradle-plugin&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;${openapi-generator-version}&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;See the different versions of the &lt;a href="https://mvnrepository.com/artifact/org.openapitools/openapi-generator-gradle-plugin" rel="nofollow"&gt;openapi-generator-gradle-plugin&lt;/a&gt; artifact available on maven central.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator-gradle-plugin/README.adoc"&gt;Readme&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-13---download-jar" class="anchor" aria-hidden="true" href="#13---download-jar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;1.3 - Download JAR&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;If you're looking for the latest stable version, you can grab it directly from Maven.org (Java 8 runtime at a minimum):&lt;/p&gt;
&lt;p&gt;JAR location: &lt;code&gt;https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/4.2.3/openapi-generator-cli-4.2.3.jar&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For &lt;strong&gt;Mac/Linux&lt;/strong&gt; users:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;wget https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/4.2.3/openapi-generator-cli-4.2.3.jar -O openapi-generator-cli.jar&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For &lt;strong&gt;Windows&lt;/strong&gt; users, you will need to install &lt;a href="http://gnuwin32.sourceforge.net/packages/wget.htm" rel="nofollow"&gt;wget&lt;/a&gt; or you can use Invoke-WebRequest in PowerShell (3.0+), e.g.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Invoke-WebRequest -OutFile openapi-generator-cli.jar https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/4.2.3/openapi-generator-cli-4.2.3.jar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After downloading the JAR, run &lt;code&gt;java -jar openapi-generator-cli.jar help&lt;/code&gt; to show the usage.&lt;/p&gt;
&lt;p&gt;For Mac users, please make sure Java 8 is installed (Tips: run &lt;code&gt;java -version&lt;/code&gt; to check the version), and export &lt;code&gt;JAVA_HOME&lt;/code&gt; in order to use the supported Java version:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;export&lt;/span&gt; JAVA_HOME=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;/usr/libexec/java_home -v 1.8&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;export&lt;/span&gt; PATH=&lt;span class="pl-smi"&gt;${JAVA_HOME}&lt;/span&gt;/bin:&lt;span class="pl-smi"&gt;$PATH&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;&lt;a id="user-content-launcher-script" class="anchor" aria-hidden="true" href="#launcher-script"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Launcher Script&lt;/h3&gt;
&lt;p&gt;One downside to manual jar downloads is that you don't keep up-to-date with the latest released version. We have a Bash launcher script at &lt;a href="./bin/utils/openapi-generator-cli.sh"&gt;bin/utils/openapi-generator.cli.sh&lt;/a&gt; which resolves this issue.&lt;/p&gt;
&lt;p&gt;To install the launcher script, copy the contents of the script to a location on your path and make the script executable.&lt;/p&gt;
&lt;p&gt;An example of setting this up (NOTE: Always evaluate scripts curled from external systems before executing them).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir -p ~/bin/openapitools
curl https://raw.githubusercontent.com/OpenAPITools/openapi-generator/master/bin/utils/openapi-generator-cli.sh &amp;gt; ~/bin/openapitools/openapi-generator-cli
chmod u+x ~/bin/openapitools/openapi-generator-cli
export PATH=$PATH:~/bin/openapitools/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, &lt;code&gt;openapi-generator-cli&lt;/code&gt; is "installed". On invocation, it will query the GitHub repository for the most recently released version. If this matches the last downloaded jar,
it will execute as normal. If a newer version is found, the script will download the latest release and execute it.&lt;/p&gt;
&lt;p&gt;If you need to invoke an older version of the generator, you can define the variable &lt;code&gt;OPENAPI_GENERATOR_VERSION&lt;/code&gt; either ad hoc or globally. You can export this variable if you'd like to persist a specific release version.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Execute latest released openapi-generator-cli
openapi-generator-cli version

# Execute version 3.1.0 for the current invocation, regardless of the latest released version
OPENAPI_GENERATOR_VERSION=3.1.0 openapi-generator-cli version

# Execute version 3.1.0-SNAPSHOT for the current invocation
OPENAPI_GENERATOR_VERSION=3.1.0-SNAPSHOT openapi-generator-cli version

# Execute version 3.0.2 for every invocation in the current shell session
export OPENAPI_GENERATOR_VERSION=3.0.2
openapi-generator-cli version # is 3.0.2
openapi-generator-cli version # is also 3.0.2

# To "install" a specific version, set the variable in .bashrc/.bash_profile
echo "export OPENAPI_GENERATOR_VERSION=3.0.2" &amp;gt;&amp;gt; ~/.bashrc
source ~/.bashrc
openapi-generator-cli version # is always 3.0.2, unless any of the above overrides are done ad hoc
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-14---build-projects" class="anchor" aria-hidden="true" href="#14---build-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;1.4 - Build Projects&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To build from source, you need the following installed and available in your &lt;code&gt;$PATH:&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.oracle.com/technetwork/java/index.html" rel="nofollow"&gt;Java 8&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://maven.apache.org/" rel="nofollow"&gt;Apache Maven 3.3.4 or greater&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After cloning the project, you can build it from source with this command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mvn clean install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you don't have maven installed, you may directly use the included &lt;a href="https://github.com/takari/maven-wrapper"&gt;maven wrapper&lt;/a&gt;, and build with the command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./mvnw clean install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default build contains minimal static analysis (via CheckStyle). To run your build with PMD and Spotbugs, use the &lt;code&gt;static-analysis&lt;/code&gt; profile:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mvn -Pstatic-analysis clean install&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-15---homebrew" class="anchor" aria-hidden="true" href="#15---homebrew"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;1.5 - Homebrew&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To install, run &lt;code&gt;brew install openapi-generator&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Here is an example usage to generate a Ruby client:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;openapi-generator generate -i https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/2_0/petstore.yaml -g ruby -o /tmp/test/&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To reinstall with the latest master, run &lt;code&gt;brew uninstall openapi-generator &amp;amp;&amp;amp; brew install --HEAD openapi-generator&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To install OpenJDK (pre-requisites), please run&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;brew cask install adoptopenjdk12
&lt;span class="pl-k"&gt;export&lt;/span&gt; JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk-12.0.2.jdk/Contents/Home/&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To install Maven, please run&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;brew install maven&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-16---docker" class="anchor" aria-hidden="true" href="#16---docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;1.6 - Docker&lt;/a&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-public-pre-built-docker-images" class="anchor" aria-hidden="true" href="#public-pre-built-docker-images"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Public Pre-built Docker images&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/openapitools/openapi-generator-cli/" rel="nofollow"&gt;https://hub.docker.com/r/openapitools/openapi-generator-cli/&lt;/a&gt; (official CLI)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/openapitools/openapi-generator-online/" rel="nofollow"&gt;https://hub.docker.com/r/openapitools/openapi-generator-online/&lt;/a&gt; (official web service)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-openapi-generator-cli-docker-image" class="anchor" aria-hidden="true" href="#openapi-generator-cli-docker-image"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenAPI Generator CLI Docker Image&lt;/h4&gt;
&lt;p&gt;The OpenAPI Generator image acts as a standalone executable. It can be used as an alternative to installing via homebrew, or for developers who are unable to install Java or upgrade the installed version.&lt;/p&gt;
&lt;p&gt;To generate code with this image, you'll need to mount a local location as a volume.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker run --rm -v &lt;span class="pl-smi"&gt;${PWD}&lt;/span&gt;:/local openapitools/openapi-generator-cli generate \
    -i https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/2_0/petstore.yaml \
    -g go \
    -o /local/out/go&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The generated code will be located under &lt;code&gt;./out/go&lt;/code&gt; in the current directory.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-openapi-generator-online-docker-image" class="anchor" aria-hidden="true" href="#openapi-generator-online-docker-image"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenAPI Generator Online Docker Image&lt;/h4&gt;
&lt;p&gt;The openapi-generator-online image can act as a self-hosted web application and API for generating code. This container can be incorporated into a CI pipeline, and requires at least two HTTP requests and some docker orchestration to access generated code.&lt;/p&gt;
&lt;p&gt;Example usage:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Start container at port 8888 and save the container id&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; CID=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;docker run -d -p 8888:8080 openapitools/openapi-generator-online&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; allow for startup&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; sleep 10

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Get the IP of the running container (optional)&lt;/span&gt;
GEN_IP=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;docker inspect --format &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{{.NetworkSettings.IPAddress}}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;  &lt;span class="pl-smi"&gt;$CID&lt;/span&gt;&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Execute an HTTP request to generate a Ruby client&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; curl -X POST --header &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Content-Type: application/json&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; --header &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Accept: application/json&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; \
-d &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{"openAPIUrl": "https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/2_0/petstore.yaml"}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; \
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;http://localhost:8888/api/gen/clients/ruby&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;code&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;c2d483.3.4672-40e9-91df-b9ffd18d22b8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;link&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://localhost:8888/api/gen/download/c2d483.3.4672-40e9-91df-b9ffd18d22b8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Download the generated zip file  &lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; wget http://localhost:8888/api/gen/download/c2d483.3.4672-40e9-91df-b9ffd18d22b8

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Unzip the file&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; unzip c2d483.3.4672-40e9-91df-b9ffd18d22b8

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Shutdown the openapi generator image&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; docker stop &lt;span class="pl-smi"&gt;$CID&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; docker rm &lt;span class="pl-smi"&gt;$CID&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-development-in-docker" class="anchor" aria-hidden="true" href="#development-in-docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development in docker&lt;/h4&gt;
&lt;p&gt;You can use &lt;code&gt;run-in-docker.sh&lt;/code&gt; to do all development. This script maps your local repository to &lt;code&gt;/gen&lt;/code&gt;
in the docker container. It also maps &lt;code&gt;~/.m2/repository&lt;/code&gt; to the appropriate container location.&lt;/p&gt;
&lt;p&gt;To execute &lt;code&gt;mvn package&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/openapitools/openapi-generator
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; openapi-generator
./run-in-docker.sh mvn package&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build artifacts are now accessible in your working directory.&lt;/p&gt;
&lt;p&gt;Once built, &lt;code&gt;run-in-docker.sh&lt;/code&gt; will act as an executable for openapi-generator-cli. To generate code, you'll need to output to a directory under &lt;code&gt;/gen&lt;/code&gt; (e.g. &lt;code&gt;/gen/out&lt;/code&gt;). For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./run-in-docker.sh &lt;span class="pl-c1"&gt;help&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Executes 'help' command for openapi-generator-cli&lt;/span&gt;
./run-in-docker.sh list &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Executes 'list' command for openapi-generator-cli&lt;/span&gt;
./run-in-docker.sh /gen/bin/go-petstore.sh  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Builds the Go client&lt;/span&gt;
./run-in-docker.sh generate -i modules/openapi-generator/src/test/resources/2_0/petstore.yaml \
    -g go -o /gen/out/go-petstore -DpackageName=petstore &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; generates go client, outputs locally to ./out/go-petstore&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h5&gt;
&lt;p&gt;If an error like this occurs, just execute the &lt;strong&gt;mvn clean install -U&lt;/strong&gt; command:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.19.1:test (default-test) on project openapi-generator: A type incompatibility occurred while executing org.apache.maven.plugins:maven-surefire-plugin:2.19.1:test: java.lang.ExceptionInInitializerError cannot be cast to java.io.IOException&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./run-in-docker.sh mvn clean install -U&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Failed to execute goal org.fortasoft:gradle-maven-plugin:1.0.8:invoke (default) on project openapi-generator-gradle-plugin-mvn-wrapper: org.gradle.tooling.BuildException: Could not execute build using Gradle distribution '&lt;a href="https://services.gradle.org/distributions/gradle-4.7-bin.zip" rel="nofollow"&gt;https://services.gradle.org/distributions/gradle-4.7-bin.zip&lt;/a&gt;'&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Right now: no solution for this one :|&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-run-docker-in-vagrant" class="anchor" aria-hidden="true" href="#run-docker-in-vagrant"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run Docker in Vagrant&lt;/h4&gt;
&lt;p&gt;Prerequisite: install &lt;a href="https://www.vagrantup.com/downloads.html" rel="nofollow"&gt;Vagrant&lt;/a&gt; and &lt;a href="https://www.virtualbox.org/wiki/Downloads" rel="nofollow"&gt;VirtualBox&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/openapitools/openapi-generator.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; openapi-generator
vagrant up
vagrant ssh
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; /vagrant
./run-in-docker.sh mvn package&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-17---npm" class="anchor" aria-hidden="true" href="#17---npm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;1.7 - NPM&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There is also an &lt;a href="https://www.npmjs.com/package/@openapitools/openapi-generator-cli" rel="nofollow"&gt;NPM package wrapper&lt;/a&gt; available for different platforms (e.g. Linux, Mac, Windows). (JVM is still required)
Please see the &lt;a href="https://github.com/openapitools/openapi-generator-cli"&gt;project's README&lt;/a&gt; there for more information.&lt;/p&gt;
&lt;p&gt;Install it globally to get the CLI available on the command line:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm install @openapitools/openapi-generator-cli -g
openapi-generator version&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Or install a particular OpenAPI Generator version (e.g. v4.2.3):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm install @openapitools/openapi-generator-cli@cli-4.2.3 -g&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or install it as dev-dependency:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm install @openapitools/openapi-generator-cli -D&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;&lt;a id="user-content-2---getting-started" class="anchor" aria-hidden="true" href="#2---getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;2 - Getting Started&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To generate a PHP client for &lt;a href="https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/2_0/petstore.yaml" rel="nofollow"&gt;petstore.yaml&lt;/a&gt;, please run the following&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/openapitools/openapi-generator
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; openapi-generator
mvn clean package
java -jar modules/openapi-generator-cli/target/openapi-generator-cli.jar generate \
   -i https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/2_0/petstore.yaml \
   -g php \
   -o /var/tmp/php_api_client&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(if you're on Windows, replace the last command with &lt;code&gt;java -jar modules\openapi-generator-cli\target\openapi-generator-cli.jar generate -i https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/2_0/petstore.yaml -g php -o c:\temp\php_api_client&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;You can also download the JAR (latest release) directly from &lt;a href="https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/4.2.3/openapi-generator-cli-4.2.3.jar" rel="nofollow"&gt;maven.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To get a list of &lt;strong&gt;general&lt;/strong&gt; options available, please run &lt;code&gt;java -jar modules/openapi-generator-cli/target/openapi-generator-cli.jar help generate&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To get a list of PHP specified options (which can be passed to the generator with a config file via the &lt;code&gt;-c&lt;/code&gt; option), please run &lt;code&gt;java -jar modules/openapi-generator-cli/target/openapi-generator-cli.jar config-help -g php&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-3---usage" class="anchor" aria-hidden="true" href="#3---usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;3 - Usage&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-to-generate-a-sample-client-library" class="anchor" aria-hidden="true" href="#to-generate-a-sample-client-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To generate a sample client library&lt;/h3&gt;
&lt;p&gt;You can build a client against the &lt;a href="https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/2_0/petstore.yaml" rel="nofollow"&gt;Petstore API&lt;/a&gt; as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./bin/java-petstore-okhttp-gson.sh&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(On Windows, run &lt;code&gt;.\bin\windows\java-petstore-okhttp-gson.bat&lt;/code&gt; instead)&lt;/p&gt;
&lt;p&gt;This script uses the default library, which is &lt;code&gt;okhttp-gson&lt;/code&gt;. It will run the generator with this command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;java -jar modules/openapi-generator-cli/target/openapi-generator-cli.jar generate \
  -i https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/2_0/petstore.yaml \
  -g java \
  -o samples/client/petstore/java/okhttp-gson&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;with a number of options. &lt;a href="docs/generators/java.md"&gt;The java options are documented here.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can also get the options with the &lt;code&gt;help generate&lt;/code&gt; command (below only shows partial results):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NAME
        openapi-generator-cli generate - Generate code with the specified
        generator.

SYNOPSIS
        openapi-generator-cli generate
                [(-a &amp;lt;authorization&amp;gt; | --auth &amp;lt;authorization&amp;gt;)]
                [--api-name-suffix &amp;lt;api name suffix&amp;gt;]
                [--api-package &amp;lt;api package&amp;gt;] [--artifact-id &amp;lt;artifact id&amp;gt;]
                [--artifact-version &amp;lt;artifact version&amp;gt;]
                [(-c &amp;lt;configuration file&amp;gt; | --config &amp;lt;configuration file&amp;gt;)]
                [-D &amp;lt;system properties&amp;gt;...]
                [(-e &amp;lt;templating engine&amp;gt; | --engine &amp;lt;templating engine&amp;gt;)]
                [--enable-post-process-file]
                [(-g &amp;lt;generator name&amp;gt; | --generator-name &amp;lt;generator name&amp;gt;)]
                [--generate-alias-as-model] [--git-repo-id &amp;lt;git repo id&amp;gt;]
                [--git-user-id &amp;lt;git user id&amp;gt;] [--group-id &amp;lt;group id&amp;gt;]
                [--http-user-agent &amp;lt;http user agent&amp;gt;]
                (-i &amp;lt;spec file&amp;gt; | --input-spec &amp;lt;spec file&amp;gt;)
                [--ignore-file-override &amp;lt;ignore file override location&amp;gt;]
                [--import-mappings &amp;lt;import mappings&amp;gt;...]
                [--instantiation-types &amp;lt;instantiation types&amp;gt;...]
                [--invoker-package &amp;lt;invoker package&amp;gt;]
                [--language-specific-primitives &amp;lt;language specific primitives&amp;gt;...]
                [--library &amp;lt;library&amp;gt;] [--log-to-stderr] [--minimal-update]
                [--model-name-prefix &amp;lt;model name prefix&amp;gt;]
                [--model-name-suffix &amp;lt;model name suffix&amp;gt;]
                [--model-package &amp;lt;model package&amp;gt;]
                [(-o &amp;lt;output directory&amp;gt; | --output &amp;lt;output directory&amp;gt;)]
                [(-p &amp;lt;additional properties&amp;gt; | --additional-properties &amp;lt;additional properties&amp;gt;)...]
                [--package-name &amp;lt;package name&amp;gt;] [--release-note &amp;lt;release note&amp;gt;]
                [--remove-operation-id-prefix]
                [--reserved-words-mappings &amp;lt;reserved word mappings&amp;gt;...]
                [(-s | --skip-overwrite)] [--server-variables &amp;lt;server variables&amp;gt;...]
                [--skip-validate-spec] [--strict-spec &amp;lt;true/false strict behavior&amp;gt;]
                [(-t &amp;lt;template directory&amp;gt; | --template-dir &amp;lt;template directory&amp;gt;)]
                [--type-mappings &amp;lt;type mappings&amp;gt;...] [(-v | --verbose)]

OPTIONS
        -a &amp;lt;authorization&amp;gt;, --auth &amp;lt;authorization&amp;gt;
            adds authorization headers when fetching the OpenAPI definitions
            remotely. Pass in a URL-encoded string of name:header with a comma
            separating multiple values

...... (results omitted)

        -v, --verbose
            verbose mode

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can then compile and run the client, as well as unit tests against it:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; samples/client/petstore/java/okhttp-gson
mvn package&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Other languages have petstore samples, too:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./bin/android-petstore-all.sh
./bin/java-petstore-all.sh
./bin/objc-petstore.sh&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and others. &lt;a href="https://github.com/OpenAPITools/openapi-generator/wiki/Samples-folder#scripts"&gt;Here is a list of all scripts.&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-31---customization" class="anchor" aria-hidden="true" href="#31---customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;3.1 - Customization&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Please refer to &lt;a href="docs/customization.md"&gt;customization.md&lt;/a&gt; on how to customize the output (e.g. package name, version)&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-32---workflow-integration-maven-gradle-github-cicd" class="anchor" aria-hidden="true" href="#32---workflow-integration-maven-gradle-github-cicd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;3.2 - Workflow Integration (Maven, Gradle, Github, CI/CD)&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Please refer to &lt;a href="docs/integration.md"&gt;integration.md&lt;/a&gt; on how to integrate OpenAPI generator with Maven, Gradle, sbt, Bazel, Github and CI/CD.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-33---online-openapi-generator" class="anchor" aria-hidden="true" href="#33---online-openapi-generator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;3.3 - Online OpenAPI generator&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Here are the public online services:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;latest stable version: &lt;a href="https://api.openapi-generator.tech" rel="nofollow"&gt;https://api.openapi-generator.tech&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;latest master: &lt;a href="https://api-latest-master.openapi-generator.tech" rel="nofollow"&gt;https://api-latest-master.openapi-generator.tech&lt;/a&gt; (updated with latest master every hour)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The server is sponsored by &lt;a href="https://www.linode.com/" rel="nofollow"&gt;Linode&lt;/a&gt; &lt;a href="https://www.linode.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3de572a1fbdd4f31adf90062c5a7245cda504bca/68747470733a2f2f7777772e6c696e6f64652e636f6d2f6d656469612f696d616765732f6c6f676f732f7374616e646172642f6c696768742f6c696e6f64652d6c6f676f5f7374616e646172645f6c696768745f736d616c6c2e706e67" alt="Linode Logo" data-canonical-src="https://www.linode.com/media/images/logos/standard/light/linode-logo_standard_light_small.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(These services are beta and do not have any guarantee on service level)&lt;/p&gt;
&lt;p&gt;Please refer to &lt;a href="docs/online.md"&gt;online.md&lt;/a&gt; on how to run and use the &lt;code&gt;openapi-generator-online&lt;/code&gt; - a web service for &lt;code&gt;openapi-generator&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-34---license-information-on-generated-code" class="anchor" aria-hidden="true" href="#34---license-information-on-generated-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;3.4 - License information on Generated Code&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The OpenAPI Generator project is intended as a benefit for users of the Open API Specification.  The project itself has the &lt;a href="#license"&gt;License&lt;/a&gt; as specified. In addition, please understand the following points:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The templates included with this project are subject to the &lt;a href="#license"&gt;License&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Generated code is intentionally &lt;em&gt;not&lt;/em&gt; subject to the parent project license&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When code is generated from this project, it shall be considered &lt;strong&gt;AS IS&lt;/strong&gt; and owned by the user of the software.  There are no warranties--expressed or implied--for generated code.  You can do what you wish with it, and once generated, the code is your responsibility and subject to the licensing terms that you deem appropriate.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-35---ide-integration" class="anchor" aria-hidden="true" href="#35---ide-integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;3.5 - IDE Integration&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Here is a list of community-conitributed IDE plug-ins that integrate with OpenAPI Generator:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Eclipse: &lt;a href="https://www.eclipse.org/codewind/open-api-tools-for-eclipse.html" rel="nofollow"&gt;Codewind OpenAPI Tools for Eclipse&lt;/a&gt; by &lt;a href="https://www.ibm.com" rel="nofollow"&gt;IBM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IntelliJ IDEA: &lt;a href="https://plugins.jetbrains.com/plugin/8433-openapi-generator" rel="nofollow"&gt;OpenAPI Generator&lt;/a&gt; by &lt;a href="https://jimschubert.us/#/" rel="nofollow"&gt;Jim Schubert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IntelliJ IDEA: &lt;a href="https://plugins.jetbrains.com/plugin/10690-senya-editor" rel="nofollow"&gt;Senya Editor&lt;/a&gt; by &lt;a href="https://senya.io" rel="nofollow"&gt;senya.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reprezen.com/" rel="nofollow"&gt;RepreZen API Studio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visual Studio: &lt;a href="https://marketplace.visualstudio.com/items?itemName=ChristianResmaHelle.ApiClientCodeGenerator" rel="nofollow"&gt;REST API Client Code Generator&lt;/a&gt; by &lt;a href="https://christian-helle.blogspot.com/" rel="nofollow"&gt;Christian Resma Helle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visual Studio Code: &lt;a href="https://marketplace.visualstudio.com/items?itemName=IBM.codewind-openapi-tools" rel="nofollow"&gt;Codewind OpenAPI Tools&lt;/a&gt; by &lt;a href="https://marketplace.visualstudio.com/publishers/IBM" rel="nofollow"&gt;IBM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-4---companiesprojects-using-openapi-generator" class="anchor" aria-hidden="true" href="#4---companiesprojects-using-openapi-generator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;4 - Companies/Projects using OpenAPI Generator&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here are some companies/projects (alphabetical order) using OpenAPI Generator in production. To add your company/project to the list, please visit &lt;a href="README.md"&gt;README.md&lt;/a&gt; and click on the icon to edit the page.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.adaptant.io/" rel="nofollow"&gt;Adaptant Solutions AG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://angular.schule/" rel="nofollow"&gt;Angular.Schule&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.anz.com/" rel="nofollow"&gt;Australia and New Zealand Banking Group (ANZ)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.askul.co.jp" rel="nofollow"&gt;ASKUL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.arduino.cc/" rel="nofollow"&gt;Arduino&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://b-com.com/en" rel="nofollow"&gt;b&amp;lt;&amp;gt;com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://banzaicloud.com" rel="nofollow"&gt;Banzai Cloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bimdata.io" rel="nofollow"&gt;BIMData.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bithost.ch" rel="nofollow"&gt;Bithost GmbH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bosch-connected-industry.com" rel="nofollow"&gt;Bosch Connected Industry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.boxever.com/" rel="nofollow"&gt;Boxever&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.csun.edu" rel="nofollow"&gt;California State University, Northridge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cam-inc.co.jp/" rel="nofollow"&gt;CAM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.camptocamp.com/en" rel="nofollow"&gt;Camptocamp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cisco.com/" rel="nofollow"&gt;Cisco&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codecentric.de/" rel="nofollow"&gt;codecentric AG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.commencis.com/" rel="nofollow"&gt;Commencis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://crossoverhealth.com/" rel="nofollow"&gt;Crossover Health&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cupix.com/" rel="nofollow"&gt;Cupix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dbsystel.de" rel="nofollow"&gt;DB Systel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docspring.com/" rel="nofollow"&gt;DocSpring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dwango.co.jp/" rel="nofollow"&gt;dwango&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.edgeimpulse.com/" rel="nofollow"&gt;Edge Impulse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.elementai.com/" rel="nofollow"&gt;Element AI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.embotics.com/" rel="nofollow"&gt;Embotics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fenergo.com/" rel="nofollow"&gt;Fenergo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://corp.freee.co.jp/en/" rel="nofollow"&gt;freee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freshcells.de/" rel="nofollow"&gt;FreshCells&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fuse.no/" rel="nofollow"&gt;Fuse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.gantner.com" rel="nofollow"&gt;Gantner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RepreZen/GenFlow"&gt;GenFlow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.getyourguide.com/" rel="nofollow"&gt;GetYourGuide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pepabo.com/en/" rel="nofollow"&gt;GMO Pepabo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://godaddy.com" rel="nofollow"&gt;GoDaddy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.here.com/" rel="nofollow"&gt;Here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ibm.com/" rel="nofollow"&gt;IBM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.juststarinfo.com" rel="nofollow"&gt;JustStar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.klarna.com/" rel="nofollow"&gt;Klarna&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kronsoft.ro/home/" rel="nofollow"&gt;Kronsoft Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kubernetes.io" rel="nofollow"&gt;Kubernetes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linode.com/" rel="nofollow"&gt;Linode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mediavision.fr/" rel="nofollow"&gt;Médiavision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.metaswitch.com/" rel="nofollow"&gt;Metaswitch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://myworkout.com" rel="nofollow"&gt;Myworkout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.namsor.com/" rel="nofollow"&gt;NamSor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.openet.com/" rel="nofollow"&gt;Openet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.oracle.com/" rel="nofollow"&gt;Oracle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.paxos.com" rel="nofollow"&gt;Paxos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ponicode.dev/" rel="nofollow"&gt;Ponicode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pricefx.com/" rel="nofollow"&gt;Pricefx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prometheus/alertmanager"&gt;Prometheus/Alertmanager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qed-it.com" rel="nofollow"&gt;QEDIT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.qulix.com" rel="nofollow"&gt;Qulix Systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.raiffeisen.ch" rel="nofollow"&gt;Raiffeisen Schweiz Genossenschaft&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.redhat.com" rel="nofollow"&gt;RedHat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reprezen.com/swagger-openapi-code-generation-api-first-microservices-enterprise-development" rel="nofollow"&gt;RepreZen API Studio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://restunited.com" rel="nofollow"&gt;REST United&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.robotinfra.com" rel="nofollow"&gt;Robotinfra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sie.com/en/index.html" rel="nofollow"&gt;Sony Interactive Entertainment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.stingray.com" rel="nofollow"&gt;Stingray&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.suva.ch/" rel="nofollow"&gt;Suva&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.telstra.com" rel="nofollow"&gt;Telstra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.traveltimeplatform.com/" rel="nofollow"&gt;TravelTime platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.tui-infotec.com/" rel="nofollow"&gt;TUI InfoTec GmbH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.unblu.com/" rel="nofollow"&gt;unblu inc.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.veamly.com/" rel="nofollow"&gt;Veamly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.woleet.io/" rel="nofollow"&gt;Woleet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wso2.com/" rel="nofollow"&gt;WSO2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vouchery.io" rel="nofollow"&gt;Vouchery.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.xero.com/" rel="nofollow"&gt;Xero&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.yahoo.co.jp/" rel="nofollow"&gt;Yahoo Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.yelp.com/" rel="nofollow"&gt;Yelp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.zalando.com" rel="nofollow"&gt;Zalando&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-5---presentationsvideostutorialsbooks" class="anchor" aria-hidden="true" href="#5---presentationsvideostutorialsbooks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;5 - Presentations/Videos/Tutorials/Books&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;2018/05/12 - &lt;a href="https://ackintosh.github.io/blog/2018/05/12/openapi-generator/" rel="nofollow"&gt;OpenAPI Generator - community drivenで成長するコードジェネレータ&lt;/a&gt; by &lt;a href="https://github.com/ackintosh"&gt;中野暁人&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/05/15 - &lt;a href="http://jmini.github.io/blog/2018/2018-05-15_new-open-source-project.html" rel="nofollow"&gt;Starting a new open-source project&lt;/a&gt; by &lt;a href="https://github.com/jmini"&gt;Jeremie Bresson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/05/15 - &lt;a href="https://www.publickey1.jp/blog/18/rest_apiapiopenapi_generatorswagger_generator.html" rel="nofollow"&gt;REST API仕様からAPIクライアントやスタブサーバを自動生成する「OpenAPI Generator」オープンソースで公開。Swagger Codegenからのフォーク&lt;/a&gt; by &lt;a href="https://www.publickey1.jp" rel="nofollow"&gt;Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/06/08 - &lt;a href="https://angular.schule/blog/2018-06-swagger-codegen-is-now-openapi-generator" rel="nofollow"&gt;Swagger Codegen is now OpenAPI Generator&lt;/a&gt; by &lt;a href="https://github.com/JohannesHoppe"&gt;JohannesHoppe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/06/21 - &lt;a href="https://fr.slideshare.net/chbornet/jhipster-conf-2018-connect-your-jhipster-apps-to-the-world-of-apis-with-openapi-and-grpc" rel="nofollow"&gt;Connect your JHipster apps to the world of APIs with OpenAPI and gRPC&lt;/a&gt; by &lt;a href="https://github.com/cbornet"&gt;Christophe Bornet&lt;/a&gt; at &lt;a href="https://jhipster-conf.github.io/" rel="nofollow"&gt;JHipster Conf 2018&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/06/22 - &lt;a href="https://rohki.hatenablog.com/entry/2018/06/22/073000" rel="nofollow"&gt;OpenAPI Generator で Gatling Client を生成してみた&lt;/a&gt; at &lt;a href="https://rohki.hatenablog.com/" rel="nofollow"&gt;ソモサン&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/06/27 - &lt;a href="https://speakerdeck.com/wing328/lessons-learned-from-leading-an-open-source-project-supporting-30-plus-programming-languages" rel="nofollow"&gt;Lessons Learned from Leading an Open-Source Project Supporting 30+ Programming Languages&lt;/a&gt; - &lt;a href="https://github.com/wing328"&gt;William Cheng&lt;/a&gt; at &lt;a href="http://bit.ly/2waDKKX" rel="nofollow"&gt;LinuxCon + ContainerCon + CloudOpen China 2018&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/07/19 - &lt;a href="https://medium.com/ringcentral-developers/openapi-generator-for-go-contribution-quickstart-8cc72bf37b53" rel="nofollow"&gt;OpenAPI Generator Contribution Quickstart - RingCentral Go SDK&lt;/a&gt; by &lt;a href="https://github.com/grokify"&gt;John Wang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/08/22 - &lt;a href="https://yinm.info/20180822/" rel="nofollow"&gt;OpenAPI Generatorのプロジェクト構成などのメモ&lt;/a&gt; by &lt;a href="https://github.com/yinm"&gt;Yusuke Iinuma&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/09/12 - &lt;a href="https://www.reprezen.com/blog/reprezen-openapi-3.0-upgrade-now-is-the-time" rel="nofollow"&gt;RepreZen and OpenAPI 3.0: Now is the Time&lt;/a&gt; by &lt;a href="https://www.reprezen.com/blog/author/miles-daffin" rel="nofollow"&gt;Miles Daffin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/10/31 - &lt;a href="https://github.com/HarmoWatch/openapi-generator-cli"&gt;A node package wrapper for openapi-generator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/11/03 - &lt;a href="http://ryuichi111std.hatenablog.com/entry/2018/11/03/214005" rel="nofollow"&gt;OpenAPI Generator + golang + Flutter でアプリ開発&lt;/a&gt; by &lt;a href="https://github.com/ryuichi111"&gt;Ryuichi Daigo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/11/15 - &lt;a href="https://blog.csdn.net/yzy199391/article/details/84023982" rel="nofollow"&gt;基于openapi3.0的yaml文件生成java代码的一次实践&lt;/a&gt; by &lt;a href="https://me.csdn.net/yzy199391" rel="nofollow"&gt;焱魔王&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/11/19 - &lt;a href="https://youtu.be/-lDot4Yn7Dg" rel="nofollow"&gt;OpenAPIs are everywhere&lt;/a&gt; by &lt;a href="https://github.com/jmini"&gt;Jeremie Bresson (Unblu)&lt;/a&gt; at &lt;a href="https://www.eclipsecon.org/europe2018" rel="nofollow"&gt;EclipseCon Europe 2018&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018/12/09 - &lt;a href="https://qiita.com/watiko/items/0961287c02eac9211572" rel="nofollow"&gt;openapi-generator をカスタマイズする方法&lt;/a&gt; by &lt;a href="https://qiita.com/watiko" rel="nofollow"&gt;@watiko&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019/01/03 - &lt;a href="https://lekkimworld.com/2019/01/03/calling-a-swagger-service-from-apex-using-openapi-generator/" rel="nofollow"&gt;Calling a Swagger service from Apex using openapi-generator&lt;/a&gt; by &lt;a href="https://lekkimworld.com" rel="nofollow"&gt;Mikkel Flindt Heisterberg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019/01/13 - &lt;a href="https://ky-yk-d.hatenablog.com/entry/2019/01/13/234108" rel="nofollow"&gt;OpenAPI GeneratorでRESTful APIの定義書から色々自動生成する&lt;/a&gt; by &lt;a href="https://twitter.com/ky_yk_d" rel="nofollow"&gt;@ky_yk_d&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019/01/20 - &lt;a href="https://medium.com/commencis/contract-first-api-development-with-openapi-generator-and-connexion-b21bbf2f9244" rel="nofollow"&gt;Contract-First API Development with OpenAPI Generator and Connexion&lt;/a&gt; by &lt;a href="https://github.com/anlcnydn"&gt;Anil Can Aydin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019/01/30 - &lt;a href="https://dzone.com/articles/rapid-api-development-using-open-api-generator" rel="nofollow"&gt;Rapid Application Development With API First Approach Using Open-API Generator&lt;/a&gt; by &lt;a href="https://dzone.com/users/828329/milan_sonkar.html" rel="nofollow"&gt;Milan Sonkar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019/02/02 - &lt;a href="https://speakerdeck.com/akihito_nakano/gunmaweb34" rel="nofollow"&gt;平静を保ち、コードを生成せよ 〜 OpenAPI Generator誕生の背景と軌跡 〜&lt;/a&gt; by &lt;a href="https://github.com/ackintosh"&gt;中野暁人&lt;/a&gt; at &lt;a href="https://gunmaweb.connpass.com/event/113974/" rel="nofollow"&gt;Gunma.web #34 スキーマ駆動開発&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019/02/20 - &lt;a href="https://mux.com/blog/an-adventure-in-openapi-v3-api-code-generation/" rel="nofollow"&gt;An adventure in OpenAPI V3 code generation&lt;/a&gt; by &lt;a href="https://mux.com/blog/author/philc/" rel="nofollow"&gt;Phil Cluff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019/02/26 - &lt;a href="https://medium.com/google-cloud/building-api-services-a-beginners-guide-7274ae4c547f" rel="nofollow"&gt;Building API Services: A Beginner’s Guide&lt;/a&gt; by &lt;a href="https://medium.com/@ratrosy" rel="nofollow"&gt;Ratros Y.&lt;/a&gt; in &lt;a href="https://medium.com/google-cloud" rel="nofollow"&gt;Google Cloud Platofrm Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019/02/26 - &lt;a href="https://medium.com/@ratrosy/building-apis-with-openapi-continued-5d0faaed32eb" rel="nofollow"&gt;Building APIs with OpenAPI: Continued&lt;/a&gt; by &lt;a href="https://medium.com/@ratrosy" rel="nofollow"&gt;Ratros Y.&lt;/a&gt; in &lt;a href="https://medium.com/google-cloud" rel="nofollow"&gt;Google Cloud Platofrm Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-03-07 - &lt;a href="https://qiita.com/chibato/items/e4a748db12409b40c02f" rel="nofollow"&gt;OpenAPI Generator で Spring Boot と Angular をタイプセーフに繋ぐ&lt;/a&gt; by &lt;a href="https://github.com/chibat"&gt;Tomofumi Chiba&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-03-25 - &lt;a href="https://blogs.sap.com/2019/03/25/integrate-sap-s4hana-cloud-sdk-with-open-api/" rel="nofollow"&gt;Access any REST service with the SAP S/4HANA Cloud SDK&lt;/a&gt; by &lt;a href="https://people.sap.com/alexander.duemont" rel="nofollow"&gt;Alexander Duemont&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-03-25 - &lt;a href="https://qiita.com/amuyikam/items/e8a45daae59c68be0fc8" rel="nofollow"&gt;OpenAPI generatorを試してみる&lt;/a&gt; by &lt;a href="https://twitter.com/amuyikam" rel="nofollow"&gt;@amuyikam&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-03-27 - &lt;a href="https://techblog.zozo.com/entry/openapi3/go" rel="nofollow"&gt;OpenAPI3を使ってみよう！Go言語でクライアントとスタブの自動生成まで！&lt;/a&gt; by &lt;a href="https://twitter.com/gold_kou" rel="nofollow"&gt;@gold_kou&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-04-17 - &lt;a href="https://tech-blog.optim.co.jp/entry/2019/04/17/174000" rel="nofollow"&gt;OpenAPIによるスキーマファースト開発の実施サンプルとCloud Runについて&lt;/a&gt; by &lt;a href="https://twitter.com/yukey1031" rel="nofollow"&gt;@yukey1031&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-04-18 - &lt;a href="https://speakerdeck.com/ota42y/how-to-use-openapi3-for-api-developer" rel="nofollow"&gt;How to use OpenAPI3 for API developer (RubyKaigi 2019)&lt;/a&gt; by &lt;a href="https://twitter.com/ota42y" rel="nofollow"&gt;@ota42y&lt;/a&gt; at &lt;a href="https://rubykaigi.org/2019" rel="nofollow"&gt;RubyKaigi 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-04-29 - &lt;a href="https://gum.co/openapi_generator_ebook" rel="nofollow"&gt;A Beginner's Guide to Code Generation for REST APIs (OpenAPI Generator)&lt;/a&gt; by &lt;a href="https://twitter.com/wing328" rel="nofollow"&gt;William Cheng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-05-01 - &lt;a href="https://simply-how.com/design-and-generate-api-code-from-openapi" rel="nofollow"&gt;Design and generate a REST API from Swagger / OpenAPI in Java, Python, C# and more&lt;/a&gt; by &lt;a href="https://simply-how.com/" rel="nofollow"&gt;Simply How&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-05-17 - &lt;a href="https://www.47northlabs.com/knowledge-base/generate-spring-boot-rest-api-using-swagger-openapi/" rel="nofollow"&gt;Generate Spring Boot REST API using Swagger/OpenAPI&lt;/a&gt; by &lt;a href="https://www.47northlabs.com/author/antonie-zafirov/" rel="nofollow"&gt;Antonie Zafirov&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-05-22 - &lt;a href="https://gum.co/openapi_generator_ebook_gb" rel="nofollow"&gt;REST APIs代码生成指南(OpenAPI Generator)&lt;/a&gt; by &lt;a href="https://twitter.com/wing328" rel="nofollow"&gt;William Cheng&lt;/a&gt;, &lt;a href="https://github.com/xmeng1"&gt;Xin Meng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-05-24 - &lt;a href="https://gum.co/openapi_generator_ebook_big5" rel="nofollow"&gt;REST API 代碼生成指南 (OpenAPI Generator)&lt;/a&gt; by &lt;a href="https://twitter.com/wing328" rel="nofollow"&gt;William Cheng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-06-24 - &lt;a href="https://speakerdeck.com/wing328/kubernetes-clients-and-openapi-generator" rel="nofollow"&gt;Kubernetes Clients and OpenAPI Generator&lt;/a&gt; by &lt;a href="https://twitter.com/wing328" rel="nofollow"&gt;William Cheng&lt;/a&gt; at &lt;a href="https://www.lfasiallc.com/events/contributors-summit-china-2019/" rel="nofollow"&gt;Kubernetes Contributor Summits Shanghai 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-06-28 &lt;a href="https://marketplace.eclipse.org/content/codewind-openapi-tools" rel="nofollow"&gt;Codewind OpenAPI Tools&lt;/a&gt; in &lt;a href="https://marketplace.eclipse.org/" rel="nofollow"&gt;Eclipse Marketplace&lt;/a&gt; by IBM&lt;/li&gt;
&lt;li&gt;2019-06-29 &lt;a href="https://marketplace.visualstudio.com/items?itemName=IBM.codewind-openapi-tools" rel="nofollow"&gt;Codewind OpenAPI Tools&lt;/a&gt; in &lt;a href="https://marketplace.visualstudio.com/" rel="nofollow"&gt;Visual Studio Marketplace&lt;/a&gt; by IBM&lt;/li&gt;
&lt;li&gt;2019-07-04 - &lt;a href="https://gum.co/openapi_generator_ebook_big5" rel="nofollow"&gt;REST API のためのコード生成入門 (OpenAPI Generator)&lt;/a&gt; by &lt;a href="https://twitter.com/wing328" rel="nofollow"&gt;William Cheng&lt;/a&gt;, &lt;a href="https://github.com/ackintosh"&gt;中野暁人&lt;/a&gt;, &lt;a href="https://github.com/taxpon"&gt;和田拓朗&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-07-08 - &lt;a href="https://tech.cam-inc.co.jp/entry/2019/07/08/140000" rel="nofollow"&gt;OpenAPI Generator にコントリビュートしたら社名が載った話。(CAM) - CAM TECH BLOG&lt;/a&gt; by &lt;a href="https://www.cam-inc.co.jp/" rel="nofollow"&gt;CAM, Inc.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-07-14 - &lt;a href="https://qiita.com/yuji38kwmt/items/dfb929316a1335a161c0" rel="nofollow"&gt;OpenAPI GeneratorでPythonのクライアントライブラリを作成した&lt;/a&gt; by &lt;a href="https://qiita.com/yuji38kwmt" rel="nofollow"&gt;yuji38kwmt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-07-19 - &lt;a href="https://speakerdeck.com/wing328/developer-experience-dx-for-open-source-projects-english-japanese" rel="nofollow"&gt;Developer Experience (DX) for Open-Source Projects: How to Engage Developers and Build a Growing Developer Community&lt;/a&gt; by &lt;a href="https://twitter.com/wing328" rel="nofollow"&gt;William Cheng&lt;/a&gt;, &lt;a href="https://github.com/ackintosh"&gt;中野暁人&lt;/a&gt; at &lt;a href="https://events.linuxfoundation.org/events/open-source-summit-japan-2019/" rel="nofollow"&gt;Open Source Summit Japan 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-08-14 - &lt;a href="https://bitmovin.com/our-openapi-journey-with-standardizing-sdks/" rel="nofollow"&gt;Our OpenAPI journey with Standardizing SDKs&lt;/a&gt; by &lt;a href="https://bitmovin.com/author/sburgstaller/" rel="nofollow"&gt;Sebastian Burgstaller&lt;/a&gt; at &lt;a href="https://www.bitmovin.com" rel="nofollow"&gt;Bitmovin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-08-15 - &lt;a href="https://www.m3tech.blog/entry/2019/08/15/110000" rel="nofollow"&gt;APIのコードを自動生成させたいだけならgRPCでなくてもよくない?&lt;/a&gt; by &lt;a href="https://corporate.m3.com/" rel="nofollow"&gt;M3, Inc.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-08-22 - &lt;a href="https://employment.en-japan.com/engineerhub/entry/2019/08/22/103000" rel="nofollow"&gt;マイクロサービスにおけるWeb APIスキーマの管理─ GraphQL、gRPC、OpenAPIの特徴と使いどころ&lt;/a&gt; by &lt;a href="https://twitter.com/ota42y" rel="nofollow"&gt;@ota42y&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-08-24 - &lt;a href="https://qiita.com/masayoshi0222/items/4845e4c715d04587c104" rel="nofollow"&gt;SwaggerドキュメントからOpenAPI Generatorを使ってモックサーバー作成&lt;/a&gt; by &lt;a href="https://qiita.com/masayoshi0222" rel="nofollow"&gt;坂本正義&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-08-29 - &lt;a href="https://cloud.tencent.com/developer/article/1495986" rel="nofollow"&gt;OpenAPI初探&lt;/a&gt; by &lt;a href="https://cloud.tencent.com/developer/user/1113152" rel="nofollow"&gt;peakxie&lt;/a&gt; at &lt;a href="https://cloud.tencent.com/developer" rel="nofollow"&gt;腾讯云社区&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-08-29 - &lt;a href="https://www.servicemesher.com/blog/kubernetes-1.16-crd-ga-preview/" rel="nofollow"&gt;全面进化：Kubernetes CRD 1.16 GA前瞻&lt;/a&gt; by &lt;a href="https://github.com/yue9944882"&gt;Min Kim&lt;/a&gt; at &lt;a href="https://www.servicemesher.com/blog/" rel="nofollow"&gt;ServiceMesher Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-09-01 - &lt;a href="https://www.youtube.com/watch?v=5cJtbIrsYkg" rel="nofollow"&gt;Creating a PHP-Slim server using OpenAPI (Youtube video)&lt;/a&gt; by &lt;a href="https://www.youtube.com/channel/UCnG-TN23lswO6QbvWhMtxpA" rel="nofollow"&gt;Daniel Persson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-09-06 - &lt;a href="https://wissel.net/blog/2019/09/vertx-and-openapi.html" rel="nofollow"&gt;Vert.x and OpenAPI&lt;/a&gt; by &lt;a href="https://twitter.com/notessensei" rel="nofollow"&gt;Stephan H Wissel&lt;/a&gt; at &lt;a href="https://wissel.net" rel="nofollow"&gt;wissel.net blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-09-09 - &lt;a href="https://cloud.ibm.com/docs/cloud-native?topic=cloud-native-rest-api" rel="nofollow"&gt;Cloud-native development - Creating RESTful microservices&lt;/a&gt; in &lt;a href="https://cloud.ibm.com/docs" rel="nofollow"&gt;IBM Cloud Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-09-14 - &lt;a href="https://developer.mastercard.com/platform/documentation/generating-and-configuring-a-mastercard-api-client/" rel="nofollow"&gt;Generating and Configuring a Mastercard API Client&lt;/a&gt; at &lt;a href="https://developer.mastercard.com/platform/documentation/" rel="nofollow"&gt;Mastercard Developers Platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-09-15 - &lt;a href="https://qiita.com/ShoichiKuraoka/items/f1f7a3c2376f7cd9c56a" rel="nofollow"&gt;OpenAPI(Swagger)導入下調べ&lt;/a&gt; by &lt;a href="https://qiita.com/ShoichiKuraoka" rel="nofollow"&gt;Shoichi Kuraoka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-09-17 - &lt;a href="https://www.http4k.org/tutorials/documenting_apis_with_openapi/" rel="nofollow"&gt;Tutorial: Documenting http4k APIs with OpenApi3&lt;/a&gt; by &lt;a href="https://www.http4k.org/" rel="nofollow"&gt;http4k&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-09-22 - &lt;a href="https://booth.pm/ja/items/1571902" rel="nofollow"&gt;OpenAPI 3を完全に理解できる本&lt;/a&gt; by &lt;a href="https://twitter.com/ota42y" rel="nofollow"&gt;@ota42y&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-09-22 - &lt;a href="https://medium.com/@amirm.lavasani/restful-apis-tutorial-of-openapi-specification-eeada0e3901d" rel="nofollow"&gt;RESTful APIs: Tutorial of OpenAPI Specification&lt;/a&gt; by &lt;a href="https://medium.com/@amirm.lavasani" rel="nofollow"&gt;Amir Lavasani&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-09-22 - &lt;a href="https://devrel.net/dev-rel/redefining-sdks-as-software-diversity-kits" rel="nofollow"&gt;Redefining SDKs as software diversity kits&lt;/a&gt; by &lt;a href="https://twitter.com/sidneyallen" rel="nofollow"&gt;Sid Maestre (Xero)&lt;/a&gt; at &lt;a href="https://sf2019.devrel.net/" rel="nofollow"&gt;DevRelCon San Francisco 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-09-23 - &lt;a href="https://qiita.com/littleFeet/items/492df2ad68a0799a5e5e" rel="nofollow"&gt;swaggerからOpenApi GeneratorでSpringのコードを自動生成&lt;/a&gt; by &lt;a href="https://qiita.com/littleFeet" rel="nofollow"&gt;@littleFeet&lt;/a&gt; at &lt;a href="https://qiita.com/" rel="nofollow"&gt;Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-09-24 - &lt;a href="https://www.slideshare.net/JanWeinschenker/eine-stunde-was-mit-api-first" rel="nofollow"&gt;Eine Stunde was mit Api First!&lt;/a&gt; by &lt;a href="https://twitter.com/janweinschenker" rel="nofollow"&gt;@janweinschenker&lt;/a&gt; at &lt;a href="https://javaforumnord.de/" rel="nofollow"&gt;Java Forum Nord&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-10-09 - &lt;a href="https://autopp-tech.hatenablog.com/entry/2019/10/09/222039" rel="nofollow"&gt;openapi-generator で生成した Go クライアントで Bearer 認証をする&lt;/a&gt; by &lt;a href="https://github.com/autopp"&gt;Akira Tanimura&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-10-10 - &lt;a href="https://www.meetup.com/fr-FR/Criteo-Labs-Tech-Talks/events/264775768/" rel="nofollow"&gt;Automatic Generation of REST Clients&lt;/a&gt; by Thomas Peyrard, Senior Software Engineer at Criteo in &lt;a href="https://www.meetup.com/fr-FR/Criteo-Labs-Tech-Talks/events/264775768/" rel="nofollow"&gt;Full-Stack Tech Talks (Meetup)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-10-12 - &lt;a href="https://blog.csdn.net/wxid2798226/article/details/102527467" rel="nofollow"&gt;OpenApi自动生成client&lt;/a&gt; by &lt;a href="https://me.csdn.net/wxid2798226" rel="nofollow"&gt;郑泽洲&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-10-16 - &lt;a href="https://medium.com/@accounts_76224/how-to-ship-apis-faster-cabef2f819e4" rel="nofollow"&gt;How to ship APIs faster?&lt;/a&gt; by &lt;a href="https://ponicode.dev" rel="nofollow"&gt;Simon Guilliams @ PoniCode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-10-22 - &lt;a href="https://qiita.com/boronngo/items/4b78b92526209daeaee9" rel="nofollow"&gt;OpenAPI + Spring Boot(Kotlin)でファイルダウンロードAPIを作成する&lt;/a&gt; by &lt;a href="https://twitter.com/yuki_furukawa5" rel="nofollow"&gt;Yuki Furukawa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-10-24 - &lt;a href="https://github.com/pe-st/apidocs/blob/master/MicroProfile-OpenAPI-all-slides.pdf"&gt;Microprofile OpenAPI - Code First or Design First?&lt;/a&gt; by &lt;a href="https://twitter.com/pesche" rel="nofollow"&gt;Peter [pɛʃə] Steiner&lt;/a&gt; at &lt;a href="https://www.eclipsecon.org/europe2019/sessions/microprofile-openapi-code-first-or-design-first" rel="nofollow"&gt;eclipsecon Europe 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-11-06 - &lt;a href="https://98elements.com/blog/generating-api-clients-based-on-openapi-v3-specifications" rel="nofollow"&gt;Generating API clients based on OpenAPI v3 specifications&lt;/a&gt; by &lt;a href="https://98elements.com" rel="nofollow"&gt;Dominik Jastrzębski @ 98elements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-11-06 - &lt;a href="https://qiita.com/YasuhiroABE/items/c73920eab2d9d6e97fd9" rel="nofollow"&gt;OpenAPIを利用して自前のAPIサーバー(Sinatra)を移植した時のメモ&lt;/a&gt; by &lt;a href="https://twitter.com/YasuhiroABE" rel="nofollow"&gt;Yasuhiro ABE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-11-07 - &lt;a href="https://www.youtube.com/watch?v=F9iF3a1Z8Y8" rel="nofollow"&gt;API First development with OpenAPI - You should you practise it !?&lt;/a&gt; by &lt;a href="https://www.nickvanhoof.com/" rel="nofollow"&gt;Nick Van Hoof&lt;/a&gt; at &lt;a href="https://devoxx.be/" rel="nofollow"&gt;Devoxx Belgium 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-11-08 - &lt;a href="https://www.youtube.com/watch?v=m28JFovKQ20" rel="nofollow"&gt;JHipster beyond CRUD - API-First for Enterprises by Enrico Costanzi&lt;/a&gt; by &lt;a href="https://twitter.com/enricocostanzi" rel="nofollow"&gt;Enrico Costanzi&lt;/a&gt; at &lt;a href="https://jhipster-conf.github.io/" rel="nofollow"&gt;JHipster Conf 2019 in Paris&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-11-11 - &lt;a href="https://qiita.com/unhurried/items/7b74f7d3c43545dadd2b" rel="nofollow"&gt;TypeScript REST APIクライアント&lt;/a&gt; by &lt;a href="https://qiita.com/unhurried" rel="nofollow"&gt;@unhurried&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-11-11 - &lt;a href="https://www.youtube.com/watch?v=MMay_nht8ec" rel="nofollow"&gt;One Spec to Rule them all - OpenAPI in Action&lt;/a&gt; by &lt;a href="https://github.com/littldr"&gt;Andreas Litt&lt;/a&gt; at &lt;a href="https://www.codetalks.com/" rel="nofollow"&gt;code.talks 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-11-17 - &lt;a href="https://www.youtube.com/playlist?list=PLtJyHVMdzfF6fBkOUV5VDVErP23CGgHIy" rel="nofollow"&gt;OpenAPI Generator YouTube playlist&lt;/a&gt; at &lt;a href="https://www.youtube.com" rel="nofollow"&gt;YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-11-20 - &lt;a href="https://noti.st/lornajane/HvDH7U/introduction-to-openapi" rel="nofollow"&gt;Introduction to OpenAPI&lt;/a&gt; by &lt;a href="https://twitter.com/lornajane" rel="nofollow"&gt;Lorna Mitchell&lt;/a&gt; at &lt;a href="https://gotocph.com/2019/" rel="nofollow"&gt;GOTO Copenhagen 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-11-20 - &lt;a href="https://dotnetthoughts.net/how-to-generate-angular-code-from-openapi-specifications/" rel="nofollow"&gt;How to Generate Angular code from OpenAPI specifications&lt;/a&gt; by Anuraj&lt;/li&gt;
&lt;li&gt;2019-11-23 - &lt;a href="https://www.slideshare.net/techblogyahoo/swagger-openapi-specification-30-api" rel="nofollow"&gt;Swagger ではない OpenAPI Specification 3.0 による API サーバー開発&lt;/a&gt; by &lt;a href="https://github.com/t2y"&gt;Tetsuya Morimoto&lt;/a&gt; at &lt;a href="https://ccc2019fall.java-users.jp/" rel="nofollow"&gt;JJUG CCC 2019 Fall&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-11-24 - &lt;a href="https://medium.com/@irinasouthwell_220/accelerate-flutter-development-with-openapi-and-dart-code-generation-1f16f8329a6a" rel="nofollow"&gt;Accelerate Flutter development with OpenAPI and Dart code generation&lt;/a&gt; by &lt;a href="https://medium.com/@irinasouthwell_220" rel="nofollow"&gt;Irina Southwell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-11-25 - &lt;a href="https://qiita.com/pochopocho13/items/8db662e1934fb2b408b8" rel="nofollow"&gt;openapi-generatorで手軽にスタブサーバとクライアントの生成&lt;/a&gt; by &lt;a href="https://twitter.com/pochopocho13" rel="nofollow"&gt;@pochopocho13&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-11-26 - &lt;a href="https://blog.b9lab.com/cordacon-2019-highlights-braid-server-and-openapi-generator-for-corda-flows-api-s-d24179ccb27c" rel="nofollow"&gt;CordaCon 2019 Highlights: Braid Server and OpenAPI Generator for Corda Client API’s&lt;/a&gt; by &lt;a href="https://blog.b9lab.com/@adelrestom" rel="nofollow"&gt;Adel Rustum&lt;/a&gt; at &lt;a href="https://blog.b9lab.com/" rel="nofollow"&gt;B9lab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-12-04 - &lt;a href="https://qiita.com/teracy55/items/0327c7a170ec772970c6" rel="nofollow"&gt;Angular＋NestJS＋OpenAPI（Swagger）でマイクロサービスを視野に入れた環境を考える&lt;/a&gt; by &lt;a href="https://twitter.com/teracy55" rel="nofollow"&gt;てらしー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-12-17 - &lt;a href="https://www.techscore.com/blog/2019/12/17/openapi-generator-oauth2-accesstoken/" rel="nofollow"&gt;OpenAPI Generator で OAuth2 アクセストークン発行のコードまで生成してみる&lt;/a&gt; by &lt;a href="https://www.techscore.com/blog/" rel="nofollow"&gt;TECHSCORE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2019-12-23 - &lt;a href="https://www.electronicdesign.com/technologies/embedded-revolution/article/21119177/use-ada-for-your-web-development" rel="nofollow"&gt;Use Ada for Your Web Development&lt;/a&gt; by &lt;a href="https://github.com/stcarrez"&gt;Stephane Carrez&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2020-01-17 - &lt;a href="https://www.youtube.com/watch?v=mFBP-M0ZPfw&amp;amp;t=178s" rel="nofollow"&gt;OpenAPI demo for Pulp 3.0 GA&lt;/a&gt; by &lt;a href="https://www.youtube.com/channel/UCI43Ffs4VPDv7awXvvBJfRQ" rel="nofollow"&gt;Pulp&lt;/a&gt; at &lt;a href="https://www.youtube.com/" rel="nofollow"&gt;Youtube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2020-01-19 - &lt;a href="https://dev.to/rolfstreefkerk/why-document-a-rest-api-as-code-5e7p" rel="nofollow"&gt;Why document a REST API as code?&lt;/a&gt; by &lt;a href="https://github.com/rpstreef"&gt;Rolf Streefkerk&lt;/a&gt; at &lt;a href="https://dev.to" rel="nofollow"&gt;DEV Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2020-01-28 - &lt;a href="https://dev.to/matttyler/get-your-serverless-swagger-back-with-openapi-48gc" rel="nofollow"&gt;Get Your Serverless Swagger Back with OpenAPI&lt;/a&gt; by &lt;a href="https://dev.to/matttyler" rel="nofollow"&gt;Matt Tyler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2020-01-30 - &lt;a href="https://www.yutaka0m.work/entry/2020/01/30/163905" rel="nofollow"&gt;OpenAPI Generatorへのコントリビュート&lt;/a&gt; by &lt;a href="https://github.com/yutaka0m"&gt;yutaka0m&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-6---about-us" class="anchor" aria-hidden="true" href="#6---about-us"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;6 - About Us&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-61---openapi-generator-core-team" class="anchor" aria-hidden="true" href="#61---openapi-generator-core-team"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;6.1 - OpenAPI Generator Core Team&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;OpenAPI Generator core team members are contributors who have been making significant contributions (review issues, fix bugs, make enhancements, etc) to the project on a regular basis.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-core-team-members" class="anchor" aria-hidden="true" href="#core-team-members"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core Team Members&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wing328"&gt;@wing328&lt;/a&gt; (2015/07) &lt;a href="https://www.patreon.com/wing328" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jimschubert"&gt;@jimschubert&lt;/a&gt; (2016/05) &lt;a href="https://www.patreon.com/jimschubert" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cbornet"&gt;@cbornet&lt;/a&gt; (2016/05)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ackintosh"&gt;@ackintosh&lt;/a&gt; (2018/02) &lt;a href="https://www.patreon.com/ackintosh/overview" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jmini"&gt;@jmini&lt;/a&gt; (2018/04)  &lt;a href="https://www.patreon.com/jmini" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/etherealjoy"&gt;@etherealjoy&lt;/a&gt; (2019/06)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; = Link to support the contributor directly&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-template-creator" class="anchor" aria-hidden="true" href="#template-creator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Template Creator&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Embedded templates are only supported in &lt;em&gt;Mustache&lt;/em&gt; format. Support for all other formats is experimental and subject to change at any time.&lt;/p&gt;
&lt;p&gt;Here is a list of template creators:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;API Clients:
&lt;ul&gt;
&lt;li&gt;Ada: @stcarrez&lt;/li&gt;
&lt;li&gt;Apex: @asnelling&lt;/li&gt;
&lt;li&gt;Bash: @bkryza&lt;/li&gt;
&lt;li&gt;C: @PowerOfCreation @zhemant &lt;a href="https://www.patreon.com/zhemant" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C++ REST: @Danielku15&lt;/li&gt;
&lt;li&gt;C# (.NET 2.0): @who&lt;/li&gt;
&lt;li&gt;C# (.NET Standard 1.3 ): @Gronsak&lt;/li&gt;
&lt;li&gt;C# (.NET 4.5 refactored): @jimschubert &lt;a href="https://www.patreon.com/jimschubert" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clojure: @xhh&lt;/li&gt;
&lt;li&gt;Dart: @yissachar&lt;/li&gt;
&lt;li&gt;Dart (refactor): @joernahrens&lt;/li&gt;
&lt;li&gt;Dart 2: @swipesight&lt;/li&gt;
&lt;li&gt;Dart (Jaguar): @jaumard&lt;/li&gt;
&lt;li&gt;Dart (Dio): @athornz&lt;/li&gt;
&lt;li&gt;Elixir: @niku&lt;/li&gt;
&lt;li&gt;Elm: @eriktim&lt;/li&gt;
&lt;li&gt;Eiffel: @jvelilla&lt;/li&gt;
&lt;li&gt;Erlang: @tsloughter&lt;/li&gt;
&lt;li&gt;Erlang (PropEr): @jfacorro @robertoaloi&lt;/li&gt;
&lt;li&gt;Groovy: @victorgit&lt;/li&gt;
&lt;li&gt;Go: @wing328 &lt;a href="https://www.patreon.com/wing328" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Go (rewritten in 2.3.0): @antihax&lt;/li&gt;
&lt;li&gt;Haskell (http-client): @jonschoning&lt;/li&gt;
&lt;li&gt;Java (Feign): @davidkiss&lt;/li&gt;
&lt;li&gt;Java (Retrofit): @0legg&lt;/li&gt;
&lt;li&gt;Java (Retrofit2): @emilianobonassi&lt;/li&gt;
&lt;li&gt;Java (Jersey2): @xhh&lt;/li&gt;
&lt;li&gt;Java (okhttp-gson): @xhh&lt;/li&gt;
&lt;li&gt;Java (RestTemplate): @nbruno&lt;/li&gt;
&lt;li&gt;Java (Spring 5 WebClient): @daonomic&lt;/li&gt;
&lt;li&gt;Java (RESTEasy): @gayathrigs&lt;/li&gt;
&lt;li&gt;Java (Vertx): @lopesmcc&lt;/li&gt;
&lt;li&gt;Java (Google APIs Client Library): @charlescapps&lt;/li&gt;
&lt;li&gt;Java (Rest-assured): @viclovsky&lt;/li&gt;
&lt;li&gt;Java (Java 11 Native HTTP client): @bbdouglas&lt;/li&gt;
&lt;li&gt;Javascript/NodeJS: @jfiala&lt;/li&gt;
&lt;li&gt;Javascript (Closure-annotated Angular) @achew22&lt;/li&gt;
&lt;li&gt;Javascript (Flow types) @jaypea&lt;/li&gt;
&lt;li&gt;JMeter: @davidkiss&lt;/li&gt;
&lt;li&gt;Kotlin: @jimschubert &lt;a href="https://www.patreon.com/jimschubert" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kotlin (MultiPlatform): @andrewemery&lt;/li&gt;
&lt;li&gt;Lua: @daurnimator&lt;/li&gt;
&lt;li&gt;Nim: @hokamoto&lt;/li&gt;
&lt;li&gt;OCaml: @cgensoul&lt;/li&gt;
&lt;li&gt;Perl: @wing328 &lt;a href="https://www.patreon.com/wing328" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;PHP (Guzzle): @baartosz&lt;/li&gt;
&lt;li&gt;PowerShell: @beatcracker&lt;/li&gt;
&lt;li&gt;Python-experimental: @spacether&lt;/li&gt;
&lt;li&gt;R: @ramnov&lt;/li&gt;
&lt;li&gt;Ruby (Faraday): @meganemura @dkliban&lt;/li&gt;
&lt;li&gt;Rust: @farcaller&lt;/li&gt;
&lt;li&gt;Rust (rust-server): @metaswitch&lt;/li&gt;
&lt;li&gt;Scala (scalaz &amp;amp; http4s): @tbrown1979&lt;/li&gt;
&lt;li&gt;Scala (Akka): @cchafer&lt;/li&gt;
&lt;li&gt;Swift: @tkqubo&lt;/li&gt;
&lt;li&gt;Swift 3: @hexelon&lt;/li&gt;
&lt;li&gt;Swift 4: @ehyche&lt;/li&gt;
&lt;li&gt;Swift 5: @4brunu&lt;/li&gt;
&lt;li&gt;TypeScript (Angular1): @mhardorf&lt;/li&gt;
&lt;li&gt;TypeScript (Angular2): @roni-frantchi&lt;/li&gt;
&lt;li&gt;TypeScript (Angular6): @akehir&lt;/li&gt;
&lt;li&gt;TypeScript (Angular7): @topce&lt;/li&gt;
&lt;li&gt;TypeScript (Axios): @nicokoenig&lt;/li&gt;
&lt;li&gt;TypeScript (Fetch): @leonyu&lt;/li&gt;
&lt;li&gt;TypeScript (jQuery): @bherila&lt;/li&gt;
&lt;li&gt;TypeScript (Node):  @mhardorf&lt;/li&gt;
&lt;li&gt;TypeScript (Rxjs): @denyo&lt;/li&gt;
&lt;li&gt;TypeScript (Inversify): @gualtierim&lt;/li&gt;
&lt;li&gt;TypeScript (redux-query): @petejohansonxo&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Server Stubs
&lt;ul&gt;
&lt;li&gt;Ada: @stcarrez&lt;/li&gt;
&lt;li&gt;C# ASP.NET 5: @jimschubert &lt;a href="https://www.patreon.com/jimschubert" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C# ASP.NET Core 3.0: @A-Joshi&lt;/li&gt;
&lt;li&gt;C# NancyFX: @mstefaniuk&lt;/li&gt;
&lt;li&gt;C++ (Qt5 QHttpEngine): @etherealjoy&lt;/li&gt;
&lt;li&gt;C++ Pistache: @sebymiano&lt;/li&gt;
&lt;li&gt;C++ Restbed: @stkrwork&lt;/li&gt;
&lt;li&gt;Erlang Server: @galaxie&lt;/li&gt;
&lt;li&gt;F# (Giraffe) Server: @nmfisher&lt;/li&gt;
&lt;li&gt;Go Server: @guohuang&lt;/li&gt;
&lt;li&gt;Go (Gin) Server: @kemokemo&lt;/li&gt;
&lt;li&gt;GraphQL Express Server: @renepardon&lt;/li&gt;
&lt;li&gt;Haskell Servant: @algas&lt;/li&gt;
&lt;li&gt;Java MSF4J: @sanjeewa-malalgoda&lt;/li&gt;
&lt;li&gt;Java Spring Boot: @diyfr&lt;/li&gt;
&lt;li&gt;Java Undertow: @stevehu&lt;/li&gt;
&lt;li&gt;Java Play Framework: @JFCote&lt;/li&gt;
&lt;li&gt;Java PKMST: @anshu2185 @sanshuman @rkumar-pk @ninodpillai&lt;/li&gt;
&lt;li&gt;Java Vert.x: @lwlee2608&lt;/li&gt;
&lt;li&gt;JAX-RS RestEasy: @chameleon82&lt;/li&gt;
&lt;li&gt;JAX-RS CXF: @hiveship&lt;/li&gt;
&lt;li&gt;JAX-RS CXF (CDI): @nickcmaynard&lt;/li&gt;
&lt;li&gt;JAX-RS RestEasy (JBoss EAP): @jfiala&lt;/li&gt;
&lt;li&gt;Kotlin: @jimschubert &lt;a href="https://www.patreon.com/jimschubert" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kotlin (Spring Boot): @dr4ke616&lt;/li&gt;
&lt;li&gt;Kotlin (Vertx): @Wooyme&lt;/li&gt;
&lt;li&gt;NodeJS Express: @YishTish&lt;/li&gt;
&lt;li&gt;PHP Laravel: @renepardon&lt;/li&gt;
&lt;li&gt;PHP Lumen: @abcsun&lt;/li&gt;
&lt;li&gt;PHP Slim: @jfastnacht&lt;/li&gt;
&lt;li&gt;PHP Symfony: @ksm2&lt;/li&gt;
&lt;li&gt;PHP Zend Expressive (with Path Handler): @Articus&lt;/li&gt;
&lt;li&gt;Python AIOHTTP: @Jyhess&lt;/li&gt;
&lt;li&gt;Ruby on Rails 5: @zlx&lt;/li&gt;
&lt;li&gt;Rust (rust-server): @metaswitch&lt;/li&gt;
&lt;li&gt;Scala Finch: @jimschubert &lt;a href="https://www.patreon.com/jimschubert" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Scala Lagom: @gmkumar2005&lt;/li&gt;
&lt;li&gt;Scala Play: @adigerber&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Documentation
&lt;ul&gt;
&lt;li&gt;AsciiDoc: @man-at-home&lt;/li&gt;
&lt;li&gt;HTML Doc 2: @jhitchcock&lt;/li&gt;
&lt;li&gt;Confluence Wiki: @jhitchcock&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Configuration
&lt;ul&gt;
&lt;li&gt;Apache2: @stkrwork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Schema
&lt;ul&gt;
&lt;li&gt;Avro: @sgadouar&lt;/li&gt;
&lt;li&gt;GraphQL: @wing328 &lt;a href="https://www.patreon.com/wing328" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MySQL: @ybelenko&lt;/li&gt;
&lt;li&gt;Protocol Buffer: @wing328&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; = Link to support the contributor directly&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-how-to-join-the-core-team" class="anchor" aria-hidden="true" href="#how-to-join-the-core-team"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to join the core team&lt;/h4&gt;
&lt;p&gt;Here are the requirements to become a core team member:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rank within top 50 in &lt;a href="https://github.com/openapitools/openapi-generator/graphs/contributors"&gt;https://github.com/openapitools/openapi-generator/graphs/contributors&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;to contribute, here are some good &lt;a href="https://github.com/openapitools/openapi-generator/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22"&gt;starting points&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;regular contributions to the project
&lt;ul&gt;
&lt;li&gt;about 3 hours per week&lt;/li&gt;
&lt;li&gt;for contribution, it can be addressing issues, reviewing PRs submitted by others, submitting PR to fix bugs or make enhancements, etc&lt;/li&gt;
&lt;li&gt;must be active in the past 3 months at the time of application&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To join the core team, please reach out to &lt;a href="mailto:team@openapitools.org"&gt;team@openapitools.org&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;To become a Template Creator, simply submit a PR for new API client (e.g. Rust, Elixir) or server stub (e.g. Ruby Grape) generator.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-62---openapi-generator-technical-committee" class="anchor" aria-hidden="true" href="#62---openapi-generator-technical-committee"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;6.2 - OpenAPI Generator Technical Committee&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Members of the OpenAPI Generator technical committee shoulder the following responsibilities:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Provides guidance and direction to other users&lt;/li&gt;
&lt;li&gt;Reviews pull requests and issues&lt;/li&gt;
&lt;li&gt;Improves the generator by making enhancements, fixing bugs or updating documentations&lt;/li&gt;
&lt;li&gt;Sets the technical direction of the generator&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Who is eligible? Those who want to join must have at least 3 PRs merged into a generator. (Exceptions can be granted to template creators or contributors who have made a lot of code changes with less than 3 merged PRs)&lt;/p&gt;
&lt;p&gt;If you want to join the committee, please kindly apply by sending an email to &lt;a href="mailto:team@openapitools.org"&gt;team@openapitools.org&lt;/a&gt; with your Github ID.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-members-of-technical-committee" class="anchor" aria-hidden="true" href="#members-of-technical-committee"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Members of Technical Committee&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Languages&lt;/th&gt;
&lt;th align="left"&gt;Member (join date)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;ActionScript&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Ada&lt;/td&gt;
&lt;td align="left"&gt;@stcarrez (2018/02) @micheleISEP (2018/02)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Android&lt;/td&gt;
&lt;td align="left"&gt;@jaz-ah (2017/09)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Apex&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Bash&lt;/td&gt;
&lt;td align="left"&gt;@frol (2017/07) @bkryza (2017/08) @kenjones-cisco (2017/09)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;C&lt;/td&gt;
&lt;td align="left"&gt;@zhemant (2018/11) @ityuhui (2019/12)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;C++&lt;/td&gt;
&lt;td align="left"&gt;@ravinikam (2017/07) @stkrwork (2017/07) @etherealjoy (2018/02) @martindelille (2018/03) @muttleyxd (2019/08)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;C#&lt;/td&gt;
&lt;td align="left"&gt;@mandrean (2017/08), @jimschubert (2017/09) &lt;a href="https://www.patreon.com/jimschubert" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt; @frankyjuang (2019/09) @shibayan (2020/02)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Clojure&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Dart&lt;/td&gt;
&lt;td align="left"&gt;@ircecho (2017/07) @swipesight (2018/09) @jaumard (2018/09) @nickmeinhold (2019/09) @athornz (2019/12) @amondnet (2019/12)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Eiffel&lt;/td&gt;
&lt;td align="left"&gt;@jvelilla (2017/09)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Elixir&lt;/td&gt;
&lt;td align="left"&gt;@mrmstn (2018/12)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Elm&lt;/td&gt;
&lt;td align="left"&gt;@eriktim (2018/09)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Erlang&lt;/td&gt;
&lt;td align="left"&gt;@tsloughter (2017/11) @jfacorro (2018/10) @robertoaloi (2018/10)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;F#&lt;/td&gt;
&lt;td align="left"&gt;@nmfisher (2019/05)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Go&lt;/td&gt;
&lt;td align="left"&gt;@antihax (2017/11) @bvwells (2017/12) @grokify (2018/07) @kemokemo (2018/09) @bkabrda (2019/07)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;GraphQL&lt;/td&gt;
&lt;td align="left"&gt;@renepardon (2018/12)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Groovy&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Haskell&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Java&lt;/td&gt;
&lt;td align="left"&gt;@bbdouglas (2017/07) @sreeshas (2017/08) @jfiala (2017/08) @lukoyanov (2017/09) @cbornet (2017/09) @jeff9finger (2018/01) @karismann (2019/03) @Zomzog (2019/04) @lwlee2608 (2019/10) @bkabrda (2020/01)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Kotlin&lt;/td&gt;
&lt;td align="left"&gt;@jimschubert (2017/09) &lt;a href="https://www.patreon.com/jimschubert" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;, @dr4ke616 (2018/08) @karismann (2019/03) @Zomzog (2019/04) @andrewemery (2019/10) @4brunu (2019/11)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Lua&lt;/td&gt;
&lt;td align="left"&gt;@daurnimator (2017/08)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Nim&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;NodeJS/Javascript&lt;/td&gt;
&lt;td align="left"&gt;@CodeNinjai (2017/07) @frol (2017/07) @cliffano (2017/07)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;ObjC&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;OCaml&lt;/td&gt;
&lt;td align="left"&gt;@cgensoul (2019/08)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Perl&lt;/td&gt;
&lt;td align="left"&gt;@wing328 (2017/07) &lt;a href="https://www.patreon.com/wing328" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt; @yue9944882 (2019/06)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;PHP&lt;/td&gt;
&lt;td align="left"&gt;@jebentier (2017/07), @dkarlovi (2017/07), @mandrean (2017/08), @jfastnacht (2017/09), @ackintosh (2017/09) &lt;a href="https://www.patreon.com/ackintosh/overview" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;, @ybelenko (2018/07), @renepardon (2018/12)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;PowerShell&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Python&lt;/td&gt;
&lt;td align="left"&gt;@taxpon (2017/07) @frol (2017/07) @mbohlool (2017/07) @cbornet (2017/09) @kenjones-cisco (2017/11) @tomplus (2018/10) @Jyhess (2019/01) @slash-arun (2019/11) @spacether (2019/11)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;R&lt;/td&gt;
&lt;td align="left"&gt;@Ramanth (2019/07) @saigiridhar21 (2019/07)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Ruby&lt;/td&gt;
&lt;td align="left"&gt;@cliffano (2017/07) @zlx (2017/09) @autopp (2019/02)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Rust&lt;/td&gt;
&lt;td align="left"&gt;@frol (2017/07) @farcaller (2017/08) @bjgill (2017/12) @richardwhiuk (2019/07)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Scala&lt;/td&gt;
&lt;td align="left"&gt;@clasnake (2017/07), @jimschubert (2017/09) &lt;a href="https://www.patreon.com/jimschubert" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;, @shijinkui  (2018/01), @ramzimaalej (2018/03)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift&lt;/td&gt;
&lt;td align="left"&gt;@jgavris (2017/07) @ehyche (2017/08) @Edubits (2017/09) @jaz-ah (2017/09) @4brunu (2019/11)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;TypeScript&lt;/td&gt;
&lt;td align="left"&gt;@TiFu (2017/07) @taxpon (2017/07) @sebastianhaas (2017/07) @kenisteward (2017/07) @Vrolijkx (2017/09) @macjohnny (2018/01) @nicokoenig (2018/09) @topce (2018/10) @akehir (2019/07) @petejohansonxo (2019/11) @amakhrov (2020/02)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; = Link to support the contributor directly&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-63---history-of-openapi-generator" class="anchor" aria-hidden="true" href="#63---history-of-openapi-generator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;6.3 - History of OpenAPI Generator&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;OpenAPI Generator is a fork of &lt;a href="https://github.com/swagger-api/swagger-codegen"&gt;Swagger Codegen&lt;/a&gt;. In view of the issues with the Swagger Codegen 3.0.0 (beta) release and the disagreement on the project's direction, more than 40 top contributors and template creators of Swagger Codegen decided to fork Swagger Codegen and maintain a community-driven version called "OpenAPI Generator". Please refer to the &lt;a href="docs/qna.md"&gt;Q&amp;amp;A&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-founding-members-alphabetical-order" class="anchor" aria-hidden="true" href="#founding-members-alphabetical-order"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Founding Members (alphabetical order):&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ackintosh"&gt;Akihito Nakano&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/galaxie"&gt;Artem Ocheredko&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Articus"&gt;Arthur Mogliev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bkryza"&gt;Bartek Kryza&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bvwells"&gt;Ben Wells&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bjgill"&gt;Benjamin Gill&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cbornet"&gt;Christophe Bornet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cliffano"&gt;Cliffano Subagio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/d-date"&gt;Daiki Matsudate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Danielku15"&gt;Daniel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emilianobonassi"&gt;Emiliano Bonassi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eriktim"&gt;Erik Timmers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/macjohnny"&gt;Esteban Marin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gustavoapaz"&gt;Gustavo Paz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jvelilla"&gt;Javier Velilla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JFCote"&gt;Jean-François Côté&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jimschubert"&gt;Jim Schubert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jonschoning"&gt;Jon Schoning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jmini"&gt;Jérémie Bresson&lt;/a&gt; &lt;a href="https://www.patreon.com/jmini" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jayearn"&gt;Jörn Ahrens&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kenisteward"&gt;Keni Steward&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mstefaniuk"&gt;Marcin Stefaniuk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MartinDelille"&gt;Martin Delille&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/algas"&gt;Masahiro Yamauchi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/micheleISEP"&gt;Michele Albano&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ramzimaalej"&gt;Ramzi Maalej&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ravinikam"&gt;Ravindra Nikam&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ricardona"&gt;Ricardo Cardona&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sebastianhaas"&gt;Sebastian Haas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mandrean"&gt;Sebastian Mandrean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sreeshas"&gt;Sreenidhi Sreesha&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stkrwork"&gt;Stefan Krismann&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stcarrez"&gt;Stephane Carrez&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/taxpon"&gt;Takuro Wada&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tomplus"&gt;Tomasz Prus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tsloughter"&gt;Tristan Sloughter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/viclovsky"&gt;Victor Orlovsky&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/victorgit"&gt;Victor Trakhtenberg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/frol"&gt;Vlad Frolov&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/farcaller"&gt;Vladimir Pouzanov&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wing328"&gt;William Cheng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xmeng1"&gt;Xin Meng&lt;/a&gt; &lt;a href="https://www.patreon.com/user/overview?u=16435385" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xhh"&gt;Xu Hui Hui&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/antihax"&gt;antihax&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/beatcracker"&gt;beatcracker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https:/github.com/daurnimator"&gt;daurnimator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/etherealjoy"&gt;etherealjoy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jfiala"&gt;jfiala&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lukoyanov"&gt;lukoyanov&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; = Link to support the contributor directly&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-7---license" class="anchor" aria-hidden="true" href="#7---license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="#table-of-contents"&gt;7 - License&lt;/a&gt;&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;Copyright 2018 OpenAPI-Generator Contributors (&lt;a href="https://openapi-generator.tech" rel="nofollow"&gt;https://openapi-generator.tech&lt;/a&gt;)&lt;br&gt;
Copyright 2018 SmartBear Software&lt;/p&gt;
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at &lt;a href="https://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.&lt;/p&gt;
&lt;hr&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>OpenAPITools</author><guid isPermaLink="false">https://github.com/OpenAPITools/openapi-generator</guid><pubDate>Thu, 06 Feb 2020 00:13:00 GMT</pubDate></item><item><title>rishabh115/Interview-Questions #14 in Java, This week</title><link>https://github.com/rishabh115/Interview-Questions</link><description>&lt;p&gt;&lt;i&gt;Most comprehensive list :clipboard: of tech interview questions :blue_book: of companies scraped from Geeksforgeeks, CareerCup and Glassdoor. &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="#contributors"&gt;&lt;img src="https://camo.githubusercontent.com/c2980e7d285d6ba2d9b5127a2a353251f205d362/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616c6c5f636f6e7472696275746f72732d32392d6f72616e67652e7376673f7374796c653d666c61742d737175617265" alt="All Contributors" data-canonical-src="https://img.shields.io/badge/all_contributors-29-orange.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/rishabh115/Interview-Questions/blob/master/thumbnail.png"&gt;&lt;img src="https://github.com/rishabh115/Interview-Questions/raw/master/thumbnail.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-companies" class="anchor" aria-hidden="true" href="#companies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Companies&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/rishabh115/InterviewQuestions/blob/master/Expedia/README.md"&gt;Expedia&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/rishabh115/InterviewQuestions/blob/master/Grab/README.md"&gt;Grab&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/rishabh115/Interview-Questions/blob/master/MobiKwik/README.md"&gt;MobiKwik&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/rishabh115/InterviewQuestions/blob/master/NEC%20Technologies/README.md"&gt;NEC Technologies&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/rishabh115/InterviewQuestions/blob/master/PayPal/README.md"&gt;PayPal&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/rishabh115/InterviewQuestions/blob/master/Samsung/README.md"&gt;Samsung Research Institute&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/rishabh115/InterviewQuestions/blob/master/Uber/README.md"&gt;Uber&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/rishabh115/InterviewQuestions/blob/master/Yatra.com/README.md"&gt;Yatra.com&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/rishabh115/InterviewQuestions/blob/master/Zomato/README.md"&gt;Zomato&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-note" class="anchor" aria-hidden="true" href="#note"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Note:&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt; This repo is for educational purposes only.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-top-contributors-" class="anchor" aria-hidden="true" href="#top-contributors-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Top Contributors &lt;g-emoji class="g-emoji" alias="sparkles" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2728.png"&gt;✨&lt;/g-emoji&gt;&lt;/h2&gt;
&lt;p&gt;Thanks goes to these wonderful people:&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/sesubash"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/4628269?v=4" width="100px;" alt="Subash Selvaraj" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Subash Selvaraj&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/rishabh115/Interview-Questions/commits?author=sesubash" title="Code"&gt;&lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;💻&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://in.linkedin.com/in/shrutiab" rel="nofollow"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/10259707?v=4" width="100px;" alt="Shruti Bhutaiya" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shruti Bhutaiya&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/rishabh115/Interview-Questions/commits?author=shrutibhutaiya" title="Code"&gt;&lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;💻&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/akshit04"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/20995986?v=4" width="100px;" alt="Akshit Kharbanda" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Akshit Kharbanda&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/rishabh115/Interview-Questions/commits?author=akshit04" title="Code"&gt;&lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;💻&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://github.com/dhruv-aggarwal"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/13146014?v=4" width="100px;" alt="Dhruv Aggarwal" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dhruv Aggarwal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/rishabh115/Interview-Questions/commits?author=dhruv-aggarwal" title="Code"&gt;&lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;💻&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
   &lt;td align="center"&gt;&lt;a href="https://github.com/CheshtaK"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/32400008?v=4" width="100px;" alt="Cheshta Kwatra" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Cheshta Kwatra&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/rishabh115/Interview-Questions/commits?author=CheshtaK" title="Code"&gt;&lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;💻&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;  
    &lt;td align="center"&gt;&lt;a href="https://github.com/kartikay101"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/21268943?v=4" width="100px;" alt="Kartikay Shandil " style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kartikay Shandil &lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/rishabh115/Interview-Questions/commits?author=kartikay101" title="Code"&gt;&lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;💻&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td align="center"&gt;&lt;a href="https://tanaytoshniwal.me" rel="nofollow"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/19304171?v=4" width="100px;" alt="Tanay Toshniwal" style="max-width:100%;"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tanay Toshniwal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/rishabh115/Interview-Questions/commits?author=tanaytoshniwal" title="Code"&gt;&lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;💻&lt;/g-emoji&gt;&lt;/a&gt;&lt;/td&gt;    
  &lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;     
&lt;p&gt;Like this repo ? Contribute new questions this hacktoberfest and be a part of it. #Hacktoberfest_2019&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-for-contributing-see-contributing-guidelines-" class="anchor" aria-hidden="true" href="#for-contributing-see-contributing-guidelines-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;For contributing see &lt;a href="https://github.com/rishabh115/InterviewQuestions/blob/master/CONTRIBUTING.md"&gt;Contributing guidelines&lt;/a&gt; .&lt;/h4&gt;
&lt;h2&gt;&lt;a id="user-content-similar-projects" class="anchor" aria-hidden="true" href="#similar-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Similar projects:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alexakasanjeev/Interviewee-Questions"&gt;Interviewee-Questions&lt;/a&gt; by &lt;a href="https://github.com/alexakasanjeev"&gt;Sanjeev&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-feel-free-to-show-your-love-heart-by-putting-a-star-star-on-this-project-v-" class="anchor" aria-hidden="true" href="#feel-free-to-show-your-love-heart-by-putting-a-star-star-on-this-project-v-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feel free to show your love &lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; by putting a star &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt; on this project &lt;g-emoji class="g-emoji" alias="v" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/270c.png"&gt;✌️&lt;/g-emoji&gt; .&lt;/h2&gt;
&lt;p&gt;&lt;b name="user-content-ref"&gt;References&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.geeksforgeeks.org/" rel="nofollow"&gt;Geeksforgeeks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.careercup.com/" rel="nofollow"&gt;Career Cup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.glassdoor.co.in/index.htm" rel="nofollow"&gt;Glassdoor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>rishabh115</author><guid isPermaLink="false">https://github.com/rishabh115/Interview-Questions</guid><pubDate>Thu, 06 Feb 2020 00:14:00 GMT</pubDate></item><item><title>confluentinc/schema-registry #15 in Java, This week</title><link>https://github.com/confluentinc/schema-registry</link><description>&lt;p&gt;&lt;i&gt;Confluent Schema Registry for Kafka&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-schema-registry" class="anchor" aria-hidden="true" href="#schema-registry"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Schema Registry&lt;/h1&gt;
&lt;p&gt;Schema Registry provides a serving layer for your metadata. It provides a
RESTful interface for storing and retrieving Avro schemas. It stores a versioned
history of all schemas, provides multiple compatibility settings and allows
evolution of schemas according to the configured compatibility setting. It
provides serializers that plug into Kafka clients that handle schema storage and
retrieval for Kafka messages that are sent in the Avro format.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart&lt;/h2&gt;
&lt;p&gt;The following assumes you have Kafka and an instance of the Schema Registry running using the default settings.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Register a new version of a schema under the subject "Kafka-key"&lt;/span&gt;
$ curl -X POST -H &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Content-Type: application/vnd.schemaregistry.v1+json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
    --data &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{"schema": "{\"type\": \"string\"}"}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; \
    http://localhost:8081/subjects/Kafka-key/versions
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:1}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Register a new version of a schema under the subject "Kafka-value"&lt;/span&gt;
$ curl -X POST -H &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Content-Type: application/vnd.schemaregistry.v1+json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
    --data &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{"schema": "{\"type\": \"string\"}"}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; \
     http://localhost:8081/subjects/Kafka-value/versions
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:1}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; List all subjects&lt;/span&gt;
$ curl -X GET http://localhost:8081/subjects
  [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Kafka-value&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Kafka-key&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; List all schema versions registered under the subject "Kafka-value"&lt;/span&gt;
$ curl -X GET http://localhost:8081/subjects/Kafka-value/versions
  [1]

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Fetch a schema by globally unique id 1&lt;/span&gt;
$ curl -X GET http://localhost:8081/schemas/ids/1
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;schema&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\"&lt;/span&gt;string&lt;span class="pl-cce"&gt;\"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Fetch version 1 of the schema registered under subject "Kafka-value"&lt;/span&gt;
$ curl -X GET http://localhost:8081/subjects/Kafka-value/versions/1
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;subject&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Kafka-value&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;version&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:1,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:1,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;schema&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\"&lt;/span&gt;string&lt;span class="pl-cce"&gt;\"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Fetch the most recently registered schema under subject "Kafka-value"&lt;/span&gt;
$ curl -X GET http://localhost:8081/subjects/Kafka-value/versions/latest
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;subject&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Kafka-value&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;version&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:1,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:1,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;schema&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\"&lt;/span&gt;string&lt;span class="pl-cce"&gt;\"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Delete version 3 of the schema registered under subject "Kafka-value"&lt;/span&gt;
$ curl -X DELETE http://localhost:8081/subjects/Kafka-value/versions/3
  3

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Delete all versions of the schema registered under subject "Kafka-value"&lt;/span&gt;
$ curl -X DELETE http://localhost:8081/subjects/Kafka-value
  [1, 2, 3, 4, 5]

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Check whether a schema has been registered under subject "Kafka-key"&lt;/span&gt;
$ curl -X POST -H &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Content-Type: application/vnd.schemaregistry.v1+json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
    --data &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{"schema": "{\"type\": \"string\"}"}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; \
    http://localhost:8081/subjects/Kafka-key
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;subject&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Kafka-key&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;version&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:1,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:1,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;schema&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\"&lt;/span&gt;string&lt;span class="pl-cce"&gt;\"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Test compatibility of a schema with the latest schema under subject "Kafka-value"&lt;/span&gt;
$ curl -X POST -H &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Content-Type: application/vnd.schemaregistry.v1+json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
    --data &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{"schema": "{\"type\": \"string\"}"}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; \
    http://localhost:8081/compatibility/subjects/Kafka-value/versions/latest
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;is_compatible&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:true}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Get top level config&lt;/span&gt;
$ curl -X GET http://localhost:8081/config
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;compatibilityLevel&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BACKWARD&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Update compatibility requirements globally&lt;/span&gt;
$ curl -X PUT -H &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Content-Type: application/vnd.schemaregistry.v1+json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
    --data &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{"compatibility": "NONE"}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; \
    http://localhost:8081/config
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;compatibility&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;NONE&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Update compatibility requirements under the subject "Kafka-value"&lt;/span&gt;
$ curl -X PUT -H &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Content-Type: application/vnd.schemaregistry.v1+json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
    --data &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{"compatibility": "BACKWARD"}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; \
    http://localhost:8081/config/Kafka-value
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;compatibility&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BACKWARD&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;You can download prebuilt versions of the schema registry as part of the
&lt;a href="http://confluent.io/downloads/" rel="nofollow"&gt;Confluent Platform&lt;/a&gt;. To install from source,
follow the instructions in the Development section.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-deployment" class="anchor" aria-hidden="true" href="#deployment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deployment&lt;/h2&gt;
&lt;p&gt;The REST interface to schema registry includes a built-in Jetty server. The
wrapper scripts &lt;code&gt;bin/schema-registry-start&lt;/code&gt; and &lt;code&gt;bin/schema-registry-stop&lt;/code&gt;
are the recommended method of starting and stopping the service.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;p&gt;To build a development version, you may need a development versions of
&lt;a href="https://github.com/confluentinc/common"&gt;common&lt;/a&gt; and
&lt;a href="https://github.com/confluentinc/rest-utils"&gt;rest-utils&lt;/a&gt;.  After
installing these, you can build the Schema Registry
with Maven.&lt;/p&gt;
&lt;p&gt;This project uses the &lt;a href="https://google.github.io/styleguide/javaguide.html" rel="nofollow"&gt;Google Java code style&lt;/a&gt;
to keep code clean and consistent.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-openapi-spec" class="anchor" aria-hidden="true" href="#openapi-spec"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenAPI Spec&lt;/h2&gt;
&lt;p&gt;OpenAPI (formerly known as Swagger) specifications are built automatically using &lt;code&gt;swagger-maven-plugin&lt;/code&gt;
on &lt;code&gt;compile&lt;/code&gt; phase.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contribute" class="anchor" aria-hidden="true" href="#contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribute&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Source Code: &lt;a href="https://github.com/confluentinc/schema-registry"&gt;https://github.com/confluentinc/schema-registry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Issue Tracker: &lt;a href="https://github.com/confluentinc/schema-registry/issues"&gt;https://github.com/confluentinc/schema-registry/issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;The project is licensed under the &lt;a href="LICENSE-ConfluentCommunity"&gt;Confluent Community License&lt;/a&gt;, except for client libs,
which is under the &lt;a href="LICENSE-Apache"&gt;Apache 2.0 license&lt;/a&gt;.
See LICENSE file in each subfolder for detailed license agreement.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>confluentinc</author><guid isPermaLink="false">https://github.com/confluentinc/schema-registry</guid><pubDate>Thu, 06 Feb 2020 00:15:00 GMT</pubDate></item><item><title>confluentinc/ksql #16 in Java, This week</title><link>https://github.com/confluentinc/ksql</link><description>&lt;p&gt;&lt;i&gt;The event streaming database purpose-built for stream processing applications&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content--ksqldb" class="anchor" aria-hidden="true" href="#-ksqldb"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="ksql-rocket.png"&gt;&lt;img src="ksql-rocket.png" alt="KSQL rocket" style="max-width:100%;"&gt;&lt;/a&gt; ksqlDB&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-the-event-streaming-database-purpose-built-for-stream-processing-applications" class="anchor" aria-hidden="true" href="#the-event-streaming-database-purpose-built-for-stream-processing-applications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The event streaming database purpose-built for stream processing applications&lt;/h3&gt;
&lt;h1&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h1&gt;
&lt;p&gt;ksqlDB is an event streaming database for Apache Kafka. It is &lt;strong&gt;distributed&lt;/strong&gt;, &lt;strong&gt;scalable&lt;/strong&gt;, &lt;strong&gt;reliable&lt;/strong&gt;, and &lt;strong&gt;real-time&lt;/strong&gt;. ksqlDB combines the power of real-time stream processing with the approachable feel of a relational database through a familiar, lightweight SQL syntax. ksqlDB offers these core primitives:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.ksqldb.io/en/latest/concepts/collections/streams/" rel="nofollow"&gt;Streams&lt;/a&gt; and &lt;a href="https://docs.ksqldb.io/en/latest/concepts/collections/tables/" rel="nofollow"&gt;tables&lt;/a&gt;&lt;/strong&gt; - Create relations with schemas over your Apache Kafka topic data&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.ksqldb.io/en/latest/concepts/materialized-views/" rel="nofollow"&gt;Materialized views&lt;/a&gt;&lt;/strong&gt; - Define real-time, incrementally updated materialized views over streams using SQL&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.ksqldb.io/en/latest/concepts/queries/push/" rel="nofollow"&gt;Push queries&lt;/a&gt;&lt;/strong&gt;- Continuous queries that push incremental results to clients in real time&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.ksqldb.io/en/latest/concepts/queries/pull/" rel="nofollow"&gt;Pull queries&lt;/a&gt;&lt;/strong&gt; - Query materialized views on demand, much like with a traditional database&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.ksqldb.io/en/latest/concepts/connectors" rel="nofollow"&gt;Connect&lt;/a&gt;&lt;/strong&gt; - Integrate with any &lt;a href="https://docs.confluent.io/current/connect/index.html" rel="nofollow"&gt;Kafka Connect&lt;/a&gt; data source or sink, entirely from within ksqlDB&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Composing these powerful primitives enables you to build a complete streaming app with just SQL statements, minimizing complexity and operational overhead. ksqlDB supports a wide range of operations including aggregations, joins, windowing, sessionization, and much more. You can find more ksqlDB tutorials and resources &lt;a href="https://kafka-tutorials.confluent.io/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Follow the &lt;a href="https://ksqldb.io/quickstart.html" rel="nofollow"&gt;ksqlDB quickstart&lt;/a&gt; to get started in just a few minutes.&lt;/li&gt;
&lt;li&gt;Read through the &lt;a href="https://docs.ksqldb.io" rel="nofollow"&gt;ksqlDB documentation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Take a look at some &lt;a href="https://kafka-tutorials.confluent.io/create-stateful-aggregation-count/ksql.html" rel="nofollow"&gt;ksqlDB tutorials&lt;/a&gt; for examples of common patterns.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h1&gt;
&lt;p&gt;See the &lt;a href="https://docs.ksqldb.io/" rel="nofollow"&gt;ksqlDB documentation&lt;/a&gt; for the latest stable release.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-use-cases-and-examples" class="anchor" aria-hidden="true" href="#use-cases-and-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use Cases and Examples&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-materialized-views" class="anchor" aria-hidden="true" href="#materialized-views"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Materialized views&lt;/h2&gt;
&lt;p&gt;ksqlDB allows you to define materialized views over your streams and tables. Materialized views are defined by what is known as a "persistent query". These queries are known as persistent because they maintain their incrementally updated results using a table.&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;CREATE&lt;/span&gt; &lt;span class="pl-k"&gt;TABLE&lt;/span&gt; &lt;span class="pl-en"&gt;hourly_metrics&lt;/span&gt; &lt;span class="pl-k"&gt;AS&lt;/span&gt;
  &lt;span class="pl-k"&gt;SELECT&lt;/span&gt; url, &lt;span class="pl-c1"&gt;COUNT&lt;/span&gt;(&lt;span class="pl-k"&gt;*&lt;/span&gt;)
  &lt;span class="pl-k"&gt;FROM&lt;/span&gt; page_views
  WINDOW TUMBLING (SIZE &lt;span class="pl-c1"&gt;1&lt;/span&gt; HOUR)
  &lt;span class="pl-k"&gt;GROUP BY&lt;/span&gt; url EMIT CHANGES;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Results may be &lt;strong&gt;"pulled"&lt;/strong&gt; from materialized views on demand via &lt;code&gt;SELECT&lt;/code&gt; queries. The following query will return a single row:&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;SELECT&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-k"&gt;FROM&lt;/span&gt; hourly_metrics
  &lt;span class="pl-k"&gt;WHERE&lt;/span&gt; url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;http://myurl.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;AND&lt;/span&gt; WINDOWSTART &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2019-11-20T19:00&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Results may also be continuously &lt;strong&gt;"pushed"&lt;/strong&gt; to clients via streaming &lt;code&gt;SELECT&lt;/code&gt; queries. The following streaming query will push to the client all incremental changes made to the materialized view:&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;SELECT&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-k"&gt;FROM&lt;/span&gt; hourly_metrics EMIT CHANGES;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Streaming queries will run perpetually until they are explicitly terminated.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-streaming-etl" class="anchor" aria-hidden="true" href="#streaming-etl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Streaming ETL&lt;/h2&gt;
&lt;p&gt;Apache Kafka is a popular choice for powering data pipelines. ksqlDB makes it simple to transform data within the pipeline, readying messages to cleanly land in another system.&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;CREATE STREAM vip_actions &lt;span class="pl-k"&gt;AS&lt;/span&gt;
  &lt;span class="pl-k"&gt;SELECT&lt;/span&gt; userid, page, action
  &lt;span class="pl-k"&gt;FROM&lt;/span&gt; clickstream c
  &lt;span class="pl-k"&gt;LEFT JOIN&lt;/span&gt; users u &lt;span class="pl-k"&gt;ON&lt;/span&gt; &lt;span class="pl-c1"&gt;c&lt;/span&gt;.&lt;span class="pl-c1"&gt;userid&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;u&lt;/span&gt;.&lt;span class="pl-c1"&gt;user_id&lt;/span&gt;
  &lt;span class="pl-k"&gt;WHERE&lt;/span&gt; &lt;span class="pl-c1"&gt;u&lt;/span&gt;.&lt;span class="pl-c1"&gt;level&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Platinum&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; EMIT CHANGES;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-anomaly-detection" class="anchor" aria-hidden="true" href="#anomaly-detection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Anomaly Detection&lt;/h2&gt;
&lt;p&gt;ksqlDB is a good fit for identifying patterns or anomalies on real-time data. By processing the stream as data arrives you can identify and properly surface out of the ordinary events with millisecond latency.&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;CREATE&lt;/span&gt; &lt;span class="pl-k"&gt;TABLE&lt;/span&gt; &lt;span class="pl-en"&gt;possible_fraud&lt;/span&gt; &lt;span class="pl-k"&gt;AS&lt;/span&gt;
  &lt;span class="pl-k"&gt;SELECT&lt;/span&gt; card_number, &lt;span class="pl-c1"&gt;count&lt;/span&gt;(&lt;span class="pl-k"&gt;*&lt;/span&gt;)
  &lt;span class="pl-k"&gt;FROM&lt;/span&gt; authorization_attempts
  WINDOW TUMBLING (SIZE &lt;span class="pl-c1"&gt;5&lt;/span&gt; SECONDS)
  &lt;span class="pl-k"&gt;GROUP BY&lt;/span&gt; card_number
  &lt;span class="pl-k"&gt;HAVING&lt;/span&gt; &lt;span class="pl-c1"&gt;count&lt;/span&gt;(&lt;span class="pl-k"&gt;*&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt; EMIT CHANGES;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-monitoring" class="anchor" aria-hidden="true" href="#monitoring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Monitoring&lt;/h2&gt;
&lt;p&gt;Kafka's ability to provide scalable ordered messages with stream processing make it a common solution for log data monitoring and alerting. ksqlDB lends a familiar syntax for tracking, understanding, and managing alerts.&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;CREATE&lt;/span&gt; &lt;span class="pl-k"&gt;TABLE&lt;/span&gt; &lt;span class="pl-en"&gt;error_counts&lt;/span&gt; &lt;span class="pl-k"&gt;AS&lt;/span&gt;
  &lt;span class="pl-k"&gt;SELECT&lt;/span&gt; error_code, &lt;span class="pl-c1"&gt;count&lt;/span&gt;(&lt;span class="pl-k"&gt;*&lt;/span&gt;)
  &lt;span class="pl-k"&gt;FROM&lt;/span&gt; monitoring_stream
  WINDOW TUMBLING (SIZE &lt;span class="pl-c1"&gt;1&lt;/span&gt; MINUTE)
  &lt;span class="pl-k"&gt;WHERE&lt;/span&gt;  type &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ERROR&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;GROUP BY&lt;/span&gt; error_code EMIT CHANGES;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-integration-with-external-data-sources-and-sinks" class="anchor" aria-hidden="true" href="#integration-with-external-data-sources-and-sinks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integration with External Data Sources and Sinks&lt;/h2&gt;
&lt;p&gt;ksqlDB includes native integration with &lt;a href="https://docs.ksqldb.io/en/latest/concepts/connectors" rel="nofollow"&gt;Kafka Connect&lt;/a&gt; data sources and sinks, effectively providing a unified SQL interface over a &lt;a href="https://www.confluent.io/hub" rel="nofollow"&gt;broad variety of external systems&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The following query is a simple persistent streaming query that will produce all of its output into a topic named &lt;code&gt;clicks_transformed&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;CREATE STREAM clicks_transformed &lt;span class="pl-k"&gt;AS&lt;/span&gt;
  &lt;span class="pl-k"&gt;SELECT&lt;/span&gt; userid, page, action
  &lt;span class="pl-k"&gt;FROM&lt;/span&gt; clickstream c
  &lt;span class="pl-k"&gt;LEFT JOIN&lt;/span&gt; users u &lt;span class="pl-k"&gt;ON&lt;/span&gt; &lt;span class="pl-c1"&gt;c&lt;/span&gt;.&lt;span class="pl-c1"&gt;userid&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;u&lt;/span&gt;.&lt;span class="pl-c1"&gt;user_id&lt;/span&gt; EMIT CHANGES;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Rather than simply send all continuous query output into a Kafka topic, it is often very useful to route the output into another datastore. ksqlDB's Kafka Connect integration makes this pattern very easy.&lt;/p&gt;
&lt;p&gt;The following statement will create a Kafka Connect sink connector that continuously sends all output from the above streaming ETL query directly into Elasticsearch:&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt; CREATE SINK CONNECTOR es_sink WITH (
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;connector.class&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;io.confluent.connect.elasticsearch.ElasticsearchSinkConnector&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;key.converter&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;   &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;org.apache.kafka.connect.storage.StringConverter&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;topics&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;          &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;clicks_transformed&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;key.ignore&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;      &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;true&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;schema.ignore&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;   &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;true&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;type.name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;       &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;connection.url&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;  &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;http://elasticsearch:9200&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a name="user-content-community"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-join-the-community" class="anchor" aria-hidden="true" href="#join-the-community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Join the Community&lt;/h1&gt;
&lt;p&gt;For user help, questions or queries about KSQL please use our &lt;a href="https://groups.google.com/forum/#!forum/ksql-users" rel="nofollow"&gt;user Google Group&lt;/a&gt;
or our public Slack channel #ksqldb in &lt;a href="https://slackpass.io/confluentcommunity" rel="nofollow"&gt;Confluent Community Slack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For discussions about development of KSQL please use our &lt;a href="https://groups.google.com/forum/#!forum/ksql-dev" rel="nofollow"&gt;developer Google Group&lt;/a&gt;.
You can also hang out in our developer Slack channel #ksqldb-dev in - &lt;a href="https://slackpass.io/confluentcommunity" rel="nofollow"&gt;Confluent Community Slack&lt;/a&gt; - this is where day to day chat about the development of KSQL happens.
Everyone is welcome!&lt;/p&gt;
&lt;p&gt;You can get help, learn how to contribute to KSQL, and find the latest news by &lt;a href="https://www.confluent.io/contact-us-thank-you/" rel="nofollow"&gt;connecting with the Confluent community&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For more general questions about the Confluent Platform please post in the &lt;a href="https://groups.google.com/forum/#!forum/confluent-platform" rel="nofollow"&gt;Confluent Google group&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;Contributions to the code, examples, documentation, etc. are very much appreciated.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Report issues and bugs directly in &lt;a href="https://github.com/confluentinc/ksql/issues"&gt;this GitHub project&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Learn how to work with the KSQL source code, including building and testing KSQL as well as contributing code changes
to KSQL by reading our &lt;a href="CONTRIBUTING.md"&gt;Development and Contribution guidelines&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;One good way to get started is by tackling a &lt;a href="https://github.com/confluentinc/ksql/labels/good%20first%20issue"&gt;newbie issue&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;The project is licensed under the &lt;a href="LICENSE"&gt;Confluent Community License&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Apache, Apache Kafka, Kafka, and associated open source project names are trademarks of the &lt;a href="https://www.apache.org/" rel="nofollow"&gt;Apache Software Foundation&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>confluentinc</author><guid isPermaLink="false">https://github.com/confluentinc/ksql</guid><pubDate>Thu, 06 Feb 2020 00:16:00 GMT</pubDate></item><item><title>SeleniumHQ/selenium #17 in Java, This week</title><link>https://github.com/SeleniumHQ/selenium</link><description>&lt;p&gt;&lt;i&gt;A browser automation framework and ecosystem.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-selenium--" class="anchor" aria-hidden="true" href="#selenium--"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Selenium &lt;a href="//travis-ci.com/SeleniumHQ/selenium/builds" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b97d1726946ab4ded8ab5b42af032669116470c9/68747470733a2f2f7472617669732d63692e636f6d2f53656c656e69756d48512f73656c656e69756d2e7376673f6272616e63683d6d6173746572" alt="Travis Status" data-canonical-src="https://travis-ci.com/SeleniumHQ/selenium.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://ci.appveyor.com/project/SeleniumHQ/selenium/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c629b263afc174a8dce2c47ea80d0dc15be774d4/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f706731663939703161657470396d6b392f6272616e63682f6d61737465723f7376673d74727565" alt="AppVeyor Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/pg1f99p1aetp9mk9/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://selenium.dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/74ed64243ba05754329bc527cd4240ebd1c087a1/68747470733a2f2f73656c656e69756d2e6465762f696d616765732f73656c656e69756d5f6c6f676f5f7371756172655f677265656e2e706e67" width="180" alt="Selenium" data-canonical-src="https://selenium.dev/images/selenium_logo_square_green.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Selenium is an umbrella project encapsulating a variety of tools and
libraries enabling web browser automation. Selenium specifically
provides infrastructure for the &lt;a href="https://w3c.github.io/webdriver/" rel="nofollow"&gt;W3C WebDriver specification&lt;/a&gt;
— a platform and language-neutral coding interface compatible with all
major web browsers.&lt;/p&gt;
&lt;p&gt;The project is made possible by volunteer contributors who've
generously donated thousands of hours in code development and upkeep.&lt;/p&gt;
&lt;p&gt;Selenium's source code is made available under the &lt;a href="https://github.com/SeleniumHQ/selenium/blob/master/LICENSE"&gt;Apache 2.0 license&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Narrative documentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://selenium.dev/documentation/" rel="nofollow"&gt;User Manual&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;API documentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://seleniumhq.github.io/selenium/docs/api/dotnet/" rel="nofollow"&gt;C#&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://seleniumhq.github.io/selenium/docs/api/javascript/" rel="nofollow"&gt;JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://seleniumhq.github.io/selenium/docs/api/java/index.html" rel="nofollow"&gt;Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://seleniumhq.github.io/selenium/docs/api/py/" rel="nofollow"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://seleniumhq.github.io/selenium/docs/api/rb/" rel="nofollow"&gt;Ruby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-pull-requests" class="anchor" aria-hidden="true" href="#pull-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pull Requests&lt;/h2&gt;
&lt;p&gt;Please read &lt;a href="https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;
before submitting your pull requests.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;In order to build Selenium, you'll generally use the &lt;code&gt;./go&lt;/code&gt; command. &lt;code&gt;./go&lt;/code&gt; is a Rake script,
which wraps the main build too, &lt;code&gt;bazel&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-bazel" class="anchor" aria-hidden="true" href="#bazel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bazel&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://bazel.build/" rel="nofollow"&gt;Bazel&lt;/a&gt; was built by the fine folks at Google. Bazel manages dependency
downloads, generates the Selenium binaries, executes tests and does it all rather quickly.&lt;/p&gt;
&lt;p&gt;More detailed instructions for getting Bazel running are below, but if you can successfully get
the java and javascript folders to build without errors, you should be confident that you have the
correct binaries on your system.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-before-building" class="anchor" aria-hidden="true" href="#before-building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Before Building&lt;/h3&gt;
&lt;p&gt;Ensure that you have Chrome installed and the
&lt;a href="https://chromedriver.chromium.org/downloads" rel="nofollow"&gt;&lt;code&gt;chromedriver&lt;/code&gt; &lt;/a&gt; that matches
your Chrome version available on your &lt;code&gt;$PATH&lt;/code&gt;. You may have to update this from time to time.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-common-build-targets" class="anchor" aria-hidden="true" href="#common-build-targets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Common Build Targets&lt;/h3&gt;
&lt;p&gt;To build the most commonly-used modules of Selenium from source, execute this command from the root
project folder:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;bazel build java/...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have some extra time on your hands, you can run this command to get extra confidence
that your build is successful. This will do a lot more work to build all the javascript artifacts:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;bazel build java/... javascript/...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you're making changes to the java/ or javascript/ folders in this project, and this command
executes without errors, you should be able to create a PR of your changes. (See also CONTRIBUTING.md)&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-build-details" class="anchor" aria-hidden="true" href="#build-details"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Details&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Bazel files are called BUILD.bazel&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SeleniumHQ/selenium/wiki/Crazy-Fun-Build"&gt;crazyfun&lt;/a&gt; build files are called
&lt;em&gt;build.desc&lt;/em&gt;. This is an older build system, still in use in the project&lt;/li&gt;
&lt;li&gt;There is also a main Rakefile&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The order the modules are built is determined by the build system. If you want to build an
individual module (assuming all dependent modules have previously been built), try the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./go javascript/atoms:test:run&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this case, &lt;code&gt;javascript/atoms&lt;/code&gt; is the module directory,
&lt;code&gt;test&lt;/code&gt; is a target in that directory's &lt;code&gt;build.desc&lt;/code&gt; file,
and &lt;code&gt;run&lt;/code&gt; is the action to run on that target.&lt;/p&gt;
&lt;p&gt;As you see &lt;em&gt;build targets&lt;/em&gt; scroll past in the log,
you may want to run them individually. crazyfun can run them individually,
by target name, as long as &lt;code&gt;:run&lt;/code&gt; is appended (see above).&lt;/p&gt;
&lt;p&gt;To list all available targets, you can append the &lt;code&gt;-T&lt;/code&gt; flag:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./go -T&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The latest version of the &lt;a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" rel="nofollow"&gt;Java 11 OpenJDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;java&lt;/code&gt; and &lt;code&gt;jar&lt;/code&gt; on the PATH (make sure you use &lt;code&gt;java&lt;/code&gt; executable from JDK but not JRE).
&lt;ul&gt;
&lt;li&gt;To test this, try running the command &lt;code&gt;javac&lt;/code&gt;. This command won't exist if you only have the JRE
installed. If you're met with a list of command-line options, you're referencing the JDK properly.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.python.org/" rel="nofollow"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;python&lt;/code&gt; on the PATH&lt;/li&gt;
&lt;li&gt;&lt;a href="http://python-requests.org" rel="nofollow"&gt;The Requests Library&lt;/a&gt; for Python: &lt;code&gt;pip install requests&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;MacOS users should have the latest version of Xcode installed, including the command-line tools.
The following command should work:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;xcode-select --install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Although the build system is based on rake, it's &lt;strong&gt;strongly advised&lt;/strong&gt;
to rely on the version of JRuby in &lt;code&gt;third_party/&lt;/code&gt; that is invoked by
&lt;code&gt;go&lt;/code&gt;.  The only developer type who would want to deviate from this is
the “build maintainer” who's experimenting with a JRuby upgrade.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-optional-requirements" class="anchor" aria-hidden="true" href="#optional-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Optional Requirements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Python 3.4+ (if you want to run Python tests for this version)&lt;/li&gt;
&lt;li&gt;Ruby 2.0&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-internet-explorer-driver" class="anchor" aria-hidden="true" href="#internet-explorer-driver"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Internet Explorer Driver&lt;/h3&gt;
&lt;p&gt;If you plan to compile the
&lt;a href="https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver"&gt;IE driver&lt;/a&gt;,
you also need:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.visualstudio.com/" rel="nofollow"&gt;Visual Studio 2008&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;32 and 64 bit cross compilers&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The build will work on any platform, but the tests for IE will be
skipped silently if you are not building on Windows.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-common-tasks-bazel" class="anchor" aria-hidden="true" href="#common-tasks-bazel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Common Tasks (Bazel)&lt;/h2&gt;
&lt;p&gt;To build the bulk of the Selenium binaries from source, run the
following command from the root folder:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;bazel build java/... javascript/...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To build the grid deployment jar, run this command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;bazel build grid&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To run tests within a particular area of the project, use the "test" command, followed
by the folder or target. Tests are tagged with "small", "medium", or "large", and can be filtered
with the &lt;code&gt;--test_size_filters&lt;/code&gt; option:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;bazel &lt;span class="pl-c1"&gt;test&lt;/span&gt; --test_size_filters=small,medium java/...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Bazel's "test" command will run &lt;em&gt;all&lt;/em&gt; tests in the package, including integration tests. Expect
the &lt;code&gt;test java/...&lt;/code&gt; to launch browsers and consume a considerable amount of time and resources.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tour" class="anchor" aria-hidden="true" href="#tour"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tour&lt;/h2&gt;
&lt;p&gt;The code base is generally segmented around the languages used to
write the component.  Selenium makes extensive use of JavaScript, so
let's start there.  Working on the JavaScript is easy.  First of all,
start the development server:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./go debug-server&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, navigate to
&lt;a href="http://localhost:2310/javascript" rel="nofollow"&gt;http://localhost:2310/javascript&lt;/a&gt;.
You'll find the contents of the &lt;code&gt;javascript/&lt;/code&gt; directory being shown.
We use the &lt;a href="https://developers.google.com/closure/library/" rel="nofollow"&gt;Closure
Library&lt;/a&gt; for
developing much of the JavaScript, so now navigate to
&lt;a href="http://localhost:2310/javascript/atoms/test" rel="nofollow"&gt;http://localhost:2310/javascript/atoms/test&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The tests in this directory are normal HTML files with names ending
with &lt;code&gt;_test.html&lt;/code&gt;.  Click on one to load the page and run the test. You
can run all the JavaScript tests using:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./go test_javascript&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-maven-pom-files" class="anchor" aria-hidden="true" href="#maven-pom-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maven POM files&lt;/h2&gt;
&lt;p&gt;Here is the &lt;a href="http://repo1.maven.org/maven2/org/seleniumhq/selenium/" rel="nofollow"&gt;public Selenium Maven
repository&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-build-output" class="anchor" aria-hidden="true" href="#build-output"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Output&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;./go&lt;/code&gt; only makes a top-level &lt;code&gt;build&lt;/code&gt; directory.  Outputs are placed
under that relative to the target name. Which is probably best
described with an example.  For the target:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./go //java/client/src/org/openqa/selenium:selenium-api&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The output is found under:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;build/java/client/src/org/openqa/selenium/selenium-api.jar&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you watch the build, each step should print where its output is
going.  Java test outputs appear in one of two places: either under
&lt;code&gt;build/test_logs&lt;/code&gt; for &lt;a href="http://junit.org/" rel="nofollow"&gt;JUnit&lt;/a&gt; or in
&lt;code&gt;build/build_log.xml&lt;/code&gt; for &lt;a href="http://testng.org/doc/index.html" rel="nofollow"&gt;TestNG&lt;/a&gt;
tests.  If you'd like the build to be chattier, just append &lt;code&gt;log=true&lt;/code&gt;
to the build command line.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-help-with-go" class="anchor" aria-hidden="true" href="#help-with-go"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help with &lt;code&gt;go&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;More general, but basic, help for &lt;code&gt;go&lt;/code&gt;…&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./go --help&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;go&lt;/code&gt; is just a wrapper around
&lt;a href="http://rake.rubyforge.org/" rel="nofollow"&gt;Rake&lt;/a&gt;, so you can use the standard
commands such as &lt;code&gt;rake -T&lt;/code&gt; to get more information about available
targets.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-maven-per-se" class="anchor" aria-hidden="true" href="#maven-per-se"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maven &lt;em&gt;per se&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;If it is not clear already, Selenium is not built with Maven. It is
built with &lt;code&gt;bazel&lt;/code&gt;, though that is invoked with &lt;code&gt;go&lt;/code&gt; as outlined above,
so you do not really have to learn too much about that.&lt;/p&gt;
&lt;p&gt;That said, it is possible to relatively quickly build Selenium pieces
for Maven to use. You are only really going to want to do this when
you are testing the cutting-edge of Selenium development (which we
welcome) against your application.  Here is the quickest way to build
and deploy into your local maven repository (&lt;code&gt;~/.m2/repository&lt;/code&gt;), while
skipping Selenium's own tests.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./go maven-install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The maven jars should now be in your local &lt;code&gt;~/.m2/repository&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-useful-resources" class="anchor" aria-hidden="true" href="#useful-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Useful Resources&lt;/h2&gt;
&lt;p&gt;Refer to the &lt;a href="https://github.com/SeleniumHQ/selenium/wiki/Building-WebDriver"&gt;Building Web
Driver&lt;/a&gt;
wiki page for the last word on building the bits and pieces of Selenium.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bazel-installationtroubleshooting" class="anchor" aria-hidden="true" href="#bazel-installationtroubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bazel Installation/Troubleshooting&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-macos" class="anchor" aria-hidden="true" href="#macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MacOS&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-bazelisk" class="anchor" aria-hidden="true" href="#bazelisk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;bazelisk&lt;/h4&gt;
&lt;p&gt;Bazelisk is a Mac-friendly launcher for Bazel. To install, follow these steps:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;brew tap bazelbuild/tap &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; \
brew uninstall bazel&lt;span class="pl-k"&gt;;&lt;/span&gt; \
brew install bazelbuild/tap/bazelisk&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-xcode" class="anchor" aria-hidden="true" href="#xcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Xcode&lt;/h4&gt;
&lt;p&gt;If you're getting errors that mention Xcode, you'll need to install the command-line tools.&lt;/p&gt;
&lt;p&gt;Bazel for Mac requires some additional steps to configure properly. First things first: use
the Bazelisk project (courtesy of philwo), a pure golang implementation of Bazel. In order to
install Bazelisk, first verify that your Xcode will cooperate: execute the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;xcode-select -p&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If the value is &lt;code&gt;/Applications/Xcode.app/Contents/Developer/&lt;/code&gt;, you can proceed with bazelisk
installation. If, however, the return value is &lt;code&gt;/Library/Developer/CommandLineTools/&lt;/code&gt;, you'll
need to redirect the Xcode system to the correct value.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo xcode-select -s /Applications/Xcode.app/Contents/Developer/
sudo xcodebuild -license
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first command will prompt you for a password. The second step requires you to read a new Xcode
license, and then accept it by typing "agree".&lt;/p&gt;
&lt;p&gt;(Thanks to &lt;a href="https://github.com/bazelbuild/bazel/issues/4314"&gt;this thread&lt;/a&gt; for these steps)&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>SeleniumHQ</author><guid isPermaLink="false">https://github.com/SeleniumHQ/selenium</guid><pubDate>Thu, 06 Feb 2020 00:17:00 GMT</pubDate></item><item><title>bazelbuild/bazel #18 in Java, This week</title><link>https://github.com/bazelbuild/bazel</link><description>&lt;p&gt;&lt;i&gt;a fast, scalable, multi-language and extensible build system&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-bazel" class="anchor" aria-hidden="true" href="#bazel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://bazel.build" rel="nofollow"&gt;Bazel&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;{Fast, Correct} - Choose two&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Build and test software of any size, quickly and reliably.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Speed up your builds and tests&lt;/strong&gt;:
Bazel rebuilds only what is necessary.
With advanced local and distributed caching, optimized dependency analysis and
parallel execution, you get fast and incremental builds.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;One tool, multiple languages&lt;/strong&gt;: Build and test Java, C++, Android, iOS, Go,
and a wide variety of other language platforms. Bazel runs on Windows, macOS,
and Linux.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Scalable&lt;/strong&gt;: Bazel helps you scale your organization, codebase, and
continuous integration solution. It handles codebases of any size, in multiple
repositories or a huge monorepo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Extensible to your needs&lt;/strong&gt;: Easily add support for new languages and
platforms with Bazel's familiar extension language. Share and re-use language
rules written by the growing Bazel community.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://docs.bazel.build/install.html" rel="nofollow"&gt;Install Bazel&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://docs.bazel.build/getting-started.html" rel="nofollow"&gt;Get started with Bazel&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Follow our tutorials:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.bazel.build/tutorial/cpp.html" rel="nofollow"&gt;Build C++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.bazel.build/tutorial/java.html" rel="nofollow"&gt;Build Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.bazel.build/tutorial/android-app.html" rel="nofollow"&gt;Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.bazel.build/tutorial/ios-app.html" rel="nofollow"&gt;iOS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.bazel.build/user-manual.html" rel="nofollow"&gt;Bazel command line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.bazel.build/be/overview.html" rel="nofollow"&gt;Rule reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.bazel.build/query.html" rel="nofollow"&gt;Use the query command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.bazel.build/skylark/concepts.html" rel="nofollow"&gt;Extend Bazel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.bazel.build/test-encyclopedia.html" rel="nofollow"&gt;Write tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bazel.build/roadmap.html" rel="nofollow"&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bazelbuild/bazel/wiki/Bazel-Users"&gt;Who is using Bazel?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-to-bazel" class="anchor" aria-hidden="true" href="#contributing-to-bazel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing to Bazel&lt;/h2&gt;
&lt;p&gt;See &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ci.bazel.build" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a9be44a46855903b2fd9dd20b0b6747795d22312/68747470733a2f2f62616467652e6275696c646b6974652e636f6d2f31666432383266386164393863336662313037353861383231653533313335373633353637303964643764313165393631382e7376673f7374617475733d6d6173746572" alt="Build status" data-canonical-src="https://badge.buildkite.com/1fd282f8ad98c3fb10758a821e5313576356709dd7d11e9618.svg?status=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>bazelbuild</author><guid isPermaLink="false">https://github.com/bazelbuild/bazel</guid><pubDate>Thu, 06 Feb 2020 00:18:00 GMT</pubDate></item><item><title>arduino/Arduino #19 in Java, This week</title><link>https://github.com/arduino/Arduino</link><description>&lt;p&gt;&lt;i&gt;open-source electronics prototyping platform&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
	&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a5c6015567380739a8dcb764b19beb1df5541428/687474703a2f2f636f6e74656e742e61726475696e6f2e63632f6272616e642f61726475696e6f2d636f6c6f722e737667"&gt;&lt;img src="https://camo.githubusercontent.com/a5c6015567380739a8dcb764b19beb1df5541428/687474703a2f2f636f6e74656e742e61726475696e6f2e63632f6272616e642f61726475696e6f2d636f6c6f722e737667" width="50%" data-canonical-src="http://content.arduino.cc/brand/arduino-color.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Arduino is an open-source physical computing platform based on a simple I/O
board and a development environment that implements the Processing/Wiring
language. Arduino can be used to develop stand-alone interactive objects or
can be connected to software on your computer (e.g. Flash, Processing and MaxMSP).
The boards can be assembled by hand or purchased preassembled; the open-source
IDE can be downloaded for free at &lt;a href="https://www.arduino.cc/en/Main/Software" rel="nofollow"&gt;https://arduino.cc&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-more-info-at" class="anchor" aria-hidden="true" href="#more-info-at"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More info at&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.arduino.cc/" rel="nofollow"&gt;Our website&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://forum.arduino.cc/" rel="nofollow"&gt;The forums&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Follow us on &lt;a href="https://twitter.com/arduino" rel="nofollow"&gt;Twitter&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;And like us at &lt;a href="https://www.facebook.com/official.arduino" rel="nofollow"&gt;Facebook&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-bug-reports-and-technical-discussions" class="anchor" aria-hidden="true" href="#bug-reports-and-technical-discussions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bug reports and technical discussions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To report a &lt;em&gt;bug&lt;/em&gt; in the software or to request &lt;em&gt;a simple enhancement&lt;/em&gt; go to &lt;a href="https://github.com/arduino/Arduino/issues"&gt;Github Issues&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;More complex requests and technical discussion should go on the &lt;a href="https://groups.google.com/a/arduino.cc/forum/#!forum/developers" rel="nofollow"&gt;Arduino Developers
mailing list&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you're interested in modifying or extending the Arduino software, we strongly
suggest discussing your ideas on the
&lt;a href="https://groups.google.com/a/arduino.cc/forum/#!forum/developers" rel="nofollow"&gt;Developers mailing list&lt;/a&gt;
&lt;em&gt;before&lt;/em&gt; starting to work on them.
That way you can coordinate with the Arduino Team and others,
giving your work a higher chance of being integrated into the official release&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Detailed instructions for installation in popular operating systems can be found at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.arduino.cc/en/Guide/Linux" rel="nofollow"&gt;Linux&lt;/a&gt; (see also the &lt;a href="https://playground.arduino.cc/Learning/Linux" rel="nofollow"&gt;Arduino playground&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.arduino.cc/en/Guide/MacOSX" rel="nofollow"&gt;macOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.arduino.cc/en/Guide/Windows" rel="nofollow"&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;Arduino is an open source project, supported by many.&lt;/p&gt;
&lt;p&gt;The Arduino team is composed of Massimo Banzi, David Cuartielles, Tom Igoe
and David A. Mellis.&lt;/p&gt;
&lt;p&gt;Arduino uses
&lt;a href="https://gcc.gnu.org/wiki/avr-gcc" rel="nofollow"&gt;GNU avr-gcc toolchain&lt;/a&gt;,
&lt;a href="https://launchpad.net/gcc-arm-embedded" rel="nofollow"&gt;GCC ARM Embedded toolchain&lt;/a&gt;,
&lt;a href="https://www.nongnu.org/avr-libc/" rel="nofollow"&gt;avr-libc&lt;/a&gt;,
&lt;a href="https://www.nongnu.org/avrdude/" rel="nofollow"&gt;avrdude&lt;/a&gt;,
&lt;a href="http://www.shumatech.com/web/products/bossa" rel="nofollow"&gt;bossac&lt;/a&gt;,
&lt;a href="http://openocd.org/" rel="nofollow"&gt;openOCD&lt;/a&gt;
and code from &lt;a href="https://www.processing.org" rel="nofollow"&gt;Processing&lt;/a&gt;
and &lt;a href="http://wiring.org.co" rel="nofollow"&gt;Wiring&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Icon and about image designed by &lt;a href="https://www.todo.to.it/" rel="nofollow"&gt;ToDo&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>arduino</author><guid isPermaLink="false">https://github.com/arduino/Arduino</guid><pubDate>Thu, 06 Feb 2020 00:19:00 GMT</pubDate></item><item><title>moezbhatti/qksms #20 in Java, This week</title><link>https://github.com/moezbhatti/qksms</link><description>&lt;p&gt;&lt;i&gt;The most beautiful SMS messenger for Android&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/4358785/39079306-a5a409b6-44e5-11e8-8589-b4acd63b636e.jpg"&gt;&lt;img src="https://user-images.githubusercontent.com/4358785/39079306-a5a409b6-44e5-11e8-8589-b4acd63b636e.jpg" alt="QKSMS" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-qksms" class="anchor" aria-hidden="true" href="#qksms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;QKSMS&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/moezbhatti/qksms/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/87335992e4b645440d389f5d154ecab8edf18ccf/68747470733a2f2f636972636c6563692e636f6d2f67682f6d6f657a6268617474692f716b736d732f747265652f6d61737465722e7376673f7374796c653d737667" alt="Build Status" data-canonical-src="https://circleci.com/gh/moezbhatti/qksms/tree/master.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://liberapay.com/moezbhatti/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ae5545b8603c96fb9161652135243da93596209a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f6e6174652d6c69626572617061792d79656c6c6f772e737667" alt="Liberapay donation" data-canonical-src="https://img.shields.io/badge/donate-liberapay-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://qklabs.com/donate-btc/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6c4d040ee800961a3dcb250684d1175e77047be5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f6e6174652d626974636f696e2d79656c6c6f772e737667" alt="Bitcoin donation" data-canonical-src="https://img.shields.io/badge/donate-bitcoin-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://qklabs.com/donate" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/53ab76f59816884cc008b2947615c6dbaf990664/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f6e6174652d70617970616c2d79656c6c6f772e737667" alt="PayPal donation" data-canonical-src="https://img.shields.io/badge/donate-paypal-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;QKSMS is an open source replacement to the &lt;a href="https://github.com/android/platform_packages_apps_mms"&gt;stock messaging app&lt;/a&gt; on Android. It is currently available on the &lt;a href="https://play.google.com/store/apps/details?id=com.moez.QKSMS" rel="nofollow"&gt;Google Play Store&lt;/a&gt; and on &lt;a href="https://f-droid.org/repository/browse/?fdid=com.moez.QKSMS" rel="nofollow"&gt;F-Droid&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.moez.QKSMS" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/59c5c810fc8363f8488c3a36fc78f89990d13e99/68747470733a2f2f706c61792e676f6f676c652e636f6d2f696e746c2f656e5f75732f6261646765732f696d616765732f67656e657269632f656e5f62616467655f7765625f67656e657269632e706e67" alt="Download on Google Play" height="100" data-canonical-src="https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://f-droid.org/repository/browse/?fdid=com.moez.QKSMS" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f9574a79e3fe61202392c44e55f0bdab261a9561/68747470733a2f2f662d64726f69642e6f72672f62616467652f6765742d69742d6f6e2e706e67" alt="Get it on F-Droid" height="100" data-canonical-src="https://f-droid.org/badge/get-it-on.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reporting-bugs" class="anchor" aria-hidden="true" href="#reporting-bugs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting bugs&lt;/h2&gt;
&lt;p&gt;A great bug report contains a description of the problem and steps to reproduce the problem. We need to know what we're looking for and where to look for it.&lt;/p&gt;
&lt;p&gt;When reporting a bug, please make sure to provide the following information:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Steps to reproduce the issue&lt;/li&gt;
&lt;li&gt;QKSMS version&lt;/li&gt;
&lt;li&gt;Device / OS information&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-translations" class="anchor" aria-hidden="true" href="#translations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Translations&lt;/h2&gt;
&lt;p&gt;If you'd like to add translations to QKSMS, please join the project on &lt;a href="https://crowdin.com/project/qksms" rel="nofollow"&gt;Crowdin&lt;/a&gt;. Translations that are committed directly to source files will not be accepted.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-thank-you" class="anchor" aria-hidden="true" href="#thank-you"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thank you&lt;/h2&gt;
&lt;p&gt;A special thank you to Jake (&lt;a href="https://github.com/klinker41"&gt;@klinker41&lt;/a&gt;) and Luke Klinker (&lt;a href="https://github.com/klinker24"&gt;@klinker24&lt;/a&gt;) for their work on &lt;a href="https://github.com/klinker41/android-smsmms"&gt;android-smsmms&lt;/a&gt;, which has been an unspeakably large help in implementing MMS into QKSMS.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h2&gt;
&lt;p&gt;QKSMS is developed and maintained by &lt;a href="https://github.com/moezbhatti"&gt;Moez Bhatti&lt;/a&gt;. Feel free to reach out to &lt;a href="mailto:moez@qklabs.com"&gt;moez@qklabs.com&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;QKSMS is released under the &lt;strong&gt;The GNU General Public License v3.0 (GPLv3)&lt;/strong&gt;, which can be found in the &lt;code&gt;LICENSE&lt;/code&gt; file in the root of this project.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>moezbhatti</author><guid isPermaLink="false">https://github.com/moezbhatti/qksms</guid><pubDate>Thu, 06 Feb 2020 00:20:00 GMT</pubDate></item><item><title>airbnb/epoxy #21 in Java, This week</title><link>https://github.com/airbnb/epoxy</link><description>&lt;p&gt;&lt;i&gt;Epoxy is an Android library for building complex screens in a RecyclerView&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-epoxy" class="anchor" aria-hidden="true" href="#epoxy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Epoxy&lt;/h1&gt;
&lt;p&gt;Epoxy is an Android library for building complex screens in a RecyclerView. Models are automatically generated from custom views, databinding layouts, or &lt;a href="https://fblitho.com/" rel="nofollow"&gt;Litho&lt;/a&gt; components via annotation processing. These models are then used in an EpoxyController to declare what items to show in the RecyclerView.&lt;/p&gt;
&lt;p&gt;This abstracts the boilerplate of view holders, diffing items and binding payload changes, item types, item ids, span counts, and more, in order to simplify building screens with multiple view types. Additionally, Epoxy adds support for saving view state and automatic diffing of item changes.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/airbnb-engineering/epoxy-airbnbs-view-architecture-on-android-c3e1af150394#.xv4ymrtmk" rel="nofollow"&gt;We developed Epoxy at Airbnb&lt;/a&gt; to simplify the process of working with RecyclerViews, and to add the missing functionality we needed. We now use Epoxy for most of the main screens in our app and it has improved our developer experience greatly.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#basic-usage"&gt;Basic Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#min-sdk"&gt;Min SDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/epoxy/wiki/Sample-App"&gt;Sample App&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Gradle is the only supported build configuration, so just add the dependency to your project &lt;code&gt;build.gradle&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;dependencies {
  implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.airbnb.android:epoxy:3.x.y&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Add the annotation processor if you are using Epoxy's annotations (recommended)&lt;/span&gt;
  annotationProcessor &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.airbnb.android:epoxy-processor:3.x.y&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Replace &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; with the latest version number: &lt;a href="https://maven-badges.herokuapp.com/maven-central/com.airbnb.android/epoxy" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/02f2b3fac0fd26a4ca317b8878f7826c5dbed5d4/68747470733a2f2f6d6176656e2d6261646765732e6865726f6b756170702e636f6d2f6d6176656e2d63656e7472616c2f636f6d2e616972626e622e616e64726f69642f65706f78792f62616467652e737667" alt="Maven Central" data-canonical-src="https://maven-badges.herokuapp.com/maven-central/com.airbnb.android/epoxy/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;See the &lt;a href="https://github.com/airbnb/epoxy/releases"&gt;releases page&lt;/a&gt; for up to date release versions and details&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-kotlin" class="anchor" aria-hidden="true" href="#kotlin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Kotlin&lt;/h4&gt;
&lt;p&gt;If you are using Kotlin you should also add&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apply plugin: 'kotlin-kapt'

kapt {
    correctErrorTypes = true
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;so that &lt;code&gt;AutoModel&lt;/code&gt; annotations work properly. More information &lt;a href="https://github.com/airbnb/epoxy/wiki/Epoxy-Controller#usage-with-kotlin"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also, make sure to use &lt;code&gt;kapt&lt;/code&gt; instead of &lt;code&gt;annotationProcessor&lt;/code&gt; in your dependencies in the &lt;code&gt;build.gradle&lt;/code&gt; file.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-library-projects" class="anchor" aria-hidden="true" href="#library-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Library Projects&lt;/h2&gt;
&lt;p&gt;If you are using layout resources in Epoxy annotations then for library projects add &lt;a href="https://github.com/JakeWharton/butterknife#library-projects"&gt;Butterknife's gradle plugin&lt;/a&gt; to your &lt;code&gt;buildscript&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-s"&gt;buildscript {&lt;/span&gt;
  &lt;span class="pl-s"&gt;repositories {&lt;/span&gt;
    &lt;span class="pl-s"&gt;mavenCentral()&lt;/span&gt;
   &lt;span class="pl-s"&gt;}&lt;/span&gt;
  &lt;span class="pl-s"&gt;dependencies {&lt;/span&gt;
    &lt;span class="pl-s"&gt;classpath 'com.jakewharton:butterknife-gradle-plugin:10.1.0'&lt;/span&gt;
  &lt;span class="pl-s"&gt;}&lt;/span&gt;
&lt;span class="pl-s"&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and then apply it in your module:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;apply plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.android.library&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-ent"&gt;apply plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.jakewharton.butterknife&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now make sure you use R2 instead of R inside all Epoxy annotations.&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@ModelView&lt;/span&gt;(&lt;span class="pl-c1"&gt;defaultLayout&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;R2&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;layout&lt;span class="pl-k"&gt;.&lt;/span&gt;view_holder_header)
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;HeaderView&lt;/span&gt; &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;LinearLayout&lt;/span&gt; {
   &lt;span class="pl-c1"&gt;....&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is not necessary if you don't use resources as annotation parameters, such as with &lt;a href="https://github.com/airbnb/epoxy/wiki/Generating-Models-from-View-Annotations"&gt;custom view models&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic Usage&lt;/h2&gt;
&lt;p&gt;There are two main components of Epoxy:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The &lt;code&gt;EpoxyModel&lt;/code&gt;s that describe how your views should be displayed in the RecyclerView.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;EpoxyController&lt;/code&gt; where the models are used to describe what items to show and with what data.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-creating-models" class="anchor" aria-hidden="true" href="#creating-models"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating Models&lt;/h3&gt;
&lt;p&gt;Epoxy generates models for you based on your view or layout. Generated model classes are suffixed with an underscore (&lt;code&gt;_&lt;/code&gt;) are used directly in your EpoxyController classes.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-from-custom-views" class="anchor" aria-hidden="true" href="#from-custom-views"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;From Custom Views&lt;/h4&gt;
&lt;p&gt;Add the &lt;code&gt;@ModelView&lt;/code&gt; annotation on a view class. Then, add a "prop" annotation on each setter method to mark it as a property for the model.&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@ModelView&lt;/span&gt;(&lt;span class="pl-c1"&gt;autoLayout&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Size&lt;/span&gt;&lt;span class="pl-c1"&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;MATCH_WIDTH_WRAP_HEIGHT&lt;/span&gt;)
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;HeaderView&lt;/span&gt; &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;LinearLayout&lt;/span&gt; {

  &lt;span class="pl-c1"&gt;...&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Initialization omitted&lt;/span&gt;

  &lt;span class="pl-k"&gt;@TextProp&lt;/span&gt;
  &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;setTitle&lt;/span&gt;(&lt;span class="pl-smi"&gt;CharSequence&lt;/span&gt; &lt;span class="pl-v"&gt;text&lt;/span&gt;) {
    titleView&lt;span class="pl-k"&gt;.&lt;/span&gt;setText(text);
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A &lt;code&gt;HeaderViewModel_&lt;/code&gt; is then generated in the same package.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/airbnb/epoxy/wiki/Generating-Models-from-View-Annotations"&gt;More Details&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-from-databinding" class="anchor" aria-hidden="true" href="#from-databinding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;From DataBinding&lt;/h4&gt;
&lt;p&gt;If you use Android DataBinding you can simply set up your xml layouts like normal:&lt;/p&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;layout&lt;/span&gt; &lt;span class="pl-e"&gt;xmlns&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;android&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://schemas.android.com/apk/res/android&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;data&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class="pl-ent"&gt;variable&lt;/span&gt; &lt;span class="pl-e"&gt;name&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;type&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;String&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;data&lt;/span&gt;&amp;gt;

    &amp;lt;&lt;span class="pl-ent"&gt;TextView&lt;/span&gt;
        &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;layout_width&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;120dp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;layout_height&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;40dp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;text&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;@{title}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;layout&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, create a &lt;code&gt;package-info.java&lt;/code&gt; file in any package and add an &lt;code&gt;EpoxyDataBindingLayouts&lt;/code&gt; annotation to declare your databinding layouts.&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@EpoxyDataBindingLayouts&lt;/span&gt;({&lt;span class="pl-smi"&gt;R&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;layout&lt;span class="pl-k"&gt;.&lt;/span&gt;header_view, &lt;span class="pl-c1"&gt;...&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; other layouts })&lt;/span&gt;
package com&lt;span class="pl-k"&gt;.&lt;/span&gt;airbnb&lt;span class="pl-k"&gt;.&lt;/span&gt;epoxy&lt;span class="pl-k"&gt;.&lt;/span&gt;sample;

import &lt;span class="pl-smi"&gt;com.airbnb.epoxy&lt;span class="pl-k"&gt;.&lt;/span&gt;EpoxyDataBindingLayouts&lt;/span&gt;;
import &lt;span class="pl-smi"&gt;com.airbnb.epoxy&lt;span class="pl-k"&gt;.&lt;/span&gt;R&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From this layout name Epoxy generates a &lt;code&gt;HeaderViewBindingModel_&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/airbnb/epoxy/wiki/Data-Binding-Support"&gt;More Details&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-from-viewholders" class="anchor" aria-hidden="true" href="#from-viewholders"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;From ViewHolders&lt;/h4&gt;
&lt;p&gt;If you use xml layouts without databinding you can create a model class to do the  binding.&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@EpoxyModelClass&lt;/span&gt;(&lt;span class="pl-c1"&gt;layout&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;R&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;layout&lt;span class="pl-k"&gt;.&lt;/span&gt;header_view)
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;abstract&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;HeaderModel&lt;/span&gt; &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;EpoxyModelWithHolder&amp;lt;&lt;span class="pl-smi"&gt;Holder&lt;/span&gt;&amp;gt;&lt;/span&gt; {
  &lt;span class="pl-k"&gt;@EpoxyAttribute&lt;/span&gt; &lt;span class="pl-smi"&gt;String&lt;/span&gt; title;

  &lt;span class="pl-k"&gt;@Override&lt;/span&gt;
  &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;bind&lt;/span&gt;(&lt;span class="pl-smi"&gt;Holder&lt;/span&gt; &lt;span class="pl-v"&gt;holder&lt;/span&gt;) {
    holder&lt;span class="pl-k"&gt;.&lt;/span&gt;header&lt;span class="pl-k"&gt;.&lt;/span&gt;setText(title);
  }

  &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Holder&lt;/span&gt; &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;BaseEpoxyHolder&lt;/span&gt; {
    &lt;span class="pl-k"&gt;@BindView&lt;/span&gt;(&lt;span class="pl-smi"&gt;R&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;id&lt;span class="pl-k"&gt;.&lt;/span&gt;text) &lt;span class="pl-smi"&gt;TextView&lt;/span&gt; header;
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A &lt;code&gt;HeaderModel_&lt;/code&gt; class is generated that subclasses HeaderModel and implements the model details.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/airbnb/epoxy/wiki/ViewHolder-Models"&gt;More Details&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-your-models-in-a-controller" class="anchor" aria-hidden="true" href="#using-your-models-in-a-controller"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using your models in a controller&lt;/h3&gt;
&lt;p&gt;A controller defines what items should be shown in the RecyclerView, by adding the corresponding models in the desired order.&lt;/p&gt;
&lt;p&gt;The controller's &lt;code&gt;buildModels&lt;/code&gt; method declares which items to show. You are responsible for calling &lt;code&gt;requestModelBuild&lt;/code&gt; whenever your data changes, which triggers &lt;code&gt;buildModels&lt;/code&gt; to run again. Epoxy tracks changes in the models and automatically binds and updates views.&lt;/p&gt;
&lt;p&gt;As an example, our &lt;code&gt;PhotoController&lt;/code&gt; shows a header, a list of photos, and a loader (if more photos are being loaded). The controller's &lt;code&gt;setData(photos, loadingMore)&lt;/code&gt; method is called whenever photos are loaded, which triggers a call to &lt;code&gt;buildModels&lt;/code&gt; so models representing the state of the new data can be built.&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PhotoController&lt;/span&gt; &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-e"&gt;Typed2EpoxyController&amp;lt;&lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;Photo&lt;/span&gt;&amp;gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;Boolean&lt;/span&gt;&amp;gt;&lt;/span&gt; {
    &lt;span class="pl-k"&gt;@AutoModel&lt;/span&gt; &lt;span class="pl-smi"&gt;HeaderModel_&lt;/span&gt; headerModel;
    &lt;span class="pl-k"&gt;@AutoModel&lt;/span&gt; &lt;span class="pl-smi"&gt;LoaderModel_&lt;/span&gt; loaderModel;

    &lt;span class="pl-k"&gt;@Override&lt;/span&gt;
    &lt;span class="pl-k"&gt;protected&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;buildModels&lt;/span&gt;(&lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;Photo&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-v"&gt;photos&lt;/span&gt;, &lt;span class="pl-smi"&gt;Boolean&lt;/span&gt; &lt;span class="pl-v"&gt;loadingMore&lt;/span&gt;) {
      headerModel
          .title(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My Photos&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
          .description(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My album description!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
          .addTo(&lt;span class="pl-c1"&gt;this&lt;/span&gt;);

      &lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-smi"&gt;Photo&lt;/span&gt; photo &lt;span class="pl-k"&gt;:&lt;/span&gt; photos) {
        &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;PhotoModel&lt;/span&gt;()
           .id(photo&lt;span class="pl-k"&gt;.&lt;/span&gt;id())
           .url(photo&lt;span class="pl-k"&gt;.&lt;/span&gt;url())
           .addTo(&lt;span class="pl-c1"&gt;this&lt;/span&gt;);
      }

      loaderModel
          .addIf(loadingMore, &lt;span class="pl-c1"&gt;this&lt;/span&gt;);
    }
  }&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-or-with-kotlin" class="anchor" aria-hidden="true" href="#or-with-kotlin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Or with Kotlin&lt;/h4&gt;
&lt;p&gt;An extension function is generated for each model so we can write this:&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PhotoController&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-e"&gt;Typed2EpoxyController&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Photo&lt;/span&gt;&amp;gt;, &lt;span class="pl-c1"&gt;Boolean&lt;/span&gt;&amp;gt;() {

    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;fun&lt;/span&gt; &lt;span class="pl-en"&gt;buildModels&lt;/span&gt;(&lt;span class="pl-smi"&gt;photos&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;List&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;Photo&lt;/span&gt;&amp;gt;, &lt;span class="pl-smi"&gt;loadingMore&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Boolean&lt;/span&gt;) {
        header {
            id(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            title(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My Photos&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            description(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My album description!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }

        photos.forEach {
            photoView {
                id(it.id())
                url(it.url())
            }
        }

        &lt;span class="pl-k"&gt;if&lt;/span&gt; (loadingMore) loaderView { id(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;loader&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-integrating-with-recyclerview" class="anchor" aria-hidden="true" href="#integrating-with-recyclerview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integrating with RecyclerView&lt;/h3&gt;
&lt;p&gt;Get the backing adapter off the EpoxyController to set up your RecyclerView:&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;MyController&lt;/span&gt; controller &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;MyController&lt;/span&gt;();
recyclerView&lt;span class="pl-k"&gt;.&lt;/span&gt;setAdapter(controller&lt;span class="pl-k"&gt;.&lt;/span&gt;getAdapter());

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Request a model build whenever your data changes&lt;/span&gt;
controller&lt;span class="pl-k"&gt;.&lt;/span&gt;requestModelBuild();

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Or if you are using a TypedEpoxyController&lt;/span&gt;
controller&lt;span class="pl-k"&gt;.&lt;/span&gt;setData(myData);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you are using the &lt;a href="https://github.com/airbnb/epoxy/wiki/EpoxyRecyclerView"&gt;EpoxyRecyclerView&lt;/a&gt; integration is easier.&lt;/p&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;epoxyRecyclerView&lt;span class="pl-k"&gt;.&lt;/span&gt;setControllerAndBuildModels(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;MyController&lt;/span&gt;());

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Request a model build on the recyclerview when data changes&lt;/span&gt;
epoxyRecyclerView&lt;span class="pl-k"&gt;.&lt;/span&gt;requestModelBuild();&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-kotlin-1" class="anchor" aria-hidden="true" href="#kotlin-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Kotlin&lt;/h4&gt;
&lt;p&gt;Or use &lt;a href="https://github.com/airbnb/epoxy/wiki/EpoxyRecyclerView#kotlin-extensions"&gt;Kotlin Extensions&lt;/a&gt; to simplify further and remove the need for a controller class.&lt;/p&gt;
&lt;div class="highlight highlight-source-kotlin"&gt;&lt;pre&gt;epoxyRecyclerView.withModels {
        header {
            id(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            title(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My Photos&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            description(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My album description!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }

        photos.forEach {
            photoView {
                id(it.id())
                url(it.url())
            }
        }

        &lt;span class="pl-k"&gt;if&lt;/span&gt; (loadingMore) loaderView { id(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;loader&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-more-reading" class="anchor" aria-hidden="true" href="#more-reading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More Reading&lt;/h3&gt;
&lt;p&gt;And that's it! The controller's declarative style makes it very easy to visualize what the RecyclerView will look like, even when many different view types or items are used. Epoxy handles everything else. If a view only partially changes, such as the description, only that new value is set on the view, so the system is very efficient&lt;/p&gt;
&lt;p&gt;Epoxy handles much more than these basics, and is highly configurable. See &lt;a href="https://github.com/airbnb/epoxy/wiki"&gt;the wiki&lt;/a&gt; for in depth documentation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;See examples and browse complete documentation at the &lt;a href="https://github.com/airbnb/epoxy/wiki"&gt;Epoxy Wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you still have questions, feel free to create a new issue.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-min-sdk" class="anchor" aria-hidden="true" href="#min-sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Min SDK&lt;/h2&gt;
&lt;p&gt;We support a minimum SDK of 14. However, Epoxy is based on the v7 support libraries so it should work with lower versions if you care to override the min sdk level in the manifest.&lt;/p&gt;
&lt;p&gt;If you are using the &lt;a href="https://github.com/airbnb/epoxy/wiki/Litho-Support"&gt;optional Litho integration&lt;/a&gt; then the min SDK is 15  due to Litho's SDK requirement.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Pull requests are welcome! We'd love help improving this library. Feel free to browse through open issues to look for things that need work. If you have a feature request or bug, please open a new issue so we can track it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Copyright 2016 Airbnb, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>airbnb</author><guid isPermaLink="false">https://github.com/airbnb/epoxy</guid><pubDate>Thu, 06 Feb 2020 00:21:00 GMT</pubDate></item><item><title>GoogleCloudPlatform/DataflowTemplates #22 in Java, This week</title><link>https://github.com/GoogleCloudPlatform/DataflowTemplates</link><description>&lt;p&gt;&lt;i&gt;Google-provided Cloud Dataflow template pipelines for solving simple in-Cloud data tasks&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-google-cloud-dataflow-template-pipelines" class="anchor" aria-hidden="true" href="#google-cloud-dataflow-template-pipelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Google Cloud Dataflow Template Pipelines&lt;/h1&gt;
&lt;p&gt;These Dataflow templates are an effort to solve simple, but large, in-Cloud data
tasks, including data import/export/backup/restore and bulk API operations,
without a development environment. The technology under the hood which makes
these operations possible is the
&lt;a href="https://cloud.google.com/dataflow/" rel="nofollow"&gt;Google Cloud Dataflow&lt;/a&gt; service combined
with a set of &lt;a href="https://beam.apache.org/" rel="nofollow"&gt;Apache Beam&lt;/a&gt; SDK templated pipelines.&lt;/p&gt;
&lt;p&gt;Google is providing this collection of pre-implemented Dataflow templates as a
reference and to provide easy customization for developers wanting to extend
their functionality.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://console.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2FGoogleCloudPlatform%2FDataflowTemplates.git" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/acf32864fdae185325f992b48fb2132badef1e9a/687474703a2f2f677374617469632e636f6d2f636c6f75647373682f696d616765732f6f70656e2d62746e2e737667" alt="Open in Cloud Shell" data-canonical-src="http://gstatic.com/cloudssh/images/open-btn.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-template-pipelines" class="anchor" aria-hidden="true" href="#template-pipelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Template Pipelines&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/templates/BigQueryToDatastore.java"&gt;BigQuery to Datastore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/templates/BigQueryToTFRecord.java"&gt;BigQuery to TFRecords&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/bigtable/BigtableToAvro.java"&gt;Bigtable to GCS Avro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/templates/BulkCompressor.java"&gt;Bulk Compressor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/templates/BulkDecompressor.java"&gt;Bulk Decompressor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/templates/DatastoreToDatastoreDelete.java"&gt;Datastore Bulk Delete&lt;/a&gt; *&lt;/li&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/templates/DatastoreToBigQuery.java"&gt;Datastore to BigQuery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/templates/DatastoreToText.java"&gt;Datastore to GCS Text&lt;/a&gt; *&lt;/li&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/templates/DatastoreToPubsub.java"&gt;Datastore to Pub/Sub&lt;/a&gt; *&lt;/li&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/templates/DatastoreSchemasCountToText.java"&gt;Datastore Unique Schema Count&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/bigtable/AvroToBigtable.java"&gt;GCS Avro to Bigtable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/spanner/ImportPipeline.java"&gt;GCS Avro to Spanner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/spanner/TextImportPipeline.java"&gt;GCS Text to Spanner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/templates/TextIOToBigQuery.java"&gt;GCS Text to BigQuery&lt;/a&gt; *&lt;/li&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/templates/TextToDatastore.java"&gt;GCS Text to Datastore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/templates/TextToPubsub.java"&gt;GCS Text to Pub/Sub (Batch)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/templates/TextToPubsubStream.java"&gt;GCS Text to Pub/Sub (Streaming)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/templates/JdbcToBigQuery.java"&gt;Jdbc to BigQuery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/templates/PubSubToBigQuery.java"&gt;Pub/Sub to BigQuery&lt;/a&gt; *&lt;/li&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/templates/PubsubToDatastore.java"&gt;Pub/Sub to Datastore&lt;/a&gt; *&lt;/li&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/templates/PubsubToAvro.java"&gt;Pub/Sub to GCS Avro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/templates/PubsubToText.java"&gt;Pub/Sub to GCS Text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/templates/PubsubToPubsub.java"&gt;Pub/Sub to Pub/Sub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/templates/PubSubToSplunk.java"&gt;Pub/Sub to Splunk&lt;/a&gt; *&lt;/li&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/spanner/ExportPipeline.java"&gt;Spanner to GCS Avro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/templates/SpannerToText.java"&gt;Spanner to GCS Text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/main/java/com/google/cloud/teleport/templates/WordCount.java"&gt;Word Count&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;* Supports user-defined functions (UDFs).&lt;/p&gt;
&lt;p&gt;For documentation on each template's usage and parameters, please see
the official &lt;a href="https://cloud.google.com/dataflow/docs/templates/provided-templates" rel="nofollow"&gt;docs&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Java 8&lt;/li&gt;
&lt;li&gt;Maven 3&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-building-the-project" class="anchor" aria-hidden="true" href="#building-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the Project&lt;/h3&gt;
&lt;p&gt;Build the entire project using the maven compile command.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mvn clean compile&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-creating-a-template-file" class="anchor" aria-hidden="true" href="#creating-a-template-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating a Template File&lt;/h3&gt;
&lt;p&gt;Dataflow templates can be &lt;a href="https://cloud.google.com/dataflow/docs/templates/creating-templates#creating-and-staging-templates" rel="nofollow"&gt;created&lt;/a&gt;
using a maven command which builds the project and stages the template
file on Google Cloud Storage. Any parameters passed at template build
time will not be able to be overwritten at execution time.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mvn compile exec:java \
-Dexec.mainClass=com.google.cloud.teleport.templates.&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;template-class&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; \
-Dexec.cleanupDaemonThreads=false \
-Dexec.args=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-cce"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;--project=&amp;lt;project-id&amp;gt; &lt;span class="pl-cce"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;--stagingLocation=gs://&amp;lt;bucket-name&amp;gt;/staging &lt;span class="pl-cce"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;--tempLocation=gs://&amp;lt;bucket-name&amp;gt;/temp &lt;span class="pl-cce"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;--templateLocation=gs://&amp;lt;bucket-name&amp;gt;/templates/&amp;lt;template-name&amp;gt;.json &lt;span class="pl-cce"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;--runner=DataflowRunner&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-executing-a-template-file" class="anchor" aria-hidden="true" href="#executing-a-template-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Executing a Template File&lt;/h3&gt;
&lt;p&gt;Once the template is staged on Google Cloud Storage, it can then be
executed using the
&lt;a href="https://cloud.google.com/sdk/gcloud/reference/dataflow/jobs/run" rel="nofollow"&gt;gcloud CLI&lt;/a&gt;
tool. The runtime parameters required by the template can be passed in the
parameters field via comma-separated list of &lt;code&gt;paramName=Value&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;gcloud dataflow &lt;span class="pl-c1"&gt;jobs&lt;/span&gt; run &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;job-name&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; \
--gcs-location=&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;template-location&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; \
--zone=&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;zone&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; \
--parameters &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;parameters&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-using-udfs" class="anchor" aria-hidden="true" href="#using-udfs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using UDFs&lt;/h2&gt;
&lt;p&gt;User-defined functions (UDFs) allow you to customize a template's
functionality by providing a short JavaScript function without having to
maintain the entire codebase. This is useful in situations which you'd
like to rename fields, filter values, or even transform data formats
before output to the destination. All UDFs are executed by providing the
payload of the element as a string to the JavaScript function. You can
then use JavaScript's in-built JSON parser or other system functions to
transform the data prior to the pipeline's output. The return statement
of a UDF specifies the payload to pass forward in the pipeline. This
should always return a string value. If no value is returned or the
function returns undefined, the incoming record will be filtered from
the output.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-udf-function-specification" class="anchor" aria-hidden="true" href="#udf-function-specification"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UDF Function Specification&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Template&lt;/th&gt;
&lt;th&gt;UDF Input Type&lt;/th&gt;
&lt;th&gt;Input Description&lt;/th&gt;
&lt;th&gt;UDF Output Type&lt;/th&gt;
&lt;th&gt;Output Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Datastore Bulk Delete&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;A JSON string of the entity&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;A JSON string of the entity to delete; filter entities by returning undefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Datastore to Pub/Sub&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;A JSON string of the entity&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;The payload to publish to Pub/Sub&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Datastore to GCS Text&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;A JSON string of the entity&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;A single-line within the output file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GCS Text to BigQuery&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;A single-line within the input file&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;A JSON string which matches the destination table's schema&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Pub/Sub to BigQuery&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;A string representation of the incoming payload&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;A JSON string which matches the destination table's schema&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Pub/Sub to Datastore&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;A string representation of the incoming payload&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;A JSON string of the entity to write to Datastore&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Pub/Sub to Splunk&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;A string representation of the incoming payload&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;The event data to be sent to Splunk HEC events endpoint. Must be a string or a stringified JSON object&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-udf-examples" class="anchor" aria-hidden="true" href="#udf-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UDF Examples&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-adding-fields" class="anchor" aria-hidden="true" href="#adding-fields"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding fields&lt;/h4&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * A transform which adds a field to the incoming data.&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; &lt;span class="pl-en"&gt;{string}&lt;/span&gt; &lt;span class="pl-smi"&gt;inJson&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@return&lt;/span&gt; &lt;span class="pl-en"&gt;{string}&lt;/span&gt; outJson&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;transform&lt;/span&gt;(&lt;span class="pl-smi"&gt;inJson&lt;/span&gt;) {
  &lt;span class="pl-k"&gt;var&lt;/span&gt; obj &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;JSON&lt;/span&gt;.&lt;span class="pl-c1"&gt;parse&lt;/span&gt;(inJson);
  &lt;span class="pl-smi"&gt;obj&lt;/span&gt;.&lt;span class="pl-smi"&gt;dataFeed&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Real-time Transactions&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
  &lt;span class="pl-smi"&gt;obj&lt;/span&gt;.&lt;span class="pl-smi"&gt;dataSource&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;POS&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;JSON&lt;/span&gt;.&lt;span class="pl-c1"&gt;stringify&lt;/span&gt;(obj);
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-filtering-records" class="anchor" aria-hidden="true" href="#filtering-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Filtering records&lt;/h4&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * A transform function which only accepts 42 as the answer to life.&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; &lt;span class="pl-en"&gt;{string}&lt;/span&gt; &lt;span class="pl-smi"&gt;inJson&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@return&lt;/span&gt; &lt;span class="pl-en"&gt;{string}&lt;/span&gt; outJson&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;transform&lt;/span&gt;(&lt;span class="pl-smi"&gt;inJson&lt;/span&gt;) {
  &lt;span class="pl-k"&gt;var&lt;/span&gt; obj &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;JSON&lt;/span&gt;.&lt;span class="pl-c1"&gt;parse&lt;/span&gt;(inJson);
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; only output objects which have an answer to life of 42.&lt;/span&gt;
  &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;obj&lt;/span&gt;.&lt;span class="pl-en"&gt;hasOwnProperty&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;answerToLife&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-smi"&gt;obj&lt;/span&gt;.&lt;span class="pl-smi"&gt;answerToLife&lt;/span&gt; &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;42&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;JSON&lt;/span&gt;.&lt;span class="pl-c1"&gt;stringify&lt;/span&gt;(obj);
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>GoogleCloudPlatform</author><guid isPermaLink="false">https://github.com/GoogleCloudPlatform/DataflowTemplates</guid><pubDate>Thu, 06 Feb 2020 00:22:00 GMT</pubDate></item><item><title>material-components/material-components-android #23 in Java, This week</title><link>https://github.com/material-components/material-components-android</link><description>&lt;p&gt;&lt;i&gt;Modular and customizable Material Design UI components for Android&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/material-components/material-components-android/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c5b727c476a11155b7c5c9480f0bf7924dc44d8e/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6d6174657269616c2d636f6d706f6e656e74732f6d6174657269616c2d636f6d706f6e656e74732d616e64726f69642f6d61737465722e737667" alt="Build Status" data-canonical-src="https://img.shields.io/travis/material-components/material-components-android/master.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/material-components" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/921ef49ff05070b08734e95d4fe3c7e24b8210eb/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3235393038373334333234363530383033352e737667" alt="Chat" data-canonical-src="https://img.shields.io/discord/259087343246508035.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-material-components-for-android" class="anchor" aria-hidden="true" href="#material-components-for-android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Material Components for Android&lt;/h1&gt;
&lt;p&gt;Material Components for Android (MDC-Android) help developers execute
&lt;a href="https://www.material.io" rel="nofollow"&gt;Material Design&lt;/a&gt;. Developed by a core team of
engineers and UX designers at Google, these components enable a reliable
development workflow to build beautiful and functional Android apps.&lt;/p&gt;
&lt;p&gt;Material Components for Android is a drop-in replacement for Android's
Design Support Library.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;For information on how to get started with Material Components for Android,
take a look at our &lt;a href="docs/getting-started.md"&gt;Getting Started&lt;/a&gt; guide.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-submitting-bugs-or-feature-requests" class="anchor" aria-hidden="true" href="#submitting-bugs-or-feature-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Submitting Bugs or Feature Requests&lt;/h2&gt;
&lt;p&gt;For usage questions: ask on
&lt;a href="http://stackoverflow.com/questions/tagged/material-components" rel="nofollow"&gt;Stack  Overflow&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Bugs or feature requests should be submitted at our &lt;a href="https://github.com/material-components/material-components-android/issues"&gt;GitHub Issues section&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-useful-links" class="anchor" aria-hidden="true" href="#useful-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Useful Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/material-components/material-components-android/tree/master/lib/"&gt;All Components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/getting-started.md"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/contributing.md"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/building-from-source.md"&gt;Building From Source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/catalog-app.md"&gt;Catalog App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/reference/com/google/android/material/classes" rel="nofollow"&gt;Class
documentation&lt;/a&gt;
(external site)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.stackoverflow.com/questions/tagged/material-components+android" rel="nofollow"&gt;MDC-Android on Stack
Overflow&lt;/a&gt;
(external site)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/training/material/index.html" rel="nofollow"&gt;Android Developer’s
Guide&lt;/a&gt;
(external site)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.material.io" rel="nofollow"&gt;Material.io&lt;/a&gt; (external site)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://material.google.com" rel="nofollow"&gt;Material Design Guidelines&lt;/a&gt; (external site)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/directorystructure.md"&gt;Directory structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/components/"&gt;Components&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>material-components</author><guid isPermaLink="false">https://github.com/material-components/material-components-android</guid><pubDate>Thu, 06 Feb 2020 00:23:00 GMT</pubDate></item><item><title>aws/aws-sdk-java #24 in Java, This week</title><link>https://github.com/aws/aws-sdk-java</link><description>&lt;p&gt;&lt;i&gt;The official AWS SDK for Java.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-aws-sdk-for-java-" class="anchor" aria-hidden="true" href="#aws-sdk-for-java-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AWS SDK for Java &lt;a href="https://travis-ci.org/aws/aws-sdk-java" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9647bc0fc228e2dcc59523d874ff57eaee0ea10c/68747470733a2f2f7472617669732d63692e6f72672f6177732f6177732d73646b2d6a6176612e706e673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/aws/aws-sdk-java.png?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The &lt;strong&gt;AWS SDK for Java&lt;/strong&gt; enables Java developers to easily work with &lt;a href="http://aws.amazon.com/" rel="nofollow"&gt;Amazon Web Services&lt;/a&gt; and
build scalable solutions with Amazon S3, Amazon DynamoDB, Amazon Glacier, and more. You can get
started in minutes using &lt;em&gt;&lt;strong&gt;Maven&lt;/strong&gt;&lt;/em&gt; or by downloading a &lt;a href="http://sdk-for-java.amazonwebservices.com/latest/aws-java-sdk.zip" rel="nofollow"&gt;single zip file&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://aws.amazon.com/sdkforjava" rel="nofollow"&gt;SDK Homepage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/index.html" rel="nofollow"&gt;API Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.aws.amazon.com/java-sdk/latest/developer-guide/welcome.html" rel="nofollow"&gt;Developer Guide&lt;/a&gt; (&lt;a href="https://github.com/awsdocs/aws-java-developer-guide"&gt;source&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://developer.amazonwebservices.com/connect/forum.jspa?forumID=70" rel="nofollow"&gt;Forum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aws/aws-sdk-java/issues"&gt;Issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/blogs/developer/category/java/" rel="nofollow"&gt;SDK Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-help"&gt;Getting Help&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-release-notes" class="anchor" aria-hidden="true" href="#release-notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Release Notes&lt;/h2&gt;
&lt;p&gt;Beginning with 1.11.82 changes to the SDK are tracked in the &lt;a href="./CHANGELOG.md"&gt;CHANGELOG.md&lt;/a&gt; file.
Release notes for versions prior to 1.11.82 can still be found on the &lt;a href="https://aws.amazon.com/releasenotes/Java?browse=1" rel="nofollow"&gt;AWS Release Notes
Website&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-sign-up-for-aws" class="anchor" aria-hidden="true" href="#sign-up-for-aws"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sign up for AWS&lt;/h4&gt;
&lt;p&gt;Before you begin, you need an AWS account. Please see the &lt;a href="http://docs.aws.amazon.com/java-sdk/latest/developer-guide/signup-create-iam-user.html" rel="nofollow"&gt;Sign Up for AWS&lt;/a&gt; section of
the developer guide for information about how to create an AWS account and retrieve your AWS
credentials.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-minimum-requirements" class="anchor" aria-hidden="true" href="#minimum-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Minimum requirements&lt;/h4&gt;
&lt;p&gt;To run the SDK you will need &lt;strong&gt;Java 1.6+&lt;/strong&gt;. For more information about the requirements and optimum
settings for the SDK, please see the &lt;a href="http://docs.aws.amazon.com/java-sdk/latest/developer-guide/setup-install.html#installing-a-java-development-environment" rel="nofollow"&gt;Installing a Java Development Environment&lt;/a&gt;
section of the developer guide.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-install-the-sdk" class="anchor" aria-hidden="true" href="#install-the-sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install the SDK&lt;/h4&gt;
&lt;p&gt;The recommended way to use the AWS SDK for Java in your project is to consume it from Maven. Import
the &lt;a href="https://github.com/aws/aws-sdk-java/tree/master/aws-java-sdk-bom"&gt;aws-java-sdk-bom&lt;/a&gt; and specify the SDK Maven modules that your project needs in the
dependencies.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-importing-the-bom" class="anchor" aria-hidden="true" href="#importing-the-bom"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Importing the BOM&lt;/h5&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependencyManagement&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;dependencies&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;com.amazonaws&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;aws-java-sdk-bom&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;1.11.716&amp;lt;/&lt;span class="pl-ent"&gt;version&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span class="pl-ent"&gt;type&lt;/span&gt;&amp;gt;pom&amp;lt;/&lt;span class="pl-ent"&gt;type&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span class="pl-ent"&gt;scope&lt;/span&gt;&amp;gt;import&amp;lt;/&lt;span class="pl-ent"&gt;scope&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span class="pl-ent"&gt;dependencies&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependencyManagement&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-using-the-sdk-maven-modules" class="anchor" aria-hidden="true" href="#using-the-sdk-maven-modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using the SDK Maven modules&lt;/h5&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;dependencies&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;com.amazonaws&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;aws-java-sdk-ec2&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;com.amazonaws&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;aws-java-sdk-s3&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;com.amazonaws&amp;lt;/&lt;span class="pl-ent"&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;aws-java-sdk-dynamodb&amp;lt;/&lt;span class="pl-ent"&gt;artifactId&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span class="pl-ent"&gt;dependency&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the &lt;a href="http://docs.aws.amazon.com/java-sdk/latest/developer-guide/setup-install.html" rel="nofollow"&gt;Set up the AWS SDK for Java&lt;/a&gt; section of the developer guide for more
information about installing the SDK through other means.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Provides easy-to-use HTTP clients for all supported AWS services, regions, and authentication
protocols.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Client-Side Data Encryption for Amazon S3 - Helps improve the security of storing application data
in Amazon S3.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Amazon DynamoDB Object Mapper - Uses Plain Old Java Object (POJOs) to store and retrieve Amazon
DynamoDB data.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Amazon S3 Transfer Manager - With a simple API, achieve enhanced the throughput, performance, and
reliability by using multi-threaded Amazon S3 multipart calls.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Amazon SQS Client-Side Buffering - Collect and send SQS requests in asynchronous batches,
improving application and network performance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Automatically uses &lt;a href="http://docs.aws.amazon.com/java-sdk/latest/developer-guide/java-dg-roles.html" rel="nofollow"&gt;IAM Instance Profile Credentials&lt;/a&gt; on configured Amazon
EC2 instances.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;And more!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building-from-source" class="anchor" aria-hidden="true" href="#building-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building From Source&lt;/h2&gt;
&lt;p&gt;Once you check out the code from GitHub, you can build it using Maven. To disable the GPG-signing
in the build, use:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mvn clean install -Dgpg.skip=true&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help&lt;/h2&gt;
&lt;p&gt;Please use these community resources for getting help. We use GitHub &lt;a href="https://github.com/aws/aws-sdk-java/issues"&gt;issues&lt;/a&gt; for tracking bugs and feature requests and have limited bandwidth to address them.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ask a question on &lt;a href="http://stackoverflow.com/questions/tagged/aws-java-sdk" rel="nofollow"&gt;StackOverflow&lt;/a&gt; and tag it with &lt;code&gt;aws-java-sdk&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Come join the AWS Java community chat on &lt;a href="https://gitter.im/aws/aws-sdk-java" rel="nofollow"&gt;Gitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Articulate your feature request or upvote existing ones on our &lt;a href="https://github.com/aws/aws-sdk-java/issues?q=is%3Aopen+is%3Aissue+label%3A%22Feature+Request%22"&gt;Issues&lt;/a&gt; page&lt;/li&gt;
&lt;li&gt;Take a look at the &lt;a href="https://aws.amazon.com/blogs/developer/category/java/" rel="nofollow"&gt;blog&lt;/a&gt; for plenty of helpful walkthroughs and tips&lt;/li&gt;
&lt;li&gt;Open a case via the &lt;a href="https://console.aws.amazon.com/support/" rel="nofollow"&gt;AWS Support Center&lt;/a&gt; in the &lt;a href="https://console.aws.amazon.com" rel="nofollow"&gt;AWS console&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If it turns out that you may have found a bug, please open an &lt;a href="https://github.com/aws/aws-sdk-java/issues"&gt;issue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-supported-versions" class="anchor" aria-hidden="true" href="#supported-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Versions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;1.11.x&lt;/strong&gt; - Recommended.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;1.10.x&lt;/strong&gt; - Approved. Only major critical bugs will be fixed. To get the new features, upgrade to
1.11.x version of the SDK.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-security" class="anchor" aria-hidden="true" href="#security"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-jackson-vulnerabilities" class="anchor" aria-hidden="true" href="#jackson-vulnerabilities"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Jackson Vulnerabilities&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-cve-2017-15095--cve-2018-7489" class="anchor" aria-hidden="true" href="#cve-2017-15095--cve-2018-7489"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CVE 2017-15095 &amp;amp; CVE-2018-7489&lt;/h4&gt;
&lt;p&gt;The AWS SDK for Java is not directly affected by these findings. The SDKs own use of ObjectMapper does not use polymorphic deserialization so deserialization gadgets cannot be exploited. The SDK continues to depend on Jackson 2.6.x due to its compatbility with Java 6. Consumers of the SDK can override the version of Jackson in their own application to a newer version.&lt;/p&gt;
&lt;p&gt;A good explanation of this type of exploit can be found &lt;a href="https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>aws</author><guid isPermaLink="false">https://github.com/aws/aws-sdk-java</guid><pubDate>Thu, 06 Feb 2020 00:24:00 GMT</pubDate></item><item><title>prestosql/presto #25 in Java, This week</title><link>https://github.com/prestosql/presto</link><description>&lt;p&gt;&lt;i&gt;Official home of the community managed version of Presto, the distributed SQL query engine for big data, under the auspices of the Presto Software Foundation.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-presto" class="anchor" aria-hidden="true" href="#presto"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Presto&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/prestosql/presto/actions?query=workflow%3ACI+event%3Apush+branch%3Amaster"&gt;&lt;img src="https://github.com/prestosql/presto/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Presto is a distributed SQL query engine for big data.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="https://prestosql.io/docs/current/" rel="nofollow"&gt;User Manual&lt;/a&gt; for deployment instructions and end user documentation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Mac OS X or Linux&lt;/li&gt;
&lt;li&gt;Java 8 Update 161 or higher (8u161+), 64-bit. Both Oracle JDK and OpenJDK are supported.&lt;/li&gt;
&lt;li&gt;Python 2.6+ (for running with the launcher script)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building-presto" class="anchor" aria-hidden="true" href="#building-presto"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Presto&lt;/h2&gt;
&lt;p&gt;Presto is a standard Maven project. Simply run the following command from the project root directory:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./mvnw clean install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On the first build, Maven will download all the dependencies from the internet and cache them in the local repository (&lt;code&gt;~/.m2/repository&lt;/code&gt;), which can take a considerable amount of time. Subsequent builds will be faster.&lt;/p&gt;
&lt;p&gt;Presto has a comprehensive set of unit tests that can take several minutes to run. You can disable the tests when building:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./mvnw clean install -DskipTests
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-running-presto-in-your-ide" class="anchor" aria-hidden="true" href="#running-presto-in-your-ide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running Presto in your IDE&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h3&gt;
&lt;p&gt;After building Presto for the first time, you can load the project into your IDE and run the server. We recommend using &lt;a href="http://www.jetbrains.com/idea/" rel="nofollow"&gt;IntelliJ IDEA&lt;/a&gt;. Because Presto is a standard Maven project, you can import it into your IDE using the root &lt;code&gt;pom.xml&lt;/code&gt; file. In IntelliJ, choose Open Project from the Quick Start box or choose Open from the File menu and select the root &lt;code&gt;pom.xml&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;After opening the project in IntelliJ, double check that the Java SDK is properly configured for the project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open the File menu and select Project Structure&lt;/li&gt;
&lt;li&gt;In the SDKs section, ensure that a 1.8 JDK is selected (create one if none exist)&lt;/li&gt;
&lt;li&gt;In the Project section, ensure the Project language level is set to 8.0 as Presto makes use of several Java 8 language features&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Presto comes with sample configuration that should work out-of-the-box for development. Use the following options to create a run configuration:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Main Class: &lt;code&gt;io.prestosql.server.PrestoServer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;VM Options: &lt;code&gt;-ea -XX:+UseG1GC -XX:G1HeapRegionSize=32M -XX:+UseGCOverheadLimit -XX:+ExplicitGCInvokesConcurrent -Xmx2G -Dconfig=etc/config.properties -Dlog.levels-file=etc/log.properties -Djdk.attach.allowAttachSelf=true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Working directory: &lt;code&gt;$MODULE_DIR$&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use classpath of module: &lt;code&gt;presto-main&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The working directory should be the &lt;code&gt;presto-main&lt;/code&gt; subdirectory. In IntelliJ, using &lt;code&gt;$MODULE_DIR$&lt;/code&gt; accomplishes this automatically.&lt;/p&gt;
&lt;p&gt;Additionally, the Hive plugin must be configured with the location of your Hive metastore Thrift service. Add the following to the list of VM options, replacing &lt;code&gt;localhost:9083&lt;/code&gt; with the correct host and port (or use the below value if you do not have a Hive metastore):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-Dhive.metastore.uri=thrift://localhost:9083
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-using-socks-for-hive-or-hdfs" class="anchor" aria-hidden="true" href="#using-socks-for-hive-or-hdfs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using SOCKS for Hive or HDFS&lt;/h3&gt;
&lt;p&gt;If your Hive metastore or HDFS cluster is not directly accessible to your local machine, you can use SSH port forwarding to access it. Setup a dynamic SOCKS proxy with SSH listening on local port 1080:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssh -v -N -D 1080 server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then add the following to the list of VM options:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-Dhive.metastore.thrift.client.socks-proxy=localhost:1080
-Dhive.hdfs.socks-proxy=localhost:1080
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-running-the-cli" class="anchor" aria-hidden="true" href="#running-the-cli"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running the CLI&lt;/h3&gt;
&lt;p&gt;Start the CLI to connect to the server and run SQL queries:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;presto-cli/target/presto-cli-*-executable.jar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run a query to see the nodes in the cluster:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SELECT * FROM system.runtime.nodes;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the sample configuration, the Hive connector is mounted in the &lt;code&gt;hive&lt;/code&gt; catalog, so you can run the following queries to show the tables in the Hive database &lt;code&gt;default&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SHOW TABLES FROM hive.default;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-code-style" class="anchor" aria-hidden="true" href="#code-style"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Style&lt;/h3&gt;
&lt;p&gt;We recommend you use IntelliJ as your IDE. The code style template for the project can be found in the &lt;a href="https://github.com/airlift/codestyle"&gt;codestyle&lt;/a&gt; repository along with our general programming and Java guidelines. In addition to those you should also adhere to the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Alphabetize sections in the documentation source files (both in the table of contents files and other regular documentation files). In general, alphabetize methods/variables/sections if such ordering already exists in the surrounding code.&lt;/li&gt;
&lt;li&gt;When appropriate, use the Java 8 stream API. However, note that the stream implementation does not perform well so avoid using it in inner loops or otherwise performance sensitive sections.&lt;/li&gt;
&lt;li&gt;Categorize errors when throwing exceptions. For example, PrestoException takes an error code as an argument, &lt;code&gt;PrestoException(HIVE_TOO_MANY_OPEN_PARTITIONS)&lt;/code&gt;. This categorization lets you generate reports so you can monitor the frequency of various failures.&lt;/li&gt;
&lt;li&gt;Ensure that all files have the appropriate license header; you can generate the license by running &lt;code&gt;mvn license:format&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Consider using String formatting (printf style formatting using the Java &lt;code&gt;Formatter&lt;/code&gt; class): &lt;code&gt;format("Session property %s is invalid: %s", name, value)&lt;/code&gt; (note that &lt;code&gt;format()&lt;/code&gt; should always be statically imported). Sometimes, if you only need to append something, consider using the &lt;code&gt;+&lt;/code&gt; operator.&lt;/li&gt;
&lt;li&gt;Avoid using the ternary operator except for trivial expressions.&lt;/li&gt;
&lt;li&gt;Use an assertion from Airlift's &lt;code&gt;Assertions&lt;/code&gt; class if there is one that covers your case rather than writing the assertion by hand. Over time we may move over to more fluent assertions like AssertJ.&lt;/li&gt;
&lt;li&gt;When writing a Git commit message, follow these &lt;a href="https://chris.beams.io/posts/git-commit/" rel="nofollow"&gt;guidelines&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-additional-ide-configuration" class="anchor" aria-hidden="true" href="#additional-ide-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional IDE configuration&lt;/h3&gt;
&lt;p&gt;When using IntelliJ to develop Presto, we recommend starting with all of the default inspections,
with some modifications.&lt;/p&gt;
&lt;p&gt;Enable the following inspections:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Java | Internationalization | Implicit usage of platform's default charset&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Java | Class structure | Utility class is not 'final'&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Java | Class structure | Utility class with 'public' constructor&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Java | Class structure | Utility class without 'private' constructor&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Disable the following inspections:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Java | Abstraction issues | 'Optional' used as field or parameter type&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-building-the-web-ui" class="anchor" aria-hidden="true" href="#building-the-web-ui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the Web UI&lt;/h3&gt;
&lt;p&gt;The Presto Web UI is composed of several React components and is written in JSX and ES6. This source code is compiled and packaged into browser-compatible Javascript, which is then checked in to the Presto source code (in the &lt;code&gt;dist&lt;/code&gt; folder). You must have &lt;a href="https://nodejs.org/en/download/" rel="nofollow"&gt;Node.js&lt;/a&gt; and &lt;a href="https://yarnpkg.com/en/" rel="nofollow"&gt;Yarn&lt;/a&gt; installed to execute these commands. To update this folder after making changes, simply run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yarn --cwd presto-main/src/main/resources/webapp/src install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If no Javascript dependencies have changed (i.e., no changes to &lt;code&gt;package.json&lt;/code&gt;), it is faster to run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yarn --cwd presto-main/src/main/resources/webapp/src run package
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To simplify iteration, you can also run in &lt;code&gt;watch&lt;/code&gt; mode, which automatically re-compiles when changes to source files are detected:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yarn --cwd presto-main/src/main/resources/webapp/src run watch
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To iterate quickly, simply re-build the project in IntelliJ after packaging is complete. Project resources will be hot-reloaded and changes are reflected on browser refresh.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-writing-and-building-documentation" class="anchor" aria-hidden="true" href="#writing-and-building-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Writing and Building Documentation&lt;/h2&gt;
&lt;p&gt;More information about the documentation process can be found in the
&lt;a href="./presto-docs/README.md"&gt;README file in presto-docs&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>prestosql</author><guid isPermaLink="false">https://github.com/prestosql/presto</guid><pubDate>Thu, 06 Feb 2020 00:25:00 GMT</pubDate></item></channel></rss>