<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: TSQL, This week</title><link>https://github.com/trending/tsql?since=weekly</link><description>The top repositories on GitHub for tsql, measured weekly</description><pubDate>Tue, 10 Dec 2019 01:05:36 GMT</pubDate><lastBuildDate>Tue, 10 Dec 2019 01:05:36 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>BrentOzarULTD/SQL-Server-First-Responder-Kit #1 in TSQL, This week</title><link>https://github.com/BrentOzarULTD/SQL-Server-First-Responder-Kit</link><description>&lt;p&gt;&lt;i&gt;sp_Blitz, sp_BlitzCache, sp_BlitzFirst, sp_BlitzIndex, and other SQL Server scripts for health checks and performance tuning.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-sql-server-first-responder-kit" class="anchor" aria-hidden="true" href="#sql-server-first-responder-kit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL Server First Responder Kit&lt;/h1&gt;
&lt;p&gt;&lt;a name="user-content-header1"&gt;&lt;/a&gt;
&lt;a href="https://github.com/BrentOzarULTD/SQL-Server-First-Responder-Kit/blob/master/LICENSE.md"&gt;&lt;img src="https://camo.githubusercontent.com/890acbdcb87868b382af9a4b1fac507b9659d9bf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667" alt="licence badge" data-canonical-src="https://img.shields.io/badge/license-MIT-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/BrentOzarULTD/SQL-Server-First-Responder-Kit/stargazers"&gt;&lt;img src="https://camo.githubusercontent.com/48e714d6a304efa786cf7baba39dfd1a6f48d8b0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f4272656e744f7a6172554c54442f53514c2d5365727665722d46697273742d526573706f6e6465722d4b69742e737667" alt="stars badge" data-canonical-src="https://img.shields.io/github/stars/BrentOzarULTD/SQL-Server-First-Responder-Kit.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/BrentOzarULTD/SQL-Server-First-Responder-Kit/network"&gt;&lt;img src="https://camo.githubusercontent.com/0f6baf2b4e78d3b941025d29e8280c7e07090aaa/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f4272656e744f7a6172554c54442f53514c2d5365727665722d46697273742d526573706f6e6465722d4b69742e737667" alt="forks badge" data-canonical-src="https://img.shields.io/github/forks/BrentOzarULTD/SQL-Server-First-Responder-Kit.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/BrentOzarULTD/SQL-Server-First-Responder-Kit/issues"&gt;&lt;img src="https://camo.githubusercontent.com/421930857408b0140d5439cdbc023ecfa444f834/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f4272656e744f7a6172554c54442f53514c2d5365727665722d46697273742d526573706f6e6465722d4b69742e737667" alt="issues badge" data-canonical-src="https://img.shields.io/github/issues/BrentOzarULTD/SQL-Server-First-Responder-Kit.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Navigation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#how-to-get-support"&gt;How to Get Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Common Scripts:
&lt;ul&gt;
&lt;li&gt;&lt;a href="#sp_blitz-overall-health-check"&gt;sp_Blitz: Overall Health Check&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#advanced-sp_blitz-parameters"&gt;Advanced sp_Blitz Parameters&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#writing-sp_blitz-output-to-a-table"&gt;Writing sp_Blitz Output to a Table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#skipping-checks-or-databases"&gt;Skipping Checks or Databases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#sp_blitzcache-find-the-most-resource-intensive-queries"&gt;sp_BlitzCache: Find the Most Resource-Intensive Queries&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#advanced-sp_blitzcache-parameters"&gt;Advanced sp_BlitzCache Parameters&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#sp_blitzfirst-real-time-performance-advice"&gt;sp_BlitzFirst: Real-Time Performance Advice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sp_blitzindex-tune-your-indexes"&gt;sp_BlitzIndex: Tune Your Indexes&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#advanced-sp_blitzindex-parameters"&gt;Advanced sp_BlitzIndex Parameters&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Performance Tuning:
&lt;ul&gt;
&lt;li&gt;&lt;a href="#sp_blitzinmemoryoltp-hekaton-analysis"&gt;sp_BlitzInMemoryOLTP: Hekaton Analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sp_blitzlock-deadlock-analysis"&gt;sp_BlitzLock: Deadlock Analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sp_blitzquerystore-query-store-sale"&gt;sp_BlitzQueryStore: Like BlitzCache, for Query Store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sp_blitzwho-what-queries-are-running-now"&gt;sp_BlitzWho: What Queries are Running Now&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Backups and Restores:
&lt;ul&gt;
&lt;li&gt;&lt;a href="#sp_blitzbackups-how-much-data-could-you-lose"&gt;sp_BlitzBackups: How Much Data Could You Lose&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sp_allnightlog-back-up-faster-to-lose-less-data"&gt;sp_AllNightLog: Back Up Faster to Lose Less Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sp_databaserestore-easier-multi-file-restores"&gt;sp_DatabaseRestore: Easier Multi-File Restores&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#parameters-common-to-many-of-the-stored-procedures"&gt;Parameters Common to Many of the Stored Procedures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License MIT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You're a DBA, sysadmin, or developer who manages Microsoft SQL Servers. It's your fault if they're down or slow. These tools help you understand what's going on in your server.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When you want an overall health check, run &lt;a href="#sp_blitz-overall-health-check"&gt;sp_Blitz&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To learn which queries have been using the most resources, run &lt;a href="#sp_blitzcache-find-the-most-resource-intensive-queries"&gt;sp_BlitzCache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To analyze which indexes are missing or slowing you down, run &lt;a href="#sp_blitzindex-tune-your-indexes"&gt;sp_BlitzIndex&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To find out why the server is slow right now, run &lt;a href="#sp_blitzfirst-real-time-performance-advice"&gt;sp_BlitzFirst&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To install, &lt;a href="https://github.com/BrentOzarULTD/SQL-Server-First-Responder-Kit/releases"&gt;download the latest release ZIP&lt;/a&gt;, then run the SQL files in the master database. (You can use other databases if you prefer.)&lt;/p&gt;
&lt;p&gt;The First Responder Kit runs on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SQL Server 2008, 2008R2, 2012, 2014, 2016, 2017 on Windows - yes, fully supported&lt;/li&gt;
&lt;li&gt;SQL Server 2017 on Linux - yes, fully supported except sp_AllNightLog and sp_DatabaseRestore, which require xp_cmdshell, which Microsoft doesn't provide on Linux&lt;/li&gt;
&lt;li&gt;SQL Server 2000, 2005 - not supported by Microsoft anymore, so we don't either&lt;/li&gt;
&lt;li&gt;Amazon RDS SQL Server - fully supported&lt;/li&gt;
&lt;li&gt;Azure SQL DB - It's a dice roll. Microsoft changes DMV contents in here without warning, so no guarantees.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-get-support" class="anchor" aria-hidden="true" href="#how-to-get-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to Get Support&lt;/h2&gt;
&lt;p&gt;Everyone here is expected to abide by the &lt;a href="CONTRIBUTING.md#the-contributor-covenant-code-of-conduct"&gt;Contributor Covenant Code of Conduct&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When you have questions about how the tools work, talk with the community in the &lt;a href="https://sqlcommunity.slack.com/messages/firstresponderkit/" rel="nofollow"&gt;#FirstResponderKit Slack channel&lt;/a&gt;. If you need a free invite, hit &lt;a href="http://SQLslack.com/" rel="nofollow"&gt;SQLslack.com&lt;/a&gt;. Be patient - it's staffed with volunteers who have day jobs, heh.&lt;/p&gt;
&lt;p&gt;When you find a bug or want something changed, &lt;a href="CONTRIBUTING.md"&gt;read the contributing.md file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When you have a question about what the scripts found, first make sure you read the "More Details" URL for any warning you find. We put a lot of work into documentation, and we wouldn't want someone to yell at you to go read the fine manual. After that, when you've still got questions about how something works in SQL Server, post a question at &lt;a href="http://dba.stackexchange.com" rel="nofollow"&gt;DBA.StackExchange.com&lt;/a&gt; and the community (that includes us!) will help. Include exact errors and any applicable screenshots, your SQL Server version number (including the build #), and the version of the tool you're working with.&lt;/p&gt;
&lt;p&gt;&lt;a href="#header1"&gt;&lt;em&gt;Back to top&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sp_blitz-overall-health-check" class="anchor" aria-hidden="true" href="#sp_blitz-overall-health-check"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sp_Blitz: Overall Health Check&lt;/h2&gt;
&lt;p&gt;Run sp_Blitz daily or weekly for an overall health check. Just run it from SQL Server Management Studio, and you'll get a prioritized list of issues on your server right now:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d7617f402a424f7f3a0997662263db708c2e7830/687474703a2f2f752e6272656e746f7a61722e636f6d2f6769746875622d696d616765732f73705f426c69747a2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/d7617f402a424f7f3a0997662263db708c2e7830/687474703a2f2f752e6272656e746f7a61722e636f6d2f6769746875622d696d616765732f73705f426c69747a2e706e67" alt="sp_Blitz" data-canonical-src="http://u.brentozar.com/github-images/sp_Blitz.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Output columns include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Priority - 1 is the most urgent, stuff that could get you fired. The warnings get progressively less urgent.&lt;/li&gt;
&lt;li&gt;FindingsGroup, Findings - describe the problem sp_Blitz found on the server.&lt;/li&gt;
&lt;li&gt;DatabaseName - the database having the problem. If it's null, it's a server-wide problem.&lt;/li&gt;
&lt;li&gt;URL - copy/paste this into a browser for more information.&lt;/li&gt;
&lt;li&gt;Details - not just bland text, but dynamically generated stuff with more info.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Commonly used parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;@CheckUserDatabaseObjects = 0 - by default, we check inside user databases for things like triggers or heaps. Turn this off (0) to make checks go faster, or ignore stuff you can't fix if you're managing third party databases. If a server has 50+ databases, @CheckUserDatabaseObjects is automatically turned off unless...&lt;/li&gt;
&lt;li&gt;@BringThePain = 1 - required if you want to run @CheckUserDatabaseObjects = 1 with over 50 databases. It's gonna be slow.&lt;/li&gt;
&lt;li&gt;@CheckServerInfo = 1 - includes additional rows at priority 250 with server configuration details like service accounts.&lt;/li&gt;
&lt;li&gt;@IgnorePrioritiesAbove = 50 - if you want a daily bulletin of the most important warnings, set @IgnorePrioritiesAbove = 50 to only get the urgent stuff.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#header1"&gt;&lt;em&gt;Back to top&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-advanced-sp_blitz-parameters" class="anchor" aria-hidden="true" href="#advanced-sp_blitz-parameters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced sp_Blitz Parameters&lt;/h3&gt;
&lt;p&gt;In addition to the &lt;a href="#parameters-common-to-many-of-the-stored-procedures"&gt;parameters common to many of the stored procedures&lt;/a&gt;, here are the ones specific to sp_Blitz:&lt;/p&gt;
&lt;p&gt;&lt;a href="#header1"&gt;&lt;em&gt;Back to top&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-writing-sp_blitz-output-to-a-table" class="anchor" aria-hidden="true" href="#writing-sp_blitz-output-to-a-table"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Writing sp_Blitz Output to a Table&lt;/h4&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;sp_Blitz @OutputDatabaseName &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;DBAtools&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, @OutputSchemaName &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;dbo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, @OutputTableName &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;BlitzResults&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Checks for the existence of a table DBAtools.dbo.BlitzResults, creates it if necessary, then adds the output of sp_Blitz into this table. This table is designed to support multiple outputs from multiple servers, so you can track your server's configuration history over time.&lt;/p&gt;
&lt;p&gt;&lt;a href="#header1"&gt;&lt;em&gt;Back to top&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-skipping-checks-or-databases" class="anchor" aria-hidden="true" href="#skipping-checks-or-databases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Skipping Checks or Databases&lt;/h4&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;CREATE&lt;/span&gt; &lt;span class="pl-k"&gt;TABLE&lt;/span&gt; &lt;span class="pl-en"&gt;dbo&lt;/span&gt;.BlitzChecksToSkip (
ServerName NVARCHAR(&lt;span class="pl-c1"&gt;128&lt;/span&gt;),
DatabaseName NVARCHAR(&lt;span class="pl-c1"&gt;128&lt;/span&gt;),
CheckID &lt;span class="pl-k"&gt;INT&lt;/span&gt;
);
GO
&lt;span class="pl-k"&gt;INSERT INTO&lt;/span&gt; &lt;span class="pl-c1"&gt;dbo&lt;/span&gt;.&lt;span class="pl-c1"&gt;BlitzChecksToSkip&lt;/span&gt; (ServerName, DatabaseName, CheckID)
&lt;span class="pl-k"&gt;VALUES&lt;/span&gt; (&lt;span class="pl-k"&gt;NULL&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SalesDB&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;50&lt;/span&gt;)
sp_Blitz @SkipChecksDatabase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;DBAtools&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, @SkipChecksSchema &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;dbo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, @SkipChecksTable &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;BlitzChecksToSkip&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Checks for the existence of a table named Fred - just kidding, named DBAtools.dbo.BlitzChecksToSkip. The table needs at least the columns shown above (ServerName, DatabaseName, and CheckID). For each row:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If the DatabaseName is populated but CheckID is null, then all checks will be skipped for that database&lt;/li&gt;
&lt;li&gt;If both DatabaseName and CheckID are populated, then that check will be skipped for that database&lt;/li&gt;
&lt;li&gt;If CheckID is populated but DatabaseName is null, then that check will be skipped for all databases&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#header1"&gt;&lt;em&gt;Back to top&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sp_blitzcache-find-the-most-resource-intensive-queries" class="anchor" aria-hidden="true" href="#sp_blitzcache-find-the-most-resource-intensive-queries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sp_BlitzCache: Find the Most Resource-Intensive Queries&lt;/h2&gt;
&lt;p&gt;sp_BlitzCache looks at your plan cache where SQL Server keeps track of which queries have run recently, and how much impact they've had on the server.&lt;/p&gt;
&lt;p&gt;By default, it includes two result sets:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The first result set shows your 10 most resource-intensive queries.&lt;/li&gt;
&lt;li&gt;The second result set explains the contents of the Warnings column - but it only shows the warnings that were produced in the first result set. (It's kinda like the most relevant glossary of execution plan terms.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Output columns include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Database - the database context where the query ran. Keep in mind that if you fully qualify your object names, the same query might be run from multiple databases.&lt;/li&gt;
&lt;li&gt;Cost - the Estimated Subtree Cost of the query, what Kendra Little calls "Query Bucks."&lt;/li&gt;
&lt;li&gt;Query Text - don't copy/paste from here - it's only a quick reference. A better source for the query will show up later on.&lt;/li&gt;
&lt;li&gt;Warnings - problems we found.&lt;/li&gt;
&lt;li&gt;Created At - when the plan showed up in the cache.&lt;/li&gt;
&lt;li&gt;Last Execution - maybe the query only runs at night.&lt;/li&gt;
&lt;li&gt;Query Plan - click on this, and the graphical plan pops up.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-common-sp_blitzcache-parameters" class="anchor" aria-hidden="true" href="#common-sp_blitzcache-parameters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Common sp_BlitzCache Parameters&lt;/h3&gt;
&lt;p&gt;The @SortOrder parameter lets you pick which top 10 queries you want to examine:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;reads - logical reads&lt;/li&gt;
&lt;li&gt;CPU - from total_worker_time in sys.dm_exec_query_stats&lt;/li&gt;
&lt;li&gt;executions - how many times the query ran since the CreationDate&lt;/li&gt;
&lt;li&gt;xpm - executions per minute, derived from the CreationDate and LastExecution&lt;/li&gt;
&lt;li&gt;recent compilations - if you're looking for things that are recompiling a lot&lt;/li&gt;
&lt;li&gt;memory grant - if you're troubleshooting a RESOURCE_SEMAPHORE issue and want to find queries getting a lot of memory&lt;/li&gt;
&lt;li&gt;writes - if you wanna find those pesky ETL processes&lt;/li&gt;
&lt;li&gt;You can also use average or avg for a lot of the sorts, like @SortOrder = 'avg reads'&lt;/li&gt;
&lt;li&gt;all - sorts by all the different sort order options, and returns a single result set of hot messes. This is a little tricky because:&lt;/li&gt;
&lt;li&gt;We find the @Top N queries by CPU, then by reads, then writes, duration, executions, memory grant, spills, etc. If you want to set @Top &amp;gt; 10, you also have to set @BringThePain = 1 to make sure you understand that it can be pretty slow.&lt;/li&gt;
&lt;li&gt;As we work through each pattern, we exclude the results from the prior patterns. So for example, we get the top 10 by CPU, and then when we go to get the top 10 by reads, we exclude queries that were already found in the top 10 by CPU. As a result, the top 10 by reads may not really be the top 10 by reads - because some of those might have been in the top 10 by CPU.&lt;/li&gt;
&lt;li&gt;To make things even a little more confusing, in the Pattern column of the output, we only specify the first pattern that matched, not all of the patterns that matched. It would be cool if at some point in the future, we turned this into a comma-delimited list of patterns that a query matched, and then we'd be able to get down to a tighter list of top queries. For now, though, this is kinda unscientific.&lt;/li&gt;
&lt;li&gt;query hash - filters for only queries that have multiple cached plans (even though they may all still be the same plan, just different copies stored.) If you use @SortOrder = 'query hash', you can specify a second sort order with a comma, like 'query hash, reads' in order to find only queries with multiple plans, sorted by the ones doing the most reads. The default second sort is CPU.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other common parameters include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;@Top = 10 - by default, you get 10 plans, but you can ask for more. Just know that the more you get, the slower it goes.&lt;/li&gt;
&lt;li&gt;@ExportToExcel = 1 - turn this on, and it doesn't return XML fields that would hinder you from copy/pasting the data into Excel.&lt;/li&gt;
&lt;li&gt;@ExpertMode = 1 - turn this on, and you get more columns with more data. Doesn't take longer to run though.&lt;/li&gt;
&lt;li&gt;@IgnoreSystemDBs = 0 - if you want to show queries in master/model/msdb. By default we hide these.&lt;/li&gt;
&lt;li&gt;@MinimumExecutionCount = 0 - in servers like data warehouses where lots of queries only run a few times, you can set a floor number for examination.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#header1"&gt;&lt;em&gt;Back to top&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-advanced-sp_blitzcache-parameters" class="anchor" aria-hidden="true" href="#advanced-sp_blitzcache-parameters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced sp_BlitzCache Parameters&lt;/h3&gt;
&lt;p&gt;In addition to the &lt;a href="#parameters-common-to-many-of-the-stored-procedures"&gt;parameters common to many of the stored procedures&lt;/a&gt;, here are the ones specific to sp_BlitzCache:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OnlyQueryHashes - if you want to examine specific query plans, you can pass in a comma-separated list of them in a string.&lt;/li&gt;
&lt;li&gt;IgnoreQueryHashes - if you know some queries suck and you don't want to see them, you can pass in a comma-separated list of them.&lt;/li&gt;
&lt;li&gt;OnlySqlHandles, @IgnoreSqlHandles - just like the above two params&lt;/li&gt;
&lt;li&gt;@DatabaseName - if you only want to analyze plans in a single database. However, keep in mind that this is only the database context. A single query that runs in Database1 can join across objects in Database2 and Database3, but we can only know that it ran in Database1.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#header1"&gt;&lt;em&gt;Back to top&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sp_blitzfirst-real-time-performance-advice" class="anchor" aria-hidden="true" href="#sp_blitzfirst-real-time-performance-advice"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sp_BlitzFirst: Real-Time Performance Advice&lt;/h2&gt;
&lt;p&gt;When performance emergencies strike, this should be the first stored proc in the kit you run.&lt;/p&gt;
&lt;p&gt;It takes a sample from a bunch of DMVs (wait stats, Perfmon counters, plan cache), waits 5 seconds, and then takes another sample. It examines the differences between the samples, and then gives you a prioritized list of things that might be causing performance issues right now. Examples include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Data or log file growing (or heaven forbid, shrinking)&lt;/li&gt;
&lt;li&gt;Backup or restore running&lt;/li&gt;
&lt;li&gt;DBCC operation happening&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If no problems are found, it'll tell you that too. That's one of our favorite features because you can have your help desk team run sp_BlitzFirst and read the output to you over the phone. If no problems are found, you can keep right on drinking at the bar. (Ha! Just kidding, you'll still have to close out your tab, but at least you'll feel better about finishing that drink rather than trying to sober up.)&lt;/p&gt;
&lt;p&gt;Common sp_BlitzFirst parameters include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;@Seconds = 5 by default. You can specify longer samples if you want to track stats during a load test or demo, for example.&lt;/li&gt;
&lt;li&gt;@ShowSleepingSPIDs = 0 by default. When set to 1, shows long-running sleeping queries that might be blocking others.&lt;/li&gt;
&lt;li&gt;@ExpertMode = 0 by default. When set to 1, it calls sp_BlitzWho when it starts (to show you what queries are running right now), plus outputs additional result sets for wait stats, Perfmon counters, and file stats during the sample, then finishes with one final execution of sp_BlitzWho to show you what was running at the end of the sample.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-logging-sp_blitzfirst-to-tables" class="anchor" aria-hidden="true" href="#logging-sp_blitzfirst-to-tables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Logging sp_BlitzFirst to Tables&lt;/h3&gt;
&lt;p&gt;You can log sp_BlitzFirst performance data to tables and then analyze the results with the Power BI dashboard. To do it, schedule an Agent job to run sp_BlitzFirst every 15 minutes with these parameters populated:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;@OutputDatabaseName = typically 'DBAtools'&lt;/li&gt;
&lt;li&gt;@OutputSchemaName = 'dbo'&lt;/li&gt;
&lt;li&gt;@OutputTableName = 'BlitzFirst' - the quick diagnosis result set goes here&lt;/li&gt;
&lt;li&gt;@OutputTableNameFileStats = 'BlitzFirst_FileStats'&lt;/li&gt;
&lt;li&gt;@OutputTableNamePerfmonStats = 'BlitzFirst_PerfmonStats'&lt;/li&gt;
&lt;li&gt;@OutputTableNameWaitStats = 'BlitzFirst_WaitStats'&lt;/li&gt;
&lt;li&gt;@OutputTableNameBlitzCache = 'BlitzCache'&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the above OutputTableName parameters are optional: if you don't want to collect all of the stats, you don't have to. Keep in mind that the sp_BlitzCache results will get large, fast, because each execution plan is megabytes in size.&lt;/p&gt;
&lt;p&gt;Then fire up the &lt;a href="https://www.brentozar.com/first-aid/first-responder-kit-power-bi-dashboard/" rel="nofollow"&gt;First Responder Kit Power BI dashboard.&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-logging-performance-tuning-activities" class="anchor" aria-hidden="true" href="#logging-performance-tuning-activities"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Logging Performance Tuning Activities&lt;/h3&gt;
&lt;p&gt;On the Power BI Dashboard, you can show lines for your own activities like tuning queries, adding indexes, or changing configuration settings. To do it, run sp_BlitzFirst with these parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;@OutputDatabaseName = typically 'DBAtools'&lt;/li&gt;
&lt;li&gt;@OutputSchemaName = 'dbo'&lt;/li&gt;
&lt;li&gt;@OutputTableName = 'BlitzFirst' - the quick diagnosis result set goes here&lt;/li&gt;
&lt;li&gt;@LogMessage = 'Whatever you wanna show in the Power BI dashboard'&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Optionally, you can also pass in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;@LogMessagePriority = 1&lt;/li&gt;
&lt;li&gt;@LogMessageFindingsGroup = 'Logged Message'&lt;/li&gt;
&lt;li&gt;@LogMessageFinding = 'Logged from sp_BlitzFirst' - you could use other values here to track other data sources like DDL triggers, Agent jobs, ETL jobs&lt;/li&gt;
&lt;li&gt;@LogMessageURL = '&lt;a href="https://OurHelpDeskSystem/ticket/?12345" rel="nofollow"&gt;https://OurHelpDeskSystem/ticket/?12345&lt;/a&gt;' - or maybe a Github issue, or Pagerduty alert&lt;/li&gt;
&lt;li&gt;@LogMessageCheckDate = '2017/10/31 11:00' - in case you need to log a message for a prior date/time, like if you forgot to log the message earlier&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#header1"&gt;&lt;em&gt;Back to top&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sp_blitzindex-tune-your-indexes" class="anchor" aria-hidden="true" href="#sp_blitzindex-tune-your-indexes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sp_BlitzIndex: Tune Your Indexes&lt;/h2&gt;
&lt;p&gt;SQL Server tracks your indexes: how big they are, how often they change, whether they're used to make queries go faster, and which indexes you should consider adding. The results columns are fairly self-explanatory.&lt;/p&gt;
&lt;p&gt;By default, sp_BlitzIndex analyzes the indexes of the database you're in (your current context.)&lt;/p&gt;
&lt;p&gt;Common parameters include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;@DatabaseName - if you want to analyze a specific database&lt;/li&gt;
&lt;li&gt;@SchemaName, @TableName - if you pass in these, sp_BlitzIndex does a deeper-dive analysis of just one table. You get several result sets back describing more information about the table's current indexes, foreign key relationships, missing indexes, and fields in the table.&lt;/li&gt;
&lt;li&gt;@GetAllDatabases = 1 - slower, but lets you analyze all the databases at once, up to 50. If you want more than 50 databases, you also have to pass in @BringThePain = 1.&lt;/li&gt;
&lt;li&gt;@ThresholdMB = 250 - by default, we only analyze objects over 250MB because you're busy.&lt;/li&gt;
&lt;li&gt;@Mode = 0 (default) - get different data with 0=Diagnose, 1=Summarize, 2=Index Usage Detail, 3=Missing Index Detail, 4=Diagnose Details.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#header1"&gt;&lt;em&gt;Back to top&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-advanced-sp_blitzindex-parameters" class="anchor" aria-hidden="true" href="#advanced-sp_blitzindex-parameters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced sp_BlitzIndex Parameters&lt;/h3&gt;
&lt;p&gt;In addition to the &lt;a href="#parameters-common-to-many-of-the-stored-procedures"&gt;parameters common to many of the stored procedures&lt;/a&gt;, here are the ones specific to sp_BlitzIndex:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;@SkipPartitions = 1 - add this if you want to analyze large partitioned tables. We skip these by default for performance reasons.&lt;/li&gt;
&lt;li&gt;@SkipStatistics = 0 - right now, by default, we skip statistics analysis because we've had some performance issues on this.&lt;/li&gt;
&lt;li&gt;@Filter = 0 (default) - 1=No low-usage warnings for objects with 0 reads. 2=Only warn for objects &amp;gt;= 500MB&lt;/li&gt;
&lt;li&gt;@OutputDatabaseName, @OutputSchemaName, @OutputTableName - these only work for @Mode = 2, index usage detail.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#header1"&gt;&lt;em&gt;Back to top&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sp_blitzinmemoryoltp-hekaton-analysis" class="anchor" aria-hidden="true" href="#sp_blitzinmemoryoltp-hekaton-analysis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sp_BlitzInMemoryOLTP: Hekaton Analysis&lt;/h2&gt;
&lt;p&gt;Examines your usage of In-Memory OLTP tables. Parameters you can use:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;@instanceLevelOnly BIT: This flag determines whether or not to simply report on the server-level environment (if applicable, i.e. there is no server-level environment for Azure SQL Database). With this parameter, memory-optimized databases are ignored. If you specify @instanceLevelOnly and a database name, the database name is ignored.&lt;/li&gt;
&lt;li&gt;@dbName NVARCHAR(4000) = N'ALL' - If you don't specify a database name, then sp_BlitzInMemoryOLTP reports on all memory-optimized databases within the instance that it executes in, or in the case of Azure SQL Database, the database that you provisioned. This is because the default for the @dbName parameter is N'ALL'.&lt;/li&gt;
&lt;li&gt;@tableName NVARCHAR(4000) = NULL&lt;/li&gt;
&lt;li&gt;@debug BIT&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To interpret the output of this stored procedure, read &lt;a href="http://nedotter.com/archive/2018/06/new-kid-on-the-block-sp_blitzinmemoryoltp/" rel="nofollow"&gt;Ned Otter's sp_BlitzInMemoryOLTP documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#header1"&gt;&lt;em&gt;Back to top&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sp_blitzlock-deadlock-analysis" class="anchor" aria-hidden="true" href="#sp_blitzlock-deadlock-analysis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sp_BlitzLock: Deadlock Analysis&lt;/h2&gt;
&lt;p&gt;Checks either the System Health session or a specific Extended Event session that captures deadlocks and parses out all the XML for you.&lt;/p&gt;
&lt;p&gt;Parameters you can use:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;@Top: Use if you want to limit the number of deadlocks to return. This is ordered by event date ascending.&lt;/li&gt;
&lt;li&gt;@DatabaseName: If you want to filter to a specific database&lt;/li&gt;
&lt;li&gt;@StartDate: The date you want to start searching on.&lt;/li&gt;
&lt;li&gt;@EndDate: The date you want to stop searching on.&lt;/li&gt;
&lt;li&gt;@ObjectName: If you want to filter to a specific table. The object name has to be fully qualified 'Database.Schema.Table'&lt;/li&gt;
&lt;li&gt;@StoredProcName: If you want to search for a single stored proc.&lt;/li&gt;
&lt;li&gt;@AppName: If you want to filter to a specific application.&lt;/li&gt;
&lt;li&gt;@HostName: If you want to filter to a specific host.&lt;/li&gt;
&lt;li&gt;@LoginName: If you want to filter to a specific login.&lt;/li&gt;
&lt;li&gt;@EventSessionPath: If you want to point this at an XE session rather than the system health session.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#header1"&gt;&lt;em&gt;Back to top&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sp_blitzquerystore-query-store-sale" class="anchor" aria-hidden="true" href="#sp_blitzquerystore-query-store-sale"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sp_BlitzQueryStore: Query Store Sale&lt;/h2&gt;
&lt;p&gt;Analyzes data in Query Store schema (2016+ only) in many similar ways to what sp_BlitzCache does for the plan cache.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;@Help: Right now this just prints the license if set to 1. I'm going to add better documentation here as the script matures.&lt;/li&gt;
&lt;li&gt;@DatabaseName: This one is required. Query Store is per database, so you have to point it at one to examine.&lt;/li&gt;
&lt;li&gt;@Top: How many plans from each "worst" you want to get. We look at your maxes for CPU, reads, duration, writes, memory, rows, executions, and additionally tempdb and log bytes for 2017. So it's the number of plans from each of those to gather.&lt;/li&gt;
&lt;li&gt;@StartDate: Fairly obvious, when you want to start looking at queries from. If NULL, we'll only go back seven days.&lt;/li&gt;
&lt;li&gt;@EndDate: When you want to stop looking at queries from. If you leave it NULL, we'll look ahead seven days.&lt;/li&gt;
&lt;li&gt;@MinimumExecutionCount: The minimum number of times a query has to have been executed (not just compiled) to be analyzed.&lt;/li&gt;
&lt;li&gt;@DurationFilter: The minimum number of seconds a query has to have been executed for to be analyzed.&lt;/li&gt;
&lt;li&gt;@StoredProcName: If you want to look at a single stored procedure.&lt;/li&gt;
&lt;li&gt;@Failed: If you want to look at failed queries, for some reason. I dunno, MS made such a big deal out of being able to look at these, I figured I'd add it.&lt;/li&gt;
&lt;li&gt;@PlanIdFilter: If you want to filter by a particular plan id. Remember that a query may have many different plans.&lt;/li&gt;
&lt;li&gt;@QueryIdFilter: If you want to filter by a particular query id. If you want to look at one specific plan for a query.&lt;/li&gt;
&lt;li&gt;@ExportToExcel: Leaves XML out of the input and tidies up query text so you can easily paste it into Excel.&lt;/li&gt;
&lt;li&gt;@HideSummary: Pulls the rolled up warnings and information out of the results.&lt;/li&gt;
&lt;li&gt;@SkipXML: Skips XML analysis.&lt;/li&gt;
&lt;li&gt;@Debug: Prints dynamic SQL and selects data from all temp tables if set to 1.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#header1"&gt;&lt;em&gt;Back to top&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sp_blitzwho-what-queries-are-running-now" class="anchor" aria-hidden="true" href="#sp_blitzwho-what-queries-are-running-now"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sp_BlitzWho: What Queries are Running Now&lt;/h2&gt;
&lt;p&gt;This is like sp_who, except it goes into way, way, way more details.&lt;/p&gt;
&lt;p&gt;It's designed for query tuners, so it includes things like memory grants, degrees of parallelism, and execution plans.&lt;/p&gt;
&lt;p&gt;&lt;a href="#header1"&gt;&lt;em&gt;Back to top&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sp_blitzbackups-how-much-data-could-you-lose" class="anchor" aria-hidden="true" href="#sp_blitzbackups-how-much-data-could-you-lose"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sp_BlitzBackups: How Much Data Could You Lose&lt;/h2&gt;
&lt;p&gt;Checks your backups and reports estimated RPO and RTO based on historical data in msdb, or a centralized location for [msdb].dbo.backupset.&lt;/p&gt;
&lt;p&gt;Parameters include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;@HoursBack -- How many hours into backup history you want to go. Should be a negative number (we're going back in time, after all). But if you enter a positive number, we'll make it negative for you. You're welcome.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;@MSDBName -- if you need to prefix dbo.backupset with an alternate database name.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;@AGName -- If you have more than 1 AG on the server, and you don't know the listener name, specify the name of the AG you want to use the listener for, to push backup data. This may get used during analysis in a future release for filtering.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;@RestoreSpeedFullMBps --[FIXFIX] Brent can word this better than I can&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;@RestoreSpeedDiffMBps -- Nothing yet&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;@RestoreSpeedLogMBps -- Nothing yet&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;@PushBackupHistoryToListener -- Turn this to 1 to skip analysis and use sp_BlitzBackups to push backup data from msdb to a centralized location (more the mechanics of this to follow)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;@WriteBackupsToListenerName -- This is the name of the AG listener, and &lt;strong&gt;MUST&lt;/strong&gt; have a linked server configured pointing to it. Yes, that means you need to create a linked server that points to the AG Listener, with the appropriate permissions to write data.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;@WriteBackupsToDatabaseName -- This can't be 'msdb' if you're going to use the backup data pushing mechanism. We can't write to your actual msdb tables.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;@WriteBackupsLastHours -- How many hours in the past you want to move data for. Should be a negative number (we're going back in time, after all). But if you enter a positive number, we'll make it negative for you. You're welcome.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;An example run of sp_BlitzBackups to push data looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;EXEC sp_BlitzBackups    @PushBackupHistoryToListener = 1, -- Turn it on!
                        @WriteBackupsToListenerName = 'AG_LISTENER_NAME', -- Name of AG Listener and Linked Server 
                        @WriteBackupsToDatabaseName = 'FAKE_MSDB_NAME',  -- Fake MSDB name you want to push to. Remember, can't be real MSDB.
                        @WriteBackupsLastHours = -24 -- Hours back in time you want to go
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In an effort to not clog your servers up, we've taken some care in batching things as we move data. Inspired by &lt;a href="http://michaeljswart.com/2014/09/take-care-when-scripting-batches/" rel="nofollow"&gt;Michael J. Swart's Take Care When Scripting Batches&lt;/a&gt;, we only move data in 10 minute intervals.&lt;/p&gt;
&lt;p&gt;The reason behind that is, if you have 500 databases, and you're taking log backups every minute, you can have a lot of data to move. A 5000 row batch should move pretty quickly.&lt;/p&gt;
&lt;p&gt;&lt;a href="#header1"&gt;&lt;em&gt;Back to top&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sp_allnightlog-back-up-faster-to-lose-less-data" class="anchor" aria-hidden="true" href="#sp_allnightlog-back-up-faster-to-lose-less-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sp_AllNightLog: Back Up Faster to Lose Less Data&lt;/h2&gt;
&lt;p&gt;You manage a SQL Server instance with hundreds or thousands of mission-critical databases. You want to back them all up as quickly as possible, and one maintenance plan job isn't going to cut it.&lt;/p&gt;
&lt;p&gt;Let's scale out our backup jobs by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Creating a table with a list of databases and their desired Recovery Point Objective (RPO, aka data loss) - done with sp_AllNightLog_Setup&lt;/li&gt;
&lt;li&gt;Set up several Agent jobs to back up databases as necessary - also done with sp_AllNightLog_Setup&lt;/li&gt;
&lt;li&gt;Inside each of those Agent jobs, they call sp_AllNightLog @Backup = 1, which loops through the table to find databases that need to be backed up, then call &lt;a href="https://ola.hallengren.com/" rel="nofollow"&gt;Ola Hallengren's DatabaseBackup stored procedure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Keeping that database list up to date as new databases are added - done by a job calling sp_AllNightLog @PollForNewDatabases = 1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more information about how this works, see &lt;a href="https://www.BrentOzar.com/sp_AllNightLog" rel="nofollow"&gt;sp_AllNightLog documentation.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Known issues:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The msdbCentral database name is hard-coded.&lt;/li&gt;
&lt;li&gt;sp_AllNightLog depends on Ola Hallengren's DatabaseBackup, which must be installed separately. (We're not checking for it right now.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#header1"&gt;&lt;em&gt;Back to top&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sp_databaserestore-easier-multi-file-restores" class="anchor" aria-hidden="true" href="#sp_databaserestore-easier-multi-file-restores"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;sp_DatabaseRestore: Easier Multi-File Restores&lt;/h2&gt;
&lt;p&gt;If you use &lt;a href="http://ola.hallengren.com" rel="nofollow"&gt;Ola Hallengren's backup scripts&lt;/a&gt;, DatabaseRestore.sql helps you rapidly restore a database to the most recent point in time.&lt;/p&gt;
&lt;p&gt;Parameters include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;@Database - the database's name, like LogShipMe&lt;/li&gt;
&lt;li&gt;@RestoreDatabaseName&lt;/li&gt;
&lt;li&gt;@BackupPathFull - typically a UNC path like '\FILESERVER\BACKUPS\SQL2016PROD1A\LogShipMe\FULL' that points to where the full backups are stored. Note that if the path doesn't exist, we don't create it, and the query might take 30+ seconds if you specify an invalid server name.&lt;/li&gt;
&lt;li&gt;@BackupPathDiff, @BackupPathLog - as with the Full, this should be set to the exact path where the differentials and logs are stored. We don't append anything to these parameters.&lt;/li&gt;
&lt;li&gt;@MoveFiles, @MoveDataDrive, @MoveLogDrive - if you want to restore to somewhere other than your default database locations.&lt;/li&gt;
&lt;li&gt;@RunCheckDB - default 0. When set to 1, we run Ola Hallengren's DatabaseIntegrityCheck stored procedure on this database, and log the results to table. We use that stored proc's default parameters, nothing fancy.&lt;/li&gt;
&lt;li&gt;@TestRestore - default 0. When set to 1, we delete the database after the restore completes. Used for just testing your restores. Especially useful in combination with @RunCheckDB = 1 because we'll delete the database after running checkdb, but know that we delete the database even if it fails checkdb tests.&lt;/li&gt;
&lt;li&gt;@RestoreDiff - default 0. When set to 1, we restore the ncessary full, differential, and log backups (instead of just full and log) to get to the most recent point in time.&lt;/li&gt;
&lt;li&gt;@ContinueLogs - default 0. When set to 1, we don't restore a full or differential backup - we only restore the transaction log backups. Good for continuous log restores with tools like sp_AllNightLog.&lt;/li&gt;
&lt;li&gt;@RunRecovery - default 0. When set to 1, we run RESTORE WITH RECOVERY, putting the database into writable mode, and no additional log backups can be restored.&lt;/li&gt;
&lt;li&gt;@ExistingDBAction - if the database already exists when we try to restore it, 1 sets the database to single user mode, 2 kills the connections, and 3 kills the connections and then drops the database.&lt;/li&gt;
&lt;li&gt;@Debug - default 0. When 1, we print out messages of what we're doing in the messages tab of SSMS.&lt;/li&gt;
&lt;li&gt;@StopAt NVARCHAR(14) - pass in a date time to stop your restores at a time like '20170508201501'. This doesn't use the StopAt parameter for the restore command - it simply stops restoring logs that would have this date/time's contents in it. (For example, if you're taking backups every 15 minutes on the hour, and you pass in 9:05 AM as part of the restore time, the restores would stop at your last log backup that doesn't include 9:05AM's data - but it won't restore right up to 9:05 AM.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For information about how this works, see &lt;a href="https://BrentOzar.com/go/gce" rel="nofollow"&gt;Tara Kizer's white paper on Log Shipping 2.0 with Google Compute Engine.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#header1"&gt;&lt;em&gt;Back to top&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-parameters-common-to-many-of-the-stored-procedures" class="anchor" aria-hidden="true" href="#parameters-common-to-many-of-the-stored-procedures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Parameters Common to Many of the Stored Procedures&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;@Help = 1 - returns a result set or prints messages explaining the stored procedure's input and output. Make sure to check the Messages tab in SSMS to read it.&lt;/li&gt;
&lt;li&gt;@ExpertMode = 1 - turns on more details useful for digging deeper into results.&lt;/li&gt;
&lt;li&gt;@OutputDatabaseName, @OutputSchemaName, @OutputTableName - pass all three of these in, and the stored proc's output will be written to a table. We'll create the table if it doesn't already exist.&lt;/li&gt;
&lt;li&gt;@OutputServerName - not functional yet. To track (or help!) implementation status: &lt;a href="https://github.com/BrentOzarULTD/SQL-Server-First-Responder-Kit/issues/293"&gt;https://github.com/BrentOzarULTD/SQL-Server-First-Responder-Kit/issues/293&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#header1"&gt;&lt;em&gt;Back to top&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="LICENSE.md"&gt;The SQL Server First Responder Kit uses the MIT License.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#header1"&gt;&lt;em&gt;Back to top&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>BrentOzarULTD</author><guid isPermaLink="false">https://github.com/BrentOzarULTD/SQL-Server-First-Responder-Kit</guid><pubDate>Tue, 10 Dec 2019 00:01:00 GMT</pubDate></item><item><title>MicrosoftLearning/DP-200-Implementing-an-Azure-Data-Solution #2 in TSQL, This week</title><link>https://github.com/MicrosoftLearning/DP-200-Implementing-an-Azure-Data-Solution</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-dp-200-implementing-an-azure-data-solution" class="anchor" aria-hidden="true" href="#dp-200-implementing-an-azure-data-solution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DP-200-Implementing-an-Azure-Data-Solution&lt;/h1&gt;
&lt;p&gt;During this course, the first and the last lab of the course are group exercises that involve discussion to help provide context for the labs that the students will take. The last lab provides the opportunity for the students to reflect on what they have achieved and what they have overcome to achieve the delivery of requirements from the case study in the labs. The rest of the labs are hands on implementing Azure data platform capabilities to meet AdventureWorks business requirements.&lt;/p&gt;
&lt;p&gt;The following is a summary of the lab objectives for each module:&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lab-1---azure-for-the-data-engineer" class="anchor" aria-hidden="true" href="#lab-1---azure-for-the-data-engineer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lab 1 - Azure for the Data Engineer&lt;/h2&gt;
&lt;p&gt;The students will take the information gained in the lessons and from the case study to scope out the deliverables for a digital transformation project within AdventureWorks. They will first identify how the evolving use of data has presented new opportunities for the organization. The students will also explore which Azure Data Platform services can be used to address the business needs and define the tasks that will be performed by the data engineer. Finally, students will finalize the data engineering deliverables for AdventureWorks.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lab-2---working-with-data-storage" class="anchor" aria-hidden="true" href="#lab-2---working-with-data-storage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lab 2 - Working with Data Storage&lt;/h2&gt;
&lt;p&gt;In this lab, the students will be able to determine the appropriate storage type to implement against a given set of business and technical requirements. They will be able to create Azure storage accounts and Data Lake Storage account and explain the difference between Data Lake Storage version 1 and version 2. They will also be able to demonstrate how to perform data loads into the data storage of choice.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lab-3---enabling-team-based-data-science-with-azure-databricks" class="anchor" aria-hidden="true" href="#lab-3---enabling-team-based-data-science-with-azure-databricks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lab 3 - Enabling Team Based Data Science with Azure Databricks&lt;/h2&gt;
&lt;p&gt;By the end of this lab the student will be able to explain why Azure Databricks can be used to help in Data Science projects. The students will provision and Azure Databricks instance and will then create a workspace that will be used to perform a simple data preparation task from a Data Lake Store Gen II store. Finally, the student will perform a walk-through of performing transformations using Azure Databricks.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lab-4---building-globally-distributed-databases-with-cosmos-db" class="anchor" aria-hidden="true" href="#lab-4---building-globally-distributed-databases-with-cosmos-db"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lab 4 - Building Globally Distributed Databases with Cosmos DB&lt;/h2&gt;
&lt;p&gt;The students will be able to describe and demonstrate the capabilities that Azure Cosmos DB can bring to an organization. They will be able to create a Cosmos DB instance and show how to upload and query data through a portal and through a .Net application. They will then be able to demonstrate how to enable global scale of the Cosmos DB database.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lab-5---working-with-relational-data-stores-in-the-cloud" class="anchor" aria-hidden="true" href="#lab-5---working-with-relational-data-stores-in-the-cloud"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lab 5 - Working with Relational Data Stores in the Cloud&lt;/h2&gt;
&lt;p&gt;The students will be able to provision an Azure SQL Database and Azure SQL Data Warehouse and be able to issue queries against one of the instances that are created. They will be also be able to integrate SQL Data Warehouse with a number of other Data platform technologies and use PolyBase to load data from one data source into Azure SQL Data Warehouse.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lab-6---performing-real-time-analytics-with-stream-analytics" class="anchor" aria-hidden="true" href="#lab-6---performing-real-time-analytics-with-stream-analytics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lab 6 - Performing Real-Time Analytics with Stream Analytics&lt;/h2&gt;
&lt;p&gt;The students will be able to describe what data streams are and how event processing works and choose an appropriate data stream ingestion technology for the AdventureWorks case study. They will provision the chosen ingestion technology and integrate this with Stream Analytics to create a solution that works with streaming data.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lab-7---orchestrating-data-movement-with-azure-data-factory" class="anchor" aria-hidden="true" href="#lab-7---orchestrating-data-movement-with-azure-data-factory"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lab 7 - Orchestrating Data Movement with Azure Data Factory&lt;/h2&gt;
&lt;p&gt;In this module, students will learn how Azure Data factory can be used to orchestrate the data movement from a wide range of data platform technologies. They will be able to explain the capabilities of the technology and be able to set up an end to end data pipeline that ingests data from SQL Database and load the data into SQL Data Warehouse. The student will also demonstrate how to call a compute resource.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lab-8---securing-azure-data-platforms" class="anchor" aria-hidden="true" href="#lab-8---securing-azure-data-platforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lab 8 - Securing Azure Data Platforms&lt;/h2&gt;
&lt;p&gt;The students will be able to describe and document the different approaches to security that can be taken to provide defence in depth. This will involve the student documenting the security that has been set up so far in the course. It will also enable the students to identify any gaps in security that may exists for AdventureWorks.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lab-9---monitoring-and-troubleshooting-data-storage-and-processing" class="anchor" aria-hidden="true" href="#lab-9---monitoring-and-troubleshooting-data-storage-and-processing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lab 9 - Monitoring and Troubleshooting Data Storage and Processing&lt;/h2&gt;
&lt;p&gt;The students will be able to define a broad monitoring solution that can help them monitor issues that can occur in their data estate. The student will then experience common data storage issues and data processing issue that can occur in cloud data solution. Finally they will implement a disaster recovery approach for a Data Platform technology.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>MicrosoftLearning</author><guid isPermaLink="false">https://github.com/MicrosoftLearning/DP-200-Implementing-an-Azure-Data-Solution</guid><pubDate>Tue, 10 Dec 2019 00:02:00 GMT</pubDate></item><item><title>jOOQ/jOOQ #3 in TSQL, This week</title><link>https://github.com/jOOQ/jOOQ</link><description>&lt;p&gt;&lt;i&gt;jOOQ is the best way to write SQL in Java&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-jooqs-reason-for-being---compared-to-jpa" class="anchor" aria-hidden="true" href="#jooqs-reason-for-being---compared-to-jpa"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;jOOQ's reason for being - compared to JPA&lt;/h1&gt;
&lt;p&gt;Java and SQL have come a long way. SQL is an "ancient", yet established and well-understood technology. Java is a legacy too, although its platform JVM allows for many new and contemporary languages built on top of it. Yet, after all these years, libraries dealing with the interface between SQL and Java have come and gone, leaving JPA to be a standard that is accepted only with doubts, short of any surviving options.&lt;/p&gt;
&lt;p&gt;So far, there had been only few database abstraction frameworks or libraries, that truly respected SQL as a first class citizen among languages. Most frameworks, including the industry standards JPA, EJB, Hibernate, JDO, Criteria Query, and many others try to hide SQL itself, minimising its scope to things called JPQL, HQL, JDOQL and various other inferior query languages&lt;/p&gt;
&lt;p&gt;jOOQ has come to fill this gap.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-jooqs-reason-of-being---compared-to-linq" class="anchor" aria-hidden="true" href="#jooqs-reason-of-being---compared-to-linq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;jOOQ's reason of being - compared to LINQ&lt;/h1&gt;
&lt;p&gt;Other platforms incorporate ideas such as LINQ (with LINQ-to-SQL), or Scala's SLICK, or also Java's QueryDSL to better integrate querying as a concept into their respective language. By querying, they understand querying of arbitrary targets, such as SQL, XML, Collections and other heterogeneous data stores. jOOQ claims that this is going the wrong way too.&lt;/p&gt;
&lt;p&gt;In more advanced querying use-cases (more than simple CRUD and the occasional JOIN), people will want to profit from the expressivity of SQL. Due to the relational nature of SQL, this is quite different from what object-oriented and partially functional languages such as C#, Scala, or Java can offer.&lt;/p&gt;
&lt;p&gt;It is very hard to formally express and validate joins and the ad-hoc table expression types they create. It gets even harder when you want support for more advanced table expressions, such as pivot tables, unnested cursors, or just arbitrary projections from derived tables. With a very strong object-oriented typing model, these features will probably stay out of scope.&lt;/p&gt;
&lt;p&gt;In essence, the decision of creating an API that looks like SQL or one that looks like C#, Scala, Java is a definite decision in favour of one or the other platform. While it will be easier to evolve SLICK in similar ways as LINQ (or QueryDSL in the Java world), SQL feature scope that clearly communicates its underlying intent will be very hard to add, later on (e.g. how would you model Oracle's partitioned outer join syntax? How would you model ANSI/ISO SQL:1999 grouping sets? How can you support scalar subquery caching? etc...).&lt;/p&gt;
&lt;p&gt;jOOQ has come to fill this gap.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-jooq-is-different" class="anchor" aria-hidden="true" href="#jooq-is-different"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;jOOQ is different&lt;/h1&gt;
&lt;p&gt;SQL was never meant to be abstracted. To be confined in the narrow boundaries of heavy mappers, hiding the beauty and simplicity of relational data. SQL was never meant to be object-oriented. SQL was never meant to be anything other than... SQL!&lt;/p&gt;
&lt;p&gt;For more details please visit &lt;a href="https://www.jooq.org" rel="nofollow"&gt;jooq.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Follow jOOQ on &lt;a href="https://twitter.com/JavaOOQ" rel="nofollow"&gt;Twitter&lt;/a&gt; and &lt;a href="https://blog.jooq.org" rel="nofollow"&gt;the jOOQ blog&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jOOQ</author><guid isPermaLink="false">https://github.com/jOOQ/jOOQ</guid><pubDate>Tue, 10 Dec 2019 00:03:00 GMT</pubDate></item><item><title>confluentinc/examples #4 in TSQL, This week</title><link>https://github.com/confluentinc/examples</link><description>&lt;p&gt;&lt;i&gt;Apache Kafka and Confluent Platform examples and demos&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/confluent-logo-300-2.png"&gt;&lt;img src="images/confluent-logo-300-2.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#demos"&gt;Demos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-your-own"&gt;Build Your Own&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#prerequisites"&gt;Prerequisities&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-demos" class="anchor" aria-hidden="true" href="#demos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Demos&lt;/h1&gt;
&lt;p&gt;This is a curated list of demos that showcase Apache Kafka® event stream processing on the Confluent Platform, an event stream processing platform that enables you to process, organize, and manage massive amounts of streaming data across cloud, on-prem, and serverless deployments.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;a href="http://www.youtube.com/watch?v=muQBd6gry0U" rel="nofollow"&gt;&lt;img src="images/examples-video-thumbnail.jpg" width="360" height="270" border="10" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-where-to-start" class="anchor" aria-hidden="true" href="#where-to-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Where to start&lt;/h2&gt;
&lt;p&gt;The best demo to start with is &lt;a href="https://github.com/confluentinc/cp-demo"&gt;cp-demo&lt;/a&gt; which spins up a Kafka event streaming application using KSQL for stream processing, with many security features enabled, in an end-to-end streaming ETL pipeline with a source connector pulling from live IRC channels and a sink connector connecting to Elasticsearch and Kibana for visualizations.
&lt;code&gt;cp-demo&lt;/code&gt; also comes with a playbook and is a great configuration reference for Confluent Platform.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-full-demo-list" class="anchor" aria-hidden="true" href="#full-demo-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Full demo list&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#confluent-cloud"&gt;Confluent Cloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#stream-processing"&gt;Stream Processing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#data-pipelines"&gt;Data Pipelines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#confluent-platform"&gt;Confluent Platform&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-confluent-cloud" class="anchor" aria-hidden="true" href="#confluent-cloud"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Confluent Cloud&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Demo&lt;/th&gt;
&lt;th&gt;Local&lt;/th&gt;
&lt;th&gt;Docker&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="ccloud/beginner-cloud/README.md"&gt;Beginner Cloud&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;Fully scripted demo that shows how to interact with your Confluent Cloud cluster and set ACLs using the CLI &lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="clients/cloud/images/confluent-cloud.jpeg"&gt;&lt;img src="clients/cloud/images/confluent-cloud.jpeg" width="400" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="clients/cloud/README.md"&gt;Clients to Cloud&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="clients/cloud/README.md"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;Client applications in different programming languages connecting to &lt;a href="https://www.confluent.io/confluent-cloud/?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top" rel="nofollow"&gt;Confluent Cloud&lt;/a&gt; &lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="clients/cloud/images/clients-all.png"&gt;&lt;img src="clients/cloud/images/clients-all.png" width="450" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/confluentinc/demo-scene/blob/master/gcp-pipeline/README.adoc"&gt;GCP pipeline&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/confluentinc/demo-scene/blob/master/gcp-pipeline/README.adoc"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Work with &lt;a href="https://www.confluent.io/confluent-cloud/?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top" rel="nofollow"&gt;Confluent Cloud&lt;/a&gt; to build cool pipelines into Google Cloud Platform (GCP) &lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/confluentinc/demo-scene/blob/master/gcp-pipeline/images/env-data-arch-01.png"&gt;&lt;img src="https://github.com/confluentinc/demo-scene/raw/master/gcp-pipeline/images/env-data-arch-01.png" width="450" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="kinesis-cloud/README.md"&gt;Kinesis to Cloud&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="kinesis-cloud/README.md"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;AWS Kinesis -&amp;gt; Confluent Cloud -&amp;gt; Google Cloud Storage pipeline &lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="kinesis-cloud/images/topology.jpg"&gt;&lt;img src="kinesis-cloud/images/topology.jpg" width="450" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="ccloud/README.md"&gt;On-Prem Kafka to Cloud&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="ccloud/README.md"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="ccloud/README.md"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This more advanced demo showcases an on-prem Kafka cluster and &lt;a href="https://www.confluent.io/confluent-cloud/?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top" rel="nofollow"&gt;Confluent Cloud&lt;/a&gt; cluster, and data copied between them with Confluent Replicator &lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="ccloud/docs/images/schema-registry-local.jpg"&gt;&lt;img src="ccloud/docs/images/schema-registry-local.jpg" width="450" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="kubernetes/replicator-gke-cc/README.md"&gt;GKE to Cloud&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;&lt;a href="kubernetes/replicator-gke-cc/README.md"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Uses Google Kubernetes Engine, &lt;a href="https://www.confluent.io/confluent-cloud/?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top" rel="nofollow"&gt;Confluent Cloud&lt;/a&gt;, and &lt;a href="https://www.confluent.io/confluent-replicator/?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top" rel="nofollow"&gt;Confluent Replicator&lt;/a&gt; to explore a multicloud deployment &lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="kubernetes/replicator-gke-cc/docs/images/operator-demo-phase-2.png"&gt;&lt;img src="kubernetes/replicator-gke-cc/docs/images/operator-demo-phase-2.png" width="450" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-stream-processing" class="anchor" aria-hidden="true" href="#stream-processing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Stream Processing&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Demo&lt;/th&gt;
&lt;th&gt;Local&lt;/th&gt;
&lt;th&gt;Docker&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="clickstream/README.md"&gt;Clickstream&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="clickstream/README.md"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://docs.confluent.io/current/ksql/docs/tutorials/clickstream-docker.html#ksql-clickstream-docker?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top" rel="nofollow"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Automated version of the &lt;a href="https://docs.confluent.io/current/ksql/docs/tutorials/clickstream-docker.html#ksql-clickstream-docker?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top" rel="nofollow"&gt;KSQL clickstream demo&lt;/a&gt; &lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/28e9212ca11ed82e4015367f81b89bec3e61f107/68747470733a2f2f646f63732e636f6e666c75656e742e696f2f63757272656e742f5f696d616765732f67726166616e612d737563636573732e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/28e9212ca11ed82e4015367f81b89bec3e61f107/68747470733a2f2f646f63732e636f6e666c75656e742e696f2f63757272656e742f5f696d616765732f67726166616e612d737563636573732e706e67" width="450" data-canonical-src="https://docs.confluent.io/current/_images/grafana-success.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://kafka-tutorials.confluent.io?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top" rel="nofollow"&gt;Kafka Tutorials&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://kafka-tutorials.confluent.io?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top" rel="nofollow"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://kafka-tutorials.confluent.io?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top" rel="nofollow"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Collection of common event streaming use cases, with each tutorial featuring an example scenario and several complete code solutions &lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a8588b0e07ad402e01e0e1f355a840c3717fb7cd/68747470733a2f2f63646e2e636f6e666c75656e742e696f2f77702d636f6e74656e742f75706c6f6164732f4b61666b612d5475746f7269616c732d333530783139352e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/a8588b0e07ad402e01e0e1f355a840c3717fb7cd/68747470733a2f2f63646e2e636f6e666c75656e742e696f2f77702d636f6e74656e742f75706c6f6164732f4b61666b612d5475746f7269616c732d333530783139352e6a7067" width="350" data-canonical-src="https://cdn.confluent.io/wp-content/uploads/Kafka-Tutorials-350x195.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/confluentinc/demo-scene/blob/master/ksql-udf-advanced-example/README.md?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top"&gt;KSQL UDF&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/confluentinc/demo-scene/blob/master/ksql-udf-advanced-example/README.md?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;Advanced &lt;a href="https://www.confluent.io/blog/build-udf-udaf-ksql-5-0?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top" rel="nofollow"&gt;KSQL User-Defined Function (UDF)&lt;/a&gt; use case for connected cars &lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/fcb649b2d1a60911f393cc63738cdcb5c0710d73/68747470733a2f2f7777772e636f6e666c75656e742e696f2f77702d636f6e74656e742f75706c6f6164732f4b53514c2d312d333530783139352e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/fcb649b2d1a60911f393cc63738cdcb5c0710d73/68747470733a2f2f7777772e636f6e666c75656e742e696f2f77702d636f6e74656e742f75706c6f6164732f4b53514c2d312d333530783139352e706e67" width="350" data-canonical-src="https://www.confluent.io/wp-content/uploads/KSQL-1-350x195.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/confluentinc/demo-scene/blob/master/ksql-workshop/"&gt;KSQL workshop&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/confluentinc/demo-scene/blob/master/ksql-workshop/"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;showcases Kafka event stream processing using KSQL and can run self-guided as a KSQL workshop &lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/confluentinc/demo-scene/blob/master/ksql-workshop/images/ksql_workshop_01.png"&gt;&lt;img src="https://github.com/confluentinc/demo-scene/raw/master/ksql-workshop/images/ksql_workshop_01.png" width="450" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="microservices-orders/README.md"&gt;Microservices ecosystem&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="microservices-orders/README.md"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/confluentinc/kafka-streams-examples/tree/5.2.2-post/src/main/java/io/confluent/examples/streams/microservices"&gt;Microservices orders Demo Application&lt;/a&gt; integrated into the Confluent Platform &lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="microservices-orders/docs/images/microservices-demo.jpg"&gt;&lt;img src="microservices-orders/docs/images/microservices-demo.jpg" width="450" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="music/README.md"&gt;Music demo&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="music/README.md"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="music/README.md"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;KSQL version of the &lt;a href="https://docs.confluent.io/current/streams/kafka-streams-examples/docs/index.html?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top" rel="nofollow"&gt;Kafka Streams Demo Application&lt;/a&gt; &lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="music/images/ksql-music-demo-overview.jpg"&gt;&lt;img src="music/images/ksql-music-demo-overview.jpg" width="450" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-data-pipelines" class="anchor" aria-hidden="true" href="#data-pipelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Pipelines&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Demo&lt;/th&gt;
&lt;th&gt;Local&lt;/th&gt;
&lt;th&gt;Docker&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/confluentinc/demo-scene/blob/master/no-more-silos/demo_no-more-silos.adoc"&gt;CDC with MySQL&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/confluentinc/demo-scene/blob/master/no-more-silos/demo_no-more-silos.adoc"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Self-paced steps to set up a change data capture (CDC) pipeline &lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b9dbae7351f1813eb87dac08d7726b9554b891a2/68747470733a2f2f7777772e636f6e666c75656e742e696f2f77702d636f6e74656e742f75706c6f6164732f6b61666b615f636f6e6e6563742d312e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/b9dbae7351f1813eb87dac08d7726b9554b891a2/68747470733a2f2f7777772e636f6e666c75656e742e696f2f77702d636f6e74656e742f75706c6f6164732f6b61666b615f636f6e6e6563742d312e706e67" width="450" data-canonical-src="https://www.confluent.io/wp-content/uploads/kafka_connect-1.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="postgres-debezium-ksql-elasticsearch/README.md"&gt;CDC with Postgres&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;&lt;a href="postgres-debezium-ksql-elasticsearch/README.md"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Enrich event stream data with CDC data from Postgres and then stream into Elasticsearch &lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="postgres-debezium-ksql-elasticsearch/images/ksql-debezium-es.png"&gt;&lt;img src="postgres-debezium-ksql-elasticsearch/images/ksql-debezium-es.png" width="450" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="connect-streams-pipeline/README.md"&gt;Connect and Kafka Streams&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="connect-streams-pipeline/README.md"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;Demonstrate various ways, with and without Kafka Connect, to get data into Kafka topics and then loaded for use by the Kafka Streams API &lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="connect-streams-pipeline/images/blog_connect_streams_diag.jpg"&gt;&lt;img src="connect-streams-pipeline/images/blog_connect_streams_diag.jpg" width="450" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/confluentinc/demo-scene/blob/master/mqtt-connect-connector-demo/README.md"&gt;MQTT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/confluentinc/demo-scene/blob/master/mqtt-connect-connector-demo/README.md"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;Internet of Things (IoT) integration example using Apache Kafka + Kafka Connect + MQTT Connector + Sensor Data &lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/80c360e482a98ae2311869d0cedc5ef984821eee/68747470733a2f2f7777772e636f6e666c75656e742e696f2f77702d636f6e74656e742f75706c6f6164732f6477675f4d5154542e737667"&gt;&lt;img src="https://camo.githubusercontent.com/80c360e482a98ae2311869d0cedc5ef984821eee/68747470733a2f2f7777772e636f6e666c75656e742e696f2f77702d636f6e74656e742f75706c6f6164732f6477675f4d5154542e737667" width="450" data-canonical-src="https://www.confluent.io/wp-content/uploads/dwg_MQTT.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="mysql-debezium/README.md"&gt;MySQL and Debezium&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="mysql-debezium/README.md"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/confluentinc/demo-scene/tree/master/build-a-streaming-pipeline"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;End-to-end streaming ETL with KSQL for stream processing using the &lt;a href="http://debezium.io/docs/connectors/mysql/" rel="nofollow"&gt;Debezium Connector for MySQL&lt;/a&gt; &lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="mysql-debezium/images/ksql-debezium-es.png"&gt;&lt;img src="mysql-debezium/images/ksql-debezium-es.png" width="450" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/confluentinc/demo-scene/tree/master/syslog"&gt;Syslog&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Real-time syslog processing with Apache Kafka and KSQL: filtering logs, event-driven alerting, and enriching events &lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6436ef9d9bca4eaa9d300c713fee0e4be6db8ee6/68747470733a2f2f7777772e636f6e666c75656e742e696f2f77702d636f6e74656e742f75706c6f6164732f6b73716c5f7379736c6f6730312d31303234783235382e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/6436ef9d9bca4eaa9d300c713fee0e4be6db8ee6/68747470733a2f2f7777772e636f6e666c75656e742e696f2f77702d636f6e74656e742f75706c6f6164732f6b73716c5f7379736c6f6730312d31303234783235382e706e67" width="450" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-confluent-platform" class="anchor" aria-hidden="true" href="#confluent-platform"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Confluent Platform&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Demo&lt;/th&gt;
&lt;th&gt;Local&lt;/th&gt;
&lt;th&gt;Docker&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="clients/README.md"&gt;Avro&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="clients/README.md"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;Client applications using Avro and Confluent Schema Registry &lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/92ad363b0e5811b5935c9dc81c37845d9273a0b7/68747470733a2f2f7777772e636f6e666c75656e742e696f2f77702d636f6e74656e742f75706c6f6164732f6477675f536368656d615265675f686f776974776f726b732e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/92ad363b0e5811b5935c9dc81c37845d9273a0b7/68747470733a2f2f7777772e636f6e666c75656e742e696f2f77702d636f6e74656e742f75706c6f6164732f6477675f536368656d615265675f686f776974776f726b732e706e67" width="420" data-canonical-src="https://www.confluent.io/wp-content/uploads/dwg_SchemaReg_howitworks.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="wikipedia/README.md"&gt;CP Demo&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="wikipedia/README.md"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/confluentinc/cp-demo"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://docs.confluent.io/current/tutorials/cp-demo/docs/index.html?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top" rel="nofollow"&gt;Confluent Platform demo&lt;/a&gt; with a playbook for Kafka event streaming ETL deployments &lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/confluentinc/cp-demo/blob/5.3.0-post/docs/images/drawing.png"&gt;&lt;img src="https://github.com/confluentinc/cp-demo/raw/5.3.0-post/docs/images/drawing.png" width="420" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="kubernetes/README.md"&gt;Kubernetes&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;&lt;a href="kubernetes/README.md"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Demonstrations of Confluent Platform deployments using the  &lt;a href="https://docs.confluent.io/current/installation/operator/index.html?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top" rel="nofollow"&gt;Confluent Operator&lt;/a&gt; &lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="kubernetes/gke-base/docs/images/operator.png"&gt;&lt;img src="kubernetes/gke-base/docs/images/operator.png" width="420" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="multi-datacenter/README.md"&gt;Multi Datacenter&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;&lt;a href="multi-datacenter/README.md"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Active-active multi-datacenter design with two instances of Confluent Replicator copying data bidirectionally between the datacenters &lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c0090d428178db34693591175b730b27450002ad/68747470733a2f2f646f63732e636f6e666c75656e742e696f2f63757272656e742f5f696d616765732f6d64632d6c6576656c2d312e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/c0090d428178db34693591175b730b27450002ad/68747470733a2f2f646f63732e636f6e666c75656e742e696f2f63757272656e742f5f696d616765732f6d64632d6c6576656c2d312e706e67" width="420" data-canonical-src="https://docs.confluent.io/current/_images/mdc-level-1.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="cp-quickstart/README.md"&gt;Quickstart&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="cp-quickstart/README.md"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://docs.confluent.io/current/quickstart/ce-docker-quickstart.html#ce-docker-quickstart?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top" rel="nofollow"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Automated version of the &lt;a href="https://docs.confluent.io/current/quickstart.html?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top" rel="nofollow"&gt;Confluent Platform Quickstart&lt;/a&gt; &lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/494b6bf1a80993311d29232f17064ab180ebe677/68747470733a2f2f646f63732e636f6e666c75656e742e696f2f63757272656e742f5f696d616765732f636f6e666c75656e74506c6174666f726d2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/494b6bf1a80993311d29232f17064ab180ebe677/68747470733a2f2f646f63732e636f6e666c75656e742e696f2f63757272656e742f5f696d616765732f636f6e666c75656e74506c6174666f726d2e706e67" width="420" data-canonical-src="https://docs.confluent.io/current/_images/confluentPlatform.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="security/rbac/README.md"&gt;Role-Based Access Control&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Role-based Access Control (RBAC) provides granular privileges for users and service accounts &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/33dd1276d7e43660810d10a9d0997502fe22a623/68747470733a2f2f646f63732e636f6e666c75656e742e696f2f63757272656e742f5f696d616765732f726261632d6f766572766965772e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/33dd1276d7e43660810d10a9d0997502fe22a623/68747470733a2f2f646f63732e636f6e666c75656e742e696f2f63757272656e742f5f696d616765732f726261632d6f766572766965772e706e67" width="450" data-canonical-src="https://docs.confluent.io/current/_images/rbac-overview.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="security/secret-protection/README.adoc"&gt;Secret Protection&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Secret Protection feature encrypts secrets in configuration files &lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/90888c033d0e611f7b73c5df261a109ead6858a1/68747470733a2f2f63646e2e636f6e666c75656e742e696f2f77702d636f6e74656e742f75706c6f6164732f5365637265745f50726f74656374696f6e5f466561747572652e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/90888c033d0e611f7b73c5df261a109ead6858a1/68747470733a2f2f63646e2e636f6e666c75656e742e696f2f77702d636f6e74656e742f75706c6f6164732f5365637265745f50726f74656374696f6e5f466561747572652e6a7067" width="400" data-canonical-src="https://cdn.confluent.io/wp-content/uploads/Secret_Protection_Feature.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="replicator-security/README.md"&gt;Replicator Security&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;&lt;a href="replicator-security/README.md"&gt;Y&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Demos of various security configurations supported by Confluent Replicator and examples of how to implement them &lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/replicator-security.png"&gt;&lt;img src="images/replicator-security.png" width="300" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-build-your-own" class="anchor" aria-hidden="true" href="#build-your-own"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Your Own&lt;/h1&gt;
&lt;p&gt;As a next step, you may want to build your own custom demo or test environment.
We have several resources that launch just the services in Confluent Platform with no pre-configured connectors, data sources, topics, schemas, etc.
Using these as a foundation, you can then add any connectors or applications.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="cp-all-in-one/README.md"&gt;cp-all-in-one&lt;/a&gt;: This Docker Compose file launches all services in Confluent Platform, and runs them in containers in your local host.&lt;/li&gt;
&lt;li&gt;&lt;a href="cp-all-in-one-cloud/README.md"&gt;cp-all-in-one-cloud&lt;/a&gt;: Use this with your pre-configured Confluent Cloud instance. This Docker Compose file launches all services in Confluent Platform (except for the Kafka brokers), runs them in containers in your local host, and automatically configures them to connect to Confluent Cloud.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.confluent.io/current/cli/index.html?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top" rel="nofollow"&gt;Confluent CLI&lt;/a&gt;: For local, non-Docker installs of Confluent Platform. Using this CLI, you can launch all services in Confluent Platform with just one command &lt;code&gt;confluent local start&lt;/code&gt;, and they will all run on your local host.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.confluent.io/blog/easy-ways-generate-test-data-kafka?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top" rel="nofollow"&gt;Generate test data&lt;/a&gt;: "Hello, World!" for launching Confluent Platform, plus different ways to generate more interesting test data for your topics&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additional documentation: &lt;a href="https://docs.confluent.io/current/getting-started.html?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top" rel="nofollow"&gt;Getting Started&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h1&gt;
&lt;p&gt;For local installs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download &lt;a href="https://www.confluent.io/download/?utm_source=github&amp;amp;utm_medium=demo&amp;amp;utm_campaign=ch.examples_type.community_content.top" rel="nofollow"&gt;Confluent Platform 5.3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Env var &lt;code&gt;CONFLUENT_HOME=/path/to/confluentplatform&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Env var &lt;code&gt;PATH&lt;/code&gt; includes &lt;code&gt;$CONFLUENT_HOME/bin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Each demo has its own set of prerequisites as well, documented individually in each demo&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For Docker: demos have been validated with&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/install/" rel="nofollow"&gt;Docker&lt;/a&gt; version 17.06.1-ce&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/compose/install/" rel="nofollow"&gt;Docker Compose&lt;/a&gt; version 1.14.0 with Docker Compose file format 2.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>confluentinc</author><guid isPermaLink="false">https://github.com/confluentinc/examples</guid><pubDate>Tue, 10 Dec 2019 00:04:00 GMT</pubDate></item><item><title>APIJSON/APIJSON #5 in TSQL, This week</title><link>https://github.com/APIJSON/APIJSON</link><description>&lt;p&gt;&lt;i&gt;🏆Gitee Most Valuable Project🚀A JSON Transmission Protocol and an ORM Library for automatically providing APIs and Docs&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1 align="center"&gt;&lt;a id="user-content---apijson" class="anchor" aria-hidden="true" href="#--apijson"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;
  APIJSON
&lt;/h1&gt;
&lt;p align="center"&gt;&lt;g-emoji class="g-emoji" alias="trophy" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3c6.png"&gt;🏆&lt;/g-emoji&gt;码云最有价值开源项目&lt;br&gt;&lt;g-emoji class="g-emoji" alias="rocket" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f680.png"&gt;🚀&lt;/g-emoji&gt;后端接口和文档自动化，前端(客户端) 定制返回JSON的数据和结构！&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a href="https://github.com/TommyLemon/APIJSON/tree/master/MySQL"&gt;&lt;img src="https://camo.githubusercontent.com/c6bb0a1a56f424cc3d8fa15a0eee00bc609bc2ed/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d7953514c2d352e372532422d627269676874677265656e2e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/MySQL-5.7%2B-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/TommyLemon/APIJSON/tree/master/PostgreSQL"&gt;&lt;img src="https://camo.githubusercontent.com/fae9fc9bb6f29d752f8b84a4bb40ab5978717978/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f506f737467726553514c2d392e352532422d627269676874677265656e2e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/PostgreSQL-9.5%2B-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/TommyLemon/APIJSON/tree/master/SQLServer"&gt;&lt;img src="https://camo.githubusercontent.com/8850eae0a2949561fe4d8c005cb6e4c748a3d381/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53514c5365727665722d323031362532422d627269676874677265656e2e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/SQLServer-2016%2B-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/TommyLemon/APIJSON/tree/master/Oracle"&gt;&lt;img src="https://camo.githubusercontent.com/e27732cdf5f80fcadda5e8747e6e30b62fbcf1e5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4f7261636c652d31312532422d627269676874677265656e2e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/Oracle-11%2B-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/TommyLemon/APIJSON/tree/master/MySQL"&gt;&lt;img src="https://camo.githubusercontent.com/ac057ca5185ece14a0c25bbcf595d003fa6ea617/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f546944422d322e312532422d627269676874677265656e2e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/TiDB-2.1%2B-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a href="https://github.com/TommyLemon/APIJSON/tree/master/APIJSON-Java-Server"&gt;&lt;img src="https://camo.githubusercontent.com/5dbd243732ac9b93d60e4de7a12a3bb17c3fd89e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6176612d312e372532422d627269676874677265656e2e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/Java-1.7%2B-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/liaozb/APIJSON.NET"&gt;&lt;img src="https://camo.githubusercontent.com/a79d76ad8b137bbcd97eb28a2ead327889a2f3e8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4353686172702d322e312532422d627269676874677265656e2e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/CSharp-2.1%2B-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/qq547057827/apijson-php"&gt;&lt;img src="https://camo.githubusercontent.com/195e6c2a2a47bbe5a38721033133c8c644452252/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5048502d372e302532422d627269676874677265656e2e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/PHP-7.0%2B-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/kevinaskin/apijson-node"&gt;&lt;img src="https://camo.githubusercontent.com/4ae86a0a078dcb93faa66d98b6ab3f7bf3433a08/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4e6f64652e6a732d4553362532422d627269676874677265656e2e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/Node.js-ES6%2B-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/crazytaxi824/APIJSON"&gt;&lt;img src="https://camo.githubusercontent.com/01b14bed7096d65c3e72347b2ed2bd0b567ab14c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f476f2d312e31322e342532422d627269676874677265656e2e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/Go-1.12.4%2B-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/zhangchunlin/uliweb-apijson"&gt;&lt;img src="https://camo.githubusercontent.com/60fef057f2246514f17d3a69235e0bed744f84b7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f507974686f6e2d332532422d627269676874677265656e2e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/Python-3%2B-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a href="https://github.com/TommyLemon/APIJSON/tree/master/APIJSON-Android"&gt;&lt;img src="https://camo.githubusercontent.com/3cf274cce8c714ed1961b07c5d4a3b8399296291/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f416e64726f69642d342e302532422d627269676874677265656e2e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/Android-4.0%2B-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/TommyLemon/APIJSON/tree/master/APIJSON-iOS"&gt;&lt;img src="https://camo.githubusercontent.com/f4625c473b799cf311f0b49a7e0acc6dfcf8712f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f694f532d372532422d627269676874677265656e2e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/iOS-7%2B-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/TommyLemon/APIJSON/tree/master/APIJSON-JavaScript"&gt;&lt;img src="https://camo.githubusercontent.com/8f93f0940b791af6eee348992359d166ad83e430/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6176615363726970742d4553362532422d627269676874677265656e2e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/JavaScript-ES6%2B-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a href="https://github.com/TommyLemon/APIJSON/blob/master/README-English.md"&gt;English&lt;/a&gt;
  &lt;a href="https://github.com/TommyLemon/APIJSON/blob/master/Document.md"&gt;通用文档&lt;/a&gt;
  &lt;a href="http://i.youku.com/apijson" rel="nofollow"&gt;视频教程&lt;/a&gt;
  &lt;a href="http://apijson.org/auto" rel="nofollow"&gt;在线工具&lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/TommyLemon/APIJSON/master/logo.png"&gt;&lt;img src="https://raw.githubusercontent.com/TommyLemon/APIJSON/master/logo.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;APIJSON是一种专为API而生的 JSON网络传输协议 以及 基于这套协议实现的ORM库。&lt;br&gt;
为 简单的增删改查、复杂的查询、简单的事务操作 提供了完全自动化的API。&lt;br&gt;
能大幅降低开发和沟通成本，简化开发流程，缩短开发周期。&lt;br&gt;
适合中小型前后端分离的项目，尤其是互联网创业项目和企业自用项目。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;通过自动化API，前端可以定制任何数据、任何结构！&lt;br&gt;
大部分HTTP请求后端再也不用写接口了，更不用写文档了！&lt;br&gt;
前端再也不用和后端沟通接口或文档问题了！再也不会被文档各种错误坑了！&lt;br&gt;
后端再也不用为了兼容旧接口写新版接口和文档了！再也不会被前端随时随地没完没了地烦了！&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/TommyLemon/StaticResources/master/APIJSON_GVPAwardCertificate-small.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/TommyLemon/StaticResources/master/APIJSON_GVPAwardCertificate-small.jpg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-特点功能" class="anchor" aria-hidden="true" href="#特点功能"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;特点功能&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-在线解析" class="anchor" aria-hidden="true" href="#在线解析"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;在线解析&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;自动生成接口文档，清晰可读永远最新&lt;/li&gt;
&lt;li&gt;自动校验与格式化，支持高亮和收展&lt;/li&gt;
&lt;li&gt;自动生成各种语言代码，一键下载&lt;/li&gt;
&lt;li&gt;自动管理与测试接口用例，一键共享&lt;/li&gt;
&lt;li&gt;自动给请求JSON加注释，一键切换&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-对于前端" class="anchor" aria-hidden="true" href="#对于前端"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;对于前端&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;不用再向后端催接口、求文档&lt;/li&gt;
&lt;li&gt;数据和结构完全定制，要啥有啥&lt;/li&gt;
&lt;li&gt;看请求知结果，所求即所得&lt;/li&gt;
&lt;li&gt;可一次获取任何数据、任何结构&lt;/li&gt;
&lt;li&gt;能去除重复数据，节省流量提高速度&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-对于后端" class="anchor" aria-hidden="true" href="#对于后端"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;对于后端&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;提供通用接口，大部分API不用再写&lt;/li&gt;
&lt;li&gt;自动生成文档，不用再编写和维护&lt;/li&gt;
&lt;li&gt;自动校验权限、自动管理版本、自动防SQL注入&lt;/li&gt;
&lt;li&gt;开放API无需划分版本，始终保持兼容&lt;/li&gt;
&lt;li&gt;支持增删改查、模糊搜索、正则匹配、远程函数等&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/TommyLemon/StaticResources/master/APIJSON_Auto_get.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/TommyLemon/StaticResources/master/APIJSON_Auto_get.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;
  多表关联查询、结构自由组合、多个测试账号、一键共享测试用例
&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/TommyLemon/StaticResources/master/APIJSON_Auto_code.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/TommyLemon/StaticResources/master/APIJSON_Auto_code.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;
  自动生成封装请求JSON的Android与iOS代码、一键自动生成JavaBean或解析Response的代码
&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/TommyLemon/StaticResources/master/APIJSON_Auto_doc.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/TommyLemon/StaticResources/master/APIJSON_Auto_doc.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;
  自动保存请求记录、自动生成接口文档，可添加常用请求、快捷查看一键恢复
&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/TommyLemon/StaticResources/master/APIJSON_Auto_test.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/TommyLemon/StaticResources/master/APIJSON_Auto_test.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;
  一键自动接口回归测试，不需要写任何代码(注解、注释等全都不要)
&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/TommyLemon/StaticResources/master/APIJSON_Auto_summary.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/TommyLemon/StaticResources/master/APIJSON_Auto_summary.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;
  一图胜前言 - 部分基础功能概览
&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;
[以下Gif图看起来比较卡，实际在手机上App运行很流畅]
&lt;br&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/TommyLemon/StaticResources/master/APIJSON_App_MomentList_Circle.gif"&gt;&lt;img src="https://raw.githubusercontent.com/TommyLemon/StaticResources/master/APIJSON_App_MomentList_Circle.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/TommyLemon/StaticResources/master/APIJSON_App_Moment_Name.gif"&gt;&lt;img src="https://raw.githubusercontent.com/TommyLemon/StaticResources/master/APIJSON_App_Moment_Name.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/TommyLemon/StaticResources/master/APIJSON_App_Moment_Comment.gif"&gt;&lt;img src="https://raw.githubusercontent.com/TommyLemon/StaticResources/master/APIJSON_App_Moment_Comment.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-为什么要用apijson" class="anchor" aria-hidden="true" href="#为什么要用apijson"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;为什么要用APIJSON？&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/TommyLemon/APIJSON/wiki"&gt;前后端 关于接口的 开发、文档、联调 等 10 大痛点解析&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-快速上手" class="anchor" aria-hidden="true" href="#快速上手"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;快速上手&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-1后端部署" class="anchor" aria-hidden="true" href="#1后端部署"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.后端部署&lt;/h4&gt;
&lt;p&gt;可以跳过这个步骤，直接用APIJSON服务器IP地址 apijson.cn:8080 来测试接口。&lt;br&gt;
见  &lt;a href="https://github.com/TommyLemon/APIJSON/tree/master/APIJSON-Java-Server"&gt;APIJSON后端部署 - Java&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-2前端部署" class="anchor" aria-hidden="true" href="#2前端部署"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2.前端部署&lt;/h4&gt;
&lt;p&gt;可以跳过这个步骤，直接使用 &lt;a href="https://github.com/TommyLemon/APIAuto"&gt;APIAuto-自动化接口管理工具&lt;/a&gt; 或 下载客户端App。&lt;br&gt;
见  &lt;a href="https://github.com/TommyLemon/APIJSON/tree/master/APIJSON-Android"&gt;Android&lt;/a&gt;  或  &lt;a href="https://github.com/TommyLemon/APIJSON/tree/master/APIJSON-iOS"&gt;iOS&lt;/a&gt;  或  &lt;a href="https://github.com/TommyLemon/APIJSON/tree/master/APIJSON-JavaScript"&gt;JavaScript&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-下载客户端app" class="anchor" aria-hidden="true" href="#下载客户端app"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;下载客户端App&lt;/h3&gt;
&lt;p&gt;仿微信朋友圈动态实战项目&lt;br&gt;
&lt;a href="http://files.cnblogs.com/files/tommylemon/APIJSONApp.apk" rel="nofollow"&gt;APIJSONApp.apk&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;测试及自动生成代码工具&lt;br&gt;
&lt;a href="http://files.cnblogs.com/files/tommylemon/APIJSONTest.apk" rel="nofollow"&gt;APIJSONTest.apk&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-使用登记" class="anchor" aria-hidden="true" href="#使用登记"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;使用登记&lt;/h3&gt;
&lt;div&gt;
  &lt;a href="http://www.transsion.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a546d2e152f32244493da7d193b40ce36d548a27/687474703a2f2f7777772e7472616e7373696f6e2e636f6d2f7374617469632f696d616765732f6c6f676f2e6a7067" height="90" data-canonical-src="http://www.transsion.com/static/images/logo.jpg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="http://shebaochina.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/12f0cc75192e6e50c908f63ac17ab6375192fbb2/687474703a2f2f73686562616f6368696e612e636f6d2f7374617469632f636e2f696d672f696e6465782f6c6f676f2e706e67" height="90" data-canonical-src="http://shebaochina.com/static/cn/img/index/logo.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="http://www.xmfish.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b7b8ff76a2435bc16b337dc73c0d38f166cb8d5c/687474703a2f2f7777772e786d666973682e636f6d2f696d616765732f6368616e656c2f7777772f665f6c6f676f2e676966" height="90" data-canonical-src="http://www.xmfish.com/images/chanel/www/f_logo.gif" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="http://www.xxwolo.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/70effc036bd21b538a276ab32548386a975040fe/687474703a2f2f696d672e71696368616368612e636f6d2f50726f647563742f61393137666363612d666262312d343461322d613037392d3536393835656266386639632e6a7067" height="90" data-canonical-src="http://img.qichacha.com/Product/a917fcca-fbb1-44a2-a079-56985ebf8f9c.jpg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="http://t-think.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/676b659364b200694c04bbee9107b2358b381be4/687474703a2f2f742d7468696e6b2e636f6d2f696d672f6c6f676f2d312e706e67" height="90" data-canonical-src="http://t-think.com/img/logo-1.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="http://www.8soo.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ab1608776255dbaaeb1d077f3d3fa809d17bf8e2/687474703a2f2f7777312e73696e61696d672e636e2f6c617267652f373536646437323967773166396e35636b757136766a323038393032697438762e6a7067" height="90" data-canonical-src="http://ww1.sinaimg.cn/large/756dd729gw1f9n5ckuq6vj208902it8v.jpg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="http://hh.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c6cff142c23fb22af520cf60e42dd24b0c9442b8/68747470733a2f2f7777772e393830302e636f6d2f696d672f6c6f676f2e706e673f763d3139303332323031" height="90" data-canonical-src="https://www.9800.com/img/logo.png?v=19032201" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="http://www.aipaipai-inc.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5643514aaace0df15247f08c91f4653bada11d18/687474703a2f2f7777772e61697061697061692d696e632e636f6d2f75706c6f616466696c652f75706c6f61642f323031393034323931333430333032392e706e67" height="90" data-canonical-src="http://www.aipaipai-inc.com/uploadfile/upload/2019042913403029.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://www.shulian8.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5fedc699bdb764b0109167c6054714d27f0dd130/68747470733a2f2f626f6f6b73746f72652d70726f642e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f2545352539302538452545352538462542302545392541312542352545392539442541325f30332e706e67" height="90" data-canonical-src="https://bookstore-prod.oss-cn-hangzhou.aliyuncs.com/%E5%90%8E%E5%8F%B0%E9%A1%B5%E9%9D%A2_03.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="http://www.hec-bang.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7653b995e73584d1fb39c76df087c310b472f49e/687474703a2f2f7777772e6865632d62616e672e636f6d2f6173736574732f696d616765732f6c6f676f2d3230307835302e706e67" height="90" data-canonical-src="http://www.hec-bang.com/assets/images/logo-200x50.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;br&gt;
&lt;p&gt;&lt;a href="https://github.com/TommyLemon/APIJSON/issues/73"&gt;更多 APIJSON 使用者&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-贡献者们" class="anchor" aria-hidden="true" href="#贡献者们"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;贡献者们&lt;/h3&gt;
&lt;div&gt;
  &lt;a href="https://github.com/TommyLemon"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/5738175?s=400&amp;amp;u=5b2f372f0c03fae8f249d2d754e38971c2e17b92&amp;amp;v=4" height="72" width="72" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/TommyLemon/APIJSON/pull/41"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/39320217?s=460&amp;amp;v=4" height="72" width="72" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/TommyLemon/APIJSON/pull/43"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/23173448?s=460&amp;amp;v=4" height="72" width="72" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/TommyLemon/APIJSON/pull/47"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/31512287?s=400&amp;amp;v=4" height="72" width="72" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/TommyLemon/APIJSON/pull/70"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/22228201?s=400&amp;amp;v=4" height="72" width="72" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/TommyLemon/APIJSON/pull/74"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/1274536?s=400&amp;amp;v=4" height="72" width="72" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/APIJSON/APIJSON/pull/92"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/6327228?s=400&amp;amp;v=4" height="72" width="72" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/APIJSON/APIJSON/pull/103"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/25990237?s=400&amp;amp;v=4" height="72" width="72" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/TommyLemon/APIJSON/pull/69"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/13880474?s=400&amp;amp;v=4" height="72" width="72" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/TommyLemon/APIJSON/pull/72"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/10663804?s=400&amp;amp;v=4" height="72" width="72" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/TommyLemon/APIJSON/pull/33"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/5328313?s=460&amp;amp;v=4" height="72" width="72" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;a href="https://github.com/liaozb/APIJSON.NET"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/12622501?s=400&amp;amp;v=4" height="72" width="72" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/qq547057827/apijson-php"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/1657532?s=400&amp;amp;v=4" height="72" width="72" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/kevinaskin/apijson-node"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/20034891?s=400&amp;amp;v=4" height="72" width="72" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/TEsTsLA/apijson"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/17310639?s=400&amp;amp;v=4" height="72" width="72" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/zhangchunlin/uliweb-apijson"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/359281?s=400&amp;amp;v=4" height="72" width="72" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/crazytaxi824/APIJSON"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/16500384?s=400&amp;amp;v=4" height="72" width="72" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/luckyxiaomo/APIJSONKOTLIN"&gt;&lt;img src="https://avatars2.githubusercontent.com/u/42728605?s=400&amp;amp;v=4" height="72" width="72" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://gitee.com/zhiyuexin/ApiJsonByJFinal" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/58f0e53a55f4bb8a506df37b92795a456662dbeb/68747470733a2f2f6176617461722e67697465652e636f6d2f75706c6f6164732f39302f3439305f7a686979756578696e2e6a7067216176617461723130303f31333638363634343939" height="72" width="72" data-canonical-src="https://avatar.gitee.com/uploads/90/490_zhiyuexin.jpg!avatar100?1368664499" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/Airforce-1/SpringServer1.2-APIJSON"&gt;&lt;img src="https://avatars3.githubusercontent.com/u/6212428?s=400&amp;amp;v=4" height="72" width="72" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
感谢大家的贡献。
&lt;h3&gt;&lt;a id="user-content-我要赞赏" class="anchor" aria-hidden="true" href="#我要赞赏"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;我要赞赏&lt;/h3&gt;
&lt;p&gt;如果你喜欢 APIJSON，感觉 APIJSON 帮助到了你，可以点右上角 ⭐Star 支持一下，谢谢 ^_^ &lt;br&gt;
你也还可以扫描下面的二维码，赞助点服务器和域名的购买及维护费用，或者请作者喝一杯咖啡~&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/TommyLemon/StaticResources/master/pay/WechatPay.JPG"&gt;&lt;img src="https://raw.githubusercontent.com/TommyLemon/StaticResources/master/pay/WechatPay.JPG" width="240" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/TommyLemon/StaticResources/master/pay/QQPay.JPG"&gt;&lt;img src="https://raw.githubusercontent.com/TommyLemon/StaticResources/master/pay/QQPay.JPG" width="240" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果希望捐赠之后能获得相关的帮助，可以选择加入下面的付费群来取代普通捐赠，可以获得作者的直接帮助。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果在捐赠留言中备注名称，将会被记录到列表中~ 如果你也是 Github 开源作者，&lt;br&gt;
捐赠时可以留下 Github 项目地址或者个人主页地址，链接将会被添加到列表中起到互相推广的作用。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-技术交流" class="anchor" aria-hidden="true" href="#技术交流"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;技术交流&lt;/h3&gt;
&lt;p&gt;如果有什么问题或建议可以 &lt;a href="https://github.com/TommyLemon/APIJSON/issues"&gt;提ISSUE&lt;/a&gt; 或 加群，交流技术，分享经验。&lt;br&gt;
如果你解决了某些bug，或者新增了一些功能，欢迎 &lt;a href="https://github.com/TommyLemon/APIJSON/pulls"&gt;贡献代码&lt;/a&gt;，感激不尽~&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-qq解决群---607020115付费" class="anchor" aria-hidden="true" href="#qq解决群---607020115付费"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;QQ解决群 - 607020115（付费）&lt;/h4&gt;
&lt;p&gt;自开群以来，还是有很多的朋友提出了很多问题，我也解决了很多问题，其中有大半问题是本库的Bug导致，也有些是使用者项目本
身的环境问题，这花费了我大量的时间，经过我的观察和测试，到目前为止，本库的bug已经越来越少，当然不能说完全没有，但是
已经能满足很大部分项目的需求。所以从现在起，我做出一个决定：把之前的讨论群改成解决群，并开启付费入群功能，专为解决大
家在使用本库时遇到的问题，不管是本库bug还是特殊的项目环境导致（包含项目本身的bug）。
我也有自己的工作和娱乐时间，只有大家理解和支持我，我才能专心的为大家解决问题。不过也不用担心，我已经建立了另一个可以免费
进入的QQ讨论群。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-qq讨论群---734652054免费" class="anchor" aria-hidden="true" href="#qq讨论群---734652054免费"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;QQ讨论群 - 734652054（免费）&lt;/h4&gt;
&lt;p&gt;这个群，免费进入，大家可以相互讨论本库的相关使用和出现的问题，群主也会在里面解决问题，如果提出的问题，群成员不能帮助
解决，需要群主解决，但是要花费群主五分钟以上的时间（本库Bug除外），群主将不会解决这个问题，如果项目紧急，请付费进入解
决群解决（不过注意，付费群中群主会很认真很努力的解决问题，但也不能保证已经能完美解决）或者转换使用其他的开源库。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-相关推荐" class="anchor" aria-hidden="true" href="#相关推荐"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;相关推荐&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://my.oschina.net/tommylemon/blog/805459" rel="nofollow"&gt;APIJSON, 让接口和文档见鬼去吧！&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://my.oschina.net/tommylemon/blog/885787" rel="nofollow"&gt;仿QQ空间和微信朋友圈，高解耦高复用高灵活&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://my.oschina.net/tommylemon/blog/1574430" rel="nofollow"&gt;后端开挂:3行代码写出8个接口！&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://my.oschina.net/tommylemon/blog/1576587" rel="nofollow"&gt;后端自动化版本管理，再也不用改URL了！&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://my.oschina.net/tommylemon/blog/889074" rel="nofollow"&gt;3步创建APIJSON后端新表及配置&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/qq_41829492/article/details/88670940" rel="nofollow"&gt;APIJSON 自动化接口和文档的快速开发神器 （一）&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-生态项目" class="anchor" aria-hidden="true" href="#生态项目"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;生态项目&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/TommyLemon/APIAuto"&gt;APIAuto&lt;/a&gt; 自动化接口管理工具，自动生成文档与注释、自动生成代码、自动化回归测试、自动静态检查等&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/vincentCheng/apijson-doc"&gt;apijson-doc&lt;/a&gt; APIJSON 官方文档，提供排版清晰、搜索方便的文档内容展示，包括设计规范、图文教程等&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ruoranw/APIJSONdocs"&gt;APIJSONdocs&lt;/a&gt; APIJSON 英文文档，提供排版清晰的文档内容展示，包括详细介绍、设计规范、使用方式等&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/APIJSON/apijson.org"&gt;apijson.org&lt;/a&gt; APIJSON 官方网站，提供 APIJSON 的 功能简介、登记用户、作者与贡献者、相关链接 等&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/liaozb/APIJSON.NET"&gt;APIJSON.NET&lt;/a&gt; C# 版 APIJSON ，支持 MySQL, PostgreSQL, SQL Server, Oracle, SQLite&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/qq547057827/apijson-php"&gt;apijson-php&lt;/a&gt; PHP 版 APIJSON，基于 ThinkPHP，支持 MySQL, PostgreSQL, SQL Server, Oracle 等&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/kevinaskin/apijson-node"&gt;apijson-node&lt;/a&gt; Node.ts 版 APIJSON，提供 nestjs 和 typeorm 的 Demo，支持 MySQL, PostgreSQL, SQL Server, Oracle&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/TEsTsLA/apijson"&gt;apijson&lt;/a&gt; Node.ts 版 APIJSON，支持 MySQL, PostgreSQL, SQL Server, Oracle, SQLite, MariaDB, WebSQL&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/zhangchunlin/uliweb-apijson"&gt;uliweb-apijson&lt;/a&gt; Python 版 APIJSON，支持 MySQL, PostgreSQL, SQL Server, Oracle, SQLite 等&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/crazytaxi824/APIJSON"&gt;APIJSON&lt;/a&gt; Go 版 APIJSON，功能开发中...&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/luckyxiaomo/APIJSONKOTLIN"&gt;APIJSONKOTLIN&lt;/a&gt; Kotlin 版 APIJSON，基础框架搭建中...&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Zerounary/APIJSONParser"&gt;APIJSONParser&lt;/a&gt; 第三方 APIJSON 解析器，将 JSON 动态解析成 SQL&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitee.com/zhiyuexin/ApiJsonByJFinal" rel="nofollow"&gt;ApiJsonByJFinal&lt;/a&gt; 整合 APIJSON 和 JFinal 的 Demo&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Airforce-1/SpringServer1.2-APIJSON"&gt;SpringServer1.2-APIJSON&lt;/a&gt; 智慧党建服务器端，提供 上传 和 下载 文件的接口&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/APIJSON/AbsGrade"&gt;AbsGrade&lt;/a&gt; 抽象列表分级工具，支持微信朋友圈单层评论、QQ空间双层评论、百度网盘多层(无限层)文件夹等&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/TommyLemon/APIJSON-Android-RxJava"&gt;APIJSON-Android-RxJava&lt;/a&gt; 仿微信朋友圈动态实战项目，ZBLibrary(UI) + APIJSON(HTTP) + RxJava(Data)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/TommyLemon/Android-ZBLibrary"&gt;Android-ZBLibrary&lt;/a&gt; Android MVP快速开发框架，Demo全面，注释详细，使用简单，代码严谨&lt;/p&gt;
&lt;p&gt;感谢热心的作者们的贡献，点 ⭐Star 支持下他们吧。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-持续更新" class="anchor" aria-hidden="true" href="#持续更新"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;持续更新&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/TommyLemon/APIJSON/commits/master"&gt;https://github.com/TommyLemon/APIJSON/commits/master&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-码云主页" class="anchor" aria-hidden="true" href="#码云主页"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;码云主页&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://gitee.com/TommyLemon/APIJSON" rel="nofollow"&gt;https://gitee.com/TommyLemon/APIJSON&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/article&gt;&lt;/div&gt;</description><author>APIJSON</author><guid isPermaLink="false">https://github.com/APIJSON/APIJSON</guid><pubDate>Tue, 10 Dec 2019 00:05:00 GMT</pubDate></item></channel></rss>