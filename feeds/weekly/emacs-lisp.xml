<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Emacs Lisp, This week</title><link>https://github.com/trending/emacs-lisp?since=weekly</link><description>The top repositories on GitHub for emacs-lisp, measured weekly</description><pubDate>Sat, 28 Dec 2019 01:08:15 GMT</pubDate><lastBuildDate>Sat, 28 Dec 2019 01:08:15 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>hlissner/doom-emacs #1 in Emacs Lisp, This week</title><link>https://github.com/hlissner/doom-emacs</link><description>&lt;p&gt;&lt;i&gt;An Emacs configuration for the stubborn martian vimmer&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;a href="http://doomemacs.org" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/d38622bbeea8e0a3a1c42e21d2839363d21b4627/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f686c6973736e65722f646f6f6d2d656d6163732e7376673f6c6162656c3d72656c6561736526636f6c6f723d6f72616e6765" alt="Made with Doom Emacs" data-canonical-src="https://img.shields.io/github/tag/hlissner/doom-emacs.svg?label=release&amp;amp;color=orange" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://emacs.org" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/145199dd89d8ed47968846fe8dcdde64b838ffab/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d6164655f666f722d456d6163735f32362e312b2d626c756576696f6c65742e737667" alt="Made for Emacs 26.1+" data-canonical-src="https://img.shields.io/badge/Made_for-Emacs_26.1+-blueviolet.svg" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/hlissner/doom-emacs/actions"&gt;
  &lt;img src="https://github.com/hlissner/doom-emacs/workflows/CI/badge.svg" alt="Build status: develop" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://discord.gg/bcZ6P3y" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/48087b2da5b43d9130b73e6e8ad3e7b42caa3330/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446973636f72642d626c75652e7376673f6c6f676f3d646973636f7264266c6162656c3d6a6f696e" alt="Join our discord server" align="right" data-canonical-src="https://img.shields.io/badge/Discord-blue.svg?logo=discord&amp;amp;label=join" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/hlissner/doom-emacs/screenshots/main.png"&gt;&lt;img src="https://raw.githubusercontent.com/hlissner/doom-emacs/screenshots/main.png" alt="Doom Emacs Screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;b&gt;&lt;a href="/../../tree/screenshots"&gt;Screenshots&lt;/a&gt;&lt;/b&gt;
  |
  &lt;b&gt;&lt;a href="docs/getting_started.org"&gt;Get started&lt;/a&gt;&lt;/b&gt;
  |
  &lt;b&gt;&lt;a href="docs/contributing.org"&gt;Contribute&lt;/a&gt;&lt;/b&gt;
  |
  &lt;b&gt;&lt;a href="docs/index.org"&gt;Documentation&lt;/a&gt;&lt;/b&gt;
  |
  &lt;b&gt;&lt;a href="docs/faq.org"&gt;FAQ&lt;/a&gt;&lt;/b&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Quick start&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/hlissner/doom-emacs &lt;span class="pl-k"&gt;~&lt;/span&gt;/.emacs.d
&lt;span class="pl-k"&gt;~&lt;/span&gt;/.emacs.d/bin/doom install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-is-doom-emacs"&gt;What is Doom Emacs&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#dooms-mantras"&gt;Doom's mantras&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-help"&gt;Getting Help&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#community"&gt;Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-what-is-doom-emacs" class="anchor" aria-hidden="true" href="#what-is-doom-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is Doom Emacs&lt;/h1&gt;
&lt;a href="http://ultravioletbat.deviantart.com/art/Yay-Evil-111710573" rel="nofollow"&gt;
  &lt;img src="https://github.com/hlissner/doom-emacs/raw/screenshots/cacochan.png" align="right" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;p&gt;It is a story as old as time. A stubborn, shell-dwelling, and melodramatic
vimmer -- envious of the features of modern text editors -- spirals into despair
before succumbing to the &lt;a href="https://github.com/emacs-evil/evil"&gt;dark side&lt;/a&gt;. This is his config.&lt;/p&gt;
&lt;p&gt;Doom is a configuration for &lt;a href="https://www.gnu.org/software/emacs/" rel="nofollow"&gt;GNU Emacs&lt;/a&gt;
designed to make Emacs faster and easier to customize. It can serve as framework
for your own configuration or a resource for fellow Emacs enthusiasts who want
to learn more about our favorite OS.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dooms-mantras" class="anchor" aria-hidden="true" href="#dooms-mantras"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Doom's mantras&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Gotta go fast.&lt;/strong&gt; Startup and run-time performance are high priorities.
Expensive functionality (built-in or in plugins) is modified and optimized
toward this end, otherwise, they must be opt-in.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Close to metal.&lt;/strong&gt; There's less between you and vanilla Emacs, by design.
There's less to grok. Modules should be syntactically sweet and backend logic
explicit and abstraction-light. The code itself ought to be designed as if
grokking it were part of the user experience; and it is!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Opinionated, but not stubborn.&lt;/strong&gt; Doom is a bundle of reasonable defaults
and curated opinions, but you aren't stuck with it. Use as little or as much
of it as you like. Use it as-is as a complete Emacs distribution; disable
everything and use it as a baseline for your own; or anywhere in between.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Your system, your rules.&lt;/strong&gt; There are more ways to set up your programming
environment than there are dislikes on Youtube Rewind '18, so Doom and its
plugins promise not to &lt;em&gt;automatically&lt;/em&gt; (and definitely not &lt;em&gt;silently&lt;/em&gt;) install
system dependencies. This means fonts, packages and programs. &lt;code&gt;doom doctor&lt;/code&gt;
will tell you what's missing though!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A curated set of sane defaults for all packages, all (major) OSes, and Emacs
itself.&lt;/li&gt;
&lt;li&gt;Support for &lt;em&gt;many&lt;/em&gt; programming languages. Too many to list. Includes syntax
highlighting, linters/checker integration, inline code evaluation, code
completion (where possible), REPLs, documentation lookups, snippets, and more!&lt;/li&gt;
&lt;li&gt;Support for &lt;em&gt;many&lt;/em&gt; tools, like docker, pass, ansible, terraform, and more.&lt;/li&gt;
&lt;li&gt;Minimalistic good looks inspired by modern editors.&lt;/li&gt;
&lt;li&gt;A modular architecture for a more organized Emacs configuration.&lt;/li&gt;
&lt;li&gt;A custom elisp library to help you simplify your config.&lt;/li&gt;
&lt;li&gt;A declarative &lt;a href="core/autoload/packages.el"&gt;package management system&lt;/a&gt; (powered by
&lt;a href="https://github.com/raxod502/straight.el"&gt;straight.el&lt;/a&gt;) with a command line interface. Install packages
from anywhere, not just (M)ELPA.&lt;/li&gt;
&lt;li&gt;Vim-emulation powered by &lt;a href="https://github.com/emacs-evil/evil"&gt;evil-mode&lt;/a&gt;, including ports of
popular vim plugins and functionality.&lt;/li&gt;
&lt;li&gt;A Spacemacs-esque &lt;a href="modules/config/default/+evil-bindings.el"&gt;keybinding scheme&lt;/a&gt;, centered around leader
and localleader prefix keys (&lt;kbd&gt;SPC&lt;/kbd&gt; and &lt;kbd&gt;SPC&lt;/kbd&gt;&lt;kbd&gt;m&lt;/kbd&gt;, by
default).&lt;/li&gt;
&lt;li&gt;A rule-based &lt;a href="modules/ui/popup/README.org"&gt;popup management system&lt;/a&gt; that dictates how
temporary or disposable buffers are displayed (and disposed of).&lt;/li&gt;
&lt;li&gt;Automatic indentation detection and &lt;a href="http://editorconfig.org/" rel="nofollow"&gt;editorconfig&lt;/a&gt;
integration. Let someone else argue about tabs vs &lt;strong&gt;_*&lt;strong&gt;spaces&lt;/strong&gt;*_&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Project-management tools and framework-specific minor modes with their own
snippets libraries.&lt;/li&gt;
&lt;li&gt;Project search (and replace) utilities, powered by
&lt;a href="https://github.com/ggreer/the_silver_searcher"&gt;the_silver_searcher&lt;/a&gt; or &lt;a href="https://github.com/BurntSushi/ripgrep"&gt;ripgrep&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Isolated and persistent workspaces (also substitutes for vim tabs).&lt;/li&gt;
&lt;li&gt;An environment variables file generator and loader, so that Emacs can
perfectly inherit your shell configuration.&lt;/li&gt;
&lt;li&gt;Everything is optional!&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;p&gt;We have &lt;a href="https://discord.gg/bcZ6P3y" rel="nofollow"&gt;a Discord server&lt;/a&gt;! Hop on and say hi!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;p&gt;Encountered strange behavior or an error? Here are some things to try before you
shoot off that bug report:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Run &lt;code&gt;bin/doom refresh&lt;/code&gt;. This ensures Doom is properly set up and its autoloads
files are up-to-date.&lt;/li&gt;
&lt;li&gt;If you have byte-compiled your config (with &lt;code&gt;bin/doom compile&lt;/code&gt;), see if
&lt;code&gt;bin/doom clean&lt;/code&gt; makes the issue go away. Never debug issues with a
byte-compiled config, it will make your job harder.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;bin/doom doctor&lt;/code&gt; to detect common issues in your development environment.&lt;/li&gt;
&lt;li&gt;Search Doom's issue tracker for mention of any error messages you've received.&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/faq.org"&gt;Visit our FAQ&lt;/a&gt; to see if your issue is listed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If all else fails, &lt;a href="https://github.com/hlissner/doom-emacs/issues/new"&gt;file that bug report&lt;/a&gt;! Please include the
behavior you've observed, the behavior you expected, and any error messages or
warnings logged to the *Messages* buffer (can be opened with &lt;kbd&gt;SPC h
e&lt;/kbd&gt; or &lt;code&gt;M-x view-echo-area-messages&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;It's a great help if you included a backtrace with errors, i.e. &lt;code&gt;M-x toggle-debug-on-error&lt;/code&gt; then recreating the error(s).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Doom (and my Emacs work in general) is a labor of love and incurable madness,
done on my spare time. If you'd like to support my work, there are many things
you can do to help; I welcome any contribution!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I love pull requests and bug reports. Check out the &lt;a href="docs/contributing.org"&gt;Contributing
Guidelines&lt;/a&gt; to find out how you can help out.&lt;/li&gt;
&lt;li&gt;I welcome Elisp pointers! Don't hesitate to &lt;a href="https://github.com/hlissner/doom-emacs/issues/new"&gt;tell me my Elisp-fu
sucks&lt;/a&gt; (but please tell me why).&lt;/li&gt;
&lt;li&gt;Hop on &lt;a href="https://discord.gg/bcZ6P3y" rel="nofollow"&gt;our Discord server&lt;/a&gt; and say hi! Help others out, hang out
or talk to me about Emacs, or gamedev, or programming, machine learning,
physics, pixel art, anime, gaming -- anything you like. Nourish this lonely
soul!&lt;/li&gt;
&lt;li&gt;If you'd like to support my work financially, consider buying me a drink
through &lt;a href="https://liberapay.com/hlissner/donate" rel="nofollow"&gt;liberapay&lt;/a&gt; or &lt;a href="https://paypal.me/henriklissner/10" rel="nofollow"&gt;paypal&lt;/a&gt;. Donations are a
great help. My work here contends with studies, ventures in indie gamedev, and
my freelance work.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>hlissner</author><guid isPermaLink="false">https://github.com/hlissner/doom-emacs</guid><pubDate>Sat, 28 Dec 2019 00:01:00 GMT</pubDate></item><item><title>emacs-evil/evil #2 in Emacs Lisp, This week</title><link>https://github.com/emacs-evil/evil</link><description>&lt;p&gt;&lt;i&gt;The extensible vi layer for Emacs.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/emacs-evil/evil/master/doc/logo.png"&gt;&lt;img src="https://raw.githubusercontent.com/emacs-evil/evil/master/doc/logo.png" alt="An extensible vi layer for Emacs" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/emacs-evil/evil" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9fc8dff9b4c535f17a789c81937dd32e38822c23/68747470733a2f2f7472617669732d63692e6f72672f656d6163732d6576696c2f6576696c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/emacs-evil/evil.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://melpa.org/#/evil" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bd97222c6e281edeeb067bf6f5926b7c7b16519a/68747470733a2f2f6d656c70612e6f72672f7061636b616765732f6576696c2d62616467652e737667" alt="MELPA" data-canonical-src="https://melpa.org/packages/evil-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://stable.melpa.org/#/evil" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d508a703cde2d4c7f4ac64e5b4bb25d24161bf0c/68747470733a2f2f737461626c652e6d656c70612e6f72672f7061636b616765732f6576696c2d62616467652e737667" alt="MELPA Stable" data-canonical-src="https://stable.melpa.org/packages/evil-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://evil.readthedocs.io/en/latest/?badge=latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5e5f5413354f75f41ad51c9280a6d1bdace0b586/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6576696c2f62616467652f3f76657273696f6e3d6c6174657374" alt="Documentation Status" data-canonical-src="https://readthedocs.org/projects/evil/badge/?version=latest" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.gnu.org/licenses/gpl-3.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bf135a9cea09d0ea4bba410582c0e70ec8222736/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c25323076332d626c75652e737667" alt="License: GPL v3" data-canonical-src="https://img.shields.io/badge/License-GPL%20v3-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Evil is an &lt;strong&gt;e&lt;/strong&gt;xtensible &lt;strong&gt;vi&lt;/strong&gt; &lt;strong&gt;l&lt;/strong&gt;ayer
for &lt;a href="http://www.gnu.org/software/emacs/" rel="nofollow"&gt;Emacs&lt;/a&gt;. It emulates the main features
of &lt;a href="http://www.vim.org/" rel="nofollow"&gt;Vim&lt;/a&gt;, and provides facilities for writing custom
extensions. Also see our page on &lt;a href="http://emacswiki.org/emacs/Evil" rel="nofollow"&gt;EmacsWiki&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;See the
&lt;a href="https://evil.readthedocs.io/en/latest/overview.html#installation-via-package-el" rel="nofollow"&gt;official documentation&lt;/a&gt;
for installation instructions. We recommend using &lt;em&gt;package.el&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;As a quickstart, you can add the following code to your Emacs init
file.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Set up package.el to work with MELPA&lt;/span&gt;
(&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'package&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;add-to-list&lt;/span&gt; &lt;span class="pl-c1"&gt;'package-archives&lt;/span&gt;
             '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;melpa&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://melpa.org/packages&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
(&lt;span class="pl-c1"&gt;package-initialize&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;package-refresh-contents&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Download Evil&lt;/span&gt;
(&lt;span class="pl-k"&gt;unless&lt;/span&gt; (&lt;span class="pl-c1"&gt;package-installed-p&lt;/span&gt; &lt;span class="pl-c1"&gt;'evil&lt;/span&gt;)
  (&lt;span class="pl-c1"&gt;package-install&lt;/span&gt; &lt;span class="pl-c1"&gt;'evil&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Enable Evil&lt;/span&gt;
(&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'evil&lt;/span&gt;)
(evil-mode &lt;span class="pl-c1"&gt;1&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Evil requires Emacs 24.1 or later.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Evil requires &lt;a href="http://www.emacswiki.org/emacs/UndoTree" rel="nofollow"&gt;undo-tree.el&lt;/a&gt; in the
&lt;code&gt;load-path&lt;/code&gt; for linear undo and undo branches.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For the motions &lt;code&gt;g;&lt;/code&gt; &lt;code&gt;g,&lt;/code&gt; and for the last-change-register &lt;code&gt;.&lt;/code&gt;, Evil requires the
&lt;a href="https://github.com/emacs-evil/goto-chg"&gt;goto-chg.el&lt;/a&gt; package,
which provides the functions &lt;code&gt;goto-last-change&lt;/code&gt; and &lt;code&gt;goto-last-change-reverse&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For Emacs 24.1 and 24.2 Evil also requires
&lt;a href="https://elpa.gnu.org/packages/cl-lib.html" rel="nofollow"&gt;cl-lib&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h1&gt;
&lt;p&gt;The latest version of the documentation is readable online
&lt;a href="https://evil.readthedocs.io/en/latest/index.html" rel="nofollow"&gt;here&lt;/a&gt;. It is also
available as
&lt;a href="https://readthedocs.org/projects/evil/downloads/pdf/latest/" rel="nofollow"&gt;PDF&lt;/a&gt; and
as &lt;a href="https://readthedocs.org/projects/evil/downloads/epub/latest/" rel="nofollow"&gt;EPUB&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-mailing-list" class="anchor" aria-hidden="true" href="#mailing-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mailing list&lt;/h1&gt;
&lt;p&gt;Evil is discussed at the
&lt;a href="http://lists.ourproject.org/cgi-bin/mailman/listinfo/implementations-list" rel="nofollow"&gt;gmane.emacs.vim-emulation&lt;/a&gt;
mailing list.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-irc" class="anchor" aria-hidden="true" href="#irc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;IRC&lt;/h1&gt;
&lt;p&gt;Visit us on &lt;code&gt;irc.freenode.net #evil-mode&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contribution" class="anchor" aria-hidden="true" href="#contribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution&lt;/h1&gt;
&lt;p&gt;See
&lt;a href="https://github.com/emacs-evil/evil/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;
for guidelines for issues and pull requests.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>emacs-evil</author><guid isPermaLink="false">https://github.com/emacs-evil/evil</guid><pubDate>Sat, 28 Dec 2019 00:02:00 GMT</pubDate></item><item><title>ch11ng/exwm #3 in Emacs Lisp, This week</title><link>https://github.com/ch11ng/exwm</link><description>&lt;p&gt;&lt;i&gt;Emacs X Window Manager&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-emacs-x-window-manager" class="anchor" aria-hidden="true" href="#emacs-x-window-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Emacs X Window Manager&lt;/h1&gt;
&lt;p&gt;EXWM (Emacs X Window Manager) is a full-featured tiling X window manager
for Emacs built on top of &lt;a href="https://github.com/ch11ng/xelb"&gt;XELB&lt;/a&gt;.
It features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fully keyboard-driven operations&lt;/li&gt;
&lt;li&gt;Hybrid layout modes (tiling &amp;amp; stacking)&lt;/li&gt;
&lt;li&gt;Dynamic workspace support&lt;/li&gt;
&lt;li&gt;ICCCM/EWMH compliance&lt;/li&gt;
&lt;li&gt;(Optional) RandR (multi-monitor) support&lt;/li&gt;
&lt;li&gt;(Optional) Builtin system tray&lt;/li&gt;
&lt;li&gt;(Optional) Builtin input method&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please check out the
&lt;a href="https://github.com/ch11ng/exwm/wiki/Screenshots"&gt;screenshots&lt;/a&gt;
to get an overview of what EXWM is capable of,
and the &lt;a href="https://github.com/ch11ng/exwm/wiki"&gt;user guide&lt;/a&gt;
for a detailed explanation of its usage.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you install EXWM from source, it's recommended to install
XELB also from source (otherwise install both from GNU ELPA).&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ch11ng</author><guid isPermaLink="false">https://github.com/ch11ng/exwm</guid><pubDate>Sat, 28 Dec 2019 00:03:00 GMT</pubDate></item><item><title>emacs-lsp/lsp-mode #4 in Emacs Lisp, This week</title><link>https://github.com/emacs-lsp/lsp-mode</link><description>&lt;p&gt;&lt;i&gt;Emacs client/library for the Language Server Protocol&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="org" data-path="README.org"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://melpa.org/#/lsp-mode" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9af67d09707b47dd26115a48505d481f9dcdd805/68747470733a2f2f6d656c70612e6f72672f7061636b616765732f6c73702d6d6f64652d62616467652e737667" alt="https://melpa.org/packages/lsp-mode-badge.svg" data-canonical-src="https://melpa.org/packages/lsp-mode-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://stable.melpa.org/#/lsp-mode" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7a2cc5cd5fb1a171dde8e45435a353f849853123/68747470733a2f2f737461626c652e6d656c70612e6f72672f7061636b616765732f6c73702d6d6f64652d62616467652e737667" alt="https://stable.melpa.org/packages/lsp-mode-badge.svg" data-canonical-src="https://stable.melpa.org/packages/lsp-mode-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://gitter.im/emacs-lsp/lsp-mode" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/40a1fe7a717b706a101e6e1d917dfdb3f422a8c3/68747470733a2f2f6261646765732e6769747465722e696d2f656d6163732d6c73702f6c73702d6d6f64652e737667" alt="https://badges.gitter.im/emacs-lsp/lsp-mode.svg" data-canonical-src="https://badges.gitter.im/emacs-lsp/lsp-mode.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://travis-ci.org/emacs-lsp/lsp-mode" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5674691682ca175709f1682ede1931f44a188aef/68747470733a2f2f7472617669732d63692e6f72672f656d6163732d6c73702f6c73702d6d6f64652e7376673f6272616e63683d6d6173746572" alt="https://travis-ci.org/emacs-lsp/lsp-mode.svg?branch=master" data-canonical-src="https://travis-ci.org/emacs-lsp/lsp-mode.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="examples/logo.png"&gt;&lt;img src="examples/logo.png" alt="examples/logo.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-language-server-protocol-support-for-emacs" class="anchor" aria-hidden="true" href="#language-server-protocol-support-for-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Language Server Protocol Support for Emacs&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="examples/head.png"&gt;&lt;img src="examples/head.png" alt="examples/head.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="#language-server-protocol-support-for-emacs"&gt;Language Server Protocol Support for Emacs&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="#why"&gt;Why?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#install-via-melpa"&gt;Install via melpa&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#configuration"&gt;Configuration&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#install-language-server"&gt;Install language server&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href="#configure-lsp-mode"&gt;Configure lsp-mode&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href="#vanilla-emacs"&gt;Vanilla Emacs&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#spacemacs"&gt;Spacemacs&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#use-package"&gt;use-package&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#docker"&gt;Docker&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href="#how-does-it-work"&gt;How does it work?&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#supported-languages"&gt;Supported languages&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#commands"&gt;Commands&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#settings"&gt;Settings&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#screenshots"&gt;Screenshots&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#extensions"&gt;Extensions&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#tramp"&gt;TRAMP&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href="#how-does-it-work-1"&gt;How does it work?&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#sample-configuration"&gt;Sample configuration&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#dealing-with-stderr"&gt;Dealing with stderr&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#limitations"&gt;Limitations&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#file-watches"&gt;File watches&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#contributions"&gt;Contributions&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#members"&gt;Members&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#adding-support-for-languages"&gt;Adding support for languages&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#registering-server"&gt;Registering server&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href="#sections"&gt;Sections&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#see-also"&gt;See also&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-why" class="anchor" aria-hidden="true" href="#why"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; &lt;b&gt;Community Driven&lt;/b&gt;&lt;/li&gt;
  &lt;li&gt;&lt;g-emoji class="g-emoji" alias="gem" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f48e.png"&gt;💎&lt;/g-emoji&gt; &lt;b&gt;Fully featured&lt;/b&gt; - supports &lt;b&gt;all&lt;/b&gt; features in Language Server Protocol v3.14.&lt;/li&gt;
  &lt;li&gt;&lt;g-emoji class="g-emoji" alias="rocket" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f680.png"&gt;🚀&lt;/g-emoji&gt; &lt;b&gt;Easy to configure&lt;/b&gt; - works out of the box and automatically upgrades if additional packages are present&lt;/li&gt;
  &lt;li&gt;&lt;g-emoji class="g-emoji" alias="star2" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f31f.png"&gt;🌟&lt;/g-emoji&gt; &lt;b&gt;Flexible&lt;/b&gt; - could be configured as full-blown IDE with flashy UI or minimal distraction free&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;Client for &lt;a href="https://github.com/Microsoft/language-server-protocol/"&gt;Language Server Protocol&lt;/a&gt; (v3.14). &lt;a href="https://github.com/emacs-lsp/lsp-mode"&gt;lsp-mode&lt;/a&gt; aims to provide IDE-like experience by providing optional integration with the most popular Emacs packages like &lt;code&gt;company&lt;/code&gt;, &lt;code&gt;flycheck&lt;/code&gt; and &lt;code&gt;projectile&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Non-blocking asynchronous calls&lt;/li&gt;
  &lt;li&gt;Real-time Diagnostics/linting (via builtin &lt;code&gt;flymake&lt;/code&gt; when Emacs &amp;gt; 26, requires flymake&amp;gt;=1.0.5 or &lt;a href="https://github.com/flycheck/flycheck"&gt;flycheck&lt;/a&gt;/&lt;a href="https://github.com/emacs-lsp/lsp-ui"&gt;lsp-ui&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Code completion - using &lt;a href="https://github.com/tigersoldier/company-lsp"&gt;company-lsp&lt;/a&gt; or builtin &lt;code&gt;completion-at-point&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Hovers - using &lt;a href="https://github.com/emacs-lsp/lsp-ui"&gt;lsp-ui&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Code actions - using &lt;code&gt;lsp-execute-code-action&lt;/code&gt; or &lt;a href="https://github.com/emacs-lsp/lsp-ui"&gt;lsp-ui&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Code outline - using builtin &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Imenu.html" rel="nofollow"&gt;imenu&lt;/a&gt; or &lt;code&gt;helm-imenu&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Code navigation - using builtin &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Xref.html" rel="nofollow"&gt;xref&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Code lens (references/implementations) - using builtin &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Xref.html" rel="nofollow"&gt;xref&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Highlights&lt;/li&gt;
  &lt;li&gt;Formatting&lt;/li&gt;
  &lt;li&gt;Debugger - &lt;a href="https://github.com/yyoncho/dap-mode/"&gt;dap-mode&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Helm integration - &lt;a href="https://github.com/emacs-lsp/helm-lsp/"&gt;helm-lsp&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Ivy integration - &lt;a href="https://github.com/emacs-lsp/lsp-ivy/"&gt;lsp-ivy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Treemacs integration - &lt;a href="https://github.com/emacs-lsp/lsp-treemacs"&gt;lsp-treemacs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Semantic highlighting (as currently implemented by JDT LS and unreleased builds of clangd, cf. &lt;a href="https://github.com/microsoft/vscode-languageserver-node/pull/367"&gt;Semantic highlighting spec&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-install-via-melpa" class="anchor" aria-hidden="true" href="#install-via-melpa"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install via melpa&lt;/h3&gt;
&lt;p&gt;The recommended way to install &lt;code&gt;lsp-mode&lt;/code&gt; is via &lt;code&gt;package.el&lt;/code&gt; - the built-in package manager in Emacs. &lt;code&gt;lsp-mode&lt;/code&gt; is available on the two major &lt;code&gt;package.el&lt;/code&gt; community maintained repos - &lt;a href="http://stable.melpa.org" rel="nofollow"&gt;MELPA Stable&lt;/a&gt; and &lt;a href="http://melpa.org" rel="nofollow"&gt;MELPA&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;M-x &lt;code&gt;package-install&lt;/code&gt; [RET] &lt;code&gt;lsp-mode&lt;/code&gt; [RET]&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-install-language-server" class="anchor" aria-hidden="true" href="#install-language-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install language server&lt;/h3&gt;
&lt;p&gt;Check the table bellow with the list of supported servers and the corresponding instructions on how to install the server.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-configure-lsp-mode" class="anchor" aria-hidden="true" href="#configure-lsp-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configure lsp-mode&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-vanilla-emacs" class="anchor" aria-hidden="true" href="#vanilla-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vanilla Emacs&lt;/h4&gt;
&lt;p&gt;You could go minimal and use &lt;code&gt;lsp-mode&lt;/code&gt; as it is without external packages with the built-in &lt;code&gt;flymake&lt;/code&gt; and &lt;code&gt;completion-at-point&lt;/code&gt; or you could install the following extensions for better experience:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;install &lt;a href="https://github.com/emacs-lsp/lsp-ui"&gt;lsp-ui&lt;/a&gt; for &lt;a href="https://github.com/flycheck/flycheck"&gt;flycheck&lt;/a&gt; integration and higher level UI modules.&lt;/li&gt;
  &lt;li&gt;install &lt;a href="https://github.com/tigersoldier/company-lsp"&gt;company-lsp&lt;/a&gt; if you want to use &lt;code&gt;company-mode&lt;/code&gt; for completion.&lt;/li&gt;
  &lt;li&gt;install &lt;a href="https://github.com/emacs-lsp/lsp-treemacs"&gt;lsp-treemacs&lt;/a&gt; for project wide error overview.&lt;/li&gt;
  &lt;li&gt;install &lt;a href="https://github.com/emacs-lsp/helm-lsp"&gt;helm-lsp&lt;/a&gt; provides on type completion for &lt;code&gt;xref-apropos&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;install &lt;a href="https://github.com/emacs-lsp/dap-mode"&gt;dap-mode&lt;/a&gt; if your language is supported by the debugger.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'lsp-mode&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'XXX-mode-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'lsp&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;where &lt;code&gt;XXX&lt;/code&gt; could be major mode like &lt;code&gt;python&lt;/code&gt;, &lt;code&gt;java&lt;/code&gt;, &lt;code&gt;c++&lt;/code&gt;. Alternatively, if you want to minimize you configuration you may use &lt;code&gt;prog-mode-hook&lt;/code&gt;. In case you do that, &lt;code&gt;lsp&lt;/code&gt; will try to start for each programming mode and echo a message when there is no client registered for the current mode or if the corresponding server is not present. In addition, &lt;code&gt;lsp-mode&lt;/code&gt; will automatically detect and configure &lt;a href="https://github.com/emacs-lsp/lsp-ui"&gt;lsp-ui&lt;/a&gt; and &lt;a href="https://github.com/tigersoldier/company-lsp"&gt;company-lsp&lt;/a&gt;. To turn off that behavior you could set &lt;code&gt;lsp-auto-configure&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To defer LSP server startup (and DidOpen notifications) until the buffer is visible you can use &lt;code&gt;lsp-deferred&lt;/code&gt; instead of &lt;code&gt;lsp&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'XXX-mode-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'lsp-deferred&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-spacemacs" class="anchor" aria-hidden="true" href="#spacemacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spacemacs&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://github.com/emacs-lsp/lsp-mode"&gt;lsp-mode&lt;/a&gt; is included in spacemacs develop branch. Add &lt;code&gt;lsp&lt;/code&gt; to &lt;code&gt;dotspacemacs-configuration-layers&lt;/code&gt; and configure the language that you want to use to be backed by &lt;code&gt;lsp&lt;/code&gt; backend.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-use-package" class="anchor" aria-hidden="true" href="#use-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;use-package&lt;/h4&gt;
&lt;p&gt;Replace &lt;code&gt;(require 'lsp-mode)&lt;/code&gt; with the following if you use use-package.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; lsp-mode
  &lt;span class="pl-c1"&gt;:hook&lt;/span&gt; (XXX-mode &lt;span class="pl-k"&gt;.&lt;/span&gt; lsp)
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; lsp)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; optionally&lt;/span&gt;
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; lsp-ui &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; lsp-ui-mode)
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; company-lsp &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; company-lsp)
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; helm-lsp &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; helm-lsp-workspace-symbol)
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; lsp-treemacs &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; lsp-treemacs-errors-list)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; optionally if you want to use debugger&lt;/span&gt;
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; dap-mode)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; (use-package dap-LANGUAGE) to load the dap adapter for your language&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To defer LSP server startup (and DidOpen notifications) until the buffer is visible you can use &lt;code&gt;lsp-deferred&lt;/code&gt; instead of &lt;code&gt;lsp&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; lsp-mode
  &lt;span class="pl-c1"&gt;:hook&lt;/span&gt; (XXX-mode &lt;span class="pl-k"&gt;.&lt;/span&gt; lsp-deferred)
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; (lsp lsp-deferred))&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-docker" class="anchor" aria-hidden="true" href="#docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker&lt;/h4&gt;
&lt;p&gt;Refer to &lt;a href="https://github.com/emacs-lsp/lsp-docker/"&gt;lsp-docker&lt;/a&gt; README which provide a guide how you can run &lt;code&gt;lsp-mode&lt;/code&gt; in &lt;code&gt;docker&lt;/code&gt; container.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-how-does-it-work" class="anchor" aria-hidden="true" href="#how-does-it-work"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How does it work?&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;lsp-mode&lt;/code&gt; has predefined list of server configurations (loaded in &lt;code&gt;lsp-clients.el&lt;/code&gt;) containing a mapping from &lt;code&gt;major-mode&lt;/code&gt; to the server configuration or by using activation function. In addition to the default server configuration located in &lt;code&gt;lsp-clients.el&lt;/code&gt; there are few languages servers which require separate package(check &lt;a href="#supported-languages"&gt;Supported languages&lt;/a&gt;). When you open a file from a particular project &lt;code&gt;lsp-mode&lt;/code&gt; and call &lt;code&gt;lsp&lt;/code&gt; command &lt;code&gt;lsp-mode&lt;/code&gt; will look for server registrations able to handle current file. If there is such client &lt;code&gt;lsp-mode&lt;/code&gt; will look for the project root. If you open a file from the project for the first time you will be prompted to define the current project root. Once the project root is selected it is saved in &lt;code&gt;lsp-session&lt;/code&gt; file and it will be loaded the next time you start Emacs so you no longer will be asked for a project root when you open a file from that project. Later if you want to change the project root you may use &lt;code&gt;lsp-workspace-folder-remove&lt;/code&gt; to remove the project and call &lt;code&gt;lsp-workspace-folder-add&lt;/code&gt; to add the root. If you want to force starting a particular language server in a file you may use &lt;code&gt;C-u&lt;/code&gt; &lt;code&gt;M-x&lt;/code&gt; &lt;code&gt;lsp&lt;/code&gt; which will prompt you to select language server to start.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-languages" class="anchor" aria-hidden="true" href="#supported-languages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported languages&lt;/h2&gt;
&lt;p&gt;Some of the servers are directly supported by &lt;code&gt;lsp-mode&lt;/code&gt; by requiring
  &lt;code&gt;lsp-clients.el&lt;/code&gt; while others require installing additional packages which provide
  server specific functionality.&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Language&lt;/th&gt;&lt;th&gt;Language Server&lt;/th&gt;&lt;th&gt;Built-in&lt;/th&gt;&lt;th&gt;Installation command&lt;/th&gt;&lt;th&gt;Debugger&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Ada&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/AdaCore/ada_language_server"&gt;ada_language_server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/AdaCore/ada_language_server#install"&gt;Installation instructions&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes (gdb)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Angular&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/angular/vscode-ng-language-service/"&gt;vscode-ng-language-service&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-mode/wiki/Install-Angular-Language-server"&gt;Installation instructions&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Not relevant&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Bash&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/mads-hartmann/bash-language-server"&gt;bash-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm i -g bash-language-server&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C++&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/MaskRay/ccls"&gt;ccls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/MaskRay/emacs-ccls"&gt;emacs-ccls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/MaskRay/ccls"&gt;ccls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes (gdb or lldb)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C++&lt;/td&gt;&lt;td&gt;&lt;a href="https://clang.llvm.org/extra/clangd.html" rel="nofollow"&gt;clangd&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://clang.llvm.org/extra/clangd.html" rel="nofollow"&gt;clangd&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes (gdb or lldb)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C++&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/cquery-project/cquery"&gt;cquery&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/cquery-project/emacs-cquery"&gt;emacs-cquery&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/cquery-project/cquery"&gt;cquery&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes (gdb or lldb)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C#&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/OmniSharp/omnisharp-roslyn"&gt;OmniSharp-Roslyn&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/OmniSharp/omnisharp-roslyn"&gt;OmniSharp-Roslyn&lt;/a&gt;&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Clojure&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/snoe/clojure-lsp"&gt;clojure-lsp&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/snoe/clojure-lsp"&gt;clojure-lisp&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Crystal&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/crystal-lang-tools/scry"&gt;scry&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/crystal-lang-tools/scry"&gt;scry&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;CSS/LessCSS/SASS/SCSS&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/vscode-langservers/vscode-css-languageserver-bin"&gt;css&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm install -g vscode-css-languageserver-bin&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Dart&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/dart-lang/sdk/blob/master/pkg/analysis_server/tool/lsp_spec/README.md"&gt;dart_analysis_server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;built into dart-sdk&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Dockerfile&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/rcjsuen/dockerfile-language-server-nodejs"&gt;dockerfile-language-server-nodejs&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm install -g dockerfile-language-server-nodejs&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Dart&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/natebosch/dart_language_server"&gt;dart_language_server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;pub global activate dart_language_server&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Elixir&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/JakeBecker/elixir-ls"&gt;elixir-ls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/JakeBecker/elixir-ls"&gt;elixir-ls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Elm&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/elm-tooling/elm-language-server"&gt;elmLS&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm i -g @elm-tooling/elm-language-server, or clone the repository and follow installation instructions&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Erlang&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/erlang-ls/erlang_ls"&gt;erlang_ls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/erlang-ls/erlang_ls"&gt;erlang_ls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Eslint&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/Microsoft/vscode-eslint"&gt;eslint&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-mode/wiki/LSP-ESlint-integration"&gt;LSP ESLint Guide&lt;/a&gt;&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;F#&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/fsharp/FsAutoComplete"&gt;fsautocomplete&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Automatic by &lt;a href="https://github.com/emacs-lsp/lsp-mode/blob/master/lsp-fsharp.el"&gt;lsp-fsharp&lt;/a&gt;&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Fortran&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/hansec/fortran-language-server"&gt;fortran-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;pip install fortran-language-server&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Go&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/golang/tools/tree/master/gopls"&gt;gopls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;code&gt;go get golang.org/x/tools/gopls@latest&lt;/code&gt; &lt;a href="https://github.com/golang/tools/blob/master/gopls/doc/user.md#installation"&gt;docs&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Go&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/saibing/bingo"&gt;bingo&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/saibing/bingo/wiki/Install"&gt;bingo&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Groovy&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/palantir/language-servers"&gt;groovy-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/palantir/language-servers"&gt;groovy-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Hack&lt;/td&gt;&lt;td&gt;&lt;a href="https://docs.hhvm.com/hhvm/" rel="nofollow"&gt;hhvm&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://docs.hhvm.com/hhvm/installation/introduction" rel="nofollow"&gt;hhvm&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;HTML&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/vscode-langservers/vscode-html-languageserver"&gt;html&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm install -g vscode-html-languageserver-bin&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Haskell&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/haskell/haskell-ide-engine"&gt;IDE engine&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-haskell"&gt;lsp-haskell&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/haskell/haskell-ide-engine"&gt;IDE engine&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Lua&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/EmmyLua/EmmyLua-LanguageServer"&gt;EmmyLua&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-mode/wiki/Install-EmmyLua-Language-server"&gt;Installation&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Java&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/eclipse/eclipse.jdt.ls"&gt;Eclipse JDT LS&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-java"&gt;lsp-java&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Automatic by &lt;a href="https://github.com/emacs-lsp/lsp-java"&gt;lsp-java&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;JavaScript/TypeScript&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/theia-ide/typescript-language-server"&gt;typescript-language-server&lt;/a&gt;  (recommended)&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm i -g typescript-language-server; npm i -g typescript&lt;/td&gt;&lt;td&gt;Yes (Firefox/Chrome)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;JavaScript/TypeScript&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/sourcegraph/javascript-typescript-langserver"&gt;javascript-typescript-stdio&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm i -g javascript-typescript-langserver&lt;/td&gt;&lt;td&gt;Yes (Firefox/Chrome)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;JavaScript Flow&lt;/td&gt;&lt;td&gt;&lt;a href="https://flow.org" rel="nofollow"&gt;flow&lt;/a&gt; (add-on if working on a Flow file)&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://flow.org" rel="nofollow"&gt;flow&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes (Firefox/Chrome)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Json&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/vscode-langservers/vscode-json-languageserver"&gt;vscode-json-languageserver&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Automatic or manual by &lt;code&gt;npm i -g vscode-json-languageserver&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Julia&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/non-Jedi/lsp-julia"&gt;lsp-julia&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/non-Jedi/lsp-julia"&gt;lsp-julia&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/JuliaEditorSupport/LanguageServer.jl"&gt;LanguageServer.jl&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Kotlin&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/fwcd/KotlinLanguageServer"&gt;kotlin-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/fwcd/KotlinLanguageServer"&gt;kotlin-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;OCaml&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/ocaml-lsp/ocaml-language-server"&gt;ocaml-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/ocaml-lsp/ocaml-language-server"&gt;ocaml-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;OCaml&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/ocaml/ocaml-lsp"&gt;ocaml-lsp-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/ocaml/ocaml-lsp"&gt;ocaml-lsp-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;PHP(recommended)&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/bmewburn/vscode-intelephense"&gt;intelephense&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm i intelephense -g&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;PHP&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/felixfbecker/php-language-server"&gt;php-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/felixfbecker/php-language-server"&gt;php-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Powershell&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/PowerShell/PowerShellEditorServices"&gt;PowerShellEditorServices&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Automatic&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Python&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/palantir/python-language-server"&gt;pyls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;pip install ‘python-language-server[all]’&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Python(Microsoft)&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/Microsoft/python-language-server"&gt;Microsoft Python Language Server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-python-ms"&gt;lsp-python-ms&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-python-ms"&gt;lsp-python-ms&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;R&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/REditorSupport/languageserver"&gt;languageserver&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;install.packages(“languageserver”)&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Ruby&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/castwide/solargraph"&gt;solargraph&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;gem install solargraph&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Rust&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/rust-lang/rls"&gt;rls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/rust-lang/rls"&gt;rls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Rust&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/rust-analyzer/rust-analyzer"&gt;rust-analyzer&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/rust-analyzer/rust-analyzer#language-server-quick-start"&gt;rust-analyzer&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Scala&lt;/td&gt;&lt;td&gt;&lt;a href="https://scalameta.org/metals" rel="nofollow"&gt;Metals&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://scalameta.org/metals/docs/editors/emacs.html" rel="nofollow"&gt;Metals&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Swift&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/apple/sourcekit-lsp"&gt;sourcekit-LSP&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-sourcekit"&gt;lsp-sourcekit&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/apple/sourcekit-lsp"&gt;sourcekit-LSP&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes (via llvm debug adapter)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Terraform&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/juliosueiras/terraform-lsp"&gt;terraform-lsp&lt;/a&gt;&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;Git clone outside of &lt;code&gt;$GOPATH&lt;/code&gt;; go install. (Requires go &amp;gt; 1.11)&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;TeX, LaTeX, etc.&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/astoff/digestif"&gt;Digestif&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;luarocks install –server=&lt;a href="http://luarocks.org/dev" rel="nofollow"&gt;http://luarocks.org/dev&lt;/a&gt; digestif&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Verilog/SystemVerilog&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/suoto/hdl_checker"&gt;hdl_checker&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;pip install hdl-checker –upgrade&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;VHDL&lt;/td&gt;&lt;td&gt;&lt;a href="http://www.vhdltool.com" rel="nofollow"&gt;VHDL Tool&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Download from &lt;a href="http://www.vhdltool.com/download" rel="nofollow"&gt;http://www.vhdltool.com/download&lt;/a&gt;&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Vimscript&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/iamcco/vim-language-server"&gt;vim-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm install -g vim-language-server&lt;/td&gt;&lt;td&gt;n/a&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Vue&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/vuejs/vetur/tree/master/server"&gt;vue-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm install -g vue-language-server&lt;/td&gt;&lt;td&gt;Yes (Firefox/Chrome)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;XML&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/angelozerr/lsp4xml"&gt;lsp4xml&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Download from &lt;a href="https://github.com/angelozerr/lsp4xml/releases"&gt;lsp4xml releases&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;YAML&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/redhat-developer/yaml-language-server"&gt;yaml&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm install -g yaml-language-server&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-commands" class="anchor" aria-hidden="true" href="#commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commands&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;lsp-describe-session&lt;/code&gt; - Display session folders and running servers.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-describe-thing-at-point&lt;/code&gt; - Display help for the thing at point.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-execute-code-action&lt;/code&gt; - Execute code action&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-format-buffer&lt;/code&gt; - Format current buffer&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-organize-imports&lt;/code&gt; - Organize library imports&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-goto-implementation&lt;/code&gt; - Go to implementation&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-goto-type-definition&lt;/code&gt; - Go to type definition&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-rename&lt;/code&gt; - Rename symbol at point&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-restart-workspace&lt;/code&gt; - Restart project&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-symbol-highlight&lt;/code&gt; - Highlight all relevant references to the symbol under point.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-workspace-folders-add&lt;/code&gt; - Add workspace folder&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-workspace-folders-remove&lt;/code&gt; - Remove workspace folder&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-workspace-folders-open&lt;/code&gt; - Open a project directory in dired&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;imenu&lt;/code&gt; or &lt;code&gt;helm-imenu&lt;/code&gt; - display document structure.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;completion-at-point&lt;/code&gt; - display completion using built-in emacs &lt;code&gt;completion-at-point&lt;/code&gt; framework.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-find-definition&lt;/code&gt; - to find the definition for the symbol under point.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-find-references&lt;/code&gt; - Find references for the symbol under point.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-disconnect&lt;/code&gt; - Disconnect the buffer from the language server.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-lens-show&lt;/code&gt; - Show lenses in the current file&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-lens-hide&lt;/code&gt; - Hide lenses in the current file&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-lens-mode&lt;/code&gt;  - Turn on/off lenses in the current file.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-avy-lens&lt;/code&gt; - Click lens using &lt;code&gt;avy&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-signature-activate&lt;/code&gt; - activate signature help. Bound to &lt;code&gt;C-S-SPC&lt;/code&gt; by default.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-signature-next&lt;/code&gt; - show next signature. Bound to &lt;code&gt;M-n&lt;/code&gt; when signature help is activated.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-signature-previous&lt;/code&gt; - show previous signature. Bound to &lt;code&gt;M-p&lt;/code&gt; when signature help is activated.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-signature-stop&lt;/code&gt; - cancel signature help. Bound to &lt;code&gt;C-c C-k&lt;/code&gt; when signature help is activated.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-settings" class="anchor" aria-hidden="true" href="#settings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Settings&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;lsp-log-io&lt;/code&gt; - If non-nil, print all messages to and from the language server to &lt;code&gt;*lsp-log*&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-print-performance&lt;/code&gt; - If non-nil, print performance info. to &lt;code&gt;*lsp-log*&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-inhibit-message&lt;/code&gt; - If non-nil, inhibit the message echo via &lt;code&gt;inhibit-message&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-report-if-no-buffer&lt;/code&gt; - If non nil the errors will be reported even when the file is not open.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-keep-workspace-alive&lt;/code&gt; - If non nil keep workspace alive when the last workspace buffer is closed.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-snippet&lt;/code&gt; - Enable/disable snippet completion support.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-auto-guess-root&lt;/code&gt; - Automatically guess the project root using projectile/project. Do &lt;b&gt;not&lt;/b&gt; use this setting unless you are familiar with &lt;code&gt;lsp-mode&lt;/code&gt; internals and you are sure that all of your projects are following &lt;code&gt;projectile=/=project.el&lt;/code&gt; conventions.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-restart&lt;/code&gt; - Defines how server exited event must be handled.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-session-file&lt;/code&gt; - File where session information is stored.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-auto-configure&lt;/code&gt; - Auto configure &lt;code&gt;lsp-mode&lt;/code&gt;. When set to t &lt;code&gt;lsp-mode&lt;/code&gt; will auto-configure &lt;code&gt;lsp-ui&lt;/code&gt; and &lt;code&gt;company-lsp&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-document-sync-method&lt;/code&gt; - How to sync the document with the language server.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-auto-execute-action&lt;/code&gt; - Auto-execute single action.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-eldoc-render-all&lt;/code&gt; - Display all of the info returned by &lt;code&gt;document/onHover&lt;/code&gt;. If this is nil, &lt;code&gt;eldoc&lt;/code&gt; will show only the symbol information.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-completion-at-point&lt;/code&gt; - Enable &lt;code&gt;completion-at-point&lt;/code&gt; integration.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-xref&lt;/code&gt; - Enable xref integration.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-prefer-flymake&lt;/code&gt; - If you prefer flycheck and &lt;code&gt;lsp-ui-flycheck&lt;/code&gt; is available, &lt;code&gt;(setq lsp-prefer-flymake nil)&lt;/code&gt;. If set to &lt;code&gt;:none&lt;/code&gt; neither of two will be enabled.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-indentation&lt;/code&gt; - Indent regions using the file formatting functionality provided by the language server.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-on-type-formatting&lt;/code&gt; - Enable &lt;code&gt;textDocument/onTypeFormatting&lt;/code&gt; integration.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-before-save-edits&lt;/code&gt; - If non-nil, &lt;code&gt;lsp-mode&lt;/code&gt; will apply edits suggested by the language server before saving a document.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-imenu-show-container-name&lt;/code&gt; - Display the symbol’s container name in an imenu entry.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-imenu-container-name-separator&lt;/code&gt; - Separator string to use to separate the container name from the symbol while displaying imenu entries.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-imenu-sort-methods&lt;/code&gt; - How to sort the imenu items. The value is a list of &lt;code&gt;kind&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt; or &lt;code&gt;position&lt;/code&gt;. Priorities are determined by the index of the element.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-response-timeout&lt;/code&gt; - Number of seconds to wait for a response from the language server before timing out.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-file-watchers&lt;/code&gt; - If non-nil lsp-mode will watch the files in the workspace if the server has requested that.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-server-trace&lt;/code&gt; - Request trace mode on the language server.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-semantic-highlighting&lt;/code&gt; - Enable experimental semantic highlighting support&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-imenu&lt;/code&gt; - If non-nil, automatically enable imenu integration when server provides &lt;code&gt;textDocument/documentSymbol&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-signature-auto-activate&lt;/code&gt; - Auto activate signature when trigger char is pressed.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-signature-render-documentation&lt;/code&gt; - Include signature documentation in signature help.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-text-document-color&lt;/code&gt; - Enable &lt;code&gt;textDocument/documentColor&lt;/code&gt; when server supports it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-screenshots" class="anchor" aria-hidden="true" href="#screenshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshots&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;RUST Completion with company-lsp
    &lt;a target="_blank" rel="noopener noreferrer" href="examples/completion.png"&gt;&lt;img src="examples/completion.png" alt="examples/completion.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Typescript references using lsp-ui
    &lt;a target="_blank" rel="noopener noreferrer" href="examples/references.png"&gt;&lt;img src="examples/references.png" alt="examples/references.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Debugging Python using dap-mode
    &lt;a target="_blank" rel="noopener noreferrer" href="examples/python_debugging.png"&gt;&lt;img src="examples/python_debugging.png" alt="examples/python_debugging.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Call hierarchy via ccls
    &lt;a target="_blank" rel="noopener noreferrer" href="examples/call-hierarchy-ccls.png"&gt;&lt;img src="examples/call-hierarchy-ccls.png" alt="examples/call-hierarchy-ccls.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Metals Doctor
    &lt;a target="_blank" rel="noopener noreferrer" href="examples/metals-doctor.png"&gt;&lt;img src="examples/metals-doctor.png" alt="examples/metals-doctor.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Semantic highlighting as provided by clangd (built from unreleased 10.0 branch). In this screenshot, all other font-locking has been disabled (hence no syntax highlighting of comments or basic keywords such as &lt;code&gt;auto&lt;/code&gt;)
    &lt;a target="_blank" rel="noopener noreferrer" href="examples/clangd_semantic_highlighting.png"&gt;&lt;img src="examples/clangd_semantic_highlighting.png" alt="examples/clangd_semantic_highlighting.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-extensions" class="anchor" aria-hidden="true" href="#extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extensions&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-tramp" class="anchor" aria-hidden="true" href="#tramp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TRAMP&lt;/h3&gt;
&lt;p&gt;LSP mode has support for tramp buffers with the following requirements:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The language server has to be present on the remote server.&lt;/li&gt;
  &lt;li&gt;Having multi folder language server (like &lt;a href="https://github.com/eclipse/eclipse.jdt.ls"&gt;Eclipse JDT LS&lt;/a&gt;) cannot have local and remote workspace folders.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-how-does-it-work-1" class="anchor" aria-hidden="true" href="#how-does-it-work-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How does it work?&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;lsp-mode&lt;/code&gt; detects whether a particular file is located on remote machine and looks for a client which matches current file and it is marked as &lt;code&gt;:remote?&lt;/code&gt; t. Then &lt;code&gt;lsp-mode&lt;/code&gt; starts the client through tramp.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-sample-configuration" class="anchor" aria-hidden="true" href="#sample-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sample configuration&lt;/h4&gt;
&lt;p&gt;Here it is example how you can configure python language server to work when using &lt;code&gt;TRAMP&lt;/code&gt;. Note that if you are trying to convert existing language server configuration you should copy all of it’s properties(e. g. &lt;code&gt;:request-handlers&lt;/code&gt;, &lt;code&gt;activation-fn&lt;/code&gt;, etc).&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(lsp-register-client
 (make-lsp-client &lt;span class="pl-c1"&gt;:new-connection&lt;/span&gt; (lsp-tramp-connection &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;binary-or-full-path&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                  &lt;span class="pl-c1"&gt;:major-modes&lt;/span&gt; '(&lt;span class="pl-c1"&gt;python-mode&lt;/span&gt;)
                  &lt;span class="pl-c1"&gt;:remote?&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
                  &lt;span class="pl-c1"&gt;:server-id&lt;/span&gt; &lt;span class="pl-c1"&gt;'pyls-remote&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-dealing-with-stderr" class="anchor" aria-hidden="true" href="#dealing-with-stderr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dealing with stderr&lt;/h4&gt;
&lt;p&gt;With TRAMP, Emacs does not have an easy way to distinguish stdout and stderr, so when the underlying LSP process writes to stderr, it breaks the &lt;code&gt;lsp-mode&lt;/code&gt; parser. As a workaround, &lt;code&gt;lsp-mode&lt;/code&gt; is redirecting stderr to &lt;code&gt;/tmp/&amp;lt;process-name&amp;gt;-&amp;lt;id&amp;gt;~stderr&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-limitations" class="anchor" aria-hidden="true" href="#limitations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Limitations&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-file-watches" class="anchor" aria-hidden="true" href="#file-watches"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;File watches&lt;/h3&gt;
&lt;p&gt;When some of the workspaces that are active in the current project requests file notifications via &lt;code&gt;workspace/didChangeWatchedFiles&lt;/code&gt; &lt;code&gt;lsp-mode&lt;/code&gt; will start monitoring each of the folders in the workspace for changes. In case your project contains a lot of files you might want to disable file monitoring via &lt;code&gt;lsp-enable-file-watchers&lt;/code&gt; (you may use dir-locals).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributions" class="anchor" aria-hidden="true" href="#contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions&lt;/h2&gt;
&lt;p&gt;Contributions are very much welcome.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-members" class="anchor" aria-hidden="true" href="#members"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Members&lt;/h3&gt;
&lt;p&gt;Here it is a list of the current &lt;code&gt;lsp-mode&lt;/code&gt; members and what they are primary working on/responsible for.&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Member&lt;/th&gt;&lt;th&gt;Responsible for:&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/TOTBWF"&gt;TOTBWF&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;F#&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/brotzeit"&gt;brotzeit&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;Rust&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/dsyzling"&gt;dsyzling&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;Scala&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/kurnevsky"&gt;kurnevsky&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;Scala&lt;/code&gt; &amp;amp; &lt;code&gt;Rust&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/seagle0128"&gt;seagle0128&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;Go&lt;/code&gt; &amp;amp; &lt;code&gt;MS Python Language Server&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/sebastiansturm"&gt;sebastiansturm&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;lsp-mode&lt;/code&gt; core &amp;amp; &lt;code&gt;C++&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/vibhavp"&gt;vibhavp&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;lsp-mode&lt;/code&gt; core&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/yyoncho"&gt;yyoncho&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;lsp-mode&lt;/code&gt; core and &lt;code&gt;Java&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;set &lt;code&gt;lsp-log-io&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt; to inspect communication between client and the server. Use &lt;code&gt;lsp-workspace-show-log&lt;/code&gt; to switch to the corresponding log buffer.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-describe-session&lt;/code&gt; will show the current projects roots + the started severs and allows inspecting the server capabilities.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="examples/describe.png"&gt;&lt;img src="examples/describe.png" alt="examples/describe.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-adding-support-for-languages" class="anchor" aria-hidden="true" href="#adding-support-for-languages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding support for languages&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-registering-server" class="anchor" aria-hidden="true" href="#registering-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Registering server&lt;/h3&gt;
&lt;p&gt;Here it is the minimal configuration that is needed for new language server registration. Refer to the documentation of &lt;code&gt;lsp-client.el&lt;/code&gt; for the additional settings supported on registration time. &lt;code&gt;lsp-language-id-configuration&lt;/code&gt; must be updated to contain the corresponding mode -&amp;gt; language id - in this case &lt;code&gt;(python-mode . "python")&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defvar&lt;/span&gt; &lt;span class="pl-en"&gt;lsp-language-id-configuration&lt;/span&gt;
  '(...
   (&lt;span class="pl-c1"&gt;python-mode&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;python&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
   ...))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; if you are adding the support for your language server in separate repo use&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; (add-to-list 'lsp-language-id-configuration '(python-mode . "python"))&lt;/span&gt;

(lsp-register-client
 (make-lsp-client &lt;span class="pl-c1"&gt;:new-connection&lt;/span&gt; (lsp-stdio-connection &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pyls&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                  &lt;span class="pl-c1"&gt;:major-modes&lt;/span&gt; '(&lt;span class="pl-c1"&gt;python-mode&lt;/span&gt;)
                  &lt;span class="pl-c1"&gt;:server-id&lt;/span&gt; &lt;span class="pl-c1"&gt;'pyls&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the language server supports environment variables to control additional behavior, you can register that by using the &lt;code&gt;:environment-fn&lt;/code&gt; function, like the Bash language client does:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(lsp-register-client
 (make-lsp-client &lt;span class="pl-c1"&gt;:new-connection&lt;/span&gt; (lsp-stdio-connection '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bash-language-server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;start&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
                  &lt;span class="pl-c1"&gt;:major-modes&lt;/span&gt; '(&lt;span class="pl-c1"&gt;sh-mode&lt;/span&gt;)
                  &lt;span class="pl-c1"&gt;:priority&lt;/span&gt; &lt;span class="pl-c1"&gt;-1&lt;/span&gt;
                  &lt;span class="pl-c1"&gt;:environment-fn&lt;/span&gt; (&lt;span class="pl-k"&gt;lambda&lt;/span&gt; ()
                                    ((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;EXPLAINSHELL_ENDPOINT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; lsp-bash-explainshell-endpoint)
                                     (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;HIGHLIGHT_PARSING_ERRORS&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; lsp-bash-highlight-parsing-errors)))
                  &lt;span class="pl-c1"&gt;:server-id&lt;/span&gt; &lt;span class="pl-c1"&gt;'bash-ls&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;lsp-bash-explainshell-endpoint&lt;/code&gt; and &lt;code&gt;lsp-bash-highlight-parsing-errors&lt;/code&gt; are language client &lt;code&gt;defcustom&lt;/code&gt; that expose supported server environment settings in a type-safe way. If you change any of those variables, restart the language server with &lt;code&gt;lsp-restart-workspace&lt;/code&gt; for the changes to be applied.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sections" class="anchor" aria-hidden="true" href="#sections"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sections&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;lsp-mode&lt;/code&gt; provides tools to bridge emacs &lt;code&gt;defcustom&lt;/code&gt; as a language configuration sections properties(see &lt;a href="https://microsoft.github.io/language-server-protocol/specification#workspace_configuration" rel="nofollow"&gt;specification workspace/configuration&lt;/a&gt;). In addition you may use &lt;code&gt;lsp-generate-settings&lt;/code&gt; from &lt;a href="https://github.com/emacs-lsp/lsp-mode/blob/master/scripts/lsp-generate-settings.el"&gt;Generate Settings script&lt;/a&gt; to generate &lt;code&gt;defcustom&lt;/code&gt; from &lt;code&gt;package.json&lt;/code&gt; VScode plugin manifest. Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defcustom&lt;/span&gt; &lt;span class="pl-en"&gt;lsp-foo-language-server-property&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Demo property.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:group&lt;/span&gt; &lt;span class="pl-c1"&gt;'foo-ls&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:risky&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)

(lsp-register-custom-settings '((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo.section.property&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; lsp-foo-language-server-property)))

(lsp-configuration-section  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt;  (("foo" ("settings" ("property" . "bar"))))&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;How do I troubleshoot “Server FOO-LS:pid exited with status signal. Do you want to restart it? (y or n)”?
    &lt;ul&gt;
      &lt;li&gt;This message indicates that the language server has crashed for some
        reason. You may check the server stderr which is &lt;code&gt;*FOO-LS::stderr*&lt;/code&gt;. If
        you get this message on startup you may try to run the exact command that
        &lt;code&gt;lsp-mode&lt;/code&gt; is running in the terminal. You may find it in &lt;code&gt;*lsp-log*&lt;/code&gt;
        buffer.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;How to configure a server with local variables?
    &lt;ul&gt;
      &lt;li&gt;Add &lt;code&gt;lsp&lt;/code&gt; server call to &lt;code&gt;hack-local-variables-hook&lt;/code&gt; which runs right after the local variables are loaded.
        &lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'hack-local-variables-hook&lt;/span&gt;
          (&lt;span class="pl-k"&gt;lambda&lt;/span&gt; () (&lt;span class="pl-k"&gt;when&lt;/span&gt; (&lt;span class="pl-c1"&gt;derived-mode-p&lt;/span&gt; &lt;span class="pl-c1"&gt;'XXX-mode&lt;/span&gt;) (lsp))))
        &lt;/pre&gt;&lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;I have multiple language servers registered for language FOO. Which one will be used when opening a project?
    &lt;ul&gt;
      &lt;li&gt;The one with highest priority wins. &lt;code&gt;lsp-clients.el&lt;/code&gt; predefined servers have
        priority -1, lower than external packages (priority 0 if unspecified). If a
        server is registered with &lt;code&gt;:add-on?&lt;/code&gt; flag set to &lt;code&gt;t&lt;/code&gt; it will be started in
        parallel to the other servers that are registered for the current mode.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;I have multiple language servers for language &lt;code&gt;FOO&lt;/code&gt; and I want to select the server per project, what can I do?
    &lt;ul&gt;
      &lt;li&gt;You may create &lt;code&gt;dir-local&lt;/code&gt; for each of the projects and specify list of
        &lt;code&gt;lsp-enabled-clients&lt;/code&gt;. This will narrow the list of the clients that are
        going to be tested for the project.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The completion does not work fine and inserts arguments and placeholders, what I am doing wrong?
    &lt;ul&gt;
      &lt;li&gt;Snippet support works only with &lt;code&gt;company-lsp&lt;/code&gt; so if you are using
        &lt;code&gt;completion-at-point&lt;/code&gt; the snippets won’t be expanded and you should
        either disable them by setting &lt;code&gt;lsp-enable-snippet&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; or you
        should switch to &lt;code&gt;company-lsp&lt;/code&gt;. Note also that &lt;code&gt;company-tng&lt;/code&gt; frontend
        does not support snippet expansion(see &lt;a href="https://github.com/company-mode/company-mode/issues/891"&gt;company-mode#891&lt;/a&gt;)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;How to automatically follow &lt;code&gt;lsp-ui-log&lt;/code&gt;?
    &lt;ul&gt;
      &lt;li&gt;Go into the log buffer and execute the following snippet(source: &lt;a href="https://stackoverflow.com/questions/12663061/emacs-auto-scrolling-log-buffer" rel="nofollow"&gt;Emacs auto scrolling log buffer&lt;/a&gt;)&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;set&lt;/span&gt; (&lt;span class="pl-c1"&gt;make-local-variable&lt;/span&gt; &lt;span class="pl-c1"&gt;'window-point-insertion-type&lt;/span&gt;) &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
    &lt;/pre&gt;&lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;I am getting “Package ‘spinner-1.7.3’ is unavailable” when trying to install &lt;code&gt;lsp-mode&lt;/code&gt;.
    &lt;ul&gt;
      &lt;li&gt;This is caused by GPG keys used by the ELPA package manager not being up
        to date. You may fix by installing: &lt;a href="https://elpa.gnu.org/packages/gnu-elpa-keyring-update.html" rel="nofollow"&gt;gnu-elpa-keyring-update&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Json completion doesn’t seem working?
    &lt;ul&gt;
      &lt;li&gt;The latest &lt;a href="https://www.npmjs.com/package/vscode-json-languageserver/v/1.2.2" rel="nofollow"&gt;vscode-json-languageserver&lt;/a&gt; is broken. You will need to install the earlier version of it &lt;code&gt;npm i vscode-json-languageserver@1.2.1&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-see-also" class="anchor" aria-hidden="true" href="#see-also"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;See also&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/emacs-lsp/lsp-docker/"&gt;lsp-docker&lt;/a&gt; - provide docker image with preconfigured language servers with corresponding emacs configuration.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/sebastiencs/company-box/"&gt;company-box&lt;/a&gt; - &lt;code&gt;company&lt;/code&gt; frontend with icons.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/emacs-lsp/dap-mode"&gt;dap-mode&lt;/a&gt; - Debugger integration for &lt;code&gt;lsp-mode&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/joaotavora/eglot"&gt;eglot&lt;/a&gt; - An alternative minimal LSP implementation.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>emacs-lsp</author><guid isPermaLink="false">https://github.com/emacs-lsp/lsp-mode</guid><pubDate>Sat, 28 Dec 2019 00:04:00 GMT</pubDate></item><item><title>hlissner/emacs-doom-themes #5 in Emacs Lisp, This week</title><link>https://github.com/hlissner/emacs-doom-themes</link><description>&lt;p&gt;&lt;i&gt;An opinionated pack of modern color-themes&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a918642e7742aa7f5aae9e686f48e79bd1a96cb0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f686c6973736e65722f656d6163732d646f6f6d2d7468656d65732e7376673f6c6162656c3d72656c65617365267374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/a918642e7742aa7f5aae9e686f48e79bd1a96cb0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f686c6973736e65722f656d6163732d646f6f6d2d7468656d65732e7376673f6c6162656c3d72656c65617365267374796c653d666c61742d737175617265" alt="Release tag" data-canonical-src="https://img.shields.io/github/tag/hlissner/emacs-doom-themes.svg?label=release&amp;amp;style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://melpa.org/#/doom-themes" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/621f359fdf4553c5252a571785de56a85d53010b/687474703a2f2f6d656c70612e6f72672f7061636b616765732f646f6f6d2d7468656d65732d62616467652e7376673f7374796c653d666c61742d737175617265" alt="MELPA" data-canonical-src="http://melpa.org/packages/doom-themes-badge.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/hlissner/emacs-doom-themes" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/987575e312ca7a4f68f417530468a5f6e190cccf/68747470733a2f2f7472617669732d63692e6f72672f686c6973736e65722f656d6163732d646f6f6d2d7468656d65732e7376673f6272616e63683d6d6173746572267374796c653d666c61742d737175617265" alt="Build Status" data-canonical-src="https://travis-ci.org/hlissner/emacs-doom-themes.svg?branch=master&amp;amp;style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="./LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/95e854794a291423fe200ec681d09ed63f9fadd1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d677265656e2e7376673f7374796c653d666c61742d737175617265" alt="MIT" data-canonical-src="https://img.shields.io/badge/license-MIT-green.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-doom-themes" class="anchor" aria-hidden="true" href="#doom-themes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;doom-themes&lt;/h1&gt;
&lt;p&gt;DOOM Themes is an opinionated UI plugin and pack of themes extracted from my
&lt;a href="https://github.com/hlissner/.emacs.d"&gt;emacs.d&lt;/a&gt;, inspired by some of my favorite color themes.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/hlissner/emacs-doom-themes/tree/screenshots"&gt;See the screenshots.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#theme-list"&gt;Theme list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#install"&gt;Install&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#doom-emacs"&gt;Doom Emacs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#manually"&gt;Manually&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#common-issues"&gt;Common Issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contribute"&gt;Contribute&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-theme-list" class="anchor" aria-hidden="true" href="#theme-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Theme list&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Flagship themes
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-one&lt;/code&gt;: doom-themes' flagship theme, inspired by &lt;a href="http://atom.io" rel="nofollow"&gt;Atom&lt;/a&gt;'s One Dark themes&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-one-light&lt;/code&gt;: light version of doom-one (thanks to &lt;a href="https://github.com/ztlevi"&gt;ztlevi&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-vibrant&lt;/code&gt;: a slightly more vibrant version of &lt;code&gt;doom-one&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Additional themes
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-acario-dark&lt;/code&gt;: an original dark theme (thanks to &lt;a href="https://github.com/gagbo"&gt;gagbo&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-acario-light&lt;/code&gt;: an original light theme (thanks to &lt;a href="https://github.com/gagbo"&gt;gagbo&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-city-lights&lt;/code&gt;: based on Atom's &lt;a href="http://citylights.xyz/" rel="nofollow"&gt;City lights&lt;/a&gt; (thanks to &lt;a href="https://github.com/fuxialexander"&gt;fuxialexander&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-challenger-deep&lt;/code&gt;: based on Vim's &lt;a href="https://github.com/challenger-deep-theme/vim"&gt;Challenger deep&lt;/a&gt; theme (thanks to &lt;a href="https://github.com/fuxialexander"&gt;fuxialexander&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-dracula&lt;/code&gt;: an implementation of &lt;a href="https://draculatheme.com/" rel="nofollow"&gt;Dracula&lt;/a&gt; theme (thanks to &lt;a href="https://github.com/fuxialexander"&gt;fuxialexander&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-fairy-floss&lt;/code&gt;: a candy colored Sublime theme by &lt;a href="https://sailorhg.github.io/fairyfloss/" rel="nofollow"&gt;sailorhg&lt;/a&gt; (thanks to &lt;a href="https://github.com/ema2159"&gt;ema2159&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-gruvbox&lt;/code&gt;: adapted from Mohretz's &lt;a href="https://github.com/morhetz/gruvbox"&gt;Gruvbox&lt;/a&gt; (thanks to &lt;a href="https://github.com/JongW"&gt;JongW&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-Iosvkem&lt;/code&gt;: adapted from &lt;a href="https://github.com/neutaaaaan/iosvkem"&gt;Iosvkem&lt;/a&gt; (thanks to &lt;a href="https://github.com/neutaaaaan"&gt;neutaaaaan&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-laserwave&lt;/code&gt;: an clean 80's synthwave / outrun theme inspired by VS Code's &lt;a href="https://github.com/Jaredk3nt/laserwave"&gt;laserwave&lt;/a&gt; (thanks to &lt;a href="https://github.com/hyakt"&gt;hyakt&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-molokai&lt;/code&gt;: based on Textmate's monokai&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-moonlight&lt;/code&gt; ported from VS Code's &lt;a href="https://github.com/atomiks/moonlight-vscode-theme"&gt;Moonlight Theme&lt;/a&gt; (thanks to &lt;a href="https://github.com/Brettm12345"&gt;Brettm12345&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-nord-light&lt;/code&gt;: light variant of &lt;a href="https://www.nordtheme.com/" rel="nofollow"&gt;Nord&lt;/a&gt; (thanks to &lt;a href="https://github.com/fuxialexander"&gt;fuxialexander&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-nova&lt;/code&gt;: adapted from &lt;a href="https://trevordmiller.com/projects/nova" rel="nofollow"&gt;Nova&lt;/a&gt; (thanks to &lt;a href="https://github.com/bigardone"&gt;bigardone&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-oceanic-next&lt;/code&gt;: adapted from &lt;a href="https://github.com/voronianski/oceanic-next-color-scheme"&gt;Oceanic Next&lt;/a&gt; theme (thanks to &lt;a href="https://github.com/juanwolf"&gt;juanwolf&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-opera&lt;/code&gt;: an original dark theme (thanks to &lt;a href="https://github.com/jwintz"&gt;jwintz&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-opera-light&lt;/code&gt;: an original light theme (thanks to &lt;a href="https://github.com/jwintz"&gt;jwintz&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-outrun-electric&lt;/code&gt;: a neon colored theme inspired in VS Code's &lt;a href="https://github.com/samrap/outrun-theme-vscode"&gt;Outrun Electric&lt;/a&gt; (thanks to &lt;a href="https://github.com/ema2159"&gt;ema2159&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-palenight&lt;/code&gt; adapted from &lt;a href="https://github.com/equinusocio/vsc-material-theme"&gt;Material Themes&lt;/a&gt; (thanks to &lt;a href="https://github.com/Brettm12345"&gt;Brettm12345&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-peacock&lt;/code&gt;: based on Peacock from &lt;a href="http://daylerees.github.io/" rel="nofollow"&gt;daylerees' themes&lt;/a&gt; (thanks to &lt;a href="https://github.com/teesloane"&gt;teesloane&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-snazzy&lt;/code&gt;: a dark theme inspired in Atom's &lt;a href="https://github.com/sindresorhus/hyper-snazzy"&gt;Hyper Snazzy&lt;/a&gt; (thanks to &lt;a href="https://github.com/ar1a"&gt;ar1a&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-solarized-dark&lt;/code&gt;: dark variant of &lt;a href="http://ethanschoonover.com/solarized" rel="nofollow"&gt;Solarized&lt;/a&gt; (thanks to &lt;a href="https://github.com/ema2159"&gt;ema2159&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-solarized-light&lt;/code&gt;: light variant of &lt;a href="http://ethanschoonover.com/solarized" rel="nofollow"&gt;Solarized&lt;/a&gt; (thanks to &lt;a href="https://github.com/fuxialexander"&gt;fuxialexander&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-sourcerer&lt;/code&gt;: based on &lt;a href="https://github.com/xero/sourcerer.vim"&gt;Sourcerer&lt;/a&gt; (thanks to &lt;a href="https://github.com/defphil"&gt;defphil&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-spacegrey&lt;/code&gt;: &lt;a href="http://kkga.github.io/spacegray/" rel="nofollow"&gt;I'm sure you've heard of it&lt;/a&gt; (thanks to &lt;a href="https://github.com/teesloane"&gt;teesloane&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-tomorrow-day&lt;/code&gt;: &lt;a href="https://github.com/ChrisKempson/Tomorrow-Theme"&gt;Tomorrow&lt;/a&gt;'s light variant (thanks to &lt;a href="https://github.com/emacswatcher"&gt;emacswatcher&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-tomorrow-night&lt;/code&gt;: one of the dark variants of &lt;a href="https://github.com/ChrisKempson/Tomorrow-Theme"&gt;Tomorrow&lt;/a&gt; (thanks to &lt;a href="https://github.com/emacswatcher"&gt;emacswatcher&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-wilmersdorf&lt;/code&gt;: port of Ian Pan's &lt;a href="https://github.com/ianpan870102/wilmersdorf-emacs-theme"&gt;Wilmersdorf&lt;/a&gt; (thanks to &lt;a href="https://github.com/ema2159"&gt;ema2159&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; &lt;code&gt;doom-mono-dark&lt;/code&gt; / &lt;code&gt;doom-mono-light&lt;/code&gt;: a minimalistic, monochromatic theme&lt;/p&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;
&lt;p&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; &lt;code&gt;doom-tron&lt;/code&gt;: based on Tron Legacy from &lt;a href="http://daylerees.github.io/" rel="nofollow"&gt;daylerees' themes&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;(doom-themes-visual-bell-config)&lt;/code&gt;: flash the mode-line when the Emacs bell
rings (i.e. an error occurs).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;(doom-themes-neotree-config)&lt;/code&gt;: a &lt;a href="https://github.com/jaypei/emacs-neotree"&gt;neotree&lt;/a&gt; theme that takes after &lt;a href="http://atom.io" rel="nofollow"&gt;Atom&lt;/a&gt;'s
file drawer, and is simpler than the built in icon theme in neotree
(&lt;a href="/../screenshots/doom-one.png"&gt;screenshot&lt;/a&gt;, &lt;a href="https://github.com/hlissner/emacs-doom-themes/wiki"&gt;more details&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This requires &lt;code&gt;all-the-icons&lt;/code&gt;' fonts to be installed: &lt;code&gt;M-x all-the-icons-install-fonts&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;(doom-themes-treemacs-config)&lt;/code&gt;: two &lt;a href="https://github.com/Alexander-Miller/treemacs"&gt;treemacs&lt;/a&gt; icon themes, one that takes after
&lt;a href="http://atom.io" rel="nofollow"&gt;Atom&lt;/a&gt;'s, and a second more colorful implementation (WIP).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;(doom-themes-org-config)&lt;/code&gt;: corrects and improves some of org-mode's native
fontification.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Re-set &lt;code&gt;org-todo' &amp;amp; &lt;/code&gt;org-headline-done' faces to make them respect
underlying faces (i.e. don't override the :height or :background of
underlying faces).&lt;/li&gt;
&lt;li&gt;Make statistic cookies respect underlying faces.&lt;/li&gt;
&lt;li&gt;Fontify item bullets (make them stand out)&lt;/li&gt;
&lt;li&gt;Fontify item checkboxes (and when they're marked done), like TODOs that
are marked done.&lt;/li&gt;
&lt;li&gt;Fontify dividers/separators (5+ dashes)&lt;/li&gt;
&lt;li&gt;Fontify #hashtags and @at-tags, for personal convenience; see
&lt;code&gt;doom-org-special-tags&lt;/code&gt; to disable this.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Resources that may interest you:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To get dimmed sidebars and brighter source buffers (like in the
&lt;a href="https://github.com/hlissner/emacs-doom-themes/tree/screenshots"&gt;screenshots&lt;/a&gt;), see &lt;a href="https://github.com/hlissner/emacs-solaire-mode"&gt;solaire-mode&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To get line number highlighting for &lt;code&gt;nlinum&lt;/code&gt;, set
&lt;code&gt;nlinum-highlight-current-line&lt;/code&gt; to non-nil (or see &lt;a href="https://melpa.org/#/hlinum" rel="nofollow"&gt;hlinum&lt;/a&gt; for &lt;code&gt;linum&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnthonyDiGirolamo"&gt;AnthonyDiGirolamo&lt;/a&gt; added doom-one (&lt;a href="https://github.com/AnthonyDiGirolamo/airline-themes/raw/master/screenshots/airline-doom-one-theme.png"&gt;screenshot&lt;/a&gt;) and
doom-molokai (&lt;a href="https://github.com/AnthonyDiGirolamo/airline-themes/raw/master/screenshots/airline-doom-molokai-theme.png"&gt;screenshot&lt;/a&gt;) skins to
&lt;a href="https://github.com/AnthonyDiGirolamo/airline-themes"&gt;airline-themes&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I'm working on making my modeline more accessible. In the meantime, check
out &lt;a href="https://github.com/hlissner/.emacs.d/blob/master/modules/ui/doom-modeline/config.el"&gt;my mode-line configuration&lt;/a&gt; in my &lt;a href="https://github.com/hlissner/.emacs.d"&gt;emacs.d&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-doom-emacs" class="anchor" aria-hidden="true" href="#doom-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Doom Emacs&lt;/h3&gt;
&lt;p&gt;The built-in &lt;code&gt;:ui doom&lt;/code&gt; module installs &lt;code&gt;doom-themes&lt;/code&gt; for you, and loads
&lt;code&gt;doom-one&lt;/code&gt; by default. You can change the theme by changing the &lt;code&gt;doom-theme&lt;/code&gt;
variable from &lt;code&gt;~/.doom.d/config.el&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-theme &lt;span class="pl-c1"&gt;'doom-city-lights&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or by loading it manually:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;load-theme&lt;/span&gt; &lt;span class="pl-c1"&gt;'doom-city-lights&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-manually" class="anchor" aria-hidden="true" href="#manually"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;doom-themes&lt;/code&gt; is available on MELPA.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/raxod502/straight.el"&gt;Straight&lt;/a&gt; users can install it with
&lt;code&gt;M-x straight-use-package RET doom-themes&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;And package.el users: &lt;code&gt;M-x package-install RET doom-themes&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here is a example configuration for &lt;code&gt;doom-theme&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; doom-themes
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Global settings (defaults)&lt;/span&gt;
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-themes-enable-bold &lt;span class="pl-c1"&gt;t&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; if nil, bold is universally disabled&lt;/span&gt;
        doom-themes-enable-italic &lt;span class="pl-c1"&gt;t&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; if nil, italics is universally disabled&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;load-theme&lt;/span&gt; &lt;span class="pl-c1"&gt;'doom-one&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Enable flashing mode-line on errors&lt;/span&gt;
  (doom-themes-visual-bell-config)
  
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Enable custom neotree theme (all-the-icons must be installed!)&lt;/span&gt;
  (doom-themes-neotree-config)
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; or for treemacs users&lt;/span&gt;
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-themes-treemacs-theme &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;doom-colors&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; use the colorful treemacs theme&lt;/span&gt;
  (doom-themes-treemacs-config)
  
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Corrects (and improves) org-mode's native fontification.&lt;/span&gt;
  (doom-themes-org-config))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://github.com/hlissner/emacs-doom-themes/wiki"&gt;The wiki contains details for customizing the neotree theme&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-common-issues" class="anchor" aria-hidden="true" href="#common-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Common Issues&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If you use &lt;code&gt;nlinum&lt;/code&gt; or &lt;code&gt;linum&lt;/code&gt; in org-mode, the larger headline sizes in some
themes &lt;a href="https://github.com/hlissner/emacs-doom-themes/issues/86"&gt;could bleed into the line numbers&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Fix this by setting :height explicitly for your line number plugins, after
you've loaded the theme. e.g.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; ((height (&lt;span class="pl-c1"&gt;face-attribute&lt;/span&gt; &lt;span class="pl-c1"&gt;'default&lt;/span&gt; &lt;span class="pl-c1"&gt;:height&lt;/span&gt;)))
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; for all linum/nlinum users&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;set-face-attribute&lt;/span&gt; &lt;span class="pl-c1"&gt;'linum&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;:height&lt;/span&gt; height)
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; only for &lt;span class="pl-smi"&gt;`linum-relative'&lt;/span&gt; users:&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;set-face-attribute&lt;/span&gt; &lt;span class="pl-c1"&gt;'linum-relative-current-face&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;:height&lt;/span&gt; height)
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; only for &lt;span class="pl-smi"&gt;`nlinum-relative'&lt;/span&gt; users:&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;set-face-attribute&lt;/span&gt; &lt;span class="pl-c1"&gt;'nlinum-relative-current-face&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;:height&lt;/span&gt; height))&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contribute" class="anchor" aria-hidden="true" href="#contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribute&lt;/h2&gt;
&lt;p&gt;I welcome contributions of any kind, be they pull requests, bug reports or elisp
pointers. Additional theme and plugin support requests are welcome too.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>hlissner</author><guid isPermaLink="false">https://github.com/hlissner/emacs-doom-themes</guid><pubDate>Sat, 28 Dec 2019 00:05:00 GMT</pubDate></item><item><title>abo-abo/swiper #6 in Emacs Lisp, This week</title><link>https://github.com/abo-abo/swiper</link><description>&lt;p&gt;&lt;i&gt;Ivy - a generic completion frontend for Emacs, Swiper - isearch with an overview, and more. Oh, man!&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/abo-abo/swiper" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f13930412aac3d15215dad01d52b6c731292e8d1/68747470733a2f2f7472617669732d63692e6f72672f61626f2d61626f2f7377697065722e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/abo-abo/swiper.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;flexible, simple tools for minibuffer completion in Emacs&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This repository contains:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ivy&lt;/strong&gt;, a generic completion mechanism for Emacs.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Counsel&lt;/strong&gt;, a collection of Ivy-enhanced versions of common Emacs
commands.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Swiper&lt;/strong&gt;, an Ivy-enhanced alternative to isearch.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-ivy" class="anchor" aria-hidden="true" href="#ivy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ivy&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://melpa.org/#/ivy" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0b07b95d4ee91c75105920569bc2d03f5f890271/68747470733a2f2f6d656c70612e6f72672f7061636b616765732f6976792d62616467652e737667" alt="MELPA" data-canonical-src="https://melpa.org/packages/ivy-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://stable.melpa.org/#/ivy" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0dc055002fc3da7f785236986eefb98108f34f51/68747470733a2f2f737461626c652e6d656c70612e6f72672f7061636b616765732f6976792d62616467652e737667" alt="MELPA Stable" data-canonical-src="https://stable.melpa.org/packages/ivy-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ivy is a generic completion mechanism for Emacs. While it operates
similarly to other completion schemes such as &lt;code&gt;icomplete-mode&lt;/code&gt;, Ivy
aims to be more efficient, smaller, simpler, and smoother to use yet
highly customizable.&lt;/p&gt;
&lt;p&gt;To try Ivy, just call &lt;kbd&gt;M-x&lt;/kbd&gt; &lt;code&gt;ivy-mode&lt;/code&gt;. This will enable
generic Ivy completion, including specific completion for file and
buffer names.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h3&gt;
&lt;p&gt;Install the &lt;code&gt;ivy&lt;/code&gt; package from MELPA / GNU ELPA.&lt;/p&gt;
&lt;p&gt;Users of Debian ≥10 (and derivatives such as Ubuntu ≥18.04) can
install Ivy, Counsel, and Swiper with &lt;code&gt;sudo apt install elpa-counsel&lt;/code&gt;.
To add Hydra support &lt;code&gt;sudo apt install elpa-ivy-hydra&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-manual" class="anchor" aria-hidden="true" href="#manual"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual&lt;/h3&gt;
&lt;p&gt;The manual is available as &lt;a href="https://oremacs.com/swiper/" rel="nofollow"&gt;HTML&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After installing from MELPA, the manual is also available through the &lt;code&gt;(ivy)&lt;/code&gt; Info node.&lt;/p&gt;
&lt;p&gt;The source file for the Info page is
&lt;a href="https://github.com/abo-abo/swiper/blob/master/doc/ivy.org"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-wiki" class="anchor" aria-hidden="true" href="#wiki"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Wiki&lt;/h3&gt;
&lt;p&gt;Ivy and Swiper wiki is here: &lt;a href="https://github.com/abo-abo/swiper/wiki"&gt;the wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-small-config-example" class="anchor" aria-hidden="true" href="#small-config-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Small config example&lt;/h3&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(ivy-mode &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; ivy-use-virtual-buffers &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; enable-recursive-minibuffers &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; enable this if you want &lt;span class="pl-smi"&gt;`swiper'&lt;/span&gt; to use it&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; (setq search-default-mode #'char-fold-to-regexp)&lt;/span&gt;
(&lt;span class="pl-c1"&gt;global-set-key&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\C&lt;/span&gt;-s&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;'swiper&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;global-set-key&lt;/span&gt; (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-c C-r&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;'ivy-resume&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;global-set-key&lt;/span&gt; (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;f6&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;'ivy-resume&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;global-set-key&lt;/span&gt; (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;'counsel-M-x&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;global-set-key&lt;/span&gt; (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-x C-f&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;'counsel-find-file&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;global-set-key&lt;/span&gt; (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;f1&amp;gt; f&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;'counsel-describe-function&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;global-set-key&lt;/span&gt; (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;f1&amp;gt; v&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;'counsel-describe-variable&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;global-set-key&lt;/span&gt; (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;f1&amp;gt; l&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;'counsel-find-library&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;global-set-key&lt;/span&gt; (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;f2&amp;gt; i&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;'counsel-info-lookup-symbol&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;global-set-key&lt;/span&gt; (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;f2&amp;gt; u&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;'counsel-unicode-char&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;global-set-key&lt;/span&gt; (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-c g&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;'counsel-git&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;global-set-key&lt;/span&gt; (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-c j&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;'counsel-git-grep&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;global-set-key&lt;/span&gt; (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-c k&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;'counsel-ag&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;global-set-key&lt;/span&gt; (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-x l&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;'counsel-locate&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;global-set-key&lt;/span&gt; (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-S-o&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;'counsel-rhythmbox&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;define-key&lt;/span&gt; minibuffer-local-map (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-r&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;'counsel-minibuffer-history&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: parts of this config can be replaced by using &lt;code&gt;counsel-mode&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-counsel" class="anchor" aria-hidden="true" href="#counsel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Counsel&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://melpa.org/#/counsel" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0b1d9741244e07553b3e7edbdd74c5345481216c/68747470733a2f2f6d656c70612e6f72672f7061636b616765732f636f756e73656c2d62616467652e737667" alt="MELPA" data-canonical-src="https://melpa.org/packages/counsel-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://stable.melpa.org/#/counsel" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b829c1e7ce2494091aae0c6f5cbfc69325b62c03/68747470733a2f2f737461626c652e6d656c70612e6f72672f7061636b616765732f636f756e73656c2d62616467652e737667" alt="MELPA Stable" data-canonical-src="https://stable.melpa.org/packages/counsel-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ivy-mode&lt;/code&gt; ensures that any Emacs command using
&lt;code&gt;completing-read-function&lt;/code&gt; uses ivy for completion.&lt;/p&gt;
&lt;p&gt;Counsel takes this further, providing versions of common Emacs
commands that are customised to make the best use of ivy. For example,
&lt;code&gt;counsel-find-file&lt;/code&gt; has some additional keybindings. Pressing
&lt;kbd&gt;DEL&lt;/kbd&gt; will move you to the parent directory.&lt;/p&gt;
&lt;p&gt;Enabling &lt;code&gt;counsel-mode&lt;/code&gt; remaps built-in Emacs functions that have
counsel replacements:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Emacs command&lt;/th&gt;
&lt;th&gt;Counsel equivalent&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;execute-extended-command&lt;/td&gt;
&lt;td&gt;counsel-M-x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;describe-bindings&lt;/td&gt;
&lt;td&gt;counsel-descbinds&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;describe-function&lt;/td&gt;
&lt;td&gt;counsel-describe-function&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;describe-variable&lt;/td&gt;
&lt;td&gt;counsel-describe-variable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;apropos-command&lt;/td&gt;
&lt;td&gt;counsel-apropos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;describe-face&lt;/td&gt;
&lt;td&gt;counsel-describe-face&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;list-faces-display&lt;/td&gt;
&lt;td&gt;counsel-faces&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;find-file&lt;/td&gt;
&lt;td&gt;counsel-find-file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;find-library&lt;/td&gt;
&lt;td&gt;counsel-find-library&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;imenu&lt;/td&gt;
&lt;td&gt;counsel-imenu&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;load-library&lt;/td&gt;
&lt;td&gt;counsel-load-library&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;load-theme&lt;/td&gt;
&lt;td&gt;counsel-load-theme&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;yank-pop&lt;/td&gt;
&lt;td&gt;counsel-yank-pop&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;info-lookup-symbol&lt;/td&gt;
&lt;td&gt;counsel-info-lookup-symbol&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pop-to-mark-command&lt;/td&gt;
&lt;td&gt;counsel-mark-ring&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bookmark-jump&lt;/td&gt;
&lt;td&gt;counsel-bookmark&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-swiper" class="anchor" aria-hidden="true" href="#swiper"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swiper&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://melpa.org/#/swiper" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e4db0c28cf6c9e4de9529a34141a0ceeac953afc/68747470733a2f2f6d656c70612e6f72672f7061636b616765732f7377697065722d62616467652e737667" alt="MELPA" data-canonical-src="https://melpa.org/packages/swiper-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://stable.melpa.org/#/swiper" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3856d8e21ce5c31895a9cdd449701dbac9a5af58/68747470733a2f2f737461626c652e6d656c70612e6f72672f7061636b616765732f7377697065722d62616467652e737667" alt="MELPA Stable" data-canonical-src="https://stable.melpa.org/packages/swiper-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Swiper is an alternative to isearch that uses ivy to show an overview
of all matches.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/9501632a3893ff3c9ad7cf61ca09311ea5a570a7/68747470733a2f2f6f72656d6163732e636f6d2f646f776e6c6f61642f7377697065722e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/9501632a3893ff3c9ad7cf61ca09311ea5a570a7/68747470733a2f2f6f72656d6163732e636f6d2f646f776e6c6f61642f7377697065722e706e67" alt="swiper.png" data-canonical-src="https://oremacs.com/download/swiper.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A helm version of swiper is also available:
&lt;a href="https://github.com/abo-abo/swiper-helm"&gt;swiper-helm&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-screenshots" class="anchor" aria-hidden="true" href="#screenshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/5a19441661db376c2b3403e7c2af8d6bb323fd2c/68747470733a2f2f6f72656d6163732e636f6d2f646f776e6c6f61642f6976792d7377697065722d312e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/5a19441661db376c2b3403e7c2af8d6bb323fd2c/68747470733a2f2f6f72656d6163732e636f6d2f646f776e6c6f61642f6976792d7377697065722d312e706e67" alt="ivy-swiper-1.png" data-canonical-src="https://oremacs.com/download/ivy-swiper-1.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There's also a ten minute &lt;a href="https://www.youtube.com/watch?v=VvnJQpTFVDc" rel="nofollow"&gt;video demo&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-frequently-asked-questions" class="anchor" aria-hidden="true" href="#frequently-asked-questions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Frequently asked questions&lt;/h1&gt;
&lt;p&gt;Q: How do I enter an input that matches one of the candidates instead
of this candidate? Example: create a file &lt;code&gt;bar&lt;/code&gt; when a file
&lt;code&gt;barricade&lt;/code&gt; exists in the current directory.&lt;/p&gt;
&lt;p&gt;A: Press &lt;kbd&gt;C-M-j&lt;/kbd&gt;. Alternatively, you can make the prompt line selectable with &lt;code&gt;(setq ivy-use-selectable-prompt t)&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;Please see the &lt;a href="https://github.com/abo-abo/swiper/blob/master/CONTRIBUTING.org"&gt;guidelines&lt;/a&gt; for reporting issues and opening pull requests.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>abo-abo</author><guid isPermaLink="false">https://github.com/abo-abo/swiper</guid><pubDate>Sat, 28 Dec 2019 00:06:00 GMT</pubDate></item><item><title>Alexander-Miller/treemacs #7 in Emacs Lisp, This week</title><link>https://github.com/Alexander-Miller/treemacs</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="org" data-path="README.org"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://gitter.im/treemacs/community" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5b239b2ea58d8857151d7136447bdddef78227ef/68747470733a2f2f6261646765732e6769747465722e696d2f416c6578616e6465722d4d696c6c65722f747265656d6163732e706e67" alt="https://badges.gitter.im/Alexander-Miller/treemacs.png" data-canonical-src="https://badges.gitter.im/Alexander-Miller/treemacs.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://melpa.org/#/treemacs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/198299674034941bf401ad794c2209a81e46c8b2/68747470733a2f2f6d656c70612e6f72672f7061636b616765732f747265656d6163732d62616467652e737667" alt="https://melpa.org/packages/treemacs-badge.svg" data-canonical-src="https://melpa.org/packages/treemacs-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://stable.melpa.org/#/treemacs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4a2a3b41806c9ee6799e995dfe48dbbb9ce4e520/68747470733a2f2f737461626c652e6d656c70612e6f72672f7061636b616765732f747265656d6163732d62616467652e737667" alt="https://stable.melpa.org/packages/treemacs-badge.svg" data-canonical-src="https://stable.melpa.org/packages/treemacs-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://travis-ci.org/Alexander-Miller/treemacs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6c26724bd82f15a28e02df0c370e07436a3d8f16/68747470733a2f2f7472617669732d63692e6f72672f416c6578616e6465722d4d696c6c65722f747265656d6163732e7376673f6272616e63683d6d6173746572" alt="https://travis-ci.org/Alexander-Miller/treemacs.svg?branch=master" data-canonical-src="https://travis-ci.org/Alexander-Miller/treemacs.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="http://spacemacs.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8f5ee1d9b7278ed2c63f1f89e9a583ec59b52b6b/68747470733a2f2f63646e2e7261776769742e636f6d2f73796c3230626e722f73706163656d6163732f343432643032353737396461326636326663383663323038323730333639373731346462363531342f6173736574732f73706163656d6163732d62616467652e737667" alt="https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg" data-canonical-src="https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-treemacs---a-tree-layout-file-explorer-for-emacs" class="anchor" aria-hidden="true" href="#treemacs---a-tree-layout-file-explorer-for-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Treemacs - a tree layout file explorer for Emacs&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/screenshot.png"&gt;&lt;img src="screenshots/screenshot.png" alt="screenshots/screenshot.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-content" class="anchor" aria-hidden="true" href="#content"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Content&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="#quick-feature-overview"&gt;Quick Feature Overview&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="#fancy-gifs"&gt;Fancy Gifs!&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="#quick-start"&gt;Quick Start&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#detailed-feature-list"&gt;Detailed Feature List&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="#projects-and-workspaces"&gt;Projects and Workspaces&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#conveniently-editing-your-projects-and-workspaces"&gt;Conveniently Editing Your Projects and Workspaces&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#navigation-without-projects-and-workspaces"&gt;Navigation without Projects and Workspaces&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#frame-locality"&gt;Frame Locality&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#mouse-interface"&gt;Mouse Interface&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#follow-mode"&gt;Follow-mode&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#tag-follow-mode"&gt;Tag-follow-mode&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#fringe-indicator-mode"&gt;Fringe-indicator-mode&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#git-mode"&gt;Git-mode&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#filewatch-mode"&gt;Filewatch-mode&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#session-persistence"&gt;Session Persistence&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#terminal-compatibility"&gt;Terminal Compatibility&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#tag-view"&gt;Tag View&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#current-directory-awareness"&gt;Current-Directory Awareness&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#tramp-support"&gt;Tramp Support&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#org-support"&gt;Org Support&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#theme-support"&gt;Theme Support&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#additional-packages"&gt;Additional Packages&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#treemacs-as-a-framework"&gt;Treemacs as a Framework&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#configuration"&gt;Configuration&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="#variables"&gt;Variables&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#faces"&gt;Faces&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#evil-compatibility"&gt;Evil compatibility&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#customizing-themes-and-icons"&gt;Customizing Themes and Icons&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="#keymap"&gt;Keymap&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="#unbound-functions"&gt;Unbound functions&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#default-keymaps"&gt;Default keymaps&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="#compatibility"&gt;Compatibility&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#working-with-the-code-base"&gt;Working With The Code Base&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#dependencies"&gt;Dependencies&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-quick-feature-overview" class="anchor" aria-hidden="true" href="#quick-feature-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Feature Overview&lt;/h1&gt;
&lt;p&gt;Treemacs is a file and project explorer similar to NeoTree or vim’s NerdTree, but largely inspired by the Project
  Explorer in Eclipse. It shows the file system outlines of your projects in a simple tree layout allowing quick
  navigation and exploration, while also possessing &lt;b&gt;basic&lt;/b&gt; file management utilities. Specifically a quick feature
  overview looks as follows:&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Project management&lt;/dt&gt;&lt;dd&gt;Treemacs lets you view multiple file trees - projects - at once and quickly add or remove them,
    and groups projects in workspaces.&lt;/dd&gt;
  &lt;dt&gt;Easy navigation&lt;/dt&gt;&lt;dd&gt;quickly move between projects or use shortcuts to jump to parent or neighbouring nodes.&lt;/dd&gt;
  &lt;dt&gt;Versatile file access&lt;/dt&gt;&lt;dd&gt;decide exactly how and where a file will be opened, including using &lt;code&gt;ace-window&lt;/code&gt; to choose
    a window or launching an external application.&lt;/dd&gt;
  &lt;dt&gt;Understanding of frames&lt;/dt&gt;&lt;dd&gt;every frame will receive its own treemacs buffer that will live and die with that frame.&lt;/dd&gt;
  &lt;dt&gt;Finding of files and tags&lt;/dt&gt;&lt;dd&gt;Treemacs can follow along and keep in focus the currently selected file or even the tag
    at point using, either manually or automatically using either &lt;code&gt;treemacs-follow-mode&lt;/code&gt; or &lt;code&gt;treemacs-tag-follow-mode&lt;/code&gt;.&lt;/dd&gt;
  &lt;dt&gt;Git Integration&lt;/dt&gt;&lt;dd&gt;Treemacs can use different faces for files and directories based on their git status.
    The git process is run asynchronously, minimizing its performance impact.&lt;/dd&gt;
  &lt;dt&gt;&lt;a href="https://github.com/deb0ch/emacs-winum"&gt;Winum&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/abo-abo/ace-window"&gt;ace-window&lt;/a&gt; compatibility&lt;/dt&gt;&lt;dd&gt;The presence of treemacs will not interfere with winum’s and ace-window’s
    usual layouts.&lt;/dd&gt;
  &lt;dt&gt;&lt;a href="https://github.com/bbatsov/projectile"&gt;Projectile&lt;/a&gt; integration&lt;/dt&gt;&lt;dd&gt;the &lt;code&gt;treemacs-projectile&lt;/code&gt; package lets you quickly add your projectile projects to the
    treemacs workspace.&lt;/dd&gt;
  &lt;dt&gt;Simple mouse interface&lt;/dt&gt;&lt;dd&gt;Left clicks will work the same as you’re used to from with graphical applications&lt;/dd&gt;
  &lt;dt&gt;Session persistence&lt;/dt&gt;&lt;dd&gt;Treemacs automatically saves and restores your workspaces.&lt;/dd&gt;
  &lt;dt&gt;Dashing good looks&lt;/dt&gt;&lt;dd&gt;Treemacs uses (optionally resizable) png images in HD 22x22 resolution for its icons (quantity
    is, of course, another matter). When run in a terminal a simple fallback is used.&lt;/dd&gt;
  &lt;dt&gt;Tag view&lt;/dt&gt;&lt;dd&gt;Treemacs can display files’ tags. All file types that Emacs can generate a (semantic) imenu index for are
    supported.&lt;/dd&gt;
  &lt;dt&gt;Visual feedback&lt;/dt&gt;&lt;dd&gt;When it would otherwise be difficult to see the message in the minibuffer success/failure is
    indicated with pulse.el.&lt;/dd&gt;
  &lt;dt&gt;Theming support&lt;/dt&gt;&lt;dd&gt;Treemacs supports using multiple icon themes that can be changed at will.&lt;/dd&gt;
  &lt;dt&gt;Ease of use&lt;/dt&gt;&lt;dd&gt;Treemacs offers many configuration options, but comes with a set of (what hopefully should be) sane
    defaults. Installation aside there are two obligatory pieces of setup: 1) Choosing convenient keybindings to run
    treemacs and 2) If you use evil: requiring &lt;code&gt;treemacs-evil&lt;/code&gt; to integrate treemacs with evil and enable j/k navigation.
    More on both below. You can also summon a helpful hydra with &lt;code&gt;?&lt;/code&gt; that will remind you of treemacs’ many keybindings
    and features.&lt;/dd&gt;
  &lt;dt&gt;Bookmark integration&lt;/dt&gt;&lt;dd&gt;Running &lt;code&gt;bookmark-set&lt;/code&gt; on a Treemacs item will store a bookmark to Treemacs buffer for that item.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2&gt;&lt;a id="user-content-fancy-gifs" class="anchor" aria-hidden="true" href="#fancy-gifs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fancy Gifs!&lt;/h2&gt;
&lt;p&gt;Various ways to open files:
  &lt;a target="_blank" rel="noopener noreferrer" href="screenshots/open-files.gif"&gt;&lt;img src="screenshots/open-files.gif" alt="screenshots/open-files.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Workspace administration with org-mode:
  &lt;a target="_blank" rel="noopener noreferrer" href="screenshots/workspace-edit.gif"&gt;&lt;img src="screenshots/workspace-edit.gif" alt="screenshots/workspace-edit.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Automatic reaction to changes in the file system:
  &lt;a target="_blank" rel="noopener noreferrer" href="screenshots/filewatch.gif"&gt;&lt;img src="screenshots/filewatch.gif" alt="screenshots/filewatch.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Automatic reaction to changes in git:
  &lt;a target="_blank" rel="noopener noreferrer" href="screenshots/git.gif"&gt;&lt;img src="screenshots/git.gif" alt="screenshots/git.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Full-featured mouse interface:
  &lt;a target="_blank" rel="noopener noreferrer" href="screenshots/mouse-interface.gif"&gt;&lt;img src="screenshots/mouse-interface.gif" alt="screenshots/mouse-interface.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Resizable icons:
  &lt;a target="_blank" rel="noopener noreferrer" href="screenshots/icon-resize.gif"&gt;&lt;img src="screenshots/icon-resize.gif" alt="screenshots/icon-resize.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h1&gt;
&lt;p&gt;If you don’t care about reading the full readme here’s a list of some bare bones basics to get you started:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;First of all: press &lt;code&gt;?&lt;/code&gt; to summon the helpful hydra:
    &lt;a target="_blank" rel="noopener noreferrer" href="screenshots/hydra.png"&gt;&lt;img src="screenshots/hydra.png" alt="screenshots/hydra.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;If you use evil don’t forget to also install &lt;code&gt;treemacs-evil&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;If you use projectile you can install &lt;code&gt;treemacs-projectile&lt;/code&gt; to allow quickly add your projectile projects to
    treemacs.&lt;/li&gt;
  &lt;li&gt;Treemacs doesn’t bind any global keys, you need to use whatever fits you best. A full install setup can be found
    &lt;a href="#installation"&gt;below&lt;/a&gt;. Otherwise just add a keybind for &lt;code&gt;treemacs&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;For navigation use n/p (j/k when evil), M-n/M-p to move to same-height neighbour u to go to parent, and C-n/C-k to
    move between projects.&lt;/li&gt;
  &lt;li&gt;There’s half a dozen different ways to open nodes, all bound under o as prefix. Pick your favourite.&lt;/li&gt;
  &lt;li&gt;TAB and RET are particularly configurable. See &lt;code&gt;treemacs-TAB/RET-actions-config&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Projects administration is bound under the &lt;code&gt;C-c C-p&lt;/code&gt; prefix.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-detailed-feature-list" class="anchor" aria-hidden="true" href="#detailed-feature-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Detailed Feature List&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-projects-and-workspaces" class="anchor" aria-hidden="true" href="#projects-and-workspaces"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Projects and Workspaces&lt;/h2&gt;
&lt;p&gt;If you’ve previously used a different explorer like NeoTree or NerdTree - or an earlier version of treemacs for that
  matter - you are probably used to a display system wherein you see exactly a single file tree whose exact root you can
  arbitrarily change. This system makes it difficult to work on and switch between multiple projects. Treemacs used to
  (and still does) remedy that limitation by making every treemacs buffer unique to its frame, but it has now been
  redesigned to be able to display multiple file trees - projects - at once.&lt;/p&gt;
&lt;p&gt;In treemacs a workspace is simply a (named) collection of projects, while a project mostly consists of 2 things: its
  location in the file system and its name. This is the info that you need to provide when you want to add a new project
  to your workspace. Just like projects you can add, remove, rename and switch between workspaces at any time.&lt;/p&gt;
&lt;p&gt;This design approach has various advantages and disadvantages. It is now no longer possible to “free roam” in the file
  system with treemacs, i.e. you can no longer arbitrarily switch the single file tree’s root to the directory at point or
  the current root’s parent. Another restriction is that the same part of the file system may not appear more than once as
  part of the workspace. For example it is not possible to have both /Documents and /Documents/ProjectX as projects in the
  same workspace, since internally treemacs heavily relies on every node having a unique natural key in its absolute path.
  Nonetheless the pros certainly outweigh the cons, as a multiroot setup allows to work on multiple projects with any
  combination concern/buffer separating frameworks, be it persp, eyebrowse, or projectile. It also opens the potential for
  concurrent display not only of the file system, but e.g. the currently open buffers.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-workspace-selection" class="anchor" aria-hidden="true" href="#workspace-selection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Workspace Selection&lt;/h3&gt;
&lt;p&gt;On first load treemacs will select a workspace in the following manner:&lt;/p&gt;
&lt;p&gt;If the current buffer is editing a file then treemacs will try to find the first workspace with a project containing
  that file. If that fails treemacs will simply fall back on the &lt;i&gt;first&lt;/i&gt; element in the list of all workspace.&lt;/p&gt;
&lt;p&gt;The order of workspaces is the same that you see when calling &lt;code&gt;treemacs-edit-workspaces&lt;/code&gt; (see next chapter). You can set
  the fall backback workspace by calling &lt;code&gt;treemacs-set-fallback-workspace&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-conveniently-editing-your-projects-and-workspaces" class="anchor" aria-hidden="true" href="#conveniently-editing-your-projects-and-workspaces"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conveniently Editing Your Projects and Workspaces&lt;/h2&gt;
&lt;p&gt;There are two ways to edit your projects and workspaces: call up single add/remove/rename/switch commands under either
  the &lt;code&gt;C-c C-p&lt;/code&gt; or &lt;code&gt;C-c C-w&lt;/code&gt; prefix, or call &lt;code&gt;treemacs-edit-workspaces&lt;/code&gt; and edit your entire layout in the form of a
  single org-mode buffer.&lt;/p&gt;
&lt;p&gt;The used org-format is quite simple: level 1 headlines are names of workspaces, level 2 headlines are names of projects
  in a workspace, and every project’s path is given as a description list, starting with a &lt;code&gt;-&lt;/code&gt; (and an optional leading
  space). Empty lines and lines starting with &lt;code&gt;#&lt;/code&gt; are ignored, and everything else leads to an error.&lt;/p&gt;
&lt;p&gt;You needn’t worry about making mistakes either. If there’s something wrong when you call &lt;code&gt;treemacs-finish-edit&lt;/code&gt; then
  treemacs will point you at the incorrect line and tell you what’s missing:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/workspace-edit.png"&gt;&lt;img src="screenshots/workspace-edit.png" alt="screenshots/workspace-edit.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(Note that the list with the path property allows an indentation of 0 or 1 spaces only. The much greater visible
  indentation is caused by &lt;code&gt;org-indent-mode&lt;/code&gt;)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-navigation-without-projects-and-workspaces" class="anchor" aria-hidden="true" href="#navigation-without-projects-and-workspaces"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Navigation without Projects and Workspaces&lt;/h2&gt;
&lt;p&gt;If a strict workspace and project structure, as described above, is too stringent for your use-case you can, under
  certain circumstances, use treemacs to freely navigate through your your file system, similar to dired: When your
  workspace contains &lt;i&gt;exactly&lt;/i&gt; a single project you can use &lt;code&gt;h&lt;/code&gt; and &lt;code&gt;l&lt;/code&gt; (or &lt;code&gt;treemacs-root-up&lt;/code&gt; and &lt;code&gt;treemacs-root-down&lt;/code&gt;) to
  arbitrarily change the single project’s root. &lt;code&gt;h&lt;/code&gt; will navigate one level upward in the file system, &lt;code&gt;l&lt;/code&gt; will move into
  the directory at point.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-frame-locality" class="anchor" aria-hidden="true" href="#frame-locality"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Frame Locality&lt;/h2&gt;
&lt;p&gt;Treemacs buffers have a limited scope they are visible in: the frames they are created in. A treemacs buffer, once
  created, lives alongside and inside its frame, and is also destroyed with that frame. Calling &lt;code&gt;treemacs&lt;/code&gt; while inside a
  new frame will create a new buffer for it, regardless how many other treemacs buffers already exist. While there can be
  multiple unique treemacs buffer they will all still show the same workspace and the same projects.&lt;/p&gt;
&lt;p&gt;A treemacs buffer that does not belong to a frame may still be made visible by manually selecting in the buffer list.
  This would break various assumptions in treemacs’ code base and effectively falls under undefined behaviour - a bad idea
  all around.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-mouse-interface" class="anchor" aria-hidden="true" href="#mouse-interface"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mouse Interface&lt;/h2&gt;
&lt;p&gt;Treemacs handles left clicks in much the same way as modern graphical applications do: a single click sets the focus, a
  double click expands or collapses a directory or tag section node and visits a file/moves to a tag for a file/tag node.&lt;/p&gt;
&lt;p&gt;Additionally tag sections can be expanded or collapsed by a single click on the file/tag section icon.&lt;/p&gt;
&lt;p&gt;If you prefer to expand/collpase nodes with a single mouse click you can also use &lt;code&gt;treemacs-single-click-expand-action&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;define-key&lt;/span&gt; treemacs-mode-map [mouse-1] &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'treemacs-single-click-expand-action&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A right click popup-menu is also available:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/right-click.png"&gt;&lt;img src="screenshots/right-click.png" alt="screenshots/right-click.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can also open a file in a specific window by dragging using left click from treemacs to the required window.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-follow-mode" class="anchor" aria-hidden="true" href="#follow-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Follow-mode&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;treemacs-follow-mode&lt;/code&gt; is a global minor mode which allows the treemacs view to always move its focus to the currently
  selected file. This mode runs on an idle timer - the exact duration of inactivity (in seconds) before a move is called
  is determined by &lt;code&gt;treemacs-tag-follow-delay&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tag-follow-mode" class="anchor" aria-hidden="true" href="#tag-follow-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tag-follow-mode&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;treemacs-tag-follow-mode&lt;/code&gt; is a global minor mode which extends and effectively replaces &lt;code&gt;treemacs-follow-mode&lt;/code&gt;. When
  activated it follows not just the current file, but also the current tag. This works alongside treemacs’ integration
  with imenu, so all file types providing an imenu implementation are compatible.&lt;/p&gt;
&lt;p&gt;This mode, like follow-mode, runs on an idle timer - the exact duration of inactivity (in seconds) before a move is
  called is determined by &lt;code&gt;treemacs-tag-follow-delay&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that in order to move to a tag in treemacs the treemacs buffer’s window needs to be temporarily selected, which
  will reset &lt;code&gt;blink-cursor-mode&lt;/code&gt;’s timer if it is enabled. This will result in the cursor blinking seemingly pausing for a
  short time and giving the appearance of the tag follow action lasting much longer than it really does.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-fringe-indicator-mode" class="anchor" aria-hidden="true" href="#fringe-indicator-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fringe-indicator-mode&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;treemacs-fringe-indicator-mode&lt;/code&gt; is a global minor mode that displays a little icon in the fringe that moves with the cursor.
  It can make the selected line more visible if &lt;code&gt;hl-line-mode&lt;/code&gt; doesn’t stand out with your theme.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-git-mode" class="anchor" aria-hidden="true" href="#git-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Git-mode&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;treemacs-git-mode&lt;/code&gt; is a global minor mode which enables treemacs to check for files’ and directories’ git status
  information and highlight them accordingly (see also the &lt;code&gt;treemacs-git-...&lt;/code&gt; faces). The mode is available in 3 variants:
  &lt;code&gt;simple&lt;/code&gt;, &lt;code&gt;extended&lt;/code&gt; and &lt;code&gt;deferred&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The simple variant starts a git status process and parses its output in elisp. The parsing is kept quick and simple,
    so some info is missed: this version includes git status information only for files, but not directories.&lt;/li&gt;
  &lt;li&gt;The extended variant highlights both files and directories. This greatly increases the complexity and length of the
    parsing process, and is therefore done in an asynchronous python process for the sake of performance. The extended
    variant requires python3 to work.&lt;/li&gt;
  &lt;li&gt;The deferred variant is the same as extended, except the tasks of rendering nodes and highlighting them are
    separated. The former happens immediately, the latter after &lt;code&gt;treemacs-deferred-git-apply-delay&lt;/code&gt; seconds of idle time.
    This may be faster (if not in truth then at least in appereance) as the git process is given a much greater amount of
    time to finish. The downside is that the effect of nodes changing their colors may be somewhat jarring, though this
    effect is largely mitigated due to the use of a caching layer.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When called interactively &lt;code&gt;treemacs-git-mode&lt;/code&gt; will ask for the variant to use. In lisp code an appropriate symbol can
  be directly passed to the minor mode function:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(treemacs-git-mode &lt;span class="pl-c1"&gt;'deferred&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All versions use an asynchronous git process and are optimized to not do more work than necessary, so their performance
  cost should, for the most part, be the constant amount of time it takes to fork a subprocess. For repositories where
  this is not the case &lt;code&gt;treemacs-max-git-entries&lt;/code&gt; (default value 5000) will limit the number of git status entries
  treemacs will process before ignoring the rest.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-filewatch-mode" class="anchor" aria-hidden="true" href="#filewatch-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Filewatch-mode&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;treemacs-filewatch-mode&lt;/code&gt; is a global minor mode which enables treemacs to watch the files it is displaying for changes
  and automatically refresh itself when it detects a change in the file system that it decides is relevant.&lt;/p&gt;
&lt;p&gt;A change event is relevant for treemacs if a new file has been created or deleted or a file has been changed and
  &lt;code&gt;treemacs-git-mode&lt;/code&gt; is enabled. Events caused by files that are ignored as per &lt;code&gt;treemacs-ignored-file-predicates&lt;/code&gt; are
  likewise counted as not relevant.&lt;/p&gt;
&lt;p&gt;The refresh is not called immediately after an event was received, treemacs instead waits &lt;code&gt;treemacs-file-event-delay&lt;/code&gt; ms
  to see if any more files have changed to avoid having to refresh multiple times over a short period of time. Treemacs
  will not refresh the entire view to make the detected changes visible, but will instead only make updates to the
  directories where the change(s) happened. Using this mode is therefore by far not as expensive as a full refresh on
  every change and save.&lt;/p&gt;
&lt;p&gt;The mode only applies to directories opened &lt;b&gt;after&lt;/b&gt; this mode has been activated. This means that to enable file
  watching in an already existing treemacs buffer it needs to be killed and rebuilt. Turning off this mode is, on the
  other hand, instantaneous - it will immediately turn off all existing file watch processes and outstanding refresh
  actions.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Known limitations&lt;/span&gt;:
  Staging and committing changes does not produce any file change events of its own, if you use &lt;code&gt;treemacs-git-mode&lt;/code&gt; you
  still need to do a manual refresh to see your files’ faces go from ‘changed’ and ‘untracked’ to ‘unchanged’ after a
  commit.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-session-persistence" class="anchor" aria-hidden="true" href="#session-persistence"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Session Persistence&lt;/h2&gt;
&lt;p&gt;Treemacs’ sessions - your workspace and the projects it contains - are saved when Emacs shuts down and restored when
  treemacs is first loaded. This persistence process is fully automatic and independant, and should therefore be fully
  compatible with &lt;code&gt;desktop-save-mode&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The persisted state is saved under &lt;code&gt;user-emacs-directory/.cache/treemacs-persist&lt;/code&gt; by default. The exact file location
  is saved in the variable &lt;code&gt;treemacs-persist-file&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If something goes wrong when loading the file the erroneous state will be saved in &lt;code&gt;treemacs-last-error-persist-file&lt;/code&gt;
  for debugging.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-terminal-compatibility" class="anchor" aria-hidden="true" href="#terminal-compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Terminal Compatibility&lt;/h2&gt;
&lt;p&gt;When run in a terminal treemacs will fall back to a much simpler rendering system, foregoing its usual png icons and
  using simple &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;-&lt;/code&gt; characters instead. The exact characters used are &lt;a href="#custom-icons"&gt;highly customizable&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tag-view" class="anchor" aria-hidden="true" href="#tag-view"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tag View&lt;/h2&gt;
&lt;p&gt;Treemacs is able to display not only the file system, but also tags found in individual files. The tags list is sourced
  using emacs’ builtin imenu functionality, so all file types that emacs can generate an imenu index for are supported.&lt;/p&gt;
&lt;p&gt;Imenu caches its result, so to avoid stale tag lists setting &lt;code&gt;imenu-auto-rescan&lt;/code&gt; to t is recommended. Tags generated
  with the help of &lt;code&gt;semantic-mode&lt;/code&gt; are likewise supported.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-ggtags" class="anchor" aria-hidden="true" href="#ggtags"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ggtags&lt;/h3&gt;
&lt;p&gt;Treemacs can show the tags produced by ggtags if you switch a buffer’s imenu index function to use ggtags:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;setq-local&lt;/span&gt; imenu-create-index-function &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'ggtags-build-imenu-index&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-current-directory-awareness" class="anchor" aria-hidden="true" href="#current-directory-awareness"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Current-Directory Awareness&lt;/h2&gt;
&lt;p&gt;Treemacs always sets the &lt;code&gt;default-directory&lt;/code&gt; variable based on the (nearest) path at the current node, falling back to
  your home directory when there is no node or path at point. That means that various commands like &lt;code&gt;find-file&lt;/code&gt;,
  &lt;code&gt;magit-status&lt;/code&gt; or &lt;code&gt;helm-projectile-ag&lt;/code&gt; will correctly act based on the current directory or project context.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tramp-support" class="anchor" aria-hidden="true" href="#tramp-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tramp Support&lt;/h2&gt;
&lt;p&gt;Treemacs supports projects on remote directories, e.g. &lt;code&gt;/scp:remote-server:path/to/directory&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However tramp support has some restrictions: &lt;code&gt;treemacs-use-collapsed-directories&lt;/code&gt; has no effect on remote directories.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-org-support" class="anchor" aria-hidden="true" href="#org-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Org Support&lt;/h2&gt;
&lt;p&gt;Treemacs supports storing links to its file nodes by means of &lt;code&gt;org-store-link&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-theme-support" class="anchor" aria-hidden="true" href="#theme-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Theme Support&lt;/h2&gt;
&lt;p&gt;Using a different treemacs theme works the same way as using a different Emacs theme: just call &lt;code&gt;treemacs-load-theme&lt;/code&gt;,
  either programmatically or interactively. In the former case you need to supply the name of the theme as a string, like
  this:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(treemacs-load-theme &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Do keep in mind that by default treemacs’ theme support is all theory: the standard installation includes only the
  default theme; this feature is meant to easily allow &lt;b&gt;others&lt;/b&gt; to extend, create and distribute themes for treemacs.&lt;/p&gt;
&lt;p&gt;A detailed explanation on modifying themes and icons can be found in the &lt;a href="#customizing-themes-and-icons"&gt;Configuration&lt;/a&gt; section.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-additional-packages" class="anchor" aria-hidden="true" href="#additional-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional Packages&lt;/h2&gt;
&lt;p&gt;Next to treemacs itself you can optionally install:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-treemacs-evil" class="anchor" aria-hidden="true" href="#treemacs-evil"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;treemacs-evil&lt;/h3&gt;
&lt;p&gt;Must be installed and loaded if you use evil. The keybindings and the cursor will not be setup properly otherwise. It’ll
  also enable navigation with j/k instead of n/p.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-treemacs-projectile" class="anchor" aria-hidden="true" href="#treemacs-projectile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;treemacs-projectile&lt;/h3&gt;
&lt;p&gt;Allows to quickly add your projectile projects to the treemacs workspace.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-treemacs-magit" class="anchor" aria-hidden="true" href="#treemacs-magit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;treemacs-magit&lt;/h3&gt;
&lt;p&gt;A small utility package to fill the small gaps left by using filewatch-mode and git-mode in conjunction with magit: it
  will inform treemacs about (un)staging of files and commits happening in magit.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-treemacs-icons-dired" class="anchor" aria-hidden="true" href="#treemacs-icons-dired"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;treemacs-icons-dired&lt;/h3&gt;
&lt;p&gt;Allows you to use treemacs icons in dired buffers with &lt;code&gt;treemacs-icons-dired-mode&lt;/code&gt;:
  &lt;a target="_blank" rel="noopener noreferrer" href="screenshots/dired-icons.png"&gt;&lt;img src="screenshots/dired-icons.png" alt="screenshots/dired-icons.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-treemacs-as-a-framework" class="anchor" aria-hidden="true" href="#treemacs-as-a-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Treemacs as a Framework&lt;/h2&gt;
&lt;p&gt;Treemacs can be extended to display arbitrary nodes as well as be used as a general rendering backend for any tree-like
  structures. &lt;a href="Extensions.org"&gt;See here&lt;/a&gt; for an extended tutorial and demonstration.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;Treemacs is included in Spacemacs (for now only on the dev branch). If you are using the development version of
  Spacemacs you can simply add treemacs to &lt;code&gt;dotspacemacs-configuration-layers&lt;/code&gt; to replace the default NeoTree. Check &lt;code&gt;SPC
  h SPC treemacs&lt;/code&gt; for details. Otherwise you will need to add treemacs to &lt;code&gt;dotspacemacs-additional-packages&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Treemacs is also available on MELPA. If you just want to quickly start using it grab the &lt;code&gt;use-package&lt;/code&gt; example below,
  and customize it as needed (remove &lt;code&gt;treemacs-evil&lt;/code&gt; if you don’t use it, customize the keybindings to you taste, etc).&lt;/p&gt;
&lt;p&gt;Either way keep in mind that treemacs has &lt;i&gt;no default keybindings&lt;/i&gt; for its globally callable initialization functions. Each
  user is supposed to select keybindings for functions like &lt;code&gt;treemacs-find-file&lt;/code&gt; based on whatever they find convenient.&lt;/p&gt;
&lt;p&gt;You can find an exhaustive overview of all functions, their keybindings and functions you need to bind yourself &lt;a href="#keymap"&gt;below&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The following &lt;code&gt;use-package&lt;/code&gt; snippet includes a list of &lt;i&gt;all&lt;/i&gt; of treemacs’ configuration variables in their default
  setting. Setting them all yourself is not necessary, they are only listed here to encourage discoverability.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; treemacs
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:defer&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;with-eval-after-load&lt;/span&gt; &lt;span class="pl-c1"&gt;'winum&lt;/span&gt;
    (&lt;span class="pl-c1"&gt;define-key&lt;/span&gt; winum-keymap (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'treemacs-select-window&lt;/span&gt;&lt;/span&gt;))
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (&lt;span class="pl-k"&gt;progn&lt;/span&gt;
    (&lt;span class="pl-k"&gt;setq&lt;/span&gt; treemacs-collapse-dirs                 (&lt;span class="pl-k"&gt;if&lt;/span&gt; treemacs-python-executable &lt;span class="pl-c1"&gt;3&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
          treemacs-deferred-git-apply-delay      &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;
          treemacs-directory-name-transformer    &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'identity&lt;/span&gt;&lt;/span&gt;
          treemacs-display-in-side-window        &lt;span class="pl-c1"&gt;t&lt;/span&gt;
          treemacs-eldoc-display                 &lt;span class="pl-c1"&gt;t&lt;/span&gt;
          treemacs-file-event-delay              &lt;span class="pl-c1"&gt;5000&lt;/span&gt;
          treemacs-file-extension-regex          treemacs-last-period-regex-value
          treemacs-file-follow-delay             &lt;span class="pl-c1"&gt;0.2&lt;/span&gt;
          treemacs-file-name-transformer         &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'identity&lt;/span&gt;&lt;/span&gt;
          treemacs-follow-after-init             &lt;span class="pl-c1"&gt;t&lt;/span&gt;
          treemacs-git-command-pipe              &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
          treemacs-goto-tag-strategy             &lt;span class="pl-c1"&gt;'refetch-index&lt;/span&gt;
          treemacs-indentation                   &lt;span class="pl-c1"&gt;2&lt;/span&gt;
          treemacs-indentation-string            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
          treemacs-is-never-other-window         &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
          treemacs-max-git-entries               &lt;span class="pl-c1"&gt;5000&lt;/span&gt;
          treemacs-missing-project-action        &lt;span class="pl-c1"&gt;'ask&lt;/span&gt;
          treemacs-no-png-images                 &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
          treemacs-no-delete-other-windows       &lt;span class="pl-c1"&gt;t&lt;/span&gt;
          treemacs-project-follow-cleanup        &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
          treemacs-persist-file                  (&lt;span class="pl-c1"&gt;expand-file-name&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.cache/treemacs-persist&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; user-emacs-directory)
          treemacs-position                      &lt;span class="pl-c1"&gt;'left&lt;/span&gt;
          treemacs-recenter-distance             &lt;span class="pl-c1"&gt;0.1&lt;/span&gt;
          treemacs-recenter-after-file-follow    &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
          treemacs-recenter-after-tag-follow     &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
          treemacs-recenter-after-project-jump   &lt;span class="pl-c1"&gt;'always&lt;/span&gt;
          treemacs-recenter-after-project-expand &lt;span class="pl-c1"&gt;'on-distance&lt;/span&gt;
          treemacs-show-cursor                   &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
          treemacs-show-hidden-files             &lt;span class="pl-c1"&gt;t&lt;/span&gt;
          treemacs-silent-filewatch              &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
          treemacs-silent-refresh                &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
          treemacs-sorting                       &lt;span class="pl-c1"&gt;'alphabetic-asc&lt;/span&gt;
          treemacs-space-between-root-nodes      &lt;span class="pl-c1"&gt;t&lt;/span&gt;
          treemacs-tag-follow-cleanup            &lt;span class="pl-c1"&gt;t&lt;/span&gt;
          treemacs-tag-follow-delay              &lt;span class="pl-c1"&gt;1.5&lt;/span&gt;
          treemacs-width                         &lt;span class="pl-c1"&gt;35&lt;/span&gt;)

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; The default width and height of the icons is 22 pixels. If you are&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; using a Hi-DPI display, uncomment this to double the icon size.&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;(treemacs-resize-icons 44)&lt;/span&gt;

    (treemacs-follow-mode &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
    (treemacs-filewatch-mode &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
    (treemacs-fringe-indicator-mode &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
    (&lt;span class="pl-k"&gt;pcase&lt;/span&gt; (&lt;span class="pl-k"&gt;cons&lt;/span&gt; (&lt;span class="pl-k"&gt;not&lt;/span&gt; (&lt;span class="pl-k"&gt;null&lt;/span&gt; (&lt;span class="pl-c1"&gt;executable-find&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))
                 (&lt;span class="pl-k"&gt;not&lt;/span&gt; (&lt;span class="pl-k"&gt;null&lt;/span&gt; treemacs-python-executable)))
      (`(&lt;span class="pl-c1"&gt;t&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
       (treemacs-git-mode &lt;span class="pl-c1"&gt;'deferred&lt;/span&gt;))
      (`(&lt;span class="pl-c1"&gt;t&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; _)
       (treemacs-git-mode &lt;span class="pl-c1"&gt;'simple&lt;/span&gt;))))
  &lt;span class="pl-c1"&gt;:bind&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;:map&lt;/span&gt; global-map
        (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;       &lt;span class="pl-k"&gt;.&lt;/span&gt; treemacs-select-window)
        (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-x t 1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;   &lt;span class="pl-k"&gt;.&lt;/span&gt; treemacs-delete-other-windows)
        (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-x t t&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;   &lt;span class="pl-k"&gt;.&lt;/span&gt; treemacs)
        (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-x t B&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;   &lt;span class="pl-k"&gt;.&lt;/span&gt; treemacs-bookmark)
        (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-x t C-t&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; treemacs-find-file)
        (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-x t M-t&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; treemacs-find-tag)))

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; treemacs-evil
  &lt;span class="pl-c1"&gt;:after&lt;/span&gt; treemacs evil
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; treemacs-projectile
  &lt;span class="pl-c1"&gt;:after&lt;/span&gt; treemacs projectile
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; treemacs-icons-dired
  &lt;span class="pl-c1"&gt;:after&lt;/span&gt; treemacs dired
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt; (treemacs-icons-dired-mode))

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; treemacs-magit
  &lt;span class="pl-c1"&gt;:after&lt;/span&gt; treemacs magit
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-variables" class="anchor" aria-hidden="true" href="#variables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Variables&lt;/h2&gt;
&lt;p&gt;Treemacs offers the following configuration options (&lt;code&gt;describe-variable&lt;/code&gt; will usually offers more details):&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Variable&lt;/th&gt;&lt;th&gt;Default&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-indentation&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;The number of times each level is indented in the file tree. If specified as ‘(INTEGER px), indentation will be a single INTEGER pixels wide space.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-indentation-string&lt;/td&gt;&lt;td&gt;” ”&lt;/td&gt;&lt;td&gt;The string that is used to create indentation when &lt;code&gt;treemacs-indentation&lt;/code&gt; is not specified as pixels.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-width&lt;/td&gt;&lt;td&gt;35&lt;/td&gt;&lt;td&gt;Width of the treemacs window.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-show-hidden-files&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;td&gt;Dotfiles will be shown if this is set to t and be hidden otherwise.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-follow-after-init&lt;/td&gt;&lt;td&gt;nil&lt;/td&gt;&lt;td&gt;When t follow the currently selected file after initializing the treemacs buffer, regardless of &lt;code&gt;treemacs-follow-mode&lt;/code&gt; setting.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-sorting&lt;/td&gt;&lt;td&gt;alphabetic-asc&lt;/td&gt;&lt;td&gt;Indicates how treemacs will sort its files and directories. (Files will always be shown after directories.)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-ignored-file-predicates&lt;/td&gt;&lt;td&gt;(treemacs–std-ignore-file-predicate)&lt;/td&gt;&lt;td&gt;List of predicates to test for files and directories ignored by Emacs. Ignored files will &lt;b&gt;never&lt;/b&gt; be shown in the treemacs buffer.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-pre-file-insert-predicates&lt;/td&gt;&lt;td&gt;nil&lt;/td&gt;&lt;td&gt;List of predicates to test for files and directories not to be rendered. Unlike &lt;code&gt;treemacs-ignored-file-predicates&lt;/code&gt; these predicates apply when files’ git status information is available.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-file-event-delay&lt;/td&gt;&lt;td&gt;5000&lt;/td&gt;&lt;td&gt;How long (in milliseconds) to collect file events before refreshing. See also &lt;code&gt;treemacs-filewatch-mode&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-goto-tag-strategy&lt;/td&gt;&lt;td&gt;refetch-index&lt;/td&gt;&lt;td&gt;Indicates how to move to a tag when its buffer is dead.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-default-visit-action&lt;/td&gt;&lt;td&gt;treemacs-visit-node-no-split&lt;/td&gt;&lt;td&gt;Default action for opening a node (e.g. file, directory, tag). &lt;code&gt;treemacs-visit-file-default&lt;/code&gt; action in &lt;code&gt;treemacs-*-actions-config&lt;/code&gt; calls this function.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-RET-actions-config&lt;/td&gt;&lt;td&gt;Prefers visiting nodes over closing/opening&lt;/td&gt;&lt;td&gt;Alist defining the behaviour of &lt;code&gt;treemacs-RET-action&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-TAB-actions-config&lt;/td&gt;&lt;td&gt;Prefers closing/opening nodes over visiting&lt;/td&gt;&lt;td&gt;Alist defining the behaviour of &lt;code&gt;treemacs-TAB-action&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-doubleclick-actions-config&lt;/td&gt;&lt;td&gt;Closes/opens tags and visits files&lt;/td&gt;&lt;td&gt;Alist defining the behaviour of &lt;code&gt;treemacs-doubleclick-action&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-collapse-dirs&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;Collapse this many directories into one, when possible. A directory is collapsible when its content consists of nothing but another directory.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-silent-refresh&lt;/td&gt;&lt;td&gt;nil&lt;/td&gt;&lt;td&gt;When non-nil a completed refresh will not be announced with a log message. This applies both to manual refreshing as well as automatic (due to &lt;code&gt;treemacs-filewatch-mode&lt;/code&gt;).&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-silent-filewatch&lt;/td&gt;&lt;td&gt;nil&lt;/td&gt;&lt;td&gt;When non-nil a refresh due to &lt;code&gt;filewatch-mode&lt;/code&gt; will cause no log message.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-is-never-other-window&lt;/td&gt;&lt;td&gt;nil&lt;/td&gt;&lt;td&gt;Prevents treemacs from being selected with &lt;code&gt;other-window&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-position&lt;/td&gt;&lt;td&gt;left&lt;/td&gt;&lt;td&gt;Position of treemacs buffer. Valid values are &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-tag-follow-delay&lt;/td&gt;&lt;td&gt;1.5&lt;/td&gt;&lt;td&gt;Delay in seconds of inactivity for &lt;code&gt;treemacs-tag-follow-mode&lt;/code&gt; to trigger.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-tag-follow-cleanup&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;td&gt;When non-nil &lt;code&gt;treemacs-tag-follow-mode&lt;/code&gt; will keep only the current file’s tags visible.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-project-follow-cleanup&lt;/td&gt;&lt;td&gt;nil&lt;/td&gt;&lt;td&gt;When non-nil &lt;code&gt;treemacs-follow-mode&lt;/code&gt; will keep only the current project expanded and all others closed.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-no-png-images&lt;/td&gt;&lt;td&gt;nil&lt;/td&gt;&lt;td&gt;When non-nil treemacs will use TUI string icons even when running in a GUI.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-python-executable&lt;/td&gt;&lt;td&gt;(treemacs–find-python3)&lt;/td&gt;&lt;td&gt;Python 3 binary used by treemacs.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-recenter-after-file-follow&lt;/td&gt;&lt;td&gt;nil&lt;/td&gt;&lt;td&gt;Decides if and when to call &lt;code&gt;recenter&lt;/code&gt; when &lt;code&gt;treemacs-follow-mode&lt;/code&gt; moves to a new file.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-recenter-after-tag-follow&lt;/td&gt;&lt;td&gt;nil&lt;/td&gt;&lt;td&gt;Decides if and when to call &lt;code&gt;recenter&lt;/code&gt; when &lt;code&gt;treemacs-tag-follow-mode&lt;/code&gt; moves to a new tag.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-recenter-after-project-jump&lt;/td&gt;&lt;td&gt;‘always&lt;/td&gt;&lt;td&gt;Decides if and when to call &lt;code&gt;recenter&lt;/code&gt; when navigating between projects.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-recenter-after-project-expand&lt;/td&gt;&lt;td&gt;‘on-distance&lt;/td&gt;&lt;td&gt;Decides if and when to call &lt;code&gt;recenter&lt;/code&gt; when expanding a project node.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-recenter-distance&lt;/td&gt;&lt;td&gt;0.1&lt;/td&gt;&lt;td&gt;Minimum distance from window top/bottom (0.1 = 10%) before treemacs calls &lt;code&gt;recenter&lt;/code&gt; in tag/file-follow-mode.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-pulse-on-success&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;td&gt;When non-nil treemacs will pulse the current line as a success indicator, e.g. when creating a file.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-pulse-on-failure&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;td&gt;When non-nil treemacs will pulse the current line as a failure indicator, e.g. when failing to find a file’s tags.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-elisp-imenu-expression&lt;/td&gt;&lt;td&gt;[too large to list]&lt;/td&gt;&lt;td&gt;The imenu expression treemacs uses in elisp buffers.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-persist-file&lt;/td&gt;&lt;td&gt;~/.emacs.d/.cache/treemacs-persist&lt;/td&gt;&lt;td&gt;Path to the file treemacs uses to persist its state.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-last-error-persist-file&lt;/td&gt;&lt;td&gt;~/.emacs.d/.cache/treemacs-persist-at-last-error&lt;/td&gt;&lt;td&gt;Path to the file treemacs uses to persist its state.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-space-between-root-nodes&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;td&gt;When non-nil treemacs will separate root nodes with an empty line.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-wrap-around&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;td&gt;When non-nil treemacs will wrap around at the buffer edges when moving between lines.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs–fringe-indicator-bitmap&lt;/td&gt;&lt;td&gt;[vertical bar]&lt;/td&gt;&lt;td&gt;The fringe bitmap used by the fringe-indicator minor mode.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-deferred-git-apply-delay&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;td&gt;Seconds of idle time for git highlighting to apply when using the deferred &lt;code&gt;treemacs-git-mode&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-file-follow-delay&lt;/td&gt;&lt;td&gt;0.2&lt;/td&gt;&lt;td&gt;Delay in seconds of idle time for treemacs to follow the selected window.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-display-in-side-window&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;td&gt;When non-nil treemacs will use a dedicated &lt;a href="https://www.gnu.org/software/emacs/draft/manual/html_node/elisp/Side-Windows.html" rel="nofollow"&gt;side-window&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-max-git-entries&lt;/td&gt;&lt;td&gt;5000&lt;/td&gt;&lt;td&gt;Maximum number of git status entries treemacs will process. Anything above that number will be ignored.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-missing-project-action&lt;/td&gt;&lt;td&gt;ask&lt;/td&gt;&lt;td&gt;When a persisted project is missing from filesystem, &lt;code&gt;ask&lt;/code&gt; will prompt for action, &lt;code&gt;keep&lt;/code&gt; will keep the project in the project list, and &lt;code&gt;remove&lt;/code&gt; will remove it from it without prompt.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-show-cursor&lt;/td&gt;&lt;td&gt;nil&lt;/td&gt;&lt;td&gt;When non-nil the cursor will stay visible in the treemacs buffer.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-git-command-pipe&lt;/td&gt;&lt;td&gt;””&lt;/td&gt;&lt;td&gt;Text to be appended to treemacs’ git command. Useful for filtering with something like grep.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-no-delete-other-windows&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;td&gt;Prevents the treemacs window from being deleted by commands like &lt;code&gt;delete-other-windows&lt;/code&gt; and &lt;code&gt;magit-status&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-eldoc-display&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;td&gt;Enables eldoc display of the file path at point. Requires &lt;code&gt;eldoc-mode&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-bookmark-title-template&lt;/td&gt;&lt;td&gt;“Treemacs - ${project}: ${label}”&lt;/td&gt;&lt;td&gt;When using &lt;code&gt;bookmark-set&lt;/code&gt; in Treemacs, the default template for a bookmark label. The following patterns are available: “${project}”, “${label}”, “${label:N}”, ${label-path}”, “${label-path:N}”, “${file-path}”, “${file-path:N}”.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-file-extension-regex&lt;/td&gt;&lt;td&gt;Text after last period&lt;/td&gt;&lt;td&gt;Determines how treemacs detects a file extension. Can be set to use text after first or last period.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-directory-name-transformer&lt;/td&gt;&lt;td&gt;identity&lt;/td&gt;&lt;td&gt;Transformer function that is applied to directory names before rendering for any sort of cosmetic effect.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-file-name-transformer&lt;/td&gt;&lt;td&gt;identity&lt;/td&gt;&lt;td&gt;Transformer function that is applied to file names before rendering for any sort of cosmetic effect.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-faces" class="anchor" aria-hidden="true" href="#faces"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Faces&lt;/h2&gt;
&lt;p&gt;Treemacs defines and uses the following faces:&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Face&lt;/th&gt;&lt;th&gt;Based on&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-directory-face&lt;/td&gt;&lt;td&gt;font-lock-function-name-face&lt;/td&gt;&lt;td&gt;Face used for directories.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-directory-collapsed-face&lt;/td&gt;&lt;td&gt;treemacs-directory-face&lt;/td&gt;&lt;td&gt;Face used for collapsed part of directories.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-file-face&lt;/td&gt;&lt;td&gt;default&lt;/td&gt;&lt;td&gt;Face used for files.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-root-face&lt;/td&gt;&lt;td&gt;font-lock-constant-face&lt;/td&gt;&lt;td&gt;Face used for project roots.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-root-unreadable-face&lt;/td&gt;&lt;td&gt;treemacs-root-face&lt;/td&gt;&lt;td&gt;Face used for local unreadable project roots.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-root-remote-face&lt;/td&gt;&lt;td&gt;font-lock-function-name-face, treemacs-root-face&lt;/td&gt;&lt;td&gt;Face used for readable remote (Tramp) project roots.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-root-remote-unreadable-face&lt;/td&gt;&lt;td&gt;treemacs-root-unreadable-face&lt;/td&gt;&lt;td&gt;Face used for unreadable remote (Tramp) project roots.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-root-remote-disconnected-face&lt;/td&gt;&lt;td&gt;warning, treemacs-root-face&lt;/td&gt;&lt;td&gt;Face used for disconnected remote (Tramp) project roots.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-tags-face&lt;/td&gt;&lt;td&gt;font-lock-builtin-face&lt;/td&gt;&lt;td&gt;Face used for tags.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-help-title-face&lt;/td&gt;&lt;td&gt;font-lock-constant-face&lt;/td&gt;&lt;td&gt;Face used for the title of the helpful hydra.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-help-column-face&lt;/td&gt;&lt;td&gt;font-lock-keyword-face&lt;/td&gt;&lt;td&gt;Face used for the column headers of the helpful hydra.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-git-*-face&lt;/td&gt;&lt;td&gt;various font lock faces&lt;/td&gt;&lt;td&gt;Faces used by treemacs for various git states.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-term-node-face&lt;/td&gt;&lt;td&gt;font-lock-string-face&lt;/td&gt;&lt;td&gt;Face for directory node symbols used by treemacs when it runs in a terminal.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-on-success-pulse-face&lt;/td&gt;&lt;td&gt;:fg #111111 :bg #669966&lt;/td&gt;&lt;td&gt;Pulse face used when pulsing on a successful action.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-on-failure-puse-face&lt;/td&gt;&lt;td&gt;:fg #111111 :bg #ab3737&lt;/td&gt;&lt;td&gt;Pulse face used when pulsing on a failed action.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-evil-compatibility" class="anchor" aria-hidden="true" href="#evil-compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Evil compatibility&lt;/h2&gt;
&lt;p&gt;To make treemacs get along with evil-mode you need to install and load &lt;code&gt;treemacs-evil&lt;/code&gt;. It does not define any functions
  or offer any configuration options, making sure it is loaded is sufficient.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-customizing-themes-and-icons" class="anchor" aria-hidden="true" href="#customizing-themes-and-icons"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing Themes and Icons&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-creating-and-modifying-themes" class="anchor" aria-hidden="true" href="#creating-and-modifying-themes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating and Modifying Themes&lt;/h3&gt;
&lt;p&gt;Creating and modifying themes and icons is all done in a single step using dedicated macros.&lt;/p&gt;
&lt;p&gt;To create a theme use &lt;code&gt;treemacs-create-theme&lt;/code&gt;. It requires the name of the theme and accepts 3 optional keyword
  arguments: the directory the theme’s icons are stored in (if it’s using png icons), the name of the theme it’s extending
  and the config, a final form that’s responsible for creating all the theme’s icons. A config will typically consist of
  nothing but calls to &lt;code&gt;treemacs-create-icon&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(treemacs-create-theme &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:icon-directory&lt;/span&gt; (f-join treemacs-dir &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;icons/default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (&lt;span class="pl-k"&gt;progn&lt;/span&gt;
    (treemacs-create-icon &lt;span class="pl-c1"&gt;:file&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;root.png&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;   &lt;span class="pl-c1"&gt;:fallback&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;            &lt;span class="pl-c1"&gt;:extensions&lt;/span&gt; (root))
    (treemacs-create-icon &lt;span class="pl-c1"&gt;:file&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;emacs.png&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;  &lt;span class="pl-c1"&gt;:fallback&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;🗏 &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;          &lt;span class="pl-c1"&gt;:extensions&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;el&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;elc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
    (treemacs-create-icon &lt;span class="pl-c1"&gt;:file&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;readme.png&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:fallback&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;🗏 &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;          &lt;span class="pl-c1"&gt;:extensions&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;readme.md&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
    (treemacs-create-icon &lt;span class="pl-c1"&gt;:icon&lt;/span&gt; (all-the-icons-icon-for-file &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;yaml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;:extensions&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;yml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;yaml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;:file&lt;/code&gt; argument is relative to the icon directory of the theme being created. When not using image icons the
  &lt;code&gt;:icon-directory&lt;/code&gt; argument can be omitted and the &lt;code&gt;:file&lt;/code&gt; argument can be switched for &lt;code&gt;:icon&lt;/code&gt; to supply the icon string
  directly. The TUI fallback is also optional, ” ” is used by default. Finally the list of extensions determines which
  file extensions the icon should be used for.&lt;/p&gt;
&lt;p&gt;For treemacs an extension is either the entire file name or the text after the last period (unless
  &lt;code&gt;treemacs-file-extension-regex&lt;/code&gt; is customized). This means it can match normal file names like “init.el”, extensionless
  file names like “Makefile”. Because the full name is checked first it is possible to give special files their own icon,
  for example “Readme.md” can use a different icon than normal markdown files.&lt;/p&gt;
&lt;p&gt;Instead of a string extension a symbol can also be used. In this case treemacs will also create a variable for that icon
  named &lt;code&gt;treemacs-icon-$symbol&lt;/code&gt;. Treemacs uses several such icon variables and any new theme should define their own
  versions (it it’s not extending the default theme). The following icons are used:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;root&lt;/li&gt;
  &lt;li&gt;dir-closed&lt;/li&gt;
  &lt;li&gt;dir-open&lt;/li&gt;
  &lt;li&gt;fallback&lt;/li&gt;
  &lt;li&gt;tag-open&lt;/li&gt;
  &lt;li&gt;tag-closed&lt;/li&gt;
  &lt;li&gt;tag-leaf&lt;/li&gt;
  &lt;li&gt;error&lt;/li&gt;
  &lt;li&gt;info&lt;/li&gt;
  &lt;li&gt;warning&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Analogous to creating a new theme &lt;code&gt;treemacs-modify-theme&lt;/code&gt; can be used to change, or add to, an existing theme:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(treemacs-modify-theme &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:icon-directory&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/other/icons/dir&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (&lt;span class="pl-k"&gt;progn&lt;/span&gt;
    (treemacs-create-icon &lt;span class="pl-c1"&gt;:icon&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:extensions&lt;/span&gt; (dir-closed))
    (treemacs-create-icon &lt;span class="pl-c1"&gt;:icon&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:extensions&lt;/span&gt; (dir-open))))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally keep in mind that treemacs’ icons are all buffer-local values, and will most likely not be defined when trying
  to access their values directly. When you need to programmatically access some of treemacs’ icons you should use
  &lt;code&gt;treemacs-get-icon-value&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(treemacs-get-icon-value &lt;span class="pl-c1"&gt;'root&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
(treemacs-get-icon-value &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-custom-icons" class="anchor" aria-hidden="true" href="#custom-icons"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Icons&lt;/h3&gt;
&lt;p&gt;Treemacs also offers a quick and straighforward way to add a (gui) icon to the currently active theme, without caring
  for its name or declaring icon directories:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defvar&lt;/span&gt; &lt;span class="pl-en"&gt;treemacs-custom-html-icon&lt;/span&gt; (all-the-icons-icon-for-file &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name.html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
(treemacs-define-custom-icon treemacs-custom-html-icon &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;htm&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;b&gt;Important&lt;/b&gt;: There is a restriction that all icons must must be exactly 2 characters long. That’s including the space
  that will separate an icon from the filename.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-icons-according-to-auto-mode-alist" class="anchor" aria-hidden="true" href="#icons-according-to-auto-mode-alist"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Icons according to &lt;code&gt;auto-mode-alist&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;For some file extensions, like “.cc” or “.hh”, it is not immediately obvious which major mode will open these files, and
  thus which icon they should be assigned. Treemacs offers the option that automate this decision based on
  &lt;code&gt;auto-mode-alist&lt;/code&gt;. You can use the function &lt;code&gt;treemacs-map-icons-with-auto-mode-alist&lt;/code&gt; to change the assigned icons for a
  list of file extensions based on the major mode the icons are mapped to in &lt;code&gt;auto-mode-alist&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;treemacs-map-icons-with-auto-mode-alist&lt;/code&gt; takes 2 arguments: first a list of file extensions, then an alist that decides
  which icon should be used for which mapped major mode. For example the code to decide the icons for “.hh” and “.cc”
  files with &lt;code&gt;auto-mode-alist&lt;/code&gt; would look like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(treemacs-map-icons-with-auto-mode-alist
 '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.cc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.hh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 '((&lt;span class="pl-c1"&gt;c-mode&lt;/span&gt;   &lt;span class="pl-k"&gt;.&lt;/span&gt; (treemacs-get-icon-value &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;c&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
   (&lt;span class="pl-c1"&gt;c++-mode&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; (treemacs-get-icon-value &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cpp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))))&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-gui-vs-tui" class="anchor" aria-hidden="true" href="#gui-vs-tui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GUI vs TUI&lt;/h4&gt;
&lt;p&gt;It is possible to force treemacs to use the simple TUI icons in GUI mode by setting &lt;code&gt;treemacs-no-png-images&lt;/code&gt; to t.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-resizing-icons" class="anchor" aria-hidden="true" href="#resizing-icons"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resizing Icons&lt;/h4&gt;
&lt;p&gt;If your emacs has been compiled with imagemagick support you can arbitrarily change the size of treemacs’ icons by
  (interactively or programmatically) calling &lt;code&gt;treemacs-resize-icons&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-indent-guide" class="anchor" aria-hidden="true" href="#indent-guide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Indent guide&lt;/h3&gt;
&lt;p&gt;Not really part of the icons, but a useful visual feature nonetheless: An indent guide like effect can be created by
  selecting appropriate values for &lt;code&gt;treemacs-indentation&lt;/code&gt; and &lt;code&gt;treemacs-indentation-string&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;setq&lt;/span&gt; treemacs-indentation-string (&lt;span class="pl-c1"&gt;propertize&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; ⫶ &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;'face&lt;/span&gt; &lt;span class="pl-c1"&gt;'font-lock-comment-face&lt;/span&gt;)
      treemacs-indentation &lt;span class="pl-c1"&gt;1&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-keymap" class="anchor" aria-hidden="true" href="#keymap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keymap&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-unbound-functions" class="anchor" aria-hidden="true" href="#unbound-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unbound functions&lt;/h2&gt;
&lt;p&gt;These functions are not bound to any keys by default. It’s left up to users to find the most convenient key binds.&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Action&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs&lt;/td&gt;&lt;td&gt;Show/Hide/Initialize treemacs.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-bookmark&lt;/td&gt;&lt;td&gt;Find a bookmark in treemacs.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-find-file&lt;/td&gt;&lt;td&gt;Find and focus the current file in treemacs.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-find-tag&lt;/td&gt;&lt;td&gt;Find and focus the current tag in treemacs.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-select-window&lt;/td&gt;&lt;td&gt;Select the treemacs window if it is visible. Call &lt;code&gt;treemacs&lt;/code&gt; if it is not.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-delete-other-windows&lt;/td&gt;&lt;td&gt;Same as &lt;code&gt;delete-other-windows&lt;/code&gt;, but will not delete the treemacs window.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-show-changelog&lt;/td&gt;&lt;td&gt;Opens a buffer showing the changelog.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-load-theme&lt;/td&gt;&lt;td&gt;Load a different icon theme.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-projectile&lt;/td&gt;&lt;td&gt;Add a project from projectile to treemacs.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-add-and-display-current-project&lt;/td&gt;&lt;td&gt;Add current project to treemacs and open it.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-default-keymaps" class="anchor" aria-hidden="true" href="#default-keymaps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Default keymaps&lt;/h2&gt;
&lt;p&gt;Treemacs’ keybindings are distributed to several keymaps, based on common keybindings:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-project-keybinds-prefix-c-c-c-p" class="anchor" aria-hidden="true" href="#project-keybinds-prefix-c-c-c-p"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Keybinds (Prefix &lt;code&gt;C-c C-p&lt;/code&gt;)&lt;/h3&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Key&lt;/th&gt;&lt;th&gt;Action&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-p a&lt;/td&gt;&lt;td&gt;treemacs-add-project-to-workspace&lt;/td&gt;&lt;td&gt;Select a new project to add to the treemacs workspace.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-p p&lt;/td&gt;&lt;td&gt;treemacs-projectile&lt;/td&gt;&lt;td&gt;Select a projectile project to add to the workspace.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-p d&lt;/td&gt;&lt;td&gt;treemacs-remove-project-from-workspace&lt;/td&gt;&lt;td&gt;Remove project at point from the workspace.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-p r&lt;/td&gt;&lt;td&gt;treemacs-rename-project&lt;/td&gt;&lt;td&gt;Rename project at point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-p c c&lt;/td&gt;&lt;td&gt;treemacs-collapse-project&lt;/td&gt;&lt;td&gt;Collapse project at point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-p c o/S-TAB&lt;/td&gt;&lt;td&gt;treemacs-collapse-all-projects&lt;/td&gt;&lt;td&gt;Collapse all projects.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-p c o&lt;/td&gt;&lt;td&gt;treemacs-collapse-all-projects&lt;/td&gt;&lt;td&gt;Collapse all projects except the project at point.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-workspaces-keybinds-prefix-c-c-c-w" class="anchor" aria-hidden="true" href="#workspaces-keybinds-prefix-c-c-c-w"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Workspaces Keybinds (Prefix &lt;code&gt;C-c C-w&lt;/code&gt;)&lt;/h3&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Key&lt;/th&gt;&lt;th&gt;Action&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-w r&lt;/td&gt;&lt;td&gt;treemacs-rename-workspace&lt;/td&gt;&lt;td&gt;Rename a workspace.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-w a&lt;/td&gt;&lt;td&gt;treemacs-create-workspace&lt;/td&gt;&lt;td&gt;Create a new workspace.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-w d&lt;/td&gt;&lt;td&gt;treemacs-remove-workspace&lt;/td&gt;&lt;td&gt;Delete a workspace.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-w s&lt;/td&gt;&lt;td&gt;treemacs-switch-workspace&lt;/td&gt;&lt;td&gt;Switch the current workspace.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-w e&lt;/td&gt;&lt;td&gt;treemacs-edit-workspaces&lt;/td&gt;&lt;td&gt;Edit workspace layout via org-mode.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-w f&lt;/td&gt;&lt;td&gt;treemacs-set-fallback-workspace&lt;/td&gt;&lt;td&gt;Select the default fallback workspace.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-node-visit-keybinds-prefix-o" class="anchor" aria-hidden="true" href="#node-visit-keybinds-prefix-o"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Node Visit Keybinds (Prefix &lt;code&gt;o&lt;/code&gt;)&lt;/h3&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Key&lt;/th&gt;&lt;th&gt;Action&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;ov&lt;/td&gt;&lt;td&gt;treemacs-visit-node-vertical-split&lt;/td&gt;&lt;td&gt;Open current file or tag by vertically splitting &lt;code&gt;next-window&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;oh&lt;/td&gt;&lt;td&gt;treemacs-visit-node-horizontal-split&lt;/td&gt;&lt;td&gt;Open current file or tag by horizontally splitting &lt;code&gt;next-window&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;oo/RET&lt;/td&gt;&lt;td&gt;treemacs-visit-node-no-split&lt;/td&gt;&lt;td&gt;Open current file or tag, performing no split and using &lt;code&gt;next-window&lt;/code&gt; directly.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;oaa&lt;/td&gt;&lt;td&gt;treemacs-visit-node-ace&lt;/td&gt;&lt;td&gt;Open current file or tag, using ace-window to decide which window to open the file in.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;oah&lt;/td&gt;&lt;td&gt;treemacs-visit-node-ace-horizontal-split&lt;/td&gt;&lt;td&gt;Open current file or tag by horizontally splitting a window selected by ace-window.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;oav&lt;/td&gt;&lt;td&gt;treemacs-visit-node-ace-vertical-split&lt;/td&gt;&lt;td&gt;Open current file or tag by vertically splitting a window selected by ace-window.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;or&lt;/td&gt;&lt;td&gt;treemacs-visit-node-in-most-recently-used-window&lt;/td&gt;&lt;td&gt;Open current file or tag in the most recently used window.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;ox&lt;/td&gt;&lt;td&gt;treemacs-visit-node-in-external-application&lt;/td&gt;&lt;td&gt;Open current file according to its mime type in an external application. Linux, Windows and Mac are supported.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-toggle-keybinds-prefix-t" class="anchor" aria-hidden="true" href="#toggle-keybinds-prefix-t"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Toggle Keybinds (Prefix &lt;code&gt;t&lt;/code&gt;)&lt;/h3&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Key&lt;/th&gt;&lt;th&gt;Action&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;th&lt;/td&gt;&lt;td&gt;treemacs-toggle-show-dotfiles&lt;/td&gt;&lt;td&gt;Toggle the hiding and displaying of dotfiles.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;tw&lt;/td&gt;&lt;td&gt;treemacs-toggle-fixed-width&lt;/td&gt;&lt;td&gt;Toggle whether the treemacs window should have a fixed width. See also treemacs-width.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;tf&lt;/td&gt;&lt;td&gt;treemacs-follow-mode&lt;/td&gt;&lt;td&gt;Toggle &lt;code&gt;treemacs-follow-mode&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;ta&lt;/td&gt;&lt;td&gt;treemacs-filewatch-mode&lt;/td&gt;&lt;td&gt;Toggle &lt;code&gt;treemacs-filewatch-mode&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;tv&lt;/td&gt;&lt;td&gt;treemacs-fringe-indicator-mode&lt;/td&gt;&lt;td&gt;Toggle &lt;code&gt;treemacs-fringe-indicator-mode&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-copy-keybinds-prefix-y" class="anchor" aria-hidden="true" href="#copy-keybinds-prefix-y"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copy Keybinds (Prefix &lt;code&gt;y&lt;/code&gt;)&lt;/h3&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Key&lt;/th&gt;&lt;th&gt;Action&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;yy&lt;/td&gt;&lt;td&gt;treemacs-copy-path-at-point&lt;/td&gt;&lt;td&gt;Copy the absolute path of the node at point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;yr&lt;/td&gt;&lt;td&gt;treemacs-copy-project-root&lt;/td&gt;&lt;td&gt;Copy the absolute path of the project root for the node at point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;yf&lt;/td&gt;&lt;td&gt;treemacs-copy-file&lt;/td&gt;&lt;td&gt;Copy the file at point.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-general-keybinds" class="anchor" aria-hidden="true" href="#general-keybinds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;General Keybinds&lt;/h3&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Key&lt;/th&gt;&lt;th&gt;Action&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;?&lt;/td&gt;&lt;td&gt;treemacs-helpful-hydra&lt;/td&gt;&lt;td&gt;Summon the helpful hydra to show you the treemacs keymap.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;j/n&lt;/td&gt;&lt;td&gt;treemacs-next-line&lt;/td&gt;&lt;td&gt;Go to the next line.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;k/p&lt;/td&gt;&lt;td&gt;treemacs-previous-line&lt;/td&gt;&lt;td&gt;Go to the previous line.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;M-J/N&lt;/td&gt;&lt;td&gt;treemacs-next-line-other-window&lt;/td&gt;&lt;td&gt;Go to the next line in &lt;code&gt;next-window&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;M-K/P&lt;/td&gt;&lt;td&gt;treemacs-previous-line-other-window&lt;/td&gt;&lt;td&gt;Go to the previous line in &lt;code&gt;next-window&lt;/code&gt;..&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&amp;lt;PgUp&amp;gt;&lt;/td&gt;&lt;td&gt;treemacs-next-page-other-window&lt;/td&gt;&lt;td&gt;Go to the next page in &lt;code&gt;next-window&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&amp;lt;PgDn&amp;gt;&lt;/td&gt;&lt;td&gt;treemacs-previous-page-other-window&lt;/td&gt;&lt;td&gt;Go to the previous page in &lt;code&gt;next-window&lt;/code&gt;..&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;M-j/M-n&lt;/td&gt;&lt;td&gt;treemacs-next-neighbour&lt;/td&gt;&lt;td&gt;Go to the next same-level neighbour of the current node.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;M-k/M-p&lt;/td&gt;&lt;td&gt;treemacs-previous-neighbour&lt;/td&gt;&lt;td&gt;Go to the previous same-level neighbour of the current node.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;u&lt;/td&gt;&lt;td&gt;treemacs-goto-parent-node&lt;/td&gt;&lt;td&gt;Go to parent of node at point, if possible.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&amp;lt;M-Up&amp;gt;&lt;/td&gt;&lt;td&gt;treemacs-move-project-up&lt;/td&gt;&lt;td&gt;Switch positions of project at point and the one above it.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&amp;lt;M-Down&amp;gt;&lt;/td&gt;&lt;td&gt;treemacs-move-project-down&lt;/td&gt;&lt;td&gt;Switch positions of project at point and the one below it.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;w&lt;/td&gt;&lt;td&gt;treemacs-set-width&lt;/td&gt;&lt;td&gt;Set a new value for the width of the treemacs window.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;RET&lt;/td&gt;&lt;td&gt;treemacs-RET-action&lt;/td&gt;&lt;td&gt;Run the action defined in &lt;code&gt;treemacs-RET-actions-config&lt;/code&gt; for the current node.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;TAB&lt;/td&gt;&lt;td&gt;treemacs-TAB-action&lt;/td&gt;&lt;td&gt;Run the action defined in &lt;code&gt;treemacs-TAB-actions-config&lt;/code&gt; for the current node.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;g/r/gr&lt;/td&gt;&lt;td&gt;treemacs-refresh&lt;/td&gt;&lt;td&gt;Refresh the project at point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;d&lt;/td&gt;&lt;td&gt;treemacs-delete&lt;/td&gt;&lt;td&gt;Delete node at point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;R&lt;/td&gt;&lt;td&gt;treemacs-rename&lt;/td&gt;&lt;td&gt;Rename node at point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;cf&lt;/td&gt;&lt;td&gt;treemacs-create-file&lt;/td&gt;&lt;td&gt;Create a file.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;cd&lt;/td&gt;&lt;td&gt;treemacs-create-dir&lt;/td&gt;&lt;td&gt;Create a directory.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;q&lt;/td&gt;&lt;td&gt;treemacs-quit&lt;/td&gt;&lt;td&gt;Hide the treemacs window.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Q&lt;/td&gt;&lt;td&gt;treemacs-kill-buffer&lt;/td&gt;&lt;td&gt;Delete the treemacs buffer.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;P&lt;/td&gt;&lt;td&gt;treemacs-peek&lt;/td&gt;&lt;td&gt;Peek at the file (or tag) at point without fully opening it.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;yy&lt;/td&gt;&lt;td&gt;treemacs-copy-path-at-point&lt;/td&gt;&lt;td&gt;Copy the absolute path of the node at point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;yr&lt;/td&gt;&lt;td&gt;treemacs-copy-project-root&lt;/td&gt;&lt;td&gt;Copy the absolute path of the project root for the node at point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;yf&lt;/td&gt;&lt;td&gt;treemacs-copy-file&lt;/td&gt;&lt;td&gt;Copy the file at point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;m&lt;/td&gt;&lt;td&gt;treemacs-move-file&lt;/td&gt;&lt;td&gt;Move the file at point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;s&lt;/td&gt;&lt;td&gt;treemacs-resort&lt;/td&gt;&lt;td&gt;Set a new value for &lt;code&gt;treemacs-sorting&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;b&lt;/td&gt;&lt;td&gt;treemacs-add-bookmark&lt;/td&gt;&lt;td&gt;Bookmark the currently selected files’s, dir’s or tag’s location.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;h&lt;/td&gt;&lt;td&gt;treemacs-root-up&lt;/td&gt;&lt;td&gt;Move treemacs’ root one level upward. Only works with a single project in the workspace.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;l&lt;/td&gt;&lt;td&gt;treemacs-root-down&lt;/td&gt;&lt;td&gt;Move treemacs’ root into the directory at point. Only works with a single project in the workspace.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;H&lt;/td&gt;&lt;td&gt;treemacs-collapse-parent-node&lt;/td&gt;&lt;td&gt;Collapse the parent of the node at point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;\!&lt;/td&gt;&lt;td&gt;treemacs-run-shell-command-for-current-node&lt;/td&gt;&lt;td&gt;Run an asynchronous shell command on the current node, replacing “$path” with its path.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;M-!&lt;/td&gt;&lt;td&gt;treemacs-run-shell-command-in-project-root&lt;/td&gt;&lt;td&gt;Run an asynchronous shell command in the root of the current project, replacing “$path” with its path.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-compatibility" class="anchor" aria-hidden="true" href="#compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compatibility&lt;/h1&gt;
&lt;p&gt;The correctness of treemacs’ display behaviour is, to a large degree, ensured through window properties and reacting to
  changes in the window configuration. The packages most likely to cause trouble for treemacs are therefore those that
  interfere with Emacs’ buffer spawning and window splitting behaviour. Treemacs is included in Spacemacs and I am a
  Spacemacs user, therefore treemacs guarantees first-class support &amp;amp; compatibility for window-managing packages used in
  Spacemacs, namely &lt;a href="https://github.com/Bad-ptr/persp-mode.el"&gt;persp&lt;/a&gt;, &lt;a href="https://github.com/wasamasa/eyebrowse"&gt;eyebrowse&lt;/a&gt;, &lt;a href="https://github.com/m2ym/popwin-el"&gt;popwin&lt;/a&gt; and &lt;a href="https://github.com/bmag/emacs-purpose"&gt;window-purpose&lt;/a&gt;, as well as &lt;a href="https://github.com/wasamasa/shackle"&gt;shackle&lt;/a&gt;. For everything else there may be
  issues and, depending on the complexity of the problem, I may decide it is not worth fixing.&lt;/p&gt;
&lt;p&gt;Aside from this there are the following known incompatibilities:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Any package invoking &lt;code&gt;font-lock-ensure&lt;/code&gt; in the treemacs buffer. This will reset the faces of treemacs’ buttons (once)
    and is a known &lt;a href="https://debbugs.gnu.org/cgi/bugreport.cgi?bug=28599" rel="nofollow"&gt;emacs bug&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;A possible cause of this issue using an old version of swiper.&lt;/li&gt;
  &lt;li&gt;Rainbow mode activated in treemacs will likewise produce this behaviour. Make sure not to include rainbow-mode as
    part of &lt;code&gt;special-mode-hook&lt;/code&gt;, since this is the mode &lt;code&gt;treemacs-mode&lt;/code&gt; is derived from.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;How do I hide files I don’t want to see?
    &lt;p&gt;You need to define a predicate function and add it to &lt;code&gt;treemacs-ignored-file-predicates&lt;/code&gt;. This function accepts two
      arguments, a file’s name and its absolute path, and must return non-nil when treemacs should hide that file.&lt;/p&gt;
    &lt;p&gt;For example the code to ignore files eiter called “foo” or located in ”&lt;i&gt;x/y/z&lt;/i&gt;” would look like this:&lt;/p&gt;
    &lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;with-eval-after-load&lt;/span&gt; &lt;span class="pl-c1"&gt;'treemacs&lt;/span&gt;

  (&lt;span class="pl-k"&gt;defun&lt;/span&gt; &lt;span class="pl-e"&gt;treemacs-ignore-example&lt;/span&gt; (&lt;span class="pl-v"&gt;filename&lt;/span&gt; &lt;span class="pl-v"&gt;absolute-path&lt;/span&gt;)
    (&lt;span class="pl-k"&gt;or&lt;/span&gt; (&lt;span class="pl-c1"&gt;string-equal&lt;/span&gt; filename &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        (&lt;span class="pl-c1"&gt;string-prefix-p&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/x/y/z/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; absolute-path)))

  (&lt;span class="pl-c1"&gt;add-to-list&lt;/span&gt; &lt;span class="pl-c1"&gt;'treemacs-ignored-file-predicates&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'treemacs-ignore-example&lt;/span&gt;&lt;/span&gt;))
    &lt;/pre&gt;&lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;How do I keep treemacs from showing files that are ignored by git?
    &lt;p&gt;Short answer:&lt;/p&gt;
    &lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;with-eval-after-load&lt;/span&gt; &lt;span class="pl-c1"&gt;'treemacs&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;add-to-list&lt;/span&gt; &lt;span class="pl-c1"&gt;'treemacs-pre-file-insert-predicates&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'treemacs-is-file-git-ignored?&lt;/span&gt;&lt;/span&gt;))
    &lt;/pre&gt;&lt;/div&gt;
    &lt;p&gt;A slightly longer explanation about how you can hook into the render process can be found in the documentation string
      of &lt;code&gt;treemacs-pre-file-insert-predicates&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Why am I seeing no file icons and only +/- for directories?
    &lt;p&gt;Treemacs will permanently fall back on its simple TUI icons if it detects that the emacs instance it is run in cannot
      create images. You can test this by evaluating &lt;code&gt;(create-image "" 'png)&lt;/code&gt;. If this code returns an error like “Invalid
      image type ´png´” your emacs does not support images.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;How do I get treemacs to stop telling me when it’s been refreshed, especially with filewatch-mode?
    &lt;p&gt;See &lt;code&gt;treemacs-silent-refresh&lt;/code&gt; and &lt;code&gt;treemacs-silent-filewatch&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;ENOSPC / No space left on device
    &lt;p&gt;You may run into this error when you use filewatch-mode. The solution is to increase the number of allowed user
      watches, as described in &lt;a href="https://stackoverflow.com/questions/16748737/grunt-watch-error-waiting-fatal-error-watch-enospc" rel="nofollow"&gt;this link&lt;/a&gt;. You’ll also want to see what’s responsible for setting all those file watches in
      the first place, since treemacs only watches the directories it is displaying and so won’t produce more than a couple
      dozen watches at best.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Why is treemacs warning me about not being able to find some background colors and falling back to something else?
    &lt;p&gt;Treemacs needs those colors to make sure that background colors of its icons correctly align with hl-line-mode. Png
      images’ backgrounds are not highlighted by hl-line-mode by default, treemacs is manually correcting this every time
      hl-line’s overlay is moved. To make that correction work it needs to know two colors: the current theme’s &lt;code&gt;default&lt;/code&gt;
      background, and its &lt;code&gt;hl-line&lt;/code&gt; background color. If treemacs cannot find hl-lines’s background color it falls back to
      the default background color. If it cannot even find the default background it will fall back to #2d2d31. The
      warnings serve to inform you of that fallback.&lt;/p&gt;
    &lt;p&gt;If your theme does not define a required color you can set it yourself before treemacs loads like this:&lt;/p&gt;
    &lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;set-face-attribute&lt;/span&gt; &lt;span class="pl-c1"&gt;'hl-line&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;:background&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#333333&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;/pre&gt;&lt;/div&gt;
    &lt;p&gt;If you just want to disable the warnings you can do so by defining the variable &lt;code&gt;treemacs-no-load-time-warnings&lt;/code&gt;. Its
      exact value is irrelevant, all that matters is that it exists at all. Since the warnings are issues when treemacs is
      first being loaded the variable must be defined &lt;b&gt;before&lt;/b&gt; treemacs is initialized. This is best achieved by adding the
      line &lt;code&gt;(defvar treemacs-no-load-time-warnings t)&lt;/code&gt; to treemacs’ use-package &lt;code&gt;:init&lt;/code&gt; block.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Can I expand &lt;b&gt;everything&lt;/b&gt; under a node?
    &lt;p&gt;Yes, you just need to expand it with a &lt;a href="https://www.emacswiki.org/emacs/PrefixArgument" rel="nofollow"&gt;prefix argument&lt;/a&gt;. Closing nodes with a prefix argument works as well. In this
      case treemacs will forget about the nodes opened below the one that was closed and not reopen them automatically.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;Contributions are very much welcome, but should fit the general scope and style of treemacs. The following is a list of
  guidelines that should be met (exceptions confirm the rule):&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;There should be one commit per feature.&lt;/li&gt;
  &lt;li&gt;Commit messages should start with a note in brackets that roughly describes the area the commit relates to, for
    example &lt;code&gt;[Icons]&lt;/code&gt; if you add an icon.&lt;/li&gt;
  &lt;li&gt;Code must be in the right place (what with the codebase being split in many small files). If there is no right place
    it probably goes into treemacs-core-utils.el which is where all the general implementation details go.&lt;/li&gt;
  &lt;li&gt;New features must be documented in the readme (for example mentioning new config options in the &lt;a href="#variables"&gt;Config Table&lt;/a&gt;).&lt;/li&gt;
  &lt;li&gt;There must not be any compiler warnings.&lt;/li&gt;
  &lt;li&gt;The test suite must pass.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Treemacs uses cask to setup a local testing environment and a Makefile that simplifies compiling and testing the
  codebase. First run &lt;code&gt;cask install&lt;/code&gt; to locally pull treemacs’ dependencies. Then you can use the following Makefile
  targets:&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;make prepare&lt;/dt&gt;&lt;dd&gt;Downloads and updates Cask’s dependencies. Is a dependency of the &lt;code&gt;test&lt;/code&gt; and &lt;code&gt;compile&lt;/code&gt; targets.&lt;/dd&gt;
  &lt;dt&gt;make compile&lt;/dt&gt;&lt;dd&gt;Compiles the code base (and treats compiler warnings as errors).&lt;/dd&gt;
  &lt;dt&gt;make clean&lt;/dt&gt;&lt;dd&gt;Removes the generated .elc files.&lt;/dd&gt;
  &lt;dt&gt;make lint&lt;/dt&gt;&lt;dd&gt;Runs first &lt;code&gt;compile&lt;/code&gt; then &lt;code&gt;clean&lt;/code&gt;, even if the former fails.&lt;/dd&gt;
  &lt;dt&gt;make test&lt;/dt&gt;&lt;dd&gt;Runs the testsuite, once in a graphical environment and once in the terminal.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Finally if you want to just add an icon you can take &lt;a href="https://github.com/Alexander-Miller/treemacs/commit/94df3e36af865dab2c76b549b1a61f418e3bf5be"&gt;this commit&lt;/a&gt; as an example (though the icons have since been moved
  into their own module in &lt;code&gt;treemacs-icons.el&lt;/code&gt;).&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-working-with-the-code-base" class="anchor" aria-hidden="true" href="#working-with-the-code-base"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Working With The Code Base&lt;/h1&gt;
&lt;p&gt;If you want to delve into the treemacs’ code base, check out &lt;a href="https://github.com/Alexander-Miller/treemacs/wiki"&gt;the wiki&lt;/a&gt; for some general pointers.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;emacs &amp;gt;= 25.2&lt;/li&gt;
  &lt;li&gt;f.el&lt;/li&gt;
  &lt;li&gt;s.el&lt;/li&gt;
  &lt;li&gt;dash&lt;/li&gt;
  &lt;li&gt;cl-lib&lt;/li&gt;
  &lt;li&gt;ace-window&lt;/li&gt;
  &lt;li&gt;pfuture&lt;/li&gt;
  &lt;li&gt;ht&lt;/li&gt;
  &lt;li&gt;hydra&lt;/li&gt;
  &lt;li&gt;(optionally) evil&lt;/li&gt;
  &lt;li&gt;(optionally) projectile&lt;/li&gt;
  &lt;li&gt;(optionally) winum&lt;/li&gt;
  &lt;li&gt;(optionally) python(3)&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Alexander-Miller</author><guid isPermaLink="false">https://github.com/Alexander-Miller/treemacs</guid><pubDate>Sat, 28 Dec 2019 00:07:00 GMT</pubDate></item><item><title>jwiegley/use-package #8 in Emacs Lisp, This week</title><link>https://github.com/jwiegley/use-package</link><description>&lt;p&gt;&lt;i&gt;A use-package declaration for simplifying your .emacs&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-use-package" class="anchor" aria-hidden="true" href="#use-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;use-package&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitter.im/use-package/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aaf22fcf54c86823689c20fd4e01f6eb53c22408/68747470733a2f2f6261646765732e6769747465722e696d2f7573652d7061636b6167652f4c6f6262792e737667" alt="Join the chat at https://gitter.im/use-package/Lobby" data-canonical-src="https://badges.gitter.im/use-package/Lobby.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/jwiegley/use-package" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ac1dfb9d155cd71ac61fe6135f13b072fa68e413/68747470733a2f2f7472617669732d63692e6f72672f6a776965676c65792f7573652d7061636b6167652e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/jwiegley/use-package.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://melpa.milkbox.net/#/use-package" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9e2b993215bec6257e83bb37be402ef9b5a37d95/687474703a2f2f6d656c70612e6d696c6b626f782e6e65742f7061636b616765732f7573652d7061636b6167652d62616467652e737667" alt="MELPA" data-canonical-src="http://melpa.milkbox.net/packages/use-package-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://stable.melpa.org/#/use-package" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/61b06b0a52fee3022aaaa74c5998ba2d961d1c42/68747470733a2f2f737461626c652e6d656c70612e6f72672f7061636b616765732f7573652d7061636b6167652d62616467652e737667" alt="MELPA Stable" data-canonical-src="https://stable.melpa.org/packages/use-package-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;use-package&lt;/code&gt; macro allows you to isolate package configuration in your
&lt;code&gt;.emacs&lt;/code&gt; file in a way that is both performance-oriented and, well, tidy.  I
created it because I have over 80 packages that I use in Emacs, and things
were getting difficult to manage.  Yet with this utility my total load time is
around 2 seconds, with no loss of functionality!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;use-package&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; a package manager! Although &lt;code&gt;use-package&lt;/code&gt;
does have the useful capability to interface with package managers (see
&lt;a href="#package-installation"&gt;below&lt;/a&gt;), its primary purpose is for the configuration
and loading of packages.&lt;/p&gt;
&lt;p&gt;Notes for users upgrading to 2.x are located &lt;a href="#upgrading-to-2x"&gt;at the bottom&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing-use-package" class="anchor" aria-hidden="true" href="#installing-use-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing use-package&lt;/h2&gt;
&lt;p&gt;Either clone from this GitHub repository or install from
&lt;a href="http://melpa.milkbox.net/" rel="nofollow"&gt;MELPA&lt;/a&gt; (recommended).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h2&gt;
&lt;p&gt;Here is the simplest &lt;code&gt;use-package&lt;/code&gt; declaration:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; This is only needed once, near the top of the file&lt;/span&gt;
(&lt;span class="pl-c1"&gt;eval-when-compile&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Following line is not needed if use-package.el is in ~/.emacs.d&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;add-to-list&lt;/span&gt; &lt;span class="pl-c1"&gt;'load-path&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;path where use-package is installed&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  (&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'use-package&lt;/span&gt;))

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; foo)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This loads in the package &lt;code&gt;foo&lt;/code&gt;, but only if &lt;code&gt;foo&lt;/code&gt; is available on your
system. If not, a warning is logged to the &lt;code&gt;*Messages*&lt;/code&gt; buffer.&lt;/p&gt;
&lt;p&gt;Use the &lt;code&gt;:init&lt;/code&gt; keyword to execute code before a package is loaded.  It
accepts one or more forms, up to the next keyword:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; foo
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; foo-variable &lt;span class="pl-c1"&gt;t&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Similarly, &lt;code&gt;:config&lt;/code&gt; can be used to execute code after a package is loaded.
In cases where loading is done lazily (see more about autoloading below), this
execution is deferred until after the autoload occurs:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; foo
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; foo-variable &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (foo-mode &lt;span class="pl-c1"&gt;1&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you might expect, you can use &lt;code&gt;:init&lt;/code&gt; and &lt;code&gt;:config&lt;/code&gt; together:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; color-moccur
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; (isearch-moccur isearch-all)
  &lt;span class="pl-c1"&gt;:bind&lt;/span&gt; ((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-s O&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; moccur)
         &lt;span class="pl-c1"&gt;:map&lt;/span&gt; isearch-mode-map
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-o&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; isearch-moccur)
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-O&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; isearch-moccur-all))
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; isearch-lazy-highlight &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; moccur-edit))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this case, I want to autoload the commands &lt;code&gt;isearch-moccur&lt;/code&gt; and
&lt;code&gt;isearch-all&lt;/code&gt; from &lt;code&gt;color-moccur.el&lt;/code&gt;, and bind keys both at the global level
and within the &lt;code&gt;isearch-mode-map&lt;/code&gt; (see next section).  When the package is
actually loaded (by using one of these commands), &lt;code&gt;moccur-edit&lt;/code&gt; is also
loaded, to allow editing of the &lt;code&gt;moccur&lt;/code&gt; buffer.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-key-binding" class="anchor" aria-hidden="true" href="#key-binding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Key-binding&lt;/h2&gt;
&lt;p&gt;Another common thing to do when loading a module is to bind a key to primary
commands within that module:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:bind&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; ace-jump-mode))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This does two things: first, it creates an autoload for the &lt;code&gt;ace-jump-mode&lt;/code&gt;
command and defers loading of &lt;code&gt;ace-jump-mode&lt;/code&gt; until you actually use it.
Second, it binds the key &lt;code&gt;C-.&lt;/code&gt; to that command.  After loading, you can use
&lt;code&gt;M-x describe-personal-keybindings&lt;/code&gt; to see all such keybindings you've set
throughout your &lt;code&gt;.emacs&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;A more literal way to do the exact same thing is:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (bind-key &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;'ace-jump-mode&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you use the &lt;code&gt;:commands&lt;/code&gt; keyword, it creates autoloads for those commands
and defers loading of the module until they are used.  Since the &lt;code&gt;:init&lt;/code&gt; form
is always run -- even if &lt;code&gt;ace-jump-mode&lt;/code&gt; might not be on your system --
remember to restrict &lt;code&gt;:init&lt;/code&gt; code to only what would succeed either way.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;:bind&lt;/code&gt; keyword takes either a cons or a list of conses:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; hi-lock
  &lt;span class="pl-c1"&gt;:bind&lt;/span&gt; ((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-o l&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; highlight-lines-matching-regexp)
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-o r&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; highlight-regexp)
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-o w&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; highlight-phrase)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;:commands&lt;/code&gt; keyword likewise takes either a symbol or a list of symbols.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: inside strings, special keys like &lt;code&gt;tab&lt;/code&gt; or &lt;code&gt;F1&lt;/code&gt;-&lt;code&gt;Fn&lt;/code&gt; have to be written inside angle brackets, e.g. &lt;code&gt;"C-&amp;lt;up&amp;gt;"&lt;/code&gt;.
Standalone special keys (and some combinations) can be written in square brackets, e.g. &lt;code&gt;[tab]&lt;/code&gt; instead of &lt;code&gt;"&amp;lt;tab&amp;gt;"&lt;/code&gt;. The syntax for the keybindings is similar to
the "kbd" syntax: see &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Init-Rebinding.html" rel="nofollow"&gt;https://www.gnu.org/software/emacs/manual/html_node/emacs/Init-Rebinding.html&lt;/a&gt;
for more information.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; helm
  &lt;span class="pl-c1"&gt;:bind&lt;/span&gt; ((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; helm-M-x)
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-&amp;lt;f5&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; helm-find-files)
         ([f10] &lt;span class="pl-k"&gt;.&lt;/span&gt; helm-buffers-list)
         ([S-f10] &lt;span class="pl-k"&gt;.&lt;/span&gt; helm-recentf)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Furthermore, &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/elisp/Remapping-Commands.html" rel="nofollow"&gt;remapping commands&lt;/a&gt;
with &lt;code&gt;:bind&lt;/code&gt; and &lt;code&gt;bind-key&lt;/code&gt; works as expected, because when the
binding is a vector, it is passed straight to &lt;code&gt;define-key&lt;/code&gt;. So the
following example will rebind &lt;code&gt;M-q&lt;/code&gt; (originally &lt;code&gt;fill-paragraph&lt;/code&gt;) to
&lt;code&gt;unfill-toggle&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; unfill
  &lt;span class="pl-c1"&gt;:bind&lt;/span&gt; ([remap fill-paragraph] &lt;span class="pl-k"&gt;.&lt;/span&gt; unfill-toggle))&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-binding-to-keymaps" class="anchor" aria-hidden="true" href="#binding-to-keymaps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Binding to keymaps&lt;/h3&gt;
&lt;p&gt;Normally &lt;code&gt;:bind&lt;/code&gt; expects that commands are functions that will be autoloaded
from the given package. However, this does not work if one of those commands
is actually a keymap, since keymaps are not functions, and cannot be
autoloaded using Emacs' &lt;code&gt;autoload&lt;/code&gt; mechanism.&lt;/p&gt;
&lt;p&gt;To handle this case, &lt;code&gt;use-package&lt;/code&gt; offers a special, limited variant of
&lt;code&gt;:bind&lt;/code&gt; called &lt;code&gt;:bind-keymap&lt;/code&gt;. The only difference is that the "commands"
bound to by &lt;code&gt;:bind-keymap&lt;/code&gt; must be keymaps defined in the package, rather than
command functions. This is handled behind the scenes by generating custom code
that loads the package containing the keymap, and then re-executes your
keypress after the first load, to reinterpret that keypress as a prefix key.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; projectile
  &lt;span class="pl-c1"&gt;:bind-keymap&lt;/span&gt;
  (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-c p&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; projectile-command-map))&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-binding-within-local-keymaps" class="anchor" aria-hidden="true" href="#binding-within-local-keymaps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Binding within local keymaps&lt;/h3&gt;
&lt;p&gt;Slightly different from binding a key to a keymap, is binding a key &lt;em&gt;within&lt;/em&gt; a
local keymap that only exists after the package is loaded.  &lt;code&gt;use-package&lt;/code&gt;
supports this with a &lt;code&gt;:map&lt;/code&gt; modifier, taking the local keymap to bind to:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; helm
  &lt;span class="pl-c1"&gt;:bind&lt;/span&gt; (&lt;span class="pl-c1"&gt;:map&lt;/span&gt; helm-command-map
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-c h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; helm-execute-persistent-action)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The effect of this statement is to wait until &lt;code&gt;helm&lt;/code&gt; has loaded, and then to
bind the key &lt;code&gt;C-c h&lt;/code&gt; to &lt;code&gt;helm-execute-persistent-action&lt;/code&gt; within Helm's local
keymap, &lt;code&gt;helm-mode-map&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Multiple uses of &lt;code&gt;:map&lt;/code&gt; may be specified. Any binding occurring before the
first use of &lt;code&gt;:map&lt;/code&gt; are applied to the global keymap:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; &lt;span class="pl-c1"&gt;term&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:bind&lt;/span&gt; ((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-c t&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-c1"&gt;term&lt;/span&gt;)
         &lt;span class="pl-c1"&gt;:map&lt;/span&gt; term-mode-map
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-p&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; term-send-up)
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-n&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; term-send-down)
         &lt;span class="pl-c1"&gt;:map&lt;/span&gt; term-raw-map
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-o&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; other-window)
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-p&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; term-send-up)
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-n&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; term-send-down)))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-modes-and-interpreters" class="anchor" aria-hidden="true" href="#modes-and-interpreters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modes and interpreters&lt;/h2&gt;
&lt;p&gt;Similar to &lt;code&gt;:bind&lt;/code&gt;, you can use &lt;code&gt;:mode&lt;/code&gt; and &lt;code&gt;:interpreter&lt;/code&gt; to establish a
deferred binding within the &lt;code&gt;auto-mode-alist&lt;/code&gt; and &lt;code&gt;interpreter-mode-alist&lt;/code&gt;
variables. The specifier to either keyword can be a cons cell, a list of cons
cells, or a string or regexp:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ruby-mode
  &lt;span class="pl-c1"&gt;:mode&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\\&lt;/span&gt;.rb&lt;span class="pl-cce"&gt;\\&lt;/span&gt;'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:interpreter&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ruby&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; The package is "python" but the mode is "python-mode":&lt;/span&gt;
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; python
  &lt;span class="pl-c1"&gt;:mode&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\\&lt;/span&gt;.py&lt;span class="pl-cce"&gt;\\&lt;/span&gt;'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; python-mode)
  &lt;span class="pl-c1"&gt;:interpreter&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;python&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; python-mode))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you aren't using &lt;code&gt;:commands&lt;/code&gt;, &lt;code&gt;:bind&lt;/code&gt;, &lt;code&gt;:bind*&lt;/code&gt;, &lt;code&gt;:bind-keymap&lt;/code&gt;,
&lt;code&gt;:bind-keymap*&lt;/code&gt;, &lt;code&gt;:mode&lt;/code&gt;, &lt;code&gt;:interpreter&lt;/code&gt;, or &lt;code&gt;:hook&lt;/code&gt; (all of which imply &lt;code&gt;:defer&lt;/code&gt;; see
the docstring for &lt;code&gt;use-package&lt;/code&gt; for a brief description of each), you can
still defer loading with the &lt;code&gt;:defer&lt;/code&gt; keyword:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:defer&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;autoload&lt;/span&gt; &lt;span class="pl-c1"&gt;'ace-jump-mode&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ace-jump-mode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
  (bind-key &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;'ace-jump-mode&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This does exactly the same thing as the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:bind&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; ace-jump-mode))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-magic-handlers" class="anchor" aria-hidden="true" href="#magic-handlers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Magic handlers&lt;/h2&gt;
&lt;p&gt;Similar to &lt;code&gt;:mode&lt;/code&gt; and &lt;code&gt;:interpreter&lt;/code&gt;, you can also use &lt;code&gt;:magic&lt;/code&gt; and
&lt;code&gt;:magic-fallback&lt;/code&gt; to cause certain function to be run if the beginning of a
file matches a given regular expression. The difference between the two is
that &lt;code&gt;:magic-fallback&lt;/code&gt; has a lower priority than &lt;code&gt;:mode&lt;/code&gt;. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; pdf-tools
  &lt;span class="pl-c1"&gt;:load-path&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;site-lisp/pdf-tools/lisp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:magic&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%PDF&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; pdf-view-mode)
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (pdf-tools-install &lt;span class="pl-c1"&gt;:no-query&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This registers an autoloaded command for &lt;code&gt;pdf-view-mode&lt;/code&gt;, defers loading of
&lt;code&gt;pdf-tools&lt;/code&gt;, and runs &lt;code&gt;pdf-view-mode&lt;/code&gt; if the beginning of a buffer matches the
string &lt;code&gt;"%PDF"&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-hooks" class="anchor" aria-hidden="true" href="#hooks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hooks&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;:hook&lt;/code&gt; keyword allows adding functions onto package hooks. Thus,
all of the following are equivalent:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:hook&lt;/span&gt; prog-mode)

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:hook&lt;/span&gt; (&lt;span class="pl-c1"&gt;prog-mode&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; ace-jump-mode))

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'prog-mode-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'ace-jump-mode&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And likewise, when multiple hooks should be applied, the following are also
equivalent:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:hook&lt;/span&gt; (&lt;span class="pl-c1"&gt;prog-mode&lt;/span&gt; text-mode))

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:hook&lt;/span&gt; ((&lt;span class="pl-c1"&gt;prog-mode&lt;/span&gt; text-mode) &lt;span class="pl-k"&gt;.&lt;/span&gt; ace-jump-mode))

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:hook&lt;/span&gt; ((&lt;span class="pl-c1"&gt;prog-mode&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; ace-jump-mode)
         (&lt;span class="pl-c1"&gt;text-mode&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; ace-jump-mode)))

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'prog-mode-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'ace-jump-mode&lt;/span&gt;&lt;/span&gt;)
  (&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'text-mode-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'ace-jump-mode&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When using &lt;code&gt;:hook&lt;/code&gt; omit the "-hook" suffix if you specify the hook
explicitly, as this is appended by default. For example the following
code will not work as it attempts to add to the &lt;code&gt;prog-mode-hook-hook&lt;/code&gt;
which does not exist:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; DOES NOT WORK&lt;/span&gt;
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:hook&lt;/span&gt; (&lt;span class="pl-c1"&gt;prog-mode-hook&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; ace-jump-mode))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you do not like this behaviour, set &lt;code&gt;use-package-hook-name-suffix&lt;/code&gt;
to nil. By default the value of this variable is "-hook".&lt;/p&gt;
&lt;p&gt;The use of &lt;code&gt;:hook&lt;/code&gt;, as with &lt;code&gt;:bind&lt;/code&gt;, &lt;code&gt;:mode&lt;/code&gt;, &lt;code&gt;:interpreter&lt;/code&gt;, etc., causes the
functions being hooked to implicitly be read as &lt;code&gt;:commands&lt;/code&gt; (meaning they will
establish interactive &lt;code&gt;autoload&lt;/code&gt; definitions for that module, if not already
defined as functions), and so &lt;code&gt;:defer t&lt;/code&gt; is also implied by &lt;code&gt;:hook&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-package-customization" class="anchor" aria-hidden="true" href="#package-customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Package customization&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-customizing-variables" class="anchor" aria-hidden="true" href="#customizing-variables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing variables.&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;:custom&lt;/code&gt; keyword allows customization of package custom variables.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; comint
  &lt;span class="pl-c1"&gt;:custom&lt;/span&gt;
  (comint-buffer-maximum-size &lt;span class="pl-c1"&gt;20000&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Increase comint buffer size.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  (comint-prompt-read-only &lt;span class="pl-c1"&gt;t&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Make the prompt read only.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The documentation string is not mandatory.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: these are only for people who wish to keep customizations with their
accompanying use-package declarations. Functionally, the only benefit over
using &lt;code&gt;setq&lt;/code&gt; in a &lt;code&gt;:config&lt;/code&gt; block is that customizations might execute code
when values are assigned. If you currently use &lt;code&gt;M-x customize-option&lt;/code&gt; and save
to a settings file, you do not want to use this option.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-customizing-faces" class="anchor" aria-hidden="true" href="#customizing-faces"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing faces&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;:custom-face&lt;/code&gt; keyword allows customization of package custom faces.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; eruby-mode
  &lt;span class="pl-c1"&gt;:custom-face&lt;/span&gt;
  (eruby-standard-face ((&lt;span class="pl-c1"&gt;t&lt;/span&gt; (&lt;span class="pl-c1"&gt;:slant&lt;/span&gt; &lt;span class="pl-c1"&gt;italic&lt;/span&gt;)))))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-notes-about-lazy-loading" class="anchor" aria-hidden="true" href="#notes-about-lazy-loading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notes about lazy loading&lt;/h2&gt;
&lt;p&gt;In almost all cases you don't need to manually specify &lt;code&gt;:defer t&lt;/code&gt;.  This is
implied whenever &lt;code&gt;:bind&lt;/code&gt; or &lt;code&gt;:mode&lt;/code&gt; or &lt;code&gt;:interpreter&lt;/code&gt; is used.  Typically, you
only need to specify &lt;code&gt;:defer&lt;/code&gt; if you know for a fact that some other package
will do something to cause your package to load at the appropriate time, and
thus you would like to defer loading even though use-package isn't creating
any autoloads for you.&lt;/p&gt;
&lt;p&gt;You can override package deferral with the &lt;code&gt;:demand&lt;/code&gt; keyword.  Thus, even if
you use &lt;code&gt;:bind&lt;/code&gt;, using &lt;code&gt;:demand&lt;/code&gt; will force loading to occur immediately and
not establish an autoload for the bound key.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-information-about-package-loads" class="anchor" aria-hidden="true" href="#information-about-package-loads"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Information about package loads&lt;/h2&gt;
&lt;p&gt;When a package is loaded, and if you have &lt;code&gt;use-package-verbose&lt;/code&gt; set to &lt;code&gt;t&lt;/code&gt;, or
if the package takes longer than 0.1s to load, you will see a message to
indicate this loading activity in the &lt;code&gt;*Messages*&lt;/code&gt; buffer.  The same will
happen for configuration, or &lt;code&gt;:config&lt;/code&gt; blocks that take longer than 0.1s to
execute.  In general, you should keep &lt;code&gt;:init&lt;/code&gt; forms as simple and quick as
possible, and put as much as you can get away with into the &lt;code&gt;:config&lt;/code&gt; block.
This way, deferred loading can help your Emacs to start as quickly as
possible.&lt;/p&gt;
&lt;p&gt;Additionally, if an error occurs while initializing or configuring a package,
this will not stop your Emacs from loading.  Rather, the error will be
captured by &lt;code&gt;use-package&lt;/code&gt;, and reported to a special &lt;code&gt;*Warnings*&lt;/code&gt; popup
buffer, so that you can debug the situation in an otherwise functional Emacs.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-conditional-loading" class="anchor" aria-hidden="true" href="#conditional-loading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conditional loading&lt;/h2&gt;
&lt;p&gt;You can use the &lt;code&gt;:if&lt;/code&gt; keyword to predicate the loading and initialization of
modules.&lt;/p&gt;
&lt;p&gt;For example, I only want &lt;code&gt;edit-server&lt;/code&gt; running for my main,
graphical Emacs, not for other Emacsen I may start at the command line:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; edit-server
  &lt;span class="pl-c1"&gt;:if&lt;/span&gt; window-system
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'after-init-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'server-start&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
  (&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'after-init-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'edit-server-start&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In another example, we can load things conditional on the operating system:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; exec-path-from-shell
  &lt;span class="pl-c1"&gt;:if&lt;/span&gt; (&lt;span class="pl-c1"&gt;memq&lt;/span&gt; window-system '(mac ns))
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (exec-path-from-shell-initialize))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;:disabled&lt;/code&gt; keyword can turn off a module you're having difficulties with,
or stop loading something you're not using at the present time:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ess-site
  &lt;span class="pl-c1"&gt;:disabled&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; R)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When byte-compiling your &lt;code&gt;.emacs&lt;/code&gt; file, disabled declarations are omitted
from the output entirely, to accelerate startup times.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;:when&lt;/code&gt; is provided as an alias for &lt;code&gt;:if&lt;/code&gt;, and &lt;code&gt;:unless foo&lt;/code&gt; means
the same thing as &lt;code&gt;:if (not foo)&lt;/code&gt;. For example, the following will also stop
&lt;code&gt;:ensure&lt;/code&gt; from happening on Mac systems:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;when&lt;/span&gt; (&lt;span class="pl-c1"&gt;memq&lt;/span&gt; window-system '(mac ns))
  (&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; exec-path-from-shell
    &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
    &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
    (exec-path-from-shell-initialize)))&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-conditional-loading-before-preface" class="anchor" aria-hidden="true" href="#conditional-loading-before-preface"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conditional loading before :preface&lt;/h3&gt;
&lt;p&gt;If you need to conditionalize a use-package form so that the condition occurs
before even the &lt;code&gt;:preface&lt;/code&gt; is executed, simply use &lt;code&gt;when&lt;/code&gt; around the
use-package form itself:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-loading-packages-in-sequence" class="anchor" aria-hidden="true" href="#loading-packages-in-sequence"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Loading packages in sequence&lt;/h3&gt;
&lt;p&gt;Sometimes it only makes sense to configure a package after another has been
loaded, because certain variables or functions are not in scope until that
time. This can achieved using an &lt;code&gt;:after&lt;/code&gt; keyword that allows a fairly rich
description of the exact conditions when loading should occur. Here is an
example:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; hydra
  &lt;span class="pl-c1"&gt;:load-path&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;site-lisp/hydra&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ivy
  &lt;span class="pl-c1"&gt;:load-path&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;site-lisp/swiper&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ivy-hydra
  &lt;span class="pl-c1"&gt;:after&lt;/span&gt; (ivy hydra))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this case, because all of these packages are demand-loaded in the order
they occur, the use of &lt;code&gt;:after&lt;/code&gt; is not strictly necessary. By using it,
however, the above code becomes order-independent, without an implicit
depedence on the nature of your init file.&lt;/p&gt;
&lt;p&gt;By default, &lt;code&gt;:after (foo bar)&lt;/code&gt; is the same as &lt;code&gt;:after (:all foo bar)&lt;/code&gt;, meaning
that loading of the given package will not happen until both &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt;
have been loaded. Here are some of the other possibilities:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;:after&lt;/span&gt; (foo bar)
&lt;span class="pl-c1"&gt;:after&lt;/span&gt; (&lt;span class="pl-c1"&gt;:all&lt;/span&gt; foo bar)
&lt;span class="pl-c1"&gt;:after&lt;/span&gt; (&lt;span class="pl-c1"&gt;:any&lt;/span&gt; foo bar)
&lt;span class="pl-c1"&gt;:after&lt;/span&gt; (&lt;span class="pl-c1"&gt;:all&lt;/span&gt; (&lt;span class="pl-c1"&gt;:any&lt;/span&gt; foo bar) (&lt;span class="pl-c1"&gt;:any&lt;/span&gt; baz quux))
&lt;span class="pl-c1"&gt;:after&lt;/span&gt; (&lt;span class="pl-c1"&gt;:any&lt;/span&gt; (&lt;span class="pl-c1"&gt;:all&lt;/span&gt; foo bar) (&lt;span class="pl-c1"&gt;:all&lt;/span&gt; baz quux))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you nest selectors, such as &lt;code&gt;(:any (:all foo bar) (:all baz quux))&lt;/code&gt;, it
means that the package will be loaded when either both &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt; have
been loaded, or both &lt;code&gt;baz&lt;/code&gt; and &lt;code&gt;quux&lt;/code&gt; have been loaded.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: pay attention if you set &lt;code&gt;use-package-always-defer&lt;/code&gt; to t, and also use
the &lt;code&gt;:after&lt;/code&gt; keyword, as you will need to specify how the declared package is
to be loaded: e.g., by some &lt;code&gt;:bind&lt;/code&gt;. If you're not using one of the mechanisms
that registers autoloads, such as &lt;code&gt;:bind&lt;/code&gt; or &lt;code&gt;:hook&lt;/code&gt;, and your package manager
does not provide autoloads, it's possible that without adding &lt;code&gt;:demand t&lt;/code&gt; to
those declarations, your package will never be loaded.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-prevent-loading-if-dependencies-are-missing" class="anchor" aria-hidden="true" href="#prevent-loading-if-dependencies-are-missing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prevent loading if dependencies are missing&lt;/h3&gt;
&lt;p&gt;While the &lt;code&gt;:after&lt;/code&gt; keyword delays loading until the dependencies are loaded,
the somewhat simpler &lt;code&gt;:requires&lt;/code&gt; keyword simply never loads the package if the
dependencies are not available at the time the &lt;code&gt;use-package&lt;/code&gt; declaration is
encountered. By "available" in this context it means that &lt;code&gt;foo&lt;/code&gt; is available
if &lt;code&gt;(featurep 'foo)&lt;/code&gt; evaluates to a non-nil value. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; abbrev
  &lt;span class="pl-c1"&gt;:requires&lt;/span&gt; foo)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is the same as:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; abbrev
  &lt;span class="pl-c1"&gt;:if&lt;/span&gt; (&lt;span class="pl-c1"&gt;featurep&lt;/span&gt; &lt;span class="pl-c1"&gt;'foo&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As a convenience, a list of such packages may be specified:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; abbrev
  &lt;span class="pl-c1"&gt;:requires&lt;/span&gt; (foo bar baz))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more complex logic, such as that supported by &lt;code&gt;:after&lt;/code&gt;, simply use &lt;code&gt;:if&lt;/code&gt;
and the appropriate Lisp expression.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-byte-compiling-your-emacs" class="anchor" aria-hidden="true" href="#byte-compiling-your-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Byte-compiling your .emacs&lt;/h2&gt;
&lt;p&gt;Another feature of &lt;code&gt;use-package&lt;/code&gt; is that it always loads every file that it
can when &lt;code&gt;.emacs&lt;/code&gt; is being byte-compiled.  This helps to silence spurious
warnings about unknown variables and functions.&lt;/p&gt;
&lt;p&gt;However, there are times when this is just not enough.  For those times, use
the &lt;code&gt;:defines&lt;/code&gt; and &lt;code&gt;:functions&lt;/code&gt; keywords to introduce dummy variable and
function declarations solely for the sake of the byte-compiler:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; texinfo
  &lt;span class="pl-c1"&gt;:defines&lt;/span&gt; texinfo-section-list
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; texinfo-mode
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;add-to-list&lt;/span&gt; &lt;span class="pl-c1"&gt;'auto-mode-alist&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\\&lt;/span&gt;.texi$&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; texinfo-mode)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you need to silence a missing function warning, you can use &lt;code&gt;:functions&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ruby-mode
  &lt;span class="pl-c1"&gt;:mode&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\\&lt;/span&gt;.rb&lt;span class="pl-cce"&gt;\\&lt;/span&gt;'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:interpreter&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ruby&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:functions&lt;/span&gt; inf-ruby-keys
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (&lt;span class="pl-k"&gt;defun&lt;/span&gt; &lt;span class="pl-e"&gt;my-ruby-mode-hook&lt;/span&gt; ()
    (&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'inf-ruby&lt;/span&gt;)
    (inf-ruby-keys))

  (&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'ruby-mode-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'my-ruby-mode-hook&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-prevent-a-package-from-loading-at-compile-time" class="anchor" aria-hidden="true" href="#prevent-a-package-from-loading-at-compile-time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prevent a package from loading at compile-time&lt;/h3&gt;
&lt;p&gt;Normally, &lt;code&gt;use-package&lt;/code&gt; will load each package at compile time before
compiling the configuration, to ensure that any necessary symbols are in scope
to satisfy the byte-compiler.  At times this can cause problems, since a
package may have special loading requirements, and all that you want to use
&lt;code&gt;use-package&lt;/code&gt; for is to add a configuration to the &lt;code&gt;eval-after-load&lt;/code&gt; hook.  In
such cases, use the &lt;code&gt;:no-require&lt;/code&gt; keyword:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; foo
  &lt;span class="pl-c1"&gt;:no-require&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;message&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;This is evaluated when &lt;span class="pl-smi"&gt;`foo'&lt;/span&gt; is loaded&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-extending-the-load-path" class="anchor" aria-hidden="true" href="#extending-the-load-path"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extending the load-path&lt;/h2&gt;
&lt;p&gt;If your package needs a directory added to the &lt;code&gt;load-path&lt;/code&gt; in order to load,
use &lt;code&gt;:load-path&lt;/code&gt;.  This takes a symbol, a function, a string or a list of
strings.  If the path is relative, it is expanded within
&lt;code&gt;user-emacs-directory&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ess-site
  &lt;span class="pl-c1"&gt;:load-path&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;site-lisp/ess/lisp/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; R)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: when using a symbol or a function to provide a dynamically generated
list of paths, you must inform the byte-compiler of this definition so the
value is available at byte-compilation time.  This is done by using the
special form &lt;code&gt;eval-and-compile&lt;/code&gt; (as opposed to &lt;code&gt;eval-when-compile&lt;/code&gt;).  Further,
this value is fixed at whatever was determined during compilation, to avoid
looking up the same information again on each startup:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;eval-and-compile&lt;/span&gt;
  (&lt;span class="pl-k"&gt;defun&lt;/span&gt; &lt;span class="pl-e"&gt;ess-site-load-path&lt;/span&gt; ()
    (&lt;span class="pl-c1"&gt;shell-command&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;find ~ -path ess/lisp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ess-site
  &lt;span class="pl-c1"&gt;:load-path&lt;/span&gt; (&lt;span class="pl-k"&gt;lambda&lt;/span&gt; () (&lt;span class="pl-k"&gt;list&lt;/span&gt; (ess-site-load-path)))
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; R)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-catching-errors-during-use-package-expansion" class="anchor" aria-hidden="true" href="#catching-errors-during-use-package-expansion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Catching errors during use-package expansion&lt;/h2&gt;
&lt;p&gt;By default, if &lt;code&gt;use-package-expand-minimally&lt;/code&gt; is nil (the default),
use-package will attempts to catch and report errors that occur during
expansion of use-package declarations in your init file. Setting
&lt;code&gt;use-package-expand-minimally&lt;/code&gt; to t completely disables this checking.&lt;/p&gt;
&lt;p&gt;This behavior may be overridden locally using the &lt;code&gt;:catch&lt;/code&gt; keyword. If &lt;code&gt;t&lt;/code&gt; or
&lt;code&gt;nil&lt;/code&gt;, it enables or disables catching errors at load time. It can also be a
function taking two arguments: the keyword being processed at the time the
error was encountered, and the error object (as generated by
&lt;code&gt;condition-case&lt;/code&gt;). For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; example
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Note that errors are never trapped in the preface, since doing so would&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; hide definitions from the byte-compiler.&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:preface&lt;/span&gt; (&lt;span class="pl-c1"&gt;message&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;I'm here at byte-compile and load time.&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;)
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt; (&lt;span class="pl-c1"&gt;message&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;I'm always here at startup&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;)
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;message&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;I'm always here after the package is loaded&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;)
  (&lt;span class="pl-c1"&gt;error&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;oops&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;)
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Don't try to (require 'example), this is just an example!&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:no-require&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:catch&lt;/span&gt; (&lt;span class="pl-k"&gt;lambda&lt;/span&gt; (&lt;span class="pl-v"&gt;keyword&lt;/span&gt; &lt;span class="pl-v"&gt;err&lt;/span&gt;)
           (&lt;span class="pl-c1"&gt;message&lt;/span&gt; (&lt;span class="pl-c1"&gt;error-message-string&lt;/span&gt; err))))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Evaluating the above form will print these messages:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;I’m here at byte-compile and load time.
I’m always here at startup
Configuring package example...
I’m always here after the package is loaded
oops
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-diminishing-and-delighting-minor-modes" class="anchor" aria-hidden="true" href="#diminishing-and-delighting-minor-modes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Diminishing and delighting minor modes&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;use-package&lt;/code&gt; also provides built-in support for the diminish and
delight utilities -- if you have them installed. Their purpose is to
remove or change minor mode strings in your mode-line.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/myrjola/diminish.el"&gt;diminish&lt;/a&gt; is invoked with
the &lt;code&gt;:diminish&lt;/code&gt; keyword, which is passed either a minor mode symbol, a
cons of the symbol and its replacement string, or just a replacement
string, in which case the minor mode symbol is guessed to be the
package name with "-mode" appended at the end:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; abbrev
  &lt;span class="pl-c1"&gt;:diminish&lt;/span&gt; abbrev-mode
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;file-exists-p&lt;/span&gt; abbrev-file-name)
      (&lt;span class="pl-c1"&gt;quietly-read-abbrev-file&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://elpa.gnu.org/packages/delight.html" rel="nofollow"&gt;delight&lt;/a&gt; is invoked with
the &lt;code&gt;:delight&lt;/code&gt; keyword, which is passed a minor mode symbol, a
replacement string or
quoted
&lt;a href="https://www.gnu.org/software/emacs/manual/html_node/elisp/Mode-Line-Data.html" rel="nofollow"&gt;mode-line data&lt;/a&gt; (in
which case the minor mode symbol is guessed to be the package name
with "-mode" appended at the end), both of these, or several lists of
both. If no arguments are provided, the default mode name is hidden
completely.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Don't show anything for rainbow-mode.&lt;/span&gt;
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; rainbow-mode
  &lt;span class="pl-c1"&gt;:delight&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Don't show anything for auto-revert-mode, which doesn't match&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; its package name.&lt;/span&gt;
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; autorevert
  &lt;span class="pl-c1"&gt;:delight&lt;/span&gt; auto-revert-mode)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Remove the mode name for projectile-mode, but show the project name.&lt;/span&gt;
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; projectile
  &lt;span class="pl-c1"&gt;:delight&lt;/span&gt; '(&lt;span class="pl-c1"&gt;:eval&lt;/span&gt; (&lt;span class="pl-c1"&gt;concat&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; (projectile-project-name))))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Completely hide visual-line-mode and change auto-fill-mode to " AF".&lt;/span&gt;
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; emacs
  &lt;span class="pl-c1"&gt;:delight&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;auto-fill-function&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; AF&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  (&lt;span class="pl-c1"&gt;visual-line-mode&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-package-installation" class="anchor" aria-hidden="true" href="#package-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Package installation&lt;/h2&gt;
&lt;p&gt;You can use &lt;code&gt;use-package&lt;/code&gt; to load packages from ELPA with &lt;code&gt;package.el&lt;/code&gt;. This
is particularly useful if you share your &lt;code&gt;.emacs&lt;/code&gt; among several machines; the
relevant packages are downloaded automatically once declared in your &lt;code&gt;.emacs&lt;/code&gt;.
The &lt;code&gt;:ensure&lt;/code&gt; keyword causes the package(s) to be installed automatically if
not already present on your system:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; magit
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you need to install a different package from the one named by
&lt;code&gt;use-package&lt;/code&gt;, you can specify it like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; tex
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; auctex)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable &lt;code&gt;use-package-always-ensure&lt;/code&gt; if you wish this behavior to be global
for all packages:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'use-package-ensure&lt;/span&gt;)
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; use-package-always-ensure &lt;span class="pl-c1"&gt;t&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;:ensure&lt;/code&gt; will install a package if it is not already installed, but
it does not keep it up-to-date. If you want to keep your packages updated
automatically, one option is to use
&lt;a href="https://github.com/rranelli/auto-package-update.el"&gt;auto-package-update&lt;/a&gt;,
like&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; auto-package-update
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; auto-package-update-delete-old-versions &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; auto-package-update-hide-results &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
  (auto-package-update-maybe))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lastly, when running on Emacs 24.4 or later, use-package can pin a package to
a specific archive, allowing you to mix and match packages from different
archives.  The primary use-case for this is preferring packages from the
&lt;code&gt;melpa-stable&lt;/code&gt; and &lt;code&gt;gnu&lt;/code&gt; archives, but using specific packages from &lt;code&gt;melpa&lt;/code&gt;
when you need to track newer versions than what is available in the &lt;code&gt;stable&lt;/code&gt;
archives is also a valid use-case.&lt;/p&gt;
&lt;p&gt;By default &lt;code&gt;package.el&lt;/code&gt; prefers &lt;code&gt;melpa&lt;/code&gt; over &lt;code&gt;melpa-stable&lt;/code&gt; due to the
versioning &lt;code&gt;(&amp;gt; evil-20141208.623 evil-1.0.9)&lt;/code&gt;, so even if you are tracking
only a single package from &lt;code&gt;melpa&lt;/code&gt;, you will need to tag all the non-&lt;code&gt;melpa&lt;/code&gt;
packages with the appropriate archive. If this really annoys you, then you can
set &lt;code&gt;use-package-always-pin&lt;/code&gt; to set a default.&lt;/p&gt;
&lt;p&gt;If you want to manually keep a package updated and ignore upstream updates,
you can pin it to &lt;code&gt;manual&lt;/code&gt;, which as long as there is no repository by that
name, will Just Work(tm).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;use-package&lt;/code&gt; throws an error if you try to pin a package to an archive that
has not been configured using &lt;code&gt;package-archives&lt;/code&gt; (apart from the magic
&lt;code&gt;manual&lt;/code&gt; archive mentioned above):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Archive 'foo' requested for package 'bar' is not available.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; company
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:pin&lt;/span&gt; &lt;span class="pl-c1"&gt;melpa-stable&lt;/span&gt;)

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; evil
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; no :pin needed, as package.el will choose the version in melpa&lt;/span&gt;

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; adaptive-wrap
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; as this package is available only in the gnu archive, this is&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; technically not needed, but it helps to highlight where it&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; comes from&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:pin&lt;/span&gt; &lt;span class="pl-c1"&gt;gnu&lt;/span&gt;)

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; &lt;span class="pl-c1"&gt;org&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; ignore org-mode from upstream and use a manually installed version&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:pin&lt;/span&gt; manual)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: the &lt;code&gt;:pin&lt;/code&gt; argument has no effect on emacs versions &amp;lt; 24.4.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-usage-with-other-package-managers" class="anchor" aria-hidden="true" href="#usage-with-other-package-managers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage with other package managers&lt;/h3&gt;
&lt;p&gt;By overriding &lt;code&gt;use-package-ensure-function&lt;/code&gt; and/or
&lt;code&gt;use-package-pre-ensure-function&lt;/code&gt;, other package managers can override
&lt;code&gt;:ensure&lt;/code&gt; to use them instead of &lt;code&gt;package.el&lt;/code&gt;. At the present time,
the only package manager that does this
is &lt;a href="https://github.com/raxod502/straight.el"&gt;&lt;code&gt;straight.el&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-gathering-statistics" class="anchor" aria-hidden="true" href="#gathering-statistics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gathering Statistics&lt;/h2&gt;
&lt;p&gt;If you'd like to see how many packages you've loaded, what stage of
initialization they've reached, and how much aggregate time they've
spent (roughly), you can enable &lt;code&gt;use-package-compute-statistics&lt;/code&gt; after
loading &lt;code&gt;use-package&lt;/code&gt; but before any &lt;code&gt;use-package&lt;/code&gt; forms, and then run
the command &lt;code&gt;M-x use-package-report&lt;/code&gt; to see the results. The buffer
displayed is a tabulated list. You can use &lt;code&gt;S&lt;/code&gt; in a column to sort the
rows based on it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-keyword-extensions" class="anchor" aria-hidden="true" href="#keyword-extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keyword Extensions&lt;/h2&gt;
&lt;p&gt;Starting with version 2.0, &lt;code&gt;use-package&lt;/code&gt; is based on an extensible
framework that makes it easy for package authors to add new keywords,
or modify the behavior of existing keywords.&lt;/p&gt;
&lt;p&gt;Some keyword extensions are now included in the &lt;code&gt;use-package&lt;/code&gt;
distribution and can be optionally installed.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-use-package-ensure-system-package" class="anchor" aria-hidden="true" href="#use-package-ensure-system-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;(use-package-ensure-system-package)&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;:ensure-system-package&lt;/code&gt; keyword allows you to ensure system
binaries exist alongside your package declarations.&lt;/p&gt;
&lt;p&gt;First, you will want to make sure &lt;code&gt;exec-path&lt;/code&gt; is cognisant of all
binary package names that you would like to ensure are
installed. &lt;a href="https://github.com/purcell/exec-path-from-shell"&gt;&lt;code&gt;exec-path-from-shell&lt;/code&gt;&lt;/a&gt;
is often a good way to do this.&lt;/p&gt;
&lt;p&gt;To enable the extension after you've loaded &lt;code&gt;use-package&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; use-package-ensure-system-package
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here’s an example of usage:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; rg
  &lt;span class="pl-c1"&gt;:ensure-system-package&lt;/span&gt; rg)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will expect a global binary package to exist called &lt;code&gt;rg&lt;/code&gt;. If it
does not, it will use your system package manager (using the package
&lt;a href="https://gitlab.com/jabranham/system-packages" rel="nofollow"&gt;&lt;code&gt;system-packages&lt;/code&gt;&lt;/a&gt;) to
attempt an install of a binary by the same name asynchronously. For
example, for most &lt;code&gt;macOS&lt;/code&gt; users this would call: &lt;code&gt;brew install rg&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If the package is named differently than the binary, you can use a
cons in the form of  &lt;code&gt;(binary . package-name)&lt;/code&gt;, i.e.:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; rg
  &lt;span class="pl-c1"&gt;:ensure-system-package&lt;/span&gt;
  (rg &lt;span class="pl-k"&gt;.&lt;/span&gt; ripgrep))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the previous &lt;code&gt;macOS&lt;/code&gt; example, this would call: &lt;code&gt;brew install ripgrep&lt;/code&gt; if &lt;code&gt;rg&lt;/code&gt; was not found.&lt;/p&gt;
&lt;p&gt;What if you want to customize the install command further?&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; tern
  &lt;span class="pl-c1"&gt;:ensure-system-package&lt;/span&gt; (tern &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;npm i -g tern&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;:ensure-system-package&lt;/code&gt; can also take a cons where its &lt;code&gt;cdr&lt;/code&gt; is a
string that will get called by &lt;code&gt;(async-shell-command)&lt;/code&gt; to install if
it isn’t found.&lt;/p&gt;
&lt;p&gt;You may also pass in a list of cons-es:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ruby-mode
  &lt;span class="pl-c1"&gt;:ensure-system-package&lt;/span&gt;
  ((rubocop     &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gem install rubocop&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
   (ruby-lint   &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gem install ruby-lint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
   (ripper-tags &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gem install ripper-tags&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
   (pry         &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gem install pry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, in case the package dependency does not provide a global
executable, you can ensure packages exist by checking the presence of
a file path by providing a string like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; dash-at-point
  &lt;span class="pl-c1"&gt;:if&lt;/span&gt; (&lt;span class="pl-k"&gt;eq&lt;/span&gt; system-type &lt;span class="pl-c1"&gt;'darwin&lt;/span&gt;)
  &lt;span class="pl-c1"&gt;:ensure-system-package&lt;/span&gt;
  (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/Applications/Dash.app&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;brew cask install dash&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;:ensure-system-package&lt;/code&gt; will use &lt;code&gt;system-packages-install&lt;/code&gt; to install
system packages, except where a custom command has been specified, in
which case it will be executed verbatim by &lt;code&gt;async-shell-command&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Configuration variables &lt;code&gt;system-packages-package-manager&lt;/code&gt; and
&lt;code&gt;system-packages-use-sudo&lt;/code&gt; will be honoured, but not for custom
commands. Custom commands should include the call to sudo in the
command if needed.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-use-package-chords" class="anchor" aria-hidden="true" href="#use-package-chords"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;(use-package-chords)&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;:chords&lt;/code&gt; keyword allows you to define
&lt;a href="http://www.emacswiki.org/emacs/key-chord.el" rel="nofollow"&gt;&lt;code&gt;key-chord&lt;/code&gt;&lt;/a&gt; bindings
for &lt;code&gt;use-package&lt;/code&gt; declarations in the same manner as the &lt;code&gt;:bind&lt;/code&gt;
keyword.&lt;/p&gt;
&lt;p&gt;To enable the extension:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; use-package-chords
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt; (key-chord-mode &lt;span class="pl-c1"&gt;1&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then you can define your chord bindings in the same manner as &lt;code&gt;:bind&lt;/code&gt; using a cons or a list of conses:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:chords&lt;/span&gt; ((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jj&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; ace-jump-char-mode)
           (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jk&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; ace-jump-word-mode)
           (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jl&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; ace-jump-line-mode)))&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-how-to-create-an-extension" class="anchor" aria-hidden="true" href="#how-to-create-an-extension"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to create an extension&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-first-step-add-the-keyword" class="anchor" aria-hidden="true" href="#first-step-add-the-keyword"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;First step: Add the keyword&lt;/h4&gt;
&lt;p&gt;The first step is to add your keyword at the right place in
&lt;code&gt;use-package-keywords&lt;/code&gt;.  This list determines the order in which things will
happen in the expanded code.  You should never change this order, but it gives
you a framework within which to decide when your keyword should fire.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-second-step-create-a-normalizer" class="anchor" aria-hidden="true" href="#second-step-create-a-normalizer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Second step: Create a normalizer&lt;/h4&gt;
&lt;p&gt;Define a normalizer for your keyword by defining a function named after the
keyword, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defun&lt;/span&gt; &lt;span class="pl-e"&gt;use-package-normalize/:pin&lt;/span&gt; (&lt;span class="pl-v"&gt;name-symbol&lt;/span&gt; &lt;span class="pl-v"&gt;keyword&lt;/span&gt; &lt;span class="pl-v"&gt;args&lt;/span&gt;)
  (use-package-only-one (&lt;span class="pl-c1"&gt;symbol-name&lt;/span&gt; keyword) args
    (&lt;span class="pl-k"&gt;lambda&lt;/span&gt; (&lt;span class="pl-v"&gt;label&lt;/span&gt; &lt;span class="pl-v"&gt;arg&lt;/span&gt;)
      (&lt;span class="pl-k"&gt;cond&lt;/span&gt;
       ((&lt;span class="pl-c1"&gt;stringp&lt;/span&gt; arg) arg)
       ((&lt;span class="pl-c1"&gt;symbolp&lt;/span&gt; arg) (&lt;span class="pl-c1"&gt;symbol-name&lt;/span&gt; arg))
       (&lt;span class="pl-c1"&gt;t&lt;/span&gt;
        (use-package-error
         &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:pin wants an archive name (a string)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))))))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The job of the normalizer is take a list of arguments (possibly nil), and turn
it into the single argument (which could still be a list) that should appear
in the final property list used by &lt;code&gt;use-package&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-third-step-create-a-handler" class="anchor" aria-hidden="true" href="#third-step-create-a-handler"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Third step: Create a handler&lt;/h4&gt;
&lt;p&gt;Once you have a normalizer, you must create a handler for the keyword:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defun&lt;/span&gt; &lt;span class="pl-e"&gt;use-package-handler/:pin&lt;/span&gt; (&lt;span class="pl-v"&gt;name-symbol&lt;/span&gt; &lt;span class="pl-v"&gt;keyword&lt;/span&gt; &lt;span class="pl-v"&gt;archive-name&lt;/span&gt; &lt;span class="pl-v"&gt;rest&lt;/span&gt; &lt;span class="pl-v"&gt;state&lt;/span&gt;)
  (&lt;span class="pl-k"&gt;let&lt;/span&gt; ((body (use-package-process-keywords name-symbol rest state)))
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; This happens at macro expansion time, not when the expanded code is&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; compiled or evaluated.&lt;/span&gt;
    (&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;null&lt;/span&gt; archive-name)
        body
      (use-package-pin-package name-symbol archive-name)
      (use-package-concat
       body
       `((&lt;span class="pl-k"&gt;push&lt;/span&gt; '(&lt;span class="pl-c1"&gt;&lt;span class="pl-mi1"&gt;,&lt;/span&gt;name-symbol&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-c1"&gt;&lt;span class="pl-mi1"&gt;,&lt;/span&gt;archive-name&lt;/span&gt;)
               package-pinned-packages))))))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Handlers can affect the handling of keywords in two ways.  First, it can
modify the &lt;code&gt;state&lt;/code&gt; plist before recursively processing the remaining keywords,
to influence keywords that pay attention to the state (one example is the
state keyword &lt;code&gt;:deferred&lt;/code&gt;, not to be confused with the &lt;code&gt;use-package&lt;/code&gt; keyword
&lt;code&gt;:defer&lt;/code&gt;).  Then, once the remaining keywords have been handled and their
resulting forms returned, the handler may manipulate, extend, or just ignore
those forms.&lt;/p&gt;
&lt;p&gt;The task of each handler is to return a &lt;em&gt;list of forms&lt;/em&gt; representing code to
be inserted.  It does not need to be a &lt;code&gt;progn&lt;/code&gt; list, as this is handled
automatically in other places.  Thus it is very common to see the idiom of
using &lt;code&gt;use-package-concat&lt;/code&gt; to add new functionality before or after a code
body, so that only the minimum code necessary is emitted as the result of a
&lt;code&gt;use-package&lt;/code&gt; expansion.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-fourth-step-test-it-out" class="anchor" aria-hidden="true" href="#fourth-step-test-it-out"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fourth step: Test it out&lt;/h4&gt;
&lt;p&gt;After the keyword has been inserted into &lt;code&gt;use-package-keywords&lt;/code&gt;, and a
normalizer and a handler defined, you can now test it by seeing how usages of
the keyword will expand.  For this, use &lt;code&gt;M-x pp-macroexpand-last-sexp&lt;/code&gt; with
the cursor set immediately after the &lt;code&gt;(use-package ...)&lt;/code&gt; expression.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-some-timing-results" class="anchor" aria-hidden="true" href="#some-timing-results"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Some timing results&lt;/h2&gt;
&lt;p&gt;On my Retina iMac, the "Mac port" variant of Emacs 24.4 loads in 0.57s, with
around 218 packages configured (nearly all of them lazy-loaded).  However, I
experience no loss of functionality, just a bit of latency when I'm first
starting to use Emacs (due to the autoloading).  Since I also use idle-loading
for many packages, perceived latency is typically reduced overall.&lt;/p&gt;
&lt;p&gt;On Linux, the same configuration loads in 0.32s.&lt;/p&gt;
&lt;p&gt;If I don't use Emacs graphically, I can test the absolute minimum times.  This
is done by running:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;time&lt;/span&gt; emacs -l init.elc -batch --eval &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(message "Hello, world!")&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On the Mac I see an average of 0.36s for the same configuration, and on Linux
0.26s.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-upgrading-to-2x" class="anchor" aria-hidden="true" href="#upgrading-to-2x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Upgrading to 2.x&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-semantics-of-init-is-now-consistent" class="anchor" aria-hidden="true" href="#semantics-of-init-is-now-consistent"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Semantics of :init is now consistent&lt;/h2&gt;
&lt;p&gt;The meaning of &lt;code&gt;:init&lt;/code&gt; has been changed: It now &lt;em&gt;always&lt;/em&gt; happens before
package load, whether &lt;code&gt;:config&lt;/code&gt; has been deferred or not.  This means that
some uses of &lt;code&gt;:init&lt;/code&gt; in your configuration may need to be changed to &lt;code&gt;:config&lt;/code&gt;
(in the non-deferred case).  For the deferred case, the behavior is unchanged
from before.&lt;/p&gt;
&lt;p&gt;Also, because &lt;code&gt;:init&lt;/code&gt; and &lt;code&gt;:config&lt;/code&gt; now mean "before" and "after", the &lt;code&gt;:pre-&lt;/code&gt;
and &lt;code&gt;:post-&lt;/code&gt; keywords are gone, as they should no longer be necessary.&lt;/p&gt;
&lt;p&gt;Lastly, an effort has been made to make your Emacs start even in the presence
of use-package configuration failures.  So after this change, be sure to check
your &lt;code&gt;*Messages*&lt;/code&gt; buffer.  Most likely, you will have several instances where
you are using &lt;code&gt;:init&lt;/code&gt;, but should be using &lt;code&gt;:config&lt;/code&gt; (this was the case for me
in a number of places).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-idle-has-been-removed" class="anchor" aria-hidden="true" href="#idle-has-been-removed"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;:idle has been removed&lt;/h2&gt;
&lt;p&gt;I am removing this feature for now because it can result in a nasty
inconsistency.  Consider the following definition:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; vkill
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; vkill
  &lt;span class="pl-c1"&gt;:idle&lt;/span&gt; (some-important-configuration-here)
  &lt;span class="pl-c1"&gt;:bind&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-x L&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; vkill-and-helm-occur)
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (&lt;span class="pl-k"&gt;defun&lt;/span&gt; &lt;span class="pl-e"&gt;vkill-and-helm-occur&lt;/span&gt; ()
    (&lt;span class="pl-k"&gt;interactive&lt;/span&gt;)
    (vkill)
    (&lt;span class="pl-c1"&gt;call-interactively&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'helm-occur&lt;/span&gt;&lt;/span&gt;))

  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; vkill-show-all-processes &lt;span class="pl-c1"&gt;t&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If I load my Emacs and wait until the idle timer fires, then this is the
sequence of events:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:init :idle &amp;lt;load&amp;gt; :config
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But if I load Emacs and immediately type C-x L without waiting for the idle
timer to fire, this is the sequence of events:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:init &amp;lt;load&amp;gt; :config :idle
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It's possible that the user could use &lt;code&gt;featurep&lt;/code&gt; in their idle to test for
this case, but that's a subtlety I'd rather avoid.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-defer-now-accepts-an-optional-numeric-argument" class="anchor" aria-hidden="true" href="#defer-now-accepts-an-optional-numeric-argument"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;:defer now accepts an optional numeric argument&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;:defer [N]&lt;/code&gt; causes the package to be loaded -- if it has not already been --
after &lt;code&gt;N&lt;/code&gt; seconds of idle time.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; back-button
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; (back-button-mode)
  &lt;span class="pl-c1"&gt;:defer&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; back-button-show-toolbar-buttons &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (back-button-mode &lt;span class="pl-c1"&gt;1&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-add-preface-occurring-before-everything-except-disabled" class="anchor" aria-hidden="true" href="#add-preface-occurring-before-everything-except-disabled"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Add :preface, occurring before everything except :disabled&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;:preface&lt;/code&gt; can be used to establish function and variable definitions that
will 1) make the byte-compiler happy (it won't complain about functions whose
definitions are unknown because you have them within a guard block), and 2)
allow you to define code that can be used in an &lt;code&gt;:if&lt;/code&gt; test.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: whatever is specified within &lt;code&gt;:preface&lt;/code&gt; is evaluated both at load
time and at byte-compilation time, in order to ensure that definitions are
seen by both the Lisp evaluator and the byte-compiler, so you should avoid
having any side-effects in your preface, and restrict it merely to symbol
declarations and definitions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-add-functions-for-declaring-functions-to-the-byte-compiler" class="anchor" aria-hidden="true" href="#add-functions-for-declaring-functions-to-the-byte-compiler"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Add :functions, for declaring functions to the byte-compiler&lt;/h2&gt;
&lt;p&gt;What &lt;code&gt;:defines&lt;/code&gt; does for variables, &lt;code&gt;:functions&lt;/code&gt; does for functions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-use-packageel-is-no-longer-needed-at-runtime" class="anchor" aria-hidden="true" href="#use-packageel-is-no-longer-needed-at-runtime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;use-package.el is no longer needed at runtime&lt;/h2&gt;
&lt;p&gt;This means you should put the following at the top of your Emacs, to further
reduce load time:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;eval-when-compile&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'use-package&lt;/span&gt;))
(&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'diminish&lt;/span&gt;)                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; if you use :diminish&lt;/span&gt;
(&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'bind-key&lt;/span&gt;)                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; if you use any :bind variant&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jwiegley</author><guid isPermaLink="false">https://github.com/jwiegley/use-package</guid><pubDate>Sat, 28 Dec 2019 00:08:00 GMT</pubDate></item><item><title>purcell/emacs.d #9 in Emacs Lisp, This week</title><link>https://github.com/purcell/emacs.d</link><description>&lt;p&gt;&lt;i&gt;An Emacs configuration bundle with batteries included&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/purcell/emacs.d" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b8a87eebb8a6e54125f954452f35408a22640b72/68747470733a2f2f7472617669732d63692e6f72672f70757263656c6c2f656d6163732e642e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/purcell/emacs.d.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.patreon.com/sanityinc" rel="nofollow"&gt;&lt;img alt="Support me" src="https://camo.githubusercontent.com/26516b72afb49b1e2a56e48954bf1d5c14d08e95/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f537570706f72742532304d652d2546302539462539322539372d6666363962342e737667" data-canonical-src="https://img.shields.io/badge/Support%20Me-%F0%9F%92%97-ff69b4.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-a-reasonable-emacs-config" class="anchor" aria-hidden="true" href="#a-reasonable-emacs-config"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A reasonable Emacs config&lt;/h1&gt;
&lt;p&gt;This is my emacs configuration tree, continually used and tweaked
since 2000, and it may be a good starting point for other Emacs
users, especially web developers. These days it's
somewhat geared towards OS X, but it is known to also work on Linux
and Windows.&lt;/p&gt;
&lt;p&gt;Emacs itself comes with support for many programming languages. This
config adds improved defaults and extended support for the following, listed
in the approximate order of how much I use them, from most to least:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Haskell / Purescript / Elm&lt;/li&gt;
&lt;li&gt;Ruby / Ruby on Rails&lt;/li&gt;
&lt;li&gt;CSS / LESS / SASS / SCSS&lt;/li&gt;
&lt;li&gt;Javascript / Typescript / Coffeescript&lt;/li&gt;
&lt;li&gt;HTML / HAML / Markdown / Textile / ERB&lt;/li&gt;
&lt;li&gt;Rust&lt;/li&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;Clojure (with Cider and nRepl)&lt;/li&gt;
&lt;li&gt;Common Lisp (with Slime)&lt;/li&gt;
&lt;li&gt;PHP&lt;/li&gt;
&lt;li&gt;Erlang&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In particular, there's a nice config for &lt;em&gt;autocompletion&lt;/em&gt; with
&lt;a href="https://company-mode.github.io/" rel="nofollow"&gt;company&lt;/a&gt;, and
&lt;a href="http://www.flycheck.org" rel="nofollow"&gt;flycheck&lt;/a&gt; is used to immediately highlight
syntax errors in Ruby, Python, Javascript, Haskell and a number of
other languages.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-emacs-versions" class="anchor" aria-hidden="true" href="#supported-emacs-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Emacs versions&lt;/h2&gt;
&lt;p&gt;The config should run on Emacs 24.4 or greater and is designed to
degrade smoothly - see the Travis build - but note that much newer
versions are required for an increasing number of key packages, so to
get full functionality you should use the latest Emacs version
available to you.&lt;/p&gt;
&lt;p&gt;Some Windows users might need to follow
&lt;a href="http://xn--9dbdkw.se/diary/how_to_enable_GnuTLS_for_Emacs_24_on_Windows/index.en.html" rel="nofollow"&gt;these instructions&lt;/a&gt;
to get TLS (ie. SSL) support included in their Emacs.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-other-requirements" class="anchor" aria-hidden="true" href="#other-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other requirements&lt;/h2&gt;
&lt;p&gt;To make the most of the programming language-specific support in this
config, further programs will likely be required, particularly those
that &lt;a href="https://github.com/flycheck/flycheck"&gt;flycheck&lt;/a&gt; uses to provide
on-the-fly syntax checking.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;To install, clone this repo to &lt;code&gt;~/.emacs.d&lt;/code&gt;, i.e. ensure that the
&lt;code&gt;init.el&lt;/code&gt; contained in this repo ends up at &lt;code&gt;~/.emacs.d/init.el&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/purcell/emacs.d.git ~/.emacs.d
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Upon starting up Emacs for the first time, further third-party
packages will be automatically downloaded and installed. If you
encounter any errors at that stage, try restarting Emacs, and possibly
running &lt;code&gt;M-x package-refresh-contents&lt;/code&gt; before doing so.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-updates" class="anchor" aria-hidden="true" href="#updates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Updates&lt;/h2&gt;
&lt;p&gt;Update the config with &lt;code&gt;git pull&lt;/code&gt;. You'll probably also want/need to update
the third-party packages regularly too:&lt;/p&gt;
&lt;p&gt;&lt;kbd&gt;M-x package-list-packages&lt;/kbd&gt;, then &lt;kbd&gt;U&lt;/kbd&gt; followed by &lt;kbd&gt;x&lt;/kbd&gt;.&lt;/p&gt;
&lt;p&gt;You should usually restart Emacs after pulling changes or updating
packages so that they can take effect. Emacs should usually restore
your working buffers when you restart due to this configuration's use
of the &lt;code&gt;desktop&lt;/code&gt; and &lt;code&gt;session&lt;/code&gt; packages.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-changing-themes-and-adding-your-own-customization" class="anchor" aria-hidden="true" href="#changing-themes-and-adding-your-own-customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changing themes and adding your own customization&lt;/h2&gt;
&lt;p&gt;To add your own customization, use &lt;kbd&gt;M-x customize&lt;/kbd&gt;, &lt;kbd&gt;M-x
customize-themes&lt;/kbd&gt; etc. and/or create a file
&lt;code&gt;~/.emacs.d/lisp/init-local.el&lt;/code&gt; which looks like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;... your code here ...

(&lt;span class="pl-c1"&gt;provide&lt;/span&gt; &lt;span class="pl-c1"&gt;'init-local&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you need initialisation code which executes earlier in the startup process,
you can also create an &lt;code&gt;~/.emacs.d/lisp/init-preload-local.el&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;If you plan to customize things more extensively, you should probably
just fork the repo and hack away at the config to make it your own!
Remember to regularly merge in changes from this repo, so that your
config remains compatible with the latest package and Emacs versions.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Please note that I cannot provide support for customised versions of
this configuration.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-similar-configs" class="anchor" aria-hidden="true" href="#similar-configs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Similar configs&lt;/h2&gt;
&lt;p&gt;You might also want to check out &lt;code&gt;emacs-starter-kit&lt;/code&gt; and &lt;code&gt;prelude&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-support--issues" class="anchor" aria-hidden="true" href="#support--issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support / issues&lt;/h2&gt;
&lt;p&gt;If you hit any problems, please first ensure that you are using the latest version
of this code, and that you have updated your packages to the most recent available
versions (see "Updates" above). If you still experience problems, go ahead and
&lt;a href="https://github.com/purcell/emacs.d"&gt;file an issue on the github project&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;-Steve Purcell&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="https://www.patreon.com/sanityinc" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="gift_heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f49d.png"&gt;💝&lt;/g-emoji&gt; Support this project and my other Open Source work&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://uk.linkedin.com/in/stevepurcell" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="briefcase" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bc.png"&gt;💼&lt;/g-emoji&gt; LinkedIn profile&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.sanityinc.com/" rel="nofollow"&gt;✍ sanityinc.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/sanityinc" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="bird" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f426.png"&gt;🐦&lt;/g-emoji&gt; @sanityinc&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>purcell</author><guid isPermaLink="false">https://github.com/purcell/emacs.d</guid><pubDate>Sat, 28 Dec 2019 00:09:00 GMT</pubDate></item><item><title>Kivy-CN/Stanford-CS-229-CN #10 in Emacs Lisp, This week</title><link>https://github.com/Kivy-CN/Stanford-CS-229-CN</link><description>&lt;p&gt;&lt;i&gt;A Chinese Translation of Stanford CS229 notes 斯坦福机器学习CS229课程讲义的中文翻译&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-cs229-课程讲义中文翻译" class="anchor" aria-hidden="true" href="#cs229-课程讲义中文翻译"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CS229 课程讲义中文翻译&lt;/h1&gt;
&lt;p&gt;原课程地址： &lt;a href="http://cs229.stanford.edu/" rel="nofollow"&gt;http://cs229.stanford.edu/&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;原作者&lt;/th&gt;
&lt;th&gt;翻译&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://www.andrewng.org/" rel="nofollow"&gt;Andrew Ng  吴恩达&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.zhihu.com/people/cycleuser/columns" rel="nofollow"&gt;CycleUser&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;相关链接&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/Kivy-CN/Stanford-CS-229-CN"&gt;Github 地址&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://zhuanlan.zhihu.com/MachineLearn" rel="nofollow"&gt;知乎专栏&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://cs229.stanford.edu/" rel="nofollow"&gt;斯坦福大学 CS229 课程网站&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://open.163.com/movie/2008/1/M/C/M6SGF6VB4_M6SGHFBMC.html" rel="nofollow"&gt;网易公开课中文字幕视频&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;我（@CycleUser）的身体状况短期内无法分散精力来继续 Markdown 的制作，而 @飞龙 不断翻译新内容才更是一种有利于广大朋友获取新技能新知识的好思路，他的精力如果用于对旧文档的维护，则是相当的浪费，很不划算。&lt;/p&gt;
&lt;p&gt;所以现在将剩余章节 Markdown 文档的制作任务，留给有志于探索和分享的其他伙伴们了。&lt;/p&gt;
&lt;p&gt;如果你有兴趣来加入到我们中来参与翻译和维护以及探索更多，请通过 github 发起 pull request 来参与进来！&lt;/p&gt;
&lt;p&gt;这个世界，需要更多的英雄。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-在线阅读" class="anchor" aria-hidden="true" href="#在线阅读"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;在线阅读&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://kivy-cn.github.io/Stanford-CS-229-CN" rel="nofollow"&gt;https://kivy-cn.github.io/Stanford-CS-229-CN&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-贡献指南" class="anchor" aria-hidden="true" href="#贡献指南"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;贡献指南&lt;/h2&gt;
&lt;p&gt;本项目的1-12章原始译稿是Word文档格式.
第13章及更新的章节是对CS229官方更新补充的内容,这部分翻译原稿就是Markdown文档.&lt;/p&gt;
&lt;p&gt;目前第12章还需要从 Word 转换为 Markdown,其他章节内也可能存在需要进一步改进的地方,希望大家多多指正.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下载&lt;a href="%E4%B8%AD%E6%96%87%E7%BF%BB%E8%AF%91%E4%B8%AD"&gt;每一章的 Word 格式&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;转换为 Markdown 格式，并将公式排版好。&lt;/li&gt;
&lt;li&gt;提交到&lt;a href="Markdown"&gt;&lt;code&gt;Markdown&lt;/code&gt;目录&lt;/a&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-其它人的笔记" class="anchor" aria-hidden="true" href="#其它人的笔记"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;其它人的笔记&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Kivy-CN/Stanford-CS-229-CN/files/2343330/cs229-stdcoutzyx.pdf"&gt;stdcoutzyx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kivy-CN/Stanford-CS-229-CN/files/2343386/cs229-JerryLead.pdf"&gt;JerryLead&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fengdu78/Coursera-ML-AndrewNg-Notes"&gt;黄海广&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Kivy-CN</author><guid isPermaLink="false">https://github.com/Kivy-CN/Stanford-CS-229-CN</guid><pubDate>Sat, 28 Dec 2019 00:10:00 GMT</pubDate></item><item><title>melpa/melpa #11 in Emacs Lisp, This week</title><link>https://github.com/melpa/melpa</link><description>&lt;p&gt;&lt;i&gt;Recipes and build machinery for the biggest Emacs package repo&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-melpa" class="anchor" aria-hidden="true" href="#melpa"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MELPA&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/melpa/melpa" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f70a965c98a8de20ac05d341d955a21773f6df6c/68747470733a2f2f7472617669732d63692e6f72672f6d656c70612f6d656c70612e706e673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/melpa/melpa.png?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MELPA is a growing collection of &lt;code&gt;package.el&lt;/code&gt;-compatible Emacs Lisp
packages built automatically on our server from the upstream source
code using simple recipes. (Think of it as a server-side version of
&lt;a href="https://github.com/dimitri/el-get"&gt;el-get&lt;/a&gt;, or even
&lt;a href="https://github.com/Homebrew/homebrew"&gt;Homebrew&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Packages are updated at intervals throughout the day.&lt;/p&gt;
&lt;p&gt;To browse available packages, check out the
&lt;a href="https://melpa.org/" rel="nofollow"&gt;archive index page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Adding packages is as simple as submitting a new recipe as a pull request;
read on for details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#recipe-format"&gt;Recipe Format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-scripts"&gt;Build Scripts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#api"&gt;API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mirrors"&gt;Mirrors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#about"&gt;About&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;To use the MELPA repository, you'll need an Emacs with
&lt;code&gt;package.el&lt;/code&gt;. Emacs 24 has &lt;code&gt;package.el&lt;/code&gt; bundled with it, and there's
also a
&lt;a href="http://repo.or.cz/w/emacs.git/blob_plain/ba08b24186711eaeb3748f3d1f23e2c2d9ed0d09:/lisp/emacs-lisp/package.el" rel="nofollow"&gt;version you can use with Emacs 23&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Enable installation of packages from MELPA by adding an entry to
&lt;code&gt;package-archives&lt;/code&gt; after &lt;code&gt;(require 'package)&lt;/code&gt; and before the call to
&lt;code&gt;package-initialize&lt;/code&gt; in your &lt;code&gt;init.el&lt;/code&gt; or &lt;code&gt;.emacs&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'package&lt;/span&gt;)
(&lt;span class="pl-k"&gt;let*&lt;/span&gt; ((no-ssl (&lt;span class="pl-k"&gt;and&lt;/span&gt; (&lt;span class="pl-c1"&gt;memq&lt;/span&gt; system-type '(windows-nt ms-dos))
                    (&lt;span class="pl-k"&gt;not&lt;/span&gt; (&lt;span class="pl-c1"&gt;gnutls-available-p&lt;/span&gt;))))
       (proto (&lt;span class="pl-k"&gt;if&lt;/span&gt; no-ssl &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))
  (&lt;span class="pl-k"&gt;when&lt;/span&gt; no-ssl (&lt;span class="pl-c1"&gt;warn&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;Your version of Emacs does not support SSL connections,&lt;/span&gt;
&lt;span class="pl-s"&gt;which is unsafe because it allows man-in-the-middle attacks.&lt;/span&gt;
&lt;span class="pl-s"&gt;There are two things you can do about this warning:&lt;/span&gt;
&lt;span class="pl-s"&gt;1. Install an Emacs version that does support SSL and be safe.&lt;/span&gt;
&lt;span class="pl-s"&gt;2. Remove this warning from your init file so you won't see it again.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Comment/uncomment these two lines to enable/disable MELPA and MELPA Stable as desired&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;add-to-list&lt;/span&gt; &lt;span class="pl-c1"&gt;'package-archives&lt;/span&gt; (&lt;span class="pl-k"&gt;cons&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;melpa&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; (&lt;span class="pl-c1"&gt;concat&lt;/span&gt; proto &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;://melpa.org/packages/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;(add-to-list 'package-archives (cons "melpa-stable" (concat proto "://stable.melpa.org/packages/")) t)&lt;/span&gt;
  (&lt;span class="pl-k"&gt;when&lt;/span&gt; (&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; emacs-major-version &lt;span class="pl-c1"&gt;24&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; For important compatibility libraries like cl-lib&lt;/span&gt;
    (&lt;span class="pl-c1"&gt;add-to-list&lt;/span&gt; &lt;span class="pl-c1"&gt;'package-archives&lt;/span&gt; (&lt;span class="pl-k"&gt;cons&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gnu&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; (&lt;span class="pl-c1"&gt;concat&lt;/span&gt; proto &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;://elpa.gnu.org/packages/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))))
(&lt;span class="pl-c1"&gt;package-initialize&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then just use &lt;code&gt;M-x package-list-packages&lt;/code&gt; to browse and install
packages from MELPA and elsewhere.&lt;/p&gt;
&lt;p&gt;Note that you'll need to run &lt;code&gt;M-x package-refresh-contents&lt;/code&gt; or &lt;code&gt;M-x package-list-packages&lt;/code&gt; to ensure that Emacs has fetched the MELPA
package list before you can install packages with &lt;code&gt;M-x package-install&lt;/code&gt; or similar.&lt;/p&gt;
&lt;p&gt;Instead of the messy code above, you can of course use something like
the following instead:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'package&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;add-to-list&lt;/span&gt; &lt;span class="pl-c1"&gt;'package-archives&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;melpa&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://melpa.org/packages/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;package-initialize&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Before doing so you should understand what it does though.  To make
sure of that, you should read the official
&lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Packages.html" rel="nofollow"&gt;documentation&lt;/a&gt;
from the Emacs manual.  Also note that the calls to &lt;code&gt;require&lt;/code&gt; and
&lt;code&gt;package-initialize&lt;/code&gt; may be unnecessary depending on the Emacs version
you use.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-melpa-stable" class="anchor" aria-hidden="true" href="#melpa-stable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MELPA Stable&lt;/h3&gt;
&lt;p&gt;Packages in MELPA are built directly from the latest package source
code in the upstream repositories, but we also build and publish
packages corresponding to the latest tagged code in those
repositories, where version tags exist. These packages are published
in a separate package archive called &lt;a href="https://stable.melpa.org" rel="nofollow"&gt;MELPA
Stable&lt;/a&gt;. Most users should prefer MELPA over
MELPA Stable.&lt;/p&gt;
&lt;p&gt;Some notes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If you leave the original MELPA server in your &lt;code&gt;package-archives&lt;/code&gt;
then by default you will get the &lt;em&gt;development&lt;/em&gt; versions of packages
and not the stable ones, because the development versions are higher.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If your Emacs has the variables &lt;code&gt;package-pinned-packages&lt;/code&gt; (available
in 24.4 and later) and/or &lt;code&gt;package-archive-priorities&lt;/code&gt;, you can
customize or modify those variables as needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use the
&lt;a href="https://github.com/milkypostman/package-filter"&gt;package-filter.el&lt;/a&gt;
package which we provide.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You will probably want to remove all packages and then reinstall
them. Any packages you already have installed from MELPA will never
get "updated" to the stable version because of the way version
numbering is handled.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that the MELPA maintainers do not use MELPA Stable themselves,
and do not particularly recommend its use.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="CONTRIBUTING.org"&gt;CONTRIBUTING.org&lt;/a&gt; document.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-recipe-format" class="anchor" aria-hidden="true" href="#recipe-format"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Recipe Format&lt;/h2&gt;
&lt;p&gt;Packages are specified by files in the &lt;code&gt;recipes&lt;/code&gt; directory.  You can
contribute a new package by adding a new file under &lt;code&gt;recipes&lt;/code&gt; using
the following form (&lt;code&gt;[...]&lt;/code&gt; denotes optional or conditional values),&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&amp;lt;package-name&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
 &lt;span class="pl-c1"&gt;:fetcher&lt;/span&gt; [git|github|gitlab|hg|bitbucket]
 [&lt;span class="pl-c1"&gt;:url&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;repo url&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
 [&lt;span class="pl-c1"&gt;:repo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github-gitlab-or-bitbucket-user/repo-name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
 [&lt;span class="pl-c1"&gt;:commit&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;commit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
 [&lt;span class="pl-c1"&gt;:branch&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;branch&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
 [&lt;span class="pl-c1"&gt;:version-regexp&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;regexp&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
 [&lt;span class="pl-c1"&gt;:files&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;file1&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ...)])&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;package-name&lt;/code&gt;
a lisp symbol that has the same name as the package being specified.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:fetcher&lt;/code&gt; specifies the type of repository that &lt;code&gt;:url&lt;/code&gt; or &lt;code&gt;:repo&lt;/code&gt;
points to.  MELPA supports &lt;a href="http://git-scm.com/" rel="nofollow"&gt;&lt;code&gt;git&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://github.com/"&gt;&lt;code&gt;github&lt;/code&gt;&lt;/a&gt;,
&lt;a href="https://gitlab.com/" rel="nofollow"&gt;&lt;code&gt;gitlab&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://www.mercurial-scm.org/" rel="nofollow"&gt;&lt;code&gt;hg&lt;/code&gt;&lt;/a&gt; (Mercurial), and
&lt;a href="https://bitbucket.org/" rel="nofollow"&gt;&lt;code&gt;bitbucket&lt;/code&gt;&lt;/a&gt;.  The &lt;code&gt;bitbucket&lt;/code&gt; fetcher derives from
&lt;code&gt;hg&lt;/code&gt;, so you have to use &lt;code&gt;git&lt;/code&gt; for Git repositories hosted on
Bitbucket.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:url&lt;/code&gt;
specifies the URL of the version control repository. &lt;em&gt;required for
the &lt;code&gt;git&lt;/code&gt;, and &lt;code&gt;hg&lt;/code&gt; fetchers.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:repo&lt;/code&gt; specifies the github/gitlab/bitbucket repository and is of the form
&lt;code&gt;user/repo-name&lt;/code&gt;. &lt;em&gt;required for the &lt;code&gt;github&lt;/code&gt;, &lt;code&gt;gitlab&lt;/code&gt;, and &lt;code&gt;bitbucket&lt;/code&gt; fetchers&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:commit&lt;/code&gt;
specifies the commit of the git repo to checkout. The value
will be passed to &lt;code&gt;git reset&lt;/code&gt; in a repo where &lt;code&gt;upstream&lt;/code&gt; is the
original repository. Can therefore be either a SHA, if pointing at a
specific commit, or a full ref prefixed with "origin/". Only used by
the &lt;code&gt;git&lt;/code&gt;-based fetchers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:branch&lt;/code&gt;
specifies the branch of the git repo to use. This is like &lt;code&gt;:commit&lt;/code&gt;, but
it adds the "origin/" prefix automatically.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:version-regexp&lt;/code&gt; is a regular expression for extracting a
version-string from the repository tags.  The default matches
typical version tags such as &lt;code&gt;1.0&lt;/code&gt;, &lt;code&gt;R16&lt;/code&gt; or &lt;code&gt;v4.3.5&lt;/code&gt;, so you should
not override it unless necessary.  For an unusual tag like
"OTP-18.1.5", we might add &lt;code&gt;:version-regexp "[^0-9]*\\(.*\\)"&lt;/code&gt; to
strip the "OTP-" prefix.  The captured portion of the regexp must be
parseable by Emacs' &lt;code&gt;version-to-list&lt;/code&gt; function.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:files&lt;/code&gt; optional property specifying the elisp and info files used to build the
package. Please do not override this if the default value (below) is adequate, which
it should usually be:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  ("*.el" "*.el.in" "dir"
   "*.info" "*.texi" "*.texinfo"
   "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo"
   (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el"))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This option is necessary when there are multiple packages in the
repository and thus the package should only be built from a subset of
&lt;code&gt;.el&lt;/code&gt; files. For example, elisp test files should not normally be
packaged. &lt;em&gt;Any file specified at any path in the repository is copied
to the root of the package.&lt;/em&gt; More complex options are available,
submit an &lt;a href="https://github.com/melpa/melpa/issues"&gt;Issue&lt;/a&gt; if the
specified package requires more complex file specification.&lt;/p&gt;
&lt;p&gt;If the package merely requires some additional files, for example for
bundling external dependencies, but is otherwise fine with the defaults, it's
recommended to use &lt;code&gt;:defaults&lt;/code&gt; as the very first element of this list, which
causes the default value shown above to be prepended to the specified file list.&lt;/p&gt;
&lt;p&gt;Note that elisp in subdirectories is never included by default, so
you might find it convenient to separate auxiliary files such as tests into
subdirectories to keep packaging simple.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-example-single-file-repository" class="anchor" aria-hidden="true" href="#example-single-file-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example: Single File Repository&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/nonsequitur/smex"&gt;smex&lt;/a&gt; is a repository that
contains two files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;README.markdown&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;smex.el&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since there is only one &lt;code&gt;.el&lt;/code&gt; file, this package only needs the &lt;code&gt;:url&lt;/code&gt;
and &lt;code&gt;:fetcher&lt;/code&gt; specified,&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(smex &lt;span class="pl-c1"&gt;:repo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nonsequitur/smex&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:fetcher&lt;/span&gt; github)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-example-multiple-packages-in-one-repository" class="anchor" aria-hidden="true" href="#example-multiple-packages-in-one-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example: Multiple Packages in one Repository&lt;/h3&gt;
&lt;p&gt;Assume we have a repository containing three libraries &lt;code&gt;mypackage.el&lt;/code&gt;,
&lt;code&gt;helm-mypackage.el&lt;/code&gt;, and &lt;code&gt;persp-mypackage.el&lt;/code&gt;.  The latter two
libraries are optional and users who don't want to use the packages
&lt;code&gt;helm&lt;/code&gt; and/or &lt;code&gt;perspective&lt;/code&gt; should not be forced to install them just
so they can install &lt;code&gt;mypackage&lt;/code&gt;.  These libraries should therefore be
distributed as separate packages.&lt;/p&gt;
&lt;p&gt;The three packages have to be declared in three separate files
&lt;code&gt;recipes/mypackage&lt;/code&gt;, &lt;code&gt;recipes/helm-mypackage&lt;/code&gt;, and
&lt;code&gt;recipes/persp-mypackage&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(mypackage &lt;span class="pl-c1"&gt;:repo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;someuser/mypackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
           &lt;span class="pl-c1"&gt;:fetcher&lt;/span&gt; github
           &lt;span class="pl-c1"&gt;:files&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mypackage.el&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(helm-mypackage &lt;span class="pl-c1"&gt;:repo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;someuser/mypackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                &lt;span class="pl-c1"&gt;:fetcher&lt;/span&gt; github
                &lt;span class="pl-c1"&gt;:files&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;helm-mypackage.el&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(persp-mypackage &lt;span class="pl-c1"&gt;:repo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;someuser/mypackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                 &lt;span class="pl-c1"&gt;:fetcher&lt;/span&gt; github
                 &lt;span class="pl-c1"&gt;:files&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;persp-mypackage.el&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-example-multiple-files-in-multiple-directories" class="anchor" aria-hidden="true" href="#example-multiple-files-in-multiple-directories"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example: Multiple Files in Multiple Directories&lt;/h3&gt;
&lt;p&gt;There are special cases where creation of the package comes from many
different sub-directories in the repository and the destination
sub-directories need to be explicitly set.&lt;/p&gt;
&lt;p&gt;Consider the &lt;code&gt;flymake-perlcritic&lt;/code&gt; recipe,&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(flymake-perlcritic &lt;span class="pl-c1"&gt;:repo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;illusori/emacs-flymake-perlcritic&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                    &lt;span class="pl-c1"&gt;:fetcher&lt;/span&gt; github
                    &lt;span class="pl-c1"&gt;:files&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;*.el&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bin/flymake_perlcritic&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which will result in a package structure of,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;flymake-perlcritic-YYYMMDD
|-- bin
|   `-- flymake_perlcritic
|-- flymake-perlcritic-pkg.el
`-- flymake-perlcritic.el
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that specifying an entry in &lt;code&gt;:files&lt;/code&gt; that is a list takes the
first element to be the destination directory.  These can be embedded
further, such as the following---hypothetical---entry for &lt;code&gt;:files&lt;/code&gt;,&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;*.el&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;snippets&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;html-mode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;snippets/html-mode/*&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;python-mode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;snippets/python-mode/*&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which would result in a package with &lt;code&gt;*.el&lt;/code&gt; in something like,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;package-YYYYMMDD
|-- snippets
|   |-- html-mode
|   |   |-- div
|   |   `-- html
|   `-- python-mode
|       |-- for
|       `-- main
`-- package.el
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But a better solution, given that we probably want to copy the
&lt;em&gt;entire&lt;/em&gt; &lt;code&gt;snippets&lt;/code&gt; directory to the root of the package, we could
just specify that directory.  Consider the &lt;code&gt;pony-mode&lt;/code&gt; recipe,&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(pony-mode
 &lt;span class="pl-c1"&gt;:repo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;davidmiller/pony-mode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-c1"&gt;:fetcher&lt;/span&gt; github
 &lt;span class="pl-c1"&gt;:files&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src/*.el&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;snippets&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which generates the package,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pony-mode-YYYYMMDD
|-- pony-mode-pkg.el
|-- pony-mode.el
|-- pony-tpl.el
`-- snippets
    |-- html-mode
    |   |-- bl
    |   |-- ex
    |   |-- for
    |   |-- if
    |   |-- loa
    |   |-- sup
    |   |-- testc
    |   `-- {{
    `-- python-mode
        |-- auth-view
        |-- bn
        |-- model
        |-- modelform
        |-- render-to
        |-- testc
        `-- view
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-build-scripts" class="anchor" aria-hidden="true" href="#build-scripts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Scripts&lt;/h2&gt;
&lt;p&gt;Building MELPA is all based around using the &lt;code&gt;Makefile&lt;/code&gt; included in
the root repository directory. Described below are the actions that
accepted by the &lt;code&gt;Makefile&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;all&lt;/code&gt; -- Builds all packages under the &lt;code&gt;recipes/&lt;/code&gt; directory and compiles the &lt;code&gt;index.html&lt;/code&gt; file for the &lt;a href="https://melpa.org" rel="nofollow"&gt;melpa&lt;/a&gt; website.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;recipes/&amp;lt;NAME&amp;gt;&lt;/code&gt; -- Build individual recipe &lt;code&gt;&amp;lt;NAME&amp;gt;&lt;/code&gt;. Built packages
are put in the &lt;code&gt;packages/&lt;/code&gt; folder with version corresponding to the
date of the latest commit that modified at least one of the files
specified by the recipe; given according to the &lt;code&gt;%Y%m%d&lt;/code&gt; format.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;json&lt;/code&gt; -- build all JSON files.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;archive.json&lt;/code&gt; -- construct the &lt;code&gt;archive.json&lt;/code&gt; file that will contain a JSON object of all compiled packages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;recipes.json&lt;/code&gt; -- construct the &lt;code&gt;recipes.json&lt;/code&gt; file containing a JSON object of all packages available for building.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;clean&lt;/code&gt; -- clean everything.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;html&lt;/code&gt; -- build &lt;code&gt;index.html&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;clean-working&lt;/code&gt; -- remove all repositories that have been checked out to the &lt;code&gt;working/&lt;/code&gt; directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;clean-packages&lt;/code&gt; -- remove all compiled packages from the &lt;code&gt;packages&lt;/code&gt; directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;clean-json&lt;/code&gt; -- remove all JSON files.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that these scripts require an Emacs with &lt;code&gt;package.el&lt;/code&gt; installed,
such as Emacs 24. If you have an older version of Emacs, you can get a
suitable &lt;code&gt;package.el&lt;/code&gt; &lt;a href="https://git.savannah.gnu.org/gitweb/?p=emacs.git;a=blob_plain;hb=ba08b24186711eaeb3748f3d1f23e2c2d9ed0d09;f=lisp/emacs-lisp/package.el" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-api" class="anchor" aria-hidden="true" href="#api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API&lt;/h2&gt;
&lt;p&gt;All repository code is contained in the file
&lt;code&gt;package-build/package-build.el&lt;/code&gt;.  That code is maintained in a
&lt;a href="https://github.com/melpa/package-build"&gt;separate repository&lt;/a&gt;: the version
in the MELPA repository is imported using &lt;code&gt;git subtree&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-functions" class="anchor" aria-hidden="true" href="#functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Functions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;(package-build-all)&lt;/code&gt; : build packages for all recipes in the
directory specified by &lt;code&gt;package-build-recipes-dir&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;(package-build-archive NAME)&lt;/code&gt; : interactive elisp function to build
a single archive. NAME is a symbol for the package to be built.
Packages are staged in the directory specified by
&lt;code&gt;package-build-working-dir&lt;/code&gt; and built packages are placed in the
directory specified by &lt;code&gt;package-build-archive-dir&lt;/code&gt;. Packages are
versioned based on the most recent commit date to package files based
on commits to upstream package repository. For multi-file packages,
the file &lt;code&gt;&amp;lt;NAME&amp;gt;-pkg.el&lt;/code&gt; is automatically generated and contains
&lt;em&gt;description&lt;/em&gt;, &lt;em&gt;version&lt;/em&gt;, and &lt;em&gt;requires&lt;/em&gt; information determined by
searching &lt;code&gt;&amp;lt;NAME&amp;gt;-pkg.el&lt;/code&gt;, &lt;code&gt;&amp;lt;NAME&amp;gt;.el&lt;/code&gt;, and &lt;code&gt;&amp;lt;NAME&amp;gt;-pkg.el.in&lt;/code&gt;, if
they exist in the repository.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-variables" class="anchor" aria-hidden="true" href="#variables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Variables&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;package-build-working-dir&lt;/code&gt; : Staging area containing package
repositories and package directories being built.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;package-build-archive-dir&lt;/code&gt; : Location to store &lt;code&gt;archive-contents&lt;/code&gt; and
any built packages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;package-build-recipes-dir&lt;/code&gt; : Directory containing MELPA compatible
recipes.  See &lt;a href="#recipe-format"&gt;Recipe Format&lt;/a&gt; section for more details.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;p&gt;Packages end up in the &lt;code&gt;packages/&lt;/code&gt; directory by default.
This can be configured using the &lt;code&gt;package-build-archive-dir&lt;/code&gt; variable.&lt;/p&gt;
&lt;p&gt;Repositories are checked out to the &lt;code&gt;working/&lt;/code&gt; directory by default.
This can be configured using the &lt;code&gt;package-build-working-dir&lt;/code&gt; variable.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-mirrors" class="anchor" aria-hidden="true" href="#mirrors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mirrors&lt;/h2&gt;
&lt;p&gt;Official mirrors are available (with many thanks to mirrorservice.org)
so that if melpa.org is down, packages can still be installed.  The
following are the HTTP/HTTPS URLs to use in &lt;code&gt;package-archives&lt;/code&gt; for
MELPA and MELPA Stable respectively:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.mirrorservice.org/sites/melpa.org/packages/" rel="nofollow"&gt;http://www.mirrorservice.org/sites/melpa.org/packages/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mirrorservice.org/sites/melpa.org/packages/" rel="nofollow"&gt;https://www.mirrorservice.org/sites/melpa.org/packages/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.mirrorservice.org/sites/stable.melpa.org/packages/" rel="nofollow"&gt;http://www.mirrorservice.org/sites/stable.melpa.org/packages/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mirrorservice.org/sites/stable.melpa.org/packages/" rel="nofollow"&gt;https://www.mirrorservice.org/sites/stable.melpa.org/packages/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Only the packages are mirrored, not the web site front-end itself.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We are NOT responsible for the contents of any UNOFFICIAL mirror of
our packages.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;MELPA&lt;/em&gt; is &lt;em&gt;Milkypostman's ELPA&lt;/em&gt; or &lt;em&gt;Milkypostman's Experimental Lisp
Package Archive&lt;/em&gt; if you're not into the whole brevity thing.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>melpa</author><guid isPermaLink="false">https://github.com/melpa/melpa</guid><pubDate>Sat, 28 Dec 2019 00:11:00 GMT</pubDate></item></channel></rss>