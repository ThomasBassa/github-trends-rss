<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: R, This week</title><link>https://github.com/trending/r?since=weekly</link><description>The top repositories on GitHub for r, measured weekly</description><pubDate>Wed, 20 Nov 2019 01:08:54 GMT</pubDate><lastBuildDate>Wed, 20 Nov 2019 01:08:54 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>satijalab/seurat #1 in R, This week</title><link>https://github.com/satijalab/seurat</link><description>&lt;p&gt;&lt;i&gt;R toolkit for single cell genomics&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.com/satijalab/seurat" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b4198e3101857fb90f7a1c9ece82ef77a3c24d4b/68747470733a2f2f7472617669732d63692e636f6d2f736174696a616c61622f7365757261742e737667" alt="Build Status" data-canonical-src="https://travis-ci.com/satijalab/seurat.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/satijalab/seurat" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f3f97cad37286f12acbb7868bffc4119c0e6d75b/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f736174696a616c61622f7365757261743f7376673d74727565" alt="AppVeyor build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/satijalab/seurat?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cran.r-project.org/package=Seurat" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3f41aaffd0745b04e91bef2deb22c61155581231/68747470733a2f2f7777772e722d706b672e6f72672f6261646765732f76657273696f6e2f536575726174" alt="CRAN Version" data-canonical-src="https://www.r-pkg.org/badges/version/Seurat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cran.r-project.org/package=Seurat" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3de70c3ddcccdf931f9ad808e71008c3185033a5/68747470733a2f2f6372616e6c6f67732e722d706b672e6f72672f6261646765732f536575726174" alt="CRAN Downloads" data-canonical-src="https://cranlogs.r-pkg.org/badges/Seurat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-seurat-v311" class="anchor" aria-hidden="true" href="#seurat-v311"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Seurat v3.1.1&lt;/h1&gt;
&lt;p&gt;Seurat is an R toolkit for single cell genomics, developed and maintained by the Satija Lab at NYGC.&lt;/p&gt;
&lt;p&gt;Instructions, documentation, and tutorials can be found at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://satijalab.org/seurat" rel="nofollow"&gt;https://satijalab.org/seurat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Seurat is also hosted on GitHub, you can view and clone the repository at&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/satijalab/seurat"&gt;https://github.com/satijalab/seurat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Seurat has been successfully installed on Mac OS X, Linux, and Windows, using the devtools package to install directly from GitHub&lt;/p&gt;
&lt;p&gt;Improvements and new features will be added on a regular basis, please contact &lt;a href="mailto:seuratpackage@gmail.com"&gt;seuratpackage@gmail.com&lt;/a&gt; with any questions or if you would like to contribute&lt;/p&gt;
&lt;p&gt;Version History&lt;/p&gt;
&lt;p&gt;August 20, 2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 3.1&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Support for SCTransform integration workflows&lt;/li&gt;
&lt;li&gt;Integration speed ups: reference-based integration + reciprocal PCA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;April 12, 2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 3.0&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Preprint published describing new methods for identifying anchors across single-cell datasets&lt;/li&gt;
&lt;li&gt;Restructured Seurat object with native support for multimodal data&lt;/li&gt;
&lt;li&gt;Parallelization support via future&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;July 20, 2018&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 2.4&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Java dependency removed and functionality rewritten in Rcpp&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;March 22, 2018&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 2.3&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;New utility functions&lt;/li&gt;
&lt;li&gt;Speed and efficiency improvments&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;January 10, 2018&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 2.2&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Support for multiple-dataset alignment with RunMultiCCA and AlignSubspace&lt;/li&gt;
&lt;li&gt;New methods for evaluating alignment performance&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;October 12, 2017&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 2.1&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Support for using MAST and DESeq2 packages for differential expression testing in FindMarkers&lt;/li&gt;
&lt;li&gt;Support for multi-modal single-cell data via @assay slot&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;July 26, 2017&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 2.0&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Preprint released for integrated analysis of scRNA-seq across conditions, technologies and species&lt;/li&gt;
&lt;li&gt;Significant restructuring of code to support clarity and dataset exploration&lt;/li&gt;
&lt;li&gt;Methods for scoring gene expression and cell-cycle phase&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;October 4, 2016&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 1.4 released&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Improved tools for cluster evaluation/visualizations&lt;/li&gt;
&lt;li&gt;Methods for combining and adding to datasets&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;August 22, 2016:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 1.3 released&lt;/li&gt;
&lt;li&gt;Changes :
&lt;ul&gt;
&lt;li&gt;Improved clustering approach - see FAQ for details&lt;/li&gt;
&lt;li&gt;All functions support sparse matrices&lt;/li&gt;
&lt;li&gt;Methods for removing unwanted sources of variation&lt;/li&gt;
&lt;li&gt;Consistent function names&lt;/li&gt;
&lt;li&gt;Updated visualizations&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;May 21, 2015:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Drop-Seq manuscript published. Version 1.2 released&lt;/li&gt;
&lt;li&gt;Changes :
&lt;ul&gt;
&lt;li&gt;Added support for spectral t-SNE and density clustering&lt;/li&gt;
&lt;li&gt;New visualizations - including pcHeatmap, dot.plot, and feature.plot&lt;/li&gt;
&lt;li&gt;Expanded package documentation, reduced import package burden&lt;/li&gt;
&lt;li&gt;Seurat code is now hosted on GitHub, enables easy install through devtools&lt;/li&gt;
&lt;li&gt;Small bug fixes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;April 13, 2015:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Spatial mapping manuscript published. Version 1.1 released (initial release)&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>satijalab</author><guid isPermaLink="false">https://github.com/satijalab/seurat</guid><pubDate>Wed, 20 Nov 2019 00:01:00 GMT</pubDate></item><item><title>szcf-weiya/ESL-CN #2 in R, This week</title><link>https://github.com/szcf-weiya/ESL-CN</link><description>&lt;p&gt;&lt;i&gt;The Elements of Statistical Learning (ESL)的中文翻译、代码实现及其习题解答。&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-esl-cn" class="anchor" aria-hidden="true" href="#esl-cn"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ESL-CN&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/szcf-weiya/ESL-CN" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9d93822115cc5bf0f7b26ae6f81db326198b4c59/68747470733a2f2f7472617669732d63692e6f72672f737a63662d77656979612f45534c2d434e2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/szcf-weiya/ESL-CN.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/ESL-CN/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8306fcf5e3121d6c05e2a5ca418460e515433a9e/68747470733a2f2f6261646765732e6769747465722e696d2f45534c2d434e2f636f6d6d756e6974792e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/ESL-CN/community.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Elements of Statistical Learning (ESL) 的中文翻译、代码实现及其习题解答。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-习题解答" class="anchor" aria-hidden="true" href="#习题解答"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;习题解答&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/szcf-weiya/ESL-CN/milestone/7"&gt;&lt;img src="https://camo.githubusercontent.com/0ed58e6b0fa77dfcfdd408089ec8c89e7a6de922/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736f6c7574696f6e2d63686170746572253230322d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/solution-chapter%202-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/szcf-weiya/ESL-CN/milestone/2"&gt;&lt;img src="https://camo.githubusercontent.com/196c12432db5bf49032cf86711af1466c1739cbe/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736f6c7574696f6e2d63686170746572253230332d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/solution-chapter%203-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/szcf-weiya/ESL-CN/milestone/12"&gt;&lt;img src="https://camo.githubusercontent.com/a5bd6daa399f3168579f2d4cbdf7b68cd1fcbcc6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736f6c7574696f6e2d63686170746572253230342d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/solution-chapter%204-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/szcf-weiya/ESL-CN/milestone/6"&gt;&lt;img src="https://camo.githubusercontent.com/349b6c3b9775919441d6c58272e1b44d1c10be6a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736f6c7574696f6e2d63686170746572253230352d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/solution-chapter%205-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/szcf-weiya/ESL-CN/milestone/14"&gt;&lt;img src="https://camo.githubusercontent.com/7da82cd51b2d9bd40fe1b419a10133478a374e16/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736f6c7574696f6e2d63686170746572253230362d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/solution-chapter%206-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/szcf-weiya/ESL-CN/milestone/4"&gt;&lt;img src="https://camo.githubusercontent.com/8fc1c94b956910dcb5b73872d94acf6ebc031245/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736f6c7574696f6e2d63686170746572253230372d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/solution-chapter%207-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/szcf-weiya/ESL-CN/milestone/17"&gt;&lt;img src="https://camo.githubusercontent.com/e4ee369d8838f675b01838dcb9e2635972ede2df/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736f6c7574696f6e2d63686170746572253230382d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/solution-chapter%208-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/szcf-weiya/ESL-CN/milestone/15"&gt;&lt;img src="https://camo.githubusercontent.com/837c5487a38163efd3963cdba3dd2c29ac871c30/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736f6c7574696f6e2d63686170746572253230392d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/solution-chapter%209-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/szcf-weiya/ESL-CN/milestone/1"&gt;&lt;img src="https://camo.githubusercontent.com/9893b5b0491e7ce118daba2c1e15359afd69324a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736f6c7574696f6e2d6368617074657225323031302d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/solution-chapter%2010-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/szcf-weiya/ESL-CN/milestone/18"&gt;&lt;img src="https://camo.githubusercontent.com/67ffe95d98bf96f466c0d1ef93e8537a37b9a555/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736f6c7574696f6e2d6368617074657225323031312d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/solution-chapter%2011-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/szcf-weiya/ESL-CN/milestone/3"&gt;&lt;img src="https://camo.githubusercontent.com/4fe8478babfa9340382e88212cd489c2ab49c3f5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736f6c7574696f6e2d6368617074657225323031322d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/solution-chapter%2012-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/szcf-weiya/ESL-CN/milestone/19"&gt;&lt;img src="https://camo.githubusercontent.com/daadc30c5dc08ee214c4652e13fbe0c83570a2db/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736f6c7574696f6e2d6368617074657225323031332d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/solution-chapter%2013-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/szcf-weiya/ESL-CN/milestone/5"&gt;&lt;img src="https://camo.githubusercontent.com/695da77849b8ecd94beb3856cc4d715d94959eca/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736f6c7574696f6e2d6368617074657225323031342d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/solution-chapter%2014-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/szcf-weiya/ESL-CN/milestone/16"&gt;&lt;img src="https://camo.githubusercontent.com/678799d3b1d8ae737f4dd13b40a3a3255ee868fb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736f6c7574696f6e2d6368617074657225323031352d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/solution-chapter%2015-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/szcf-weiya/ESL-CN/milestone/21"&gt;&lt;img src="https://camo.githubusercontent.com/4c93a35c1e015419a7cad85231214d12c0e8256d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736f6c7574696f6e2d6368617074657225323031362d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/solution-chapter%2016-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/szcf-weiya/ESL-CN/milestone/20"&gt;&lt;img src="https://camo.githubusercontent.com/719b4462f6fc6e75400ee920f3b45c62ef0f6644/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736f6c7574696f6e2d6368617074657225323031372d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/solution-chapter%2017-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/szcf-weiya/ESL-CN/milestone/13"&gt;&lt;img src="https://camo.githubusercontent.com/fc7a8d9ccca9579a95ef2cca5a9837074c85b107/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736f6c7574696f6e2d6368617074657225323031382d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/solution-chapter%2018-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-代码实现" class="anchor" aria-hidden="true" href="#代码实现"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;代码实现&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="code/EM/em.R"&gt;EM 算法模拟&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="code/NaiveBayes"&gt;朴素贝叶斯进行文本挖掘&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="code/CART"&gt;CART实现&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="code/boosting"&gt;AdaBoost实现R&amp;amp;Julia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="code/MARS"&gt;MARS实现&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="code/rbm"&gt;RBM&lt;/a&gt;，或者可以查看 &lt;a href="http://nbviewer.jupyter.org/github/szcf-weiya/ESL-CN/blob/master/code/rbm/RBM.ipynb" rel="nofollow"&gt;Jupyter Notebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="code/Gibbs"&gt;Gibbs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="code/SOM"&gt;Self-organized Map&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="code/nonParametrics"&gt;kernel estimation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="code/Resampling"&gt;Resampling Method&lt;/a&gt;: 包括交叉验证(cv)和自助法(bootstrap)&lt;/li&gt;
&lt;li&gt;&lt;a href="code/nn"&gt;Neural Network&lt;/a&gt;: &lt;a href="http://nbviewer.jupyter.org/github/szcf-weiya/TFnotes/blob/master/nn/nn.ipynb" rel="nofollow"&gt;Simple Classification&lt;/a&gt;，&lt;a href="http://nbviewer.jupyter.org/github/szcf-weiya/ESL-CN/blob/master/code/nn/Implementation-for-Section-6.ipynb" rel="nofollow"&gt;Implementation for Section 11.6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="code/HighDim"&gt;高维问题例子&lt;/a&gt;: &lt;a href="http://rmd.hohoweiya.xyz/ex18_1.nb.html" rel="nofollow"&gt;例18.1的模拟&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-文献统计" class="anchor" aria-hidden="true" href="#文献统计"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;文献统计&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Chap&lt;/th&gt;
&lt;th&gt;AOS&lt;/th&gt;
&lt;th&gt;JASA&lt;/th&gt;
&lt;th&gt;JRSS&lt;/th&gt;
&lt;th&gt;BKA&lt;/th&gt;
&lt;th&gt;percentage&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;4/14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0/7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1/11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;12/23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;6/17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1/11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;9/25&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;4/14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;2/14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1/8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0/12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;8/21&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;----&lt;/td&gt;
&lt;td&gt;----&lt;/td&gt;
&lt;td&gt;----&lt;/td&gt;
&lt;td&gt;----&lt;/td&gt;
&lt;td&gt;----&lt;/td&gt;
&lt;td&gt;----&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;/article&gt;&lt;/div&gt;</description><author>szcf-weiya</author><guid isPermaLink="false">https://github.com/szcf-weiya/ESL-CN</guid><pubDate>Wed, 20 Nov 2019 00:02:00 GMT</pubDate></item><item><title>tidyverse/ggplot2 #3 in R, This week</title><link>https://github.com/tidyverse/ggplot2</link><description>&lt;p&gt;&lt;i&gt;An implementation of the Grammar of Graphics in R&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;
&lt;h1&gt;&lt;a id="user-content-ggplot2-" class="anchor" aria-hidden="true" href="#ggplot2-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ggplot2 &lt;a target="_blank" rel="noopener noreferrer" href="man/figures/logo.png"&gt;&lt;img src="man/figures/logo.png" align="right" width="120" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/tidyverse/ggplot2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3621740a79d3a99f071c5954af024016233423a9/68747470733a2f2f7472617669732d63692e6f72672f7469647976657273652f6767706c6f74322e7376673f6272616e63683d6d6173746572" alt="Travis Build Status" data-canonical-src="https://travis-ci.org/tidyverse/ggplot2.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/tidyverse/ggplot2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3e19fd752aaa9f769980bd884d47a3888e9ed04f/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f7469647976657273652f6767706c6f74323f6272616e63683d6d6173746572267376673d74727565" alt="AppVeyor Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/tidyverse/ggplot2?branch=master&amp;amp;svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/github/tidyverse/ggplot2?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c823e70511a557ba865b59883c0ff295a53a4e31/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f7469647976657273652f6767706c6f74322f6d61737465722e737667" alt="Coverage Status" data-canonical-src="https://img.shields.io/codecov/c/github/tidyverse/ggplot2/master.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cran.r-project.org/package=ggplot2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3563f2e7d300ad449ddde9d6b9150899b63857bc/687474703a2f2f7777772e722d706b672e6f72672f6261646765732f76657273696f6e2f6767706c6f7432" alt="CRAN_Status_Badge" data-canonical-src="http://www.r-pkg.org/badges/version/ggplot2" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;ggplot2 is a system for declaratively creating graphics, based on &lt;a href="http://amzn.to/2ef1eWp" rel="nofollow"&gt;The
Grammar of Graphics&lt;/a&gt;. You provide the data, tell
ggplot2 how to map variables to aesthetics, what graphical primitives to
use, and it takes care of the details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The easiest way to get ggplot2 is to install the whole tidyverse:&lt;/span&gt;
install.packages(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tidyverse&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Alternatively, install just ggplot2:&lt;/span&gt;
install.packages(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ggplot2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Or the the development version from GitHub:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install.packages("devtools")&lt;/span&gt;
&lt;span class="pl-e"&gt;devtools&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;install_github(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tidyverse/ggplot2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-cheatsheet" class="anchor" aria-hidden="true" href="#cheatsheet"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cheatsheet&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/rstudio/cheatsheets/blob/master/data-visualization-2.1.pdf"&gt;&lt;img src="https://raw.githubusercontent.com/rstudio/cheatsheets/master/pngs/thumbnails/data-visualization-cheatsheet-thumbs.png" width="630" height="252" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;It’s hard to succinctly describe how ggplot2 works because it embodies a
deep philosophy of visualisation. However, in most cases you start with
&lt;code&gt;ggplot()&lt;/code&gt;, supply a dataset and aesthetic mapping (with &lt;code&gt;aes()&lt;/code&gt;). You
then add on layers (like &lt;code&gt;geom_point()&lt;/code&gt; or &lt;code&gt;geom_histogram()&lt;/code&gt;), scales
(like &lt;code&gt;scale_colour_brewer()&lt;/code&gt;), faceting specifications (like
&lt;code&gt;facet_wrap()&lt;/code&gt;) and coordinate systems (like &lt;code&gt;coord_flip()&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;library(&lt;span class="pl-smi"&gt;ggplot2&lt;/span&gt;)

ggplot(&lt;span class="pl-smi"&gt;mpg&lt;/span&gt;, aes(&lt;span class="pl-smi"&gt;displ&lt;/span&gt;, &lt;span class="pl-smi"&gt;hwy&lt;/span&gt;, &lt;span class="pl-v"&gt;colour&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;class&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt; 
  geom_point()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README-example-1.png"&gt;&lt;img src="man/figures/README-example-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lifecycle" class="anchor" aria-hidden="true" href="#lifecycle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lifecycle&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.tidyverse.org/lifecycle/#stable" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/57bc311ca33c5dda60526cb1bb5cf3da0d393cee/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d737461626c652d627269676874677265656e2e737667" alt="lifecycle" data-canonical-src="https://img.shields.io/badge/lifecycle-stable-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ggplot2 is now over 10 years old and is used by hundreds of thousands of
people to make millions of plots. That means, by-and-large, ggplot2
itself changes relatively little. When we do make changes, they will be
generally to add new functions or arguments rather than changing the
behaviour of existing functions, and if we do make changes to existing
behaviour we will do them for compelling reasons.&lt;/p&gt;
&lt;p&gt;If you are looking for innovation, look to ggplot2’s rich ecosystem of
extensions. See a community maintained list at
&lt;a href="http://www.ggplot2-exts.org/gallery/" rel="nofollow"&gt;http://www.ggplot2-exts.org/gallery/&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-learning-ggplot2" class="anchor" aria-hidden="true" href="#learning-ggplot2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learning ggplot2&lt;/h2&gt;
&lt;p&gt;If you are new to ggplot2 you are better off starting with a systematic
introduction, rather than trying to learn from reading individual
documentation pages. Currently, there are three good places to start:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href="http://r4ds.had.co.nz/data-visualisation.html" rel="nofollow"&gt;data
visualisation&lt;/a&gt; and
&lt;a href="http://r4ds.had.co.nz/graphics-for-communication.html" rel="nofollow"&gt;graphics for
communication&lt;/a&gt;
chapters in &lt;a href="http://r4ds.had.co.nz" rel="nofollow"&gt;R for data science&lt;/a&gt;. R for data
science is designed to give you a comprehensive introduction to the
&lt;a href="http://tidyverse.org" rel="nofollow"&gt;tidyverse&lt;/a&gt;, and these two chapters will get
you up to speed with the essentials of ggplot2 as quickly as
possible.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you’d like to take an online course, try &lt;a href="http://shop.oreilly.com/product/0636920052807.do" rel="nofollow"&gt;Data Visualization in R
With ggplot2&lt;/a&gt; by
Kara Woo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to dive into making common graphics as quickly as
possible, I recommend &lt;a href="https://amzn.to/2TU78ip" rel="nofollow"&gt;The R Graphics
Cookbook&lt;/a&gt; by Winston Chang. It provides a
set of recipes to solve common graphics problems.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you’ve mastered the basics and want to learn more, read &lt;a href="http://amzn.to/2fncG50" rel="nofollow"&gt;ggplot2:
Elegant Graphics for Data Analysis&lt;/a&gt;. It
describes the theoretical underpinnings of ggplot2 and shows you how all
the pieces fit together. This book helps you understand the theory that
underpins ggplot2, and will help you create new types of graphics
specifically tailored to your needs. The book is not available for free,
but you can find the complete source for the book at
&lt;a href="https://github.com/hadley/ggplot2-book"&gt;https://github.com/hadley/ggplot2-book&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting help&lt;/h2&gt;
&lt;p&gt;There are two main places to get help with ggplot2:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href="https://community.rstudio.com/" rel="nofollow"&gt;RStudio community&lt;/a&gt; is a
friendly place to ask any questions about ggplot2.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/tagged/ggplot2?sort=frequent&amp;amp;pageSize=50" rel="nofollow"&gt;Stack
Overflow&lt;/a&gt;
is a great source of answers to common ggplot2 questions. It is also
a great place to get help, once you have created a reproducible
example that illustrates your problem.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>tidyverse</author><guid isPermaLink="false">https://github.com/tidyverse/ggplot2</guid><pubDate>Wed, 20 Nov 2019 00:03:00 GMT</pubDate></item><item><title>tylermorganwall/rayshader #4 in R, This week</title><link>https://github.com/tylermorganwall/rayshader</link><description>&lt;p&gt;&lt;i&gt;R Package for 2D and 3D mapping and data visualization&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-rayshader" class="anchor" aria-hidden="true" href="#rayshader"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rayshader&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/raylogosmall.png"&gt;&lt;img src="man/figures/raylogosmall.png" align="right" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/smallhobart.gif"&gt;&lt;img src="man/figures/smallhobart.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;rayshader&lt;/strong&gt; is an open source package for producing 2D and 3D data
visualizations in R. &lt;strong&gt;rayshader&lt;/strong&gt; uses elevation data in a base R
matrix and a combination of raytracing, spherical texture mapping,
overlays, and ambient occlusion to generate beautiful topographic 2D and
3D maps. In addition to maps, &lt;strong&gt;rayshader&lt;/strong&gt; also allows the user to
translate &lt;strong&gt;ggplot2&lt;/strong&gt; objects into beautiful 3D data visualizations.&lt;/p&gt;
&lt;p&gt;The models can be rotated and examined interactively or the camera
movement can be scripted to create animations. The user can also create
a cinematic depth of field post-processing effect to direct the user’s
focus to important regions in the figure. The 3D models can also be
exported to a 3D-printable format with a built-in STL export function.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; To install the latest version from Github:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install.packages("devtools")&lt;/span&gt;
&lt;span class="pl-e"&gt;devtools&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;install_github(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tylermorganwall/rayshader&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-functions" class="anchor" aria-hidden="true" href="#functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Functions&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/smallfeature.png"&gt;&lt;img src="man/figures/smallfeature.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rayshader has seven functions related to mapping:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ray_shade&lt;/code&gt; uses user specified light directions to calculate a
global shadow map for an elevation matrix. By default, this also
scales the light intensity at each point by the dot product of the
mean ray direction and the surface normal (also implemented in
function &lt;code&gt;lamb_shade&lt;/code&gt;, this can be turned off by setting
&lt;code&gt;lambert=FALSE&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sphere_shade&lt;/code&gt; maps an RGB texture to a hillshade by spherical
mapping. A texture can be generated with the &lt;code&gt;create_texture&lt;/code&gt;
function, or loaded from an image. &lt;code&gt;sphere_shade&lt;/code&gt; also includes 7
built-in palettes: “imhof1”, “imhof2”, “imhof3”,
imhof4“,”desert“,”bw“,”unicorn".&lt;/li&gt;
&lt;li&gt;&lt;code&gt;create_texture&lt;/code&gt; programmatically creates texture maps given five
colors: a highlight, a shadow, a left fill light, a right fill
light, and a center color for flat areas. The user can also
optionally specify the colors at the corners, but &lt;code&gt;create_texture&lt;/code&gt;
will interpolate those if they aren’t given.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ambient_shade&lt;/code&gt; creates an ambient occlusion shadow layer, darkening
areas that have less scattered light from the atmosphere. This
results in valleys being darker than flat areas and ridges.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lamb_shade&lt;/code&gt; uses a single user specified light direction to
calculate a local shadow map based on the dot product between the
surface normal and the light direction for an elevation matrix.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;add_shadow&lt;/code&gt; takes two of the shadow maps above and combines them,
scaling the second one (or, if the second is an RGB array, the
matrix) as specified by the user.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;add_overlay&lt;/code&gt; takes a 3 or 4-layer RGB/RGBA array and overlays it on
the current map. If the map includes transparency, this is taken
into account when overlaying the image. Otherwise, the user can
specify a single color that will be marked as completely
transparent, or set the full overlay as partly transparent.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Rayshader also has three functions to detect and add water to maps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;detect_water&lt;/code&gt; uses a flood-fill algorithm to detect bodies of water
of a user-specified minimum area.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;add_water&lt;/code&gt; uses the output of &lt;code&gt;detect_water&lt;/code&gt; to add a water color
to the map. The user can input their own color, or pass the name of
one of the pre-defined palettes from &lt;code&gt;sphere_shade&lt;/code&gt; to get a
matching hue.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;render_water&lt;/code&gt; adds a 3D tranparent water layer to 3D maps, after
the rgl device has already been created. This can either add to a
map that does not already have a water layer, or replace an existing
water layer on the map.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also included are two functions to add additional effects and
information to your 3D visualizations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;render_depth&lt;/code&gt; generates a depth of field effect for the 3D map. The
user can specify the focal distance, focal length, and f-stop of the
camera, as well as aperture shape and bokeh intensity. This either
plots the image to the local device, or saves it to a file if given
a filename.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;render_label&lt;/code&gt; adds a text label to the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; coordinate of
the map at a specified altitude &lt;code&gt;z&lt;/code&gt; (in units of the matrix). The
altitude can either be specified relative to the elevation at that
point (the default), or absolutely.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And four functions to display and save your visualizations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;plot_map&lt;/code&gt; Plots the current map. Accepts either a matrix or an
array.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;write_png&lt;/code&gt; Writes the current map to disk with a user-specified
filename.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plot_3d&lt;/code&gt; Creates a 3D map, given a texture and an elevation matrix.
You can customize the appearance of the map, as well as add a
user-defined water level.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;render_snapshot&lt;/code&gt; Saves an image of the current 3D view to disk (if
given a filename), or plots the 3D view to the current device
(useful for including images in R Markdown files).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;render_movie&lt;/code&gt; Creates and saves a mp4 file of the camera rotating
around the 3D scene by either using a built-in orbit or by using one
provided by the user.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, rayshader has a single function to generate 3D plots using
ggplot2 objects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;plot_gg&lt;/code&gt; Takes a ggplot2 object (or a list of two ggplot2 objects)
and uses the fill or color aesthetic to transform the plot into a 3D
surface. You can pass any of the arguments used to specify the
camera and the background/shadow colors in &lt;code&gt;plot_3d()&lt;/code&gt;, and
manipulate the displayed 3D plot using &lt;code&gt;render_camera()&lt;/code&gt; and
&lt;code&gt;render_depth()&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of these functions are designed to be used with the magrittr pipe
&lt;code&gt;%&amp;gt;%&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Rayshader can be used for two purposes: both creating hillshaded maps
and 3D data visualizations plots. First, let’s look at rayshader’s
mapping capabilities. For the latter, scroll below.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-mapping-with-rayshader" class="anchor" aria-hidden="true" href="#mapping-with-rayshader"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mapping with rayshader&lt;/h2&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;library(&lt;span class="pl-smi"&gt;rayshader&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;Here, I load a map with the raster package.&lt;/span&gt;
&lt;span class="pl-v"&gt;loadzip&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; tempfile() 
download.file(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://tylermw.com/data/dem_01.tif.zip&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;loadzip&lt;/span&gt;)
&lt;span class="pl-v"&gt;localtif&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-e"&gt;raster&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;raster(unzip(&lt;span class="pl-smi"&gt;loadzip&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dem_01.tif&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
unlink(&lt;span class="pl-smi"&gt;loadzip&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;And convert it to a matrix:&lt;/span&gt;
&lt;span class="pl-v"&gt;elmat&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; raster_to_matrix(&lt;span class="pl-smi"&gt;localtif&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;We use another one of rayshader's built-in textures:&lt;/span&gt;
&lt;span class="pl-smi"&gt;elmat&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  sphere_shade(&lt;span class="pl-v"&gt;texture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  plot_map()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_basicmapping-1.png"&gt;&lt;img src="man/figures/README_basicmapping-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;sphere_shade can shift the sun direction:&lt;/span&gt;
&lt;span class="pl-smi"&gt;elmat&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  sphere_shade(&lt;span class="pl-v"&gt;sunangle&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;45&lt;/span&gt;, &lt;span class="pl-v"&gt;texture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  plot_map()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_basicmapping-2.png"&gt;&lt;img src="man/figures/README_basicmapping-2.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;detect_water and add_water adds a water layer to the map:&lt;/span&gt;
&lt;span class="pl-smi"&gt;elmat&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  sphere_shade(&lt;span class="pl-v"&gt;texture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  add_water(detect_water(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;), &lt;span class="pl-v"&gt;color&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  plot_map()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_basicmapping-3.png"&gt;&lt;img src="man/figures/README_basicmapping-3.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;And we can add a raytraced layer from that sun direction as well:&lt;/span&gt;
&lt;span class="pl-smi"&gt;elmat&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  sphere_shade(&lt;span class="pl-v"&gt;texture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  add_water(detect_water(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;), &lt;span class="pl-v"&gt;color&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  add_shadow(ray_shade(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;)) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  plot_map()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_basicmapping-4.png"&gt;&lt;img src="man/figures/README_basicmapping-4.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;And here we add an ambient occlusion shadow layer, which models &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;lighting from atmospheric scattering:&lt;/span&gt;

&lt;span class="pl-smi"&gt;elmat&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  sphere_shade(&lt;span class="pl-v"&gt;texture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  add_water(detect_water(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;), &lt;span class="pl-v"&gt;color&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  add_shadow(ray_shade(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;)) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  add_shadow(ambient_shade(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;)) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  plot_map()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_basicmapping-5.png"&gt;&lt;img src="man/figures/README_basicmapping-5.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rayshader also supports 3D mapping by passing a texture map (either
external or one produced by rayshader) into the &lt;code&gt;plot_3d&lt;/code&gt; function.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;elmat&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  sphere_shade(&lt;span class="pl-v"&gt;texture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  add_water(detect_water(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;), &lt;span class="pl-v"&gt;color&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  add_shadow(ray_shade(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;), &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  add_shadow(ambient_shade(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;), &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  plot_3d(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-v"&gt;fov&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;theta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;135&lt;/span&gt;, &lt;span class="pl-v"&gt;zoom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.75&lt;/span&gt;, &lt;span class="pl-v"&gt;phi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;45&lt;/span&gt;, &lt;span class="pl-v"&gt;windowsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;800&lt;/span&gt;))
Sys.sleep(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)
render_snapshot(&lt;span class="pl-v"&gt;clear&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_three-d-1.png"&gt;&lt;img src="man/figures/README_three-d-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can also render using the built-in pathtracer, powered by
&lt;a href="https://www.rayrender.net" rel="nofollow"&gt;rayrender&lt;/a&gt;. Simply replace
&lt;code&gt;render_snapshot()&lt;/code&gt; with &lt;code&gt;render_highquality()&lt;/code&gt;. When
&lt;code&gt;render_highquality()&lt;/code&gt; is called, there’s no need to pre-compute the
shadows with any of the &lt;code&gt;_shade()&lt;/code&gt; functions, so we remove those:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;elmat&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  sphere_shade(&lt;span class="pl-v"&gt;texture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  add_water(detect_water(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;), &lt;span class="pl-v"&gt;color&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  plot_3d(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-v"&gt;fov&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;theta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;135&lt;/span&gt;, &lt;span class="pl-v"&gt;zoom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.75&lt;/span&gt;, &lt;span class="pl-v"&gt;phi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;45&lt;/span&gt;, &lt;span class="pl-v"&gt;windowsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;800&lt;/span&gt;))
Sys.sleep(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)
render_highquality()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_three-dhq-1.png"&gt;&lt;img src="man/figures/README_three-dhq-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can also easily add a water layer by setting &lt;code&gt;water = TRUE&lt;/code&gt; in
&lt;code&gt;plot_3d()&lt;/code&gt; (and setting &lt;code&gt;waterdepth&lt;/code&gt; if the water level is not 0), or
by using the function &lt;code&gt;render_water()&lt;/code&gt; after the 3D map has been
rendered. You can customize the appearance and transparancy of the water
layer via function arguments. Here’s an example using
bathymetric/topographic data of Monterey Bay, CA (included with
rayshader):&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-v"&gt;montshadow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ray_shade(&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-v"&gt;lambert&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FALSE&lt;/span&gt;)
&lt;span class="pl-v"&gt;montamb&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ambient_shade(&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;)
&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    sphere_shade(&lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-v"&gt;texture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;imhof1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    add_shadow(&lt;span class="pl-smi"&gt;montshadow&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    add_shadow(&lt;span class="pl-smi"&gt;montamb&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    plot_3d(&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-v"&gt;fov&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;theta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;45&lt;/span&gt;, &lt;span class="pl-v"&gt;phi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;45&lt;/span&gt;, 
            &lt;span class="pl-v"&gt;windowsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;800&lt;/span&gt;), &lt;span class="pl-v"&gt;zoom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.75&lt;/span&gt;,
            &lt;span class="pl-v"&gt;water&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;, &lt;span class="pl-v"&gt;waterdepth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;wateralpha&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-v"&gt;watercolor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lightblue&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-v"&gt;waterlinecolor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;white&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;waterlinealpha&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;)
Sys.sleep(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)
render_snapshot(&lt;span class="pl-v"&gt;clear&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_three-d-water-1.png"&gt;&lt;img src="man/figures/README_three-d-water-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Water is also supported in &lt;code&gt;render_highquality()&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    sphere_shade(&lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-v"&gt;texture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;imhof1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    plot_3d(&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-v"&gt;fov&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;70&lt;/span&gt;, &lt;span class="pl-v"&gt;theta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;45&lt;/span&gt;, &lt;span class="pl-v"&gt;phi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;, 
            &lt;span class="pl-v"&gt;windowsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;800&lt;/span&gt;), &lt;span class="pl-v"&gt;zoom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.6&lt;/span&gt;, 
            &lt;span class="pl-v"&gt;water&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;, &lt;span class="pl-v"&gt;waterdepth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;wateralpha&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-v"&gt;watercolor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lightblue&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-v"&gt;waterlinecolor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;white&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;waterlinealpha&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;)
Sys.sleep(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)
render_highquality(&lt;span class="pl-v"&gt;lightdirection&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;lightaltitude&lt;/span&gt;  &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-v"&gt;clamp_value&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, 
                   &lt;span class="pl-v"&gt;samples&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;200&lt;/span&gt;, &lt;span class="pl-v"&gt;clear&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/unnamed-chunk-2-1.png"&gt;&lt;img src="man/figures/unnamed-chunk-2-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rayshader also has map shapes other than rectangular included &lt;code&gt;c("hex", "circle")&lt;/code&gt;, and you can customize the map into any shape you want by
setting the areas you do not want to display to &lt;code&gt;NA&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;par(&lt;span class="pl-v"&gt;mfrow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;))
&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;% 
    sphere_shade(&lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-v"&gt;texture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;imhof1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;% 
    add_shadow(&lt;span class="pl-smi"&gt;montshadow&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    add_shadow(&lt;span class="pl-smi"&gt;montamb&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    plot_3d(&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-v"&gt;fov&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;theta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;45&lt;/span&gt;, &lt;span class="pl-v"&gt;phi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;45&lt;/span&gt;, &lt;span class="pl-v"&gt;windowsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;800&lt;/span&gt;), &lt;span class="pl-v"&gt;zoom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.6&lt;/span&gt;,
            &lt;span class="pl-v"&gt;water&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;, &lt;span class="pl-v"&gt;waterdepth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;wateralpha&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-v"&gt;watercolor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lightblue&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-v"&gt;waterlinecolor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;white&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;waterlinealpha&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-v"&gt;baseshape&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;circle&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

render_snapshot(&lt;span class="pl-v"&gt;clear&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)

&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;% 
    sphere_shade(&lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-v"&gt;texture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;imhof1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;% 
    add_shadow(&lt;span class="pl-smi"&gt;montshadow&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    add_shadow(&lt;span class="pl-smi"&gt;montamb&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    plot_3d(&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-v"&gt;fov&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;theta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;45&lt;/span&gt;, &lt;span class="pl-v"&gt;phi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;45&lt;/span&gt;, &lt;span class="pl-v"&gt;windowsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;800&lt;/span&gt;), &lt;span class="pl-v"&gt;zoom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.6&lt;/span&gt;,
            &lt;span class="pl-v"&gt;water&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;, &lt;span class="pl-v"&gt;waterdepth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;wateralpha&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-v"&gt;watercolor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lightblue&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-v"&gt;waterlinecolor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;white&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;waterlinealpha&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-v"&gt;baseshape&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hex&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

render_snapshot(&lt;span class="pl-v"&gt;clear&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_three-d-shapes-1.png"&gt;&lt;img src="man/figures/README_three-d-shapes-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Adding text labels is done with the &lt;code&gt;render_label()&lt;/code&gt; function, which
also allows you to customize the line type, color, and size along with
the font:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;% 
    sphere_shade(&lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-v"&gt;texture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;imhof1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;% 
    add_shadow(&lt;span class="pl-smi"&gt;montshadow&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    add_shadow(&lt;span class="pl-smi"&gt;montamb&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    plot_3d(&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-v"&gt;fov&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;theta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-v"&gt;phi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-v"&gt;windowsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;800&lt;/span&gt;), &lt;span class="pl-v"&gt;zoom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.6&lt;/span&gt;,
            &lt;span class="pl-v"&gt;water&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;, &lt;span class="pl-v"&gt;waterdepth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;waterlinecolor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;white&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;waterlinealpha&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;,
            &lt;span class="pl-v"&gt;wateralpha&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-v"&gt;watercolor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lightblue&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
render_label(&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt;, &lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;350&lt;/span&gt;, &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;240&lt;/span&gt;, &lt;span class="pl-v"&gt;z&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4000&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;,
             &lt;span class="pl-v"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Moss Landing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;textsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-v"&gt;linewidth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;)
render_label(&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt;, &lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;220&lt;/span&gt;, &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;330&lt;/span&gt;, &lt;span class="pl-v"&gt;z&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;6000&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;,
             &lt;span class="pl-v"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Santa Cruz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;textcolor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;darkred&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;linecolor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;darkred&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
             &lt;span class="pl-v"&gt;textsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-v"&gt;linewidth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;)
render_label(&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt;, &lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;300&lt;/span&gt;, &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;130&lt;/span&gt;, &lt;span class="pl-v"&gt;z&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4000&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;,
             &lt;span class="pl-v"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Monterey&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;dashed&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;, &lt;span class="pl-v"&gt;textsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-v"&gt;linewidth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;)
render_label(&lt;span class="pl-smi"&gt;montereybay&lt;/span&gt;, &lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;130&lt;/span&gt;, &lt;span class="pl-v"&gt;z&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;,
             &lt;span class="pl-v"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Monterey Canyon&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;relativez&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FALSE&lt;/span&gt;, &lt;span class="pl-v"&gt;textsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-v"&gt;linewidth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;)
Sys.sleep(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)
render_snapshot(&lt;span class="pl-v"&gt;clear&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_three-d-labels-1.png"&gt;&lt;img src="man/figures/README_three-d-labels-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can also apply a post-processing effect to the 3D maps to render
maps with depth of field with the &lt;code&gt;render_depth()&lt;/code&gt; function:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;elmat&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  sphere_shade(&lt;span class="pl-v"&gt;texture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  add_water(detect_water(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;), &lt;span class="pl-v"&gt;color&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;desert&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  add_shadow(ray_shade(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;), &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  add_shadow(ambient_shade(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;), &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  plot_3d(&lt;span class="pl-smi"&gt;elmat&lt;/span&gt;, &lt;span class="pl-v"&gt;zscale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-v"&gt;fov&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-v"&gt;theta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;225&lt;/span&gt;, &lt;span class="pl-v"&gt;phi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;25&lt;/span&gt;, &lt;span class="pl-v"&gt;windowsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;800&lt;/span&gt;), &lt;span class="pl-v"&gt;zoom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.3&lt;/span&gt;)
Sys.sleep(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)
render_depth(&lt;span class="pl-v"&gt;focus&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.6&lt;/span&gt;, &lt;span class="pl-v"&gt;focallength&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;200&lt;/span&gt;, &lt;span class="pl-v"&gt;clear&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_three-d-depth-1.png"&gt;&lt;img src="man/figures/README_three-d-depth-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-3d-plotting-with-rayshader-and-ggplot2" class="anchor" aria-hidden="true" href="#3d-plotting-with-rayshader-and-ggplot2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3D plotting with rayshader and ggplot2&lt;/h2&gt;
&lt;p&gt;Rayshader can also be used to make 3D plots out of ggplot2 objects using
the &lt;code&gt;plot_gg()&lt;/code&gt; function. Here, I turn a color density plot into a 3D
density plot. &lt;code&gt;plot_gg()&lt;/code&gt; detects that the user mapped the &lt;code&gt;fill&lt;/code&gt;
aesthetic to color and uses that information to project the figure into
3D.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;library(&lt;span class="pl-smi"&gt;ggplot2&lt;/span&gt;)
&lt;span class="pl-v"&gt;ggdiamonds&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ggplot(&lt;span class="pl-smi"&gt;diamonds&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  stat_density_2d(aes(&lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;depth&lt;/span&gt;, &lt;span class="pl-v"&gt;fill&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; stat(&lt;span class="pl-smi"&gt;nlevel&lt;/span&gt;)), 
                  &lt;span class="pl-v"&gt;geom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;polygon&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-v"&gt;bins&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-v"&gt;contour&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  facet_wrap(&lt;span class="pl-smi"&gt;clarity&lt;/span&gt;&lt;span class="pl-k"&gt;~&lt;/span&gt;.) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  scale_fill_viridis_c(&lt;span class="pl-v"&gt;option&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

par(&lt;span class="pl-v"&gt;mfrow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;))

plot_gg(&lt;span class="pl-smi"&gt;ggdiamonds&lt;/span&gt;, &lt;span class="pl-v"&gt;width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-v"&gt;height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-v"&gt;raytrace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FALSE&lt;/span&gt;, &lt;span class="pl-v"&gt;preview&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)
plot_gg(&lt;span class="pl-smi"&gt;ggdiamonds&lt;/span&gt;, &lt;span class="pl-v"&gt;width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-v"&gt;height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-v"&gt;multicore&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;, &lt;span class="pl-v"&gt;scale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;250&lt;/span&gt;, 
        &lt;span class="pl-v"&gt;zoom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.7&lt;/span&gt;, &lt;span class="pl-v"&gt;theta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-v"&gt;phi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-v"&gt;windowsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;800&lt;/span&gt;, &lt;span class="pl-c1"&gt;800&lt;/span&gt;))
Sys.sleep(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)
render_snapshot(&lt;span class="pl-v"&gt;clear&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_ggplots-1.png"&gt;&lt;img src="man/figures/README_ggplots-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rayshader will automatically ignore lines and other elements that should
not be mapped to 3D. Here’s a contour plot of the &lt;code&gt;volcano&lt;/code&gt; dataset.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;library(&lt;span class="pl-smi"&gt;reshape2&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;Contours and other lines will automatically be ignored. Here is the volcano dataset:&lt;/span&gt;

&lt;span class="pl-v"&gt;ggvolcano&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;volcano&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;% 
  melt() %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  ggplot() &lt;span class="pl-k"&gt;+&lt;/span&gt;
  geom_tile(aes(&lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Var1&lt;/span&gt;, &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Var2&lt;/span&gt;, &lt;span class="pl-v"&gt;fill&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  geom_contour(aes(&lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Var1&lt;/span&gt;, &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Var2&lt;/span&gt;, &lt;span class="pl-v"&gt;z&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;value&lt;/span&gt;), &lt;span class="pl-v"&gt;color&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;black&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  scale_x_continuous(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;X&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;expand&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  scale_y_continuous(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Y&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;expand&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  scale_fill_gradientn(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Z&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;colours&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; terrain.colors(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  coord_fixed()

par(&lt;span class="pl-v"&gt;mfrow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;))
plot_gg(&lt;span class="pl-smi"&gt;ggvolcano&lt;/span&gt;, &lt;span class="pl-v"&gt;width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-v"&gt;height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-v"&gt;raytrace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FALSE&lt;/span&gt;, &lt;span class="pl-v"&gt;preview&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 1861 rows containing missing values (geom_path).
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;plot_gg(&lt;span class="pl-smi"&gt;ggvolcano&lt;/span&gt;, &lt;span class="pl-v"&gt;multicore&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;, &lt;span class="pl-v"&gt;raytrace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;, &lt;span class="pl-v"&gt;width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-v"&gt;height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;, 
        &lt;span class="pl-v"&gt;scale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;300&lt;/span&gt;, &lt;span class="pl-v"&gt;windowsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1400&lt;/span&gt;, &lt;span class="pl-c1"&gt;866&lt;/span&gt;), &lt;span class="pl-v"&gt;zoom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.6&lt;/span&gt;, &lt;span class="pl-v"&gt;phi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-v"&gt;theta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 1861 rows containing missing values (geom_path).
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;Sys.sleep(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)

render_snapshot(&lt;span class="pl-v"&gt;clear&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_ggplots_2-1.png"&gt;&lt;img src="man/figures/README_ggplots_2-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rayshader also detects when the user passes the &lt;code&gt;color&lt;/code&gt; aesthetic, and
maps those values to 3D. If both &lt;code&gt;color&lt;/code&gt; and &lt;code&gt;fill&lt;/code&gt; are passed, however,
rayshader will default to &lt;code&gt;fill&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-v"&gt;mtplot&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ggplot(&lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; 
  geom_point(aes(&lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;mpg&lt;/span&gt;, &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;disp&lt;/span&gt;, &lt;span class="pl-v"&gt;color&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;cyl&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt; 
  scale_color_continuous(&lt;span class="pl-v"&gt;limits&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;))

par(&lt;span class="pl-v"&gt;mfrow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;))
plot_gg(&lt;span class="pl-smi"&gt;mtplot&lt;/span&gt;, &lt;span class="pl-v"&gt;width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3.5&lt;/span&gt;, &lt;span class="pl-v"&gt;raytrace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FALSE&lt;/span&gt;, &lt;span class="pl-v"&gt;preview&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)

plot_gg(&lt;span class="pl-smi"&gt;mtplot&lt;/span&gt;, &lt;span class="pl-v"&gt;width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3.5&lt;/span&gt;, &lt;span class="pl-v"&gt;multicore&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;, &lt;span class="pl-v"&gt;windowsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;800&lt;/span&gt;, &lt;span class="pl-c1"&gt;800&lt;/span&gt;), 
        &lt;span class="pl-v"&gt;zoom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.85&lt;/span&gt;, &lt;span class="pl-v"&gt;phi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;35&lt;/span&gt;, &lt;span class="pl-v"&gt;theta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-v"&gt;sunangle&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;225&lt;/span&gt;, &lt;span class="pl-v"&gt;soliddepth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;100&lt;/span&gt;)
Sys.sleep(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)
render_snapshot(&lt;span class="pl-v"&gt;clear&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_ggplots_3-1.png"&gt;&lt;img src="man/figures/README_ggplots_3-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Utilize combinations of line color and fill to create different effects.
Here is a terraced hexbin plot, created by mapping the line colors of
the hexagons to black.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-v"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;data.frame&lt;/span&gt;(&lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; rnorm(&lt;span class="pl-c1"&gt;20000&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.9&lt;/span&gt;), &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; rnorm(&lt;span class="pl-c1"&gt;20000&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.2&lt;/span&gt;))
&lt;span class="pl-v"&gt;b&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;data.frame&lt;/span&gt;(&lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; rnorm(&lt;span class="pl-c1"&gt;20000&lt;/span&gt;, &lt;span class="pl-c1"&gt;14.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.9&lt;/span&gt;), &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; rnorm(&lt;span class="pl-c1"&gt;20000&lt;/span&gt;, &lt;span class="pl-c1"&gt;14.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.9&lt;/span&gt;))
&lt;span class="pl-v"&gt;c&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;data.frame&lt;/span&gt;(&lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; rnorm(&lt;span class="pl-c1"&gt;20000&lt;/span&gt;, &lt;span class="pl-c1"&gt;9.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.9&lt;/span&gt;), &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; rnorm(&lt;span class="pl-c1"&gt;20000&lt;/span&gt;, &lt;span class="pl-c1"&gt;15.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.9&lt;/span&gt;))
&lt;span class="pl-v"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; rbind(&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;, &lt;span class="pl-smi"&gt;c&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;Lines&lt;/span&gt;
&lt;span class="pl-v"&gt;pp&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ggplot(&lt;span class="pl-smi"&gt;data&lt;/span&gt;, aes(&lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;, &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;y&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  geom_hex(&lt;span class="pl-v"&gt;bins&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-v"&gt;size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-v"&gt;color&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;black&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  scale_fill_viridis_c(&lt;span class="pl-v"&gt;option&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

par(&lt;span class="pl-v"&gt;mfrow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;))
plot_gg(&lt;span class="pl-smi"&gt;pp&lt;/span&gt;, &lt;span class="pl-v"&gt;width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-v"&gt;height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-v"&gt;scale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;300&lt;/span&gt;, &lt;span class="pl-v"&gt;raytrace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FALSE&lt;/span&gt;, &lt;span class="pl-v"&gt;preview&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)
plot_gg(&lt;span class="pl-smi"&gt;pp&lt;/span&gt;, &lt;span class="pl-v"&gt;width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-v"&gt;height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-v"&gt;scale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;300&lt;/span&gt;, &lt;span class="pl-v"&gt;multicore&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;, &lt;span class="pl-v"&gt;windowsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;800&lt;/span&gt;))
render_camera(&lt;span class="pl-v"&gt;fov&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;70&lt;/span&gt;, &lt;span class="pl-v"&gt;zoom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-v"&gt;theta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;130&lt;/span&gt;, &lt;span class="pl-v"&gt;phi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;35&lt;/span&gt;)
Sys.sleep(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)
render_snapshot(&lt;span class="pl-v"&gt;clear&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_ggplots_4-1.png"&gt;&lt;img src="man/figures/README_ggplots_4-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can also use the &lt;code&gt;render_depth()&lt;/code&gt; function to direct the viewer’s
focus to a important areas in the figure.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;par(&lt;span class="pl-v"&gt;mfrow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;))
plot_gg(&lt;span class="pl-smi"&gt;pp&lt;/span&gt;, &lt;span class="pl-v"&gt;width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-v"&gt;height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-v"&gt;scale&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;300&lt;/span&gt;, &lt;span class="pl-v"&gt;multicore&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;, &lt;span class="pl-v"&gt;windowsize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;1200&lt;/span&gt;, &lt;span class="pl-c1"&gt;960&lt;/span&gt;),
        &lt;span class="pl-v"&gt;fov&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;70&lt;/span&gt;, &lt;span class="pl-v"&gt;zoom&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.4&lt;/span&gt;, &lt;span class="pl-v"&gt;theta&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;330&lt;/span&gt;, &lt;span class="pl-v"&gt;phi&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;40&lt;/span&gt;)
Sys.sleep(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)
render_depth(&lt;span class="pl-v"&gt;focus&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.68&lt;/span&gt;, &lt;span class="pl-v"&gt;focallength&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;200&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README_ggplots_5-1.png"&gt;&lt;img src="man/figures/README_ggplots_5-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>tylermorganwall</author><guid isPermaLink="false">https://github.com/tylermorganwall/rayshader</guid><pubDate>Wed, 20 Nov 2019 00:04:00 GMT</pubDate></item><item><title>jennybc/gapminder #5 in R, This week</title><link>https://github.com/jennybc/gapminder</link><description>&lt;p&gt;&lt;i&gt;Excerpt from the Gapminder data, as an R data package and in plain text delimited form&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#gapminder"&gt;gapminder&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#install-and-test-drive"&gt;Install and test drive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#color-schemes-for-countries-and-continents"&gt;Color schemes for countries and continents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-to-use-color-scheme-in-ggplot2"&gt;How to use color scheme in &lt;code&gt;ggplot2&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-to-use-color-scheme-in-base-graphics"&gt;How to use color scheme in base graphics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#iso-3166-1-country-codes"&gt;ISO 3166-1 country codes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-is-gapminder-good-for"&gt;What is &lt;code&gt;gapminder&lt;/code&gt; good for?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-this-sausage-was-made"&gt;How this sausage was made&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#plain-text-delimited-files"&gt;Plain text delimited files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#citation"&gt;Citation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://doi.org/10.5281/zenodo.594018" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c0fb03aa5d91b8534bfaf3d32dc93d242e195449/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e3539343031382e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/DOI/10.5281/zenodo.594018.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cran.r-project.org/package=gapminder" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d8c4a0781e32fdb5baf456279478f609c807dd54/687474703a2f2f7777772e722d706b672e6f72672f6261646765732f76657273696f6e2f6761706d696e646572" alt="CRAN version" data-canonical-src="http://www.r-pkg.org/badges/version/gapminder" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/88860352b3e2674b76939d30e1049189b6dba8b5/687474703a2f2f6372616e6c6f67732e722d706b672e6f72672f6261646765732f6772616e642d746f74616c2f6761706d696e646572"&gt;&lt;img src="https://camo.githubusercontent.com/88860352b3e2674b76939d30e1049189b6dba8b5/687474703a2f2f6372616e6c6f67732e722d706b672e6f72672f6261646765732f6772616e642d746f74616c2f6761706d696e646572" alt="" data-canonical-src="http://cranlogs.r-pkg.org/badges/grand-total/gapminder" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-gapminder" class="anchor" aria-hidden="true" href="#gapminder"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;gapminder&lt;/h1&gt;
&lt;p&gt;Excerpt from the &lt;a href="http://www.gapminder.org/data/" rel="nofollow"&gt;Gapminder&lt;/a&gt; data. The
main object in this package is the &lt;code&gt;gapminder&lt;/code&gt; data frame or “tibble”.
There are other goodies, such as the data in tab delimited form, a
larger unfiltered dataset, premade color schemes for the countries and
continents, and ISO 3166-1 country codes.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;gapminder&lt;/code&gt; data frames include six variables, (&lt;a href="http://www.gapminder.org/data/documentation/" rel="nofollow"&gt;Gapminder.org
documentation page&lt;/a&gt;):&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;variable&lt;/th&gt;
&lt;th align="left"&gt;meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;country&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;continent&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;year&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;lifeExp&lt;/td&gt;
&lt;td align="left"&gt;life expectancy at birth&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;pop&lt;/td&gt;
&lt;td align="left"&gt;total population&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;gdpPercap&lt;/td&gt;
&lt;td align="left"&gt;per-capita GDP&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Per-capita GDP (Gross domestic product) is given in units of
&lt;a href="http://en.wikipedia.org/wiki/Geary%E2%80%93Khamis_dollar" rel="nofollow"&gt;international
dollars&lt;/a&gt;, “a
hypothetical unit of currency that has the same purchasing power parity
that the U.S. dollar had in the United States at a given point in time”
– 2005, in this case.&lt;/p&gt;
&lt;p&gt;Package contains two main data frames or tibbles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gapminder&lt;/code&gt;: 12 rows for each country (1952, 1955, …, 2007). It’s a
subset of …&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gapminder_unfiltered&lt;/code&gt;: more lightly filtered and therefore about
twice as many rows.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note: this package exists for the purpose of teaching and making code
examples. It is an excerpt of data found in specific spreadsheets on
Gapminder.org circa 2010. It is not a definitive source of socioeconomic
data and I don’t update it. Use other data sources if it’s important to
have the current best estimate of these statistics.&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-install-and-test-drive" class="anchor" aria-hidden="true" href="#install-and-test-drive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install and test drive&lt;/h3&gt;
&lt;p&gt;Install &lt;code&gt;gapminder&lt;/code&gt; from CRAN:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;install.packages(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gapminder&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or you can install &lt;code&gt;gapminder&lt;/code&gt; from GitHub:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-e"&gt;devtools&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;install_github(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jennybc/gapminder&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Load it and test drive with some data aggregation and plotting:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;library(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gapminder&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

aggregate(&lt;span class="pl-smi"&gt;lifeExp&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt; &lt;span class="pl-smi"&gt;continent&lt;/span&gt;, &lt;span class="pl-smi"&gt;gapminder&lt;/span&gt;, &lt;span class="pl-smi"&gt;median&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;   continent lifeExp&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 1    Africa 47.7920&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 2  Americas 67.0480&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 3      Asia 61.7915&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 4    Europe 72.2410&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 5   Oceania 73.6650&lt;/span&gt;

library(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dplyr&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-smi"&gt;gapminder&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    filter(&lt;span class="pl-smi"&gt;year&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;2007&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    group_by(&lt;span class="pl-smi"&gt;continent&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    summarise(&lt;span class="pl-v"&gt;lifeExp&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; median(&lt;span class="pl-smi"&gt;lifeExp&lt;/span&gt;))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; # A tibble: 5 x 2&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;   continent lifeExp&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;   &amp;lt;fct&amp;gt;       &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 1 Africa       52.9&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 2 Americas     72.9&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 3 Asia         72.4&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 4 Europe       78.6&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 5 Oceania      80.7&lt;/span&gt;
    
library(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ggplot2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
ggplot(&lt;span class="pl-smi"&gt;gapminder&lt;/span&gt;, aes(&lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;continent&lt;/span&gt;, &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;lifeExp&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  geom_boxplot(&lt;span class="pl-v"&gt;outlier.colour&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hotpink&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  geom_jitter(&lt;span class="pl-v"&gt;position&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; position_jitter(&lt;span class="pl-v"&gt;width&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.1&lt;/span&gt;, &lt;span class="pl-v"&gt;height&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;), &lt;span class="pl-v"&gt;alpha&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README-test-drive-1.png"&gt;&lt;img src="man/figures/README-test-drive-1.png" width="100%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-color-schemes-for-countries-and-continents" class="anchor" aria-hidden="true" href="#color-schemes-for-countries-and-continents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Color schemes for countries and continents&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;country_colors&lt;/code&gt; and &lt;code&gt;continent_colors&lt;/code&gt; are provided as character
vectors where elements are hex colors and the names are countries or
continents.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;head(&lt;span class="pl-smi"&gt;country_colors&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;          Nigeria            Egypt         Ethiopia Congo, Dem. Rep. &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;        "#7F3B08"        "#833D07"        "#873F07"        "#8B4107"&lt;/span&gt;
head(&lt;span class="pl-smi"&gt;continent_colors&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;    Africa  Americas      Asia    Europe   Oceania &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; "#7F3B08" "#A50026" "#40004B" "#276419" "#313695"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/gapminder-color-scheme-ggplot2.png"&gt;&lt;img src="man/figures/gapminder-color-scheme-ggplot2.png" width="100%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The country scheme is available in this repo as&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="data-raw/gapminder-color-scheme-ggplot2.png"&gt;PNG&lt;/a&gt; or
&lt;a href="data-raw/gapminder-color-scheme-base.pdf"&gt;PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="inst/extdata/continent-colors.tsv"&gt;&lt;code&gt;continent-colors.tsv&lt;/code&gt;&lt;/a&gt; and
&lt;a href="inst/extdata/country-colors.tsv"&gt;&lt;code&gt;country-colors.tsv&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-how-to-use-color-scheme-in-ggplot2" class="anchor" aria-hidden="true" href="#how-to-use-color-scheme-in-ggplot2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to use color scheme in &lt;code&gt;ggplot2&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Provide &lt;code&gt;country_colors&lt;/code&gt; to &lt;code&gt;scale_color_manual()&lt;/code&gt; like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;...&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; scale_color_manual(&lt;span class="pl-v"&gt;values&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;country_colors&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;library(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ggplot2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

ggplot(subset(&lt;span class="pl-smi"&gt;gapminder&lt;/span&gt;, &lt;span class="pl-smi"&gt;continent&lt;/span&gt; &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Oceania&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
       aes(&lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;year&lt;/span&gt;, &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;lifeExp&lt;/span&gt;, &lt;span class="pl-v"&gt;group&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;country&lt;/span&gt;, &lt;span class="pl-v"&gt;color&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;country&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  geom_line(&lt;span class="pl-v"&gt;lwd&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-v"&gt;show.legend&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FALSE&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; facet_wrap(&lt;span class="pl-k"&gt;~&lt;/span&gt; &lt;span class="pl-smi"&gt;continent&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  scale_color_manual(&lt;span class="pl-v"&gt;values&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;country_colors&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  theme_bw() &lt;span class="pl-k"&gt;+&lt;/span&gt; theme(&lt;span class="pl-v"&gt;strip.text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; element_text(&lt;span class="pl-v"&gt;size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; rel(&lt;span class="pl-c1"&gt;1.1&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README-demo-country-colors-ggplot2-1.png"&gt;&lt;img src="man/figures/README-demo-country-colors-ggplot2-1.png" width="100%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-how-to-use-color-scheme-in-base-graphics" class="anchor" aria-hidden="true" href="#how-to-use-color-scheme-in-base-graphics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to use color scheme in base graphics&lt;/h3&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; for convenience, integrate the country colors into the data.frame&lt;/span&gt;
&lt;span class="pl-smi"&gt;gap_with_colors&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt;
  &lt;span class="pl-k"&gt;data.frame&lt;/span&gt;(&lt;span class="pl-smi"&gt;gapminder&lt;/span&gt;,
             &lt;span class="pl-v"&gt;cc&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; I(&lt;span class="pl-smi"&gt;country_colors&lt;/span&gt;[match(&lt;span class="pl-smi"&gt;gapminder&lt;/span&gt;&lt;span class="pl-k"&gt;$&lt;/span&gt;&lt;span class="pl-smi"&gt;country&lt;/span&gt;,
                                         names(&lt;span class="pl-smi"&gt;country_colors&lt;/span&gt;))]))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; bubble plot, focus just on Africa and Europe in 2007&lt;/span&gt;
&lt;span class="pl-smi"&gt;keepers&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; with(&lt;span class="pl-smi"&gt;gap_with_colors&lt;/span&gt;,
                &lt;span class="pl-smi"&gt;continent&lt;/span&gt; &lt;span class="pl-k"&gt;%in%&lt;/span&gt; c(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Africa&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Europe&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt; &lt;span class="pl-smi"&gt;year&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;2007&lt;/span&gt;)
plot(&lt;span class="pl-smi"&gt;lifeExp&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt; &lt;span class="pl-smi"&gt;gdpPercap&lt;/span&gt;, &lt;span class="pl-smi"&gt;gap_with_colors&lt;/span&gt;,
     &lt;span class="pl-v"&gt;subset&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;keepers&lt;/span&gt;, &lt;span class="pl-v"&gt;log&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;pch&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;21&lt;/span&gt;,
     &lt;span class="pl-v"&gt;cex&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; sqrt(&lt;span class="pl-smi"&gt;gap_with_colors&lt;/span&gt;&lt;span class="pl-k"&gt;$&lt;/span&gt;&lt;span class="pl-smi"&gt;pop&lt;/span&gt;[&lt;span class="pl-smi"&gt;keepers&lt;/span&gt;]&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;pi&lt;/span&gt;)&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;1500&lt;/span&gt;,
     &lt;span class="pl-v"&gt;bg&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;gap_with_colors&lt;/span&gt;&lt;span class="pl-k"&gt;$&lt;/span&gt;&lt;span class="pl-smi"&gt;cc&lt;/span&gt;[&lt;span class="pl-smi"&gt;keepers&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README-demo-country-colors-base-1.png"&gt;&lt;img src="man/figures/README-demo-country-colors-base-1.png" width="100%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-iso-3166-1-country-codes" class="anchor" aria-hidden="true" href="#iso-3166-1-country-codes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ISO 3166-1 country codes&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;country_codes&lt;/code&gt; data frame provides ISO 3166-1 country codes for all
the countries in the &lt;code&gt;gapminder&lt;/code&gt; and &lt;code&gt;gapminder_unfiltered&lt;/code&gt; data frames.
This can be used to practice joining or merging.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;library(&lt;span class="pl-smi"&gt;dplyr&lt;/span&gt;)

&lt;span class="pl-smi"&gt;gapminder&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
 filter(&lt;span class="pl-smi"&gt;year&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;2007&lt;/span&gt;, &lt;span class="pl-smi"&gt;country&lt;/span&gt; &lt;span class="pl-k"&gt;%in%&lt;/span&gt; c(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Kenya&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Peru&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Syria&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
 select(&lt;span class="pl-smi"&gt;country&lt;/span&gt;, &lt;span class="pl-smi"&gt;continent&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;% 
 left_join(&lt;span class="pl-smi"&gt;country_codes&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; Warning: Column `country` joining factor and character vector, coercing&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; into character vector&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; # A tibble: 3 x 4&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;   country continent iso_alpha iso_num&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;   &amp;lt;chr&amp;gt;   &amp;lt;fct&amp;gt;     &amp;lt;chr&amp;gt;       &amp;lt;int&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 1 Kenya   Africa    KEN           404&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 2 Peru    Americas  PER           604&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 3 Syria   Asia      SYR           760&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-what-is-gapminder-good-for" class="anchor" aria-hidden="true" href="#what-is-gapminder-good-for"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is &lt;code&gt;gapminder&lt;/code&gt; good for?&lt;/h3&gt;
&lt;p&gt;I have used this excerpt in &lt;a href="http://stat545-ubc.github.io" rel="nofollow"&gt;STAT 545&lt;/a&gt;
since 2008 and, more recently, in &lt;a href="http://jennybc.github.io/2014-05-12-ubc/" rel="nofollow"&gt;R-flavored Software Carpentry
Workshops&lt;/a&gt; and a &lt;a href="https://github.com/jennybc/ggplot2-tutorial"&gt;&lt;code&gt;ggplot2&lt;/code&gt;
tutorial&lt;/a&gt;. &lt;code&gt;gapminder&lt;/code&gt; is
very useful for teaching novices data wrangling and visualization in R.&lt;/p&gt;
&lt;p&gt;Description:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1704 observations; fills a size niche between &lt;code&gt;iris&lt;/code&gt; (150 rows) and
the likes of &lt;code&gt;diamonds&lt;/code&gt; (54K rows)&lt;/li&gt;
&lt;li&gt;6 variables
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;country&lt;/code&gt; a factor with 142 levels&lt;/li&gt;
&lt;li&gt;&lt;code&gt;continent&lt;/code&gt;, a factor with 5 levels&lt;/li&gt;
&lt;li&gt;&lt;code&gt;year&lt;/code&gt;: going from 1952 to 2007 in increments of 5 years&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pop&lt;/code&gt;: population&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gdpPercap&lt;/code&gt;: GDP per capita&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lifeExp&lt;/code&gt;: life expectancy&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are 12 rows for each country in &lt;code&gt;gapminder&lt;/code&gt;, i.e. complete data
for 1952, 1955, …, 2007.&lt;/p&gt;
&lt;p&gt;The two factors provide opportunities to demonstrate factor handling, in
aggregation and visualization, for factors with very few and very many
levels.&lt;/p&gt;
&lt;p&gt;The four quantitative variables are generally quite correlated with each
other and these trends have interesting relationships to &lt;code&gt;country&lt;/code&gt; and
&lt;code&gt;continent&lt;/code&gt;, so you will find that simple plots and aggregations tell a
reasonable story and are not completely boring.&lt;/p&gt;
&lt;p&gt;Visualization of the temporal trends in life expectancy, by country, is
particularly rewarding, since there are several countries with sharp
drops due to political upheaval. This then motivates more systematic
investigations via data aggregation to proactively identify all
countries whose data exhibits certain properties.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-how-this-sausage-was-made" class="anchor" aria-hidden="true" href="#how-this-sausage-was-made"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How this sausage was made&lt;/h3&gt;
&lt;blockquote lang="en"&gt;
&lt;p&gt;
&lt;/p&gt;&lt;p&gt;Data cleaning code cannot be clean. It's a sort of sin eater.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;— Stat Fact (@StatFact)
&lt;a href="https://twitter.com/StatFact/status/492753200190341120" rel="nofollow"&gt;July
25, 2014&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The &lt;a href="data-raw/"&gt;&lt;code&gt;data-raw&lt;/code&gt;&lt;/a&gt; directory contains the Excel spreadsheets
downloaded from &lt;a href="http://www.gapminder.org" rel="nofollow"&gt;Gapminder&lt;/a&gt; in 2008 and 2009
and all the scripts necessary to create everything in this package, in
raw and “compiled notebook” form.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-plain-text-delimited-files" class="anchor" aria-hidden="true" href="#plain-text-delimited-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plain text delimited files&lt;/h3&gt;
&lt;p&gt;If you want to practice importing from file, various tab delimited files
are included:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="inst/extdata/gapminder.tsv"&gt;&lt;code&gt;gapminder.tsv&lt;/code&gt;&lt;/a&gt;: the same dataset
available via &lt;code&gt;library("gapminder"); gapminder&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="inst/extdata/gapminder-unfiltered.tsv"&gt;&lt;code&gt;gapminder-unfiltered.tsv&lt;/code&gt;&lt;/a&gt;:
the larger dataset available via &lt;code&gt;library("gapminder"); gapminder_unfiltered&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="inst/extdata/continent-colors.tsv"&gt;&lt;code&gt;continent-colors.tsv&lt;/code&gt;&lt;/a&gt; and
&lt;a href="inst/extdata/country-colors.tsv"&gt;&lt;code&gt;country-colors.tsv&lt;/code&gt;&lt;/a&gt;: color
schemes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here in the source, these delimited files can be found:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;in the &lt;a href="inst/extdata/"&gt;&lt;code&gt;inst/extdata/&lt;/code&gt;&lt;/a&gt; sub-directory&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once you’ve installed the &lt;code&gt;gapminder&lt;/code&gt; package they can be found locally
and used like
so:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;gap_tsv&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; system.file(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;extdata&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gapminder.tsv&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;package&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gapminder&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-smi"&gt;gap_tsv&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; read.delim(&lt;span class="pl-smi"&gt;gap_tsv&lt;/span&gt;)
str(&lt;span class="pl-smi"&gt;gap_tsv&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 'data.frame':    1704 obs. of  6 variables:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  $ country  : Factor w/ 142 levels "Afghanistan",..: 1 1 1 1 1 1 1 1 1 1 ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  $ continent: Factor w/ 5 levels "Africa","Americas",..: 3 3 3 3 3 3 3 3 3 3 ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  $ year     : int  1952 1957 1962 1967 1972 1977 1982 1987 1992 1997 ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  $ lifeExp  : num  28.8 30.3 32 34 36.1 ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  $ pop      : int  8425333 9240934 10267083 11537966 13079460 14880372 12881816 13867957 16317921 22227415 ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  $ gdpPercap: num  779 821 853 836 740 ...&lt;/span&gt;
&lt;span class="pl-smi"&gt;gap_tsv&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;% &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Bhutan did not make the cut because data for only 8 years :(&lt;/span&gt;
  filter(&lt;span class="pl-smi"&gt;country&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bhutan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; [1] country   continent year      lifeExp   pop       gdpPercap&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; &amp;lt;0 rows&amp;gt; (or 0-length row.names)&lt;/span&gt;

&lt;span class="pl-smi"&gt;gap_bigger_tsv&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt;
  system.file(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;extdata&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gapminder-unfiltered.tsv&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;package&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gapminder&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-smi"&gt;gap_bigger_tsv&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; read.delim(&lt;span class="pl-smi"&gt;gap_bigger_tsv&lt;/span&gt;)
str(&lt;span class="pl-smi"&gt;gap_bigger_tsv&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 'data.frame':    3313 obs. of  6 variables:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  $ country  : Factor w/ 187 levels "Afghanistan",..: 1 1 1 1 1 1 1 1 1 1 ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  $ continent: Factor w/ 6 levels "Africa","Americas",..: 3 3 3 3 3 3 3 3 3 3 ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  $ year     : int  1952 1957 1962 1967 1972 1977 1982 1987 1992 1997 ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  $ lifeExp  : num  28.8 30.3 32 34 36.1 ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  $ pop      : int  8425333 9240934 10267083 11537966 13079460 14880372 12881816 13867957 16317921 22227415 ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  $ gdpPercap: num  779 821 853 836 740 ...&lt;/span&gt;
&lt;span class="pl-smi"&gt;gap_bigger_tsv&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;% &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Bhutan IS here though! :)&lt;/span&gt;
  filter(&lt;span class="pl-smi"&gt;country&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bhutan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;   country continent year lifeExp     pop gdpPercap&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 1  Bhutan      Asia 1972  41.837 1087991  807.6226&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 2  Bhutan      Asia 1977  44.708 1205659  816.3102&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 3  Bhutan      Asia 1982  47.872 1333704  946.8130&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 4  Bhutan      Asia 1987  50.717 1490857 1494.2901&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 5  Bhutan      Asia 1992  54.471 1673428 1904.1795&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 6  Bhutan      Asia 1997  58.929 1876236 2561.5077&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 7  Bhutan      Asia 2002  63.458 2094176 3256.0193&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 8  Bhutan      Asia 2007  65.625 2327849 4744.6400&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Gapminder’s data is released under the Creative Commons Attribution 3.0
Unported license. See their &lt;a href="https://docs.google.com/document/pub?id=1POd-pBMc5vDXAmxrpGjPLaCSDSWuxX6FLQgq5DhlUhM" rel="nofollow"&gt;terms of
use&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citation&lt;/h2&gt;
&lt;p&gt;Run this command to get info on how to cite this package. If you’ve
installed gapminder from CRAN, the year will be populated and populated
correctly (unlike below).&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;citation(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gapminder&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; To cite package 'gapminder' in publications use:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;   Jennifer Bryan (NA). gapminder: Data from Gapminder.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;   https://github.com/jennybc/gapminder,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;   http://www.gapminder.org/data/,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;   https://doi.org/10.5281/zenodo.594018.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; A BibTeX entry for LaTeX users is&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;   @Manual{,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;     title = {gapminder: Data from Gapminder},&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;     author = {Jennifer Bryan},&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;     note = {https://github.com/jennybc/gapminder,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; http://www.gapminder.org/data/,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; https://doi.org/10.5281/zenodo.594018},&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;   }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jennybc</author><guid isPermaLink="false">https://github.com/jennybc/gapminder</guid><pubDate>Wed, 20 Nov 2019 00:05:00 GMT</pubDate></item></channel></rss>