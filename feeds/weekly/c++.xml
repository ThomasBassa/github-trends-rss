<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: C++, This week</title><link>https://github.com/trending/c++?since=weekly</link><description>The top repositories on GitHub for c++, measured weekly</description><pubDate>Wed, 04 Dec 2019 01:05:14 GMT</pubDate><lastBuildDate>Wed, 04 Dec 2019 01:05:14 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>fireice-uk/xmr-stak #1 in C++, This week</title><link>https://github.com/fireice-uk/xmr-stak</link><description>&lt;p&gt;&lt;i&gt;Free Monero RandomX Miner and unified CryptoNight miner&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="doc/README.md"&gt;&lt;img src="doc/_img/gpu.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="#select_coin"&gt;&lt;img src="doc/_img/cpu.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p id="user-content-select_coin"&gt;
    &lt;/p&gt;&lt;table&gt;
    &lt;tbody&gt;&lt;tr&gt;
        &lt;td align="center"&gt;&lt;a href="https://github.com/xmrig/xmrig"&gt;&lt;img src="doc/_img/xmrig.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td align="center"&gt;&lt;a href="https://ragerx.lol" rel="nofollow"&gt;&lt;img src="doc/_img/ragerx.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
        &lt;td align="center"&gt;&lt;a href="https://github.com/fireice-uk/xmr-stak/tree/xmr-stak-rx/doc/README.md"&gt;&lt;img src="doc/_img/rx.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>fireice-uk</author><guid isPermaLink="false">https://github.com/fireice-uk/xmr-stak</guid><pubDate>Wed, 04 Dec 2019 00:01:00 GMT</pubDate></item><item><title>xmrig/xmrig #2 in C++, This week</title><link>https://github.com/xmrig/xmrig</link><description>&lt;p&gt;&lt;i&gt;RandomX, CryptoNight and Argon2 CPU miner&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-xmrig" class="anchor" aria-hidden="true" href="#xmrig"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;XMRig&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt; &lt;a href="https://github.com/xmrig/xmrig/issues/1204"&gt;Monero will change PoW algorithm to RandomX on November 30.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/xmrig/xmrig/releases"&gt;&lt;img src="https://camo.githubusercontent.com/cba2a049186e5c8d15393b74ca2246ceb5adbcea/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f786d7269672f786d7269672f746f74616c2e737667" alt="Github All Releases" data-canonical-src="https://img.shields.io/github/downloads/xmrig/xmrig/total.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/xmrig/xmrig/releases"&gt;&lt;img src="https://camo.githubusercontent.com/4f5d7ec092633db1a996ed25b4e253b83b57a670/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f786d7269672f786d7269672f616c6c2e737667" alt="GitHub release" data-canonical-src="https://img.shields.io/github/release/xmrig/xmrig/all.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/xmrig/xmrig/releases"&gt;&lt;img src="https://camo.githubusercontent.com/cf58fa6773dd99d78ae3f2abcc8169f1ed89caf3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652d7072652f786d7269672f786d7269672e737667" alt="GitHub Release Date" data-canonical-src="https://img.shields.io/github/release-date-pre/xmrig/xmrig.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/xmrig/xmrig/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/4f91242674e6b58bb6c3be0cc7ae3e6f7e9e1459/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f786d7269672f786d7269672e737667" alt="GitHub license" data-canonical-src="https://img.shields.io/github/license/xmrig/xmrig.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/xmrig/xmrig/stargazers"&gt;&lt;img src="https://camo.githubusercontent.com/7c59ed3363d3ba5fc5f5075bbc55638661e4fac0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f786d7269672f786d7269672e737667" alt="GitHub stars" data-canonical-src="https://img.shields.io/github/stars/xmrig/xmrig.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/xmrig/xmrig/network"&gt;&lt;img src="https://camo.githubusercontent.com/9b005f2fc190beccdfce44b7ff60d228e96b9fd5/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f786d7269672f786d7269672e737667" alt="GitHub forks" data-canonical-src="https://img.shields.io/github/forks/xmrig/xmrig.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;XMRig High performance, open source, cross platform RandomX, CryptoNight and Argon2 CPU/GPU miner, with official support for Windows.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-mining-backends" class="anchor" aria-hidden="true" href="#mining-backends"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mining backends&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CPU&lt;/strong&gt; (x64/x86/ARM)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OpenCL&lt;/strong&gt; for AMD GPUs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CUDA&lt;/strong&gt; for NVIDIA GPUs via external &lt;a href="https://github.com/xmrig/xmrig-cuda"&gt;CUDA plugin&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/screenshot.png"&gt;&lt;img src="doc/screenshot.png" width="808" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-download" class="anchor" aria-hidden="true" href="#download"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Binary releases: &lt;a href="https://github.com/xmrig/xmrig/releases"&gt;https://github.com/xmrig/xmrig/releases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Git tree: &lt;a href="https://github.com/xmrig/xmrig.git"&gt;https://github.com/xmrig/xmrig.git&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Clone with &lt;code&gt;git clone https://github.com/xmrig/xmrig.git&lt;/code&gt; &lt;g-emoji class="g-emoji" alias="hammer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f528.png"&gt;üî®&lt;/g-emoji&gt; &lt;a href="https://github.com/xmrig/xmrig/wiki/Build"&gt;Build instructions&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;The preferred way to configure the miner is the &lt;a href="src/config.json"&gt;JSON config file&lt;/a&gt; as it is more flexible and human friendly. The command line interface does not cover all features, such as mining profiles for different algorithms. Important options can be changed during runtime without miner restart by editing the config file or executing API calls.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://xmrig.com/wizard" rel="nofollow"&gt;xmrig.com/wizard&lt;/a&gt;&lt;/strong&gt; helps you create initial configuration for the miner.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://workers.xmrig.info" rel="nofollow"&gt;workers.xmrig.info&lt;/a&gt;&lt;/strong&gt; helps manage your miners via HTTP API.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-command-line-options" class="anchor" aria-hidden="true" href="#command-line-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command line options&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Network:
  -o, --url=URL                 URL of mining server
  -a, --algo=ALGO               mining algorithm https://xmrig.com/docs/algorithms
      --coin=COIN               specify coin instead of algorithm
  -u, --user=USERNAME           username for mining server
  -p, --pass=PASSWORD           password for mining server
  -O, --userpass=U:P            username:password pair for mining server
  -k, --keepalive               send keepalived packet for prevent timeout (needs pool support)
      --nicehash                enable nicehash.com support
      --rig-id=ID               rig identifier for pool-side statistics (needs pool support)
      --tls                     enable SSL/TLS support (needs pool support)
      --tls-fingerprint=HEX     pool TLS certificate fingerprint for strict certificate pinning
      --daemon                  use daemon RPC instead of pool for solo mining
      --daemon-poll-interval=N  daemon poll interval in milliseconds (default: 1000)
  -r, --retries=N               number of times to retry before switch to backup server (default: 5)
  -R, --retry-pause=N           time to pause between retries (default: 5)
      --user-agent              set custom user-agent string for pool
      --donate-level=N          donate level, default 5%% (5 minutes in 100 minutes)
      --donate-over-proxy=N     control donate over xmrig-proxy feature

CPU backend:
      --no-cpu                  disable CPU mining backend
  -t, --threads=N               number of CPU threads
  -v, --av=N                    algorithm variation, 0 auto select
      --cpu-affinity            set process affinity to CPU core(s), mask 0x3 for cores 0 and 1
      --cpu-priority            set process priority (0 idle, 2 normal to 5 highest)
      --cpu-max-threads-hint=N  maximum CPU threads count (in percentage) hint for autoconfig
      --cpu-memory-pool=N       number of 2 MB pages for persistent memory pool, -1 (auto), 0 (disable)
      --no-huge-pages           disable huge pages support
      --asm=ASM                 ASM optimizations, possible values: auto, none, intel, ryzen, bulldozer
      --randomx-init=N          threads count to initialize RandomX dataset
      --randomx-no-numa         disable NUMA support for RandomX
      --randomx-mode=MODE       RandomX mode: auto, fast, light

API:
      --api-worker-id=ID        custom worker-id for API
      --api-id=ID               custom instance ID for API
      --http-host=HOST          bind host for HTTP API (default: 127.0.0.1)
      --http-port=N             bind port for HTTP API
      --http-access-token=T     access token for HTTP API
      --http-no-restricted      enable full remote access to HTTP API (only if access token set)

OpenCL backend:
      --opencl                  enable OpenCL mining backend
      --opencl-devices=N        comma separated list of OpenCL devices to use
      --opencl-platform=N       OpenCL platform index or name
      --opencl-loader=PATH      path to OpenCL-ICD-Loader (OpenCL.dll or libOpenCL.so)
      --opencl-no-cache         disable OpenCL cache
      --print-platforms         print available OpenCL platforms and exit

CUDA backend:
      --cuda                    enable CUDA mining backend
      --cuda-loader=PATH        path to CUDA plugin (xmrig-cuda.dll or libxmrig-cuda.so)
      --cuda-devices=N          comma separated list of CUDA devices to use
      --cuda-bfactor-hint=N     bfactor hint for autoconfig (0-12)
      --cuda-bsleep-hint=N      bsleep hint for autoconfig
      --no-nvml                 disable NVML (NVIDIA Management Library) support

Logging:
  -S, --syslog                  use system log for output messages
  -l, --log-file=FILE           log all output to a file
      --print-time=N            print hashrate report every N seconds
      --health-print-time=N     print health report every N seconds
      --no-color                disable colored output

Misc:
  -c, --config=FILE             load a JSON-format configuration file
  -B, --background              run the miner in the background
  -V, --version                 output version information and exit
  -h, --help                    display this help and exit
      --dry-run                 test configuration and exit
      --export-topology         export hwloc topology to a XML file and exit
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-donations" class="anchor" aria-hidden="true" href="#donations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Donations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Default donation 5% (5 minutes in 100 minutes) can be reduced to 1% via option &lt;code&gt;donate-level&lt;/code&gt; or disabled in source code.&lt;/li&gt;
&lt;li&gt;XMR: &lt;code&gt;48edfHu7V9Z84YzzMa6fUueoELZ9ZRXq9VetWzYGzKt52XU5xvqgzYnDK9URnRoJMk1j8nLwEVsaSWJ4fhdUyZijBGUicoD&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;BTC: &lt;code&gt;1P7ujsXeX7GxQwHNnJsRMgAdNkFZmNVqJT&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contacts" class="anchor" aria-hidden="true" href="#contacts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contacts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="mailto:support@xmrig.com"&gt;support@xmrig.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/user/XMRig/" rel="nofollow"&gt;reddit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/xmrig_dev" rel="nofollow"&gt;twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>xmrig</author><guid isPermaLink="false">https://github.com/xmrig/xmrig</guid><pubDate>Wed, 04 Dec 2019 00:02:00 GMT</pubDate></item><item><title>gabime/spdlog #3 in C++, This week</title><link>https://github.com/gabime/spdlog</link><description>&lt;p&gt;&lt;i&gt;Fast C++ logging library.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-spdlog" class="anchor" aria-hidden="true" href="#spdlog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;spdlog&lt;/h1&gt;
&lt;p&gt;Very fast, header-only/compiled, C++ logging library. &lt;a href="https://travis-ci.org/gabime/spdlog" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0f42b817adb6f66cfb91f348065f8850790ff9ba/68747470733a2f2f7472617669732d63692e6f72672f676162696d652f7370646c6f672e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/gabime/spdlog.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;¬† &lt;a href="https://ci.appveyor.com/project/gabime/spdlog" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3fe914a30a9c586ce7a896c541819ea52759be71/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f64326a6e78636c6732307664306f35303f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/d2jnxclg20vd0o50?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-header-only-version" class="anchor" aria-hidden="true" href="#header-only-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Header only version&lt;/h4&gt;
&lt;p&gt;Copy the source &lt;a href="https://github.com/gabime/spdlog/tree/v1.x/include/spdlog"&gt;folder&lt;/a&gt; to your build tree and use a C++11 compiler.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-static-lib-version-recommended---much-faster-compile-times" class="anchor" aria-hidden="true" href="#static-lib-version-recommended---much-faster-compile-times"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Static lib version (recommended - much faster compile times)&lt;/h4&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;git clone https://github.com/gabime/spdlog.git&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; spdlog &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; mkdir build &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-c1"&gt;cd&lt;/span&gt; build&lt;/span&gt;
$ &lt;span class="pl-s1"&gt;cmake .. &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; make -j&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;see example &lt;a href="https://github.com/gabime/spdlog/blob/v1.x/example/CMakeLists.txt"&gt;CMakeLists.txt&lt;/a&gt; on how to use.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-platforms" class="anchor" aria-hidden="true" href="#platforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Platforms&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Linux, FreeBSD, OpenBSD, Solaris, AIX&lt;/li&gt;
&lt;li&gt;Windows (msvc 2013+, cygwin)&lt;/li&gt;
&lt;li&gt;macOS (clang 3.5+)&lt;/li&gt;
&lt;li&gt;Android&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-package-managers" class="anchor" aria-hidden="true" href="#package-managers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Package managers:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Homebrew: &lt;code&gt;brew install spdlog&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;FreeBSD:  &lt;code&gt;cd /usr/ports/devel/spdlog/ &amp;amp;&amp;amp; make install clean&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fedora: &lt;code&gt;yum install spdlog&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Gentoo: &lt;code&gt;emerge dev-libs/spdlog&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Arch Linux: &lt;code&gt;yaourt -S spdlog-git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;vcpkg: &lt;code&gt;vcpkg install spdlog&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;conan: &lt;code&gt;spdlog/[&amp;gt;=1.4.1]@bincrafters/stable&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Very fast (see &lt;a href="#benchmarks"&gt;benchmarks&lt;/a&gt; below).&lt;/li&gt;
&lt;li&gt;Headers only, just copy and use. Or use as a compiled library.&lt;/li&gt;
&lt;li&gt;Feature rich formatting, using the excellent &lt;a href="https://github.com/fmtlib/fmt"&gt;fmt&lt;/a&gt; library.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;New!&lt;/strong&gt; &lt;a href="#backtrace-support"&gt;Backtrace&lt;/a&gt; support - store debug or other messages in a ring buffer and display later on demand.&lt;/li&gt;
&lt;li&gt;Fast asynchronous mode (optional)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gabime/spdlog/wiki/3.-Custom-formatting"&gt;Custom&lt;/a&gt; formatting.&lt;/li&gt;
&lt;li&gt;Multi/Single threaded loggers.&lt;/li&gt;
&lt;li&gt;Various log targets:
&lt;ul&gt;
&lt;li&gt;Rotating log files.&lt;/li&gt;
&lt;li&gt;Daily log files.&lt;/li&gt;
&lt;li&gt;Console logging (colors supported).&lt;/li&gt;
&lt;li&gt;syslog.&lt;/li&gt;
&lt;li&gt;Windows debugger (&lt;code&gt;OutputDebugString(..)&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Easily extendable with custom log targets  (just implement a single function in the &lt;a href="include/spdlog/sinks/sink.h"&gt;sink&lt;/a&gt; interface).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Severity based filtering - threshold levels can be modified in runtime as well as in compile time.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage-samples" class="anchor" aria-hidden="true" href="#usage-samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage samples&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic usage&lt;/h4&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;spdlog/spdlog.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;spdlog/sinks/basic_file_sink.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() 
{
    &lt;span class="pl-c1"&gt;spdlog::info&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Welcome to spdlog!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-c1"&gt;spdlog::error&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Some error message with arg: {}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;);
    
    &lt;span class="pl-c1"&gt;spdlog::warn&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Easy padding in numbers like {:08d}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;);
    &lt;span class="pl-c1"&gt;spdlog::critical&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Support for int: {0:d};  hex: {0:x};  oct: {0:o}; bin: {0:b}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;42&lt;/span&gt;);
    &lt;span class="pl-c1"&gt;spdlog::info&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Support for floats {:03.2f}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.23456&lt;/span&gt;);
    &lt;span class="pl-c1"&gt;spdlog::info&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Positional args are {1} {0}..&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;too&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;supported&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-c1"&gt;spdlog::info&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{:&amp;lt;30}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left aligned&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    
    &lt;span class="pl-c1"&gt;spdlog::set_level&lt;/span&gt;(spdlog::level::debug); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Set global log level to debug&lt;/span&gt;
    &lt;span class="pl-c1"&gt;spdlog::debug&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;This message should be displayed..&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);    
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; change log pattern&lt;/span&gt;
    &lt;span class="pl-c1"&gt;spdlog::set_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[%H:%M:%S %z] [%n] [%^---%L---%$] [thread %t] %v&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Compile time log levels&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; define SPDLOG_ACTIVE_LEVEL to desired level&lt;/span&gt;
    &lt;span class="pl-c1"&gt;SPDLOG_TRACE&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Some trace message with param {}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, {});
    &lt;span class="pl-c1"&gt;SPDLOG_DEBUG&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Some debug message&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Set the default logger to file logger&lt;/span&gt;
    &lt;span class="pl-k"&gt;auto&lt;/span&gt; file_logger = &lt;span class="pl-c1"&gt;spdlog::basic_logger_mt&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;basic_logger&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;logs/basic.txt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-c1"&gt;spdlog::set_default_logger&lt;/span&gt;(file_logger);            
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-create-stdoutstderr-logger-object" class="anchor" aria-hidden="true" href="#create-stdoutstderr-logger-object"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;create stdout/stderr logger object&lt;/h4&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;spdlog/spdlog.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;spdlog/sinks/stdout_color_sinks.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;stdout_example&lt;/span&gt;()
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; create color multi threaded logger&lt;/span&gt;
    &lt;span class="pl-k"&gt;auto&lt;/span&gt; console = &lt;span class="pl-c1"&gt;spdlog::stdout_color_mt&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;console&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);    
    &lt;span class="pl-k"&gt;auto&lt;/span&gt; err_logger = &lt;span class="pl-c1"&gt;spdlog::stderr_color_mt&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stderr&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);    
    &lt;span class="pl-c1"&gt;spdlog::get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;console&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)-&amp;gt;&lt;span class="pl-c1"&gt;info&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;loggers can be retrieved from a global registry using the spdlog::get(logger_name)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-basic-file-logger" class="anchor" aria-hidden="true" href="#basic-file-logger"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic file logger&lt;/h4&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;spdlog/sinks/basic_file_sink.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;basic_logfile_example&lt;/span&gt;()
{
    &lt;span class="pl-k"&gt;try&lt;/span&gt; 
    {
        &lt;span class="pl-k"&gt;auto&lt;/span&gt; my_logger = &lt;span class="pl-c1"&gt;spdlog::basic_logger_mt&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;basic_logger&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;logs/basic-log.txt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    }
    &lt;span class="pl-k"&gt;catch&lt;/span&gt; (&lt;span class="pl-k"&gt;const&lt;/span&gt; spdlog::spdlog_ex &amp;amp;ex)
    {
        std::cout &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Log init failed: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; ex.&lt;span class="pl-c1"&gt;what&lt;/span&gt;() &amp;lt;&amp;lt; std::endl;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-rotating-files" class="anchor" aria-hidden="true" href="#rotating-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rotating files&lt;/h4&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;spdlog/sinks/rotating_file_sink.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;rotating_example&lt;/span&gt;()
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Create a file rotating logger with 5mb size max and 3 rotated files&lt;/span&gt;
    &lt;span class="pl-k"&gt;auto&lt;/span&gt; rotating_logger = &lt;span class="pl-c1"&gt;spdlog::rotating_logger_mt&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;some_logger_name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;logs/rotating.txt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1048576&lt;/span&gt; * &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-daily-files" class="anchor" aria-hidden="true" href="#daily-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Daily files&lt;/h4&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;spdlog/sinks/daily_file_sink.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;daily_example&lt;/span&gt;()
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Create a daily logger - a new file is created every day on 2:30am&lt;/span&gt;
    &lt;span class="pl-k"&gt;auto&lt;/span&gt; daily_logger = &lt;span class="pl-c1"&gt;spdlog::daily_logger_mt&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;daily_logger&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;logs/daily.txt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;30&lt;/span&gt;);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-backtrace-support" class="anchor" aria-hidden="true" href="#backtrace-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backtrace support&lt;/h4&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Loggers can store in a ring buffer all messages (including debug/trace) and display later on demand.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; When needed, call dump_backtrace() to see them&lt;/span&gt;
&lt;span class="pl-en"&gt;spdlog::enable_backtrace&lt;/span&gt;(&lt;span class="pl-c1"&gt;32&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; create ring buffer with capacity of 32  messages&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or my_logger-&amp;gt;enable_backtrace(32)..&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; i = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;; i++)
{
  &lt;span class="pl-c1"&gt;spdlog::debug&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Backtrace message {}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, i); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; not logged yet..&lt;/span&gt;
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; e.g. if some error happened:&lt;/span&gt;
&lt;span class="pl-en"&gt;spdlog::dump_backtrace&lt;/span&gt;(); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; log them now! show the last 32 messages&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or my_logger-&amp;gt;dump_backtrace(32)..&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-periodic-flush" class="anchor" aria-hidden="true" href="#periodic-flush"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Periodic flush&lt;/h4&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; periodically flush all *registered* loggers every 3 seconds:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; warning: only use if all your loggers are thread safe!&lt;/span&gt;
&lt;span class="pl-en"&gt;spdlog::flush_every&lt;/span&gt;(std::chrono::seconds(&lt;span class="pl-c1"&gt;3&lt;/span&gt;));
&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-log-binary-data-in-hex" class="anchor" aria-hidden="true" href="#log-binary-data-in-hex"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Log binary data in hex&lt;/h4&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; many types of std::container&amp;lt;char&amp;gt; types can be used.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ranges are supported too.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; format flags:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {:X} - print in uppercase.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {:s} - don't separate each byte with space.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {:p} - don't print the position on each line start.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; {:n} - don't split the output to lines.&lt;/span&gt;

#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;spdlog/fmt/bin_to_hex.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;binary_example&lt;/span&gt;()
{
    &lt;span class="pl-k"&gt;auto&lt;/span&gt; console = &lt;span class="pl-c1"&gt;spdlog::get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;console&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    std::array&amp;lt;&lt;span class="pl-k"&gt;char&lt;/span&gt;, &lt;span class="pl-c1"&gt;80&lt;/span&gt;&amp;gt; buf;
    console-&amp;gt;&lt;span class="pl-c1"&gt;info&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Binary example: {}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;spdlog::to_hex&lt;/span&gt;(buf));
    console-&amp;gt;&lt;span class="pl-c1"&gt;info&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Another binary example:{:n}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;spdlog::to_hex&lt;/span&gt;(&lt;span class="pl-c1"&gt;std::begin&lt;/span&gt;(buf), &lt;span class="pl-c1"&gt;std::begin&lt;/span&gt;(buf) + &lt;span class="pl-c1"&gt;10&lt;/span&gt;));
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; more examples:&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; logger-&amp;gt;info("uppercase: {:X}", spdlog::to_hex(buf));&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; logger-&amp;gt;info("uppercase, no delimiters: {:Xs}", spdlog::to_hex(buf));&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; logger-&amp;gt;info("uppercase, no delimiters, no position info: {:Xsp}", spdlog::to_hex(buf));&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-logger-with-multi-sinks---each-with-different-format-and-log-level" class="anchor" aria-hidden="true" href="#logger-with-multi-sinks---each-with-different-format-and-log-level"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Logger with multi sinks - each with different format and log level&lt;/h4&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; create logger with 2 targets with different log levels and formats.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the console will show only warnings or errors, while the file will log all.&lt;/span&gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;multi_sink_example&lt;/span&gt;()
{
    &lt;span class="pl-k"&gt;auto&lt;/span&gt; console_sink = std::make_shared&amp;lt;spdlog::sinks::stdout_color_sink_mt&amp;gt;();
    console_sink-&amp;gt;&lt;span class="pl-c1"&gt;set_level&lt;/span&gt;(spdlog::level::warn);
    console_sink-&amp;gt;&lt;span class="pl-c1"&gt;set_pattern&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[multi_sink_example] [%^%l%$] %v&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);

    &lt;span class="pl-k"&gt;auto&lt;/span&gt; file_sink = std::make_shared&amp;lt;spdlog::sinks::basic_file_sink_mt&amp;gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;logs/multisink.txt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;);
    file_sink-&amp;gt;&lt;span class="pl-c1"&gt;set_level&lt;/span&gt;(spdlog::level::trace);

    spdlog::logger &lt;span class="pl-smi"&gt;logger&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;multi_sink&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, {console_sink, file_sink});
    logger.&lt;span class="pl-c1"&gt;set_level&lt;/span&gt;(spdlog::level::debug);
    logger.&lt;span class="pl-c1"&gt;warn&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;this should appear in both console and file&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    logger.&lt;span class="pl-c1"&gt;info&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;this message should not appear in the console, only in the file&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-asynchronous-logging" class="anchor" aria-hidden="true" href="#asynchronous-logging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Asynchronous logging&lt;/h4&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;spdlog/async.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;spdlog/sinks/basic_file_sink.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;async_example&lt;/span&gt;()
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; default thread pool settings can be modified *before* creating the async logger:&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; spdlog::init_thread_pool(8192, 1); // queue with 8k items and 1 backing thread.&lt;/span&gt;
    &lt;span class="pl-k"&gt;auto&lt;/span&gt; async_file = spdlog::basic_logger_mt&amp;lt;spdlog::async_factory&amp;gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;async_file_logger&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;logs/async_log.txt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; alternatively:&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; auto async_file = spdlog::create_async&amp;lt;spdlog::sinks::basic_file_sink_mt&amp;gt;("async_file_logger", "logs/async_log.txt");   &lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-asynchronous-logger-with-multi-sinks" class="anchor" aria-hidden="true" href="#asynchronous-logger-with-multi-sinks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Asynchronous logger with multi sinks&lt;/h4&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;spdlog/sinks/stdout_color_sinks.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;spdlog/sinks/rotating_file_sink.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;multi_sink_example2&lt;/span&gt;()
{
    &lt;span class="pl-c1"&gt;spdlog::init_thread_pool&lt;/span&gt;(&lt;span class="pl-c1"&gt;8192&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;);
    &lt;span class="pl-k"&gt;auto&lt;/span&gt; stdout_sink = std::make_shared&amp;lt;spdlog::sinks::stdout_color_sink_mt &amp;gt;();
    &lt;span class="pl-k"&gt;auto&lt;/span&gt; rotating_sink = std::make_shared&amp;lt;spdlog::sinks::rotating_file_sink_mt&amp;gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mylog.txt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1024&lt;/span&gt;*&lt;span class="pl-c1"&gt;1024&lt;/span&gt;*&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;);
    std::vector&amp;lt;spdlog::sink_ptr&amp;gt; sinks {stdout_sink, rotating_sink};
    &lt;span class="pl-k"&gt;auto&lt;/span&gt; logger = std::make_shared&amp;lt;spdlog::async_logger&amp;gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;loggername&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, sinks.&lt;span class="pl-c1"&gt;begin&lt;/span&gt;(), sinks.&lt;span class="pl-c1"&gt;end&lt;/span&gt;(), &lt;span class="pl-c1"&gt;spdlog::thread_pool&lt;/span&gt;(), spdlog::async_overflow_policy::block);
    &lt;span class="pl-c1"&gt;spdlog::register_logger&lt;/span&gt;(logger);
}&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-user-defined-types" class="anchor" aria-hidden="true" href="#user-defined-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;User defined types&lt;/h4&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; user defined types logging by implementing operator&amp;lt;&amp;lt;&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;spdlog/fmt/ostr.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; must be included&lt;/span&gt;
&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;my_type&lt;/span&gt;
{
    &lt;span class="pl-k"&gt;int&lt;/span&gt; i;
    &lt;span class="pl-k"&gt;template&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;typename&lt;/span&gt; OStream&amp;gt;
    &lt;span class="pl-k"&gt;friend&lt;/span&gt; OStream &amp;amp;&lt;span class="pl-k"&gt;operator&lt;/span&gt;&amp;lt;&amp;lt;(OStream &amp;amp;os, &lt;span class="pl-k"&gt;const&lt;/span&gt; my_type &amp;amp;c)
    {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; os &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[my_type i=&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; c.&lt;span class="pl-smi"&gt;i&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
    }
};

&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;user_defined_example&lt;/span&gt;()
{
    &lt;span class="pl-c1"&gt;spdlog::get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;console&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)-&amp;gt;&lt;span class="pl-c1"&gt;info&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user defined type: {}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, my_type{&lt;span class="pl-c1"&gt;14&lt;/span&gt;});
}
&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-custom-error-handler" class="anchor" aria-hidden="true" href="#custom-error-handler"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom error handler&lt;/h4&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;err_handler_example&lt;/span&gt;()
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; can be set globally or per logger(logger-&amp;gt;set_error_handler(..))&lt;/span&gt;
    &lt;span class="pl-c1"&gt;spdlog::set_error_handler&lt;/span&gt;([](&lt;span class="pl-k"&gt;const&lt;/span&gt; std::string &amp;amp;msg) { &lt;span class="pl-c1"&gt;spdlog::get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;console&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)-&amp;gt;&lt;span class="pl-c1"&gt;error&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;*** LOGGER ERROR ***: {}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, msg); });
    &lt;span class="pl-c1"&gt;spdlog::get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;console&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)-&amp;gt;&lt;span class="pl-c1"&gt;info&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;some invalid message to trigger an error {}{}{}{}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-syslog" class="anchor" aria-hidden="true" href="#syslog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;syslog&lt;/h4&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;spdlog/sinks/syslog_sink.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;syslog_example&lt;/span&gt;()
{
    std::string ident = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;spdlog-example&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
    &lt;span class="pl-k"&gt;auto&lt;/span&gt; syslog_logger = &lt;span class="pl-c1"&gt;spdlog::syslog_logger_mt&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;syslog&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ident, LOG_PID);
    syslog_logger-&amp;gt;&lt;span class="pl-c1"&gt;warn&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;This is warning that will end up in syslog.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;a id="user-content-android-example" class="anchor" aria-hidden="true" href="#android-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android example&lt;/h4&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;spdlog/sinks/android_sink.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;android_example&lt;/span&gt;()
{
    std::string tag = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;spdlog-android&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;;
    &lt;span class="pl-k"&gt;auto&lt;/span&gt; android_logger = &lt;span class="pl-c1"&gt;spdlog::android_logger_mt&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;android&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, tag);
    android_logger-&amp;gt;&lt;span class="pl-c1"&gt;critical&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Use &lt;span class="pl-cce"&gt;\"&lt;/span&gt;adb shell logcat&lt;span class="pl-cce"&gt;\"&lt;/span&gt; to view this message.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-benchmarks" class="anchor" aria-hidden="true" href="#benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Benchmarks&lt;/h2&gt;
&lt;p&gt;Below are some &lt;a href="https://github.com/gabime/spdlog/blob/v1.x/bench/bench.cpp"&gt;benchmarks&lt;/a&gt; done in Ubuntu 64 bit, Intel i7-4770 CPU @ 3.40GHz&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-synchronous-mode" class="anchor" aria-hidden="true" href="#synchronous-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Synchronous mode&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;[info] **************************************************************
[info] Single thread, 1,000,000 iterations
[info] **************************************************************
[info] basic_st         Elapsed: 0.17 secs        5,777,626/sec
[info] rotating_st      Elapsed: 0.18 secs        5,475,894/sec
[info] daily_st         Elapsed: 0.20 secs        5,062,659/sec
[info] empty_logger     Elapsed: 0.07 secs       14,127,300/sec
[info] **************************************************************
[info] C-string (400 bytes). Single thread, 1,000,000 iterations
[info] **************************************************************
[info] basic_st         Elapsed: 0.41 secs        2,412,483/sec
[info] rotating_st      Elapsed: 0.72 secs        1,389,196/sec
[info] daily_st         Elapsed: 0.42 secs        2,393,298/sec
[info] null_st          Elapsed: 0.04 secs       27,446,957/sec
[info] **************************************************************
[info] 10 threads sharing same logger, 1,000,000 iterations
[info] **************************************************************
[info] basic_mt         Elapsed: 0.60 secs        1,659,613/sec
[info] rotating_mt      Elapsed: 0.62 secs        1,612,493/sec
[info] daily_mt         Elapsed: 0.61 secs        1,638,305/sec
[info] null_mt          Elapsed: 0.16 secs        6,272,758/sec
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-asynchronous-mode" class="anchor" aria-hidden="true" href="#asynchronous-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ASynchronous mode&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;[info] -------------------------------------------------
[info] Messages     : 1,000,000
[info] Threads      : 10
[info] Queue        : 8,192 slots
[info] Queue memory : 8,192 x 272 = 2,176 KB 
[info] Total iters  : 3
[info] -------------------------------------------------
[info] 
[info] *********************************
[info] Queue Overflow Policy: block
[info] *********************************
[info] Elapsed: 1.70784 secs     585,535/sec
[info] Elapsed: 1.69805 secs     588,910/sec
[info] Elapsed: 1.7026 secs      587,337/sec
[info] 
[info] *********************************
[info] Queue Overflow Policy: overrun
[info] *********************************
[info] Elapsed: 0.372816 secs    2,682,285/sec
[info] Elapsed: 0.379758 secs    2,633,255/sec
[info] Elapsed: 0.373532 secs    2,677,147/sec

&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Documentation can be found in the &lt;a href="https://github.com/gabime/spdlog/wiki/1.-QuickStart"&gt;wiki&lt;/a&gt; pages.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>gabime</author><guid isPermaLink="false">https://github.com/gabime/spdlog</guid><pubDate>Wed, 04 Dec 2019 00:03:00 GMT</pubDate></item><item><title>trojan-gfw/trojan #4 in C++, This week</title><link>https://github.com/trojan-gfw/trojan</link><description>&lt;p&gt;&lt;i&gt;An unidentifiable mechanism that helps you bypass GFW.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-trojan" class="anchor" aria-hidden="true" href="#trojan"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;trojan&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://dev.azure.com/GreaterFire/Trojan-GFW/_build/latest?definitionId=5&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/62a97cc683a7827db7b89819aa6351799d28d40f/68747470733a2f2f6465762e617a7572652e636f6d2f47726561746572466972652f54726f6a616e2d4746572f5f617069732f6275696c642f7374617475732f74726f6a616e2d6766772e74726f6a616e3f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/GreaterFire/Trojan-GFW/_apis/build/status/trojan-gfw.trojan?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;An unidentifiable mechanism that helps you bypass GFW.&lt;/p&gt;
&lt;p&gt;Trojan features multiple protocols over &lt;code&gt;TLS&lt;/code&gt; to avoid both active/passive detections and ISP &lt;code&gt;QoS&lt;/code&gt; limitations.&lt;/p&gt;
&lt;p&gt;Trojan is not a fixed program or protocol. It's an idea, an idea that imitating the most common service, to an extent that it behaves identically, could help you get across the Great FireWall permanently, without being identified ever. We are the GreatER Fire; we ship Trojan Horses.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentations" class="anchor" aria-hidden="true" href="#documentations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentations&lt;/h2&gt;
&lt;p&gt;An online documentation can be found &lt;a href="https://trojan-gfw.github.io/trojan/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;br&gt;
Installation guide on various platforms can be found in the &lt;a href="https://github.com/trojan-gfw/trojan/wiki/Binary-&amp;amp;-Package-Distributions"&gt;wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cmake.org/" rel="nofollow"&gt;CMake&lt;/a&gt; &amp;gt;= 3.7.2&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.boost.org/" rel="nofollow"&gt;Boost&lt;/a&gt; &amp;gt;= 1.66.0&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.openssl.org/" rel="nofollow"&gt;OpenSSL&lt;/a&gt; &amp;gt;= 1.0.2&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.mysql.com/downloads/connector/c/" rel="nofollow"&gt;libmysqlclient&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="LICENSE"&gt;GPLv3&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-flag-counter" class="anchor" aria-hidden="true" href="#flag-counter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flag Counter&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://info.flagcounter.com/svnh" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/161ba6a45f24d71d6af1eedf28bf8ea61ae8edf3/68747470733a2f2f7330342e666c6167636f756e7465722e636f6d2f636f756e74786c2f73766e682f62675f4646464646462f7478745f3030303030302f626f726465725f4343434343432f636f6c756d6e735f352f6d6178666c6167735f32302f766965776572735f54726f6a616e2f6c6162656c735f312f7061676576696577735f312f666c6167735f302f70657263656e745f302f" alt="Flag Counter" data-canonical-src="https://s04.flagcounter.com/countxl/svnh/bg_FFFFFF/txt_000000/border_CCCCCC/columns_5/maxflags_20/viewers_Trojan/labels_1/pageviews_1/flags_0/percent_0/" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>trojan-gfw</author><guid isPermaLink="false">https://github.com/trojan-gfw/trojan</guid><pubDate>Wed, 04 Dec 2019 00:04:00 GMT</pubDate></item><item><title>microsoft/terminal #5 in C++, This week</title><link>https://github.com/microsoft/terminal</link><description>&lt;p&gt;&lt;i&gt;The new Windows Terminal, and the original Windows console host - all in the same place!&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-welcome-to-the-windows-terminal-console-and-command-line-repo" class="anchor" aria-hidden="true" href="#welcome-to-the-windows-terminal-console-and-command-line-repo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Welcome to the Windows Terminal, Console and Command-Line repo&lt;/h1&gt;
&lt;p&gt;This repository contains the source code for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.microsoft.com/en-us/p/windows-terminal-preview/9n0dx20hk701" rel="nofollow"&gt;Windows Terminal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The Windows console host (&lt;code&gt;conhost.exe&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Components shared between the two projects&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/Terminal/tree/master/src/tools/ColorTool"&gt;ColorTool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/Terminal/tree/master/samples"&gt;Sample projects&lt;/a&gt; that show how to consume the Windows Console APIs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Related repositories include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MicrosoftDocs/Console-Docs"&gt;Console API Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/Cascadia-Code"&gt;Cascadia Code Font&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installing-and-running-windows-terminal" class="anchor" aria-hidden="true" href="#installing-and-running-windows-terminal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing and running Windows Terminal&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;üëâ&lt;/g-emoji&gt; Note: Windows Terminal requires Windows 10 1903 (build 18362) or later&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-manually-installing-builds-from-this-repository" class="anchor" aria-hidden="true" href="#manually-installing-builds-from-this-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually installing builds from this repository&lt;/h3&gt;
&lt;p&gt;For users who are unable to install Terminal from the Microsoft Store, Terminal builds can be manually downloaded from this repository's &lt;a href="https://github.com/microsoft/terminal/releases"&gt;Releases page&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;‚ö† Note: If you install Terminal manually:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Be sure to install the &lt;a href="https://www.microsoft.com/en-us/download/details.aspx?id=53175" rel="nofollow"&gt;Desktop Bridge VC++ v14 Redistributable Package&lt;/a&gt; otherwise Terminal may not install and/or run and may crash at startup&lt;/li&gt;
&lt;li&gt;Terminal will not auto-update when new builds are released so you will need to regularly install the latest Terminal release to receive all the latest fixes and improvements!&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-install-via-chocolatey-unofficial" class="anchor" aria-hidden="true" href="#install-via-chocolatey-unofficial"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install via Chocolatey (unofficial)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://chocolatey.org" rel="nofollow"&gt;Chocolatey&lt;/a&gt; users can download and install the latest Terminal release by installing the &lt;code&gt;microsoft-windows-terminal&lt;/code&gt; package:&lt;/p&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;choco install microsoft&lt;span class="pl-k"&gt;-&lt;/span&gt;windows&lt;span class="pl-k"&gt;-&lt;/span&gt;terminal&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To upgrade Windows Terminal using Chocolatey, run the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;choco upgrade microsoft&lt;span class="pl-k"&gt;-&lt;/span&gt;windows&lt;span class="pl-k"&gt;-&lt;/span&gt;terminal&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have any issues when installing/upgrading the package please go to the &lt;a href="https://chocolatey.org/packages/microsoft-windows-terminal" rel="nofollow"&gt;Windows Terminal package page&lt;/a&gt; and follow the &lt;a href="https://chocolatey.org/docs/package-triage-process" rel="nofollow"&gt;Chocolatey triage process&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-project-build-status" class="anchor" aria-hidden="true" href="#project-build-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Build Status&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Project&lt;/th&gt;
&lt;th&gt;Build Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Terminal&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.azure.com/ms/Terminal/_build?definitionId=136" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/68b3641b349416aae435031ac10c3d4cf5111af1/68747470733a2f2f6465762e617a7572652e636f6d2f6d732f5465726d696e616c2f5f617069732f6275696c642f7374617475732f5465726d696e616c25323043493f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/ms/Terminal/_apis/build/status/Terminal%20CI?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ColorTool&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/5f0bb274d277032d46bb648be44bdf30c4ce1978/68747470733a2f2f6d6963726f736f66742e76697375616c73747564696f2e636f6d2f5f617069732f7075626c69632f6275696c642f646566696e6974696f6e732f63393365383637612d383831352d343363312d393263342d6537646435343034663165312f31373032332f6261646765"&gt;&lt;img src="https://camo.githubusercontent.com/5f0bb274d277032d46bb648be44bdf30c4ce1978/68747470733a2f2f6d6963726f736f66742e76697375616c73747564696f2e636f6d2f5f617069732f7075626c69632f6275696c642f646566696e6974696f6e732f63393365383637612d383831352d343363312d393263342d6537646435343034663165312f31373032332f6261646765" alt="" data-canonical-src="https://microsoft.visualstudio.com/_apis/public/build/definitions/c93e867a-8815-43c1-92c4-e7dd5404f1e1/17023/badge" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-windows-terminal-v10-roadmap" class="anchor" aria-hidden="true" href="#windows-terminal-v10-roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows Terminal v1.0 Roadmap&lt;/h2&gt;
&lt;p&gt;The plan for delivering Windows Terminal v1.0 &lt;a href="/doc/terminal-v1-roadmap.md"&gt;is described here&lt;/a&gt;, and will be updated as the project proceeds.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-terminal--console-overview" class="anchor" aria-hidden="true" href="#terminal--console-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Terminal &amp;amp; Console Overview&lt;/h2&gt;
&lt;p&gt;Please take a few minutes to review the overview below before diving into the code:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-windows-terminal" class="anchor" aria-hidden="true" href="#windows-terminal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows Terminal&lt;/h3&gt;
&lt;p&gt;Windows Terminal is a new, modern, feature-rich, productive terminal application for command-line users. It includes many of the features most frequently requested by the Windows command-line community including support for tabs, rich text, globalization, configurability, theming &amp;amp; styling, and more.&lt;/p&gt;
&lt;p&gt;The Terminal will also need to meet our goals and measures to ensure it remains fast and efficient, and doesn't consume vast amounts of memory or power.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-the-windows-console-host" class="anchor" aria-hidden="true" href="#the-windows-console-host"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Windows Console Host&lt;/h3&gt;
&lt;p&gt;The Windows Console host, &lt;code&gt;conhost.exe&lt;/code&gt;, is Windows' original command-line user experience. It also hosts Windows' command-line infrastructure and the Windows Console API server, input engine, rendering engine, user preferences, etc. The console host code in this repository is the actual source from which the &lt;code&gt;conhost.exe&lt;/code&gt; in Windows itself is built.&lt;/p&gt;
&lt;p&gt;Since taking ownership of the Windows command-line in 2014, the team added several new features to the Console, including background transparency, line-based selection, support for &lt;a href="https://en.wikipedia.org/wiki/ANSI_escape_code" rel="nofollow"&gt;ANSI / Virtual Terminal sequences&lt;/a&gt;, &lt;a href="https://devblogs.microsoft.com/commandline/24-bit-color-in-the-windows-console/" rel="nofollow"&gt;24-bit color&lt;/a&gt;, a &lt;a href="https://devblogs.microsoft.com/commandline/windows-command-line-introducing-the-windows-pseudo-console-conpty/" rel="nofollow"&gt;Pseudoconsole ("ConPTY")&lt;/a&gt;, and more.&lt;/p&gt;
&lt;p&gt;However, because Windows Console's primary goal is to maintain backward compatibility, we have been unable to add many of the features the community (and the team) have been wanting for the last several years including tabs, unicode text, and emoji.&lt;/p&gt;
&lt;p&gt;These limitations led us to create the new Windows Terminal.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can read more about the evolution of the command-line in general, and the Windows command-line specifically in &lt;a href="https://devblogs.microsoft.com/commandline/windows-command-line-backgrounder/" rel="nofollow"&gt;this accompanying series of blog posts&lt;/a&gt; on the Command-Line team's blog.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-shared-components" class="anchor" aria-hidden="true" href="#shared-components"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Shared Components&lt;/h3&gt;
&lt;p&gt;While overhauling Windows Console, we modernized its codebase considerably, cleanly separating logical entities into modules and classes, introduced some key extensibility points, replaced several old, home-grown collections and containers with safer, more efficient &lt;a href="https://docs.microsoft.com/en-us/cpp/standard-library/stl-containers?view=vs-2019" rel="nofollow"&gt;STL containers&lt;/a&gt;, and made the code simpler and safer by using Microsoft's &lt;a href="https://github.com/Microsoft/wil"&gt;Windows Implementation Libraries - WIL&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This overhaul resulted in several of Console's key components being available for re-use in any terminal implementation on Windows. These components include a new DirectWrite-based text layout and rendering engine, a text buffer capable of storing both UTF-16 and UTF-8, a VT parser/emitter, and more.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-creating-the-new-windows-terminal" class="anchor" aria-hidden="true" href="#creating-the-new-windows-terminal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating the new Windows Terminal&lt;/h3&gt;
&lt;p&gt;When we started planning the new Windows Terminal application, we explored and evaluated several approaches and technology stacks. We ultimately decided that our goals would be best met by continuing our investment in our C++ codebase, which would allow us to reuse several of the aforementioned modernized components in both the existing Console and the new Terminal. Further, we realized that this would allow us to build much of the Terminal's core itself as a reusable UI control that others can incorporate into their own applications.&lt;/p&gt;
&lt;p&gt;The result of this work is contained within this repo and delivered as the Windows Terminal application you can download from the Microsoft Store, or &lt;a href="https://github.com/microsoft/terminal/releases"&gt;directly from this repo's releases&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;p&gt;For more information about Windows Terminal, you may find some of these resources useful and interesting:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devblogs.microsoft.com/commandline" rel="nofollow"&gt;Command-Line Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devblogs.microsoft.com/commandline/windows-command-line-backgrounder/" rel="nofollow"&gt;Command-Line Backgrounder Blog Series&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Windows Terminal Launch: &lt;a href="https://www.youtube.com/watch?v=8gw0rXPMMPE&amp;amp;list=PLEHMQNlPj-Jzh9DkNpqipDGCZZuOwrQwR&amp;amp;index=2&amp;amp;t=0s" rel="nofollow"&gt;Terminal "Sizzle Video"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Windows Terminal Launch: &lt;a href="https://www.youtube.com/watch?v=KMudkRcwjCw" rel="nofollow"&gt;Build 2019 Session&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Run As Radio: &lt;a href="http://www.runasradio.com/Shows/Show/645" rel="nofollow"&gt;Show 645 - Windows Terminal with Richard Turner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Azure Devops Podcast: &lt;a href="http://azuredevopspodcast.clear-measure.com/kayla-cinnamon-and-rich-turner-on-devops-on-the-windows-terminal-team-episode-54" rel="nofollow"&gt;Episode 54 - Kayla Cinnamon and Rich Turner on DevOps on the Windows Terminal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Microsoft Ignite 2019 Session: &lt;a href="https://myignite.techcommunity.microsoft.com/sessions/81329?source=sessions" rel="nofollow"&gt;The Modern Windows Command Line: Windows Terminal - BRK3321&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-i-built-and-ran-the-new-terminal-but-it-looks-just-like-the-old-console" class="anchor" aria-hidden="true" href="#i-built-and-ran-the-new-terminal-but-it-looks-just-like-the-old-console"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;I built and ran the new Terminal, but it looks just like the old console&lt;/h3&gt;
&lt;p&gt;Cause: You're launching the incorrect solution in Visual Studio.&lt;/p&gt;
&lt;p&gt;Solution: Make sure you're building &amp;amp; deploying the &lt;code&gt;CascadiaPackage&lt;/code&gt; project in Visual Studio.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;‚ö† Note: &lt;code&gt;OpenConsole.exe&lt;/code&gt; is just a locally-built &lt;code&gt;conhost.exe&lt;/code&gt;, the classic Windows Console that hosts Windows' command-line infrastructure. OpenConsole is used by Windows Terminal to connect to and communicate with command-line applications (via &lt;a href="https://devblogs.microsoft.com/commandline/windows-command-line-introducing-the-windows-pseudo-console-conpty/" rel="nofollow"&gt;ConPty&lt;/a&gt;).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;All project documentation is located in the &lt;code&gt;./doc&lt;/code&gt; folder. If you would like to contribute to the documentation, please submit a pull request.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;We are excited to work alongside you, our amazing community, to build and enhance Windows Terminal!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;BEFORE you start work on a feature/fix&lt;/strong&gt;&lt;/em&gt;, please read &amp;amp; follow our &lt;a href="https://github.com/microsoft/terminal/blob/master/contributing.md"&gt;Contributor's Guide&lt;/a&gt; to help avoid any wasted or duplicate effort.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-communicating-with-the-team" class="anchor" aria-hidden="true" href="#communicating-with-the-team"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Communicating with the Team&lt;/h2&gt;
&lt;p&gt;The easiest way to communicate with the team is via GitHub issues.&lt;/p&gt;
&lt;p&gt;Please file new issues, feature requests and suggestions, but &lt;strong&gt;DO search for similar open/closed pre-existing issues before creating a new issue.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you would like to ask a question that you feel doesn't warrant an issue (yet), please reach out to us via Twitter:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kayla Cinnamon, Program Manager: &lt;a href="https://twitter.com/cinnamon_msft" rel="nofollow"&gt;@cinnamon_msft&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Rich Turner, Program Manager: &lt;a href="https://twitter.com/richturn_ms" rel="nofollow"&gt;@richturn_ms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Dustin Howett, Engineering Lead: &lt;a href="https://twitter.com/DHowett" rel="nofollow"&gt;@dhowett&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Michael Niksa, Senior Developer: &lt;a href="https://twitter.com/MichaelNiksa" rel="nofollow"&gt;@michaelniksa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mike Griese, Developer: &lt;a href="https://twitter.com/zadjii" rel="nofollow"&gt;@zadjii&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Carlos Zamora, Developer: &lt;a href="https://twitter.com/cazamor_msft" rel="nofollow"&gt;@cazamor_msft&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-developer-guidance" class="anchor" aria-hidden="true" href="#developer-guidance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developer Guidance&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;You must be running Windows 1903 (build &amp;gt;= 10.0.18362.0) or later to run Windows Terminal&lt;/li&gt;
&lt;li&gt;You must &lt;a href="https://docs.microsoft.com/en-us/windows/uwp/get-started/enable-your-device-for-development" rel="nofollow"&gt;enable Developer Mode in the Windows Settings app&lt;/a&gt; to locally install and run Windows Terminal&lt;/li&gt;
&lt;li&gt;You must have the &lt;a href="https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk" rel="nofollow"&gt;Windows 10 1903 SDK&lt;/a&gt; installed&lt;/li&gt;
&lt;li&gt;You must have at least &lt;a href="https://visualstudio.microsoft.com/downloads/" rel="nofollow"&gt;VS 2019&lt;/a&gt; installed&lt;/li&gt;
&lt;li&gt;You must install the following Workloads via the VS Installer. Note: Opening the solution in VS 2019 will &lt;a href="https://devblogs.microsoft.com/setup/configure-visual-studio-across-your-organization-with-vsconfig/" rel="nofollow"&gt;prompt you to install missing components automatically&lt;/a&gt;:
&lt;ul&gt;
&lt;li&gt;Desktop Development with C++&lt;/li&gt;
&lt;li&gt;Universal Windows Platform Development&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The following Individual Components&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;C++ (v142) Universal Windows Platform Tools&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building-the-code" class="anchor" aria-hidden="true" href="#building-the-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the Code&lt;/h2&gt;
&lt;p&gt;This repository uses &lt;a href="https://git-scm.com/book/en/v2/Git-Tools-Submodules" rel="nofollow"&gt;git submodules&lt;/a&gt; for some of its dependencies. To make sure submodules are restored or updated, be sure to run the following prior to building:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git submodule update --init --recursive&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;OpenConsole.sln may be built from within Visual Studio or from the command-line using a set of convenience scripts &amp;amp; tools in the &lt;strong&gt;/tools&lt;/strong&gt; directory:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-in-powershell" class="anchor" aria-hidden="true" href="#building-in-powershell"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building in PowerShell&lt;/h3&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Import-Module&lt;/span&gt; .\tools\OpenConsole.psm1
&lt;span class="pl-c1"&gt;Set-MsBuildDevEnvironment&lt;/span&gt;
&lt;span class="pl-c1"&gt;Invoke-OpenConsoleBuild&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-building-in-cmd" class="anchor" aria-hidden="true" href="#building-in-cmd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building in Cmd&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;.&lt;span class="pl-cce"&gt;\t&lt;/span&gt;ools&lt;span class="pl-cce"&gt;\r&lt;/span&gt;azzle.cmd
bcz&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-debugging-terminal" class="anchor" aria-hidden="true" href="#debugging-terminal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging Terminal&lt;/h2&gt;
&lt;p&gt;To debug Terminal in VS, right click on &lt;code&gt;CascadiaPackage&lt;/code&gt; (in the Solution Explorer) and go to properties. In the Debug menu, change "Application process" and "Background task process" to "Native Only".&lt;/p&gt;
&lt;p&gt;You should then be able to build &amp;amp; debug the Terminal project by hitting &lt;kbd&gt;F5&lt;/kbd&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-debugging" class="anchor" aria-hidden="true" href="#debugging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;To debug in VS, right click on CascadiaPackage (from VS Solution Explorer) and go to properties, in the Debug menu, change "Application process" and "Background task process" to "Native Only".&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-coding-guidance" class="anchor" aria-hidden="true" href="#coding-guidance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Coding Guidance&lt;/h3&gt;
&lt;p&gt;Please review these brief docs below about our coding practices.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;üëâ&lt;/g-emoji&gt; If you find something missing from these docs, feel free to contribute to any of our documentation files anywhere in the repository (or write some new ones!)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is a work in progress as we learn what we'll need to provide people in order to be effective contributors to our project.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/Terminal/blob/master/doc/STYLE.md"&gt;Coding Style&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/Terminal/blob/master/doc/ORGANIZATION.md"&gt;Code Organization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/Terminal/blob/master/doc/EXCEPTIONS.md"&gt;Exceptions in our legacy codebase&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/Terminal/blob/master/doc/WIL.md"&gt;Helpful smart pointers and macros for interfacing with Windows in WIL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code of Conduct&lt;/h1&gt;
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;.
For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>microsoft</author><guid isPermaLink="false">https://github.com/microsoft/terminal</guid><pubDate>Wed, 04 Dec 2019 00:05:00 GMT</pubDate></item><item><title>google/googletest #6 in C++, This week</title><link>https://github.com/google/googletest</link><description>&lt;p&gt;&lt;i&gt;Googletest - Google Testing and Mocking Framework&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-google-test" class="anchor" aria-hidden="true" href="#google-test"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Google Test&lt;/h1&gt;
&lt;h4&gt;&lt;a id="user-content-oss-builds-status" class="anchor" aria-hidden="true" href="#oss-builds-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OSS Builds Status:&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/google/googletest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3889293d486af33499741bd12a3a1ce11deb4c93/68747470733a2f2f6170692e7472617669732d63692e6f72672f676f6f676c652f676f6f676c65746573742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://api.travis-ci.org/google/googletest.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/GoogleTestAppVeyor/googletest/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a3469255f3fcdead1593919251ab6f438744e9be/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f346f3338706c743078626f31756263382f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/4o38plt0xbo1ubc8/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-announcements" class="anchor" aria-hidden="true" href="#announcements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Announcements:&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-release-110x" class="anchor" aria-hidden="true" href="#release-110x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Release 1.10.x&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://github.com/google/googletest/releases/tag/release-1.10.0"&gt;Release 1.10.x&lt;/a&gt;
is now available.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-coming-soon" class="anchor" aria-hidden="true" href="#coming-soon"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Coming Soon&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Post 1.10.x googletest will follow
&lt;a href="https://abseil.io/about/philosophy" rel="nofollow"&gt;Abseil Live at Head philosophy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;We are also planning to take a dependency on
&lt;a href="https://github.com/abseil/abseil-cpp"&gt;Abseil&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-welcome-to-google-test-googles-c-test-framework" class="anchor" aria-hidden="true" href="#welcome-to-google-test-googles-c-test-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Welcome to &lt;strong&gt;Google Test&lt;/strong&gt;, Google's C++ test framework!&lt;/h2&gt;
&lt;p&gt;This repository is a merger of the formerly separate GoogleTest and GoogleMock
projects. These were so closely related that it makes sense to maintain and
release them together.&lt;/p&gt;
&lt;p&gt;Please subscribe to the mailing list at &lt;a href="mailto:googletestframework@googlegroups.com"&gt;googletestframework@googlegroups.com&lt;/a&gt; for
questions, discussions, and development.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started:&lt;/h3&gt;
&lt;p&gt;The information for &lt;strong&gt;Google Test&lt;/strong&gt; is available in the
&lt;a href="googletest/docs/primer.md"&gt;Google Test Primer&lt;/a&gt; documentation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Google Mock&lt;/strong&gt; is an extension to Google Test for writing and using C++ mock
classes. See the separate &lt;a href="googlemock/README.md"&gt;Google Mock documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;More detailed documentation for googletest is in its interior
&lt;a href="googletest/README.md"&gt;googletest/README.md&lt;/a&gt; file.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;An &lt;a href="https://en.wikipedia.org/wiki/XUnit" rel="nofollow"&gt;xUnit&lt;/a&gt; test framework.&lt;/li&gt;
&lt;li&gt;Test discovery.&lt;/li&gt;
&lt;li&gt;A rich set of assertions.&lt;/li&gt;
&lt;li&gt;User-defined assertions.&lt;/li&gt;
&lt;li&gt;Death tests.&lt;/li&gt;
&lt;li&gt;Fatal and non-fatal failures.&lt;/li&gt;
&lt;li&gt;Value-parameterized tests.&lt;/li&gt;
&lt;li&gt;Type-parameterized tests.&lt;/li&gt;
&lt;li&gt;Various options for running the tests.&lt;/li&gt;
&lt;li&gt;XML test report generation.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-platforms" class="anchor" aria-hidden="true" href="#platforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Platforms&lt;/h2&gt;
&lt;p&gt;Google test has been used on a variety of platforms:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux&lt;/li&gt;
&lt;li&gt;Mac OS X&lt;/li&gt;
&lt;li&gt;Windows&lt;/li&gt;
&lt;li&gt;Cygwin&lt;/li&gt;
&lt;li&gt;MinGW&lt;/li&gt;
&lt;li&gt;Windows Mobile&lt;/li&gt;
&lt;li&gt;Symbian&lt;/li&gt;
&lt;li&gt;PlatformIO&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-who-is-using-google-test" class="anchor" aria-hidden="true" href="#who-is-using-google-test"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Who Is Using Google Test?&lt;/h2&gt;
&lt;p&gt;In addition to many internal projects at Google, Google Test is also used by the
following notable projects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="http://www.chromium.org/" rel="nofollow"&gt;Chromium projects&lt;/a&gt; (behind the Chrome browser
and Chrome OS).&lt;/li&gt;
&lt;li&gt;The &lt;a href="http://llvm.org/" rel="nofollow"&gt;LLVM&lt;/a&gt; compiler.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/protobuf"&gt;Protocol Buffers&lt;/a&gt;, Google's data
interchange format.&lt;/li&gt;
&lt;li&gt;The &lt;a href="http://opencv.org/" rel="nofollow"&gt;OpenCV&lt;/a&gt; computer vision library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tiny-dnn/tiny-dnn"&gt;tiny-dnn&lt;/a&gt;: header only,
dependency-free deep learning framework in C++11.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-related-open-source-projects" class="anchor" aria-hidden="true" href="#related-open-source-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related Open Source Projects&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/nholthaus/gtest-runner"&gt;GTest Runner&lt;/a&gt; is a Qt5 based
automated test-runner and Graphical User Interface with powerful features for
Windows and Linux platforms.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ospector/gtest-gbar"&gt;Google Test UI&lt;/a&gt; is test runner that
runs your test binary, allows you to track its progress via a progress bar, and
displays a list of test failures. Clicking on one shows failure text. Google
Test UI is written in C#.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/kinow/gtest-tap-listener"&gt;GTest TAP Listener&lt;/a&gt; is an event
listener for Google Test that implements the
&lt;a href="https://en.wikipedia.org/wiki/Test_Anything_Protocol" rel="nofollow"&gt;TAP protocol&lt;/a&gt; for test
result output. If your test runner understands TAP, you may find it useful.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/google/gtest-parallel"&gt;gtest-parallel&lt;/a&gt; is a test runner that
runs tests from your binary in parallel to provide significant speed-up.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=DavidSchuldenfrei.gtest-adapter" rel="nofollow"&gt;GoogleTest Adapter&lt;/a&gt;
is a VS Code extension allowing to view Google Tests in a tree view, and
run/debug your tests.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/matepek/vscode-catch2-test-adapter"&gt;Catch2 and Google Test Explorer&lt;/a&gt;
is a VS Code extension allowing to view Google Tests in a tree view, and
run/debug your tests.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pypi.org/project/cornichon/" rel="nofollow"&gt;Cornichon&lt;/a&gt; is a small Gherkin DSL parser
that generates stub code for Google Test.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;Google Test is designed to have fairly minimal requirements to build and use
with your projects, but there are some. If you notice any problems on your
platform, please notify
&lt;a href="https://groups.google.com/forum/#!forum/googletestframework" rel="nofollow"&gt;googletestframework@googlegroups.com&lt;/a&gt;.
Patches for fixing them are welcome!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-build-requirements" class="anchor" aria-hidden="true" href="#build-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Requirements&lt;/h3&gt;
&lt;p&gt;These are the base requirements to build and use Google Test from a source
package:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://bazel.build/" rel="nofollow"&gt;Bazel&lt;/a&gt; or &lt;a href="https://cmake.org/" rel="nofollow"&gt;CMake&lt;/a&gt;. NOTE: Bazel is
the build system that googletest is using internally and tests against.
CMake is community-supported.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a C++11-standard-compliant compiler&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-change" class="anchor" aria-hidden="true" href="#contributing-change"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing change&lt;/h2&gt;
&lt;p&gt;Please read the &lt;a href="CONTRIBUTING.md"&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt; for details on how to
contribute to this project.&lt;/p&gt;
&lt;p&gt;Happy testing!&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>google</author><guid isPermaLink="false">https://github.com/google/googletest</guid><pubDate>Wed, 04 Dec 2019 00:06:00 GMT</pubDate></item><item><title>dolphin-emu/dolphin #7 in C++, This week</title><link>https://github.com/dolphin-emu/dolphin</link><description>&lt;p&gt;&lt;i&gt;Dolphin is a GameCube / Wii emulator, allowing you to play games for these two platforms on PC with improvements.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="Readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-dolphin---a-gamecube-and-wii-emulator" class="anchor" aria-hidden="true" href="#dolphin---a-gamecube-and-wii-emulator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dolphin - A GameCube and Wii Emulator&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://dolphin-emu.org/" rel="nofollow"&gt;Homepage&lt;/a&gt; | &lt;a href="https://github.com/dolphin-emu/dolphin"&gt;Project Site&lt;/a&gt; | &lt;a href="https://forums.dolphin-emu.org/" rel="nofollow"&gt;Forums&lt;/a&gt; | &lt;a href="https://wiki.dolphin-emu.org/" rel="nofollow"&gt;Wiki&lt;/a&gt; | &lt;a href="https://bugs.dolphin-emu.org/projects/emulator/issues" rel="nofollow"&gt;Issue Tracker&lt;/a&gt; | &lt;a href="https://github.com/dolphin-emu/dolphin/blob/master/Contributing.md"&gt;Coding Style&lt;/a&gt; | &lt;a href="https://www.transifex.com/projects/p/dolphin-emu/" rel="nofollow"&gt;Transifex Page&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dolphin is an emulator for running GameCube and Wii games on Windows,
Linux, macOS, and recent Android devices. It's licensed under the terms
of the GNU General Public License, version 2 or later (GPLv2+).&lt;/p&gt;
&lt;p&gt;Please read the &lt;a href="https://dolphin-emu.org/docs/faq/" rel="nofollow"&gt;FAQ&lt;/a&gt; before using Dolphin.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-system-requirements" class="anchor" aria-hidden="true" href="#system-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System Requirements&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-desktop" class="anchor" aria-hidden="true" href="#desktop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Desktop&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;OS
&lt;ul&gt;
&lt;li&gt;Windows (7 SP1 or higher is officially supported, but Vista SP2 might also work).&lt;/li&gt;
&lt;li&gt;Linux.&lt;/li&gt;
&lt;li&gt;macOS (10.10 Yosemite or higher).&lt;/li&gt;
&lt;li&gt;Unix-like systems other than Linux are not officially supported but might work.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Processor
&lt;ul&gt;
&lt;li&gt;A CPU with SSE2 support.&lt;/li&gt;
&lt;li&gt;A modern CPU (3 GHz and Dual Core, not older than 2008) is highly recommended.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Graphics
&lt;ul&gt;
&lt;li&gt;A reasonably modern graphics card (Direct3D 11.1 / OpenGL 3.3).&lt;/li&gt;
&lt;li&gt;A graphics card that supports Direct3D 11.1 / OpenGL 4.4 is recommended.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-android" class="anchor" aria-hidden="true" href="#android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Android&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;OS
&lt;ul&gt;
&lt;li&gt;Android (5.0 Lollipop or higher).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Processor
&lt;ul&gt;
&lt;li&gt;A processor with support for 64-bit applications (either ARMv8 or x86-64).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Graphics
&lt;ul&gt;
&lt;li&gt;A graphics processor that supports OpenGL ES 3.0 or higher. Performance varies heavily with &lt;a href="https://dolphin-emu.org/blog/2013/09/26/dolphin-emulator-and-opengl-drivers-hall-fameshame/" rel="nofollow"&gt;driver quality&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;A graphics processor that supports standard desktop OpenGL features is recommended for best performance.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dolphin can only be installed on devices that satisfy the above requirements. Attempting to install on an unsupported device will fail and display an error message.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-for-windows" class="anchor" aria-hidden="true" href="#building-for-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building for Windows&lt;/h2&gt;
&lt;p&gt;Use the solution file &lt;code&gt;Source/dolphin-emu.sln&lt;/code&gt; to build Dolphin on Windows.
Visual Studio 2019 16.3 is a hard requirement. Other compilers might be
able to build Dolphin on Windows but have not been tested and are not
recommended to be used. Git and Windows 10 SDK must be installed when building.&lt;/p&gt;
&lt;p&gt;Make sure to check out the Qt submodule before building:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git submodule update --init&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The "Release" solution configuration includes performance optimizations for the best user experience but complicates debugging Dolphin.
The "Debug" solution configuration is significantly slower, more verbose and less permissive but makes debugging Dolphin easier.&lt;/p&gt;
&lt;p&gt;An installer can be created by using the &lt;code&gt;Installer.nsi&lt;/code&gt; script in the
Installer directory. This will require the Nullsoft Scriptable Install System
(NSIS) to be installed. Creating an installer is not necessary to run Dolphin
since the Binary directory contains a working Dolphin distribution.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-for-linux-and-macos" class="anchor" aria-hidden="true" href="#building-for-linux-and-macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building for Linux and macOS&lt;/h2&gt;
&lt;p&gt;Dolphin requires &lt;a href="https://cmake.org/" rel="nofollow"&gt;CMake&lt;/a&gt; for systems other than Windows. Many libraries are
bundled with Dolphin and used if they're not installed on your system. CMake
will inform you if a bundled library is used or if you need to install any
missing packages yourself.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-macos-build-steps" class="anchor" aria-hidden="true" href="#macos-build-steps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macOS Build Steps:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;mkdir build&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd build&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cmake ..&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;An application bundle will be created in &lt;code&gt;./Binaries&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-linux-global-build-steps" class="anchor" aria-hidden="true" href="#linux-global-build-steps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux Global Build Steps:&lt;/h3&gt;
&lt;p&gt;To install to your system.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;mkdir build&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd build&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cmake ..&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo make install&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-linux-local-build-steps" class="anchor" aria-hidden="true" href="#linux-local-build-steps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux Local Build Steps:&lt;/h3&gt;
&lt;p&gt;Useful for development as root access is not required.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;mkdir Build&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd Build&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cmake .. -DLINUX_LOCAL_DEV=true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ln -s ../../Data/Sys Binaries/&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-linux-portable-build-steps" class="anchor" aria-hidden="true" href="#linux-portable-build-steps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux Portable Build Steps:&lt;/h3&gt;
&lt;p&gt;Can be stored on external storage and used on different Linux systems.
Or useful for having multiple distinct Dolphin setups for testing/development/TAS.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;mkdir Build&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd Build&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cmake .. -DLINUX_LOCAL_DEV=true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cp -r ../Data/Sys/ Binaries/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;touch Binaries/portable.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-building-for-android" class="anchor" aria-hidden="true" href="#building-for-android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building for Android&lt;/h2&gt;
&lt;p&gt;These instructions assume familiarity with Android development. If you do not have an
Android dev environment set up, see &lt;a href="AndroidSetup.md"&gt;AndroidSetup.md&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If using Android Studio, import the Gradle project located in &lt;code&gt;./Source/Android&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Android apps are compiled using a build system called Gradle. Dolphin's native component,
however, is compiled using CMake. The Gradle script will attempt to run a CMake build
automatically while building the Java code.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-uninstalling" class="anchor" aria-hidden="true" href="#uninstalling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Uninstalling&lt;/h2&gt;
&lt;p&gt;When Dolphin has been installed with the NSIS installer, you can uninstall
Dolphin like any other Windows application.&lt;/p&gt;
&lt;p&gt;Linux users can run &lt;code&gt;cat install_manifest.txt | xargs -d '\n' rm&lt;/code&gt; as root from the build directory
to uninstall Dolphin from their system.&lt;/p&gt;
&lt;p&gt;macOS users can simply delete Dolphin.app to uninstall it.&lt;/p&gt;
&lt;p&gt;Additionally, you'll want to remove the global user directory (see below to
see where it's stored) if you don't plan to reinstall Dolphin.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-command-line-usage" class="anchor" aria-hidden="true" href="#command-line-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command Line Usage&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Usage: Dolphin [-h] [-d] [-l] [-e &amp;lt;str&amp;gt;] [-b] [-V &amp;lt;str&amp;gt;] [-A &amp;lt;str&amp;gt;]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-h, --help Show this help message&lt;/li&gt;
&lt;li&gt;-d, --debugger Show the debugger pane and additional View menu options&lt;/li&gt;
&lt;li&gt;-l, --logger Open the logger&lt;/li&gt;
&lt;li&gt;-e, --exec= Load the specified file (DOL,ELF,WAD,GCM,ISO)&lt;/li&gt;
&lt;li&gt;-b, --batch Exit Dolphin with emulator&lt;/li&gt;
&lt;li&gt;-V, --video_backend= Specify a video backend&lt;/li&gt;
&lt;li&gt;-A, --audio_emulation= Low level (LLE) or high level (HLE) audio&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Available DSP emulation engines are HLE (High Level Emulation) and
LLE (Low Level Emulation). HLE is fast but often less accurate while LLE is
slow but close to perfect. Note that LLE has two submodes (Interpreter and
Recompiler), which cannot be selected from the command line.&lt;/p&gt;
&lt;p&gt;Available video backends are "D3D" (only available on Windows) and
"OGL". There's also "Software Renderer", which uses the CPU for rendering and
is intended for debugging purposes only.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sys-files" class="anchor" aria-hidden="true" href="#sys-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sys Files&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;wiitdb.txt&lt;/code&gt;: Wii title database from &lt;a href="https://www.gametdb.com/" rel="nofollow"&gt;GameTDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;totaldb.dsy&lt;/code&gt;: Database of symbols (for devs only)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GC/font_western.bin&lt;/code&gt;: font dumps&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GC/font_japanese.bin&lt;/code&gt;: font dumps&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GC/dsp_coef.bin&lt;/code&gt;: DSP dumps&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GC/dsp_rom.bin&lt;/code&gt;: DSP dumps&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Wii/clientca.pem&lt;/code&gt;: Wii network certificate&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Wii/clientcacakey.pem&lt;/code&gt;: Wii network certificate&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Wii/rootca.pem&lt;/code&gt;: Wii network certificate&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The DSP dumps included with Dolphin have been written from scratch and do not
contain any copyrighted material. They should work for most purposes, however
some games implement copy protection by checksumming the dumps. You will need
to dump the DSP files from a console and replace the default dumps if you want
to fix those issues.&lt;/p&gt;
&lt;p&gt;Wii network certificates must be extracted from a Wii IOS. A guide for that can be found &lt;a href="https://wiki.dolphin-emu.org/index.php?title=Wii_Network_Guide" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-folder-structure" class="anchor" aria-hidden="true" href="#folder-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Folder Structure&lt;/h2&gt;
&lt;p&gt;These folders are installed read-only and should not be changed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GameSettings&lt;/code&gt;: per-game default settings database&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GC&lt;/code&gt;: DSP and font dumps&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Maps&lt;/code&gt;: symbol tables (dev only)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Shaders&lt;/code&gt;: post-processing shaders&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Themes&lt;/code&gt;: icon themes for GUI&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Resources&lt;/code&gt;: icons that are theme-agnostic&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Wii&lt;/code&gt;: default Wii NAND contents&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-packaging-and-udev" class="anchor" aria-hidden="true" href="#packaging-and-udev"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Packaging and udev&lt;/h2&gt;
&lt;p&gt;The Data folder contains a udev rule file for the official GameCube controller
adapter and the Mayflash DolphinBar. Package maintainers can use that file in their packages for Dolphin.
Users compiling Dolphin on Linux can also just copy the file to their udev
rules folder.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-user-folder-structure" class="anchor" aria-hidden="true" href="#user-folder-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;User Folder Structure&lt;/h2&gt;
&lt;p&gt;A number of user writeable directories are created for caching purposes or for
allowing the user to edit their contents. On macOS and Linux these folders are
stored in &lt;code&gt;~/Library/Application Support/Dolphin/&lt;/code&gt; and &lt;code&gt;~/.dolphin-emu&lt;/code&gt;
respectively, but can be overwritten by setting the environment variable
&lt;code&gt;DOLPHIN_EMU_USERPATH&lt;/code&gt;. On Windows the user directory is stored in the &lt;code&gt;My Documents&lt;/code&gt;
folder by default, but there are various way to override this behavior:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Creating a file called &lt;code&gt;portable.txt&lt;/code&gt; next to the Dolphin executable will
store the user directory in a local directory called "User" next to the
Dolphin executable.&lt;/li&gt;
&lt;li&gt;If the registry string value &lt;code&gt;LocalUserConfig&lt;/code&gt; exists in
&lt;code&gt;HKEY_CURRENT_USER/Software/Dolphin Emulator&lt;/code&gt; and has the value &lt;strong&gt;1&lt;/strong&gt;,
Dolphin will always start in portable mode.&lt;/li&gt;
&lt;li&gt;If the registry string value &lt;code&gt;UserConfigPath&lt;/code&gt; exists in
&lt;code&gt;HKEY_CURRENT_USER/Software/Dolphin Emulator&lt;/code&gt;, the user folders will be
stored in the directory given by that string. The other two methods will be
prioritized over this setting.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;List of user folders:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Cache&lt;/code&gt;: used to cache the ISO list&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Config&lt;/code&gt;: configuration files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Dump&lt;/code&gt;: anything dumped from Dolphin&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GameConfig&lt;/code&gt;: additional settings to be applied per-game&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GC&lt;/code&gt;: memory cards and system BIOS&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Load&lt;/code&gt;: custom textures&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Logs&lt;/code&gt;: logs, if enabled&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ScreenShots&lt;/code&gt;: screenshots taken via Dolphin&lt;/li&gt;
&lt;li&gt;&lt;code&gt;StateSaves&lt;/code&gt;: save states&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Wii&lt;/code&gt;: Wii NAND contents&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-custom-textures" class="anchor" aria-hidden="true" href="#custom-textures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Textures&lt;/h2&gt;
&lt;p&gt;Custom textures have to be placed in the user directory under
&lt;code&gt;Load/Textures/[GameID]/&lt;/code&gt;. You can find the Game ID by right-clicking a game
in the ISO list and selecting "ISO Properties".&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>dolphin-emu</author><guid isPermaLink="false">https://github.com/dolphin-emu/dolphin</guid><pubDate>Wed, 04 Dec 2019 00:07:00 GMT</pubDate></item><item><title>HowardHinnant/date #8 in C++, This week</title><link>https://github.com/HowardHinnant/date</link><description>&lt;p&gt;&lt;i&gt;A date and time library based on the C++11/14/17 &lt;chrono&gt; header&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-date" class="anchor" aria-hidden="true" href="#date"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Date&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/HowardHinnant/date" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/adcd83ecb4ca3f99fff4336c91032bb8e83cf714/68747470733a2f2f7472617669732d63692e6f72672f486f7761726448696e6e616e742f646174652e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/HowardHinnant/date.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/HowardHinnant/date?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6daee7c1baff202fe9633bab235d55da7483aad2/68747470733a2f2f6261646765732e6769747465722e696d2f486f7761726448696e6e616e742f646174652e737667" alt="Join the chat at https://gitter.im/HowardHinnant/date" data-canonical-src="https://badges.gitter.im/HowardHinnant/date.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://wandbox.org/permlink/L8MwjzSSC3fXXrMd" rel="nofollow"&gt;Try it out on wandbox!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-summary" class="anchor" aria-hidden="true" href="#summary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Summary&lt;/h2&gt;
&lt;p&gt;This is actually several separate C++11/C++14/C++17 libraries:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;"date.h"&lt;/code&gt; is a header-only library which builds upon &lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt;.  It adds some new &lt;code&gt;duration&lt;/code&gt; types, and new &lt;code&gt;time_point&lt;/code&gt; types.  It also adds "field" types such as &lt;code&gt;year_month_day&lt;/code&gt; which is a struct &lt;code&gt;{year, month, day}&lt;/code&gt;.  And it provides convenient means to convert between the "field" types and the &lt;code&gt;time_point&lt;/code&gt; types.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Documentation: &lt;a href="http://howardhinnant.github.io/date/date.html" rel="nofollow"&gt;http://howardhinnant.github.io/date/date.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Video: &lt;a href="https://www.youtube.com/watch?v=tzyGjOm8AKo" rel="nofollow"&gt;https://www.youtube.com/watch?v=tzyGjOm8AKo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Slides: &lt;a href="http://schd.ws/hosted_files/cppcon2015/43/hinnant_dates.pdf" rel="nofollow"&gt;http://schd.ws/hosted_files/cppcon2015/43/hinnant_dates.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;"tz.h"&lt;/code&gt; / &lt;code&gt;"tz.cpp"&lt;/code&gt;  are a timezone library built on top of the &lt;code&gt;"date.h"&lt;/code&gt; library.  This timezone library is a complete parser of the IANA timezone database.  It provides for an easy way to access all of the data in this database, using the types from &lt;code&gt;"date.h"&lt;/code&gt; and &lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt;.  The IANA database also includes data on leap seconds, and this library provides utilities to compute with that information as well.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Documentation: &lt;a href="http://howardhinnant.github.io/date/tz.html" rel="nofollow"&gt;http://howardhinnant.github.io/date/tz.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Video: &lt;a href="https://www.youtube.com/watch?v=Vwd3pduVGKY" rel="nofollow"&gt;https://www.youtube.com/watch?v=Vwd3pduVGKY&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Slides: &lt;a href="http://schd.ws/hosted_files/cppcon2016/0f/Welcome%20To%20The%20Time%20Zone%20-%20Howard%20Hinnant%20-%20CppCon%202016.pdf" rel="nofollow"&gt;http://schd.ws/hosted_files/cppcon2016/0f/Welcome%20To%20The%20Time%20Zone%20-%20Howard%20Hinnant%20-%20CppCon%202016.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;"iso_week.h"&lt;/code&gt; is a header-only library built on top of the &lt;code&gt;"date.h"&lt;/code&gt; library which implements the ISO week date calendar.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Documentation: &lt;a href="http://howardhinnant.github.io/date/iso_week.html" rel="nofollow"&gt;http://howardhinnant.github.io/date/iso_week.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;"julian.h"&lt;/code&gt; is a header-only library built on top of the &lt;code&gt;"date.h"&lt;/code&gt; library which implements a proleptic Julian calendar which is fully interoperable with everything above.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Documentation: &lt;a href="http://howardhinnant.github.io/date/julian.html" rel="nofollow"&gt;http://howardhinnant.github.io/date/julian.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;"islamic.h"&lt;/code&gt; is a header-only library built on top of the &lt;code&gt;"date.h"&lt;/code&gt; library which implements a proleptic Islamic calendar which is fully interoperable with everything above.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Documentation: &lt;a href="http://howardhinnant.github.io/date/islamic.html" rel="nofollow"&gt;http://howardhinnant.github.io/date/islamic.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-standardization" class="anchor" aria-hidden="true" href="#standardization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Standardization&lt;/h2&gt;
&lt;p&gt;Slightly modified versions of &lt;code&gt;"date.h"&lt;/code&gt; and &lt;code&gt;"tz.h"&lt;/code&gt; were voted into the C++20 working draft at the Jacksonville FL meeting on 2018-03-17:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://howardhinnant.github.io/date/d0355r7.html" rel="nofollow"&gt;http://howardhinnant.github.io/date/d0355r7.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-build--test" class="anchor" aria-hidden="true" href="#build--test"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build &amp;amp; Test&lt;/h2&gt;
&lt;p&gt;You can download and install Date using the &lt;a href="https://github.com/Microsoft/vcpkg"&gt;vcpkg&lt;/a&gt; dependency manager:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/Microsoft/vcpkg.git
cd vcpkg
./bootstrap-vcpkg.sh
./vcpkg integrate install
vcpkg install date
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The Date port in vcpkg is updated by Microsoft team members and community contributors. If the version falls behind, please &lt;a href="https://github.com/Microsoft/vcpkg"&gt;create an issue or pull request&lt;/a&gt; on the vcpkg repository.&lt;/p&gt;
&lt;p&gt;You can optionally build using &lt;a href="https://cmake.org/" rel="nofollow"&gt;CMake&lt;/a&gt;. Here is a guide of how to build and test using the CMake Makefile generator.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mkdir build
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; build
cmake ../
cmake --build &lt;span class="pl-c1"&gt;.&lt;/span&gt; --target testit &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;¬†Consider '-- -j4' for multithreading&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-projects-using-this-library" class="anchor" aria-hidden="true" href="#projects-using-this-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Projects using this library&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.safe.com" rel="nofollow"&gt;www.safe.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.webtoolkit.eu/wt" rel="nofollow"&gt;www.webtoolkit.eu/wt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ViewTouch/viewtouch"&gt;https://github.com/ViewTouch/viewtouch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://routinghub.com" rel="nofollow"&gt;https://routinghub.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/valhalla"&gt;https://github.com/valhalla&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you would like your project (or product) on this list, just let me know.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>HowardHinnant</author><guid isPermaLink="false">https://github.com/HowardHinnant/date</guid><pubDate>Wed, 04 Dec 2019 00:08:00 GMT</pubDate></item><item><title>MarlinFirmware/Marlin #9 in C++, This week</title><link>https://github.com/MarlinFirmware/Marlin</link><description>&lt;p&gt;&lt;i&gt;Optimized firmware for RepRap 3D printers based on the Arduino platform.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-marlin-3d-printer-firmware" class="anchor" aria-hidden="true" href="#marlin-3d-printer-firmware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Marlin 3D Printer Firmware&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/MarlinFirmware/Marlin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ad4b7e0ca514ab5f51a7d37c86e883c52a1921ef/68747470733a2f2f7472617669732d63692e6f72672f4d61726c696e4669726d776172652f4d61726c696e2e7376673f6272616e63683d322e302e78" alt="Build Status" data-canonical-src="https://travis-ci.org/MarlinFirmware/Marlin.svg?branch=2.0.x" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/01760ea0e7e753c89822cf7b9dbeb3740aa8f386/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d61726c696e6669726d776172652f6d61726c696e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/01760ea0e7e753c89822cf7b9dbeb3740aa8f386/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d61726c696e6669726d776172652f6d61726c696e2e737667" alt="GitHub" data-canonical-src="https://img.shields.io/github/license/marlinfirmware/marlin.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/cdc4c42d12df25184203715a1954a81bdb153038/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f6d61726c696e6669726d776172652f6d61726c696e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/cdc4c42d12df25184203715a1954a81bdb153038/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f6d61726c696e6669726d776172652f6d61726c696e2e737667" alt="GitHub contributors" data-canonical-src="https://img.shields.io/github/contributors/marlinfirmware/marlin.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/764e40a1787cb51eeaba2d62bbc3551dc1d029d1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652f6d61726c696e6669726d776172652f6d61726c696e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/764e40a1787cb51eeaba2d62bbc3551dc1d029d1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652f6d61726c696e6669726d776172652f6d61726c696e2e737667" alt="GitHub Release Date" data-canonical-src="https://img.shields.io/github/release-date/marlinfirmware/marlin.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="buildroot/share/pixmaps/logo/marlin-250.png"&gt;&lt;img align="right" width="175" src="buildroot/share/pixmaps/logo/marlin-250.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Additional documentation can be found at the &lt;a href="http://marlinfw.org/" rel="nofollow"&gt;Marlin Home Page&lt;/a&gt;.
Please let us know if Marlin misbehaves in any way. Volunteers are standing by!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-marlin-20" class="anchor" aria-hidden="true" href="#marlin-20"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Marlin 2.0&lt;/h2&gt;
&lt;p&gt;Marlin 2.0 takes this popular RepRap firmware to the next level by adding support for much faster 32-bit and ARM-based boards while improving support for 8-bit AVR boards. Read about Marlin's decision to use a "Hardware Abstraction Layer" below.&lt;/p&gt;
&lt;p&gt;Download earlier versions of Marlin on the &lt;a href="https://github.com/MarlinFirmware/Marlin/releases"&gt;Releases page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-marlin-20" class="anchor" aria-hidden="true" href="#building-marlin-20"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Marlin 2.0&lt;/h2&gt;
&lt;p&gt;To build Marlin 2.0 you'll need &lt;a href="https://www.arduino.cc/en/main/software" rel="nofollow"&gt;Arduino IDE 1.8.8 or newer&lt;/a&gt; or &lt;a href="http://docs.platformio.org/en/latest/ide.html#platformio-ide" rel="nofollow"&gt;PlatformIO&lt;/a&gt;. Detailed build and install instructions are posted at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://marlinfw.org/docs/basics/install_arduino.html" rel="nofollow"&gt;Installing Marlin (Arduino)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://marlinfw.org/docs/basics/install_platformio_vscode.html" rel="nofollow"&gt;Installing Marlin (VSCode)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-supported-platforms" class="anchor" aria-hidden="true" href="#supported-platforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Platforms&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Platform&lt;/th&gt;
&lt;th&gt;MCU&lt;/th&gt;
&lt;th&gt;Example Boards&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.arduino.cc/" rel="nofollow"&gt;Arduino AVR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ATmega&lt;/td&gt;
&lt;td&gt;RAMPS, Melzi, RAMBo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://www.microchip.com/wwwproducts/en/AT90USB1286" rel="nofollow"&gt;Teensy++ 2.0&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;AT90USB1286&lt;/td&gt;
&lt;td&gt;Printrboard&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.arduino.cc/en/Guide/ArduinoDue" rel="nofollow"&gt;Arduino Due&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SAM3X8E&lt;/td&gt;
&lt;td&gt;RAMPS-FD, RADDS, RAMPS4DUE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://www.nxp.com/products/microcontrollers-and-processors/arm-based-processors-and-mcus/lpc-cortex-m-mcus/lpc1700-cortex-m3/512kb-flash-64kb-sram-ethernet-usb-lqfp100-package:LPC1768FBD100" rel="nofollow"&gt;LPC1768&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ARM¬Æ Cortex-M3&lt;/td&gt;
&lt;td&gt;MKS SBASE, Re-ARM, Selena Compact&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.nxp.com/products/processors-and-microcontrollers/arm-microcontrollers/general-purpose-mcus/lpc1700-cortex-m3/512kb-flash-64kb-sram-ethernet-usb-lqfp100-package:LPC1769FBD100" rel="nofollow"&gt;LPC1769&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ARM¬Æ Cortex-M3&lt;/td&gt;
&lt;td&gt;Smoothieboard, Azteeg X5 mini, TH3D EZBoard&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.st.com/en/microcontrollers-microprocessors/stm32f103.html" rel="nofollow"&gt;STM32F103&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ARM¬Æ Cortex-M3&lt;/td&gt;
&lt;td&gt;Malyan M200, GTM32 Pro, MKS Robin, BTT SKR Mini&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.st.com/en/microcontrollers-microprocessors/stm32f401.html" rel="nofollow"&gt;STM32F401&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ARM¬Æ Cortex-M4&lt;/td&gt;
&lt;td&gt;ARMED, Rumba32, SKR Pro, Lerdge, FYSETC S6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.st.com/en/microcontrollers-microprocessors/stm32f7x6.html" rel="nofollow"&gt;STM32F7x6&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ARM¬Æ Cortex-M4&lt;/td&gt;
&lt;td&gt;The Borg, RemRam V1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.adafruit.com/product/4064" rel="nofollow"&gt;SAMD51P20A&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ARM¬Æ Cortex-M4&lt;/td&gt;
&lt;td&gt;Adafruit Grand Central M4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.pjrc.com/store/teensy35.html" rel="nofollow"&gt;Teensy 3.5&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ARM¬Æ Cortex-M4&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.pjrc.com/store/teensy36.html" rel="nofollow"&gt;Teensy 3.6&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ARM¬Æ Cortex-M4&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-submitting-changes" class="anchor" aria-hidden="true" href="#submitting-changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Submitting Changes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Submit &lt;strong&gt;Bug Fixes&lt;/strong&gt; as Pull Requests to the (&lt;a href="https://github.com/MarlinFirmware/Marlin/tree/bugfix-2.0.x"&gt;bugfix-2.0.x&lt;/a&gt;) branch.&lt;/li&gt;
&lt;li&gt;Submit &lt;strong&gt;New Features&lt;/strong&gt; to the (&lt;a href="https://github.com/MarlinFirmware/Marlin/tree/dev-2.0.x"&gt;dev-2.0.x&lt;/a&gt;) branch.&lt;/li&gt;
&lt;li&gt;Follow the &lt;a href="http://marlinfw.org/docs/development/coding_standards.html" rel="nofollow"&gt;Coding Standards&lt;/a&gt; to gain points with the maintainers.&lt;/li&gt;
&lt;li&gt;Please submit your questions and concerns to the &lt;a href="https://github.com/MarlinFirmware/Marlin/issues"&gt;Issue Queue&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-marlin-support" class="anchor" aria-hidden="true" href="#marlin-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Marlin Support&lt;/h2&gt;
&lt;p&gt;For best results getting help with configuration and troubleshooting, please use the following resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://marlinfw.org" rel="nofollow"&gt;Marlin Documentation&lt;/a&gt; - Official Marlin documentation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discord.gg/n5NJ59y" rel="nofollow"&gt;Marlin Discord&lt;/a&gt; - Discuss issues with Marlin users and developers&lt;/li&gt;
&lt;li&gt;Facebook Group &lt;a href="https://www.facebook.com/groups/1049718498464482/" rel="nofollow"&gt;"Marlin Firmware"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;RepRap.org &lt;a href="http://forums.reprap.org/list.php?415" rel="nofollow"&gt;Marlin Forum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discuss.toms3d.org/" rel="nofollow"&gt;Tom's 3D Forums&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Facebook Group &lt;a href="https://www.facebook.com/groups/3Dtechtalk/" rel="nofollow"&gt;"Marlin Firmware for 3D Printers"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/results?search_query=marlin+configuration" rel="nofollow"&gt;Marlin Configuration&lt;/a&gt; on YouTube&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;The current Marlin dev team consists of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scott Lahteine [&lt;a href="https://github.com/thinkyhead"&gt;@thinkyhead&lt;/a&gt;] - USA ¬† &lt;a href="http://www.thinkyhead.com/donate-to-marlin" rel="nofollow"&gt;Donate&lt;/a&gt; / Flattr: &lt;a href="https://flattr.com/submit/auto?user_id=thinkyhead&amp;amp;url=https://github.com/MarlinFirmware/Marlin&amp;amp;title=Marlin&amp;amp;language=&amp;amp;tags=github&amp;amp;category=software" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/739a757846f69c1cc10163619eec008e871b591b/687474703a2f2f6170692e666c617474722e636f6d2f627574746f6e2f666c617474722d62616467652d6c617267652e706e67" alt="Flattr Scott" data-canonical-src="http://api.flattr.com/button/flattr-badge-large.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Roxanne Neufeld [&lt;a href="https://github.com/Roxy-3D"&gt;@Roxy-3D&lt;/a&gt;] - USA&lt;/li&gt;
&lt;li&gt;Chris Pepper [&lt;a href="https://github.com/p3p"&gt;@p3p&lt;/a&gt;] - UK&lt;/li&gt;
&lt;li&gt;Bob Kuhn [&lt;a href="https://github.com/Bob-the-Kuhn"&gt;@Bob-the-Kuhn&lt;/a&gt;] - USA&lt;/li&gt;
&lt;li&gt;Jo√£o Brazio [&lt;a href="https://github.com/jbrazio"&gt;@jbrazio&lt;/a&gt;] - Portugal&lt;/li&gt;
&lt;li&gt;Erik van der Zalm [&lt;a href="https://github.com/ErikZalm"&gt;@ErikZalm&lt;/a&gt;] - Netherlands ¬† &lt;a href="https://flattr.com/submit/auto?user_id=ErikZalm&amp;amp;url=https://github.com/MarlinFirmware/Marlin&amp;amp;title=Marlin&amp;amp;language=&amp;amp;tags=github&amp;amp;category=software" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/739a757846f69c1cc10163619eec008e871b591b/687474703a2f2f6170692e666c617474722e636f6d2f627574746f6e2f666c617474722d62616467652d6c617267652e706e67" alt="Flattr Erik" data-canonical-src="http://api.flattr.com/button/flattr-badge-large.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Marlin is published under the &lt;a href="/LICENSE"&gt;GPL license&lt;/a&gt; because we believe in open development. The GPL comes with both rights and obligations. Whether you use Marlin firmware as the driver for your open or closed-source product, you must keep Marlin open, and you must provide your compatible Marlin source code to end users upon request. The most straightforward way to comply with the Marlin license is to make a fork of Marlin on Github, perform your modifications, and direct users to your modified fork.&lt;/p&gt;
&lt;p&gt;While we can't prevent the use of this code in products (3D printers, CNC, etc.) that are closed source or crippled by a patent, we would prefer that you choose another firmware or, better yet, make your own.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>MarlinFirmware</author><guid isPermaLink="false">https://github.com/MarlinFirmware/Marlin</guid><pubDate>Wed, 04 Dec 2019 00:09:00 GMT</pubDate></item><item><title>microsoft/SEAL #10 in C++, This week</title><link>https://github.com/microsoft/SEAL</link><description>&lt;p&gt;&lt;i&gt;Microsoft SEAL is an easy-to-use and powerful homomorphic encryption library.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-microsoft-seal" class="anchor" aria-hidden="true" href="#microsoft-seal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Microsoft SEAL&lt;/h1&gt;
&lt;p&gt;Microsoft SEAL is an easy-to-use open-source (&lt;a href="LICENSE"&gt;MIT licensed&lt;/a&gt;) homomorphic
encryption library developed by the Cryptography and Privacy Research group at
Microsoft. Microsoft SEAL is written in modern standard C++ and has no external
dependencies, making it easy to compile and run in many different environments.
For more information about the Microsoft SEAL project, see
&lt;a href="https://www.microsoft.com/en-us/research/project/microsoft-seal" rel="nofollow"&gt;sealcrypto.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This document pertains to Microsoft SEAL version 3.4. Users of previous versions
of the library should look at the &lt;a href="Changes.md"&gt;list of changes&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#core-concepts"&gt;Core Concepts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#homomorphic-encryption"&gt;Homomorphic Encryption&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#microsoft-seal-1"&gt;Microsoft SEAL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#installing-microsoft-seal"&gt;Installing Microsoft SEAL&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#windows"&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#linux-and-macos"&gt;Linux and macOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#from-nuget-package"&gt;From NuGet package&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#enabling-optional-dependencies"&gt;Enabling Optional Dependencies&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#microsoft-gsl"&gt;Microsoft GSL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#zlib"&gt;ZLIB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#building-microsoft-seal-for-net"&gt;Building Microsoft SEAL for .NET&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#windows-1"&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#linux-and-macos-1"&gt;Linux and macOS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#citing-microsoft-seal"&gt;Citing Microsoft SEAL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-core-concepts" class="anchor" aria-hidden="true" href="#core-concepts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core Concepts&lt;/h2&gt;
&lt;p&gt;Most encryption schemes consist of three functionalities: key generation, encryption,
and decryption. Symmetric-key encryption schemes use the same secret key for both
encryption and decryption; public-key encryption schemes use separately a public
key for encryption and a secret key for decryption. Therefore, public-key encryption
schemes allow anyone who knows the public key to encrypt data, but only those who
know the secret key can decrypt and read the data. Symmetric-key encryption can be
used for efficiently encrypting very large amounts of data, and enables secure
outsourced cloud storage. Public-key encryption is a fundamental concept that
enables secure online communication today, but is typically much less efficient
than symmetric-key encryption.&lt;/p&gt;
&lt;p&gt;While traditional symmetric- and public-key encryption can be used for secure storage
and communication, any outsourced computation will necessarily require such encryption
layers to be removed before computation can take place. Therefore, cloud services
providing outsourced computation capabilities must have access to the secret keys,
and implement access policies to prevent unauthorized employees from getting access
to these keys.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-homomorphic-encryption" class="anchor" aria-hidden="true" href="#homomorphic-encryption"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Homomorphic Encryption&lt;/h2&gt;
&lt;p&gt;Homomorphic encryption refers to encryption schemes that allow the cloud to compute
directly on the encrypted data, without requiring the data to be decrypted first.
The results of such encrypted computations remain encrypted, and can be only decrypted
with the secret key (by the data owner). Multiple homomorphic encryption schemes
with different capabilities and trade-offs have been invented over the past decade;
most of these are public-key encryption schemes, although the public-key functionality
may not always be needed.&lt;/p&gt;
&lt;p&gt;Homomorphic encryption is not a generic technology: only some computations on
encrypted data are possible. It also comes with a substantial performance overhead,
so computations that are already very costly to perform on unencrypted data are
likely to be infeasible on encrypted data. Moreover, data encrypted with homomorphic
encryption is many times larger than unencrypted data, so it may not make sense to
encrypt, e.g., entire large databases, with this technology. Instead, meaningful
use-cases are in scenarios where strict privacy requirements prohibit unencrypted
cloud computation altogether, but the computations themselves are fairly lightweight.&lt;/p&gt;
&lt;p&gt;Typically, homomorphic encryption schemes have a single secret key which is held
by the data owner. For scenarios where multiple different private data owners wish
to engage in collaborative computation, homomorphic encryption is probably not
a reasonable solution.&lt;/p&gt;
&lt;p&gt;Homomorphic encryption cannot be used to enable data scientist to circumvent GDPR.
For example, there is no way for a cloud service to use homomorphic encryption to
draw insights from encrypted customer data. Instead, results of encrypted computations
remain encrypted and can only be decrypted by the owner of the data, e.g., a cloud
service customer.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-microsoft-seal-1" class="anchor" aria-hidden="true" href="#microsoft-seal-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Microsoft SEAL&lt;/h2&gt;
&lt;p&gt;Microsoft SEAL is a homomorphic encryption library that allows additions and
multiplications to be performed on encrypted integers or real numbers. Other
operations, such as encrypted comparison, sorting, or regular expressions, are
in most cases not feasible to evaluate on encrypted data using this technology.
Therefore, only specific privacy-critical cloud computation parts of programs
should be implemented with Microsoft SEAL.&lt;/p&gt;
&lt;p&gt;It is not always easy or straightfoward to translate an unencrypted computation
into a computation on encrypted data, for example, it is not possible to branch
on encrypted data. Microsoft SEAL itself has a steep learning curve and requires
the user to understand many homomorphic encryption specific concepts, even though
in the end the API is not too complicated. Even if a user is able to program and
run a specific computation using Microsoft SEAL, the difference between efficient
and inefficient implementations can be several orders of magnitude, and it can be
hard for new users to know how to improve the performance of their computation.&lt;/p&gt;
&lt;p&gt;Microsoft SEAL comes with two different homomorphic encryption schemes with very
different properties. The BFV scheme allows modular arithmetic to be performed on
encrypted integers. The CKKS scheme allows additions and multiplications on encrypted
real or complex numbers, but yields only approximate results. In applications such
as summing up encrypted real numbers, evaluating machine learning models on encrypted
data, or computing distances of encrypted locations CKKS is going to be by far the
best choice. For applications where exact values are necessary, the BFV scheme is
the only choice.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installing-microsoft-seal" class="anchor" aria-hidden="true" href="#installing-microsoft-seal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing Microsoft SEAL&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h2&gt;
&lt;p&gt;Microsoft SEAL comes with a Microsoft Visual Studio 2019 solution file &lt;code&gt;SEAL.sln&lt;/code&gt;
that can be used to conveniently build the library, examples, and unit tests. Visual
Studio 2017 version 15.3 or newer is required to build Microsoft SEAL.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-platform" class="anchor" aria-hidden="true" href="#platform"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Platform&lt;/h4&gt;
&lt;p&gt;The Visual Studio solution &lt;code&gt;SEAL.sln&lt;/code&gt; is configured to build Microsoft SEAL both
for &lt;code&gt;Win32&lt;/code&gt; and &lt;code&gt;x64&lt;/code&gt; platforms. Please choose the right platform before building
Microsoft SEAL. The &lt;code&gt;SEALNetNative&lt;/code&gt; project or the .NET wrapper library &lt;code&gt;SEALNet&lt;/code&gt;
can only be built for &lt;code&gt;x64&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-debug-and-release-builds" class="anchor" aria-hidden="true" href="#debug-and-release-builds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debug and Release builds&lt;/h4&gt;
&lt;p&gt;You can easily switch from Visual Studio build configuration menu whether Microsoft
SEAL should be built in &lt;code&gt;Debug&lt;/code&gt; mode (no optimizations) or in &lt;code&gt;Release&lt;/code&gt; mode. Please
note that &lt;code&gt;Debug&lt;/code&gt; mode should not be used except for debugging Microsoft SEAL itself,
as the performance will be orders of magnitude worse than in &lt;code&gt;Release&lt;/code&gt; mode.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-building-microsoft-seal" class="anchor" aria-hidden="true" href="#building-microsoft-seal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Microsoft SEAL&lt;/h4&gt;
&lt;p&gt;Build the SEAL project &lt;code&gt;native\src\SEAL.vcxproj&lt;/code&gt; from &lt;code&gt;SEAL.sln&lt;/code&gt;. This results in
the static library &lt;code&gt;seal.lib&lt;/code&gt; to be created in &lt;code&gt;native\lib\$(Platform)\$(Configuration)&lt;/code&gt;.
When linking with applications, you need to add &lt;code&gt;native\src\&lt;/code&gt; (full path) as an
include directory for Microsoft SEAL header files.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-building-examples" class="anchor" aria-hidden="true" href="#building-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Examples&lt;/h4&gt;
&lt;p&gt;Build the SEALExamples project &lt;code&gt;native\examples\SEALExamples.vcxproj&lt;/code&gt; from &lt;code&gt;SEAL.sln&lt;/code&gt;.
This results in an executable &lt;code&gt;sealexamples.exe&lt;/code&gt; to be created in
&lt;code&gt;native\bin\$(Platform)\$(Configuration)&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-building-unit-tests" class="anchor" aria-hidden="true" href="#building-unit-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Unit Tests&lt;/h4&gt;
&lt;p&gt;The unit tests require the Google Test framework to be installed. The appropriate
NuGet package is already listed in &lt;code&gt;native\tests\packages.config&lt;/code&gt;, so once you
attempt to build the SEALTest project &lt;code&gt;native\tests\SEALTest.vcxproj&lt;/code&gt; from &lt;code&gt;SEAL.sln&lt;/code&gt;
Visual Studio will automatically download and install it for you.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-linux-and-macos" class="anchor" aria-hidden="true" href="#linux-and-macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux and macOS&lt;/h2&gt;
&lt;p&gt;Microsoft SEAL is very easy to configure and build in Linux and macOS using CMake
(&amp;gt;= 3.12). A modern version of GNU G++ (&amp;gt;= 6.0) or Clang++ (&amp;gt;= 5.0) is needed. In macOS
the Xcode toolchain (&amp;gt;= 9.3) will work.&lt;/p&gt;
&lt;p&gt;In macOS you will need CMake with command line tools. For this, you can either&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;install the cmake package with &lt;a href="https://brew.sh" rel="nofollow"&gt;Homebrew&lt;/a&gt;, or&lt;/li&gt;
&lt;li&gt;download CMake directly from &lt;a href="https://cmake.org/download" rel="nofollow"&gt;cmake.org/download&lt;/a&gt; and
&lt;a href="https://stackoverflow.com/questions/30668601/installing-cmake-command-line-tools-on-a-mac" rel="nofollow"&gt;enable command line tools&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Below we give instructions for how to configure, build, and install Microsoft SEAL either
system-wide (global install), or for a single user (local install). A system-wide
install requires elevated (root) privileges.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-debug-and-release-modes" class="anchor" aria-hidden="true" href="#debug-and-release-modes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debug and Release Modes&lt;/h4&gt;
&lt;p&gt;You can easily switch from CMake configuration options whether Microsoft SEAL should be
built in &lt;code&gt;Debug&lt;/code&gt; mode (no optimizations) or in &lt;code&gt;Release&lt;/code&gt; mode. Please note that &lt;code&gt;Debug&lt;/code&gt;
mode should not be used except for debugging Microsoft SEAL itself, as the performance
will be orders of magnitude worse than in &lt;code&gt;Release&lt;/code&gt; mode.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-building-microsoft-seal-1" class="anchor" aria-hidden="true" href="#building-microsoft-seal-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Microsoft SEAL&lt;/h4&gt;
&lt;p&gt;We assume that Microsoft SEAL has been cloned into a directory called &lt;code&gt;SEAL&lt;/code&gt; and all
commands presented below are assumed to be executed in the directory &lt;code&gt;SEAL&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can build Microsoft SEAL for your machine by executing the following commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd native/src
cmake .
make
cd ../..
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-building-examples-1" class="anchor" aria-hidden="true" href="#building-examples-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Examples&lt;/h4&gt;
&lt;p&gt;After building Microsoft SEAL, you can build the examples as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd native/examples
cmake .
make
cd ../..
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;sealexamples&lt;/code&gt; executable can now be found in &lt;code&gt;native/bin/&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-building-unit-tests-1" class="anchor" aria-hidden="true" href="#building-unit-tests-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Unit Tests&lt;/h4&gt;
&lt;p&gt;To build the unit tests you will need the &lt;a href="https://github.com/google/googletest"&gt;GoogleTest&lt;/a&gt;
framework, which is included in Microsoft SEAL as a git submodule. To download the GoogleTest
source files, do:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git submodule update --init
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This needs to be executed only once, and can be skipped if Microsoft SEAL was cloned with
&lt;code&gt;git --recurse-submodules&lt;/code&gt;. To build the tests, do:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd native/tests
cmake .
make
cd ../..
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;sealtest&lt;/code&gt; executable can now be found in &lt;code&gt;native/bin/&lt;/code&gt;. All unit tests should pass
successfully.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installing-microsoft-seal-1" class="anchor" aria-hidden="true" href="#installing-microsoft-seal-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing Microsoft SEAL&lt;/h3&gt;
&lt;p&gt;If you have root access to the system you can install Microsoft SEAL system-wide as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd native/src
cmake .
make
sudo make install
cd ../..
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To instead install Microsoft SEAL locally, e.g., to &lt;code&gt;~/mylibs/&lt;/code&gt;, do the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd native/src
cmake . -DCMAKE_INSTALL_PREFIX=~/mylibs
make
make install
cd ../..
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-linking-with-microsoft-seal-through-cmake" class="anchor" aria-hidden="true" href="#linking-with-microsoft-seal-through-cmake"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linking with Microsoft SEAL through CMake&lt;/h3&gt;
&lt;p&gt;It is very easy to link your own applications and libraries with Microsoft SEAL if
you use CMake. Simply add the following to your &lt;code&gt;CMakeLists.txt&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;find_package(SEAL 3.4 REQUIRED)
target_link_libraries(&amp;lt;your target&amp;gt; SEAL::seal)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If Microsoft SEAL was installed globally, the above &lt;code&gt;find_package&lt;/code&gt; command will likely
find the library automatically. To link with a locally installed Microsoft SEAL, e.g.,
installed in &lt;code&gt;~/mylibs&lt;/code&gt; as described above, you may need to tell CMake where to look for
Microsoft SEAL when you configure your application by running:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd &amp;lt;directory containing your CMakeLists.txt&amp;gt;
cmake . -DCMAKE_PREFIX_PATH=~/mylibs
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-from-nuget-package" class="anchor" aria-hidden="true" href="#from-nuget-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;From NuGet package&lt;/h2&gt;
&lt;p&gt;For .NET developers the easiest way of installing Microsoft SEAL is by using the
multi-platform NuGet package available at
&lt;a href="https://www.nuget.org/packages/Microsoft.Research.SEALNet" rel="nofollow"&gt;NuGet.org&lt;/a&gt;. Simply add
this package into your .NET project as a dependency and you are ready to go.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-enabling-optional-dependencies" class="anchor" aria-hidden="true" href="#enabling-optional-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enabling Optional Dependencies&lt;/h1&gt;
&lt;p&gt;Microsoft SEAL has no required dependencies, but certain optional features can be
enabled if it is compiled with support for specific third-party libraries.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-microsoft-gsl" class="anchor" aria-hidden="true" href="#microsoft-gsl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Microsoft GSL&lt;/h2&gt;
&lt;p&gt;Microsoft GSL (Guidelines Support Library) is a header-only library that implements
two convenient (templated) data types: &lt;code&gt;gsl::span&lt;/code&gt; and &lt;code&gt;gsl::multi_span&lt;/code&gt;. These
are &lt;em&gt;view types&lt;/em&gt; that provide safe (bounds-checked) array access to memory. For
example, if Microsoft GSL is available, Microsoft SEAL can allow &lt;code&gt;BatchEncoder&lt;/code&gt;
and &lt;code&gt;CKKSEncoder&lt;/code&gt; to encode from and decode to a &lt;code&gt;gsl::span&lt;/code&gt; instead of &lt;code&gt;std::vector&lt;/code&gt;,
which can have significant benefit in performance. Additionally, &lt;code&gt;BatchEncoder&lt;/code&gt; allows
access to the slot data alternatively through a two-dimensional &lt;code&gt;gsl::multi_span&lt;/code&gt;,
reflecting the batching slot structure. Also the &lt;code&gt;Ciphertext&lt;/code&gt; class allows the
ciphertext data to be accessed hierarchically through a &lt;code&gt;gsl::multi_span&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-microsoft-gsl-in-windows" class="anchor" aria-hidden="true" href="#microsoft-gsl-in-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Microsoft GSL in Windows&lt;/h4&gt;
&lt;p&gt;To build Microsoft SEAL with support for Microsoft GSL, clone first the Microsoft GSL
library from &lt;a href="https://GitHub.com/Microsoft/GSL"&gt;GitHub.com/Microsoft/GSL&lt;/a&gt; to some
convenient directory, e.g., &lt;code&gt;C:\MyLibs\GSL&lt;/code&gt; in this example.&lt;/p&gt;
&lt;p&gt;Next, you will need to signal Microsoft SEAL to enable Microsoft GSL support by
creating a new Windows environment variable &lt;code&gt;MSGSL_ROOT&lt;/code&gt;, and setting its value to
&lt;code&gt;C:\MyLibs\GSL\include&lt;/code&gt;. Restart Visual Studio at this point if you had it open,
otherwise it will not have captured the newly created environment variable.
Rebuilding Microsoft SEAL should now automatically detect that Microsoft GSL is
available, and enable both &lt;code&gt;gsl::span&lt;/code&gt; and &lt;code&gt;gsl::multi_span&lt;/code&gt; support. To disable
Microsoft GSL support, delete the &lt;code&gt;MSGSL_ROOT&lt;/code&gt; environment variable, restart Visual
Studio, and rebuild Microsoft SEAL.&lt;/p&gt;
&lt;p&gt;If Microsoft SEAL is built with Microsoft GSL support, any programs or libraries
consuming Microsoft SEAL will need access to the Microsoft GSL header files, so you
need to add &lt;code&gt;$(MSGSL_ROOT)&lt;/code&gt; to &lt;em&gt;Additional Include Directories&lt;/em&gt; under the &lt;em&gt;C/C++&lt;/em&gt; tab
in your Visual Studio project properties. Note that in the Microsoft SEAL projects
this has already been set for you, so all projects in &lt;code&gt;SEAL.sln&lt;/code&gt; should work without
change.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-microsoft-gsl-in-linux-and-macos" class="anchor" aria-hidden="true" href="#microsoft-gsl-in-linux-and-macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Microsoft GSL in Linux and macOS&lt;/h4&gt;
&lt;p&gt;On some Linux distributions Microsoft GSL can be conveniently obtained through
a package manager, e.g., on Ubuntu it suffices to install the package &lt;code&gt;libmsgsl-dev&lt;/code&gt;.
Alternatively, you can simply clone it from
&lt;a href="https://github.com/Microsoft/GSL"&gt;GitHub.com/Microsoft/GSL&lt;/a&gt;. When installed with
a package manager, CMake will likely detect the Microsoft GSL location automatically.
Otherwise, if Microsoft GSL is cloned to &lt;code&gt;~/mylibs/GSL&lt;/code&gt;, you need to provide CMake
with this location when building Microsoft SEAL as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd native/src
cmake . -DMSGSL_ROOT=~/mylibs/GSL/include
make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that you may need to give the same &lt;code&gt;-DMSGSL_ROOT=~/mylibs/GSL/include&lt;/code&gt; hint
to CMake when configuring your own applications linking with Microsoft SEAL.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-zlib" class="anchor" aria-hidden="true" href="#zlib"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ZLIB&lt;/h2&gt;
&lt;p&gt;ZLIB is a widely used compression library that implements the DEFLATE compression
algorithm. Microsoft SEAL can use ZLIB (if present) to automatically compress data
that is serialized. For example, in some cases &lt;code&gt;Ciphertext&lt;/code&gt; objects consist of a large
number of integers modulo specific prime numbers (&lt;code&gt;coeff_modulus&lt;/code&gt; primes). When using
the CKKS scheme, although these prime numbers can often be quite small (e.g., 30 bits),
the numbers are nevertheless serialized as 64-bit integers. In this case, more than
half of data in a ciphertext are zeros that can be compressed away with a compression
library, such as ZLIB. The BFV scheme benefits typically less from this technique, because
the prime numbers used for the &lt;code&gt;coeff_modulus&lt;/code&gt; encryption parameter tend to be larger,
and integers modulo these prime numbers fill more of each 64-bit word. The compression is
not only applied to &lt;code&gt;Ciphertext&lt;/code&gt; objects, but to every serializable Microsoft SEAL object.&lt;/p&gt;
&lt;p&gt;If ZLIB is detected by CMake, it will be automatically used for serialization (see
&lt;code&gt;Serialization::compr_mode_default&lt;/code&gt; in &lt;code&gt;native/src/seal/serialization.h&lt;/code&gt;. However, it is
always possible to explicitly pass &lt;code&gt;compr_mode_type::none&lt;/code&gt; to serialization methods to
disable compression.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WARNING:&lt;/strong&gt; The compression rate for a &lt;code&gt;SecretKey&lt;/code&gt; can (in theory at least) reveal
information about the key. In most common applications of Microsoft SEAL the size of
a &lt;code&gt;SecretKey&lt;/code&gt; would not be deliberately revealed to untrusted parties. If this is
a concern, one can always save the &lt;code&gt;SecretKey&lt;/code&gt; in an uncompressed form by passing
&lt;code&gt;compr_mode_type::none&lt;/code&gt; to &lt;code&gt;SecretKey::save&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-zlib-in-windows" class="anchor" aria-hidden="true" href="#zlib-in-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ZLIB in Windows&lt;/h4&gt;
&lt;p&gt;ZLIB is usually not found on a typical Windows system. You can clone it from
&lt;a href="https://github.com/madler/zlib"&gt;GitHub.com/madler/zlib&lt;/a&gt; to some convenient directory,
e.g., &lt;code&gt;C:\MyLibs\zlib&lt;/code&gt; in this example. You need to build ZLIB first by opening
&lt;em&gt;Developer Command Prompt for VS 2019&lt;/em&gt;, go to &lt;code&gt;C:\MyLibs\zlib&lt;/code&gt;, and run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cmake .
cmake --build . --config Release
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, you will need to signal Microsoft SEAL to enable ZLIB support by creating a new
Windows environment variable &lt;code&gt;ZLIB_ROOT&lt;/code&gt;, and setting its value to &lt;code&gt;C:\MyLibs\zlib&lt;/code&gt;.
Restart Visual Studio at this point if you had it open, otherwise it will not have
captured the newly created environment variable. Rebuilding Microsoft SEAL should now
automatically detect that ZLIB is available, and enable support for
&lt;code&gt;compr_mode_type::deflate&lt;/code&gt;. To disable ZLIB support, delete the &lt;code&gt;ZLIB_ROOT&lt;/code&gt; environment
variable, restart Visual Studio, and rebuild Microsoft SEAL.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-zlib-in-linux-and-macos" class="anchor" aria-hidden="true" href="#zlib-in-linux-and-macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ZLIB in Linux and macOS&lt;/h4&gt;
&lt;p&gt;The ZLIB (development package) can be conveniently obtained through a package manager
on most Linux distributions, e.g., on Ubuntu it suffices to install the package
&lt;code&gt;zlib1g-dev&lt;/code&gt;. Alternatively, clone from &lt;a href="GitHub.com/madler/zlib"&gt;GitHub.com/madler/zlib&lt;/a&gt;
and build it yourself. For example, suppose you have cloned ZLIB to &lt;code&gt;~/mylibs/zlib&lt;/code&gt;.
To build ZLIB, simply execute:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~/mylibs/zlib
cmake .
make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If ZLIB was installed with a package manager, CMake will likely detect the location
of ZLIB automatically. Otherwise, if ZLIB was built in &lt;code&gt;~/mylibs/zlib&lt;/code&gt;, you need
to provide CMake with this location when building Microsoft SEAL as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd native/src
cmake . -DZLIB_ROOT=~/mylibs/zlib
make
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-building-microsoft-seal-for-net" class="anchor" aria-hidden="true" href="#building-microsoft-seal-for-net"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Microsoft SEAL for .NET&lt;/h1&gt;
&lt;p&gt;Microsoft SEAL provides a .NET Standard library that wraps the functionality in
Microsoft SEAL for use in .NET development.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-windows-1" class="anchor" aria-hidden="true" href="#windows-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h2&gt;
&lt;p&gt;The Microsoft Visual Studio 2019 solution file &lt;code&gt;SEAL.sln&lt;/code&gt; contains the projects necessary
to build the .NET assembly, a backing native shared library, .NET examples, and unit
tests.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-native-library" class="anchor" aria-hidden="true" href="#native-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Native library&lt;/h4&gt;
&lt;p&gt;Microsoft SEAL for .NET requires a native library that is invoked by the managed .NET
library. Build the SEALNetNative project &lt;code&gt;dotnet\native\SEALNetNative.vcxproj&lt;/code&gt; from
&lt;code&gt;SEAL.sln&lt;/code&gt;. Building SEALNetNative results in the dynamic library &lt;code&gt;sealnetnative.dll&lt;/code&gt;
to be created in &lt;code&gt;dotnet\lib\$(Platform)\$(Configuration)&lt;/code&gt;. This library is meant to
be used only by the .NET library, not by end users, and needs to be present in the same
directory as your executable when running a .NET application.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-net-library" class="anchor" aria-hidden="true" href="#net-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.NET library&lt;/h4&gt;
&lt;p&gt;Once you have built the shared native library (see above), build the SEALNet project
&lt;code&gt;dotnet\src\SEALNet.csproj&lt;/code&gt; from &lt;code&gt;SEAL.sln&lt;/code&gt;. Building SEALNet results in the assembly
&lt;code&gt;SEALNet.dll&lt;/code&gt; to be created in &lt;code&gt;dotnet\lib\$(Configuration)\netstandard2.0&lt;/code&gt;. This
is the assembly you can reference in your application.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-net-examples" class="anchor" aria-hidden="true" href="#net-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.NET examples&lt;/h4&gt;
&lt;p&gt;Build the SEALNetExamples project &lt;code&gt;dotnet\examples\SEALNetExamples.csproj&lt;/code&gt; from
&lt;code&gt;SEAL.sln&lt;/code&gt;. This results in the assembly &lt;code&gt;SEALNetExamples.dll&lt;/code&gt; to be created in
&lt;code&gt;dotnet\bin\$(Configuration)\netcoreapp2.1&lt;/code&gt;. The project takes care of copying the
native SEALNetNative library to the output directory.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-net-unit-tests" class="anchor" aria-hidden="true" href="#net-unit-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.NET unit tests&lt;/h4&gt;
&lt;p&gt;Build the SEALNet Test project &lt;code&gt;dotnet\tests\SEALNetTest.csproj&lt;/code&gt; from &lt;code&gt;SEAL.sln&lt;/code&gt;. This
results in the &lt;code&gt;SEALNetTest.dll&lt;/code&gt; assembly to be created in
&lt;code&gt;dotnet\lib\$(Configuration)\netcoreapp2.1&lt;/code&gt;. The project takes care of copying the
native SEALNetNative library to the output directory.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-using-microsoft-seal-for-net-in-your-own-application" class="anchor" aria-hidden="true" href="#using-microsoft-seal-for-net-in-your-own-application"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Microsoft SEAL for .NET in your own application&lt;/h4&gt;
&lt;p&gt;To use Microsoft SEAL for .NET in your own application you need to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;add a reference in your project to &lt;code&gt;SEALNet.dll&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;ensure &lt;code&gt;sealnetnative.dll&lt;/code&gt; is available for your application when run. The easiest
way to ensure this is to copy &lt;code&gt;sealnetnative.dll&lt;/code&gt; to the same directory where your
application's executable is located.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;&lt;a id="user-content-building-your-own-nuget-package" class="anchor" aria-hidden="true" href="#building-your-own-nuget-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building your own NuGet package&lt;/h4&gt;
&lt;p&gt;You can build your own NuGet package for Microsoft SEAL by following the instructions
in &lt;a href="dotnet/nuget/NUGET.md"&gt;NUGET.md&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-linux-and-macos-1" class="anchor" aria-hidden="true" href="#linux-and-macos-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux and macOS&lt;/h2&gt;
&lt;p&gt;Microsoft SEAL for .NET relies on a native shared library that can be easily
configured and built using CMake (&amp;gt;= 3.12) and a modern version of GNU G++ (&amp;gt;= 6.0)
or Clang++ (&amp;gt;= 5.0). In macOS the Xcode toolchain (&amp;gt;= 9.3) will work.&lt;/p&gt;
&lt;p&gt;For compiling .NET code you will need to install a .NET Core SDK (&amp;gt;= 2.1). You can
follow these
&lt;a href="https://dotnet.microsoft.com/download?initial-os=linux" rel="nofollow"&gt;instructions for installing in Linux&lt;/a&gt;,
or for &lt;a href="https://dotnet.microsoft.com/download?initial-os=macos" rel="nofollow"&gt;installing in macOS&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-native-library-1" class="anchor" aria-hidden="true" href="#native-library-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Native library&lt;/h4&gt;
&lt;p&gt;If you only intend to run the examples and unit tests provided with Microsoft SEAL,
you do not need to install the native shared library, you only need to compile it.
The SEALNetExamples and SEALNetTest projects take care of copying the native shared
library to the appropriate assembly output directory.&lt;/p&gt;
&lt;p&gt;To compile the native shared library you will need to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Compile Microsoft SEAL as a static or shared library with Position-Independent Code (PIC);&lt;/li&gt;
&lt;li&gt;Compile native shared library.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The instructions for compiling Microsoft SEAL are similar to the instructions described, but
in addition you need to ensure that the CMake configuration option &lt;code&gt;SEAL_LIB_BUILD_TYPE&lt;/code&gt; is
set to either &lt;code&gt;Static_PIC&lt;/code&gt; (default) or &lt;code&gt;Shared&lt;/code&gt;. Assuming Microsoft SEAL was built using
the default CMake configuration options, we can immediately use it to compile the shared
native library required for .NET:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd dotnet/native
cmake .
make
cd ../..
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-net-library-1" class="anchor" aria-hidden="true" href="#net-library-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.NET library&lt;/h4&gt;
&lt;p&gt;To build the .NET Standard library, do the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd dotnet/src
dotnet build --configuration &amp;lt;Debug|Release&amp;gt;
cd ../..
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can use the &lt;code&gt;dotnet&lt;/code&gt; parameter &lt;code&gt;--configuration &amp;lt;Debug|Release&amp;gt;&lt;/code&gt; to build either
a &lt;code&gt;Debug&lt;/code&gt; or &lt;code&gt;Release&lt;/code&gt; version of the assembly. This will result in a &lt;code&gt;SEALNet.dll&lt;/code&gt;
assembly to be created in &lt;code&gt;dotnet/lib/$(Configuration)/netstandard2.0&lt;/code&gt;. This assembly
is the one you will want to reference in your own projects.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-net-examples-1" class="anchor" aria-hidden="true" href="#net-examples-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.NET examples&lt;/h4&gt;
&lt;p&gt;To build and run the .NET examples, do:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd dotnet/examples
dotnet run
cd ../..
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As mentioned before, the .NET project will copy the shared native library to the assembly
output directory. You can use the &lt;code&gt;dotnet&lt;/code&gt; parameter &lt;code&gt;--configuration &amp;lt;Debug|Release&amp;gt;&lt;/code&gt; to
run either &lt;code&gt;Debug&lt;/code&gt; or &lt;code&gt;Release&lt;/code&gt; versions of the examples.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-net-unit-tests-1" class="anchor" aria-hidden="true" href="#net-unit-tests-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;.NET unit tests&lt;/h4&gt;
&lt;p&gt;To build and run the .NET unit tests, do:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd dotnet/tests
dotnet test
cd ../..
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;All unit tests should pass. You can use the &lt;code&gt;dotnet&lt;/code&gt; parameter &lt;code&gt;--configuration &amp;lt;Debug|Release&amp;gt;&lt;/code&gt;
to run &lt;code&gt;Debug&lt;/code&gt; or &lt;code&gt;Relase&lt;/code&gt; unit tests, and you can use &lt;code&gt;--verbosity detailed&lt;/code&gt; to print the list
of unit tests that are being run.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-using-microsoft-seal-for-net-in-your-own-application-1" class="anchor" aria-hidden="true" href="#using-microsoft-seal-for-net-in-your-own-application-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Microsoft SEAL for .NET in your own application&lt;/h4&gt;
&lt;p&gt;To use Microsoft SEAL for .NET in your own application you need to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;add a reference in your project to &lt;code&gt;SEALNet.dll&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;ensure the native shared library is available for your application when run. The easiest way
to ensure this is to copy &lt;code&gt;libsealnetnative.so&lt;/code&gt; to the same directory where your application's
executable is located.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In Linux or macOS, if you have root access to the system, you have the option to install the
native shared library globally. Then your application will always be able to find and load it.&lt;/p&gt;
&lt;p&gt;Assuming Microsoft SEAL is build and installed globally, you can install the shared native
library globally as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd dotnet/native
cmake  .
make
sudo make install
cd ../..
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h1&gt;
&lt;p&gt;Using Microsoft SEAL will require the user to invest some time in learning fundamental
concepts in homomorphic encryption. The code comes with heavily commented examples that
are designed to gradually teach such concepts as well as to demonstrate much of the API.
The code examples are available (and identical) in C++ and C#, and are divided into
several source files in &lt;code&gt;native/examples/&lt;/code&gt; (C++) and &lt;code&gt;dotnet/examples/&lt;/code&gt; (C#), as follows:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;C++&lt;/th&gt;
&lt;th&gt;C#&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;examples.cpp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Examples.cs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The example runner application&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;1_bfv_basics.cpp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1_BFV_Basics.cs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Encrypted modular arithmetic using the BFV scheme&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;2_encoders.cpp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;2_Encoders.cs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Encoding more complex data into Microsoft SEAL plaintext objects&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;3_levels.cpp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;3_Levels.cs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Introduces the concept of levels; prerequisite for using the CKKS scheme&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;4_ckks_basics.cpp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;4_CKKS_Basics.cs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Encrypted real number arithmetic using the CKKS scheme&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;5_rotation.cpp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;5_Rotation.cs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Performing cyclic rotations on encrypted vectors in the BFV and CKKS schemes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;6_performance.cpp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;6_Performance.cs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Performance tests for Microsoft SEAL&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;It is recommeded to read the comments and the code snippets along with command line printout
from running an example. For easier navigation, command line printout provides the line number
in the associated source file where the associated code snippets start.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WARNING: It is impossible to use Microsoft SEAL correctly without reading all examples
or by simply re-using the code from examples. Any developer attempting to do so
will inevitably produce code that is &lt;em&gt;vulnerable&lt;/em&gt;, &lt;em&gt;malfunctioning&lt;/em&gt;, or &lt;em&gt;extremely slow&lt;/em&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you
to agree to a Contributor License Agreement (CLA) declaring that you have the right to,
and actually do, grant us the rights to use your contribution. For details, visit
&lt;a href="https://cla.microsoft.com" rel="nofollow"&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need
to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow
the instructions provided by the bot. You will only need to do this once across all
repos using our CLA.&lt;/p&gt;
&lt;p&gt;Pull requests must be submitted to the branch called &lt;em&gt;contrib&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;This project has adopted the
&lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;.
For more information see the
&lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt;
or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional
questions or comments.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-pull-requests" class="anchor" aria-hidden="true" href="#pull-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pull Requests&lt;/h1&gt;
&lt;p&gt;For contributing to Microsoft SEAL, please see &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-citing-microsoft-seal" class="anchor" aria-hidden="true" href="#citing-microsoft-seal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citing Microsoft SEAL&lt;/h1&gt;
&lt;p&gt;To cite Microsoft SEAL in academic papers, please use the following BibTeX entries.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-version-34" class="anchor" aria-hidden="true" href="#version-34"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Version 3.4&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;@misc{sealcrypto,
    title = {{M}icrosoft {SEAL} (release 3.4)},
    howpublished = {\url{https://github.com/Microsoft/SEAL}},
    month = oct,
    year = 2019,
    note = {Microsoft Research, Redmond, WA.},
    key = {SEAL}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-version-33" class="anchor" aria-hidden="true" href="#version-33"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Version 3.3&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;@misc{sealcrypto,
    title = {{M}icrosoft {SEAL} (release 3.3)},
    howpublished = {\url{https://github.com/Microsoft/SEAL}},
    month = june,
    year = 2019,
    note = {Microsoft Research, Redmond, WA.},
    key = {SEAL}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-version-32" class="anchor" aria-hidden="true" href="#version-32"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Version 3.2&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;@misc{sealcrypto,
    title = {{M}icrosoft {SEAL} (release 3.2)},
    howpublished = {\url{https://github.com/Microsoft/SEAL}},
    month = feb,
    year = 2019,
    note = {Microsoft Research, Redmond, WA.},
    key = {SEAL}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-version-31" class="anchor" aria-hidden="true" href="#version-31"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Version 3.1&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;@misc{sealcrypto,
    title = {{M}icrosoft {SEAL} (release 3.1)},
    howpublished = {\url{https://github.com/Microsoft/SEAL}},
    month = dec,
    year = 2018,
    note = {Microsoft Research, Redmond, WA.},
    key = {SEAL}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-version-30" class="anchor" aria-hidden="true" href="#version-30"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Version 3.0&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;@misc{sealcrypto,
    title = {{M}icrosoft {SEAL} (release 3.0)},
    howpublished = {\url{http://sealcrypto.org}},
    month = oct,
    year = 2018,
    note = {Microsoft Research, Redmond, WA.},
    key = {SEAL}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>microsoft</author><guid isPermaLink="false">https://github.com/microsoft/SEAL</guid><pubDate>Wed, 04 Dec 2019 00:10:00 GMT</pubDate></item><item><title>letscontrolit/ESPEasy #11 in C++, This week</title><link>https://github.com/letscontrolit/ESPEasy</link><description>&lt;p&gt;&lt;i&gt;Easy MultiSensor device based on ESP8266&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Latest Nightly&lt;/th&gt;
&lt;th&gt;Build Status&lt;/th&gt;
&lt;th&gt;Downloads&lt;/th&gt;
&lt;th&gt;Docs&lt;/th&gt;
&lt;th&gt;Patreon&lt;/th&gt;
&lt;th&gt;Ko-Fi&lt;/th&gt;
&lt;th&gt;PayPal&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/letscontrolit/ESPEasy/releases/latest"&gt;&lt;img src="https://camo.githubusercontent.com/eb7e1cbfaa4f55cd18e7d9577a02d843dd96ceb7/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6c657473636f6e74726f6c69742f455350456173792f616c6c2e737667" alt="GitHub version" data-canonical-src="https://img.shields.io/github/release/letscontrolit/ESPEasy/all.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://travis-ci.org/letscontrolit/ESPEasy" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f2514451ed804558faa4137b21c7b8c2e6c48653/68747470733a2f2f7472617669732d63692e6f72672f6c657473636f6e74726f6c69742f455350456173792e7376673f6272616e63683d6d656761" alt="Build Status" data-canonical-src="https://travis-ci.org/letscontrolit/ESPEasy.svg?branch=mega" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/letscontrolit/ESPEasy/releases"&gt;&lt;img src="https://camo.githubusercontent.com/068ac962c16a3f3118c974d0d258f3f09e118df1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6c657473636f6e74726f6c69742f455350456173792f746f74616c2e737667" alt="Downloads" data-canonical-src="https://img.shields.io/github/downloads/letscontrolit/ESPEasy/total.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://espeasy.readthedocs.io/en/latest/?badge=latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/74f9ab6a6b54702d50f4b6255628eef4c7b1ebc8/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f657370656173792f62616467652f3f76657273696f6e3d6c6174657374" alt="Documentation Status" data-canonical-src="https://readthedocs.org/projects/espeasy/badge/?version=latest" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.patreon.com/GrovkillenTDer" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/53a081cfc0c04f676b7360114e86ccf887a572a6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f6e6174652d50617472656f6e2d626c75652e737667" alt="donate" data-canonical-src="https://img.shields.io/badge/donate-Patreon-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://ko-fi.com/grovkillentder" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c3736230d0d1be76029ddb758f14874718d95454/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f6e6174652d4b6f46692d626c75652e737667" alt="donate" data-canonical-src="https://img.shields.io/badge/donate-KoFi-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.paypal.me/espeasy" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3acd922fa1c97f34ea6ed5a0b44348dc9b81389e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f6e6174652d50617950616c2d626c75652e737667" alt="donate" data-canonical-src="https://img.shields.io/badge/donate-PayPal-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;For ways to &lt;em&gt;support&lt;/em&gt; us, see &lt;a href="https://www.letscontrolit.com/forum/viewtopic.php?f=14&amp;amp;t=5787" rel="nofollow"&gt;this announcement on the forum&lt;/a&gt;, or have a look at the &lt;a href="https://www.patreon.com/GrovkillenTDer" rel="nofollow"&gt;Patreon&lt;/a&gt;, &lt;a href="https://ko-fi.com/grovkillentder" rel="nofollow"&gt;Ko-Fi&lt;/a&gt; or &lt;a href="https://www.paypal.me/espeasy" rel="nofollow"&gt;PayPal&lt;/a&gt; links above.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-espeasy-development-branch" class="anchor" aria-hidden="true" href="#espeasy-development-branch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ESPEasy (development branch)&lt;/h1&gt;
&lt;p&gt;Introduction and wiki: &lt;a href="https://www.letscontrolit.com/wiki/index.php/ESPEasy#Introduction" rel="nofollow"&gt;https://www.letscontrolit.com/wiki/index.php/ESPEasy#Introduction&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MEGA&lt;/strong&gt;
&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt;This is the development branch of ESPEasy. All new untested features go into this branch. If you want to do a bugfix, do it on the stable branch, we will merge the fix to the development branch as well.&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;‚ö†Ô∏è&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;Check here to learn how to use this branch and help us improving ESPEasy: &lt;a href="http://www.letscontrolit.com/wiki/index.php/ESPEasy#Source_code_development" rel="nofollow"&gt;http://www.letscontrolit.com/wiki/index.php/ESPEasy#Source_code_development&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-automated-binary-releases" class="anchor" aria-hidden="true" href="#automated-binary-releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Automated binary releases&lt;/h2&gt;
&lt;p&gt;Every night our build-bot will build a new binary release: &lt;a href="https://github.com/letscontrolit/ESPEasy/releases"&gt;https://github.com/letscontrolit/ESPEasy/releases&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The releases are named something like 'mega-20190225' (last number is the build date)&lt;/p&gt;
&lt;p&gt;Depending on your needs, we release different types of files:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Firmware name&lt;/th&gt;
&lt;th&gt;Hardware&lt;/th&gt;
&lt;th&gt;Included plugins&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ESPEasy_mega-20190225_normal_ESP8266_1M.bin&lt;/td&gt;
&lt;td&gt;ESP8266 with 1MB flash&lt;/td&gt;
&lt;td&gt;Stable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ESPEasy_mega-20190225_test_ESP8266_1M.bin&lt;/td&gt;
&lt;td&gt;ESP8266 with 1MB flash&lt;/td&gt;
&lt;td&gt;Stable + Test&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ESPEasy_mega-20190225_dev_ESP8266_1M.bin&lt;/td&gt;
&lt;td&gt;ESP8266 with 1MB flash&lt;/td&gt;
&lt;td&gt;Stable + Test + Development&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ESPEasy_mega-20190225_normal_ESP8266_4M.bin&lt;/td&gt;
&lt;td&gt;ESP8266 with 4MB flash&lt;/td&gt;
&lt;td&gt;Stable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ESPEasy_mega-20190225_test_ESP8266_4M.bin&lt;/td&gt;
&lt;td&gt;ESP8266 with 4MB flash&lt;/td&gt;
&lt;td&gt;Stable + Test&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ESPEasy_mega-20190225_dev_ESP8266_4M.bin&lt;/td&gt;
&lt;td&gt;ESP8266 with 4MB flash&lt;/td&gt;
&lt;td&gt;Stable + Test + Development&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ESPEasy_mega-20190225_normal_ESP8285_1M.bin&lt;/td&gt;
&lt;td&gt;ESP8285 with 1MB flash&lt;/td&gt;
&lt;td&gt;Stable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ESPEasy_mega-20190225_test_ESP8285_1M.bin&lt;/td&gt;
&lt;td&gt;ESP8285 with 1MB flash&lt;/td&gt;
&lt;td&gt;Stable + Test&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ESPEasy_mega-20190225_dev_ESP8285_1M.bin&lt;/td&gt;
&lt;td&gt;ESP8285 with 1MB flash&lt;/td&gt;
&lt;td&gt;Stable + Test + Development&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-more-info" class="anchor" aria-hidden="true" href="#more-info"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More info&lt;/h2&gt;
&lt;p&gt;Details and discussion are on the "Experimental" section of the forum: &lt;a href="https://www.letscontrolit.com/forum/viewforum.php?f=18" rel="nofollow"&gt;https://www.letscontrolit.com/forum/viewforum.php?f=18&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Automated builds of the (new) documentation can be found at &lt;a href="https://espeasy.readthedocs.io/en/latest/" rel="nofollow"&gt;ESPEasy.readthedocs.io&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>letscontrolit</author><guid isPermaLink="false">https://github.com/letscontrolit/ESPEasy</guid><pubDate>Wed, 04 Dec 2019 00:11:00 GMT</pubDate></item><item><title>changkun/modern-cpp-tutorial #12 in C++, This week</title><link>https://github.com/changkun/modern-cpp-tutorial</link><description>&lt;p&gt;&lt;i&gt;üìö Modern C++ Tutorial: C++11/14/17/20 On the Fly&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/cover-2nd-en.png"&gt;&lt;img src="assets/cover-2nd-en.png" alt="logo" height="550" align="right" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-modern-c-tutorial-c11141720-on-the-fly" class="anchor" aria-hidden="true" href="#modern-c-tutorial-c11141720-on-the-fly"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modern C++ Tutorial: C++11/14/17/20 On the Fly&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/61eb415a2f13903db5cd1b7fad1b7f1d057bc64d/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6368616e676b756e2f6d6f6465726e2d6370702d7475746f7269616c2f6d61737465723f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/61eb415a2f13903db5cd1b7fad1b7f1d057bc64d/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6368616e676b756e2f6d6f6465726e2d6370702d7475746f7269616c2f6d61737465723f7374796c653d666c61742d737175617265" alt="" data-canonical-src="https://img.shields.io/travis/changkun/modern-cpp-tutorial/master?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="./README.md"&gt;&lt;img src="https://camo.githubusercontent.com/9ce6c2e8a068be556791e681787c8b49b7172152/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c616e67756167652d456e676c6973682d626c75652e7376673f7374796c653d666c61742d737175617265" alt="" data-canonical-src="https://img.shields.io/badge/language-English-blue.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="./README-zh-cn.md"&gt;&lt;img src="https://camo.githubusercontent.com/3ae28a82df319d30f9ee7ce5cd55ceb538f113a9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c616e67756167652d2545372541452538302545342542442539332545342542382541442545362539362538372d7265642e7376673f7374796c653d666c61742d737175617265" alt="" data-canonical-src="https://img.shields.io/badge/language-%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87-red.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="./assets/donate.md"&gt;&lt;img src="https://camo.githubusercontent.com/923b7908dffde6aa9cbfb84cb037f67e9641750e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322538322541432d646f6e6174652d6666363962342e7376673f7374796c653d666c61742d737175617265" alt="" data-canonical-src="https://img.shields.io/badge/%E2%82%AC-donate-ff69b4.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="./assets/community.md"&gt;&lt;img src="https://camo.githubusercontent.com/217528a81970600ccfd4bdaae539996dd868f563/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d636f6d6d756e6974792d3636376564352e7376673f7374796c653d666c61742d737175617265" alt="" data-canonical-src="https://img.shields.io/badge/chat-community-667ed5.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-purpose" class="anchor" aria-hidden="true" href="#purpose"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Purpose&lt;/h2&gt;
&lt;p&gt;The book claims "On the Fly". Its intent is to provide a comprehensive introduction to the relevant features regarding modern C++ (before 2020s).
Readers can choose interesting content according to the following table of content to learn and quickly familiarize the new features you would like to learn.
Readers should aware that all of these features are not required. It should be leart when you really need it.&lt;/p&gt;
&lt;p&gt;At the same time, instead of grammar-only, the book introduces the historical background as simple as possible of its technical requirements, which provides great help in understanding why these features comes out.&lt;/p&gt;
&lt;p&gt;In addition, The author would like to encourage that readers should be able to use modern C++ directly in their new projects and  migrate their old projects to modern C++ gradually after read the book.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-targets" class="anchor" aria-hidden="true" href="#targets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Targets&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;This book assumes that readers are already familiar with traditional C++ (i.e. C++98 or earlier), at least they do not have any difficulty in reading traditional C++ code. In other words, those who have long experience in traditional C++ and people who desire to quickly understand the features of modern C++ in a short period of time are well suited to read the book;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This book introduces to a certain extent of the dark magic of modern C++. However, these magics are very limited, they are not suitable for readers who want to learn advanced C++. The purpose of this book is offering a quick start for modern C++. Of course, advanced readers can also use this book to review and examine themselves on modern C++.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-start" class="anchor" aria-hidden="true" href="#start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Start&lt;/h2&gt;
&lt;p&gt;You can choose from the following reading methods:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./book/en-us/toc.md"&gt;GitHub Online&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://changkun.de/modern-cpp/pdf/modern-cpp-tutorial-en-us.pdf" rel="nofollow"&gt;PDF document&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://changkun.de/modern-cpp/epub/modern-cpp-tutorial-en-us.epub" rel="nofollow"&gt;EPUB document&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://changkun.de/modern-cpp" rel="nofollow"&gt;Website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-code" class="anchor" aria-hidden="true" href="#code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code&lt;/h2&gt;
&lt;p&gt;Each chapter of this book has a lot of code. If you encounter problems when writing your own code with the introductory features of the book, you might as well read the source code attached to the book. You can find the book &lt;a href="./code"&gt;here&lt;/a&gt;. All the code organized by chapter, the folder name is the chapter number.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-exercises" class="anchor" aria-hidden="true" href="#exercises"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exercises&lt;/h2&gt;
&lt;p&gt;There are few exercises At the end of each chapter of the book. It is for testing whether you can use the knowledge points in the current chapter. You can find the possible answer to the problem from &lt;a href="./exercises"&gt;here&lt;/a&gt;. The folder name is the chapter number.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-website" class="anchor" aria-hidden="true" href="#website"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Website&lt;/h2&gt;
&lt;p&gt;The source code of the &lt;a href="https://changkun.de/modern-cpp" rel="nofollow"&gt;website&lt;/a&gt; of this book can be found &lt;a href="./website"&gt;here&lt;/a&gt;, which is built by &lt;a href="https://hexo.io" rel="nofollow"&gt;hexo&lt;/a&gt; and &lt;a href="https://vuejs.org" rel="nofollow"&gt;vuejs&lt;/a&gt;. The website provides you another way of reading the book, it is also adapts to mobile.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-build" class="anchor" aria-hidden="true" href="#build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build&lt;/h2&gt;
&lt;p&gt;If you are interested in build everything locally, it is recommended using &lt;a href="https://docs.docker.com/install/" rel="nofollow"&gt;Docker&lt;/a&gt;. To build, simply run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ make build&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;This book was originally written in Chinese by &lt;a href="https://changkun.de" rel="nofollow"&gt;Changkun Ou&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The author has limited time and language skills. If readers find any mistakes of the book or any language improvements, please feel free to open an &lt;a href="https://github.com/changkun/modern-cpp-tutorial/issues"&gt;Issue&lt;/a&gt; or start a &lt;a href="https://github.com/changkun/modern-cpp-tutorial/pulls"&gt;Pull request&lt;/a&gt;. For detailed guidelines and checklist, please refer to &lt;a href="CONTRIBUTING.md"&gt;How to contribute&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The author would be grateful to all contributors, including but not limited to &lt;a href="https://github.com/changkun/modern-cpp-tutorial/graphs/contributors"&gt;Contributors&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-licenses" class="anchor" aria-hidden="true" href="#licenses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licenses&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" rel="nofollow"&gt;&lt;img alt="Creative Commons License" src="https://camo.githubusercontent.com/777429797f9180579ed59a4f95d148a0c213dfa8/68747470733a2f2f692e6372656174697665636f6d6d6f6e732e6f72672f6c2f62792d6e632d6e642f342e302f38387833312e706e67" data-canonical-src="https://i.creativecommons.org/l/by-nc-nd/4.0/88x31.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;This work was written by &lt;a href="https://changkun.de" rel="nofollow"&gt;Ou Changkun&lt;/a&gt; and licensed under a &lt;a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" rel="nofollow"&gt;Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License&lt;/a&gt;. The code of this repository is open sourced under the &lt;a href="./LICENSE"&gt;MIT license&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>changkun</author><guid isPermaLink="false">https://github.com/changkun/modern-cpp-tutorial</guid><pubDate>Wed, 04 Dec 2019 00:12:00 GMT</pubDate></item><item><title>tensorflow/tensorflow #13 in C++, This week</title><link>https://github.com/tensorflow/tensorflow</link><description>&lt;p&gt;&lt;i&gt;An Open Source Machine Learning Framework for Everyone&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;div align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0905c7d634421f8aa4ab3ddf19a582572df568e1/68747470733a2f2f7777772e74656e736f72666c6f772e6f72672f696d616765732f74665f6c6f676f5f736f6369616c2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/0905c7d634421f8aa4ab3ddf19a582572df568e1/68747470733a2f2f7777772e74656e736f72666c6f772e6f72672f696d616765732f74665f6c6f676f5f736f6369616c2e706e67" data-canonical-src="https://www.tensorflow.org/images/tf_logo_social.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;&lt;code&gt;Documentation&lt;/code&gt;&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.tensorflow.org/api_docs/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6bcb2a5bacdee6fffb24776a79c21bc3eae19ecc/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6170692d7265666572656e63652d626c75652e737667" alt="Documentation" data-canonical-src="https://img.shields.io/badge/api-reference-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href="https://www.tensorflow.org/" rel="nofollow"&gt;TensorFlow&lt;/a&gt; is an end-to-end open source platform
for machine learning. It has a comprehensive, flexible ecosystem of
&lt;a href="https://www.tensorflow.org/resources/tools" rel="nofollow"&gt;tools&lt;/a&gt;,
&lt;a href="https://www.tensorflow.org/resources/libraries-extensions" rel="nofollow"&gt;libraries&lt;/a&gt;, and
&lt;a href="https://www.tensorflow.org/community" rel="nofollow"&gt;community&lt;/a&gt; resources that lets
researchers push the state-of-the-art in ML and developers easily build and
deploy ML-powered applications.&lt;/p&gt;
&lt;p&gt;TensorFlow was originally developed by researchers and engineers working on the
Google Brain team within Google's Machine Intelligence Research organization to
conduct machine learning and deep neural networks research. The system is
general enough to be applicable in a wide variety of other domains, as well.&lt;/p&gt;
&lt;p&gt;TensorFlow provides stable &lt;a href="https://www.tensorflow.org/api_docs/python" rel="nofollow"&gt;Python&lt;/a&gt;
and &lt;a href="https://www.tensorflow.org/api_docs/cc" rel="nofollow"&gt;C++&lt;/a&gt; APIs, as well as
non-guaranteed backward compatible API for
&lt;a href="https://www.tensorflow.org/api_docs" rel="nofollow"&gt;other languages&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Keep up-to-date with release announcements and security updates by subscribing
to
&lt;a href="https://groups.google.com/a/tensorflow.org/forum/#!forum/announce" rel="nofollow"&gt;announce@tensorflow.org&lt;/a&gt;.
See all the &lt;a href="https://www.tensorflow.org/community/forums" rel="nofollow"&gt;mailing lists&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://www.tensorflow.org/install" rel="nofollow"&gt;TensorFlow install guide&lt;/a&gt; for the
&lt;a href="https://www.tensorflow.org/install/pip" rel="nofollow"&gt;pip package&lt;/a&gt;, to
&lt;a href="https://www.tensorflow.org/install/gpu" rel="nofollow"&gt;enable GPU support&lt;/a&gt;, use a
&lt;a href="https://www.tensorflow.org/install/docker" rel="nofollow"&gt;Docker container&lt;/a&gt;, and
&lt;a href="https://www.tensorflow.org/install/source" rel="nofollow"&gt;build from source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To install the current release for CPU-only:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ pip install tensorflow
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Use the GPU package for
&lt;a href="https://www.tensorflow.org/install/gpu" rel="nofollow"&gt;CUDA-enabled GPU cards&lt;/a&gt; &lt;em&gt;(Ubuntu and
Windows)&lt;/em&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ pip install tensorflow-gpu
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Nightly binaries are available for testing using the
&lt;a href="https://pypi.python.org/pypi/tf-nightly" rel="nofollow"&gt;tf-nightly&lt;/a&gt; and
&lt;a href="https://pypi.python.org/pypi/tf-nightly-gpu" rel="nofollow"&gt;tf-nightly-gpu&lt;/a&gt; packages on PyPi.&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-try-your-first-tensorflow-program" class="anchor" aria-hidden="true" href="#try-your-first-tensorflow-program"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;em&gt;Try your first TensorFlow program&lt;/em&gt;&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ python&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;import&lt;/span&gt; tensorflow &lt;span class="pl-k"&gt;as&lt;/span&gt; tf
&lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; tf.add(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;).numpy()
&lt;span class="pl-c1"&gt;3&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; hello &lt;span class="pl-k"&gt;=&lt;/span&gt; tf.constant(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hello, TensorFlow!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; hello.numpy()
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hello, TensorFlow!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more examples, see the
&lt;a href="https://www.tensorflow.org/tutorials/" rel="nofollow"&gt;TensorFlow tutorials&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contribution-guidelines" class="anchor" aria-hidden="true" href="#contribution-guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution guidelines&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;If you want to contribute to TensorFlow, be sure to review the
&lt;a href="CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;. This project adheres to TensorFlow's
&lt;a href="CODE_OF_CONDUCT.md"&gt;code of conduct&lt;/a&gt;. By participating, you are expected to
uphold this code.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;We use &lt;a href="https://github.com/tensorflow/tensorflow/issues"&gt;GitHub issues&lt;/a&gt; for
tracking requests and bugs, please see
&lt;a href="https://groups.google.com/a/tensorflow.org/forum/#!forum/discuss" rel="nofollow"&gt;TensorFlow Discuss&lt;/a&gt;
for general questions and discussion, and please direct specific questions to
&lt;a href="https://stackoverflow.com/questions/tagged/tensorflow" rel="nofollow"&gt;Stack Overflow&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The TensorFlow project strives to abide by generally accepted best practices in
open-source software development:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bestpractices.coreinfrastructure.org/projects/1486" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3e88ed14c6c25049b897c18ec0634849eedd41ed/68747470733a2f2f626573747072616374696365732e636f7265696e6672617374727563747572652e6f72672f70726f6a656374732f313438362f6261646765" alt="CII Best Practices" data-canonical-src="https://bestpractices.coreinfrastructure.org/projects/1486/badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="CODE_OF_CONDUCT.md"&gt;&lt;img src="https://camo.githubusercontent.com/8315e511f8eb4651470540d6951fd05099251fc5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6e7472696275746f72253230436f76656e616e742d76312e3425323061646f707465642d6666363962342e737667" alt="Contributor Covenant" data-canonical-src="https://img.shields.io/badge/Contributor%20Covenant-v1.4%20adopted-ff69b4.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-continuous-build-status" class="anchor" aria-hidden="true" href="#continuous-build-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Continuous build status&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-official-builds" class="anchor" aria-hidden="true" href="#official-builds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Official Builds&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Build Type&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Artifacts&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux CPU&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-cc.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4a4fdcfa00ca9b58e25faeb12b3c33e76b1a958e/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f7562756e74752d63632e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-cc.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://pypi.org/project/tf-nightly/" rel="nofollow"&gt;PyPI&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux GPU&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-gpu-py3.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/23974bb3500725d9002d3d90db6969209727e67a/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f7562756e74752d6770752d7079332e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-gpu-py3.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://pypi.org/project/tf-nightly-gpu/" rel="nofollow"&gt;PyPI&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux XLA&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-xla.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f87640221ff02de68733023965fbc4158915ae34/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f7562756e74752d786c612e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/ubuntu-xla.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;TBA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/macos-py2-cc.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a870cac7ec5bb83225157f2d8cd29402c5c225c2/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f6d61636f732d7079322d63632e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/macos-py2-cc.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://pypi.org/project/tf-nightly/" rel="nofollow"&gt;PyPI&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Windows CPU&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-cpu.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6bb46296f5a577e642e90c2790cd986fed948001/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f77696e646f77732d6370752e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-cpu.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://pypi.org/project/tf-nightly/" rel="nofollow"&gt;PyPI&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Windows GPU&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-gpu.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dcef118987c7dc26851bd1bf06209a73a321eade/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f77696e646f77732d6770752e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/windows-gpu.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://pypi.org/project/tf-nightly-gpu/" rel="nofollow"&gt;PyPI&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Android&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/android.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ac624987d37e4b45b7d48af47da9a2c59aa91f98/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f616e64726f69642e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/android.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://bintray.com/google/tensorflow/tensorflow/_latestVersion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8c70326c7b5968c1c60c4736aca22ceea7caee29/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f676f6f676c652f74656e736f72666c6f772f74656e736f72666c6f772f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/google/tensorflow/tensorflow/images/download.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Raspberry Pi 0 and 1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py2.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3b1d713c0f336323888f3af38b245d48437bfff6/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f72706930312d7079322e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py2.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py3.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/206345bc65f075349a30f0417d98696db7a3c991/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f72706930312d7079332e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi01-py3.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp27-none-linux_armv6l.whl" rel="nofollow"&gt;Py2&lt;/a&gt; &lt;a href="https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp34-none-linux_armv6l.whl" rel="nofollow"&gt;Py3&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Raspberry Pi 2 and 3&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py2.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d9ad01af09347b9b3d51598136966906db5078f6/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f72706932332d7079322e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py2.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py3.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3005cda539dbd99ffdd30b4a3a53632ca0b3157d/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f74656e736f72666c6f772d6b6f6b6f726f2d6275696c642d6261646765732f72706932332d7079332e737667" alt="Status" data-canonical-src="https://storage.googleapis.com/tensorflow-kokoro-build-badges/rpi23-py3.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp27-none-linux_armv7l.whl" rel="nofollow"&gt;Py2&lt;/a&gt; &lt;a href="https://storage.googleapis.com/tensorflow-nightly/tensorflow-1.10.0-cp34-none-linux_armv7l.whl" rel="nofollow"&gt;Py3&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-community-supported-builds" class="anchor" aria-hidden="true" href="#community-supported-builds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community Supported Builds&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Build Type&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Artifacts&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux AMD ROCm GPU&lt;/strong&gt; Nightly&lt;/td&gt;
&lt;td&gt;&lt;a href="http://ml-ci.amd.com:21096/job/tensorflow-rocm-nightly" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/43be7f8a67c3b3b7d3a36a1e643080d50f0d0161/687474703a2f2f6d6c2d63692e616d642e636f6d3a32313039362f6a6f622f74656e736f72666c6f772d726f636d2d6e696768746c792f62616467652f69636f6e" alt="Build Status" data-canonical-src="http://ml-ci.amd.com:21096/job/tensorflow-rocm-nightly/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="http://ml-ci.amd.com:21096/job/tensorflow-rocm-nightly/lastSuccessfulBuild/" rel="nofollow"&gt;Nightly&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux AMD ROCm GPU&lt;/strong&gt; Stable Release&lt;/td&gt;
&lt;td&gt;&lt;a href="http://ml-ci.amd.com:21096/job/tensorflow-rocm-release/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4b7df6fd69523c6ac58fa4e18020fbb11ccefb3a/687474703a2f2f6d6c2d63692e616d642e636f6d3a32313039362f6a6f622f74656e736f72666c6f772d726f636d2d72656c656173652f62616467652f69636f6e" alt="Build Status" data-canonical-src="http://ml-ci.amd.com:21096/job/tensorflow-rocm-release/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Release &lt;a href="http://ml-ci.amd.com:21096/job/tensorflow-rocm-release/lastSuccessfulBuild/" rel="nofollow"&gt;1.15&lt;/a&gt; / &lt;a href="http://ml-ci.amd.com:21096/job/tensorflow-rocm-v2-release/lastSuccessfulBuild/" rel="nofollow"&gt;2.x&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux s390x&lt;/strong&gt; Nightly&lt;/td&gt;
&lt;td&gt;&lt;a href="http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6bf78ecce19b8d70fd6e2b8b69e9b471f34bd6b4/687474703a2f2f69626d7a2d63692e6f73756f736c2e6f72672f6a6f622f54656e736f72466c6f775f49424d5a5f43492f62616467652f69636f6e" alt="Build Status" data-canonical-src="http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/" rel="nofollow"&gt;Nightly&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux s390x CPU&lt;/strong&gt; Stable Release&lt;/td&gt;
&lt;td&gt;&lt;a href="https://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_Release_Build/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f42181ec41d0488d09a5ee573fdbc99984aa1145/687474703a2f2f69626d7a2d63692e6f73756f736c2e6f72672f6a6f622f54656e736f72466c6f775f49424d5a5f52656c656173655f4275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="http://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_Release_Build/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_Release_Build/" rel="nofollow"&gt;Release&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux ppc64le CPU&lt;/strong&gt; Nightly&lt;/td&gt;
&lt;td&gt;&lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Build/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/54cb21daa12029bb61f4e7d7bc95e0e335ceda2e/68747470733a2f2f706f77657263692e6f73756f736c2e6f72672f6a6f622f54656e736f72466c6f775f50504336344c455f4350555f4275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Build/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Nightly_Artifact/" rel="nofollow"&gt;Nightly&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux ppc64le CPU&lt;/strong&gt; Stable Release&lt;/td&gt;
&lt;td&gt;&lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3b254e3e5afa48aeb9c1ae1a0ae2638d34154b62/68747470733a2f2f706f77657263692e6f73756f736c2e6f72672f6a6f622f54656e736f72466c6f775f50504336344c455f4350555f52656c656173655f4275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Release &lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/" rel="nofollow"&gt;1.15&lt;/a&gt; / &lt;a href="https://powerci.osuosl.org/job/TensorFlow2_PPC64LE_CPU_Release_Build/" rel="nofollow"&gt;2.x&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux ppc64le GPU&lt;/strong&gt; Nightly&lt;/td&gt;
&lt;td&gt;&lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Build/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e8e2513df82fb86f96c447d323ea2cb0dd70b05c/68747470733a2f2f706f77657263692e6f73756f736c2e6f72672f6a6f622f54656e736f72466c6f775f50504336344c455f4750555f4275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Build/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Nightly_Artifact/" rel="nofollow"&gt;Nightly&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux ppc64le GPU&lt;/strong&gt; Stable Release&lt;/td&gt;
&lt;td&gt;&lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7f1f37aee090217fc7a43ea95ca9b0de6939c163/68747470733a2f2f706f77657263692e6f73756f736c2e6f72672f6a6f622f54656e736f72466c6f775f50504336344c455f4750555f52656c656173655f4275696c642f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Release &lt;a href="https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/" rel="nofollow"&gt;1.15&lt;/a&gt; / &lt;a href="https://powerci.osuosl.org/job/TensorFlow2_PPC64LE_GPU_Release_Build/" rel="nofollow"&gt;2.x&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux CPU with Intel¬Æ MKL-DNN&lt;/strong&gt; Nightly&lt;/td&gt;
&lt;td&gt;&lt;a href="https://tensorflow-ci.intel.com/job/tensorflow-mkl-linux-cpu/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/19b607e1a2ef74c4c2de919829b8729df770f3c4/68747470733a2f2f74656e736f72666c6f772d63692e696e74656c2e636f6d2f6a6f622f74656e736f72666c6f772d6d6b6c2d6c696e75782d6370752f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://tensorflow-ci.intel.com/job/tensorflow-mkl-linux-cpu/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-whl-nightly/" rel="nofollow"&gt;Nightly&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linux CPU with Intel¬Æ MKL-DNN&lt;/strong&gt; &lt;br&gt; &lt;strong&gt;Supports Python 2.7, 3.4, 3.5, 3.6 and 3.7&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-release-whl/lastStableBuild" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b2c71a19d8201755f18351c512a056932c4398cf/68747470733a2f2f74656e736f72666c6f772d63692e696e74656c2e636f6d2f6a6f622f74656e736f72666c6f772d6d6b6c2d6275696c642d72656c656173652d77686c2f62616467652f69636f6e" alt="Build Status" data-canonical-src="https://tensorflow-ci.intel.com/job/tensorflow-mkl-build-release-whl/badge/icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://pypi.org/project/intel-tensorflow/" rel="nofollow"&gt;1.14.0 PyPI&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Red Hat¬Æ Enterprise Linux¬Æ 7.6 CPU &amp;amp; GPU&lt;/strong&gt; &lt;br&gt; Python 2.7, 3.6&lt;/td&gt;
&lt;td&gt;&lt;a href="https://jenkins-tensorflow.apps.ci.centos.org/job/tensorflow-rhel7-3.6/2/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/54054605d50d10a330786d70ac221bb8874caa5d/68747470733a2f2f6a656e6b696e732d74656e736f72666c6f772e617070732e63692e63656e746f732e6f72672f6275696c645374617475732f69636f6e3f6a6f623d74656e736f72666c6f772d7268656c372d332e36266275696c643d32" alt="Build Status" data-canonical-src="https://jenkins-tensorflow.apps.ci.centos.org/buildStatus/icon?job=tensorflow-rhel7-3.6&amp;amp;build=2" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://tensorflow.pypi.thoth-station.ninja/index/" rel="nofollow"&gt;1.13.1 PyPI&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.tensorflow.org" rel="nofollow"&gt;TensorFlow.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tensorflow.org/tutorials/" rel="nofollow"&gt;TensorFlow tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tensorflow/models/tree/master/official"&gt;TensorFlow official models&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tensorflow/examples"&gt;TensorFlow examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/specializations/tensorflow-in-practice" rel="nofollow"&gt;TensorFlow in Practice from Coursera&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/intro-to-tensorflow-for-deep-learning--ud187" rel="nofollow"&gt;Intro to TensorFlow for Deep Learning from Udacity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/intro-to-tensorflow-lite--ud190" rel="nofollow"&gt;Introduction to TensorFlow Lite from Udacity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.tensorflow.org" rel="nofollow"&gt;TensorFlow blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/tensorflow" rel="nofollow"&gt;TensorFlow Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC0rqucBdTuFTjJiefW5t-IQ" rel="nofollow"&gt;TensorFlow YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tensorflow.org/community/roadmap" rel="nofollow"&gt;TensorFlow roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tensorflow.org/about/bib" rel="nofollow"&gt;TensorFlow white papers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tensorflow/tensorboard"&gt;TensorBoard visualization toolkit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn more about the
&lt;a href="https://www.tensorflow.org/community" rel="nofollow"&gt;TensorFlow community&lt;/a&gt; and how to
&lt;a href="https://www.tensorflow.org/community/contribute" rel="nofollow"&gt;contribute&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="LICENSE"&gt;Apache License 2.0&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>tensorflow</author><guid isPermaLink="false">https://github.com/tensorflow/tensorflow</guid><pubDate>Wed, 04 Dec 2019 00:13:00 GMT</pubDate></item><item><title>PX4/Firmware #14 in C++, This week</title><link>https://github.com/PX4/Firmware</link><description>&lt;p&gt;&lt;i&gt;PX4 Autopilot Software&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-px4-drone-autopilot" class="anchor" aria-hidden="true" href="#px4-drone-autopilot"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PX4 Drone Autopilot&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/PX4/Firmware/releases"&gt;&lt;img src="https://camo.githubusercontent.com/1f2f2867ec6700d546c63c2a97c127d3d8cacf5c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f5058342f4669726d776172652e737667" alt="Releases" data-canonical-src="https://img.shields.io/github/release/PX4/Firmware.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://zenodo.org/badge/latestdoi/22634/PX4/Firmware" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/774b495aa9042ba05f0c48618eddb9b881c57d28/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f32323633342f5058342f4669726d776172652e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/22634/PX4/Firmware.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ci.px4.io:8080/blue/organizations/jenkins/PX4%2FFirmware/activity" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/403612e8582d51023f4e07e8330271689db09742/687474703a2f2f63692e7078342e696f3a383038302f6275696c645374617475732f69636f6e3f6a6f623d5058342f4669726d776172652f6d6173746572" alt="Build Status" data-canonical-src="http://ci.px4.io:8080/buildStatus/icon?job=PX4/Firmware/master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://slack.px4.io" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/32addff4e5bdbee0c9fbffd49d550c5a87fd96d7/68747470733a2f2f7078342d736c61636b2e6865726f6b756170702e636f6d2f62616467652e737667" alt="Slack" data-canonical-src="https://px4-slack.herokuapp.com/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This repository holds the &lt;a href="http://px4.io" rel="nofollow"&gt;PX4&lt;/a&gt; flight control solution for drones, with the main applications located in the &lt;a href="https://github.com/PX4/Firmware/tree/master/src/modules"&gt;src/modules&lt;/a&gt; directory. It also contains the PX4 Drone Middleware Platform, which provides drivers and middleware to run drones.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Official Website: &lt;a href="http://px4.io" rel="nofollow"&gt;http://px4.io&lt;/a&gt; (License: BSD 3-clause, &lt;a href="https://github.com/PX4/Firmware/blob/master/LICENSE"&gt;LICENSE&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/en/airframes/airframe_reference.html" rel="nofollow"&gt;Supported airframes&lt;/a&gt; (&lt;a href="http://px4.io/#airframes" rel="nofollow"&gt;portfolio&lt;/a&gt;):
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/en/airframes/airframe_reference.html#copter" rel="nofollow"&gt;Multicopters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/en/airframes/airframe_reference.html#plane" rel="nofollow"&gt;Fixed wing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/en/airframes/airframe_reference.html#vtol" rel="nofollow"&gt;VTOL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;many more experimental types (Rovers, Blimps, Boats, Submarines, etc)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Releases: &lt;a href="https://github.com/PX4/Firmware/releases"&gt;Downloads&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-px4-users" class="anchor" aria-hidden="true" href="#px4-users"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PX4 Users&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://docs.px4.io/en/" rel="nofollow"&gt;PX4 User Guide&lt;/a&gt; explains how to assemble &lt;a href="https://docs.px4.io/en/airframes/airframe_reference.html" rel="nofollow"&gt;supported vehicles&lt;/a&gt; and fly drones with PX4.
See the &lt;a href="https://docs.px4.io/en/#support" rel="nofollow"&gt;forum and chat&lt;/a&gt; if you need help!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-px4-developers" class="anchor" aria-hidden="true" href="#px4-developers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PX4 Developers&lt;/h2&gt;
&lt;p&gt;This &lt;a href="https://dev.px4.io/" rel="nofollow"&gt;Developer Guide&lt;/a&gt; is for software developers who want to modify the flight stack and middleware (e.g. to add new flight modes), hardware integrators who want to support new flight controller boards and peripherals, and anyone who wants to get PX4 working on a new (unsupported) airframe/vehicle.&lt;/p&gt;
&lt;p&gt;Developers should read the &lt;a href="https://dev.px4.io/en/contribute/" rel="nofollow"&gt;Guide for Contributions&lt;/a&gt;.
See the &lt;a href="https://dev.px4.io/en/#support" rel="nofollow"&gt;forum and chat&lt;/a&gt; if you need help!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-weekly-dev-call" class="anchor" aria-hidden="true" href="#weekly-dev-call"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Weekly Dev Call&lt;/h3&gt;
&lt;p&gt;The PX4 Dev Team syncs up on a &lt;a href="https://dev.px4.io/en/contribute/#dev_call" rel="nofollow"&gt;weekly dev call&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; The dev call is open to all interested developers (not just the core dev team). This is a great opportunity to meet the team and contribute to the ongoing development of the platform. It includes a QA session for newcomers. All regular calls are listed in the &lt;a href="https://www.dronecode.org/calendar/" rel="nofollow"&gt;Dronecode calendar&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-maintenance-team" class="anchor" aria-hidden="true" href="#maintenance-team"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maintenance Team&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Project: Founder - &lt;a href="https://github.com/LorenzMeier"&gt;Lorenz Meier&lt;/a&gt;, Architecture: &lt;a href="https://github.com/dagar"&gt;Daniel Agar&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/PX4/Firmware/labels/devcall"&gt;Dev Call&lt;/a&gt; - &lt;a href="https://github.com/mrpollo"&gt;Ramon Roche&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Communication Architecture
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bkueng"&gt;Beat Kueng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JulianOes"&gt;Julian Oes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;UI in QGroundControl
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dogmaphobic"&gt;Gus Grubba&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PX4/Firmware/labels/multicopter"&gt;Multicopter Flight Control&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bresch"&gt;Mathieu Bresciani&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PX4/Firmware/labels/multicopter"&gt;Multicopter Software Architecture&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MaEtUgR"&gt;Matthias Grob&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PX4/Firmware/labels/vtol"&gt;VTOL Flight Control&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/RomanBapst"&gt;Roman Bapst&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PX4/Firmware/labels/fixedwing"&gt;Fixed Wing Flight Control&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/RomanBapst"&gt;Roman Bapst&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OS / NuttX &lt;a href="https://github.com/davids5"&gt;David Sidrane&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Driver Architecture &lt;a href="https://github.com/dagar"&gt;Daniel Agar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Commander Architecture &lt;a href="https://github.com/julianoes"&gt;Julian Oes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PX4/Firmware/labels/uavcan"&gt;UAVCAN&lt;/a&gt; &lt;a href="https://github.com/dagar"&gt;Daniel Agar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PX4/Firmware/issues?q=is%3Aopen+is%3Aissue+label%3A%22state+estimation%22"&gt;State Estimation&lt;/a&gt; - &lt;a href="https://github.com/priseborough"&gt;Paul Riseborough&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Vision based navigation
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jkflying"&gt;Julian Kent&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Obstacle Avoidance - &lt;a href="https://github.com/mrivi"&gt;Martina Rivizzigno&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;RTPS/ROS2 Interface - &lt;a href="https://github.com/TSC21"&gt;Nuno Marques&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See also &lt;a href="http://px4.io/about-us/#development_team" rel="nofollow"&gt;About Us&lt;/a&gt; (px4.io) and the &lt;a href="https://github.com/PX4/Firmware/graphs/contributors"&gt;contributors list&lt;/a&gt; (Github).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-hardware" class="anchor" aria-hidden="true" href="#supported-hardware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Hardware&lt;/h2&gt;
&lt;p&gt;This repository contains code supporting these boards:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/snapdragon_flight.html" rel="nofollow"&gt;Snapdragon Flight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/intel_aero.html" rel="nofollow"&gt;Intel Aero&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/raspberry_pi_navio2.html" rel="nofollow"&gt;Raspberry PI with Navio 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.px4.io/master/en/advanced/parrot_bebop.html" rel="nofollow"&gt;Parrot Bebop 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;FMUv2
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/pixhawk.html" rel="nofollow"&gt;Pixhawk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/pixfalcon.html" rel="nofollow"&gt;Pixfalcon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FMUv3
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/pixhawk-2.html" rel="nofollow"&gt;Pixhawk 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/pixhawk_mini.html" rel="nofollow"&gt;Pixhawk Mini&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/pixhack_v3.html" rel="nofollow"&gt;CUAV Pixhack v3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FMUv4
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/pixracer.html" rel="nofollow"&gt;Pixracer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/pixhawk3_pro.html" rel="nofollow"&gt;Pixhawk 3 Pro&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FMUv5 (ARM Cortex M7)
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/pixhawk4.html" rel="nofollow"&gt;Pixhawk 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/pixhawk4_mini.html" rel="nofollow"&gt;Pixhawk 4 mini&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/cuav_v5_plus.html" rel="nofollow"&gt;CUAV V5+&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/cuav_v5_nano.html" rel="nofollow"&gt;CUAV V5 nano&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.mindpx.net/assets/accessories/UserGuide_MindPX.pdf" rel="nofollow"&gt;Airmind MindPX V2.8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mindpx.net/assets/accessories/mindracer_user_guide_v1.2.pdf" rel="nofollow"&gt;Airmind MindRacer V1.2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/crazyflie2.html" rel="nofollow"&gt;Bitcraze Crazyflie 2.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/omnibus_f4_sd.html" rel="nofollow"&gt;Omnibus F4 SD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/beaglebone_blue.html" rel="nofollow"&gt;BeagleBone Blue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/durandal.html" rel="nofollow"&gt;Holybro Durandal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.px4.io/master/en/flight_controller/kakutef7.html" rel="nofollow"&gt;Holybro Kakute F7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additional information about supported hardware can be found in &lt;a href="https://docs.px4.io/master/en/flight_controller/" rel="nofollow"&gt;PX4 user Guide &amp;gt; Autopilot Hardware&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-project-roadmap" class="anchor" aria-hidden="true" href="#project-roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Roadmap&lt;/h2&gt;
&lt;p&gt;A high level project roadmap is available &lt;a href="https://www.dronecode.org/roadmap/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>PX4</author><guid isPermaLink="false">https://github.com/PX4/Firmware</guid><pubDate>Wed, 04 Dec 2019 00:14:00 GMT</pubDate></item><item><title>ocornut/imgui #15 in C++, This week</title><link>https://github.com/ocornut/imgui</link><description>&lt;p&gt;&lt;i&gt;Dear ImGui: Bloat-free Immediate Mode Graphical User interface for C++ with minimal dependencies&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="docs/README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-dear-imgui" class="anchor" aria-hidden="true" href="#dear-imgui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;dear imgui&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/ocornut/imgui/actions?workflow=build"&gt;&lt;img src="https://github.com/ocornut/imgui/workflows/build/badge.svg" alt="Build Status" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://scan.coverity.com/projects/4720" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fd8d75b32a7b7529e474e3811c14a1ff3df9c541/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f343732302f62616467652e737667" alt="Coverity Status" data-canonical-src="https://scan.coverity.com/projects/4720/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;sub&gt;(This library is available under a free and permissive license, but needs financial support to sustain its continued improvements. In addition to maintenance and stability there are many desirable features yet to be added. If your company is using dear imgui, please consider reaching out. If you are an individual using dear imgui, please consider supporting the project via Patreon or PayPal.)&lt;/sub&gt;&lt;/p&gt;
&lt;p&gt;Businesses: support continued development via invoiced technical support, maintenance, sponsoring contracts:
&lt;br&gt;¬†¬†&lt;em&gt;E-mail: contact @ dearimgui dot org&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Individuals/hobbyists: support continued maintenance and development via the monthly Patreon:
&lt;br&gt;¬†¬†&lt;a href="http://www.patreon.com/imgui" rel="nofollow"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/ocornut/imgui/web/patreon_02.png" alt="Patreon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Individuals/hobbyists: support continued maintenance and development via PayPal:
&lt;br&gt;¬†¬†&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=WGHNC6MBFLZ2S" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bce14c8e2e39ba0464551b34602b4c60c182526b/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f656e5f55532f692f62746e2f62746e5f646f6e6174655f4c472e676966" alt="PayPal" data-canonical-src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Dear ImGui is a &lt;strong&gt;bloat-free graphical user interface library for C++&lt;/strong&gt;. It outputs optimized vertex buffers that you can render anytime in your 3D-pipeline enabled application. It is fast, portable, renderer agnostic and self-contained (no external dependencies).&lt;/p&gt;
&lt;p&gt;Dear ImGui is designed to &lt;strong&gt;enable fast iterations&lt;/strong&gt; and to &lt;strong&gt;empower programmers&lt;/strong&gt; to create &lt;strong&gt;content creation tools and visualization / debug tools&lt;/strong&gt; (as opposed to UI for the average end-user). It favors simplicity and productivity toward this goal, and lacks certain features normally found in more high-level libraries.&lt;/p&gt;
&lt;p&gt;Dear ImGui is particularly suited to integration in games engine (for tooling), real-time 3D applications, fullscreen applications, embedded applications, or any applications on consoles platforms where operating system features are non-standard.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt; - &lt;a href="#how-it-works"&gt;How it works&lt;/a&gt; - &lt;a href="#demo"&gt;Demo&lt;/a&gt; - &lt;a href="#integration"&gt;Integration&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="#upcoming-changes"&gt;Upcoming changes&lt;/a&gt; - &lt;a href="#gallery"&gt;Gallery&lt;/a&gt; - &lt;a href="#support-frequently-asked-questions-faq"&gt;Support, FAQ&lt;/a&gt; -  &lt;a href="#how-to-help"&gt;How to help&lt;/a&gt; - &lt;a href="#sponsors"&gt;Sponsors&lt;/a&gt; - &lt;a href="#credits"&gt;Credits&lt;/a&gt; - &lt;a href="#license"&gt;License&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="https://github.com/ocornut/imgui/wiki"&gt;Wiki&lt;/a&gt; - &lt;a href="https://github.com/ocornut/imgui/wiki/Bindings"&gt;Language &amp;amp; frameworks bindings&lt;/a&gt; - &lt;a href="https://github.com/ocornut/imgui/wiki/Software-using-dear-imgui"&gt;Software using Dear ImGui&lt;/a&gt; - &lt;a href="https://github.com/ocornut/imgui/wiki/Quotes"&gt;User quotes&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;The core of Dear ImGui is self-contained within a few platform-agnostic files&lt;/strong&gt; which you can easily copy and compile into your application/engine. They are all the files in the root folder of the repository (imgui.cpp, imgui.h, imgui_demo.cpp, imgui_draw.cpp etc.).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;No specific build process is required&lt;/strong&gt;. You can add the .cpp files to your existing project.&lt;/p&gt;
&lt;p&gt;You will need a backend to integrate Dear ImGui in your app. The backend passes mouse/keyboard/gamepad inputs and variety of settings to Dear ImGui, and is in charge of rendering the resulting vertices.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Backends for a variety of graphics api and rendering platforms&lt;/strong&gt; are provided in the &lt;a href="https://github.com/ocornut/imgui/tree/master/examples"&gt;examples/&lt;/a&gt; folder, along with example applications. See the &lt;a href="#integration"&gt;Integration&lt;/a&gt; section of this document for details. You may also create your own backend. Anywhere where you can render textured triangles, you can render Dear ImGui.&lt;/p&gt;
&lt;p&gt;After Dear ImGui is setup in your application, you can use it from _anywhere_ in your program loop:&lt;/p&gt;
&lt;p&gt;Code:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;ImGui::Text&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello, world %d&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;123&lt;/span&gt;);
&lt;span class="pl-k"&gt;if&lt;/span&gt; (ImGui::Button(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Save&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
    &lt;span class="pl-en"&gt;MySaveFunction&lt;/span&gt;();
&lt;span class="pl-en"&gt;ImGui::InputText&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;string&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, buf, IM_ARRAYSIZE(buf));
&lt;span class="pl-en"&gt;ImGui::SliderFloat&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;float&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &amp;amp;f, &lt;span class="pl-c1"&gt;0&lt;/span&gt;.&lt;span class="pl-c1"&gt;0f&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-c1"&gt;0f&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Result:
&lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v160/code_sample_02.png"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v160/code_sample_02.png" alt="sample code output" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;br&gt;&lt;em&gt;(settings: Dark style (left), Light style (right) / Font: Roboto-Medium, 16px / Rounding: 5)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Code:&lt;/p&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Create a window called "My First Tool", with a menu bar.&lt;/span&gt;
&lt;span class="pl-en"&gt;ImGui::Begin&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My First Tool&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &amp;amp;my_tool_active, ImGuiWindowFlags_MenuBar);
&lt;span class="pl-k"&gt;if&lt;/span&gt; (ImGui::BeginMenuBar())
{
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;ImGui::BeginMenu&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;File&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
    {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;ImGui::MenuItem&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Open..&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Ctrl+O&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Do stuff &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; }
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;ImGui::MenuItem&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Save&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Ctrl+S&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))   { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Do stuff &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; }
        &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;ImGui::MenuItem&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Close&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Ctrl+W&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))  { my_tool_active = &lt;span class="pl-c1"&gt;false&lt;/span&gt;; }
        &lt;span class="pl-c1"&gt;ImGui::EndMenu&lt;/span&gt;();
    }
    &lt;span class="pl-c1"&gt;ImGui::EndMenuBar&lt;/span&gt;();
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Edit a color (stored as ~4 floats)&lt;/span&gt;
&lt;span class="pl-en"&gt;ImGui::ColorEdit4&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Color&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, my_color);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Plot some values&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;float&lt;/span&gt; my_values[] = { &lt;span class="pl-c1"&gt;0&lt;/span&gt;.&lt;span class="pl-c1"&gt;2f&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;.&lt;span class="pl-c1"&gt;1f&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-c1"&gt;0f&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;.&lt;span class="pl-c1"&gt;5f&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;.&lt;span class="pl-c1"&gt;9f&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;.&lt;span class="pl-c1"&gt;2f&lt;/span&gt; };
&lt;span class="pl-en"&gt;ImGui::PlotLines&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Frame Times&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, my_values, IM_ARRAYSIZE(my_values));

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Display contents in a scrolling region&lt;/span&gt;
&lt;span class="pl-en"&gt;ImGui::TextColored&lt;/span&gt;(ImVec4(&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;), "Important Stuff");
&lt;span class="pl-en"&gt;ImGui::BeginChild&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Scrolling&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-k"&gt;for&lt;/span&gt; (&lt;span class="pl-k"&gt;int&lt;/span&gt; n = &lt;span class="pl-c1"&gt;0&lt;/span&gt;; n &amp;lt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;; n++)
    &lt;span class="pl-en"&gt;ImGui::Text&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%04d: Some text&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, n);
&lt;span class="pl-en"&gt;ImGui::EndChild&lt;/span&gt;();
&lt;span class="pl-en"&gt;ImGui::End&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Result:
&lt;br&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v160/code_sample_03_color.gif"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v160/code_sample_03_color.gif" alt="sample code output" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dear ImGui allows you &lt;strong&gt;create elaborate tools&lt;/strong&gt; as well as very short-lived ones. On the extreme side of short-liveness: using the Edit&amp;amp;Continue (hot code reload) feature of modern compilers you can add a few widgets to tweaks variables while your application is running, and remove the code a minute later! Dear ImGui is not just for tweaking values. You can use it to trace a running algorithm by just emitting text commands. You can use it along with your own reflection data to browse your dataset live. You can use it to expose the internals of a subsystem in your engine, to create a logger, an inspection tool, a profiler, a debugger, an entire game making editor/framework, etc.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-how-it-works" class="anchor" aria-hidden="true" href="#how-it-works"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How it works&lt;/h3&gt;
&lt;p&gt;Check out the Wiki's &lt;a href="https://github.com/ocornut/imgui/wiki#About-the-IMGUI-paradigm"&gt;About the IMGUI paradigm&lt;/a&gt; section if you want to understand the core principles behind the IMGUI paradigm. An IMGUI tries to minimize superfluous state duplication, state synchronization and state retention from the user's point of view. It is less error prone (less code and less bugs) than traditional retained-mode interfaces, and lends itself to create dynamic user interfaces.&lt;/p&gt;
&lt;p&gt;Dear ImGui outputs vertex buffers and command lists that you can easily render in your application. The number of draw calls and state changes required to render them is fairly small. Because Dear ImGui doesn't know or touch graphics state directly, you can call its functions  anywhere in your code (e.g. in the middle of a running algorithm, or in the middle of your own rendering process). Refer to the sample applications in the examples/ folder for instructions on how to integrate dear imgui with your existing codebase.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A common misunderstanding is to mistake immediate mode gui for immediate mode rendering, which usually implies hammering your driver/GPU with a bunch of inefficient draw calls and state changes as the gui functions are called. This is NOT what Dear ImGui does. Dear ImGui outputs vertex buffers and a small list of draw calls batches. It never touches your GPU directly. The draw call batches are decently optimal and you can render them later, in your app or even remotely.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-demo" class="anchor" aria-hidden="true" href="#demo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Demo&lt;/h3&gt;
&lt;p&gt;Calling the &lt;code&gt;ImGui::ShowDemoWindow()&lt;/code&gt; function will create a demo window showcasing variety of features and examples. The code is always available for reference in &lt;code&gt;imgui_demo.cpp&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v167/v167-misc.png"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v167/v167-misc.png" alt="screenshot demo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You should be able to build the examples from sources (tested on Windows/Mac/Linux). If you don't, let me know! If you want to have a quick look at some Dear ImGui features, you can download Windows binaries of the demo app here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.dearimgui.org/binaries/imgui-demo-binaries-20190715.zip" rel="nofollow"&gt;imgui-demo-binaries-20190715.zip&lt;/a&gt; (Windows binaries, 1.72 WIP, built 2019/07/15, master branch, 5 executables)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The demo applications are not DPI aware so expect some blurriness on a 4K screen. For DPI awareness in your application, you can load/reload your font at different scale, and scale your style with &lt;code&gt;style.ScaleAllSizes()&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-integration" class="anchor" aria-hidden="true" href="#integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integration&lt;/h3&gt;
&lt;p&gt;On most platforms and when using C++, &lt;strong&gt;you should be able to use a combination of the &lt;a href="https://github.com/ocornut/imgui/tree/master/examples"&gt;imgui_impl_xxxx&lt;/a&gt; files without modification&lt;/strong&gt; (e.g. &lt;code&gt;imgui_impl_win32.cpp&lt;/code&gt; + &lt;code&gt;imgui_impl_dx11.cpp&lt;/code&gt;). If your engine supports multiple platforms, consider using more of the imgui_impl_xxxx files instead of rewriting them: this will be less work for you and you can get Dear ImGui running immediately. You can &lt;em&gt;later&lt;/em&gt; decide to rewrite a custom binding using your custom engine functions if you wish so.&lt;/p&gt;
&lt;p&gt;Integrating Dear ImGui within your custom engine is a matter of 1) wiring mouse/keyboard/gamepad inputs 2) uploading one texture to your GPU/render engine 3) providing a render function that can bind textures and render textured triangles. The &lt;a href="https://github.com/ocornut/imgui/tree/master/examples"&gt;examples/&lt;/a&gt; folder is populated with applications doing just that. If you are an experienced programmer at ease with those concepts, it should take you less than two hours to integrate Dear ImGui in your custom engine. &lt;strong&gt;Make sure to spend time reading the &lt;a href="https://www.dearimgui.org/faq" rel="nofollow"&gt;FAQ&lt;/a&gt;, comments, and some of the examples/ application!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Officially maintained bindings (in repository):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Renderers: DirectX9, DirectX10, DirectX11, DirectX12, OpenGL (legacy), OpenGL3/ES/ES2 (modern), Vulkan, Metal.&lt;/li&gt;
&lt;li&gt;Platforms: GLFW, SDL2, Win32, Glut, OSX.&lt;/li&gt;
&lt;li&gt;Frameworks: Emscripten, Allegro5, Marmalade.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Third-party bindings (see &lt;a href="https://github.com/ocornut/imgui/wiki/Bindings/"&gt;Bindings&lt;/a&gt; page):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Languages: C, C#/.Net, ChaiScript, D, Go, Haxe/hxcpp, Java, JavaScript, Julia, Lua, Odin, Pascal, PureBasic, Python, Ruby, Rust, Swift...&lt;/li&gt;
&lt;li&gt;Frameworks: Amethyst, bsf, Cinder, Cocos2d-x, Diligent Engine, Flexium, GML/GameMakerStudio2, Irrlicht, Ogre, OpenFrameworks, OpenSceneGraph/OSG, ORX, px_render, L√ñVE+Lua, Magnum, NanoRT, Qt, QtDirect3D, SFML, Software Rasterizers, Unreal Engine 4...&lt;/li&gt;
&lt;li&gt;Note that C bindings (&lt;a href="https://github.com/cimgui/cimgui"&gt;cimgui&lt;/a&gt;) are auto-generated, you can use its json/lua output to generate bindings for other languages.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also see &lt;a href="https://github.com/ocornut/imgui/wiki"&gt;Wiki&lt;/a&gt; for more links and ideas.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-upcoming-changes" class="anchor" aria-hidden="true" href="#upcoming-changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Upcoming Changes&lt;/h3&gt;
&lt;p&gt;Some of the goals for 2019+ are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Finish work on docking, tabs. (see &lt;a href="https://github.com/ocornut/imgui/issues/2109"&gt;#2109&lt;/a&gt;, in public &lt;a href="https://github.com/ocornut/imgui/tree/docking"&gt;docking&lt;/a&gt; branch looking for feedback)&lt;/li&gt;
&lt;li&gt;Finish work on multiple viewports / multiple OS windows. (see &lt;a href="https://github.com/ocornut/imgui/issues/1542"&gt;#1542&lt;/a&gt;, in public &lt;a href="https://github.com/ocornut/imgui/tree/docking"&gt;docking&lt;/a&gt; branch looking for feedback)&lt;/li&gt;
&lt;li&gt;Finish work on gamepad/keyboard controls. (see &lt;a href="https://github.com/ocornut/imgui/issues/787"&gt;#787&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add an automation and testing system, both to test the library and end-user apps. (see &lt;a href="https://github.com/ocornut/imgui/issues/435"&gt;#435&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Make Columns better. They are currently pretty terrible! New Tables API coming Q4 2019!&lt;/li&gt;
&lt;li&gt;Make the examples look better, improve styles, improve font support, make the examples hi-DPI and multi-DPI aware.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-gallery" class="anchor" aria-hidden="true" href="#gallery"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gallery&lt;/h3&gt;
&lt;p&gt;For more user-submitted screenshots of projects using Dear ImGui, check out the &lt;a href="https://github.com/ocornut/imgui/issues/2847"&gt;Gallery Threads&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Custom engine
&lt;a href="https://cloud.githubusercontent.com/assets/8225057/20628927/33e14cac-b329-11e6-80f6-9524e93b048a.png" rel="nofollow"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v149/gallery_TheDragonsTrap-01-thumb.jpg" alt="screenshot game" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Custom engine
&lt;a href="https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v160/editor_white.png" rel="nofollow"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v160/editor_white_preview.jpg" alt="screenshot tool" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bitbucket.org/wolfpld/tracy" rel="nofollow"&gt;Tracy Profiler&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v173/tracy_profiler.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/ocornut/imgui/web/v173/tracy_profiler.jpg" alt="tracy profiler" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-support-frequently-asked-questions-faq" class="anchor" aria-hidden="true" href="#support-frequently-asked-questions-faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support, Frequently Asked Questions (FAQ)&lt;/h3&gt;
&lt;p&gt;Most common questions will be answered by the &lt;a href="https://github.com/ocornut/imgui/blob/master/docs/FAQ.md"&gt;Frequently Asked Questions (FAQ)&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;See: &lt;a href="https://github.com/ocornut/imgui/wiki"&gt;Wiki&lt;/a&gt; for many links, references, articles.&lt;/p&gt;
&lt;p&gt;See: &lt;a href="https://github.com/ocornut/imgui/wiki#Articles-about-the-IMGUI-paradigm"&gt;Articles about the IMGUI paradigm&lt;/a&gt; to read/learn about the Immediate Mode GUI paradigm.&lt;/p&gt;
&lt;p&gt;If you are new to Dear ImGui and have issues with: compiling, linking, adding fonts, wiring inputs, running or displaying Dear ImGui: you can use &lt;a href="http://discord.dearimgui.org" rel="nofollow"&gt;Discord server&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Otherwise, for any other questions, bug reports, requests, feedback, you may post on &lt;a href="https://github.com/ocornut/imgui/issues"&gt;https://github.com/ocornut/imgui/issues&lt;/a&gt;. Please read and fill the New Issue template carefully.&lt;/p&gt;
&lt;p&gt;Paid private support is available for business customers (E-mail: &lt;em&gt;contact @ dearimgui dot org&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Which version should I get?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I occasionally tag &lt;a href="https://github.com/ocornut/imgui/releases"&gt;Releases&lt;/a&gt; but it is generally safe and recommended to sync to master/latest. The library is fairly stable and regressions tend to be fixed fast when reported.&lt;/p&gt;
&lt;p&gt;You may also peak at the &lt;a href="https://github.com/ocornut/imgui/issues/1542"&gt;Multi-Viewport&lt;/a&gt; and &lt;a href="https://github.com/ocornut/imgui/issues/2109"&gt;Docking&lt;/a&gt; features in the &lt;code&gt;docking&lt;/code&gt; branch. Many projects are using this branch and it is kept in sync with master regularly.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Who uses Dear ImGui?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;See the &lt;a href="https://github.com/ocornut/imgui/wiki/Quotes"&gt;Quotes&lt;/a&gt; and &lt;a href="https://github.com/ocornut/imgui/wiki/Software-using-dear-imgui"&gt;Software using dear imgui&lt;/a&gt; Wiki pages for a list of games/software which are publicly known to use dear imgui. Please add yours if you can! Also see the &lt;a href="https://github.com/ocornut/imgui/issues/2847"&gt;Gallery Threads&lt;/a&gt;!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-help" class="anchor" aria-hidden="true" href="#how-to-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to help&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;How can I help?&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You may participate in the &lt;a href="http://discord.dearimgui.org" rel="nofollow"&gt;Discord server&lt;/a&gt;, &lt;a href="https://github.com/ocornut/imgui/issues"&gt;GitHub forum/issues&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;You may help with development and submit pull requests! Please understand that by submitting a PR you are also submitting a request for the maintainer to review your code and then take over its maintenance forever. PR should be crafted both in the interest in the end-users and also to ease the maintainer into understanding and accepting it.&lt;/li&gt;
&lt;li&gt;See &lt;a href="https://github.com/ocornut/imgui/wiki/Help-Wanted"&gt;Help wanted&lt;/a&gt; on the &lt;a href="https://github.com/ocornut/imgui/wiki/"&gt;Wiki&lt;/a&gt; for some more ideas.&lt;/li&gt;
&lt;li&gt;Have your company financially support this project.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;How can I help financing further development of Dear ImGui?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Your contributions are keeping this project alive. The library is available under a free and permissive license, but continued maintenance and development are a full-time endeavor and I would like to grow the team. In addition to maintenance and stability there are many desirable features yet to be added. If your company is using dear imgui, please consider reaching out for invoiced technical support and maintenance contracts. If you are an individual using dear imgui, please consider supporting the project via Patreon or PayPal. Thank you!&lt;/p&gt;
&lt;p&gt;Businesses: support continued development via invoiced technical support, maintenance, sponsoring contracts:
&lt;br&gt;¬†¬†&lt;em&gt;E-mail: contact @ dearimgui dot org&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Individuals/hobbyists: support continued maintenance and development via the monthly Patreon:
&lt;br&gt;¬†¬†&lt;a href="http://www.patreon.com/imgui" rel="nofollow"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/ocornut/imgui/web/patreon_02.png" alt="Patreon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Individuals/hobbyists: support continued maintenance and development via PayPal:
&lt;br&gt;¬†¬†&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=WGHNC6MBFLZ2S" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bce14c8e2e39ba0464551b34602b4c60c182526b/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f656e5f55532f692f62746e2f62746e5f646f6e6174655f4c472e676966" alt="PayPal" data-canonical-src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sponsors" class="anchor" aria-hidden="true" href="#sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsors&lt;/h3&gt;
&lt;p&gt;Ongoing Dear ImGui development is financially supported by users and private sponsors, recently:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Platinum-chocolate sponsors&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Blizzard Entertainment&lt;/li&gt;
&lt;li&gt;Google&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Double-chocolate sponsors&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Media Molecule, Mobigame, Aras Pranckeviƒçius, Greggman, DotEmu, Nadeo, Supercell, Runner, Aiden Koss, Kylotonn.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Salty caramel supporters&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Remedy Entertainment, Next Level Games, Recognition Robotics, ikrima, Geoffrey Evans, Mercury Labs, Singularity Demo Group, Lionel Landwerlin, Ron Gilbert, Brandon Townsend, G3DVu, Cort Stratton, drudru, Harfang 3D, Jeff Roberts, Rainway inc, Ondra Voves, Mesh Consultants, Unit 2 Games, Neil Bickford, Bill Six, Graham Manders.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Caramel supporters&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jerome Lanquetot, Daniel Collin, Ctrl Alt Ninja, Neil Henning, Neil Blakey-Milner, Aleksei, NeiloGD, Eric, Game Atelier, Vincent Hamm, Morten Skaaning, Colin Riley, Sergio Gonzales, Andrew Berridge, Roy Eltham, Game Preservation Society, Josh Faust, Martin Donlon, Codecat, Doug McNabb, Emmanuel Julien, Guillaume Chereau, Jeffrey Slutter, Jeremiah Deckard, r-lyeh, Nekith, Joshua Fisher, Malte Hoffmann, Mustafa Karaalioglu, Merlyn Morgan-Graham, Per Vognsen, Fabian Giesen, Jan Staubach, Matt Hargett, John Shearer, Jesse Chounard, kingcoopa, Jonas Bernemann, Johan Andersson, Michael Labbe, Tomasz Golebiowski, Louis Schnellbach, Jimmy Andrews, Bojan Endrovski, Robin Berg Pettersen, Rachel Crawford, Andrew Johnson, Sean Hunter, Jordan Mellow, Nefarius Software Solutions, Laura Wieme, Robert Nix, Mick Honey, Steven Kah Hien Wong, Bartosz Bielecki, Oscar Penas, A M, Liam Moynihan, Artometa, Mark Lee, Dimitri Diakopoulos, Pete Goodwin, Johnathan Roatch, nyu lea, Oswald Hurlem, Semyon Smelyanskiy, Le Bach, Jeong MyeongSoo, Chris Matthews, Astrofra, Frederik De Bleser, Anticrisis, Matt Reyer.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And all other past and present supporters; THANK YOU!
(Please contact me if you would like to be added or removed from this list)&lt;/p&gt;
&lt;p&gt;Dear ImGui is using software and services kindly provided free of charge for open source projects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.viva64.com/en/b/0570/" rel="nofollow"&gt;PVS-Studio&lt;/a&gt; for static analysis.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/features/actions"&gt;GitHub actions&lt;/a&gt; for continuous integration systems.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;Developed by &lt;a href="http://www.miracleworld.net" rel="nofollow"&gt;Omar Cornut&lt;/a&gt; and every direct or indirect contributors to the GitHub. The early version of this library was developed with the support of &lt;a href="http://www.mediamolecule.com" rel="nofollow"&gt;Media Molecule&lt;/a&gt; and first used internally on the game &lt;a href="http://tearaway.mediamolecule.com" rel="nofollow"&gt;Tearaway&lt;/a&gt; (Vita).&lt;/p&gt;
&lt;p&gt;I first discovered the IMGUI paradigm at &lt;a href="http://www.q-games.com" rel="nofollow"&gt;Q-Games&lt;/a&gt; where Atman Binstock had dropped his own simple implementation in the codebase, which I spent quite some time improving and thinking about. It turned out that Atman was exposed to the concept directly by working with Casey. When I moved to Media Molecule I rewrote a new library trying to overcome the flaws and limitations of the first one I've worked with. It became this library and since then I have spent an unreasonable amount of time iterating and improving it.&lt;/p&gt;
&lt;p&gt;Embeds &lt;a href="http://upperbounds.net" rel="nofollow"&gt;ProggyClean.ttf&lt;/a&gt; font by Tristan Grimmer (MIT license).&lt;/p&gt;
&lt;p&gt;Embeds &lt;a href="https://github.com/nothings/stb/"&gt;stb_textedit.h, stb_truetype.h, stb_rect_pack.h&lt;/a&gt; by Sean Barrett (public domain).&lt;/p&gt;
&lt;p&gt;Inspiration, feedback, and testing for early versions: Casey Muratori, Atman Binstock, Mikko Mononen, Emmanuel Briney, Stefan Kamoda, Anton Mikhailov, Matt Willis. And everybody posting feedback, questions and patches on the GitHub.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Dear ImGui is licensed under the MIT License, see &lt;a href="https://github.com/ocornut/imgui/blob/master/LICENSE.txt"&gt;LICENSE.txt&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ocornut</author><guid isPermaLink="false">https://github.com/ocornut/imgui</guid><pubDate>Wed, 04 Dec 2019 00:15:00 GMT</pubDate></item><item><title>microsoft/DirectX-Graphics-Samples #16 in C++, This week</title><link>https://github.com/microsoft/DirectX-Graphics-Samples</link><description>&lt;p&gt;&lt;i&gt;This repo contains the DirectX Graphics samples that demonstrate how to build graphics intensive applications on Windows.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-directx-graphics-samples" class="anchor" aria-hidden="true" href="#directx-graphics-samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DirectX-Graphics-Samples&lt;/h1&gt;
&lt;p&gt;This repo contains the DirectX 12 Graphics samples that demonstrate how to build graphics intensive applications for Windows 10. We invite you to join us at our &lt;a href="http://discord.gg/directx" rel="nofollow"&gt;discord server&lt;/a&gt;. See our &lt;a href="https://www.youtube.com/MicrosoftDirectX12andGraphicsEducation" rel="nofollow"&gt;YouTube channel&lt;/a&gt; for tutorials, our &lt;a href="https://microsoft.github.io/DirectX-Specs/" rel="nofollow"&gt;spec repo&lt;/a&gt; for engineering specs of our features and &lt;a href="https://devblogs.microsoft.com/directx/" rel="nofollow"&gt;devblogs&lt;/a&gt; for blog posts. Follow us on Twitter &lt;a href="https://twitter.com/directx12" rel="nofollow"&gt;@DirectX12&lt;/a&gt; for the latest! See the Related Links section for our full list of DX12-related links.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-api-samples" class="anchor" aria-hidden="true" href="#api-samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API Samples&lt;/h2&gt;
&lt;p&gt;In the Samples directory, you will find samples that attempt to break off specific features and specific usage scenarios into bite-sized chunks. For example, the ExecuteIndirect sample will show you just enough about execute indirect to get started with that feature without diving too deep into multiengine whereas the nBodyGravity sample will delve into multiengine without touching on the execute indirect feature etc. By doing this, we hope to make it easier to get started with DirectX 12.&lt;/p&gt;
&lt;p&gt;Recent API Sample Updates:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="Samples/Desktop/D3D12Raytracing/src/D3D12RaytracingRealTimeDenoisedAmbientOcclusion/readme.md"&gt;Real-Time Denoised Raytraced Ambient Occlusion&lt;/a&gt;: This sample implements a real-time denoiser for 1spp Ambient Occlusion raytraced via DirectX Raytracing.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Samples/Desktop/D3D12Raytracing/src/D3D12RaytracingRealTimeDenoisedAmbientOcclusion/Screenshot_small.png"&gt;&lt;img src="Samples/Desktop/D3D12Raytracing/src/D3D12RaytracingRealTimeDenoisedAmbientOcclusion/Screenshot_small.png" alt="D3D12 Raytracing Real-Time Denoised Ambient Occlusion GUI" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-miniengine-a-directx-12-engine-starter-kit" class="anchor" aria-hidden="true" href="#miniengine-a-directx-12-engine-starter-kit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MiniEngine: A DirectX 12 Engine Starter Kit&lt;/h2&gt;
&lt;p&gt;In addition to the samples, we are announcing the first DirectX 12 preview release of the MiniEngine.&lt;/p&gt;
&lt;p&gt;It came from a desire to quickly dive into graphics and performance experiments.  We knew we would need some basic building blocks whenever starting a new 3D app, and we had already written these things at countless previous gigs.  We got tired of reinventing the wheel, so we established our own core library of helper classes and platform abstractions.  We wanted to be able to create a new app by writing just the Init(), Update(), and Render() functions and leveraging as much reusable code as possible.  Today our core library has been redesigned for DirectX 12 and aims to serve as an example of efficient API usage.  It is obviously not exhaustive of what a game engine needs, but it can serve as the cornerstone of something new.  You can also borrow whatever useful code you find.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-some-features-of-miniengine" class="anchor" aria-hidden="true" href="#some-features-of-miniengine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Some features of MiniEngine&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;High-quality anti-aliased text rendering&lt;/li&gt;
&lt;li&gt;Real-time CPU and GPU profiling&lt;/li&gt;
&lt;li&gt;User-controlled variables&lt;/li&gt;
&lt;li&gt;Game controller, mouse, and keyboard input&lt;/li&gt;
&lt;li&gt;A friendly DirectXMath wrapper&lt;/li&gt;
&lt;li&gt;Perspective camera supporting traditional and reversed Z matrices&lt;/li&gt;
&lt;li&gt;Asynchronous DDS texture loading and ZLib decompression&lt;/li&gt;
&lt;li&gt;Large library of shaders&lt;/li&gt;
&lt;li&gt;Easy shader embedding via a compile-to-header system&lt;/li&gt;
&lt;li&gt;Easy render target, depth target, and unordered access view creation&lt;/li&gt;
&lt;li&gt;A thread-safe GPU command context system (WIP)&lt;/li&gt;
&lt;li&gt;Easy-to-use dynamic constant buffers and descriptor tables&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Windows 10 with the May 2019 Update&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.visualstudio.com/" rel="nofollow"&gt;Visual Studio 2019&lt;/a&gt; with the &lt;a href="https://developer.microsoft.com/en-US/windows/downloads/windows-10-sdk" rel="nofollow"&gt;Windows 10 May 2019 Update SDK (18362)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;We're always looking for your help to fix bugs and improve the samples.  File those pull requests and we'll be happy to take a look.&lt;/p&gt;
&lt;p&gt;Find more information on DirectX 12 on our blog: &lt;a href="http://blogs.msdn.com/b/directx/" rel="nofollow"&gt;http://blogs.msdn.com/b/directx/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Troubleshooting information for this repository can be found in the site &lt;a href="https://github.com/Microsoft/DirectX-Graphics-Samples/wiki"&gt;Wiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-related-links" class="anchor" aria-hidden="true" href="#related-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/windows/win32/directx" rel="nofollow"&gt;DirectX API documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devblogs.microsoft.com/pix/documentation/" rel="nofollow"&gt;PIX on Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/DirectX-Graphics-Samples/tree/master/Libraries/D3DX12"&gt;D3DX12 (the D3D12 Helper Library)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/DirectX-Graphics-Samples/tree/master/Libraries/D3D12RaytracingFallback"&gt;D3D12 Raytracing Fallback Layer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/DirectX-Graphics-Samples/tree/master/Libraries/D3DX12Residency"&gt;D3D12 Residency Starter Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/DirectX-Graphics-Samples/tree/master/Libraries/D3DX12AffinityLayer"&gt;D3D12 MultiGPU Starter Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/DirectXTK12"&gt;DirectX Tool Kit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/DirectX-Debugging-Tools"&gt;D3DDred debugger extension&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>microsoft</author><guid isPermaLink="false">https://github.com/microsoft/DirectX-Graphics-Samples</guid><pubDate>Wed, 04 Dec 2019 00:16:00 GMT</pubDate></item><item><title>electron/electron #17 in C++, This week</title><link>https://github.com/electron/electron</link><description>&lt;p&gt;&lt;i&gt;:electron: Build cross-platform desktop apps with JavaScript, HTML, and CSS&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://electronjs.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/627c774e3070482b180c3abd858ef2145d46303b/68747470733a2f2f656c656374726f6e6a732e6f72672f696d616765732f656c656374726f6e2d6c6f676f2e737667" alt="Electron Logo" data-canonical-src="https://electronjs.org/images/electron-logo.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/electron/electron/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/40e80eb4e1baf46eb68d558cc957c7d925655484/68747470733a2f2f636972636c6563692e636f6d2f67682f656c656374726f6e2f656c656374726f6e2f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="CircleCI Build Status" data-canonical-src="https://circleci.com/gh/electron/electron/tree/master.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/electron-bot/electron-ljo26/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7becf5009becc1f184f06079973315c142541373/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f346c6767693964706a6331716f62376b2f6272616e63682f6d61737465723f7376673d74727565" alt="AppVeyor Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/4lggi9dpjc1qob7k/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://david-dm.org/electron/electron?type=dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/89729600f77228357e4be6fe22cd0ecd6940b267/68747470733a2f2f64617669642d646d2e6f72672f656c656374726f6e2f656c656374726f6e2f6465762d7374617475732e737667" alt="devDependency Status" data-canonical-src="https://david-dm.org/electron/electron/dev-status.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;üìù&lt;/g-emoji&gt; Available Translations: &lt;g-emoji class="g-emoji" alias="cn" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f3.png"&gt;üá®üá≥&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="taiwan" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1fc.png"&gt;üáπüáº&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="brazil" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1f7.png"&gt;üáßüá∑&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="es" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1ea-1f1f8.png"&gt;üá™üá∏&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="kr" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1f7.png"&gt;üá∞üá∑&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="jp" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1ef-1f1f5.png"&gt;üáØüáµ&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="ru" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f7-1f1fa.png"&gt;üá∑üá∫&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="fr" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1eb-1f1f7.png"&gt;üá´üá∑&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="thailand" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1ed.png"&gt;üáπüá≠&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="netherlands" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f3-1f1f1.png"&gt;üá≥üá±&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="tr" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f9-1f1f7.png"&gt;üáπüá∑&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="indonesia" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1e9.png"&gt;üáÆüá©&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="ukraine" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1fa-1f1e6.png"&gt;üá∫üá¶&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="czech_republic" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1ff.png"&gt;üá®üáø&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="it" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1ee-1f1f9.png"&gt;üáÆüáπ&lt;/g-emoji&gt; &lt;g-emoji class="g-emoji" alias="poland" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f5-1f1f1.png"&gt;üáµüá±&lt;/g-emoji&gt;.
View these docs in other languages at &lt;a href="https://github.com/electron/i18n/tree/master/content/"&gt;electron/i18n&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Electron framework lets you write cross-platform desktop applications
using JavaScript, HTML and CSS. It is based on &lt;a href="https://nodejs.org/" rel="nofollow"&gt;Node.js&lt;/a&gt; and
&lt;a href="https://www.chromium.org" rel="nofollow"&gt;Chromium&lt;/a&gt; and is used by the &lt;a href="https://github.com/atom/atom"&gt;Atom
editor&lt;/a&gt; and many other &lt;a href="https://electronjs.org/apps" rel="nofollow"&gt;apps&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Follow &lt;a href="https://twitter.com/electronjs" rel="nofollow"&gt;@ElectronJS&lt;/a&gt; on Twitter for important
announcements.&lt;/p&gt;
&lt;p&gt;This project adheres to the Contributor Covenant
&lt;a href="https://github.com/electron/electron/tree/master/CODE_OF_CONDUCT.md"&gt;code of conduct&lt;/a&gt;.
By participating, you are expected to uphold this code. Please report unacceptable
behavior to &lt;a href="mailto:coc@electronjs.org"&gt;coc@electronjs.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;To install prebuilt Electron binaries, use &lt;a href="https://docs.npmjs.com/" rel="nofollow"&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/a&gt;.
The preferred method is to install Electron as a development dependency in your
app:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;npm install electron --save-dev [--save-exact]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;--save-exact&lt;/code&gt; flag is recommended for Electron prior to version 2, as it does not follow semantic
versioning. As of version 2.0.0, Electron follows semver, so you don't need &lt;code&gt;--save-exact&lt;/code&gt; flag. For info on how to manage Electron versions in your apps, see
&lt;a href="docs/tutorial/electron-versioning.md"&gt;Electron versioning&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For more installation options and troubleshooting tips, see
&lt;a href="docs/tutorial/installation.md"&gt;installation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start--electron-fiddle" class="anchor" aria-hidden="true" href="#quick-start--electron-fiddle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick start &amp;amp; Electron Fiddle&lt;/h2&gt;
&lt;p&gt;Use &lt;a href="https://github.com/electron/fiddle"&gt;&lt;code&gt;Electron Fiddle&lt;/code&gt;&lt;/a&gt;
to build, run, and package small Electron experiments, to see code examples for all of Electron's APIs, and
to try out different versions of Electron. It's designed to make the start of your journey with
Electron easier.&lt;/p&gt;
&lt;p&gt;Alternatively, clone and run the
&lt;a href="https://github.com/electron/electron-quick-start"&gt;electron/electron-quick-start&lt;/a&gt;
repository to see a minimal Electron app in action:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/electron/electron-quick-start
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; electron-quick-start
npm install
npm start&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-resources-for-learning-electron" class="anchor" aria-hidden="true" href="#resources-for-learning-electron"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources for learning Electron&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://electronjs.org/docs" rel="nofollow"&gt;electronjs.org/docs&lt;/a&gt; - All of Electron's documentation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/electron/fiddle"&gt;electron/fiddle&lt;/a&gt; - A tool to build, run, and package small Electron experiments&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/electron/electron-quick-start"&gt;electron/electron-quick-start&lt;/a&gt; - A very basic starter Electron app&lt;/li&gt;
&lt;li&gt;&lt;a href="https://electronjs.org/community#boilerplates" rel="nofollow"&gt;electronjs.org/community#boilerplates&lt;/a&gt; - Sample starter apps created by the community&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/electron/simple-samples"&gt;electron/simple-samples&lt;/a&gt; - Small applications with ideas for taking them further&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/electron/electron-api-demos"&gt;electron/electron-api-demos&lt;/a&gt; - An Electron app that teaches you how to use Electron&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hokein/electron-sample-apps"&gt;hokein/electron-sample-apps&lt;/a&gt; - Small demo apps for the various Electron APIs&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-programmatic-usage" class="anchor" aria-hidden="true" href="#programmatic-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Programmatic usage&lt;/h2&gt;
&lt;p&gt;Most people use Electron from the command line, but if you require &lt;code&gt;electron&lt;/code&gt; inside
your &lt;strong&gt;Node app&lt;/strong&gt; (not your Electron app) it will return the file path to the
binary. Use this to spawn Electron from Node scripts:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;electron&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;electron&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;proc&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;child_process&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; will print something similar to /Users/maf/.../Electron&lt;/span&gt;
&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(electron)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; spawn Electron&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;child&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;proc&lt;/span&gt;.&lt;span class="pl-en"&gt;spawn&lt;/span&gt;(electron)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-mirrors" class="anchor" aria-hidden="true" href="#mirrors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mirrors&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://npm.taobao.org/mirrors/electron" rel="nofollow"&gt;China&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation-translations" class="anchor" aria-hidden="true" href="#documentation-translations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation Translations&lt;/h2&gt;
&lt;p&gt;Find documentation translations in &lt;a href="https://github.com/electron/i18n"&gt;electron/i18n&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;If you are interested in reporting/fixing issues and contributing directly to the code base, please see &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for more information on what we're looking for and how to get started.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;p&gt;Info on reporting bugs, getting help, finding third-party tools and sample apps,
and more can be found in the &lt;a href="docs/tutorial/support.md#finding-support"&gt;support document&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/electron/electron/blob/master/LICENSE"&gt;MIT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When using the Electron or other GitHub logos, be sure to follow the &lt;a href="https://github.com/logos"&gt;GitHub logo guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>electron</author><guid isPermaLink="false">https://github.com/electron/electron</guid><pubDate>Wed, 04 Dec 2019 00:17:00 GMT</pubDate></item><item><title>Tencent/ncnn #18 in C++, This week</title><link>https://github.com/Tencent/ncnn</link><description>&lt;p&gt;&lt;i&gt;ncnn is a high-performance neural network inference framework optimized for the mobile platform&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/Tencent/ncnn/master/images/256-ncnn.png"&gt;&lt;img src="https://raw.githubusercontent.com/Tencent/ncnn/master/images/256-ncnn.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-ncnn" class="anchor" aria-hidden="true" href="#ncnn"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ncnn&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Tencent/ncnn/master/LICENSE.txt" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/274d07206c413193cf01e32de7f897d98da66ca2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4253442d2d332d2d436c617573652d626c75652e737667" alt="License" data-canonical-src="https://img.shields.io/badge/license-BSD--3--Clause-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/Tencent/ncnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/26be3e5f9775cbef86a83e66c739780aeb676a54/68747470733a2f2f7472617669732d63692e6f72672f54656e63656e742f6e636e6e2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/Tencent/ncnn.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/Tencent/ncnn?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bcc7709367d4f3800ff9a1b8053e70c327e5ac63/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f54656e63656e742f6e636e6e2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/Tencent/ncnn/badge.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ncnn is a high-performance neural network inference computing framework optimized for mobile platforms. ncnn is deeply considerate about deployment and uses on mobile phones from the beginning of design. ncnn does not have third party dependencies. it is cross-platform, and runs faster than all known open source frameworks on mobile phone cpu. Developers can easily deploy deep learning algorithm models to the mobile platform by using efficient ncnn implementation, create intelligent APPs, and bring the artificial intelligence to your fingertips. ncnn is currently being used in many Tencent applications, such as QQ, Qzone, WeChat, Pitu and so on.&lt;/p&gt;
&lt;p&gt;ncnn ÊòØ‰∏Ä‰∏™‰∏∫ÊâãÊú∫Á´ØÊûÅËá¥‰ºòÂåñÁöÑÈ´òÊÄßËÉΩÁ•ûÁªèÁΩëÁªúÂâçÂêëËÆ°ÁÆóÊ°ÜÊû∂„ÄÇncnn ‰ªéËÆæËÆ°‰πãÂàùÊ∑±ÂàªËÄÉËôëÊâãÊú∫Á´ØÁöÑÈÉ®ÁΩ≤Âíå‰ΩøÁî®„ÄÇÊó†Á¨¨‰∏âÊñπ‰æùËµñÔºåË∑®Âπ≥Âè∞ÔºåÊâãÊú∫Á´Ø cpu ÁöÑÈÄüÂ∫¶Âø´‰∫éÁõÆÂâçÊâÄÊúâÂ∑≤Áü•ÁöÑÂºÄÊ∫êÊ°ÜÊû∂„ÄÇÂü∫‰∫é ncnnÔºåÂºÄÂèëËÄÖËÉΩÂ§üÂ∞ÜÊ∑±Â∫¶Â≠¶‰π†ÁÆóÊ≥ïËΩªÊùæÁßªÊ§çÂà∞ÊâãÊú∫Á´ØÈ´òÊïàÊâßË°åÔºåÂºÄÂèëÂá∫‰∫∫Â∑•Êô∫ËÉΩ APPÔºåÂ∞Ü AI Â∏¶Âà∞‰Ω†ÁöÑÊåáÂ∞ñ„ÄÇncnn ÁõÆÂâçÂ∑≤Âú®ËÖæËÆØÂ§öÊ¨æÂ∫îÁî®‰∏≠‰ΩøÁî®ÔºåÂ¶Ç QQÔºåQzoneÔºåÂæÆ‰ø°ÔºåÂ§©Â§©PÂõæÁ≠â„ÄÇ&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-current-building-status-matrix" class="anchor" aria-hidden="true" href="#current-building-status-matrix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Current building status matrix&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;System&lt;/th&gt;
&lt;th align="center"&gt;CPU (32bit)&lt;/th&gt;
&lt;th align="center"&gt;CPU (64bit)&lt;/th&gt;
&lt;th align="center"&gt;GPU (32bit)&lt;/th&gt;
&lt;th align="center"&gt;GPU (64bit)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Linux (GCC)&lt;/td&gt;
&lt;td align="center"&gt;‚Äî&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://travis-ci.org/Tencent/ncnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2b81b5a9f0a095c231902030b7e81000a8cbd04e/68747470733a2f2f6261646765732e6865726f6b756170702e636f6d2f7472617669732f54656e63656e742f6e636e6e3f656e763d4e414d453d6c696e75782d676363266c6162656c3d6275696c64" alt="Build Status" data-canonical-src="https://badges.herokuapp.com/travis/Tencent/ncnn?env=NAME=linux-gcc&amp;amp;label=build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;‚Äî&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://travis-ci.org/Tencent/ncnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3fd650c46d10bc0a04ea624c3a9aa85289c25f4a/68747470733a2f2f6261646765732e6865726f6b756170702e636f6d2f7472617669732f54656e63656e742f6e636e6e3f656e763d4e414d453d6c696e75782d6763632d677075266c6162656c3d6275696c64" alt="Build Status" data-canonical-src="https://badges.herokuapp.com/travis/Tencent/ncnn?env=NAME=linux-gcc-gpu&amp;amp;label=build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Linux (Clang)&lt;/td&gt;
&lt;td align="center"&gt;‚Äî&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://travis-ci.org/Tencent/ncnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/227e423eeefb5213b38b0969e540935744bd48ce/68747470733a2f2f6261646765732e6865726f6b756170702e636f6d2f7472617669732f54656e63656e742f6e636e6e3f656e763d4e414d453d6c696e75782d636c616e67266c6162656c3d6275696c64" alt="Build Status" data-canonical-src="https://badges.herokuapp.com/travis/Tencent/ncnn?env=NAME=linux-clang&amp;amp;label=build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;‚Äî&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://travis-ci.org/Tencent/ncnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/579631919d5e3c17a43171220a9b6c7522e073b1/68747470733a2f2f6261646765732e6865726f6b756170702e636f6d2f7472617669732f54656e63656e742f6e636e6e3f656e763d4e414d453d6c696e75782d636c616e672d677075266c6162656c3d6275696c64" alt="Build Status" data-canonical-src="https://badges.herokuapp.com/travis/Tencent/ncnn?env=NAME=linux-clang-gpu&amp;amp;label=build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Windows (VS2017)&lt;/td&gt;
&lt;td align="center"&gt;‚Äî&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://travis-ci.org/Tencent/ncnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/104d555679272070539c570db111df5ebf098357/68747470733a2f2f6261646765732e6865726f6b756170702e636f6d2f7472617669732f54656e63656e742f6e636e6e3f656e763d4e414d453d77696e646f77732d767332303137266c6162656c3d6275696c64" alt="Build Status" data-canonical-src="https://badges.herokuapp.com/travis/Tencent/ncnn?env=NAME=windows-vs2017&amp;amp;label=build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;‚Äî&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://travis-ci.org/Tencent/ncnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ff7f38e4684eef80fb4122c0d4e34cb27afc8a02/68747470733a2f2f6261646765732e6865726f6b756170702e636f6d2f7472617669732f54656e63656e742f6e636e6e3f656e763d4e414d453d77696e646f77732d7673323031372d677075266c6162656c3d6275696c64" alt="Build Status" data-canonical-src="https://badges.herokuapp.com/travis/Tencent/ncnn?env=NAME=windows-vs2017-gpu&amp;amp;label=build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;MacOS&lt;/td&gt;
&lt;td align="center"&gt;‚Äî&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://travis-ci.org/Tencent/ncnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/af9d50ad5fbdc1fd1a88921e3f99ed7ce5385964/68747470733a2f2f6261646765732e6865726f6b756170702e636f6d2f7472617669732f54656e63656e742f6e636e6e3f656e763d4e414d453d6d61636f732d636c616e67266c6162656c3d6275696c64" alt="Build Status" data-canonical-src="https://badges.herokuapp.com/travis/Tencent/ncnn?env=NAME=macos-clang&amp;amp;label=build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;‚Äî&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://travis-ci.org/Tencent/ncnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/39e235ed6b83062b72e89f65b0889fb4ebfdca8b/68747470733a2f2f6261646765732e6865726f6b756170702e636f6d2f7472617669732f54656e63656e742f6e636e6e3f656e763d4e414d453d6d61636f732d636c616e672d677075266c6162656c3d6275696c64" alt="Build Status" data-canonical-src="https://badges.herokuapp.com/travis/Tencent/ncnn?env=NAME=macos-clang-gpu&amp;amp;label=build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Android&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://travis-ci.org/Tencent/ncnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8072769a7bebba796115d86861e11931baeee436/68747470733a2f2f6261646765732e6865726f6b756170702e636f6d2f7472617669732f54656e63656e742f6e636e6e3f656e763d4e414d453d616e64726f69642d61726d7637266c6162656c3d6275696c64" alt="Build Status" data-canonical-src="https://badges.herokuapp.com/travis/Tencent/ncnn?env=NAME=android-armv7&amp;amp;label=build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://travis-ci.org/Tencent/ncnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/573881aec341a7a46efd48abeeefacda6230922b/68747470733a2f2f6261646765732e6865726f6b756170702e636f6d2f7472617669732f54656e63656e742f6e636e6e3f656e763d4e414d453d616e64726f69642d61726d76372d677075266c6162656c3d6275696c64" alt="Build Status" data-canonical-src="https://badges.herokuapp.com/travis/Tencent/ncnn?env=NAME=android-armv7-gpu&amp;amp;label=build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://travis-ci.org/Tencent/ncnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d3a7c2f87aa8d2a7bdb5537ed4a3d09d8e818b1f/68747470733a2f2f6261646765732e6865726f6b756170702e636f6d2f7472617669732f54656e63656e742f6e636e6e3f656e763d4e414d453d616e64726f69642d61617263683634266c6162656c3d6275696c64" alt="Build Status" data-canonical-src="https://badges.herokuapp.com/travis/Tencent/ncnn?env=NAME=android-aarch64&amp;amp;label=build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://travis-ci.org/Tencent/ncnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1fb893f3a42a9f4a56be3a0ebd03895fed65a797/68747470733a2f2f6261646765732e6865726f6b756170702e636f6d2f7472617669732f54656e63656e742f6e636e6e3f656e763d4e414d453d616e64726f69642d616172636836342d677075266c6162656c3d6275696c64" alt="Build Status" data-canonical-src="https://badges.herokuapp.com/travis/Tencent/ncnn?env=NAME=android-aarch64-gpu&amp;amp;label=build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Android-x86&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://travis-ci.org/Tencent/ncnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f8e49f0e4d44d4e03ee9dd78ca75645297377a64/68747470733a2f2f6261646765732e6865726f6b756170702e636f6d2f7472617669732f54656e63656e742f6e636e6e3f656e763d4e414d453d616e64726f69642d783836266c6162656c3d6275696c64" alt="Build Status" data-canonical-src="https://badges.herokuapp.com/travis/Tencent/ncnn?env=NAME=android-x86&amp;amp;label=build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://travis-ci.org/Tencent/ncnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ebbc378d4f8f41967bb2a47947a56203cbcb64ef/68747470733a2f2f6261646765732e6865726f6b756170702e636f6d2f7472617669732f54656e63656e742f6e636e6e3f656e763d4e414d453d616e64726f69642d7838362d677075266c6162656c3d6275696c64" alt="Build Status" data-canonical-src="https://badges.herokuapp.com/travis/Tencent/ncnn?env=NAME=android-x86-gpu&amp;amp;label=build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://travis-ci.org/Tencent/ncnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4f80f1800c866c6f02bf44eb4df1e64c5a3a3393/68747470733a2f2f6261646765732e6865726f6b756170702e636f6d2f7472617669732f54656e63656e742f6e636e6e3f656e763d4e414d453d616e64726f69642d7838365f3634266c6162656c3d6275696c64" alt="Build Status" data-canonical-src="https://badges.herokuapp.com/travis/Tencent/ncnn?env=NAME=android-x86_64&amp;amp;label=build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://travis-ci.org/Tencent/ncnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/71882f66d176830df3e6455b6f20d0e0812e0dc0/68747470733a2f2f6261646765732e6865726f6b756170702e636f6d2f7472617669732f54656e63656e742f6e636e6e3f656e763d4e414d453d616e64726f69642d7838365f36342d677075266c6162656c3d6275696c64" alt="Build Status" data-canonical-src="https://badges.herokuapp.com/travis/Tencent/ncnn?env=NAME=android-x86_64-gpu&amp;amp;label=build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;iOS&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://travis-ci.org/Tencent/ncnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/55aea073335e626817ffb2c6cbf8e790b4e84710/68747470733a2f2f6261646765732e6865726f6b756170702e636f6d2f7472617669732f54656e63656e742f6e636e6e3f656e763d4e414d453d696f732d6970686f6e656f73266c6162656c3d6275696c64" alt="Build Status" data-canonical-src="https://badges.herokuapp.com/travis/Tencent/ncnn?env=NAME=ios-iphoneos&amp;amp;label=build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://travis-ci.org/Tencent/ncnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/55aea073335e626817ffb2c6cbf8e790b4e84710/68747470733a2f2f6261646765732e6865726f6b756170702e636f6d2f7472617669732f54656e63656e742f6e636e6e3f656e763d4e414d453d696f732d6970686f6e656f73266c6162656c3d6275696c64" alt="Build Status" data-canonical-src="https://badges.herokuapp.com/travis/Tencent/ncnn?env=NAME=ios-iphoneos&amp;amp;label=build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;‚Äî&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://travis-ci.org/Tencent/ncnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dfbe3a3bae6488560fc8f7ce8567f37d5d015156/68747470733a2f2f6261646765732e6865726f6b756170702e636f6d2f7472617669732f54656e63656e742f6e636e6e3f656e763d4e414d453d696f732d6970686f6e656f732d677075266c6162656c3d6275696c64" alt="Build Status" data-canonical-src="https://badges.herokuapp.com/travis/Tencent/ncnn?env=NAME=ios-iphoneos-gpu&amp;amp;label=build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;iOS Simulator&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://travis-ci.org/Tencent/ncnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/78d89db8454ae5031b3ea4c9244285aa87dc6cb2/68747470733a2f2f6261646765732e6865726f6b756170702e636f6d2f7472617669732f54656e63656e742f6e636e6e3f656e763d4e414d453d696f732d6970686f6e6573696d756c61746f72266c6162656c3d6275696c64" alt="Build Status" data-canonical-src="https://badges.herokuapp.com/travis/Tencent/ncnn?env=NAME=ios-iphonesimulator&amp;amp;label=build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://travis-ci.org/Tencent/ncnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/78d89db8454ae5031b3ea4c9244285aa87dc6cb2/68747470733a2f2f6261646765732e6865726f6b756170702e636f6d2f7472617669732f54656e63656e742f6e636e6e3f656e763d4e414d453d696f732d6970686f6e6573696d756c61746f72266c6162656c3d6275696c64" alt="Build Status" data-canonical-src="https://badges.herokuapp.com/travis/Tencent/ncnn?env=NAME=ios-iphonesimulator&amp;amp;label=build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;‚Äî&lt;/td&gt;
&lt;td align="center"&gt;‚Äî&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;WebAssembly&lt;/td&gt;
&lt;td align="center"&gt;‚Äî&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://travis-ci.org/Tencent/ncnn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/44043cd667ccbf6cb1cb997eec282ffa0f4e3ec7/68747470733a2f2f6261646765732e6865726f6b756170702e636f6d2f7472617669732f54656e63656e742f6e636e6e3f656e763d4e414d453d776562617373656d626c79266c6162656c3d6275696c64" alt="Build Status" data-canonical-src="https://badges.herokuapp.com/travis/Tencent/ncnn?env=NAME=webassembly&amp;amp;label=build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;‚Äî&lt;/td&gt;
&lt;td align="center"&gt;‚Äî&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-support-most-commonly-used-cnn-network" class="anchor" aria-hidden="true" href="#support-most-commonly-used-cnn-network"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support most commonly used CNN network&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-ÊîØÊåÅÂ§ßÈÉ®ÂàÜÂ∏∏Áî®ÁöÑ-cnn-ÁΩëÁªú" class="anchor" aria-hidden="true" href="#ÊîØÊåÅÂ§ßÈÉ®ÂàÜÂ∏∏Áî®ÁöÑ-cnn-ÁΩëÁªú"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ÊîØÊåÅÂ§ßÈÉ®ÂàÜÂ∏∏Áî®ÁöÑ CNN ÁΩëÁªú&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Classical CNN: VGG AlexNet GoogleNet Inception ...&lt;/li&gt;
&lt;li&gt;Practical CNN: ResNet DenseNet SENet FPN ...&lt;/li&gt;
&lt;li&gt;Light-weight CNN: SqueezeNet MobileNetV1/V2/V3 ShuffleNetV1/V2 MNasNet ...&lt;/li&gt;
&lt;li&gt;Detection: MTCNN facedetection ...&lt;/li&gt;
&lt;li&gt;Detection: VGG-SSD MobileNet-SSD SqueezeNet-SSD MobileNetV2-SSDLite ...&lt;/li&gt;
&lt;li&gt;Detection: Faster-RCNN R-FCN ...&lt;/li&gt;
&lt;li&gt;Detection: YOLOV2 YOLOV3 MobileNet-YOLOV3 ...&lt;/li&gt;
&lt;li&gt;Segmentation: FCN PSPNet UNet ...&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-howto" class="anchor" aria-hidden="true" href="#howto"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HowTo&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/Tencent/ncnn/wiki/how-to-build"&gt;how to build ncnn library&lt;/a&gt; on Linux / Windows / Raspberry Pi3 / Android / NVIDIA Jetson / iOS&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-nvidia-jetson"&gt;Build for NVIDIA Jetson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-linux-x86"&gt;Build for Linux x86&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-windows-x64-using-visual-studio-community-2017"&gt;Build for Windows x64 using VS2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-macosx"&gt;Build for MacOSX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-raspberry-pi-3"&gt;Build for Raspberry Pi 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-arm-cortex-a-family-with-cross-compiling"&gt;Build for ARM Cortex-A family with cross-compiling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-android"&gt;Build for Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-ios-on-macosx-with-xcode"&gt;Build for iOS on MacOSX with xcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-ios-on-linux-with-cctools-port"&gt;Build for iOS on Linux with cctools-port&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tencent/ncnn/wiki/how-to-build#build-for-hisilicon-platform-with-cross-compiling"&gt;Build for Hisilicon platform with cross-compiling&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/Tencent/ncnn/releases"&gt;download prebuild binary package for android and ios&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/Tencent/ncnn/wiki/use-ncnn-with-alexnet"&gt;use ncnn with alexnet&lt;/a&gt; with detailed steps, recommended for beginners :)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/Tencent/ncnn/wiki/use-ncnn-with-alexnet.zh"&gt;ncnn ÁªÑ‰ª∂‰ΩøÁî®ÊåáÂåó alexnet&lt;/a&gt; ÈôÑÂ∏¶ËØ¶ÁªÜÊ≠•È™§ÔºåÊñ∞‰∫∫Âº∫ÁÉàÊé®Ëçê :)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://lutzroeder.github.io/netron/" rel="nofollow"&gt;use netron for ncnn model visualization&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Tencent/ncnn/wiki/low-level-operation-api"&gt;ncnn low-level operation api&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Tencent/ncnn/wiki/param-and-model-file-structure"&gt;ncnn param and model file spec&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Tencent/ncnn/wiki/operation-param-weight-table"&gt;ncnn operation param weight table&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Tencent/ncnn/wiki/how-to-implement-custom-layer-step-by-step"&gt;how to implement custom layer step by step&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/Tencent/ncnn/wiki/FAQ-ncnn-throw-error"&gt;ncnn throw error&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/Tencent/ncnn/wiki/FAQ-ncnn-produce-wrong-result"&gt;ncnn produce wrong result&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/Tencent/ncnn/wiki/FAQ-ncnn-vulkan"&gt;ncnn vulkan&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Supports convolutional neural networks, supports multiple input and multi-branch structure, can calculate part of the branch&lt;/li&gt;
&lt;li&gt;No third-party library dependencies, does not rely on BLAS / NNPACK or any other computing framework&lt;/li&gt;
&lt;li&gt;Pure C ++ implementation, cross-platform, supports android, ios and so on&lt;/li&gt;
&lt;li&gt;ARM NEON assembly level of careful optimization, calculation speed is extremely high&lt;/li&gt;
&lt;li&gt;Sophisticated memory management and data structure design, very low memory footprint&lt;/li&gt;
&lt;li&gt;Supports multi-core parallel computing acceleration, ARM big.LITTLE cpu scheduling optimization&lt;/li&gt;
&lt;li&gt;Supports GPU acceleration via the next-generation low-overhead vulkan api&lt;/li&gt;
&lt;li&gt;The overall library size is less than 700K, and can be easily reduced to less than 300K&lt;/li&gt;
&lt;li&gt;Extensible model design, supports 8bit quantization and half-precision floating point storage, can import caffe/pytorch/mxnet/onnx models&lt;/li&gt;
&lt;li&gt;Support direct memory zero copy reference load network model&lt;/li&gt;
&lt;li&gt;Can be registered with custom layer implementation and extended&lt;/li&gt;
&lt;li&gt;Well, it is strong, not afraid of being stuffed with Âç∑   QvQ&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-ÂäüËÉΩÊ¶ÇËø∞" class="anchor" aria-hidden="true" href="#ÂäüËÉΩÊ¶ÇËø∞"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ÂäüËÉΩÊ¶ÇËø∞&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ÊîØÊåÅÂç∑ÁßØÁ•ûÁªèÁΩëÁªúÔºåÊîØÊåÅÂ§öËæìÂÖ•ÂíåÂ§öÂàÜÊîØÁªìÊûÑÔºåÂèØËÆ°ÁÆóÈÉ®ÂàÜÂàÜÊîØ&lt;/li&gt;
&lt;li&gt;Êó†‰ªª‰ΩïÁ¨¨‰∏âÊñπÂ∫ì‰æùËµñÔºå‰∏ç‰æùËµñ BLAS/NNPACK Á≠âËÆ°ÁÆóÊ°ÜÊû∂&lt;/li&gt;
&lt;li&gt;Á∫Ø C++ ÂÆûÁé∞ÔºåË∑®Âπ≥Âè∞ÔºåÊîØÊåÅ android ios Á≠â&lt;/li&gt;
&lt;li&gt;ARM NEON Ê±áÁºñÁ∫ßËâØÂøÉ‰ºòÂåñÔºåËÆ°ÁÆóÈÄüÂ∫¶ÊûÅÂø´&lt;/li&gt;
&lt;li&gt;Á≤æÁªÜÁöÑÂÜÖÂ≠òÁÆ°ÁêÜÂíåÊï∞ÊçÆÁªìÊûÑËÆæËÆ°ÔºåÂÜÖÂ≠òÂç†Áî®ÊûÅ‰Ωé&lt;/li&gt;
&lt;li&gt;ÊîØÊåÅÂ§öÊ†∏Âπ∂Ë°åËÆ°ÁÆóÂä†ÈÄüÔºåARM big.LITTLE cpu Ë∞ÉÂ∫¶‰ºòÂåñ&lt;/li&gt;
&lt;li&gt;ÊîØÊåÅÂü∫‰∫éÂÖ®Êñ∞‰ΩéÊ∂àËÄóÁöÑ vulkan api GPU Âä†ÈÄü&lt;/li&gt;
&lt;li&gt;Êï¥‰ΩìÂ∫ì‰ΩìÁßØÂ∞è‰∫é 700KÔºåÂπ∂ÂèØËΩªÊùæÁ≤æÁÆÄÂà∞Â∞è‰∫é 300K&lt;/li&gt;
&lt;li&gt;ÂèØÊâ©Â±ïÁöÑÊ®°ÂûãËÆæËÆ°ÔºåÊîØÊåÅ 8bit ÈáèÂåñÂíåÂçäÁ≤æÂ∫¶ÊµÆÁÇπÂ≠òÂÇ®ÔºåÂèØÂØºÂÖ• caffe/pytorch/mxnet/onnx Ê®°Âûã&lt;/li&gt;
&lt;li&gt;ÊîØÊåÅÁõ¥Êé•ÂÜÖÂ≠òÈõ∂Êã∑Ë¥ùÂºïÁî®Âä†ËΩΩÁΩëÁªúÊ®°Âûã&lt;/li&gt;
&lt;li&gt;ÂèØÊ≥®ÂÜåËá™ÂÆö‰πâÂ±ÇÂÆûÁé∞Âπ∂Êâ©Â±ï&lt;/li&gt;
&lt;li&gt;ÊÅ©ÔºåÂæàÂº∫Â∞±ÊòØ‰∫ÜÔºå‰∏çÊÄïË¢´Â°ûÂç∑ QvQ&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-supported-platform-matrix" class="anchor" aria-hidden="true" href="#supported-platform-matrix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;supported platform matrix&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;‚úÖ&lt;/g-emoji&gt; = known work and runs fast with good optimization&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;‚úîÔ∏è&lt;/g-emoji&gt; = known work, but speed may not be fast enough&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="grey_question" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2754.png"&gt;‚ùî&lt;/g-emoji&gt; = shall work, not confirmed&lt;/li&gt;
&lt;li&gt;/ = not applied&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Windows&lt;/th&gt;
&lt;th&gt;Linux&lt;/th&gt;
&lt;th&gt;Android&lt;/th&gt;
&lt;th&gt;MacOS&lt;/th&gt;
&lt;th&gt;iOS&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;intel-cpu&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;‚úîÔ∏è&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;‚úîÔ∏è&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="grey_question" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2754.png"&gt;‚ùî&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;‚úîÔ∏è&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;intel-gpu&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;‚úîÔ∏è&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;‚úîÔ∏è&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="grey_question" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2754.png"&gt;‚ùî&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="grey_question" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2754.png"&gt;‚ùî&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;amd-cpu&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;‚úîÔ∏è&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;‚úîÔ∏è&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="grey_question" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2754.png"&gt;‚ùî&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;‚úîÔ∏è&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;amd-gpu&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;‚úîÔ∏è&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;‚úîÔ∏è&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="grey_question" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2754.png"&gt;‚ùî&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="grey_question" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2754.png"&gt;‚ùî&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nvidia-gpu&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;‚úîÔ∏è&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;‚úîÔ∏è&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="grey_question" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2754.png"&gt;‚ùî&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="grey_question" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2754.png"&gt;‚ùî&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;qcom-cpu&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="grey_question" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2754.png"&gt;‚ùî&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;‚úîÔ∏è&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;‚úÖ&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;qcom-gpu&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="grey_question" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2754.png"&gt;‚ùî&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;‚úîÔ∏è&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;‚úîÔ∏è&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;arm-cpu&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="grey_question" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2754.png"&gt;‚ùî&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="grey_question" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2754.png"&gt;‚ùî&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;‚úÖ&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;arm-gpu&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="grey_question" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2754.png"&gt;‚ùî&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="grey_question" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2754.png"&gt;‚ùî&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;‚úîÔ∏è&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;apple-cpu&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;‚úÖ&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;apple-gpu&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;‚úîÔ∏è&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-example-project" class="anchor" aria-hidden="true" href="#example-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example project&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nihui/ncnn-android-squeezenet"&gt;https://github.com/nihui/ncnn-android-squeezenet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nihui/ncnn-android-styletransfer"&gt;https://github.com/nihui/ncnn-android-styletransfer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chehongshu/ncnnforandroid_objectiondetection_Mobilenetssd"&gt;https://github.com/chehongshu/ncnnforandroid_objectiondetection_Mobilenetssd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/moli232777144/mtcnn_ncnn"&gt;https://github.com/moli232777144/mtcnn_ncnn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/nihui/ncnn-assets/raw/master/20181217/ncnn-2.jpg"&gt;&lt;img src="https://github.com/nihui/ncnn-assets/raw/master/20181217/ncnn-2.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/nihui/ncnn-assets/raw/master/20181217/4.jpg"&gt;&lt;img src="https://github.com/nihui/ncnn-assets/raw/master/20181217/4.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/nihui/ncnn-assets/raw/master/20181217/ncnn-23.jpg"&gt;&lt;img src="https://github.com/nihui/ncnn-assets/raw/master/20181217/ncnn-23.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/nihui/ncnn-assets/raw/master/20181217/ncnn-m.png"&gt;&lt;img src="https://github.com/nihui/ncnn-assets/raw/master/20181217/ncnn-m.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-ÊäÄÊúØ‰∫§ÊµÅqqÁæ§637093648Ë∂ÖÂ§öÂ§ß‰Ω¨--Á≠îÊ°àÂç∑Âç∑Âç∑Âç∑Âç∑" class="anchor" aria-hidden="true" href="#ÊäÄÊúØ‰∫§ÊµÅqqÁæ§637093648Ë∂ÖÂ§öÂ§ß‰Ω¨--Á≠îÊ°àÂç∑Âç∑Âç∑Âç∑Âç∑"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ÊäÄÊúØ‰∫§ÊµÅQQÁæ§Ôºö637093648(Ë∂ÖÂ§öÂ§ß‰Ω¨)  Á≠îÊ°àÔºöÂç∑Âç∑Âç∑Âç∑Âç∑&lt;/h3&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h3&gt;
&lt;p&gt;BSD 3 Clause&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Tencent</author><guid isPermaLink="false">https://github.com/Tencent/ncnn</guid><pubDate>Wed, 04 Dec 2019 00:18:00 GMT</pubDate></item><item><title>opengl-tutorials/ogl #19 in C++, This week</title><link>https://github.com/opengl-tutorials/ogl</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;This repo does not have a README.&lt;/i&gt;&lt;/p&gt;</description><author>opengl-tutorials</author><guid isPermaLink="false">https://github.com/opengl-tutorials/ogl</guid><pubDate>Wed, 04 Dec 2019 00:19:00 GMT</pubDate></item><item><title>bigtreetech/BIGTREETECH-SKR-mini-E3 #20 in C++, This week</title><link>https://github.com/bigtreetech/BIGTREETECH-SKR-mini-E3</link><description>&lt;p&gt;&lt;i&gt;BIGTREETECH SKR-mini-E3 motherboard is a ultra-quiet, low-power, high-quality 3D printing machine control board. It is launched by the 3D printing team of Shenzhen BIGTREE technology co., LTD. This board is specially tailored for Ender 3 printer, perfectly replacing the original Ender3 printer motherboard.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-bigtreetech-skr-mini-e3" class="anchor" aria-hidden="true" href="#bigtreetech-skr-mini-e3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;BIGTREETECH-SKR-mini-E3&lt;/h1&gt;
&lt;p&gt;BIGTREETECH SKR-mini-E3 motherboard is a ultra-quiet, low-power, high-quality 3D printing machine control board. It is launched by the 3D printing team of Shenzhen BIGTREE technology co., LTD. This board is specially tailored for Ender 3 printer, perfectly replacing the original Ender3 printer motherboard.&lt;/p&gt;
&lt;p&gt;Note: If your motherbord version is BIGTREETECH-SKR-mini-E3 V1.0, please check the BIGTREETECH-SKR-mini-E3 V1.0 document which is in the firmware and hardware files.
If your motherbord version is BTT SKR mini E3 V1.2, please check the BTT SKR mini E3 V1.2 document which is in the firmware and hardware files.
The refer to check the main differences of the BTT SKR mini E3 V1.2Ôºö
&lt;a href="https://github.com/bigtreetech/BIGTREETECH-SKR-mini-E3/blob/master/hardware/BTT%20SKR%20MINI%20E3%20V1.2/The%20Notement%20of%20BTT%20SKR%20MINI%20E3%20V1.2.pdf"&gt;The notement of BTT SKR MINI E3 V1.2&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>bigtreetech</author><guid isPermaLink="false">https://github.com/bigtreetech/BIGTREETECH-SKR-mini-E3</guid><pubDate>Wed, 04 Dec 2019 00:20:00 GMT</pubDate></item><item><title>AnkerLeng/Cpp-0-1-Resource #21 in C++, This week</title><link>https://github.com/AnkerLeng/Cpp-0-1-Resource</link><description>&lt;p&gt;&lt;i&gt;C++ Âå†ÂøÉ‰πã‰Ωú ‰ªé0Âà∞1ÂÖ•Èó®ËµÑÊñô&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-c-Âå†ÂøÉ‰πã‰Ωú-‰ªé0Âà∞1ÂÖ•Èó®ËµÑÊñô" class="anchor" aria-hidden="true" href="#c-Âå†ÂøÉ‰πã‰Ωú-‰ªé0Âà∞1ÂÖ•Èó®ËµÑÊñô"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;C++ Âå†ÂøÉ‰πã‰Ωú ‰ªé0Âà∞1ÂÖ•Èó®ËµÑÊñô&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="%E7%AC%AC1%E9%98%B6%E6%AE%B5C%2B%2B%20%E5%8C%A0%E5%BF%83%E4%B9%8B%E4%BD%9C%20%E4%BB%8E0%E5%88%B01%E5%85%A5%E9%97%A8/C%2B%2B%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E8%AE%B2%E4%B9%89/C%2B%2B%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8.md"&gt;Á¨¨1Èò∂ÊÆµC++ Âå†ÂøÉ‰πã‰Ωú ‰ªé0Âà∞1ÂÖ•Èó®&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="%E7%AC%AC2%E9%98%B6%E6%AE%B5%E5%AE%9E%E6%88%98-%E9%80%9A%E8%AE%AF%E5%BD%95%E7%AE%A1%E7%90%86/%E9%80%9A%E8%AE%AF%E5%BD%95%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E8%AE%B2%E4%B9%89/%E9%80%9A%E8%AE%AF%E5%BD%95%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F.md"&gt;Á¨¨2Èò∂ÊÆµÂÆûÊàò-ÈÄöËÆØÂΩïÁÆ°ÁêÜ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="%E7%AC%AC3%E9%98%B6%E6%AE%B5-C%2B%2B%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B%20%E8%B5%84%E6%96%99/%E8%AE%B2%E4%B9%89/C%2B%2B%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B.md"&gt;Á¨¨3Èò∂ÊÆµ-C++Ê†∏ÂøÉÁºñÁ®ã&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="%E7%AC%AC4%E9%98%B6%E6%AE%B5%E5%AE%9E%E6%88%98-%E5%9F%BA%E4%BA%8E%E5%A4%9A%E6%80%81%E7%9A%84%E4%BC%81%E4%B8%9A%E8%81%8C%E5%B7%A5%E7%B3%BB%E7%BB%9F/%E8%AE%B2%E4%B9%89/%E8%81%8C%E5%B7%A5%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F.md"&gt;Á¨¨4Èò∂ÊÆµÂÆûÊàò-Âü∫‰∫éÂ§öÊÄÅÁöÑ‰ºÅ‰∏öËÅåÂ∑•Á≥ªÁªü&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="%E7%AC%AC5%E9%98%B6%E6%AE%B5-C%2B%2B%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B%E8%B5%84%E6%96%99/%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B%E8%83%BD%E5%8A%9B%E8%B5%84%E6%96%99/%E8%AE%B2%E4%B9%89/C%2B%2B%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B.md"&gt;Á¨¨5Èò∂ÊÆµ-C++ÊèêÈ´òÁºñÁ®ã&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="%E7%AC%AC6%E9%98%B6%E6%AE%B5%E5%AE%9E%E6%88%98-%E5%9F%BA%E4%BA%8ESTL%E6%B3%9B%E5%8C%96%E7%BC%96%E7%A8%8B%E7%9A%84%E6%BC%94%E8%AE%B2%E6%AF%94%E8%B5%9B%E8%B5%84%E6%96%99/%E8%B5%84%E6%96%99/%E8%AE%B2%E4%B9%89/%E5%9F%BA%E4%BA%8ESTL%E7%9A%84%E6%BC%94%E8%AE%B2%E6%AF%94%E8%B5%9B%E6%B5%81%E7%A8%8B%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F.md"&gt;Á¨¨6Èò∂ÊÆµÂÆûÊàò-Âü∫‰∫éSTLÊ≥õÂåñÁºñÁ®ãÁöÑÊºîËÆ≤ÊØîËµõ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="%E7%AC%AC7%E9%98%B6%E6%AE%B5-C%2B%2B%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AE%E6%9C%BA%E6%88%BF%E9%A2%84%E7%BA%A6%E8%B5%84%E6%96%99/%E6%9C%BA%E6%88%BF%E9%A2%84%E7%BA%A6%E7%B3%BB%E7%BB%9F%E8%B5%84%E6%96%99/%E8%AE%B2%E4%B9%89/%E6%9C%BA%E6%88%BF%E9%A2%84%E7%BA%A6%E7%B3%BB%E7%BB%9F.md"&gt;Á¨¨7Èò∂ÊÆµ-C++ÂÆûÊàòÈ°πÁõÆÊú∫ÊàøÈ¢ÑÁ∫¶&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="%E9%99%84-C%2B%2B%E7%BC%96%E7%A8%8B%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/%E6%95%99%E7%A8%8B%E6%96%87%E4%BB%B6/C%2B%2B%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.md"&gt;ÈôÑ-C++ÁºñÁ®ãÁéØÂ¢ÉÊê≠Âª∫ÊïôÁ®ã&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-ËßÜÈ¢ëÊïôÁ®ã" class="anchor" aria-hidden="true" href="#ËßÜÈ¢ëÊïôÁ®ã"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ËßÜÈ¢ëÊïôÁ®ã&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/av41559729/" rel="nofollow"&gt;https://www.bilibili.com/video/av41559729/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-‰∫§ÊµÅÁæ§" class="anchor" aria-hidden="true" href="#‰∫§ÊµÅÁæ§"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;‰∫§ÊµÅÁæ§&lt;/h2&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>AnkerLeng</author><guid isPermaLink="false">https://github.com/AnkerLeng/Cpp-0-1-Resource</guid><pubDate>Wed, 04 Dec 2019 00:21:00 GMT</pubDate></item><item><title>mmp/pbrt-v3 #22 in C++, This week</title><link>https://github.com/mmp/pbrt-v3</link><description>&lt;p&gt;&lt;i&gt;Source code for pbrt, the renderer described in the third edition of "Physically Based Rendering: From Theory To Implementation", by Matt Pharr, Wenzel Jakob, and Greg Humphreys.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-pbrt-version-3" class="anchor" aria-hidden="true" href="#pbrt-version-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;pbrt, Version 3&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/mmp/pbrt-v3" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8e4663f56b7913d79f76338c85440eea6a29872f/68747470733a2f2f7472617669732d63692e6f72672f6d6d702f706272742d76332e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/mmp/pbrt-v3.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/mmp/pbrt-v3/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a13f49c1493a24a7ab8c3cb1cea161b9a2544fbd/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6d6c6d39673931656a786c636e3637732f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/mlm9g91ejxlcn67s/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This repository holds the source code to the version of pbrt that is
described in the third edition of &lt;em&gt;Physically Based Rendering: From
Theory to Implementation&lt;/em&gt;, by &lt;a href="http://pharr.org/matt" rel="nofollow"&gt;Matt Pharr&lt;/a&gt;, &lt;a href="http://www.mitsuba-renderer.org/~wenzel/" rel="nofollow"&gt;Wenzel
Jakob&lt;/a&gt;, and Greg Humphreys.  As
before, the code is available under the BSD license.&lt;/p&gt;
&lt;p&gt;The &lt;a href="http://pbrt.org" rel="nofollow"&gt;pbrt website&lt;/a&gt; has general information about both the
&lt;em&gt;Physically Based Rendering&lt;/em&gt; book as well as many other resources for pbrt.
As of October 2018, the full &lt;a href="http://www.pbr-book.org" rel="nofollow"&gt;text of the book&lt;/a&gt; is
now available online, for free.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-example-scenes" class="anchor" aria-hidden="true" href="#example-scenes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example scenes&lt;/h2&gt;
&lt;p&gt;Over 8GB of example scenes are available for download. (Many are new and
weren't available with previous versions of pbrt.)  See the &lt;a href="http://pbrt.org/scenes-v3.html" rel="nofollow"&gt;pbrt-v3 scenes
page&lt;/a&gt; on the pbrt website for information
about how to download them.&lt;/p&gt;
&lt;p&gt;After downloading them, see the &lt;code&gt;README.md.html&lt;/code&gt; file in the scene
distribution for more information about the scenes and preview images.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-additional-resources" class="anchor" aria-hidden="true" href="#additional-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;There is a &lt;a href="https://groups.google.com/forum/#!forum/pbrt" rel="nofollow"&gt;pbrt Google
Groups&lt;/a&gt; mailing list that can
be a helpful resource.&lt;/li&gt;
&lt;li&gt;Please see the &lt;a href="http://pbrt.org/users-guide.html" rel="nofollow"&gt;User's Guide&lt;/a&gt; for more
information about how to check out and build the system as well as various
additional information about working with pbrt.&lt;/li&gt;
&lt;li&gt;Should you find a bug in pbrt, please report it in the &lt;a href="https://github.com/mmp/pbrt-v3/issues"&gt;bug
tracker&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Please report any errors you find in the &lt;em&gt;Physically Based Rendering&lt;/em&gt;
book to &lt;a href="mailto:authors@pbrt.org"&gt;authors@pbrt.org&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: we tend to let bug reports and book errata emails pile up for a few
months for processing them in batches. Don't think we don't appreciate
them. :-)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-pbrt" class="anchor" aria-hidden="true" href="#building-pbrt"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building pbrt&lt;/h2&gt;
&lt;p&gt;To check out pbrt together with all dependencies, be sure to use the
&lt;code&gt;--recursive&lt;/code&gt; flag when cloning the repository, i.e.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git clone --recursive https://github.com/mmp/pbrt-v3/&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you accidentally already cloned pbrt without this flag (or to update an
pbrt source tree after a new submodule has been added, run the following
command to also fetch the dependencies:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git submodule update --init --recursive&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;pbrt uses &lt;a href="http://www.cmake.org/" rel="nofollow"&gt;cmake&lt;/a&gt; for its build system.  On Linux
and OS X, cmake is available via most package management systems.  To get
cmake for Windows, or to build it from source, see the &lt;a href="http://www.cmake.org/download/" rel="nofollow"&gt;cmake downloads
page&lt;/a&gt;.  Once you have cmake, the next step
depends on your operating system.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-makefile-builds-linux-other-unixes-and-mac" class="anchor" aria-hidden="true" href="#makefile-builds-linux-other-unixes-and-mac"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Makefile builds (Linux, other Unixes, and Mac)&lt;/h3&gt;
&lt;p&gt;Create a new directory for the build, change to that directory, and run
&lt;code&gt;cmake [path to pbrt-v3]&lt;/code&gt;. A Makefile will be created in the current
directory.  Next, run &lt;code&gt;make&lt;/code&gt; to build pbrt, the obj2pbrt and imgtool
utilities, and an executable that runs pbrt's unit tests.  Depending on the
number of cores in your system, you will probably want to supply make with
the &lt;code&gt;-j&lt;/code&gt; parameter to specify the number of compilation jobs to run in
parallel (e.g. &lt;code&gt;make -j8&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;By default, the makefiles that are created that will compile an optimized
release build of pbrt. These builds give the highest performance when
rendering, but many runtime checks are disabled in these builds and
optimized builds are generally difficult to trace in a debugger.&lt;/p&gt;
&lt;p&gt;To build a debug version of pbrt, set the &lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt; flag to
&lt;code&gt;Debug&lt;/code&gt; when you run cmake to create build files to make a debug build.  To
do so, provide cmake with the argument &lt;code&gt;-DCMAKE_BUILD_TYPE=Debug&lt;/code&gt; and build
pbrt using the resulting makefiles. (You may want to keep two build
directories, one for release builds and one for debug builds, so that you
don't need to switch back and forth.)&lt;/p&gt;
&lt;p&gt;Debug versions of the system run much more slowly than release
builds. Therefore, in order to avoid surprisingly slow renders when
debugging support isn't desired, debug versions of pbrt print a banner
message indicating that they were built for debugging at startup time.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-xcode" class="anchor" aria-hidden="true" href="#xcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Xcode&lt;/h3&gt;
&lt;p&gt;To make an Xcode project on OS X, run &lt;code&gt;cmake -G Xcode [path to pbrt-v3]&lt;/code&gt;.
A &lt;code&gt;PBRT-V3.xcodeproj&lt;/code&gt; project file that can be opened in Xcode.  Note that
the default build settings have an optimization level of "None"; you'll
almost certainly want to choose "Faster" or "Fastest".&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-msvc-on-windows" class="anchor" aria-hidden="true" href="#msvc-on-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MSVC on Windows&lt;/h3&gt;
&lt;p&gt;On Windows, first point the cmake GUI at the directory with pbrt's source
code.  Create a separate directory to hold the result of the build
(potentially just a directory named "build" inside the pbrt-v3 directory)
and set that for "Where to build the binaries" in the GUI.&lt;/p&gt;
&lt;p&gt;Next, click "Configure".  Note that you will want to choose the "Win64"
generator for your MSVC installation unless you have a clear reason to need
a 32-bit build of pbrt.  Once cmake has finished the configuration step,
click "Generate"; when that's done, there will be a "PBRT-V3.sln" file in
the build directory you specified. Open that up in MSVC and you're ready to
go.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-build-configurations" class="anchor" aria-hidden="true" href="#build-configurations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Configurations&lt;/h3&gt;
&lt;p&gt;There are two configuration settings that must be set when configuring the
build. The first controls whether pbrt uses 32-bit or 64-bit values for
floating-point computation, and the second controls whether tristimulus RGB
values or sampled spectral values are used for rendering.  (Both of these
aren't amenable to being chosen at runtime, but must be determined at
compile time for efficiency).  The cmake configuration variables
&lt;code&gt;PBRT_FLOAT_AS_DOUBLE&lt;/code&gt; and &lt;code&gt;PBRT_SAMPLED_SPECTRUM&lt;/code&gt; configure them,
respectively.&lt;/p&gt;
&lt;p&gt;If you're using a GUI version of cmake, those settings should be available
in the list of configuration variables; set them as desired before choosing
'Generate'.&lt;/p&gt;
&lt;p&gt;With command-line cmake, their values can be specified when you cmake via
&lt;code&gt;-DPBRT_FLOAT_AS_DOUBLE=1&lt;/code&gt;, for example.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>mmp</author><guid isPermaLink="false">https://github.com/mmp/pbrt-v3</guid><pubDate>Wed, 04 Dec 2019 00:22:00 GMT</pubDate></item><item><title>grpc/grpc #23 in C++, This week</title><link>https://github.com/grpc/grpc</link><description>&lt;p&gt;&lt;i&gt;The C based gRPC (C++, Python, Ruby, Objective-C, PHP, C#)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-grpc---an-rpc-library-and-framework" class="anchor" aria-hidden="true" href="#grpc---an-rpc-library-and-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;gRPC - An RPC library and framework&lt;/h1&gt;
&lt;p&gt;gRPC is a modern, open source, high-performance remote procedure call (RPC) framework that can run anywhere. gRPC enables client and server applications to communicate transparently, and simplifies the building of connected systems.&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;
    &lt;td&gt;&lt;b&gt;Homepage:&lt;/b&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://grpc.io/" rel="nofollow"&gt;grpc.io&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;b&gt;Mailing List:&lt;/b&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://groups.google.com/forum/#!forum/grpc-io" rel="nofollow"&gt;grpc-io@googlegroups.com&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;a href="https://gitter.im/grpc/grpc?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/584e0cdb40890a4a0118ed01be26ad2063ac1033/68747470733a2f2f6261646765732e6769747465722e696d2f677270632f677270632e737667" alt="Join the chat at https://gitter.im/grpc/grpc" data-canonical-src="https://badges.gitter.im/grpc/grpc.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-to-start-using-grpc" class="anchor" aria-hidden="true" href="#to-start-using-grpc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To start using gRPC&lt;/h1&gt;
&lt;p&gt;To maximize usability, gRPC supports the standard method for adding dependencies to a user's chosen language (if there is one).
In most languages, the gRPC runtime comes as a package available in a user's language package manager.&lt;/p&gt;
&lt;p&gt;For instructions on how to use the language-specific gRPC runtime for a project, please refer to these documents&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="src/cpp"&gt;C++&lt;/a&gt;: follow the instructions under the &lt;code&gt;src/cpp&lt;/code&gt; directory&lt;/li&gt;
&lt;li&gt;&lt;a href="src/csharp"&gt;C#&lt;/a&gt;: NuGet package &lt;code&gt;Grpc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/grpc/grpc-dart"&gt;Dart&lt;/a&gt;: pub package &lt;code&gt;grpc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/grpc/grpc-go"&gt;Go&lt;/a&gt;: &lt;code&gt;go get google.golang.org/grpc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/grpc/grpc-java"&gt;Java&lt;/a&gt;: Use JARs from Maven Central Repository&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/grpc/grpc-node"&gt;Node&lt;/a&gt;: &lt;code&gt;npm install grpc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/objective-c"&gt;Objective-C&lt;/a&gt;: Add &lt;code&gt;gRPC-ProtoRPC&lt;/code&gt; dependency to podspec&lt;/li&gt;
&lt;li&gt;&lt;a href="src/php"&gt;PHP&lt;/a&gt;: &lt;code&gt;pecl install grpc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/python/grpcio"&gt;Python&lt;/a&gt;: &lt;code&gt;pip install grpcio&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="src/ruby"&gt;Ruby&lt;/a&gt;: &lt;code&gt;gem install grpc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/grpc/grpc-web"&gt;WebJS&lt;/a&gt;: follow the grpc-web instructions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Per-language quickstart guides and tutorials can be found in the &lt;a href="https://grpc.io/docs/" rel="nofollow"&gt;documentation section on the grpc.io website&lt;/a&gt;. Code examples are available in the &lt;a href="examples"&gt;examples&lt;/a&gt; directory.&lt;/p&gt;
&lt;p&gt;Precompiled bleeding-edge package builds of gRPC &lt;code&gt;master&lt;/code&gt; branch's &lt;code&gt;HEAD&lt;/code&gt; are uploaded daily to &lt;a href="https://packages.grpc.io" rel="nofollow"&gt;packages.grpc.io&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-to-start-developing-grpc" class="anchor" aria-hidden="true" href="#to-start-developing-grpc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To start developing gRPC&lt;/h1&gt;
&lt;p&gt;Contributions are welcome!&lt;/p&gt;
&lt;p&gt;Please read &lt;a href="CONTRIBUTING.md"&gt;How to contribute&lt;/a&gt; which will guide you through the entire workflow of how to build the source code, how to run the tests, and how to contribute changes to
the gRPC codebase.
The "How to contribute" document also contains info on how the contribution process works and contains best practices for creating contributions.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h1&gt;
&lt;p&gt;Sometimes things go wrong. Please check out the &lt;a href="TROUBLESHOOTING.md"&gt;Troubleshooting guide&lt;/a&gt; if you are experiencing issues with gRPC.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance&lt;/h1&gt;
&lt;p&gt;See the &lt;a href="http://performance-dot-grpc-testing.appspot.com/explore?dashboard=5636470266134528" rel="nofollow"&gt;Performance dashboard&lt;/a&gt; for performance numbers of the latest released version.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-concepts" class="anchor" aria-hidden="true" href="#concepts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Concepts&lt;/h1&gt;
&lt;p&gt;See &lt;a href="CONCEPTS.md"&gt;gRPC Concepts&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-about-this-repository" class="anchor" aria-hidden="true" href="#about-this-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About This Repository&lt;/h1&gt;
&lt;p&gt;This repository contains source code for gRPC libraries implemented in multiple languages written on top of a shared C core library &lt;a href="src/core"&gt;src/core&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Libraries in different languages may be in various states of development. We are seeking contributions for all of these libraries:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Language&lt;/th&gt;
&lt;th&gt;Source&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Shared C [core library]&lt;/td&gt;
&lt;td&gt;&lt;a href="src/core"&gt;src/core&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C++&lt;/td&gt;
&lt;td&gt;&lt;a href="src/cpp"&gt;src/cpp&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ruby&lt;/td&gt;
&lt;td&gt;&lt;a href="src/ruby"&gt;src/ruby&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Python&lt;/td&gt;
&lt;td&gt;&lt;a href="src/python"&gt;src/python&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PHP&lt;/td&gt;
&lt;td&gt;&lt;a href="src/php"&gt;src/php&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C# (core library based)&lt;/td&gt;
&lt;td&gt;&lt;a href="src/csharp"&gt;src/csharp&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Objective-C&lt;/td&gt;
&lt;td&gt;&lt;a href="src/objective-c"&gt;src/objective-c&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Language&lt;/th&gt;
&lt;th&gt;Source repo&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Java&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/grpc/grpc-java"&gt;grpc-java&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Go&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/grpc/grpc-go"&gt;grpc-go&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NodeJS&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/grpc/grpc-node"&gt;grpc-node&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WebJS&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/grpc/grpc-web"&gt;grpc-web&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dart&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/grpc/grpc-dart"&gt;grpc-dart&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.NET (pure C# impl.)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/grpc/grpc-dotnet"&gt;grpc-dotnet&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>grpc</author><guid isPermaLink="false">https://github.com/grpc/grpc</guid><pubDate>Wed, 04 Dec 2019 00:23:00 GMT</pubDate></item><item><title>rapidsai/cuml #24 in C++, This week</title><link>https://github.com/rapidsai/cuml</link><description>&lt;p&gt;&lt;i&gt;cuML - RAPIDS Machine Learning Library &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-cuml---gpu-machine-learning-algorithms" class="anchor" aria-hidden="true" href="#cuml---gpu-machine-learning-algorithms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;div align="left"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="img/rapids_logo.png"&gt;&lt;img src="img/rapids_logo.png" width="90px" style="max-width:100%;"&gt;&lt;/a&gt;¬†cuML - GPU Machine Learning Algorithms&lt;/div&gt;&lt;/h1&gt;
&lt;p&gt;cuML is a suite of libraries that implement machine learning algorithms and mathematical primitives functions that share compatible APIs with other &lt;a href="https://rapids.ai/" rel="nofollow"&gt;RAPIDS&lt;/a&gt; projects.&lt;/p&gt;
&lt;p&gt;cuML enables data scientists, researchers, and software engineers to run
traditional tabular ML tasks on GPUs without going into the details of CUDA
programming. In most cases, cuML's Python API matches the API from
&lt;a href="https://scikit-learn.org" rel="nofollow"&gt;scikit-learn&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For large datasets, these GPU-based implementations can complete 10-50x faster
than their CPU equivalents. For details on performance, see the &lt;a href="https://github.com/rapidsai/notebooks-contrib/blob/master/intermediate_notebooks/benchmarks/cuml_benchmarks.ipynb"&gt;cuML Benchmarks
Notebook&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As an example, the following Python snippet loads input and computes DBSCAN clusters, all on GPU:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; cudf
&lt;span class="pl-k"&gt;from&lt;/span&gt; cuml.cluster &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-c1"&gt;DBSCAN&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Create and populate a GPU DataFrame&lt;/span&gt;
gdf_float &lt;span class="pl-k"&gt;=&lt;/span&gt; cudf.DataFrame()
gdf_float[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;2.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;5.0&lt;/span&gt;]
gdf_float[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;4.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;2.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.0&lt;/span&gt;]
gdf_float[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;4.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;2.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.0&lt;/span&gt;]

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Setup and fit clusters&lt;/span&gt;
dbscan_float &lt;span class="pl-k"&gt;=&lt;/span&gt; DBSCAN(&lt;span class="pl-v"&gt;eps&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1.0&lt;/span&gt;, &lt;span class="pl-v"&gt;min_samples&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;)
dbscan_float.fit(gdf_float)

&lt;span class="pl-c1"&gt;print&lt;/span&gt;(dbscan_float.labels_)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;0    0
1    1
2    2
dtype: int32
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;cuML also features multi-GPU and multi-node-multi-GPU operation, using &lt;a href="https://www.dask.org" rel="nofollow"&gt;Dask&lt;/a&gt;, for a
growing list of algorithms. The following Python snippet reads input from a CSV file and performs
a NearestNeighbors query across a cluster of Dask workers, using multiple GPUs on a single node:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Create a Dask CUDA cluster w/ one worker per device&lt;/span&gt;
&lt;span class="pl-k"&gt;from&lt;/span&gt; dask_cuda &lt;span class="pl-k"&gt;import&lt;/span&gt; LocalCUDACluster
cluster &lt;span class="pl-k"&gt;=&lt;/span&gt; LocalCUDACluster()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Read CSV file in parallel across workers&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; dask_cudf
df &lt;span class="pl-k"&gt;=&lt;/span&gt; dask_cudf.read_csv(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/csv&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Fit a NearestNeighbors model and query it&lt;/span&gt;
&lt;span class="pl-k"&gt;from&lt;/span&gt; cuml.dask.neighbors &lt;span class="pl-k"&gt;import&lt;/span&gt; NearestNeighbors
nn &lt;span class="pl-k"&gt;=&lt;/span&gt; NearestNeighbors(&lt;span class="pl-v"&gt;n_neighbors&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
nn.fit(df)
neighbors &lt;span class="pl-k"&gt;=&lt;/span&gt; nn.kneighbors(df)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For additional examples, browse our complete &lt;a href="https://docs.rapids.ai/api/cuml/stable/" rel="nofollow"&gt;API
documentation&lt;/a&gt;, or check out our
introductory &lt;a href="https://github.com/rapidsai/notebooks/tree/master/cuml"&gt;walkthrough
notebooks&lt;/a&gt;. Finally, you
can find complete end-to-end examples in the &lt;a href="https://github.com/rapidsai/notebooks-contrib"&gt;notebooks-contrib
repo&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-supported-algorithms" class="anchor" aria-hidden="true" href="#supported-algorithms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Algorithms&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Category&lt;/th&gt;
&lt;th&gt;Algorithm&lt;/th&gt;
&lt;th&gt;Notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Clustering&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Density-Based Spatial Clustering of Applications with Noise (DBSCAN)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;K-Means&lt;/td&gt;
&lt;td&gt;Multi-node multi-GPU via Dask&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Dimensionality Reduction&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Principal Components Analysis (PCA)&lt;/td&gt;
&lt;td&gt;Multi-node multi-GPU via Dask&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Truncated Singular Value Decomposition (tSVD)&lt;/td&gt;
&lt;td&gt;Multi-node multi-GPU via Dask&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Uniform Manifold Approximation and Projection (UMAP)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Random Projection&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;t-Distributed Stochastic Neighbor Embedding (TSNE)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Linear Models for Regression or Classification&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Linear Regression (OLS)&lt;/td&gt;
&lt;td&gt;Multi-GPU available in conda CUDA 10 package&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Linear Regression with Lasso or Ridge Regularization&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;ElasticNet Regression&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Logistic Regression&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Stochastic Gradient Descent (SGD), Coordinate Descent (CD), and Quasi-Newton (QN) (including L-BFGS and OWL-QN) solvers for linear models&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Nonlinear Models for Regression or Classification&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Random Forest (RF) Classification&lt;/td&gt;
&lt;td&gt;Experimental multi-node multi-GPU via Dask&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Random Forest (RF) Regression&lt;/td&gt;
&lt;td&gt;Experimental multi-node multi-GPU via Dask&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;K-Nearest Neighbors (KNN) Classification&lt;/td&gt;
&lt;td&gt;Multi-node multi-GPU via Dask. Uses &lt;a href="https://github.com/facebookresearch/faiss"&gt;Faiss&lt;/a&gt; for Nearest Neighbors Query.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;K-Nearest Neighbors (KNN) Regression&lt;/td&gt;
&lt;td&gt;Multi-node multi-GPU via Dask. Uses &lt;a href="https://github.com/facebookresearch/faiss"&gt;Faiss&lt;/a&gt; for Nearest Neighbors Query.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Support Vector Machine Classifier (SVC)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Time Series&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Linear Kalman Filter&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Holt-Winters Exponential Smoothing&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Auto-regressive Integrated Moving Average (ARIMA)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;p&gt;More ML algorithms in cuML and more ML primitives in ml-prims are planned for
future releases, including: spectral embedding, spectral clustering,
support vector machines, and additional time series methods. Future releases
will also expand support for multi-node, multi-GPU algorithms.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;See &lt;a href="https://rapids.ai/start.html#rapids-release-selector" rel="nofollow"&gt;the RAPIDS Release
Selector&lt;/a&gt; for the command
line to install either nightly or official release cuML packages via Conda or
Docker.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-buildinstall-from-source" class="anchor" aria-hidden="true" href="#buildinstall-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build/Install from Source&lt;/h2&gt;
&lt;p&gt;See the build &lt;a href="BUILD.md"&gt;guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Please see our &lt;a href="CONTRIBUTING.md"&gt;guide for contributing to cuML&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h2&gt;
&lt;p&gt;Find out more details on the &lt;a href="https://rapids.ai/community.html" rel="nofollow"&gt;RAPIDS site&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--open-gpu-data-science" class="anchor" aria-hidden="true" href="#-open-gpu-data-science"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;div align="left"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="img/rapids_logo.png"&gt;&lt;img src="img/rapids_logo.png" width="265px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/div&gt; Open GPU Data Science&lt;/h2&gt;
&lt;p&gt;The RAPIDS suite of open source software libraries aim to enable execution of end-to-end data science and analytics pipelines entirely on GPUs. It relies on NVIDIA¬Æ CUDA¬Æ primitives for low-level compute optimization, but exposing that GPU parallelism and high-bandwidth memory speed through user-friendly Python interfaces.&lt;/p&gt;
&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="img/rapids_arrow.png"&gt;&lt;img src="img/rapids_arrow.png" width="80%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>rapidsai</author><guid isPermaLink="false">https://github.com/rapidsai/cuml</guid><pubDate>Wed, 04 Dec 2019 00:24:00 GMT</pubDate></item><item><title>facebookresearch/faiss #25 in C++, This week</title><link>https://github.com/facebookresearch/faiss</link><description>&lt;p&gt;&lt;i&gt;A library for efficient similarity search and clustering of dense vectors.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-faiss" class="anchor" aria-hidden="true" href="#faiss"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Faiss&lt;/h1&gt;
&lt;p&gt;Faiss is a library for efficient similarity search and clustering of dense vectors. It contains algorithms that search in sets of vectors of any size, up to ones that possibly do not fit in RAM. It also contains supporting code for evaluation and parameter tuning. Faiss is written in C++ with complete wrappers for Python/numpy. Some of the most useful algorithms are implemented on the GPU. It is developed by &lt;a href="https://research.fb.com/category/facebook-ai-research-fair/" rel="nofollow"&gt;Facebook AI Research&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-news" class="anchor" aria-hidden="true" href="#news"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NEWS&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;NEW: version 1.6.0 (2019-10-15) code structure reorg, support for codec interface.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: version 1.5.3 (2019-06-24) fix performance regression in IndexIVF.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: version 1.5.2 (2019-05-27) the license was relaxed to MIT from BSD+Patents. Read LICENSE for details.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: version 1.5.0 (2018-12-19) GPU binary flat index and binary HNSW index&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: version 1.4.0 (2018-08-30) no more crashes in pure Python code&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: version 1.3.0 (2018-07-12) support for binary indexes&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: latest commit (2018-02-22) supports on-disk storage of inverted indexes, see demos/demo_ondisk_ivf.py&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: latest commit (2018-01-09) includes an implementation of the HNSW indexing method, see benchs/bench_hnsw.py&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: there is now a Facebook public discussion group for Faiss users at &lt;a href="https://www.facebook.com/groups/faissusers/" rel="nofollow"&gt;https://www.facebook.com/groups/faissusers/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NEW: on 2017-07-30, the license on Faiss was relaxed to BSD from CC-BY-NC. Read LICENSE for details.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Faiss contains several methods for similarity search. It assumes that the instances are represented as vectors and are identified by an integer, and that the vectors can be compared with L2 distances or dot products. Vectors that are similar to a query vector are those that have the lowest L2 distance or the highest dot product with the query vector. It also supports cosine similarity, since this is a dot product on normalized vectors.&lt;/p&gt;
&lt;p&gt;Most of the methods, like those based on binary vectors and compact quantization codes, solely use a compressed representation of the vectors and do not require to keep the original vectors. This generally comes at the cost of a less precise search but these methods can scale to billions of vectors in main memory on a single server.&lt;/p&gt;
&lt;p&gt;The GPU implementation can accept input from either CPU or GPU memory. On a server with GPUs, the GPU indexes can be used a drop-in replacement for the CPU indexes (e.g., replace &lt;code&gt;IndexFlatL2&lt;/code&gt; with &lt;code&gt;GpuIndexFlatL2&lt;/code&gt;) and copies to/from GPU memory are handled automatically. Results will be faster however if both input and output remain resident on the GPU. Both single and multi-GPU usage is supported.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;The library is mostly implemented in C++, with optional GPU support provided via CUDA, and an optional Python interface. The CPU version requires a BLAS library. It compiles with a Makefile and can be packaged in a docker image. See &lt;a href="INSTALL.md"&gt;INSTALL.md&lt;/a&gt; for details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-faiss-works" class="anchor" aria-hidden="true" href="#how-faiss-works"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How Faiss works&lt;/h2&gt;
&lt;p&gt;Faiss is built around an index type that stores a set of vectors, and provides a function to search in them with L2 and/or dot product vector comparison. Some index types are simple baselines, such as exact search. Most of the available indexing structures correspond to various trade-offs with respect to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;search time&lt;/li&gt;
&lt;li&gt;search quality&lt;/li&gt;
&lt;li&gt;memory used per index vector&lt;/li&gt;
&lt;li&gt;training time&lt;/li&gt;
&lt;li&gt;need for external data for unsupervised training&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The optional GPU implementation provides what is likely (as of March 2017) the fastest exact and approximate (compressed-domain) nearest neighbor search implementation for high-dimensional vectors, fastest Lloyd's k-means, and fastest small k-selection algorithm known. &lt;a href="https://arxiv.org/abs/1702.08734" rel="nofollow"&gt;The implementation is detailed here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-full-documentation-of-faiss" class="anchor" aria-hidden="true" href="#full-documentation-of-faiss"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Full documentation of Faiss&lt;/h2&gt;
&lt;p&gt;The following are entry points for documentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the full documentation, including a &lt;a href="https://github.com/facebookresearch/faiss/wiki/Getting-started"&gt;tutorial&lt;/a&gt;, a &lt;a href="https://github.com/facebookresearch/faiss/wiki/FAQ"&gt;FAQ&lt;/a&gt; and a &lt;a href="https://github.com/facebookresearch/faiss/wiki/Troubleshooting"&gt;troubleshooting section&lt;/a&gt; can be found on the &lt;a href="http://github.com/facebookresearch/faiss/wiki"&gt;wiki page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the &lt;a href="http://rawgithub.com/facebookresearch/faiss/master/docs/html/annotated.html" rel="nofollow"&gt;doxygen documentation&lt;/a&gt; gives per-class information&lt;/li&gt;
&lt;li&gt;to reproduce results from our research papers, &lt;a href="https://arxiv.org/abs/1609.01882" rel="nofollow"&gt;Polysemous codes&lt;/a&gt; and &lt;a href="https://arxiv.org/abs/1702.08734" rel="nofollow"&gt;Billion-scale similarity search with GPUs&lt;/a&gt;, refer to the &lt;a href="benchs/README.md"&gt;benchmarks README&lt;/a&gt;. For &lt;a href="https://arxiv.org/abs/1804.09996" rel="nofollow"&gt;
Link and code: Fast indexing with graphs and compact regression codes&lt;/a&gt;, see the &lt;a href="benchs/link_and_code"&gt;link_and_code README&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-authors" class="anchor" aria-hidden="true" href="#authors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authors&lt;/h2&gt;
&lt;p&gt;The main authors of Faiss are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jegou"&gt;Herv√© J√©gou&lt;/a&gt; initiated the Faiss project and wrote its first implementation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mdouze"&gt;Matthijs Douze&lt;/a&gt; implemented most of the CPU Faiss&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wickedfoo"&gt;Jeff Johnson&lt;/a&gt; implemented all of the GPU Faiss&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/beauby"&gt;Lucas Hosseini&lt;/a&gt; implemented the binary indexes&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference&lt;/h2&gt;
&lt;p&gt;Reference to cite when you use Faiss in a research paper:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@article{JDH17,
  title={Billion-scale similarity search with GPUs},
  author={Johnson, Jeff and Douze, Matthijs and J{\'e}gou, Herv{\'e}},
  journal={arXiv preprint arXiv:1702.08734},
  year={2017}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-join-the-faiss-community" class="anchor" aria-hidden="true" href="#join-the-faiss-community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Join the Faiss community&lt;/h2&gt;
&lt;p&gt;For public discussion of Faiss or for questions, there is a Facebook public discussion group at &lt;a href="https://www.facebook.com/groups/faissusers/" rel="nofollow"&gt;https://www.facebook.com/groups/faissusers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We monitor the &lt;a href="http://github.com/facebookresearch/faiss/issues"&gt;issues page&lt;/a&gt; of the repository. You can report bugs, ask questions, etc.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Faiss is MIT-licensed.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>facebookresearch</author><guid isPermaLink="false">https://github.com/facebookresearch/faiss</guid><pubDate>Wed, 04 Dec 2019 00:25:00 GMT</pubDate></item></channel></rss>