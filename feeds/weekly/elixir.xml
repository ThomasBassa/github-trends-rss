<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Elixir, This week</title><link>https://github.com/trending/elixir?since=weekly</link><description>The top repositories on GitHub for elixir, measured weekly</description><pubDate>Thu, 21 Nov 2019 01:03:45 GMT</pubDate><lastBuildDate>Thu, 21 Nov 2019 01:03:45 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>elixir-lang/elixir #1 in Elixir, This week</title><link>https://github.com/elixir-lang/elixir</link><description>&lt;p&gt;&lt;i&gt;Elixir is a dynamic, functional language designed for building scalable and maintainable applications&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/elixir-lang/elixir-lang.github.com/raw/master/images/logo/logo.png"&gt;&lt;img src="https://github.com/elixir-lang/elixir-lang.github.com/raw/master/images/logo/logo.png" alt="Elixir" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://cirrus-ci.com/github/elixir-lang/elixir" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c4d820a66eff706de4aa9371456b877a22ee03d7/68747470733a2f2f6170692e6369727275732d63692e636f6d2f6769746875622f656c697869722d6c616e672f656c697869722e7376673f6272616e63683d6d6173746572" alt="Build status" data-canonical-src="https://api.cirrus-ci.com/github/elixir-lang/elixir.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Elixir is a dynamic, functional language designed for building scalable
and maintainable applications.&lt;/p&gt;
&lt;p&gt;For more about Elixir, installation and documentation,
&lt;a href="https://elixir-lang.org/" rel="nofollow"&gt;check Elixir's website&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-policies" class="anchor" aria-hidden="true" href="#policies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Policies&lt;/h2&gt;
&lt;p&gt;New releases are announced in the &lt;a href="https://groups.google.com/group/elixir-lang-ann" rel="nofollow"&gt;announcement mailing list&lt;/a&gt;.
You can subscribe by sending an email to &lt;a href="mailto:elixir-lang-ann+subscribe@googlegroups.com"&gt;elixir-lang-ann+subscribe@googlegroups.com&lt;/a&gt; and replying to the confirmation email.&lt;/p&gt;
&lt;p&gt;All security releases &lt;a href="https://groups.google.com/forum/#!searchin/elixir-lang-ann/%5Bsecurity%5D%7Csort:date" rel="nofollow"&gt;will be tagged with &lt;code&gt;[security]&lt;/code&gt;&lt;/a&gt;. For more information, please read our &lt;a href="SECURITY.md"&gt;Security Policy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All interactions in our official communication channels follow our &lt;a href="CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bug-reports" class="anchor" aria-hidden="true" href="#bug-reports"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bug reports&lt;/h2&gt;
&lt;p&gt;For reporting bugs, &lt;a href="https://github.com/elixir-lang/elixir/issues"&gt;visit our issue tracker&lt;/a&gt; and follow the steps
for reporting a new issue. &lt;strong&gt;Please disclose security vulnerabilities
privately at &lt;a href="mailto:elixir-security@googlegroups.com"&gt;elixir-security@googlegroups.com&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling-from-source" class="anchor" aria-hidden="true" href="#compiling-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling from source&lt;/h2&gt;
&lt;p&gt;For the many different ways to install Elixir,
&lt;a href="https://elixir-lang.org/install.html" rel="nofollow"&gt;see our installation instructions on the website&lt;/a&gt;.
To compile from source, you can follow the steps below.&lt;/p&gt;
&lt;p&gt;First, &lt;a href="https://elixir-lang.org/install.html#installing-erlang" rel="nofollow"&gt;install Erlang&lt;/a&gt;. Then clone this repository to your machine, compile and test it:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/elixir-lang/elixir.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; elixir
make clean &lt;span class="pl-c1"&gt;test&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: if you are running on Windows,
&lt;a href="https://github.com/elixir-lang/elixir/wiki/Windows"&gt;this article includes important notes for compiling Elixir from source
on Windows&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If Elixir fails to build (specifically when pulling in a new version via
&lt;code&gt;git&lt;/code&gt;), be sure to remove any previous build artifacts by running
&lt;code&gt;make clean&lt;/code&gt;, then &lt;code&gt;make test&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If tests pass, you can use Interactive Elixir by running &lt;code&gt;bin/iex&lt;/code&gt; in your terminal.&lt;/p&gt;
&lt;p&gt;However, if tests fail, it is likely that you have an outdated Erlang/OTP version
(Elixir requires Erlang/OTP 21.0 or later). You can check your Erlang/OTP version
by calling &lt;code&gt;erl&lt;/code&gt; in the command line. You will see some information as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Erlang/OTP 21 [erts-9.0] [smp:2:2] [async-threads:10] [kernel-poll:false]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you have properly set up your dependencies and tests still fail,
you may want to open up a bug report, as explained next.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-proposing-new-features" class="anchor" aria-hidden="true" href="#proposing-new-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Proposing new features&lt;/h2&gt;
&lt;p&gt;For proposing new features, please start a discussion in the
&lt;a href="https://groups.google.com/group/elixir-lang-core" rel="nofollow"&gt;Elixir Core mailing list&lt;/a&gt;. Keep in mind that it is your responsibility
to argue and explain why a feature is useful and how it will impact the
codebase and the community.&lt;/p&gt;
&lt;p&gt;Once a proposal is accepted, it will be added to &lt;a href="https://github.com/elixir-lang/elixir/issues"&gt;the issue tracker&lt;/a&gt;.
The issue tracker focuses on &lt;em&gt;actionable items&lt;/em&gt; and it holds a list of
upcoming enhancements and pending bugs. All entries in the tracker are
tagged for clarity and to ease collaboration.&lt;/p&gt;
&lt;p&gt;Features and bug fixes that have already been merged and will be included
in the next release are marked as "closed" in the issue tracker and are
added to the &lt;a href="CHANGELOG.md"&gt;changelog&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;We welcome everyone to contribute to Elixir. To do so, there are a few
things you need to know about the code. First, Elixir code is divided
in applications inside the &lt;code&gt;lib&lt;/code&gt; folder:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;elixir&lt;/code&gt; - Elixir's kernel and standard library&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;eex&lt;/code&gt; - EEx is the template engine that allows you to embed Elixir&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ex_unit&lt;/code&gt; - ExUnit is a simple test framework that ships with Elixir&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;iex&lt;/code&gt; - IEx stands for Interactive Elixir: Elixir's interactive shell&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;logger&lt;/code&gt; - Logger is the built-in logger&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;mix&lt;/code&gt; - Mix is Elixir's build tool&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can run all tests in the root directory with &lt;code&gt;make test&lt;/code&gt; and you can
also run tests for a specific framework &lt;code&gt;make test_#{APPLICATION}&lt;/code&gt;, for example,
&lt;code&gt;make test_ex_unit&lt;/code&gt;. If you just changed something in the Elixir's standard
library, you can run only that portion through &lt;code&gt;make test_stdlib&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you are changing just one file, you can choose to compile and run tests only
for that particular file for fast development cycles. For example, if you
are changing the String module, you can compile it and run its tests as:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;bin/elixirc lib/elixir/lib/string.ex -o lib/elixir/ebin
bin/elixir lib/elixir/test/elixir/string_test.exs&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To recompile (including Erlang modules):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;make compile&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After your changes are done, please remember to run &lt;code&gt;mix format&lt;/code&gt; to guarantee
all files are properly formatted and then run the full suite with
&lt;code&gt;make test&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If your contribution fails during the bootstrapping of the language,
you can rebuild the language from scratch with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;make clean_elixir compile&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Similarly, if you can't get Elixir to compile or the tests to pass after
updating an existing checkout, run &lt;code&gt;make clean compile&lt;/code&gt;. You can check
&lt;a href="https://cirrus-ci.com/github/elixir-lang/elixir" rel="nofollow"&gt;the official build status on Cirrus CI&lt;/a&gt;.
More tasks can be found by reading the &lt;a href="Makefile"&gt;Makefile&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With tests running and passing, you are ready to contribute to Elixir and
&lt;a href="https://help.github.com/articles/using-pull-requests/"&gt;send a pull request&lt;/a&gt;.
We have saved some excellent pull requests we have received in the past in
case you are looking for some examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/elixir-lang/elixir/pull/992"&gt;Implement Enum.member? - Pull Request&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elixir-lang/elixir/pull/1058"&gt;Add String.valid? - Pull Request&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elixir-lang/elixir/pull/1059"&gt;Implement capture_io for ExUnit - Pull Request&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-reviewing-changes" class="anchor" aria-hidden="true" href="#reviewing-changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reviewing changes&lt;/h3&gt;
&lt;p&gt;Once a pull request is sent, the Elixir team will review your changes.
We outline our process below to clarify the roles of everyone involved.&lt;/p&gt;
&lt;p&gt;All pull requests must be approved by two committers before being merged into
the repository. If any changes are necessary, the team will leave appropriate
comments requesting changes to the code. Unfortunately we cannot guarantee a
pull request will be merged, even when modifications are requested, as the Elixir
team will re-evaluate the contribution as it changes.&lt;/p&gt;
&lt;p&gt;Committers may also push style changes directly to your branch. If you would
rather manage all changes yourself, you can disable "Allow edits from maintainers"
feature when submitting your pull request.&lt;/p&gt;
&lt;p&gt;The Elixir team may optionally assign someone to review a pull request.
If someone is assigned, they must explicitly approve the code before
another team member can merge it.&lt;/p&gt;
&lt;p&gt;When the review finishes, your pull request will be squashed and merged
into the repository. If you have carefully organized your commits and
believe they should be merged without squashing, please mention it in
a comment.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-documentation" class="anchor" aria-hidden="true" href="#building-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building documentation&lt;/h2&gt;
&lt;p&gt;Building the documentation requires &lt;a href="https://github.com/elixir-lang/ex_doc"&gt;ExDoc&lt;/a&gt;
to be installed and built alongside Elixir:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; After cloning and compiling Elixir, in its parent directory:&lt;/span&gt;
git clone git://github.com/elixir-lang/ex_doc.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; ex_doc &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ../elixir/bin/mix &lt;span class="pl-k"&gt;do&lt;/span&gt; deps.get, compile&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now go back to Elixir's root directory and run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;make docs                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; to generate HTML pages&lt;/span&gt;
make docs DOCS_FORMAT=epub &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; to generate EPUB documents&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will produce documentation sets for &lt;code&gt;elixir&lt;/code&gt;, &lt;code&gt;mix&lt;/code&gt;, etc. under
the &lt;code&gt;doc&lt;/code&gt; directory. If you are planning to contribute documentation,
&lt;a href="https://hexdocs.pm/elixir/writing-documentation.html" rel="nofollow"&gt;please check our best practices for writing documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-development-links" class="anchor" aria-hidden="true" href="#development-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://elixir-lang.org/docs.html" rel="nofollow"&gt;Elixir Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/group/elixir-lang-core" rel="nofollow"&gt;Elixir Core Mailing list (development)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/group/elixir-lang-ann" rel="nofollow"&gt;Announcement mailing list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elixir-lang/elixir/issues"&gt;Issue tracker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="CHANGELOG.md"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="SECURITY.md"&gt;Security Policy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://webchat.freenode.net/?channels=#elixir-lang" rel="nofollow"&gt;#elixir-lang&lt;/a&gt;&lt;/strong&gt; on &lt;a href="https://www.freenode.net" rel="nofollow"&gt;Freenode&lt;/a&gt; IRC&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;"Elixir" and the Elixir logo are copyright (c) 2012 Plataformatec.&lt;/p&gt;
&lt;p&gt;Elixir source code is released under Apache License 2.0.&lt;/p&gt;
&lt;p&gt;Check &lt;a href="NOTICE"&gt;NOTICE&lt;/a&gt; and &lt;a href="LICENSE"&gt;LICENSE&lt;/a&gt; files for more information.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>elixir-lang</author><guid isPermaLink="false">https://github.com/elixir-lang/elixir</guid><pubDate>Thu, 21 Nov 2019 00:01:00 GMT</pubDate></item><item><title>elixir-ecto/ecto #2 in Elixir, This week</title><link>https://github.com/elixir-ecto/ecto</link><description>&lt;p&gt;&lt;i&gt;A toolkit for data mapping and language integrated query&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/elixir-ecto/ecto/raw/master/guides/images/logo.png"&gt;&lt;img width="250" src="https://github.com/elixir-ecto/ecto/raw/master/guides/images/logo.png" alt="Ecto" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="https://github.com/elixir-ecto/ecto/actions"&gt;&lt;img src="https://github.com/elixir-ecto/ecto/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ecto is a toolkit for data mapping and language integrated query for Elixir. Here is an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; In your config/config.exs file&lt;/span&gt;
config &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-c1"&gt;ecto_repos:&lt;/span&gt; [&lt;span class="pl-en"&gt;Sample&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;]

config &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-en"&gt;Sample&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;database:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ecto_simple&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;username:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;postgres&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;password:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;postgres&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;hostname:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;localhost&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;port:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;5432&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; In your application code&lt;/span&gt;
&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;Sample&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;otp_app:&lt;/span&gt; &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;adapter:&lt;/span&gt; &lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Adapters&lt;/span&gt;.&lt;span class="pl-en"&gt;Postgres&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;Sample&lt;/span&gt;.&lt;span class="pl-en"&gt;Weather&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Schema&lt;/span&gt;

  schema &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;weather&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    field &lt;span class="pl-c1"&gt;:city&lt;/span&gt;     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Defaults to type :string&lt;/span&gt;
    field &lt;span class="pl-c1"&gt;:temp_lo&lt;/span&gt;, &lt;span class="pl-c1"&gt;:integer&lt;/span&gt;
    field &lt;span class="pl-c1"&gt;:temp_hi&lt;/span&gt;, &lt;span class="pl-c1"&gt;:integer&lt;/span&gt;
    field &lt;span class="pl-c1"&gt;:prcp&lt;/span&gt;,    &lt;span class="pl-c1"&gt;:float&lt;/span&gt;, &lt;span class="pl-c1"&gt;default:&lt;/span&gt; &lt;span class="pl-c1"&gt;0.0&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;Sample&lt;/span&gt;.&lt;span class="pl-en"&gt;App&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Query&lt;/span&gt;
  &lt;span class="pl-k"&gt;alias&lt;/span&gt; &lt;span class="pl-en"&gt;Sample&lt;/span&gt;.{&lt;span class="pl-en"&gt;Weather&lt;/span&gt;, &lt;span class="pl-en"&gt;Repo&lt;/span&gt;}

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;keyword_query&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    query &lt;span class="pl-k"&gt;=&lt;/span&gt;
      from w &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-en"&gt;Weather&lt;/span&gt;,
           &lt;span class="pl-c1"&gt;where:&lt;/span&gt; w.prcp &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;or&lt;/span&gt; is_nil(w.prcp),
           &lt;span class="pl-c1"&gt;select:&lt;/span&gt; w

    &lt;span class="pl-en"&gt;Repo&lt;/span&gt;.all(query)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;pipe_query&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-en"&gt;Weather&lt;/span&gt;
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; where(&lt;span class="pl-c1"&gt;city:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Kraków&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; order_by(&lt;span class="pl-c1"&gt;:temp_lo&lt;/span&gt;)
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; limit(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Repo&lt;/span&gt;.all
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ecto is commonly used to interact with databases, such as Postgres and MySQL via &lt;a href="http://hexdocs.pm/ecto_sql" rel="nofollow"&gt;Ecto.Adapters.SQL&lt;/a&gt; (&lt;a href="https://github.com/elixir-ecto/ecto_sql"&gt;source code&lt;/a&gt;). Ecto is also commonly used to map data from any source into Elixir structs, regardless if they are backed by a database or not.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="http://hexdocs.pm/ecto/getting-started.html" rel="nofollow"&gt;getting started guide&lt;/a&gt; and the &lt;a href="http://hexdocs.pm/ecto" rel="nofollow"&gt;online documentation&lt;/a&gt; for more information. Other resources available are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://pragprog.com/book/wmecto/programming-ecto" rel="nofollow"&gt;Programming Ecto&lt;/a&gt;, by Darin Wilson and Eric Meadows-Jönsson, which guides you from fundamentals up to advanced concepts&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://pages.plataformatec.com.br/the-little-ecto-cookbook" rel="nofollow"&gt;The Little Ecto Cookbook&lt;/a&gt;, a free ebook by Plataformatec, which is a curation of the existing Ecto guides with some extra contents&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;You need to add both Ecto and the database adapter as a dependency to your &lt;code&gt;mix.exs&lt;/code&gt; file. The supported databases and their adapters are:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Database&lt;/th&gt;
&lt;th align="left"&gt;Ecto Adapter&lt;/th&gt;
&lt;th align="left"&gt;Dependencies&lt;/th&gt;
&lt;th align="left"&gt;Ecto 3.0 compatible?&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;PostgreSQL&lt;/td&gt;
&lt;td align="left"&gt;Ecto.Adapters.Postgres&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="http://github.com/elixir-ecto/ecto_sql"&gt;ecto_sql&lt;/a&gt; + &lt;a href="http://github.com/elixir-ecto/postgrex"&gt;postgrex&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;MySQL&lt;/td&gt;
&lt;td align="left"&gt;Ecto.Adapters.MyXQL&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="http://github.com/elixir-ecto/ecto_sql"&gt;ecto_sql&lt;/a&gt; + &lt;a href="http://github.com/elixir-ecto/myxql"&gt;myxql&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;MSSQL&lt;/td&gt;
&lt;td align="left"&gt;MssqlEcto&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="http://github.com/elixir-ecto/ecto_sql"&gt;ecto_sql&lt;/a&gt; + &lt;a href="https://github.com/findmypast-oss/mssql_ecto"&gt;mssql_ecto&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;MSSQL&lt;/td&gt;
&lt;td align="left"&gt;Tds.Ecto&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="http://github.com/elixir-ecto/ecto_sql"&gt;ecto_sql&lt;/a&gt; + &lt;a href="https://github.com/livehelpnow/tds_ecto"&gt;tds_ecto&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;SQLite    &lt;/td&gt;
&lt;td align="left"&gt;Sqlite.Ecto2        &lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="http://github.com/elixir-ecto/ecto"&gt;ecto&lt;/a&gt; + &lt;a href="https://github.com/scouten/sqlite_ecto2"&gt;sqlite_ecto2&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Mnesia    &lt;/td&gt;
&lt;td align="left"&gt;EctoMnesia.Adapter   &lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="http://github.com/elixir-ecto/ecto"&gt;ecto&lt;/a&gt; + &lt;a href="https://github.com/Nebo15/ecto_mnesia"&gt;ecto_mnesia&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;For example, if you want to use PostgreSQL, add to your &lt;code&gt;mix.exs&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defp&lt;/span&gt; &lt;span class="pl-en"&gt;deps&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  [
    {&lt;span class="pl-c1"&gt;:ecto_sql&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~&amp;gt; 3.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;},
    {&lt;span class="pl-c1"&gt;:postgrex&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;gt;= 0.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
  ]
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run &lt;code&gt;mix deps.get&lt;/code&gt; in your shell to fetch the dependencies. If you want to use another database, just choose the proper dependency from the table above.&lt;/p&gt;
&lt;p&gt;Finally, in the repository definition, you will need to specify the &lt;code&gt;adapter:&lt;/code&gt; respective to the chosen dependency. For PostgreSQL it is:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;otp_app:&lt;/span&gt; &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;adapter:&lt;/span&gt; &lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Adapters&lt;/span&gt;.&lt;span class="pl-en"&gt;Postgres&lt;/span&gt;,
  &lt;span class="pl-k"&gt;..&lt;/span&gt;.&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-supported-versions" class="anchor" aria-hidden="true" href="#supported-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Versions&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Branch&lt;/th&gt;
&lt;th&gt;Support&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;v3.1&lt;/td&gt;
&lt;td&gt;Bug fixes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v3.0&lt;/td&gt;
&lt;td&gt;Security patches only&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v2.2&lt;/td&gt;
&lt;td&gt;Security patches only&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v2.1&lt;/td&gt;
&lt;td&gt;Unsupported from 10/2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v2.0&lt;/td&gt;
&lt;td&gt;Unsupported from 08/2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.1&lt;/td&gt;
&lt;td&gt;Unsupported from 03/2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.0&lt;/td&gt;
&lt;td&gt;Unsupported from 05/2017&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;With the version 3.0, Ecto has become API stable. This means no more new features, although we will continue providing bug fixes and updates. For everyone running Ecto in production, rest assured that Ecto will continue to be a well maintained project with the same production quality and polish that our users are familiar with.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-important-links" class="anchor" aria-hidden="true" href="#important-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Important links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hexdocs.pm/ecto" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!forum/elixir-ecto" rel="nofollow"&gt;Mailing list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elixir-ecto/ecto/tree/master/examples"&gt;Examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-running-tests" class="anchor" aria-hidden="true" href="#running-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running tests&lt;/h3&gt;
&lt;p&gt;Clone the repo and fetch its dependencies:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/elixir-ecto/ecto.git
$ cd ecto
$ mix deps.get
$ mix test
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that &lt;code&gt;mix test&lt;/code&gt; does not run the tests in the &lt;code&gt;integration_test&lt;/code&gt; folder. To run integration tests, you can clone &lt;code&gt;ecto_sql&lt;/code&gt; in a sibling directory and then run its integration tests with the &lt;code&gt;ECTO_PATH&lt;/code&gt; environment variable pointing to your Ecto checkout:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd ..
$ git clone https://github.com/elixir-ecto/ecto_sql.git
$ cd ecto_sql
$ ECTO_PATH=../ecto mix test.all
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-copyright-and-license" class="anchor" aria-hidden="true" href="#copyright-and-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright and License&lt;/h2&gt;
&lt;p&gt;"Ecto" and the Ecto logo are Copyright (c) 2013 Plataformatec.&lt;/p&gt;
&lt;p&gt;The Ecto logo was designed by &lt;a href="http://www.danewesolko.com" rel="nofollow"&gt;Dane Wesolko&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The source code is under the Apache License 2.0.&lt;/p&gt;
&lt;p&gt;Copyright (c) 2013 Plataformatec&lt;/p&gt;
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at &lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>elixir-ecto</author><guid isPermaLink="false">https://github.com/elixir-ecto/ecto</guid><pubDate>Thu, 21 Nov 2019 00:02:00 GMT</pubDate></item><item><title>phoenixframework/phoenix_live_view #3 in Elixir, This week</title><link>https://github.com/phoenixframework/phoenix_live_view</link><description>&lt;p&gt;&lt;i&gt;Rich, real-time user experiences with server-rendered HTML&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-phoenix-liveview" class="anchor" aria-hidden="true" href="#phoenix-liveview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Phoenix LiveView&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/phoenixframework/phoenix_live_view/workflows/CI/badge.svg"&gt;&lt;img src="https://github.com/phoenixframework/phoenix_live_view/workflows/CI/badge.svg" alt="Actions Status" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Phoenix LiveView enables rich, real-time user experiences with server-rendered HTML. For more information, &lt;a href="https://dockyard.com/blog/2018/12/12/phoenix-liveview-interactive-real-time-apps-no-need-to-write-javascript" rel="nofollow"&gt;see the initial announcement&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Currently LiveView is under active development and we are focused on getting a stable and solid initial version out. For this reason, we will be accepting only bug reports in the issues tracker for now. We will open the issues tracker for features after the current milestone is ironed out.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-learning" class="anchor" aria-hidden="true" href="#learning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learning&lt;/h2&gt;
&lt;p&gt;As official guides are being developed, see our existing
comprehensive docs and examples to get up to speed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hexdocs.pm/phoenix_live_view" rel="nofollow"&gt;Phoenix.LiveView docs for Elixir and JavaScript usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/phoenixframework/phoenix_live_view/blob/master/lib/phoenix_live_view/test/live_view_test.ex"&gt;Phoenix.LiveViewTest for testing docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chrismccord/phoenix_live_view_example"&gt;LiveView example repo&lt;/a&gt; with a handful of examples from Weather widgets, autocomplete search, and games like Snake or Pacman&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;There are currently two methods for installing LiveView. For projects that
require more stability, it is recommended that you install using the
&lt;a href="https://hexdocs.pm/phoenix_live_view/installation.html" rel="nofollow"&gt;installation guide on HexDocs&lt;/a&gt;.
If you want to use the latest features, you should follow the instructions
given in the markdown file &lt;a href="guides/introduction/installation.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-browser-support" class="anchor" aria-hidden="true" href="#browser-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Browser Support&lt;/h2&gt;
&lt;p&gt;All current Chrome, Safari, Firefox, and MS Edge are supported.
IE11 support is available with the following polyfills:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;npm install --save --prefix assets mdn-polyfills url-search-params-polyfill formdata-polyfill child-replace-with-polyfill classlist-polyfill&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; assets/js/app.js&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mdn-polyfills/CustomEvent&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mdn-polyfills/String.prototype.startsWith&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mdn-polyfills/Array.from&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mdn-polyfills/NodeList.prototype.forEach&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mdn-polyfills/Element.prototype.closest&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mdn-polyfills/Element.prototype.matches&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;child-replace-with-polyfill&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;url-search-params-polyfill&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;formdata-polyfill&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;classlist-polyfill&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;import&lt;/span&gt; {&lt;span class="pl-smi"&gt;Socket&lt;/span&gt;} &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;phoenix&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;LiveSocket&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;phoenix_live_view&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>phoenixframework</author><guid isPermaLink="false">https://github.com/phoenixframework/phoenix_live_view</guid><pubDate>Thu, 21 Nov 2019 00:03:00 GMT</pubDate></item><item><title>rrrene/credo #4 in Elixir, This week</title><link>https://github.com/rrrene/credo</link><description>&lt;p&gt;&lt;i&gt;A static code analysis tool for the Elixir language with a focus on code consistency and teaching.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-credo----" class="anchor" aria-hidden="true" href="#credo----"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credo &lt;a href="https://travis-ci.org/rrrene/credo" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/64d050ab8e2f52725d108633cf9ce0e7e5dcc21f/68747470733a2f2f7472617669732d63692e6f72672f727272656e652f637265646f2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/rrrene/credo.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://inch-ci.org/github/rrrene/credo" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0a56cd9aad4fe1e5e209f42180c55bdc65be44c2/68747470733a2f2f696e63682d63692e6f72672f6769746875622f727272656e652f637265646f2e7376673f6272616e63683d6d6173746572" alt="Inline docs" data-canonical-src="https://inch-ci.org/github/rrrene/credo.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://hex.pm/packages/credo" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/510855323a37a9b73e092f2c3374abee16347d72/68747470733a2f2f696d672e736869656c64732e696f2f686578706d2f762f637265646f2e737667" alt="Hex Version" data-canonical-src="https://img.shields.io/hexpm/v/credo.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://elixirweekly.net" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/731c3c81a3f712b807803e517eeacd430bb8b931/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f66656174757265642d456c697869725765656b6c792d6130353466662e737667" alt="ElixirWeekly" data-canonical-src="https://img.shields.io/badge/featured-ElixirWeekly-a054ff.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Credo is a static code analysis tool for the Elixir language with a focus on teaching and code consistency.&lt;/p&gt;
&lt;p&gt;It implements &lt;a href="https://github.com/rrrene/elixir-style-guide"&gt;its own style guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-what-can-it-do" class="anchor" aria-hidden="true" href="#what-can-it-do"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What can it do?&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;credo&lt;/code&gt; can show you refactoring opportunities in your code, complex code fragments, warn you about common mistakes, show inconsistencies in your naming scheme and - if needed - help you enforce a desired coding style.&lt;/p&gt;
&lt;p&gt;If you are a Rubyist it is best described as an opinionated mix between &lt;a href="https://github.com/rrrene/inch"&gt;Inch&lt;/a&gt; and &lt;a href="https://github.com/bbatsov/rubocop"&gt;Rubocop&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a0451c43f301b4d1ab2186e600e552d0f12093cc/68747470733a2f2f7261772e6769746875622e636f6d2f727272656e652f637265646f2f6d61737465722f6173736574732f73637265656e73686f742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/a0451c43f301b4d1ab2186e600e552d0f12093cc/68747470733a2f2f7261772e6769746875622e636f6d2f727272656e652f637265646f2f6d61737465722f6173736574732f73637265656e73686f742e706e67" alt="Credo" data-canonical-src="https://raw.github.com/rrrene/credo/master/assets/screenshot.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;The easiest way to add Credo to your project is by &lt;a href="http://elixir-lang.org/getting-started/mix-otp/introduction-to-mix.html" rel="nofollow"&gt;using Mix&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Add &lt;code&gt;:credo&lt;/code&gt; as a dependency to your project's &lt;code&gt;mix.exs&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defp&lt;/span&gt; &lt;span class="pl-en"&gt;deps&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  [
    {&lt;span class="pl-c1"&gt;:credo&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~&amp;gt; 1.1.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;only:&lt;/span&gt; [&lt;span class="pl-c1"&gt;:dev&lt;/span&gt;, &lt;span class="pl-c1"&gt;:test&lt;/span&gt;], &lt;span class="pl-c1"&gt;runtime:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;}
  ]
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mix deps.get
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic Usage&lt;/h2&gt;
&lt;p&gt;To run credo in the current project, &lt;strong&gt;just type&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mix credo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will run the code analysis and suggest places to edit your code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;If you want to enforce a style guide&lt;/strong&gt; and need a more traditional linting experience, try&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mix credo --strict
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and continue reading in the Configuration section.&lt;/p&gt;
&lt;p&gt;If you want the &lt;strong&gt;list of issues grouped by files&lt;/strong&gt; instead of suggestions just type:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mix credo list
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You will get output like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;┃ Refactoring opportunities
┃
┃ [R] ↗ If/else blocks should not have a negated condition in `if`.
┃       lib/phoenix/channel.ex:26 (Phoenix.Channel.subscribe)
┃ [R] → Function is too complex (max ABC is 15, was 43).
┃       lib/phoenix/router.ex:563:8 (Phoenix.Router.add_resources)
┃ [R] → Function is too complex (max ABC is 15, was 16).
┃       lib/phoenix/router/socket.ex:12:12 (Phoenix.Router.Socket.channel)
┃
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you might want to know more about that particular entry, &lt;strong&gt;just copy the filename+line-number combo into the command&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mix credo lib/phoenix/channel.ex:26

┃ Phoenix.Channel
┃
┃   [R] Category: refactor
┃    ↗  Priority: medium
┃
┃       If/else blocks should not have a negated condition in `if`.
┃       lib/phoenix/channel.ex:26 (Phoenix.Channel.subscribe)
┃
┃    __ CODE IN QUESTION
┃
┃       if !Socket.authenticated?(socket, channel, topic) do
┃
┃    __ WHY IT MATTERS
┃
┃       An `if` block with a negated condition should not contain an else block.
┃
┃       So while this is fine:
┃
┃           if !allowed? do
┃             raise "Not allowed!"
┃           end
┃
┃       The code in this example ...
┃
┃           if !allowed? do
┃             raise "Not allowed!"
┃           else
┃             proceed_as_planned
┃           end
┃
┃       ... should be refactored to look like this:
┃
┃           if allowed? do
┃             proceed_as_planned
┃           else
┃             raise "Not allowed!"
┃           end
┃
┃       The reason for this is not a technical but a human one. It is easier to wrap
┃       your head around a positive condition and then thinking "and else we do ...".
┃
┃       In the above example raising the error in case something is not allowed
┃       might seem so important to put it first. But when you revisit this code a
┃       while later or have to introduce a colleague to it, you might be surprised
┃       how much clearer things get when the "happy path" comes first.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-configuration-via-credoexs" class="anchor" aria-hidden="true" href="#configuration-via-credoexs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration via .credo.exs&lt;/h3&gt;
&lt;p&gt;Credo is configured via a file called &lt;code&gt;.credo.exs&lt;/code&gt;. This file can live in your project's &lt;code&gt;config/&lt;/code&gt; or root folder, both is fine.&lt;/p&gt;
&lt;p&gt;This also works for umbrella projects, where you can have individual &lt;code&gt;.credo.exs&lt;/code&gt; files for each app or a global one in the umbrella's &lt;code&gt;config/&lt;/code&gt; or root folder.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; config/.credo.exs&lt;/span&gt;
%{
  &lt;span class="pl-c1"&gt;configs:&lt;/span&gt; [
    %{
      &lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-c1"&gt;files:&lt;/span&gt; %{
        &lt;span class="pl-c1"&gt;included:&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lib/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;web/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;apps/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
        &lt;span class="pl-c1"&gt;excluded:&lt;/span&gt; []
      },
      &lt;span class="pl-c1"&gt;checks:&lt;/span&gt; [
        {&lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Check&lt;/span&gt;.&lt;span class="pl-en"&gt;Consistency&lt;/span&gt;.&lt;span class="pl-en"&gt;TabsOrSpaces&lt;/span&gt;},

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; For some checks, like AliasUsage, you can only customize the priority&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Priority values are: `low, normal, high, higher`&lt;/span&gt;
        {&lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Check&lt;/span&gt;.&lt;span class="pl-en"&gt;Design&lt;/span&gt;.&lt;span class="pl-en"&gt;AliasUsage&lt;/span&gt;, &lt;span class="pl-c1"&gt;priority:&lt;/span&gt; &lt;span class="pl-c1"&gt;:low&lt;/span&gt;},

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; For others you can also set parameters&lt;/span&gt;
        {&lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Check&lt;/span&gt;.&lt;span class="pl-en"&gt;Readability&lt;/span&gt;.&lt;span class="pl-en"&gt;MaxLineLength&lt;/span&gt;, &lt;span class="pl-c1"&gt;priority:&lt;/span&gt; &lt;span class="pl-c1"&gt;:low&lt;/span&gt;, &lt;span class="pl-c1"&gt;max_length:&lt;/span&gt; &lt;span class="pl-c1"&gt;80&lt;/span&gt;},

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; You can also customize the exit_status of each check.&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; If you don't want TODO comments to cause `mix credo` to fail, just&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; set this value to 0 (zero).&lt;/span&gt;
        {&lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Check&lt;/span&gt;.&lt;span class="pl-en"&gt;Design&lt;/span&gt;.&lt;span class="pl-en"&gt;TagTODO&lt;/span&gt;, &lt;span class="pl-c1"&gt;exit_status:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;},

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; To deactivate a check:&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Put `false` as second element:&lt;/span&gt;
        {&lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Check&lt;/span&gt;.&lt;span class="pl-en"&gt;Design&lt;/span&gt;.&lt;span class="pl-en"&gt;TagFIXME&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;},

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; ... several checks omitted for readability ...&lt;/span&gt;
      ]
    }
  ]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;mix credo --config-name &amp;lt;NAME_OF_CONFIG&amp;gt;&lt;/code&gt; allows you to use a specific config (instead of &lt;code&gt;default&lt;/code&gt;) inside a config file.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mix credo --config-file &amp;lt;PATH_TO_CONFIG_FILE&amp;gt;&lt;/code&gt; let's you use a specific config file.&lt;/p&gt;
&lt;p&gt;Finally, you can use &lt;code&gt;mix credo gen.config&lt;/code&gt; to generate a complete example configuration.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-inline-configuration-via-config-comments" class="anchor" aria-hidden="true" href="#inline-configuration-via-config-comments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inline Configuration via Config Comments&lt;/h3&gt;
&lt;p&gt;Users of Credo can now disable individual lines or files for all or just
specific checks.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defp&lt;/span&gt; &lt;span class="pl-en"&gt;do_stuff&lt;/span&gt;() &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; credo:disable-for-next-line&lt;/span&gt;
  &lt;span class="pl-en"&gt;IO&lt;/span&gt;.inspect {&lt;span class="pl-c1"&gt;:we_want_this_inspect_in_production!&lt;/span&gt;}
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are four config comments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;# credo:disable-for-this-file&lt;/code&gt; - to disable for the entire file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# credo:disable-for-next-line&lt;/code&gt; - to disable for the next line&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# credo:disable-for-previous-line&lt;/code&gt; - to disable for the previous line&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# credo:disable-for-lines:&amp;lt;count&amp;gt;&lt;/code&gt; - to disable for the given number of lines (negative for previous lines)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each of these can also take the name of the check you want to disable:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defp&lt;/span&gt; &lt;span class="pl-en"&gt;my_fun&lt;/span&gt;() &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; credo:disable-for-next-line Credo.Check.Warning.IoInspect&lt;/span&gt;
  &lt;span class="pl-en"&gt;IO&lt;/span&gt;.inspect {&lt;span class="pl-c1"&gt;:we_want_this_inspect_in_production!&lt;/span&gt;}
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lastly, you can put a regular expression (&lt;code&gt;/.+/&lt;/code&gt;) instead of a check name to disable multiple checks (or if you do not want to type out the checks):&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defp&lt;/span&gt; &lt;span class="pl-en"&gt;my_fun&lt;/span&gt;() &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; credo:disable-for-next-line /\.Warning\./&lt;/span&gt;
  &lt;span class="pl-en"&gt;IO&lt;/span&gt;.inspect {&lt;span class="pl-c1"&gt;:we_want_this_inspect_in_production!&lt;/span&gt;}
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-exit-status" class="anchor" aria-hidden="true" href="#exit-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exit Status&lt;/h2&gt;
&lt;p&gt;Credo fails with an exit status != 0 if it shows any issues. This enables shell based pipeline workflows (e.g. on CI systems) which test Credo compliance.&lt;/p&gt;
&lt;p&gt;The exit status of each check is used to construct a bit map of the types of
issues which were encountered by or-ing them together to produce the final
result:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Bitwise&lt;/span&gt;

issues
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Enum&lt;/span&gt;.map(&lt;span class="pl-smi"&gt;&amp;amp;&lt;/span&gt;(&lt;span class="pl-smi"&gt;&amp;amp;1&lt;/span&gt;.exit_status))
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Enum&lt;/span&gt;.reduce(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-smi"&gt;&amp;amp;&lt;/span&gt;(&lt;span class="pl-smi"&gt;&amp;amp;1&lt;/span&gt; &lt;span class="pl-k"&gt;|||&lt;/span&gt; &lt;span class="pl-smi"&gt;&amp;amp;2&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This way you can reason about the encountered issues right from the exit status.&lt;/p&gt;
&lt;p&gt;Default values for the checks are based on their category:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;consistency:  1
design:       2
readability:  4
refactor:     8
warning:     16
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So an exit status of 12 tells you that you have only Readability Issues and Refactoring Opportunities, but e.g. no Warnings.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-commands" class="anchor" aria-hidden="true" href="#commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commands&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-suggest-default-command" class="anchor" aria-hidden="true" href="#suggest-default-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;suggest (default command)&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;suggest&lt;/code&gt; is the default command of Credo. It suggests issues to fix in your code, but it cuts the list to a digestable count. If you want to see the full list, use the &lt;code&gt;--all&lt;/code&gt;  switch.&lt;/p&gt;
&lt;p&gt;Example usage:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mix credo                         # display standard report
$ mix credo suggest                 # same thing, since it's the default command
$ mix credo --all --format=json     # include low priority issues, output as JSON

$ mix credo suggest --help          # more options
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-list" class="anchor" aria-hidden="true" href="#list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;list&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;list&lt;/code&gt; also suggests issues, but it groups them by file and does NOT cut the list to a certain count.&lt;/p&gt;
&lt;p&gt;Example usage:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mix credo list                      # show issues grouped by file
$ mix credo list --format=oneline     # show issues grouped by file, one issue per line
$ mix credo list --format=oneline -a  # same thing, include low priority issues

$ mix credo list --help               # more options
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-explain" class="anchor" aria-hidden="true" href="#explain"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;explain&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;explain&lt;/code&gt; allows you to dig deeper into an issue, by showing you details about the issue and the reasoning by it being reported. To be convenient, you can just copy-paste the &lt;code&gt;filename:line_number:column&lt;/code&gt; string from the report behind the Credo command to check it out.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Credits:&lt;/em&gt; This is inspired by how you can snap the info from failed tests behind &lt;code&gt;mix test&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Example usage:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mix credo lib/my_app/server.ex:10:24          # show explanation for the issue
$ mix credo explain lib/my_app/server.ex:10:24  # same thing
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There are no additional options.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-categories" class="anchor" aria-hidden="true" href="#categories"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;categories&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;categories&lt;/code&gt; shows you all issue categories and explains their semantics.&lt;/p&gt;
&lt;p&gt;There are no additional options.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-info" class="anchor" aria-hidden="true" href="#info"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;info&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;info&lt;/code&gt; shows you information relevant to investigating errors and submitting bug reports.&lt;/p&gt;
&lt;p&gt;Example usage:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mix credo info
$ mix credo info --verbose
$ mix credo info --verbose --format=json
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-command-line-options" class="anchor" aria-hidden="true" href="#command-line-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command line options&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-output-formats" class="anchor" aria-hidden="true" href="#output-formats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Output Formats&lt;/h3&gt;
&lt;p&gt;Use &lt;code&gt;--format&lt;/code&gt; to format the output in one of the following formats:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--format=flycheck&lt;/code&gt; for &lt;a href="http://www.flycheck.org/" rel="nofollow"&gt;Flycheck&lt;/a&gt; output&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--format=json&lt;/code&gt; for &lt;a href="https://www.json.org/" rel="nofollow"&gt;JSON&lt;/a&gt; output&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-only-run-some-checks" class="anchor" aria-hidden="true" href="#only-run-some-checks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Only run some checks&lt;/h3&gt;
&lt;p&gt;To run only a subset of checks, you can use the &lt;code&gt;--checks&lt;/code&gt; or the &lt;code&gt;-c&lt;/code&gt; alias (also aliased as &lt;code&gt;--only&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; to only run the Readability checks, use:&lt;/span&gt;

$ mix credo --only readability

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; to only run Readability checks and Warnings, use:&lt;/span&gt;

$ mix credo --only readability,warning&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The second example illustrates how the command takes a comma-separated list. All commands matching &lt;strong&gt;any&lt;/strong&gt; of the passed items will be run.&lt;/p&gt;
&lt;p&gt;You can use partial names to quickly run checks. &lt;code&gt;mix credo --only todo&lt;/code&gt; will show all &lt;code&gt;# TODO&lt;/code&gt; comments since &lt;code&gt;todo&lt;/code&gt; will match Credo.Check.Design.Tag&lt;strong&gt;TODO&lt;/strong&gt;. &lt;code&gt;mix credo --only inspect&lt;/code&gt; will show you all calls to &lt;code&gt;IO.inspect&lt;/code&gt; since it matches Credo.Check.Warning.Io&lt;strong&gt;Inspect&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-ignore-some-checks" class="anchor" aria-hidden="true" href="#ignore-some-checks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ignore some checks&lt;/h3&gt;
&lt;p&gt;To ignore selected checks, you can use the &lt;code&gt;--ignore-checks&lt;/code&gt; or the &lt;code&gt;-i&lt;/code&gt; alias (also aliased as &lt;code&gt;--ignore&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; to ignore all Readability checks, use:&lt;/span&gt;

$ mix credo --ignore readability

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; to ignore all Readability checks and the DuplicatedCode check, use:&lt;/span&gt;

$ mix credo --ignore readability,duplicated&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The second example illustrates how the command takes a comma-separated list. All commands matching any of the passed items will be ignored.&lt;/p&gt;
&lt;p&gt;You can use partial names to quickly exclude checks. &lt;code&gt;mix credo --ignore nameredec&lt;/code&gt; will exclude all checks for variables/parameters having the same name as declared functions by matching Credo.Check.Warning.&lt;strong&gt;NameRedeclarationBy...&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-parsing-source-from-stdin" class="anchor" aria-hidden="true" href="#parsing-source-from-stdin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Parsing source from STDIN&lt;/h3&gt;
&lt;p&gt;You can also use Credo to parse source that has been piped directly into it.
This is especially useful when integrating with external editors. You can use this feature by passing the &lt;code&gt;--read-from-stdin&lt;/code&gt; option as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;IO.puts("hello world");&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; mix credo --format=flycheck --read-from-stdin
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; stdin:1: C: There is no whitespace around parentheses/brackets most of the time, but here there is.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice the origin if the source is coming annotated as &lt;code&gt;stdin&lt;/code&gt;, you can change this annotation by passing it along after option like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;IO.puts("hello world");&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; mix credo --format=flycheck --read-from-stdin /path/representing/the_current/source.ex
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; /path/representing/the_current/source.ex:1: C: There is no whitespace around parentheses/brackets most of the time, but here there is.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Do note with the passed option as filename is a stub that is just used to prefix the error and so certain editors can annotate the original file.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-credo-as-stand-alone" class="anchor" aria-hidden="true" href="#using-credo-as-stand-alone"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Credo as stand alone&lt;/h3&gt;
&lt;p&gt;If you do not want or are not allowed to include Credo in the current project you can also install it as an archive. For this, you also need to install &lt;a href="https://github.com/rrrene/bunt"&gt;bunt&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone git@github.com:rrrene/bunt.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; bunt
mix archive.build
mix archive.install
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; -
git clone git@github.com:rrrene/credo.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; credo
mix deps.get
mix archive.build
mix archive.install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; You have to install &lt;code&gt;bunt&lt;/code&gt; as well:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/rrrene/bunt
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; bunt
mix archive.build
mix archive.install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You will now be able to invoke credo as usual through Mix with &lt;code&gt;mix credo&lt;/code&gt;. This option is especially handy so credo can be used by external editors.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-show-code-snippets-in-the-output" class="anchor" aria-hidden="true" href="#show-code-snippets-in-the-output"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Show code snippets in the output&lt;/h3&gt;
&lt;p&gt;Use the &lt;code&gt;--verbose&lt;/code&gt; switch to include the code snippets in question in the output.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-show-all-issues-including-low-priority-ones" class="anchor" aria-hidden="true" href="#show-all-issues-including-low-priority-ones"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Show all issues including low priority ones&lt;/h3&gt;
&lt;p&gt;Use the &lt;code&gt;--all-priorities&lt;/code&gt; switch to include low priority issues in the output (aliased as &lt;code&gt;--strict&lt;/code&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-issues" class="anchor" aria-hidden="true" href="#issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issues&lt;/h2&gt;
&lt;p&gt;Like any code linter, Credo reports issues. Contrary to many other linters these issues are not created equal. Each issue is assigned a priority, based on a base priority set by the config and a dynamic component based on violation severity and location in the source code.&lt;/p&gt;
&lt;p&gt;These priorities hint at the importance of each issue and are displayed in the command-line interface using arrows: ↑ ↗ → ↘ ↓&lt;/p&gt;
&lt;p&gt;By default, only issues with a positive priority are part of the report (↑ ↗ →).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-checks" class="anchor" aria-hidden="true" href="#checks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Checks&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-consistency" class="anchor" aria-hidden="true" href="#consistency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Consistency&lt;/h3&gt;
&lt;p&gt;These checks take a look at your code and ensure a consistent coding style. Using tabs or spaces? Both is fine, just don't mix them or Credo will tell you.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-readability" class="anchor" aria-hidden="true" href="#readability"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Readability&lt;/h3&gt;
&lt;p&gt;Readability checks do not concern themselves with the technical correctness of your code, but how easy it is to digest.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-refactoring-opportunities" class="anchor" aria-hidden="true" href="#refactoring-opportunities"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Refactoring Opportunities&lt;/h3&gt;
&lt;p&gt;The Refactor checks show you opportunities to avoid future problems and technical debt.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-software-design" class="anchor" aria-hidden="true" href="#software-design"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Software Design&lt;/h3&gt;
&lt;p&gt;While refactor checks show you possible problems, these checks try to highlight possibilities, like - potentially intended - duplicated code or &lt;code&gt;TODO:&lt;/code&gt; and &lt;code&gt;FIXME&lt;/code&gt; annotations.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-warnings" class="anchor" aria-hidden="true" href="#warnings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Warnings&lt;/h3&gt;
&lt;p&gt;These checks warn you about things that are potentially dangerous, like a missed call to &lt;code&gt;IEx.pry&lt;/code&gt; or a call to &lt;code&gt;String.downcase&lt;/code&gt; without saving the result.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-plugins" class="anchor" aria-hidden="true" href="#plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugins&lt;/h2&gt;
&lt;p&gt;Plugins can provide additional functionality to Credo.&lt;/p&gt;
&lt;p&gt;This functionality can include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;adding new commands&lt;/li&gt;
&lt;li&gt;overriding existing commands (e.g. implement better Explain command)&lt;/li&gt;
&lt;li&gt;modifying the default config&lt;/li&gt;
&lt;li&gt;adding checks, which can add their own issues, with their own categories,&lt;/li&gt;
&lt;li&gt;prepending/appending steps to Credo's execution process&lt;/li&gt;
&lt;li&gt;adding new CLI options&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-using-plugins" class="anchor" aria-hidden="true" href="#using-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using plugins&lt;/h3&gt;
&lt;p&gt;Plugins are just modules. Most of the time, a Credo plugin will be published on Hex. You include it as a dependency:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;{&lt;span class="pl-c1"&gt;:credo_demo_plugin&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~&amp;gt; 0.1.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;},&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Plugins, like checks, are just modules and functions.
They can be included by listing them under the &lt;code&gt;:plugins&lt;/code&gt; field in Credo's configuration file.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;%{
  &lt;span class="pl-c1"&gt;configs:&lt;/span&gt; [
    %{
      &lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-c1"&gt;plugins:&lt;/span&gt; [
        {&lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt;, []}
      ]
    }
  ]
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-configuring-plugins" class="anchor" aria-hidden="true" href="#configuring-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring plugins&lt;/h3&gt;
&lt;p&gt;Plugins can be configured via params, just like checks.
Each entry consists of a two-element tuple: the plugin's module and a keyword list of parameters, which can be used to configure the plugin itself.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;%{
  &lt;span class="pl-c1"&gt;configs:&lt;/span&gt; [
    %{
      &lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-c1"&gt;plugins:&lt;/span&gt; [
        {&lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt;, [&lt;span class="pl-c1"&gt;castle:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Grayskull&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]}
      ]
    }
  ]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Plugins can be deactivated by setting the second tuple element to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;%{
  &lt;span class="pl-c1"&gt;configs:&lt;/span&gt; [
    %{
      &lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-c1"&gt;plugins:&lt;/span&gt; [
        {&lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt;, []},
        {&lt;span class="pl-en"&gt;CredoYetAnotherPlugin&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;} &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; &amp;lt;-- don't load this for now&lt;/span&gt;
      ]
    }
  ]
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-creating-a-plugin" class="anchor" aria-hidden="true" href="#creating-a-plugin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating a plugin&lt;/h3&gt;
&lt;p&gt;A plugin is basically just a module that provides an &lt;code&gt;init/1&lt;/code&gt; callback.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;init&lt;/span&gt;(exec) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; but what do we do here??&lt;/span&gt;
    exec
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;Credo.Plugin&lt;/code&gt; module provides a number of functions for extending Credo's core features.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-smi"&gt;@config_file&lt;/span&gt; &lt;span class="pl-en"&gt;File&lt;/span&gt;.read!(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.credo.exs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

  &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Plugin&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;init&lt;/span&gt;(exec) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    exec
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; register_default_config(&lt;span class="pl-smi"&gt;@config_file&lt;/span&gt;)
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; register_command(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;demo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt;.&lt;span class="pl-en"&gt;DemoCommand&lt;/span&gt;)
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; register_cli_switch(&lt;span class="pl-c1"&gt;:castle&lt;/span&gt;, &lt;span class="pl-c1"&gt;:string&lt;/span&gt;, &lt;span class="pl-c1"&gt;:X&lt;/span&gt;)
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; append_task(&lt;span class="pl-c1"&gt;:convert_cli_options_to_config&lt;/span&gt;, &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt;.&lt;span class="pl-en"&gt;ConvertCliSwitchesToPluginParams&lt;/span&gt;)
    &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; prepend_task(&lt;span class="pl-c1"&gt;:set_default_command&lt;/span&gt;, &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt;.&lt;span class="pl-en"&gt;SetDemoAsDefaultCommand&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-add-new-commands" class="anchor" aria-hidden="true" href="#add-new-commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Add new commands&lt;/h3&gt;
&lt;p&gt;Commands are just modules with a call function and adding new commands is easy.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; credo_demo_plugin.ex&lt;/span&gt;
&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Plugin&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;init&lt;/span&gt;(exec) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    register_command(exec, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;demo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt;.&lt;span class="pl-en"&gt;DemoCommand&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; credo_demo_plugin/demo_command.ex&lt;/span&gt;
&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;CredoDemoPlugin&lt;/span&gt;.&lt;span class="pl-en"&gt;DemoCommand&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;alias&lt;/span&gt; &lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;CLI&lt;/span&gt;.&lt;span class="pl-en"&gt;Output&lt;/span&gt;.&lt;span class="pl-en"&gt;UI&lt;/span&gt;
  &lt;span class="pl-k"&gt;alias&lt;/span&gt; &lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Execution&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;call&lt;/span&gt;(exec, _) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    castle &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Execution&lt;/span&gt;.get_plugin_param(exec, &lt;span class="pl-en"&gt;CredoPlus&lt;/span&gt;, &lt;span class="pl-c1"&gt;:castle&lt;/span&gt;)

    &lt;span class="pl-en"&gt;UI&lt;/span&gt;.puts(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;By the power of &lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;castle&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

    exec
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Users can use this command by typing&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ mix credo demo
By the power of &lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-override-an-existing-command" class="anchor" aria-hidden="true" href="#override-an-existing-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Override an existing command&lt;/h3&gt;
&lt;p&gt;Since commands are just modules with a call function, overriding existing commands is easy.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Plugin&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;init&lt;/span&gt;(exec) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    register_command(exec, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;explain&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt;.&lt;span class="pl-en"&gt;MyBetterExplainCommand&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This example would have the effect that typing &lt;code&gt;mix credo lib/my_file.ex:42&lt;/code&gt; would no longer run the built-in &lt;code&gt;Explain&lt;/code&gt; command, but rather our plugin's &lt;code&gt;MyBetterExplain&lt;/code&gt; command.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-modifying-the-default-config" class="anchor" aria-hidden="true" href="#modifying-the-default-config"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modifying the default config&lt;/h3&gt;
&lt;p&gt;Plugins can add default configuration to Credo.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Plugin&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;init&lt;/span&gt;(exec) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    register_default_config(exec, &lt;span class="pl-smi"&gt;@config_file&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The configuration's loading order is this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Credo's own default config&lt;/li&gt;
&lt;li&gt;Default configs added by plugins&lt;/li&gt;
&lt;li&gt;Config files in the user's file system&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Config values set in later stages are overwriting values from earlier ones.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-adding-checks" class="anchor" aria-hidden="true" href="#adding-checks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding checks&lt;/h3&gt;
&lt;p&gt;To add checks from your plugin, simply extend the default config ...&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; credo_demo_plugin.ex&lt;/span&gt;
&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-smi"&gt;@config_file&lt;/span&gt; &lt;span class="pl-en"&gt;File&lt;/span&gt;.read!(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.credo.exs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

  &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Plugin&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;init&lt;/span&gt;(exec) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    register_default_config(exec, &lt;span class="pl-smi"&gt;@config_file&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and then add the new checks there:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; .credo.exs&lt;/span&gt;
%{
  &lt;span class="pl-c1"&gt;configs:&lt;/span&gt; [
    %{
      &lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-c1"&gt;checks:&lt;/span&gt; [
        {&lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt;.&lt;span class="pl-en"&gt;MyNewCheck&lt;/span&gt;, []}
      ]
    }
  ]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since we are extending the default config, we can also deactivate checks and "replace" them with new ones:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; .credo.exs&lt;/span&gt;
%{
  &lt;span class="pl-c1"&gt;configs:&lt;/span&gt; [
    %{
      &lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-c1"&gt;checks:&lt;/span&gt; [
        {&lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Check&lt;/span&gt;.&lt;span class="pl-en"&gt;Readability&lt;/span&gt;.&lt;span class="pl-en"&gt;ModuleDoc&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;},
        {&lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt;.&lt;span class="pl-en"&gt;BetterModuleDoc&lt;/span&gt;, []}
      ]
    }
  ]
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-inserting-tasks-into-credos-execution-process" class="anchor" aria-hidden="true" href="#inserting-tasks-into-credos-execution-process"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inserting tasks into Credo's execution process&lt;/h3&gt;
&lt;p&gt;Credo's execution process consists of several steps, each with a set of tasks, which you can hook into.&lt;/p&gt;
&lt;p&gt;Prepending or appending tasks to these steps is easy:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; credo_demo_plugin.ex&lt;/span&gt;
&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Plugin&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;init&lt;/span&gt;(exec) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    prepend_task(exec, &lt;span class="pl-c1"&gt;:set_default_command&lt;/span&gt;, &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt;.&lt;span class="pl-en"&gt;SetDemoAsDefaultCommand&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; credo_demo_plugin/set_demo_as_default_command.ex&lt;/span&gt;
&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;CredoPlus&lt;/span&gt;.&lt;span class="pl-en"&gt;SetDemoAsDefaultCommand&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Execution&lt;/span&gt;.&lt;span class="pl-en"&gt;Task&lt;/span&gt;

  &lt;span class="pl-k"&gt;alias&lt;/span&gt; &lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;CLI&lt;/span&gt;.&lt;span class="pl-en"&gt;Options&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;call&lt;/span&gt;(exec, _opts) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    set_command(exec, exec.cli_options.command &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;demo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-k"&gt;defp&lt;/span&gt; &lt;span class="pl-en"&gt;set_command&lt;/span&gt;(exec, command) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    %&lt;span class="pl-en"&gt;Execution&lt;/span&gt;{exec &lt;span class="pl-k"&gt;|&lt;/span&gt; &lt;span class="pl-c1"&gt;cli_options:&lt;/span&gt; %&lt;span class="pl-en"&gt;Options&lt;/span&gt;{exec.cli_options &lt;span class="pl-k"&gt;|&lt;/span&gt; &lt;span class="pl-c1"&gt;command:&lt;/span&gt; command}}
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This example would have the effect that typing &lt;code&gt;mix credo&lt;/code&gt; would no longer run the built-in &lt;code&gt;Suggest&lt;/code&gt; command, but rather our plugin's &lt;code&gt;Demo&lt;/code&gt; command.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-adding-new-cli-options" class="anchor" aria-hidden="true" href="#adding-new-cli-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding new CLI options&lt;/h3&gt;
&lt;p&gt;We saw how plugins can be configured via params in the "Configuring plugins" section:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;{&lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt;, [&lt;span class="pl-c1"&gt;castle:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Grayskull&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But what about those situations where we want to be able to configure things on-the-fly via the CLI?
Plugins should be able to provide custom CLI options as well, so we can do something like:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ mix credo --castle Winterfell
Unknown switch: --castle&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Registering a custom CLI switch is easy:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Plugin&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;init&lt;/span&gt;(exec) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    register_cli_switch(exec, &lt;span class="pl-c1"&gt;:castle&lt;/span&gt;, &lt;span class="pl-c1"&gt;:string&lt;/span&gt;, &lt;span class="pl-c1"&gt;:X&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Of course, having a CLI option is not worth much if we can not utilize it.
This is why every registered CLI switch is automatically converted into a plugin param of the same name.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ mix credo --castle Winterfell
By the power of Winterfell&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Plugin authors can also provide a function to control the plugin param's name and value more granularly:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;CredoDemoPlugin&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Credo&lt;/span&gt;.&lt;span class="pl-en"&gt;Plugin&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;init&lt;/span&gt;(exec) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    register_cli_switch(exec, &lt;span class="pl-c1"&gt;:kastle&lt;/span&gt;, &lt;span class="pl-c1"&gt;:string&lt;/span&gt;, &lt;span class="pl-c1"&gt;:K&lt;/span&gt;, &lt;span class="pl-k"&gt;fn&lt;/span&gt;(switch_value) &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
      {&lt;span class="pl-c1"&gt;:castle&lt;/span&gt;, switch_value}
    &lt;span class="pl-k"&gt;end&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-integrations" class="anchor" aria-hidden="true" href="#integrations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integrations&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-ideeditor" class="anchor" aria-hidden="true" href="#ideeditor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;IDE/Editor&lt;/h3&gt;
&lt;p&gt;Some IDEs and editors are able to run Credo in the background and mark issues inline.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/KronicDeth/intellij-elixir#credo"&gt;IntelliJ Elixir&lt;/a&gt; - Elixir plugin for JetBrains IDEs (IntelliJ IDEA, Rubymine, PHPStorm, PyCharm, etc)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://atom.io/packages/linter-elixir-credo" rel="nofollow"&gt;linter-elixir-credo&lt;/a&gt; - Package for Atom editor (by @smeevil)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-automated-code-review" class="anchor" aria-hidden="true" href="#automated-code-review"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Automated Code Review&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.codacy.com/" rel="nofollow"&gt;Codacy&lt;/a&gt; - checks your code from style to security, duplication, complexity, and also integrates with coverage.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stickler-ci.com/" rel="nofollow"&gt;Stickler CI&lt;/a&gt; - checks your code for style and best practices across your entire stack.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://github.com/rrrene/credo/fork"&gt;Fork it!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create your feature branch (&lt;code&gt;git checkout -b my-new-feature&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Commit your changes (&lt;code&gt;git commit -am 'Add some feature'&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Push to the branch (&lt;code&gt;git push origin my-new-feature&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Create new Pull Request&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-author" class="anchor" aria-hidden="true" href="#author"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Author&lt;/h2&gt;
&lt;p&gt;René Föhring (@rrrene)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Credo is released under the MIT License. See the LICENSE file for further
details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>rrrene</author><guid isPermaLink="false">https://github.com/rrrene/credo</guid><pubDate>Thu, 21 Nov 2019 00:04:00 GMT</pubDate></item><item><title>sorentwo/oban #5 in Elixir, This week</title><link>https://github.com/sorentwo/oban</link><description>&lt;p&gt;&lt;i&gt;🥃 Robust asynchronous job processor powered by Elixir and modern PostgreSQL&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
  &lt;a href="https://github.com/sorentwo/oban"&gt;
    &lt;img alt="oban" src="https://raw.githubusercontent.com/sorentwo/oban/master/logotype.png" width="435" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
  Robust job processing in Elixir, backed by modern PostgreSQL.
  Reliable, &lt;br&gt; observable and loaded with &lt;a href="#Features"&gt;enterprise grade features&lt;/a&gt;.
&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a href="https://hex.pm/packages/oban" rel="nofollow"&gt;
    &lt;img alt="Hex Version" src="https://camo.githubusercontent.com/ed315ea60f26789e499e1f683172dc4516684c8e/68747470733a2f2f696d672e736869656c64732e696f2f686578706d2f762f6f62616e2e737667" data-canonical-src="https://img.shields.io/hexpm/v/oban.svg" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://hexdocs.pm/oban" rel="nofollow"&gt;
    &lt;img alt="Hex Docs" src="https://camo.githubusercontent.com/e7fc510ae89404b0a6bc21d5454b2d041a1392c3/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6865782e706d2d646f63732d677265656e2e7376673f7374796c653d666c6174" data-canonical-src="http://img.shields.io/badge/hex.pm-docs-green.svg?style=flat" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a href="https://circleci.com/gh/sorentwo/oban" rel="nofollow"&gt;
    &lt;img alt="CircleCI Status" src="https://camo.githubusercontent.com/7025c93b5a76c0730b8a04008b12864ba258028b/68747470733a2f2f636972636c6563692e636f6d2f67682f736f72656e74776f2f6f62616e2e7376673f7374796c653d737667" data-canonical-src="https://circleci.com/gh/sorentwo/oban.svg?style=svg" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://opensource.org/licenses/Apache-2.0" rel="nofollow"&gt;
    &lt;img alt="Apache 2 License" src="https://camo.githubusercontent.com/e4e3a7db7b393f1dad2ee96845a4c291cd7524b6/68747470733a2f2f696d672e736869656c64732e696f2f686578706d2f6c2f6f62616e" data-canonical-src="https://img.shields.io/hexpm/l/oban" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#Features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#UI"&gt;UI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Usage"&gt;Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#Configuring-Queues"&gt;Configuring Queues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Defining-Workers"&gt;Defining Workers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Enqueueing-Jobs"&gt;Enqueuing Jobs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Pruning"&gt;Pruning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#Testing"&gt;Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;Oban's primary goals are &lt;strong&gt;reliability&lt;/strong&gt;, &lt;strong&gt;consistency&lt;/strong&gt; and &lt;strong&gt;observability&lt;/strong&gt;.
It is fundamentally different from other background job processing tools because
it retains job data for historic metrics and inspection. You can leave your
application running indefinitely without worrying about jobs being lost or
orphaned due to crashes.&lt;/p&gt;
&lt;p&gt;Advantages over in-memory, mnesia, Redis and RabbitMQ based tools:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Fewer Dependencies&lt;/strong&gt; — If you are running a web app there is a &lt;em&gt;very good&lt;/em&gt;
chance that you're running on top of a &lt;a href="https://en.wikipedia.org/wiki/Relational_database#RDBMS" rel="nofollow"&gt;RDBMS&lt;/a&gt;. Running your job queue
within PostgreSQL minimizes system dependencies and simplifies data backups.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Transactional Control&lt;/strong&gt; — Enqueue a job along with other database changes,
ensuring that everything is committed or rolled back atomically.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Database Backups&lt;/strong&gt; — Jobs are stored inside of your primary database, which
means they are backed up together with the data that they relate to.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Advanced features and advantages over other RDBMS based tools:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Isolated Queues&lt;/strong&gt; — Jobs are stored in a single table but are executed in
distinct queues. Each queue runs in isolation, ensuring that a job in a single
slow queue can't back up other faster queues.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Queue Control&lt;/strong&gt; — Queues can be paused, resumed and scaled independently at
runtime.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Resilient Queues&lt;/strong&gt; — Failing queries won't crash the entire supervision tree,
instead they trip a circuit breaker and will be retried again in the future.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Job Killing&lt;/strong&gt; — Jobs can be killed in the middle of execution regardless of
which node they are running on. This stops the job at once and flags it as
&lt;code&gt;discarded&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Triggered execution&lt;/strong&gt; — Database triggers ensure that jobs are dispatched as
soon as they are inserted into the database.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Unique Jobs&lt;/strong&gt; — Duplicate work can be avoided through unique job controls.
Uniqueness can be enforced at the argument, queue and worker level for any
period of time.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scheduled Jobs&lt;/strong&gt; — Jobs can be scheduled at any time in the future, down to
the second.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Periodic (CRON) Jobs&lt;/strong&gt; — Automatically enqueue jobs on a cron-like schedule.
Duplicate jobs are never enqueued, no matter how many nodes you're running.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Job Safety&lt;/strong&gt; — When a process crashes or the BEAM is terminated executing
jobs aren't lost—they are quickly recovered by other running nodes or
immediately when the node is restarted.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Historic Metrics&lt;/strong&gt; — After a job is processed the row is &lt;em&gt;not&lt;/em&gt; deleted.
Instead, the job is retained in the database to provide metrics. This allows
users to inspect historic jobs and to see aggregate data at the job, queue or
argument level.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Node Metrics&lt;/strong&gt; — Every queue records metrics to the database during runtime.
These are used to monitor queue health across nodes and may be used for
analytics.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Queue Draining&lt;/strong&gt; — Queue shutdown is delayed so that slow jobs can finish
executing before shutdown.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Telemetry Integration&lt;/strong&gt; — Job life-cycle events are emitted via
&lt;a href="https://github.com/beam-telemetry/telemetry"&gt;Telemetry&lt;/a&gt; integration. This enables simple logging, error reporting
and health checkups without plug-ins.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;Oban has been developed and actively tested with Elixir 1.8+, Erlang/OTP 21.1+
and PostgreSQL 11.0+. Running Oban currently requires Elixir 1.8+, Erlang 21+, and PostgreSQL
9.6+.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ui" class="anchor" aria-hidden="true" href="#ui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UI&lt;/h2&gt;
&lt;p&gt;A web-based user interface for monitoring and managing Oban is availabe as a
private beta. Learn more about it and register for the beta at
&lt;a href="https://oban.dev" rel="nofollow"&gt;oban.dev&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Oban is published on &lt;a href="https://hex.pm/packages/oban" rel="nofollow"&gt;Hex&lt;/a&gt;. Add it to your list of
dependencies in &lt;code&gt;mix.exs&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;deps&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  [
    {&lt;span class="pl-c1"&gt;:oban&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~&amp;gt; 0.11&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
  ]
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run &lt;code&gt;mix deps.get&lt;/code&gt; to install Oban and its dependencies, including
&lt;a href="https://hex.pm/packages/ecto" rel="nofollow"&gt;Ecto&lt;/a&gt;, &lt;a href="https://hex.pm/packages/jason" rel="nofollow"&gt;Jason&lt;/a&gt; and &lt;a href="https://hex.pm/packages/postgrex" rel="nofollow"&gt;Postgrex&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After the packages are installed you must create a database migration to
add the &lt;code&gt;oban_jobs&lt;/code&gt; table to your database:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mix ecto.gen.migration add_oban_jobs_table&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Open the generated migration in your editor and call the &lt;code&gt;up&lt;/code&gt; and &lt;code&gt;down&lt;/code&gt;
functions on &lt;code&gt;Oban.Migrations&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-e"&gt;Repo&lt;/span&gt;.&lt;span class="pl-e"&gt;Migrations&lt;/span&gt;.&lt;span class="pl-en"&gt;AddObanJobsTable&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Migration&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;up&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Migrations&lt;/span&gt;.up()
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; We specify `version: 1` in `down`, ensuring that we'll roll all the way back down if&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; necessary, regardless of which version we've migrated `up` to.&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;down&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Migrations&lt;/span&gt;.down(&lt;span class="pl-c1"&gt;version:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will run all of Oban's versioned migrations for your database. Migrations
between versions are idempotent and will &lt;em&gt;never&lt;/em&gt; change after a release. As new
versions are released you may need to run additional migrations.&lt;/p&gt;
&lt;p&gt;Now, run the migration to create the table:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mix ecto.migrate&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next see &lt;a href="#Usage"&gt;Usage&lt;/a&gt; for how to integrate Oban into your application and
start defining jobs!&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-note-about-releases" class="anchor" aria-hidden="true" href="#note-about-releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Note About Releases&lt;/h4&gt;
&lt;p&gt;If you are using releases you may see Postgrex errors logged during your initial
deploy (or any deploy requiring an Oban migration). The errors are only
temporary. After the migration has completed each queue will start producing
jobs normally.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Oban isn't an application and won't be started automatically. It is started by a
supervisor that must be included in your application's supervision tree. All of
your configuration is passed into the &lt;code&gt;Oban&lt;/code&gt; supervisor, allowing you to
configure Oban like the rest of your application.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; config/config.exs&lt;/span&gt;
config &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-en"&gt;Oban&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;repo:&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;prune:&lt;/span&gt; {&lt;span class="pl-c1"&gt;:maxlen&lt;/span&gt;, &lt;span class="pl-c1"&gt;100_000&lt;/span&gt;},
  &lt;span class="pl-c1"&gt;queues:&lt;/span&gt; [&lt;span class="pl-c1"&gt;default:&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;events:&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-c1"&gt;media:&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;]

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; lib/my_app/application.ex&lt;/span&gt;
&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Application&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c"&gt;@moduledoc false&lt;/span&gt;

  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Application&lt;/span&gt;

  &lt;span class="pl-k"&gt;alias&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.{&lt;span class="pl-en"&gt;Endpoint&lt;/span&gt;, &lt;span class="pl-en"&gt;Repo&lt;/span&gt;}

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;start&lt;/span&gt;(_type, _args) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    children &lt;span class="pl-k"&gt;=&lt;/span&gt; [
      &lt;span class="pl-en"&gt;Repo&lt;/span&gt;,
      &lt;span class="pl-en"&gt;Endpoint&lt;/span&gt;,
      {&lt;span class="pl-en"&gt;Oban&lt;/span&gt;, &lt;span class="pl-en"&gt;Application&lt;/span&gt;.get_env(&lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-en"&gt;Oban&lt;/span&gt;)}
    ]

    &lt;span class="pl-en"&gt;Supervisor&lt;/span&gt;.start_link(children, &lt;span class="pl-c1"&gt;strategy:&lt;/span&gt; &lt;span class="pl-c1"&gt;:one_for_one&lt;/span&gt;, &lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Supervisor&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you are running tests (which you should be) you'll want to disable pruning
and job dispatching altogether when testing:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; config/test.exs&lt;/span&gt;
config &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-en"&gt;Oban&lt;/span&gt;, &lt;span class="pl-c1"&gt;queues:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;, &lt;span class="pl-c1"&gt;prune:&lt;/span&gt; &lt;span class="pl-c1"&gt;:disabled&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Without dispatch and pruning disabled Ecto will raise constant ownership errors
and you won't be able to run tests.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-configuring-queues" class="anchor" aria-hidden="true" href="#configuring-queues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring Queues&lt;/h4&gt;
&lt;p&gt;Queues are specified as a keyword list where the key is the name of the queue
and the value is the maximum number of concurrent jobs. The following
configuration would start four queues with concurrency ranging from 5 to 50:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;queues:&lt;/span&gt; [&lt;span class="pl-c1"&gt;default:&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;mailers:&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-c1"&gt;events:&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-c1"&gt;media:&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There isn't a limit to the number of queues or how many jobs may execute
concurrently. Here are a few caveats and guidelines:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Each queue will run as many jobs as possible concurrently, up to the
configured limit. Make sure your system has enough resources (i.e. database
connections) to handle the concurrent load.&lt;/li&gt;
&lt;li&gt;Only jobs in the configured queues will execute. Jobs in any other queue
will stay in the database untouched.&lt;/li&gt;
&lt;li&gt;Be careful how many concurrent jobs make expensive system calls (i.e. FFMpeg,
ImageMagick). The BEAM ensures that the system stays responsive under load,
but those guarantees don't apply when using ports or shelling out commands.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-defining-workers" class="anchor" aria-hidden="true" href="#defining-workers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Defining Workers&lt;/h4&gt;
&lt;p&gt;Worker modules do the work of processing a job. At a minimum they must define a
&lt;code&gt;perform/2&lt;/code&gt; function, which is called with an &lt;code&gt;args&lt;/code&gt; map and the job struct.&lt;/p&gt;
&lt;p&gt;Define a worker to process jobs in the &lt;code&gt;events&lt;/code&gt; queue:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Business&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Worker&lt;/span&gt;, &lt;span class="pl-c1"&gt;queue:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;events&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;max_attempts:&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;

  &lt;span class="pl-smi"&gt;@impl&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Worker&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;perform&lt;/span&gt;(%{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; id}, _job) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    model &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;.get(&lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Business&lt;/span&gt;.&lt;span class="pl-en"&gt;Man&lt;/span&gt;, id)

    &lt;span class="pl-en"&gt;IO&lt;/span&gt;.inspect(model)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The value returned from &lt;code&gt;perform/2&lt;/code&gt; is ignored, unless it returns an &lt;code&gt;{:error, reason}&lt;/code&gt; tuple. With an error return or when perform has an uncaught exception
or throw then the error will be reported and the job will be retried (provided
there are attempts remaining).&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Business&lt;/code&gt; worker can also be configured to prevent duplicates for a period
of time through the &lt;code&gt;:unique&lt;/code&gt; option. Here we'll configure it to be unique for
60 seconds:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Worker&lt;/span&gt;, &lt;span class="pl-c1"&gt;queue:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;events&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;max_attempts:&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;unique:&lt;/span&gt; [&lt;span class="pl-c1"&gt;period:&lt;/span&gt; &lt;span class="pl-c1"&gt;60&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-enqueueing-jobs" class="anchor" aria-hidden="true" href="#enqueueing-jobs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enqueueing Jobs&lt;/h4&gt;
&lt;p&gt;Jobs are simply Ecto structs and are enqueued by inserting them into the
database. For convenience and consistency all workers provide a &lt;code&gt;new/2&lt;/code&gt;
function that converts an args map into a job changeset suitable for insertion:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;%{&lt;span class="pl-c1"&gt;in_the:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;business&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;of_doing:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;business&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Business&lt;/span&gt;.new()
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.insert()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The worker's defaults may be overridden by passing options:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;%{&lt;span class="pl-c1"&gt;vote_for:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;none of the above&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Business&lt;/span&gt;.new(&lt;span class="pl-c1"&gt;queue:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;special&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;max_attempts:&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;)
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.insert()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Jobs may be scheduled at a specific datetime in the future:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;%{&lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;}
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Business&lt;/span&gt;.new(&lt;span class="pl-c1"&gt;scheduled_at:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;~U[&lt;/span&gt;2020-12-25 19:00:56.0Z&lt;span class="pl-pds"&gt;]&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.insert()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Jobs may also be scheduled down to the second any time in the future:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;%{&lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;}
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Business&lt;/span&gt;.new(&lt;span class="pl-c1"&gt;schedule_in:&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;)
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.insert()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unique jobs can be configured in the worker, or when the job is built:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;%{&lt;span class="pl-c1"&gt;email:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;brewster@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Mailer&lt;/span&gt;.new(&lt;span class="pl-c1"&gt;unique:&lt;/span&gt; [&lt;span class="pl-c1"&gt;period:&lt;/span&gt; &lt;span class="pl-c1"&gt;300&lt;/span&gt;, &lt;span class="pl-c1"&gt;fields:&lt;/span&gt; [&lt;span class="pl-c1"&gt;:queue&lt;/span&gt;, &lt;span class="pl-c1"&gt;:worker&lt;/span&gt;])
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.insert()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Multiple jobs can be inserted in a single transaction:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Multi&lt;/span&gt;.new()
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.insert(&lt;span class="pl-c1"&gt;:b_job&lt;/span&gt;, &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Business&lt;/span&gt;.new(%{&lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;}))
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.insert(&lt;span class="pl-c1"&gt;:m_job&lt;/span&gt;, &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Mailer&lt;/span&gt;.new(%{&lt;span class="pl-c1"&gt;email:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;brewser@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}))
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Repo&lt;/span&gt;.transaction()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Occasionally you may need to insert a job for a worker that exists in another
application. In that case you can use &lt;code&gt;Oban.Job.new/2&lt;/code&gt; to build the changeset
manually:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;%{&lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;user_id:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;}
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Job&lt;/span&gt;.new(&lt;span class="pl-c1"&gt;queue:&lt;/span&gt; &lt;span class="pl-c1"&gt;:default&lt;/span&gt;, &lt;span class="pl-c1"&gt;worker:&lt;/span&gt; &lt;span class="pl-en"&gt;OtherApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Worker&lt;/span&gt;)
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.insert()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Oban.insert/2,4&lt;/code&gt; is the preferred way of inserting jobs as it provides some of
Oban's advanced features (i.e., unique jobs). However, you can use your
application's &lt;code&gt;Repo.insert/2&lt;/code&gt; function if necessary.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-pruning" class="anchor" aria-hidden="true" href="#pruning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pruning&lt;/h4&gt;
&lt;p&gt;Although Oban keeps all jobs in the database for durability and observability,
it's not a great thing if the table grows indefinitely. Job pruning helps us by
deleting old records from the &lt;code&gt;oban_jobs&lt;/code&gt; tables. It has 3 modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Disabled - No jobs are deleted. Example: &lt;code&gt;:disabled&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Limit-based - Keeps the latest N records. Example: &lt;code&gt;{:maxlen, 100_000}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Time-based - Keeps records for the last N seconds. Example for 7 days: &lt;code&gt;{:maxage, 60 * 60 * 24 * 7}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you're using a row-limited database service, like Heroku's hobby plan with 10M rows, and you have pruning
&lt;code&gt;:disabled&lt;/code&gt;, you could hit that row limit quickly by filling up the &lt;code&gt;oban_beats&lt;/code&gt; table. Instead of fully
disabling pruning, consider setting a far-out time-based limit: &lt;code&gt;{:maxage, 60 * 60 * 24 * 365}&lt;/code&gt; (1 year).
You will get the benefit of retaining completed &amp;amp; discarded jobs for a year without an unwieldy beats table.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: Pruning is only applied to jobs that are completed or discarded
(has reached the maximum number of retries or has been manually killed). It'll
never delete a new job, a scheduled job or a job that failed and will be
retried.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h2&gt;
&lt;p&gt;As noted in the Usage section above there are some guidelines for running tests:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Disable all job dispatching by setting &lt;code&gt;queues: false&lt;/code&gt; or &lt;code&gt;queues: nil&lt;/code&gt; in your &lt;code&gt;test.exs&lt;/code&gt;
config. Keyword configuration is deep merged, so setting &lt;code&gt;queues: []&lt;/code&gt; won't have any effect.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Disable pruning via &lt;code&gt;prune: :disabled&lt;/code&gt;. Pruning isn't necessary in testing mode because jobs
created within the sandbox are rolled back at the end of the test. Additionally, the periodic
pruning queries will raise &lt;code&gt;DBConnection.OwnershipError&lt;/code&gt; when the application boots.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be sure to use the Ecto Sandbox for testing. Oban makes use of database pubsub
events to dispatch jobs, but pubsub events never fire within a transaction.
Since sandbox tests run within a transaction no events will fire and jobs
won't be dispatched.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;config &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;, &lt;span class="pl-c1"&gt;pool:&lt;/span&gt; &lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Adapters&lt;/span&gt;.&lt;span class="pl-en"&gt;SQL&lt;/span&gt;.&lt;span class="pl-en"&gt;Sandbox&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Oban provides some helpers to facilitate testing. The helpers handle the
boilerplate of making assertions on which jobs are enqueued. To use the
&lt;code&gt;assert_enqueued/1&lt;/code&gt; and &lt;code&gt;refute_enqueued/1&lt;/code&gt; helpers in your tests you must
include them in your testing module and specify your app's Ecto repo:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Testing&lt;/span&gt;, &lt;span class="pl-c1"&gt;repo:&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you can assert, refute or list jobs that have been enqueued within your
tests:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;assert_enqueued &lt;span class="pl-c1"&gt;worker:&lt;/span&gt; &lt;span class="pl-en"&gt;MyWorker&lt;/span&gt;, &lt;span class="pl-c1"&gt;args:&lt;/span&gt; %{&lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or&lt;/span&gt;

refute_enqueued &lt;span class="pl-c1"&gt;queue:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;special&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;args:&lt;/span&gt; %{&lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or&lt;/span&gt;

assert [%{&lt;span class="pl-c1"&gt;args:&lt;/span&gt; %{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;}}] &lt;span class="pl-k"&gt;=&lt;/span&gt; all_enqueued &lt;span class="pl-c1"&gt;worker:&lt;/span&gt; &lt;span class="pl-en"&gt;MyWorker&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the &lt;code&gt;Oban.Testing&lt;/code&gt; module for more details.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-integration-testing" class="anchor" aria-hidden="true" href="#integration-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integration Testing&lt;/h3&gt;
&lt;p&gt;During integration testing it may be necessary to run jobs because they do work
essential for the test to complete, i.e. sending an email, processing media,
etc. You can execute all available jobs in a particular queue by calling
&lt;code&gt;Oban.drain_queue/1&lt;/code&gt; directly from your tests.&lt;/p&gt;
&lt;p&gt;For example, to process all pending jobs in the "mailer" queue while testing
some business logic:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;BusinessTest&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;DataCase&lt;/span&gt;, &lt;span class="pl-c1"&gt;async:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;

  &lt;span class="pl-k"&gt;alias&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.{&lt;span class="pl-en"&gt;Business&lt;/span&gt;, &lt;span class="pl-en"&gt;Worker&lt;/span&gt;}

  test &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;we stay in the business of doing business&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-c1"&gt;:ok&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Business&lt;/span&gt;.schedule_a_meeting(%{&lt;span class="pl-c1"&gt;email:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;monty@brewster.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})

    assert %{&lt;span class="pl-c1"&gt;success:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;failure:&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;} &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.drain_queue(&lt;span class="pl-c1"&gt;:mailer&lt;/span&gt;)

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Now, make an assertion about the email delivery&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;code&gt;Oban.drain_queue/1&lt;/code&gt; for additional details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-heroku" class="anchor" aria-hidden="true" href="#heroku"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Heroku&lt;/h3&gt;
&lt;p&gt;If your app crashes on launch, be sure to confirm you are running the correct
version of Elixir and Erlang (&lt;a href="#Requirements"&gt;view requirements&lt;/a&gt;). If using the
&lt;em&gt;hashnuke/elixir&lt;/em&gt; buildpack, you can update the &lt;code&gt;elixir_buildpack.config&lt;/code&gt; file
in your application's root directory to something like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Elixir version
elixir_version=1.9.0

# Erlang version
erlang_version=22.0.3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Available Erlang versions are available &lt;a href="https://github.com/HashNuke/heroku-buildpack-elixir-otp-builds/blob/master/otp-versions"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;To run the Oban test suite you must have PostgreSQL 10+ running locally with a
database named &lt;code&gt;oban_test&lt;/code&gt;. Follow these steps to create the database, create
the database and run all migrations:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Create the database&lt;/span&gt;
MIX_ENV=test mix ecto.create -r Oban.Test.Repo

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Run the base migration&lt;/span&gt;
MIX_ENV=test mix ecto.migrate -r Oban.Test.Repo&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To ensure a commit passes CI you should run &lt;code&gt;mix ci&lt;/code&gt; locally, which executes the
following commands:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Check formatting (&lt;code&gt;mix format --check-formatted&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Lint with Credo (&lt;code&gt;mix credo --strict&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Run all tests (&lt;code&gt;mix test --raise&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Run Dialyzer (&lt;code&gt;mix dialyzer --halt-exit-status&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>sorentwo</author><guid isPermaLink="false">https://github.com/sorentwo/oban</guid><pubDate>Thu, 21 Nov 2019 00:05:00 GMT</pubDate></item><item><title>phoenixframework/phoenix #6 in Elixir, This week</title><link>https://github.com/phoenixframework/phoenix</link><description>&lt;p&gt;&lt;i&gt;Productive. Reliable. Fast.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/phoenixframework/phoenix/master/priv/static/phoenix.png"&gt;&lt;img src="https://raw.githubusercontent.com/phoenixframework/phoenix/master/priv/static/phoenix.png" alt="phoenix logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-productive-reliable-fast" class="anchor" aria-hidden="true" href="#productive-reliable-fast"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Productive. Reliable. Fast.&lt;/h3&gt;
&lt;p&gt;A productive web framework that does not compromise speed or maintainability.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/phoenixframework/phoenix" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/efba09df2373de30f21339e01b936694babbc4c8/68747470733a2f2f6170692e7472617669732d63692e6f72672f70686f656e69786672616d65776f726b2f70686f656e69782e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://api.travis-ci.org/phoenixframework/phoenix.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://inch-ci.org/github/phoenixframework/phoenix" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5f899c6b69b569048847f62eb937eae23f11bc17/687474703a2f2f696e63682d63692e6f72672f6769746875622f70686f656e69786672616d65776f726b2f70686f656e69782e737667" alt="Inline docs" data-canonical-src="http://inch-ci.org/github/phoenixframework/phoenix.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h2&gt;
&lt;p&gt;See the official site at &lt;a href="https://www.phoenixframework.org/" rel="nofollow"&gt;https://www.phoenixframework.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Install the latest version of Phoenix by following the instructions at &lt;a href="https://hexdocs.pm/phoenix/installation.html#phoenix" rel="nofollow"&gt;https://hexdocs.pm/phoenix/installation.html#phoenix&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;API documentation is available at &lt;a href="https://hexdocs.pm/phoenix" rel="nofollow"&gt;https://hexdocs.pm/phoenix&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Phoenix.js documentation is available at &lt;a href="https://hexdocs.pm/phoenix/js" rel="nofollow"&gt;https://hexdocs.pm/phoenix/js&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;We appreciate any contribution to Phoenix. Check our &lt;a href="CODE_OF_CONDUCT.md"&gt;CODE_OF_CONDUCT.md&lt;/a&gt; and &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; guides for more information. We usually keep a list of features and bugs &lt;a href="https://github.com/phoenixframework/phoenix/issues"&gt;in the issue tracker&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-generating-a-phoenix-project-from-unreleased-versions" class="anchor" aria-hidden="true" href="#generating-a-phoenix-project-from-unreleased-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generating a Phoenix project from unreleased versions&lt;/h3&gt;
&lt;p&gt;You can create a new project using the latest Phoenix source installer (the &lt;code&gt;phx.new&lt;/code&gt; Mix task) with the following steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Remove any previously installed &lt;code&gt;phx_new&lt;/code&gt; archives so that Mix will pick up the local source code. This can be done with &lt;code&gt;mix archive.uninstall phx_new&lt;/code&gt; or by simply deleting the file, which is usually in &lt;code&gt;~/.mix/archives/&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Copy this repo via &lt;code&gt;git clone https://github.com/phoenixframework/phoenix&lt;/code&gt; or by downloading it&lt;/li&gt;
&lt;li&gt;Run the &lt;code&gt;phx.new&lt;/code&gt; mix task from within the &lt;code&gt;installer&lt;/code&gt; directory, for example:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; installer
$ mix phx.new dev_app --dev&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;--dev&lt;/code&gt; flag will configure your new project's &lt;code&gt;:phoenix&lt;/code&gt; dep as a relative path dependency, pointing to your local Phoenix checkout:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defp&lt;/span&gt; &lt;span class="pl-en"&gt;deps&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  [{&lt;span class="pl-c1"&gt;:phoenix&lt;/span&gt;, &lt;span class="pl-c1"&gt;path:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;../..&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;override:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;},&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To create projects outside of the &lt;code&gt;installer/&lt;/code&gt; directory, add the latest archive to your machine by following the instructions in &lt;a href="https://github.com/phoenixframework/phoenix/blob/master/installer/README.md"&gt;installer/README.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To build the documentation from source:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; assets
$ npm install
$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; ..
$ MIX_ENV=docs mix docs&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To build Phoenix from source:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ mix deps.get
$ mix compile&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To build the Phoenix installer from source:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ mix deps.get
$ mix compile
$ mix archive.build&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-building-phoenixjs" class="anchor" aria-hidden="true" href="#building-phoenixjs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building phoenix.js&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; assets
$ npm install
$ npm run watch&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-important-links" class="anchor" aria-hidden="true" href="#important-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Important links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://webchat.freenode.net/?channels=#elixir-lang" rel="nofollow"&gt;#elixir-lang&lt;/a&gt; on &lt;a href="http://www.freenode.net/" rel="nofollow"&gt;Freenode&lt;/a&gt; IRC&lt;/li&gt;
&lt;li&gt;&lt;a href="https://elixir-slackin.herokuapp.com/" rel="nofollow"&gt;elixir-lang slack channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/phoenixframework/phoenix/issues"&gt;Issue tracker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://elixirforum.com/c/phoenix-forum" rel="nofollow"&gt;Phoenix Forum (questions)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://groups.google.com/group/phoenix-core" rel="nofollow"&gt;phoenix-core Mailing list (development)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visit Phoenix's sponsor, DockYard, for expert &lt;a href="https://dockyard.com/phoenix-consulting" rel="nofollow"&gt;phoenix consulting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Privately disclose security vulnerabilities to &lt;a href="mailto:phoenix-security@googlegroups.com"&gt;phoenix-security@googlegroups.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-copyright-and-license" class="anchor" aria-hidden="true" href="#copyright-and-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright and License&lt;/h2&gt;
&lt;p&gt;Copyright (c) 2014, Chris McCord.&lt;/p&gt;
&lt;p&gt;Phoenix source code is licensed under the &lt;a href="LICENSE.md"&gt;MIT License&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>phoenixframework</author><guid isPermaLink="false">https://github.com/phoenixframework/phoenix</guid><pubDate>Thu, 21 Nov 2019 00:06:00 GMT</pubDate></item></channel></rss>