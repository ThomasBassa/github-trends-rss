<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Elixir, This week</title><link>https://github.com/trending/elixir?since=weekly</link><description>The top repositories on GitHub for elixir, measured weekly</description><pubDate>Wed, 08 Jan 2020 01:08:33 GMT</pubDate><lastBuildDate>Wed, 08 Jan 2020 01:08:33 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>adriankumpf/teslamate #1 in Elixir, This week</title><link>https://github.com/adriankumpf/teslamate</link><description>&lt;p&gt;&lt;i&gt;A self-hosted data logger for your Tesla  ðŸš˜&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-teslamate" class="anchor" aria-hidden="true" href="#teslamate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TeslaMate&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://teslamate.readthedocs.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3fec9436ac98350de852be14e785495aeaa4cf3f/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7465736c616d6174652f62616467652f3f76657273696f6e3d6c6174657374" alt="" data-canonical-src="https://readthedocs.org/projects/teslamate/badge/?version=latest" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/adriankumpf/teslamate" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c43a9b01e70660247fcefaed6fe1daa95cb8326b/68747470733a2f2f7472617669732d63692e6f72672f61647269616e6b756d70662f7465736c616d6174652e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://travis-ci.org/adriankumpf/teslamate.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/adriankumpf/teslamate?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6d125280b977180d58015d7a915e3f531beacdac/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f61647269616e6b756d70662f7465736c616d6174652f62616467652e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://coveralls.io/repos/github/adriankumpf/teslamate/badge.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://hub.docker.com/r/teslamate/teslamate" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ac2552e90c246eb1c1918b89cf47445cf9ffb31a/68747470733a2f2f696d616765732e6d6963726f6261646765722e636f6d2f6261646765732f76657273696f6e2f7465736c616d6174652f7465736c616d6174652e737667" alt="" data-canonical-src="https://images.microbadger.com/badges/version/teslamate/teslamate.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://microbadger.com/images/teslamate/teslamate" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5b32a8dcc234c1d49c1ab1c0fd88e06b4b6c6f6c/68747470733a2f2f696d616765732e6d6963726f6261646765722e636f6d2f6261646765732f696d6167652f7465736c616d6174652f7465736c616d6174652e737667" alt="" data-canonical-src="https://images.microbadger.com/badges/image/teslamate/teslamate.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://hub.docker.com/r/teslamate/teslamate" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1b5b167991b3d63e76cc64448abc418f31be9a5f/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7465736c616d6174652f7465736c616d6174653f636f6c6f723d253233303939636563" alt="" data-canonical-src="https://img.shields.io/docker/pulls/teslamate/teslamate?color=%23099cec" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=YE4CPXRAV9CVL&amp;amp;source=url" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5b85b9d77e98c453a0b83d75c667832a5683c246/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f6e6174652d50617950616c2d6666363962342e737667" alt="" data-canonical-src="https://img.shields.io/badge/Donate-PayPal-ff69b4.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A powerful, self-hosted data logger for your Tesla.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Written in &lt;strong&gt;&lt;a href="https://elixir-lang.org/" rel="nofollow"&gt;Elixir&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Data is stored in a &lt;strong&gt;Postgres&lt;/strong&gt; database&lt;/li&gt;
&lt;li&gt;Visualization and data analysis with &lt;strong&gt;Grafana&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Vehicle data is published to a local &lt;strong&gt;MQTT&lt;/strong&gt; Broker&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Dashboards&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lifetime driving map&lt;/li&gt;
&lt;li&gt;Drive and charging reports&lt;/li&gt;
&lt;li&gt;Driving efficiency report&lt;/li&gt;
&lt;li&gt;Consumption (net / gross)&lt;/li&gt;
&lt;li&gt;Charge energy added vs energy used&lt;/li&gt;
&lt;li&gt;Vampire drain&lt;/li&gt;
&lt;li&gt;Projected 100% range (battery degradation)&lt;/li&gt;
&lt;li&gt;SOC charging stats&lt;/li&gt;
&lt;li&gt;Visited addresses&lt;/li&gt;
&lt;li&gt;History of installed updates&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;General&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Little to no additional vampire drain: the car will fall asleep after a certain idle time&lt;/li&gt;
&lt;li&gt;Automatic address lookup&lt;/li&gt;
&lt;li&gt;Locally enriches positions with elevation data&lt;/li&gt;
&lt;li&gt;Geo-fencing feature to create custom locations&lt;/li&gt;
&lt;li&gt;Supports multiple vehicles per Tesla Account&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-screenshots" class="anchor" aria-hidden="true" href="#screenshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/docs/screenshots/drive.png"&gt;&lt;img src="/docs/screenshots/drive.png" alt="Drive Details" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="/docs/screenshots/web_interface.png"&gt;&lt;img src="/docs/screenshots/web_interface.png" alt="Web Interface" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;strong&gt;&lt;a href="/docs/screenshots.md"&gt;MORE SCREENSHOTS&lt;/a&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;The full TeslaMate documentation is available on &lt;a href="https://teslamate.readthedocs.io/" rel="nofollow"&gt;Read the Docs&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Getting Started
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/installation/docker.html" rel="nofollow"&gt;Simple Docker install&lt;/a&gt; (inside your home network)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/installation/docker_advanced.html" rel="nofollow"&gt;Advanced Docker install&lt;/a&gt; (Reverse Proxy, Let's Encrypt Certificate, HTTP Basic Auth)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/installation/debian.html" rel="nofollow"&gt;Manual install on Debian/Ubuntu&lt;/a&gt; (without Docker)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hub.helm.sh/charts/billimek/teslamate" rel="nofollow"&gt;Kubernetes install&lt;/a&gt; (opinionated helm chart)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/upgrading.html" rel="nofollow"&gt;Upgrading to a new version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/faq.html" rel="nofollow"&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Sleep Mode
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/configuration/sleep.html" rel="nofollow"&gt;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/configuration/guides/shortcuts.html" rel="nofollow"&gt;Shortcuts Setup (iOS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/configuration/guides/tasker.html" rel="nofollow"&gt;Tasker Setup (Android)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/configuration/guides/macro_droid.html" rel="nofollow"&gt;MacroDroid Setup (Android)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Integrations
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/integrations/home_assistant.html" rel="nofollow"&gt;HomeAssistant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/integrations/mqtt.html" rel="nofollow"&gt;MQTT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Advanced configuration
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/configuration/environment_variables.html" rel="nofollow"&gt;Environment Variables&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Development and Contributing
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://teslamate.readthedocs.io/en/latest/development.html" rel="nofollow"&gt;Development&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-donations" class="anchor" aria-hidden="true" href="#donations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Donations&lt;/h2&gt;
&lt;p&gt;TeslaMate is open source and completely free for everyone to use.&lt;/p&gt;
&lt;p&gt;Maintaining this project isn't effortless, or free. If you would like to
support further development, that would be awesome. If you don't, no problem;
just share your love and show your support.&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=YE4CPXRAV9CVL&amp;amp;source=url" rel="nofollow"&gt;
    &lt;img src="docs/images/paypal-donate-button.png" alt="Donate with PayPal" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Authors: Adrian Kumpf â€“ &lt;a href="https://github.com/adriankumpf/teslamate/graphs/contributors"&gt;List of contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Distributed under MIT License&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>adriankumpf</author><guid isPermaLink="false">https://github.com/adriankumpf/teslamate</guid><pubDate>Wed, 08 Jan 2020 00:01:00 GMT</pubDate></item><item><title>phoenixframework/phoenix_live_view #2 in Elixir, This week</title><link>https://github.com/phoenixframework/phoenix_live_view</link><description>&lt;p&gt;&lt;i&gt;Rich, real-time user experiences with server-rendered HTML&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-phoenix-liveview" class="anchor" aria-hidden="true" href="#phoenix-liveview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Phoenix LiveView&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/phoenixframework/phoenix_live_view/workflows/CI/badge.svg"&gt;&lt;img src="https://github.com/phoenixframework/phoenix_live_view/workflows/CI/badge.svg" alt="Actions Status" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Phoenix LiveView enables rich, real-time user experiences with server-rendered HTML. For more information, &lt;a href="https://dockyard.com/blog/2018/12/12/phoenix-liveview-interactive-real-time-apps-no-need-to-write-javascript" rel="nofollow"&gt;see the initial announcement&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Currently LiveView is under active development and we are focused on getting a stable and solid initial version out. For this reason, we will be accepting only bug reports in the issues tracker for now. We will open the issues tracker for features after the current milestone is ironed out.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-learning" class="anchor" aria-hidden="true" href="#learning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learning&lt;/h2&gt;
&lt;p&gt;As official guides are being developed, see our existing
comprehensive docs and examples to get up to speed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hexdocs.pm/phoenix_live_view" rel="nofollow"&gt;Phoenix.LiveView docs for Elixir and JavaScript usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/phoenixframework/phoenix_live_view/blob/master/lib/phoenix_live_view/test/live_view_test.ex"&gt;Phoenix.LiveViewTest for testing docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chrismccord/phoenix_live_view_example"&gt;LiveView example repo&lt;/a&gt; with a handful of examples from Weather widgets, autocomplete search, and games like Snake or Pacman&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;There are currently two methods for installing LiveView. For projects that
require more stability, it is recommended that you install using the
&lt;a href="https://hexdocs.pm/phoenix_live_view/installation.html" rel="nofollow"&gt;installation guide on HexDocs&lt;/a&gt;.
If you want to use the latest features, you should follow the instructions
given in the markdown file &lt;a href="guides/introduction/installation.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-browser-support" class="anchor" aria-hidden="true" href="#browser-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Browser Support&lt;/h2&gt;
&lt;p&gt;All current Chrome, Safari, Firefox, and MS Edge are supported.
IE11 support is available with the following polyfills:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;npm install --save --prefix assets mdn-polyfills url-search-params-polyfill formdata-polyfill child-replace-with-polyfill classlist-polyfill&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; assets/js/app.js&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mdn-polyfills/CustomEvent&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mdn-polyfills/String.prototype.startsWith&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mdn-polyfills/Array.from&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mdn-polyfills/NodeList.prototype.forEach&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mdn-polyfills/Element.prototype.closest&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mdn-polyfills/Element.prototype.matches&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;child-replace-with-polyfill&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;url-search-params-polyfill&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;formdata-polyfill&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;classlist-polyfill&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;import&lt;/span&gt; {&lt;span class="pl-smi"&gt;Socket&lt;/span&gt;} &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;phoenix&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-smi"&gt;LiveSocket&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;phoenix_live_view&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>phoenixframework</author><guid isPermaLink="false">https://github.com/phoenixframework/phoenix_live_view</guid><pubDate>Wed, 08 Jan 2020 00:02:00 GMT</pubDate></item><item><title>elixir-lang/elixir #3 in Elixir, This week</title><link>https://github.com/elixir-lang/elixir</link><description>&lt;p&gt;&lt;i&gt;Elixir is a dynamic, functional language designed for building scalable and maintainable applications&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/elixir-lang/elixir-lang.github.com/raw/master/images/logo/logo.png"&gt;&lt;img src="https://github.com/elixir-lang/elixir-lang.github.com/raw/master/images/logo/logo.png" alt="Elixir" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://cirrus-ci.com/github/elixir-lang/elixir" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c4d820a66eff706de4aa9371456b877a22ee03d7/68747470733a2f2f6170692e6369727275732d63692e636f6d2f6769746875622f656c697869722d6c616e672f656c697869722e7376673f6272616e63683d6d6173746572" alt="Build status" data-canonical-src="https://api.cirrus-ci.com/github/elixir-lang/elixir.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Elixir is a dynamic, functional language designed for building scalable
and maintainable applications.&lt;/p&gt;
&lt;p&gt;For more about Elixir, installation and documentation,
&lt;a href="https://elixir-lang.org/" rel="nofollow"&gt;check Elixir's website&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-policies" class="anchor" aria-hidden="true" href="#policies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Policies&lt;/h2&gt;
&lt;p&gt;New releases are announced in the &lt;a href="https://groups.google.com/group/elixir-lang-ann" rel="nofollow"&gt;announcement mailing list&lt;/a&gt;.
You can subscribe by sending an email to &lt;a href="mailto:elixir-lang-ann+subscribe@googlegroups.com"&gt;elixir-lang-ann+subscribe@googlegroups.com&lt;/a&gt; and replying to the confirmation email.&lt;/p&gt;
&lt;p&gt;All security releases &lt;a href="https://groups.google.com/forum/#!searchin/elixir-lang-ann/%5Bsecurity%5D%7Csort:date" rel="nofollow"&gt;will be tagged with &lt;code&gt;[security]&lt;/code&gt;&lt;/a&gt;. For more information, please read our &lt;a href="SECURITY.md"&gt;Security Policy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All interactions in our official communication channels follow our &lt;a href="CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bug-reports" class="anchor" aria-hidden="true" href="#bug-reports"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bug reports&lt;/h2&gt;
&lt;p&gt;For reporting bugs, &lt;a href="https://github.com/elixir-lang/elixir/issues"&gt;visit our issue tracker&lt;/a&gt; and follow the steps
for reporting a new issue. &lt;strong&gt;Please disclose security vulnerabilities
privately at &lt;a href="mailto:elixir-security@googlegroups.com"&gt;elixir-security@googlegroups.com&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling-from-source" class="anchor" aria-hidden="true" href="#compiling-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling from source&lt;/h2&gt;
&lt;p&gt;For the many different ways to install Elixir,
&lt;a href="https://elixir-lang.org/install.html" rel="nofollow"&gt;see our installation instructions on the website&lt;/a&gt;.
To compile from source, you can follow the steps below.&lt;/p&gt;
&lt;p&gt;First, &lt;a href="https://elixir-lang.org/install.html#installing-erlang" rel="nofollow"&gt;install Erlang&lt;/a&gt;. Then clone this repository to your machine, compile and test it:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/elixir-lang/elixir.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; elixir
make clean &lt;span class="pl-c1"&gt;test&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: if you are running on Windows,
&lt;a href="https://github.com/elixir-lang/elixir/wiki/Windows"&gt;this article includes important notes for compiling Elixir from source
on Windows&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If Elixir fails to build (specifically when pulling in a new version via
&lt;code&gt;git&lt;/code&gt;), be sure to remove any previous build artifacts by running
&lt;code&gt;make clean&lt;/code&gt;, then &lt;code&gt;make test&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If tests pass, you can use Interactive Elixir by running &lt;code&gt;bin/iex&lt;/code&gt; in your terminal.&lt;/p&gt;
&lt;p&gt;However, if tests fail, it is likely that you have an outdated Erlang/OTP version
(Elixir requires Erlang/OTP 21.0 or later). You can check your Erlang/OTP version
by calling &lt;code&gt;erl&lt;/code&gt; in the command line. You will see some information similar to:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Erlang/OTP 21 [erts-9.0] [smp:2:2] [async-threads:10] [kernel-poll:false]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you have properly set up your dependencies and tests still fail,
you may want to open up a bug report, as explained next.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-proposing-new-features" class="anchor" aria-hidden="true" href="#proposing-new-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Proposing new features&lt;/h2&gt;
&lt;p&gt;For proposing new features, please start a discussion in the
&lt;a href="https://groups.google.com/group/elixir-lang-core" rel="nofollow"&gt;Elixir Core mailing list&lt;/a&gt;. Keep in mind that it is your responsibility
to argue and explain why a feature is useful and how it will impact the
codebase and the community.&lt;/p&gt;
&lt;p&gt;Once a proposal is accepted, it will be added to &lt;a href="https://github.com/elixir-lang/elixir/issues"&gt;the issue tracker&lt;/a&gt;.
The issue tracker focuses on &lt;em&gt;actionable items&lt;/em&gt; and it holds a list of
upcoming enhancements and pending bugs. All entries in the tracker are
tagged for clarity and to ease collaboration.&lt;/p&gt;
&lt;p&gt;Features and bug fixes that have already been merged and will be included
in the next release are marked as "closed" in the issue tracker and are
added to the &lt;a href="CHANGELOG.md"&gt;changelog&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;We welcome everyone to contribute to Elixir. To do so, there are a few
things you need to know about the code. First, Elixir code is divided
in applications inside the &lt;code&gt;lib&lt;/code&gt; folder:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;elixir&lt;/code&gt; - Elixir's kernel and standard library&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;eex&lt;/code&gt; - EEx is the template engine that allows you to embed Elixir&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ex_unit&lt;/code&gt; - ExUnit is a simple test framework that ships with Elixir&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;iex&lt;/code&gt; - IEx stands for Interactive Elixir: Elixir's interactive shell&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;logger&lt;/code&gt; - Logger is the built-in logger&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;mix&lt;/code&gt; - Mix is Elixir's build tool&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can run all tests in the root directory with &lt;code&gt;make test&lt;/code&gt; and you can
also run tests for a specific framework &lt;code&gt;make test_#{APPLICATION}&lt;/code&gt;, for example,
&lt;code&gt;make test_ex_unit&lt;/code&gt;. If you just changed something in the Elixir's standard
library, you can run only that portion through &lt;code&gt;make test_stdlib&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you are changing just one file, you can choose to compile and run tests only
for that particular file for fast development cycles. For example, if you
are changing the String module, you can compile it and run its tests as:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;bin/elixirc lib/elixir/lib/string.ex -o lib/elixir/ebin
bin/elixir lib/elixir/test/elixir/string_test.exs&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To recompile (including Erlang modules):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;make compile&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After your changes are done, please remember to run &lt;code&gt;make format&lt;/code&gt; to guarantee
all files are properly formatted and then run the full suite with
&lt;code&gt;make test&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If your contribution fails during the bootstrapping of the language,
you can rebuild the language from scratch with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;make clean_elixir compile&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Similarly, if you can't get Elixir to compile or the tests to pass after
updating an existing checkout, run &lt;code&gt;make clean compile&lt;/code&gt;. You can check
&lt;a href="https://cirrus-ci.com/github/elixir-lang/elixir" rel="nofollow"&gt;the official build status on Cirrus CI&lt;/a&gt;.
More tasks can be found by reading the &lt;a href="Makefile"&gt;Makefile&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With tests running and passing, you are ready to contribute to Elixir and
&lt;a href="https://help.github.com/articles/using-pull-requests/"&gt;send a pull request&lt;/a&gt;.
We have saved some excellent pull requests we have received in the past in
case you are looking for some examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/elixir-lang/elixir/pull/992"&gt;Implement Enum.member? - Pull Request&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elixir-lang/elixir/pull/1058"&gt;Add String.valid? - Pull Request&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elixir-lang/elixir/pull/1059"&gt;Implement capture_io for ExUnit - Pull Request&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-reviewing-changes" class="anchor" aria-hidden="true" href="#reviewing-changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reviewing changes&lt;/h3&gt;
&lt;p&gt;Once a pull request is sent, the Elixir team will review your changes.
We outline our process below to clarify the roles of everyone involved.&lt;/p&gt;
&lt;p&gt;All pull requests must be approved by two committers before being merged into
the repository. If any changes are necessary, the team will leave appropriate
comments requesting changes to the code. Unfortunately we cannot guarantee a
pull request will be merged, even when modifications are requested, as the Elixir
team will re-evaluate the contribution as it changes.&lt;/p&gt;
&lt;p&gt;Committers may also push style changes directly to your branch. If you would
rather manage all changes yourself, you can disable "Allow edits from maintainers"
feature when submitting your pull request.&lt;/p&gt;
&lt;p&gt;The Elixir team may optionally assign someone to review a pull request.
If someone is assigned, they must explicitly approve the code before
another team member can merge it.&lt;/p&gt;
&lt;p&gt;When the review finishes, your pull request will be squashed and merged
into the repository. If you have carefully organized your commits and
believe they should be merged without squashing, please mention it in
a comment.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-documentation" class="anchor" aria-hidden="true" href="#building-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building documentation&lt;/h2&gt;
&lt;p&gt;Building the documentation requires &lt;a href="https://github.com/elixir-lang/ex_doc"&gt;ExDoc&lt;/a&gt;
to be installed and built alongside Elixir:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; After cloning and compiling Elixir, in its parent directory:&lt;/span&gt;
git clone git://github.com/elixir-lang/ex_doc.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; ex_doc &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ../elixir/bin/mix &lt;span class="pl-k"&gt;do&lt;/span&gt; deps.get, compile&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now go back to Elixir's root directory and run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;make docs                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; to generate HTML pages&lt;/span&gt;
make docs DOCS_FORMAT=epub &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; to generate EPUB documents&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will produce documentation sets for &lt;code&gt;elixir&lt;/code&gt;, &lt;code&gt;eex&lt;/code&gt;, &lt;code&gt;ex_unit&lt;/code&gt;, &lt;code&gt;iex&lt;/code&gt;, &lt;code&gt;logger&lt;/code&gt;,
and &lt;code&gt;mix&lt;/code&gt; under the &lt;code&gt;doc&lt;/code&gt; directory. If you are planning to contribute documentation,
&lt;a href="https://hexdocs.pm/elixir/writing-documentation.html" rel="nofollow"&gt;please check our best practices for writing documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-development-links" class="anchor" aria-hidden="true" href="#development-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://elixir-lang.org/docs.html" rel="nofollow"&gt;Elixir Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/group/elixir-lang-core" rel="nofollow"&gt;Elixir Core Mailing list (development)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/group/elixir-lang-ann" rel="nofollow"&gt;Announcement mailing list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elixir-lang/elixir/issues"&gt;Issue tracker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="CHANGELOG.md"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="SECURITY.md"&gt;Security Policy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://webchat.freenode.net/?channels=#elixir-lang" rel="nofollow"&gt;#elixir-lang&lt;/a&gt;&lt;/strong&gt; on &lt;a href="https://www.freenode.net" rel="nofollow"&gt;Freenode&lt;/a&gt; IRC&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;"Elixir" and the Elixir logo are copyright (c) 2012 Plataformatec.&lt;/p&gt;
&lt;p&gt;Elixir source code is released under Apache License 2.0.&lt;/p&gt;
&lt;p&gt;Check &lt;a href="NOTICE"&gt;NOTICE&lt;/a&gt; and &lt;a href="LICENSE"&gt;LICENSE&lt;/a&gt; files for more information.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>elixir-lang</author><guid isPermaLink="false">https://github.com/elixir-lang/elixir</guid><pubDate>Wed, 08 Jan 2020 00:03:00 GMT</pubDate></item><item><title>sorentwo/oban #4 in Elixir, This week</title><link>https://github.com/sorentwo/oban</link><description>&lt;p&gt;&lt;i&gt;ðŸ¥ƒ Robust asynchronous job processor powered by Elixir and modern PostgreSQL&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
  &lt;a href="https://github.com/sorentwo/oban"&gt;
    &lt;img alt="oban" src="https://raw.githubusercontent.com/sorentwo/oban/master/logotype.png" width="435" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
  Robust job processing in Elixir, backed by modern PostgreSQL.
  Reliable, &lt;br&gt; observable and loaded with &lt;a href="#Features"&gt;enterprise grade features&lt;/a&gt;.
&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a href="https://hex.pm/packages/oban" rel="nofollow"&gt;
    &lt;img alt="Hex Version" src="https://camo.githubusercontent.com/ed315ea60f26789e499e1f683172dc4516684c8e/68747470733a2f2f696d672e736869656c64732e696f2f686578706d2f762f6f62616e2e737667" data-canonical-src="https://img.shields.io/hexpm/v/oban.svg" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://hexdocs.pm/oban" rel="nofollow"&gt;
    &lt;img alt="Hex Docs" src="https://camo.githubusercontent.com/e7fc510ae89404b0a6bc21d5454b2d041a1392c3/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6865782e706d2d646f63732d677265656e2e7376673f7374796c653d666c6174" data-canonical-src="http://img.shields.io/badge/hex.pm-docs-green.svg?style=flat" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a href="https://circleci.com/gh/sorentwo/oban" rel="nofollow"&gt;
    &lt;img alt="CircleCI Status" src="https://camo.githubusercontent.com/7025c93b5a76c0730b8a04008b12864ba258028b/68747470733a2f2f636972636c6563692e636f6d2f67682f736f72656e74776f2f6f62616e2e7376673f7374796c653d737667" data-canonical-src="https://circleci.com/gh/sorentwo/oban.svg?style=svg" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://opensource.org/licenses/Apache-2.0" rel="nofollow"&gt;
    &lt;img alt="Apache 2 License" src="https://camo.githubusercontent.com/e4e3a7db7b393f1dad2ee96845a4c291cd7524b6/68747470733a2f2f696d672e736869656c64732e696f2f686578706d2f6c2f6f62616e" data-canonical-src="https://img.shields.io/hexpm/l/oban" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#Features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#UI"&gt;UI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Usage"&gt;Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#Configuring-Queues"&gt;Configuring Queues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Defining-Workers"&gt;Defining Workers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Enqueueing-Jobs"&gt;Enqueuing Jobs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Pruning-Historic-Jobs"&gt;Pruning Historic Jobs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Unique-Jobs"&gt;Unique Jobs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Periodic-Jobs"&gt;Periodic Jobs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#Testing"&gt;Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Error-Handling"&gt;Error Handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Instrumentation-and-Logging"&gt;Instrumentation &amp;amp; Logging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Isolation"&gt;Isolation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Pulse-Tracking"&gt;Pulse Tracking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;Oban's primary goals are &lt;strong&gt;reliability&lt;/strong&gt;, &lt;strong&gt;consistency&lt;/strong&gt; and &lt;strong&gt;observability&lt;/strong&gt;.
It is fundamentally different from other background job processing tools because
it retains job data for historic metrics and inspection. You can leave your
application running indefinitely without worrying about jobs being lost or
orphaned due to crashes.&lt;/p&gt;
&lt;p&gt;Advantages over in-memory, mnesia, Redis and RabbitMQ based tools:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Fewer Dependencies&lt;/strong&gt; â€” If you are running a web app there is a &lt;em&gt;very good&lt;/em&gt;
chance that you're running on top of a &lt;a href="https://en.wikipedia.org/wiki/Relational_database#RDBMS" rel="nofollow"&gt;RDBMS&lt;/a&gt;. Running your job queue
within PostgreSQL minimizes system dependencies and simplifies data backups.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Transactional Control&lt;/strong&gt; â€” Enqueue a job along with other database changes,
ensuring that everything is committed or rolled back atomically.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Database Backups&lt;/strong&gt; â€” Jobs are stored inside of your primary database, which
means they are backed up together with the data that they relate to.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Advanced features and advantages over other RDBMS based tools:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Isolated Queues&lt;/strong&gt; â€” Jobs are stored in a single table but are executed in
distinct queues. Each queue runs in isolation, ensuring that a job in a single
slow queue can't back up other faster queues.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Queue Control&lt;/strong&gt; â€” Queues can be started, stopped, paused, resumed and scaled
independently at runtime.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Resilient Queues&lt;/strong&gt; â€” Failing queries won't crash the entire supervision tree,
instead they trip a circuit breaker and will be retried again in the future.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Job Killing&lt;/strong&gt; â€” Jobs can be killed in the middle of execution regardless of
which node they are running on. This stops the job at once and flags it as
&lt;code&gt;discarded&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Triggered execution&lt;/strong&gt; â€” Database triggers ensure that jobs are dispatched as
soon as they are inserted into the database.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Unique Jobs&lt;/strong&gt; â€” Duplicate work can be avoided through unique job controls.
Uniqueness can be enforced at the argument, queue and worker level for any
period of time.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scheduled Jobs&lt;/strong&gt; â€” Jobs can be scheduled at any time in the future, down to
the second.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Periodic (CRON) Jobs&lt;/strong&gt; â€” Automatically enqueue jobs on a cron-like schedule.
Duplicate jobs are never enqueued, no matter how many nodes you're running.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Job Safety&lt;/strong&gt; â€” When a process crashes or the BEAM is terminated executing
jobs aren't lostâ€”they are quickly recovered by other running nodes or
immediately when the node is restarted.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Historic Metrics&lt;/strong&gt; â€” After a job is processed the row is &lt;em&gt;not&lt;/em&gt; deleted.
Instead, the job is retained in the database to provide metrics. This allows
users to inspect historic jobs and to see aggregate data at the job, queue or
argument level.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Node Metrics&lt;/strong&gt; â€” Every queue records metrics to the database during runtime.
These are used to monitor queue health across nodes and may be used for
analytics.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Queue Draining&lt;/strong&gt; â€” Queue shutdown is delayed so that slow jobs can finish
executing before shutdown.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Telemetry Integration&lt;/strong&gt; â€” Job life-cycle events are emitted via
&lt;a href="https://github.com/beam-telemetry/telemetry"&gt;Telemetry&lt;/a&gt; integration. This enables simple logging, error reporting
and health checkups without plug-ins.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;Oban has been developed and actively tested with Elixir 1.8+, Erlang/OTP 21.1+
and PostgreSQL 11.0+. Running Oban currently requires Elixir 1.8+, Erlang 21+,
and PostgreSQL 9.6+.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ui" class="anchor" aria-hidden="true" href="#ui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UI&lt;/h2&gt;
&lt;p&gt;A web-based user interface for monitoring and managing Oban is availabe as a
private beta. Learn more about it and register for the beta at
&lt;a href="https://oban.dev" rel="nofollow"&gt;oban.dev&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Oban is published on &lt;a href="https://hex.pm/packages/oban" rel="nofollow"&gt;Hex&lt;/a&gt;. Add it to your list of
dependencies in &lt;code&gt;mix.exs&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;deps&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  [
    {&lt;span class="pl-c1"&gt;:oban&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~&amp;gt; 0.12&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
  ]
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run &lt;code&gt;mix deps.get&lt;/code&gt; to install Oban and its dependencies, including
&lt;a href="https://hex.pm/packages/ecto" rel="nofollow"&gt;Ecto&lt;/a&gt;, &lt;a href="https://hex.pm/packages/jason" rel="nofollow"&gt;Jason&lt;/a&gt; and &lt;a href="https://hex.pm/packages/postgrex" rel="nofollow"&gt;Postgrex&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After the packages are installed you must create a database migration to
add the &lt;code&gt;oban_jobs&lt;/code&gt; table to your database:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mix ecto.gen.migration add_oban_jobs_table&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Open the generated migration in your editor and call the &lt;code&gt;up&lt;/code&gt; and &lt;code&gt;down&lt;/code&gt;
functions on &lt;code&gt;Oban.Migrations&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-e"&gt;Repo&lt;/span&gt;.&lt;span class="pl-e"&gt;Migrations&lt;/span&gt;.&lt;span class="pl-en"&gt;AddObanJobsTable&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Migration&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;up&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Migrations&lt;/span&gt;.&lt;span class="pl-en"&gt;up&lt;/span&gt;()
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; We specify `version: 1` in `down`, ensuring that we'll roll all the way back down if&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; necessary, regardless of which version we've migrated `up` to.&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;down&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Migrations&lt;/span&gt;.&lt;span class="pl-en"&gt;down&lt;/span&gt;(&lt;span class="pl-c1"&gt;version:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will run all of Oban's versioned migrations for your database. Migrations
between versions are idempotent and will &lt;em&gt;never&lt;/em&gt; change after a release. As new
versions are released you may need to run additional migrations.&lt;/p&gt;
&lt;p&gt;Now, run the migration to create the table:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mix ecto.migrate&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next see &lt;a href="#Usage"&gt;Usage&lt;/a&gt; for how to integrate Oban into your application and
start defining jobs!&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-note-about-releases" class="anchor" aria-hidden="true" href="#note-about-releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Note About Releases&lt;/h4&gt;
&lt;p&gt;If you are using releases you may see Postgrex errors logged during your initial
deploy (or any deploy requiring an Oban migration). The errors are only
temporary! After the migration has completed each queue will start producing
jobs normally.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;

&lt;p&gt;Oban is a robust job processing library which uses PostgreSQL for storage and
coordination.&lt;/p&gt;
&lt;p&gt;Each Oban instance is a supervision tree and &lt;em&gt;not an application&lt;/em&gt;. That means it
won't be started automatically and must be included in your application's
supervision tree. All of your configuration is passed into the supervisor,
allowing you to configure Oban like the rest of your application:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; config/config.exs&lt;/span&gt;
config &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-en"&gt;Oban&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;repo:&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;prune:&lt;/span&gt; {&lt;span class="pl-c1"&gt;:maxlen&lt;/span&gt;, &lt;span class="pl-c1"&gt;100_000&lt;/span&gt;},
  &lt;span class="pl-c1"&gt;queues:&lt;/span&gt; [&lt;span class="pl-c1"&gt;default:&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;events:&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-c1"&gt;media:&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;]

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; lib/my_app/application.ex&lt;/span&gt;
&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Application&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c"&gt;@moduledoc false&lt;/span&gt;

  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Application&lt;/span&gt;

  &lt;span class="pl-k"&gt;alias&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.{&lt;span class="pl-en"&gt;Endpoint&lt;/span&gt;, &lt;span class="pl-en"&gt;Repo&lt;/span&gt;}

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;start&lt;/span&gt;(_type, _args) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    children &lt;span class="pl-k"&gt;=&lt;/span&gt; [
      &lt;span class="pl-en"&gt;Repo&lt;/span&gt;,
      &lt;span class="pl-en"&gt;Endpoint&lt;/span&gt;,
      {&lt;span class="pl-en"&gt;Oban&lt;/span&gt;, &lt;span class="pl-en"&gt;Application&lt;/span&gt;.&lt;span class="pl-en"&gt;get_env&lt;/span&gt;(&lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-en"&gt;Oban&lt;/span&gt;)}
    ]

    &lt;span class="pl-en"&gt;Supervisor&lt;/span&gt;.&lt;span class="pl-en"&gt;start_link&lt;/span&gt;(children, &lt;span class="pl-c1"&gt;strategy:&lt;/span&gt; &lt;span class="pl-c1"&gt;:one_for_one&lt;/span&gt;, &lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Supervisor&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you are running tests (which you should be) you'll want to disable pruning
and job dispatching altogether when testing:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; config/test.exs&lt;/span&gt;
config &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-en"&gt;Oban&lt;/span&gt;, &lt;span class="pl-c1"&gt;crontab:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;, &lt;span class="pl-c1"&gt;queues:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;, &lt;span class="pl-c1"&gt;prune:&lt;/span&gt; &lt;span class="pl-c1"&gt;:disabled&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Without dispatch and pruning disabled Ecto will raise constant ownership errors
and you won't be able to run tests.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-configuring-queues" class="anchor" aria-hidden="true" href="#configuring-queues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring Queues&lt;/h3&gt;
&lt;p&gt;Queues are specified as a keyword list where the key is the name of the queue
and the value is the maximum number of concurrent jobs. The following
configuration would start four queues with concurrency ranging from 5 to 50:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;queues:&lt;/span&gt; [&lt;span class="pl-c1"&gt;default:&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;mailers:&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-c1"&gt;events:&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-c1"&gt;media:&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There isn't a limit to the number of queues or how many jobs may execute
concurrently in each queue. Here are a few caveats and guidelines:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-caveats--guidelines" class="anchor" aria-hidden="true" href="#caveats--guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caveats &amp;amp; Guidelines&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Each queue will run as many jobs as possible concurrently, up to the
configured limit. Make sure your system has enough resources (i.e. database
connections) to handle the concurrent load.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Queue limits are local (per-node), not global (per-cluster). For example,
running a queue with a local limit of one on three separate nodes is
effectively a global limit of three. If you require a global limit you must
restrict the number of nodes running a particular queue.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Only jobs in the configured queues will execute. Jobs in any other queue will
stay in the database untouched.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be careful how many concurrent jobs make expensive system calls (i.e. FFMpeg,
ImageMagick).  The BEAM ensures that the system stays responsive under load,
but those guarantees don't apply when using ports or shelling out commands.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-defining-workers" class="anchor" aria-hidden="true" href="#defining-workers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Defining Workers&lt;/h3&gt;
&lt;p&gt;Worker modules do the work of processing a job. At a minimum they must define a
&lt;code&gt;perform/2&lt;/code&gt; function, which is called with an &lt;code&gt;args&lt;/code&gt; map and the job struct.&lt;/p&gt;
&lt;p&gt;Note that when Oban calls &lt;code&gt;perform/2&lt;/code&gt;, the &lt;code&gt;args&lt;/code&gt; map given when enqueueing the
job will have been deserialized from the PostgreSQL &lt;code&gt;jsonb&lt;/code&gt; data type and
therefore map keys are converted to strings.&lt;/p&gt;
&lt;p&gt;Define a worker to process jobs in the &lt;code&gt;events&lt;/code&gt; queue:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Business&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Worker&lt;/span&gt;, &lt;span class="pl-c1"&gt;queue:&lt;/span&gt; &lt;span class="pl-c1"&gt;:events&lt;/span&gt;, &lt;span class="pl-c1"&gt;max_attempts:&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;

  &lt;span class="pl-smi"&gt;@impl&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Worker&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;perform&lt;/span&gt;(%{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; id} &lt;span class="pl-k"&gt;=&lt;/span&gt; args, _job) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    model &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;.&lt;span class="pl-en"&gt;get&lt;/span&gt;(&lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Business&lt;/span&gt;.&lt;span class="pl-en"&gt;Man&lt;/span&gt;, id)

    &lt;span class="pl-k"&gt;case&lt;/span&gt; args &lt;span class="pl-k"&gt;do&lt;/span&gt;
      %{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;in_the&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;business&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; handle business job&lt;/span&gt;
        &lt;span class="pl-en"&gt;IO&lt;/span&gt;.&lt;span class="pl-en"&gt;inspect&lt;/span&gt;(model)

      %{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;vote_for&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; vote} &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; handle vote job&lt;/span&gt;
        &lt;span class="pl-en"&gt;IO&lt;/span&gt;.&lt;span class="pl-en"&gt;inspect&lt;/span&gt;(model)

      _ &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="pl-en"&gt;IO&lt;/span&gt;.&lt;span class="pl-en"&gt;inspect&lt;/span&gt;(model)
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The value returned from &lt;code&gt;perform/2&lt;/code&gt; is ignored, unless it an &lt;code&gt;{:error, reason}&lt;/code&gt;
tuple. With an error return or when perform has an uncaught exception or throw
then the error is reported and the job is retried (provided there are attempts
remaining).&lt;/p&gt;
&lt;p&gt;See the &lt;code&gt;Oban.Worker&lt;/code&gt; docs for more details on failure conditions and
&lt;code&gt;Oban.Telemetry&lt;/code&gt; for details on job reporting.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-enqueueing-jobs" class="anchor" aria-hidden="true" href="#enqueueing-jobs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enqueueing Jobs&lt;/h3&gt;
&lt;p&gt;Jobs are simply Ecto structs and are enqueued by inserting them into the
database. For convenience and consistency all workers provide a &lt;code&gt;new/2&lt;/code&gt;
function that converts an args map into a job changeset suitable for insertion:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;%{&lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;in_the:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;business&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;of_doing:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;business&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Business&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;()
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;insert&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The worker's defaults may be overridden by passing options:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;%{&lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;vote_for:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;none of the above&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Business&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;queue:&lt;/span&gt; &lt;span class="pl-c1"&gt;:special&lt;/span&gt;, &lt;span class="pl-c1"&gt;max_attempts:&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;)
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;insert&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Jobs may be scheduled at a specific datetime in the future:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;%{&lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;}
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Business&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;scheduled_at:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;~U[&lt;/span&gt;2020-12-25 19:00:56.0Z&lt;span class="pl-pds"&gt;]&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;insert&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Jobs may also be scheduled down to the second any time in the future:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;%{&lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;}
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Business&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;schedule_in:&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;)
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;insert&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unique jobs can be configured in the worker, or when the job is built:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;%{&lt;span class="pl-c1"&gt;email:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;brewster@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Mailer&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;unique:&lt;/span&gt; [&lt;span class="pl-c1"&gt;period:&lt;/span&gt; &lt;span class="pl-c1"&gt;300&lt;/span&gt;, &lt;span class="pl-c1"&gt;fields:&lt;/span&gt; [&lt;span class="pl-c1"&gt;:queue&lt;/span&gt;, &lt;span class="pl-c1"&gt;:worker&lt;/span&gt;])
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;insert&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Multiple jobs can be inserted in a single transaction:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Multi&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;()
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;insert&lt;/span&gt;(&lt;span class="pl-c1"&gt;:b_job&lt;/span&gt;, &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Business&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(%{&lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;}))
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;insert&lt;/span&gt;(&lt;span class="pl-c1"&gt;:m_job&lt;/span&gt;, &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Mailer&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(%{&lt;span class="pl-c1"&gt;email:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;brewser@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}))
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Repo&lt;/span&gt;.&lt;span class="pl-en"&gt;transaction&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Occasionally you may need to insert a job for a worker that exists in another
application. In that case you can use &lt;code&gt;Oban.Job.new/2&lt;/code&gt; to build the changeset
manually:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;%{&lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;user_id:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;}
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Job&lt;/span&gt;.&lt;span class="pl-en"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;queue:&lt;/span&gt; &lt;span class="pl-c1"&gt;:default&lt;/span&gt;, &lt;span class="pl-c1"&gt;worker:&lt;/span&gt; &lt;span class="pl-en"&gt;OtherApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Worker&lt;/span&gt;)
&lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;insert&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Oban.insert/2,4&lt;/code&gt; is the preferred way of inserting jobs as it provides some of
Oban's advanced features (i.e., unique jobs). However, you can use your
application's &lt;code&gt;Repo.insert/2&lt;/code&gt; function if necessary.&lt;/p&gt;
&lt;p&gt;See &lt;code&gt;Oban.Job.new/2&lt;/code&gt; for a full list of job options.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pruning-historic-jobs" class="anchor" aria-hidden="true" href="#pruning-historic-jobs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pruning Historic Jobs&lt;/h3&gt;
&lt;p&gt;Job stats and queue introspection is built on keeping job rows in the database
after they have completed. This allows administrators to review completed jobs
and build informative aggregates, but at the expense of storage and an unbounded
table size. To prevent the &lt;code&gt;oban_jobs&lt;/code&gt; table from growing indefinitely, Oban
provides active pruning of &lt;code&gt;completed&lt;/code&gt; jobs.&lt;/p&gt;
&lt;p&gt;By default, pruning is disabled. To enable pruning we configure a supervision
tree with the &lt;code&gt;:prune&lt;/code&gt; option. There are three distinct modes of pruning:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:disabled&lt;/code&gt; - This is the default, where no pruning happens at all&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{:maxlen, count}&lt;/code&gt; - Pruning is based on the number of rows in the table, any
rows beyond the configured &lt;code&gt;count&lt;/code&gt; are deleted&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{:maxage, seconds}&lt;/code&gt; - Pruning is based on a row's age, any rows older than
the configured number of &lt;code&gt;seconds&lt;/code&gt; are deleted. The age unit is always
specified in seconds, but values on the scale of days, weeks or months are
perfectly acceptable.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-caveats--guidelines-1" class="anchor" aria-hidden="true" href="#caveats--guidelines-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caveats &amp;amp; Guidelines&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pruning is best-effort and performed out-of-band. This means that all limits
are soft; jobs beyond a specified length or age may not be pruned immediately
after jobs complete. Prune timing is based on the configured &lt;code&gt;prune_interval&lt;/code&gt;,
which is one minute by default.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you're using a row-limited database service, like Heroku's hobby plan with
10M rows, and you have pruning &lt;code&gt;:disabled&lt;/code&gt;, you could hit that row limit
quickly by filling up the &lt;code&gt;oban_beats&lt;/code&gt; table. Instead of fully disabling
pruning, consider setting a far-out limit: &lt;code&gt;{:maxage, 60 * 60 * 24 365}&lt;/code&gt; (1
year). You will get the benefit of retaining completed and discarded jobs for
a year without an unwieldy beats table.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pruning is only applied to jobs that are completed or discarded (has reached
the maximum number of retries or has been manually killed). It'll never delete
a new job, a scheduled job or a job that failed and will be retried.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-unique-jobs" class="anchor" aria-hidden="true" href="#unique-jobs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unique Jobs&lt;/h3&gt;
&lt;p&gt;The unique jobs feature lets you specify constraints to prevent enqueuing
duplicate jobs.  Uniquness is based on a combination of &lt;code&gt;args&lt;/code&gt;, &lt;code&gt;queue&lt;/code&gt;,
&lt;code&gt;worker&lt;/code&gt;, &lt;code&gt;state&lt;/code&gt; and insertion time. It is configured at the worker or job
level using the following options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:period&lt;/code&gt; â€” The number of seconds until a job is no longer considered
duplicate. You should always specify a period.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:fields&lt;/code&gt; â€” The fields to compare when evaluating uniqueness. The available
fields are &lt;code&gt;:args&lt;/code&gt;, &lt;code&gt;:queue&lt;/code&gt; and &lt;code&gt;:worker&lt;/code&gt;, by default all three are used.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:states&lt;/code&gt; â€” The job states that are checked for duplicates. The available
states are &lt;code&gt;:available&lt;/code&gt;, &lt;code&gt;:scheduled&lt;/code&gt;, &lt;code&gt;:executing&lt;/code&gt;, &lt;code&gt;:retryable&lt;/code&gt; and
&lt;code&gt;:completed&lt;/code&gt;. By default all states are checked, which prevents &lt;em&gt;any&lt;/em&gt;
duplicates, even if the previous job has been completed.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example, configure a worker to be unique across all fields and states for 60
seconds:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Worker&lt;/span&gt;, &lt;span class="pl-c1"&gt;unique:&lt;/span&gt; [&lt;span class="pl-c1"&gt;period:&lt;/span&gt; &lt;span class="pl-c1"&gt;60&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configure the worker to be unique only by &lt;code&gt;:worker&lt;/code&gt; and &lt;code&gt;:queue&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Worker&lt;/span&gt;, &lt;span class="pl-c1"&gt;unique:&lt;/span&gt; [&lt;span class="pl-c1"&gt;fields:&lt;/span&gt; [&lt;span class="pl-c1"&gt;:queue&lt;/span&gt;, &lt;span class="pl-c1"&gt;:worker&lt;/span&gt;], &lt;span class="pl-c1"&gt;period:&lt;/span&gt; &lt;span class="pl-c1"&gt;60&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or, configure a worker to be unique until it has executed:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Worker&lt;/span&gt;, &lt;span class="pl-c1"&gt;unique:&lt;/span&gt; [&lt;span class="pl-c1"&gt;period:&lt;/span&gt; &lt;span class="pl-c1"&gt;300&lt;/span&gt;, &lt;span class="pl-c1"&gt;states:&lt;/span&gt; [&lt;span class="pl-c1"&gt;:available&lt;/span&gt;, &lt;span class="pl-c1"&gt;:scheduled&lt;/span&gt;, &lt;span class="pl-c1"&gt;:executing&lt;/span&gt;]]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-strong-guarantees" class="anchor" aria-hidden="true" href="#strong-guarantees"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Strong Guarantees&lt;/h4&gt;
&lt;p&gt;Unique jobs are guaranteed through transactional locks and database queries:
they &lt;em&gt;do not&lt;/em&gt; rely on unique constraints in the database. This makes uniquness
entirely configurable by application code, without the need for database
migrations.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-performance-note" class="anchor" aria-hidden="true" href="#performance-note"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance Note&lt;/h4&gt;
&lt;p&gt;If your application makes heavy use of unique jobs you may want to add an index
on the &lt;code&gt;args&lt;/code&gt; column of the &lt;code&gt;oban_jobs&lt;/code&gt; table. The other columns considered for
uniqueness are already covered by indexes.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-periodic-jobs" class="anchor" aria-hidden="true" href="#periodic-jobs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Periodic Jobs&lt;/h3&gt;
&lt;p&gt;Oban allows jobs to be registered with a cron-like schedule and enqueued
automatically. Periodic jobs are registered as a list of &lt;code&gt;{cron, worker}&lt;/code&gt; or
&lt;code&gt;{cron, worker, options}&lt;/code&gt; tuples:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;config &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-en"&gt;Oban&lt;/span&gt;, &lt;span class="pl-c1"&gt;repo:&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;, &lt;span class="pl-c1"&gt;crontab:&lt;/span&gt; [
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;* * * * *&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;MinuteWorker&lt;/span&gt;},
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0 * * * *&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;HourlyWorker&lt;/span&gt;, &lt;span class="pl-c1"&gt;args:&lt;/span&gt; %{&lt;span class="pl-c1"&gt;custom:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}},
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0 0 * * *&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;DailyWorker&lt;/span&gt;, &lt;span class="pl-c1"&gt;max_attempts:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;},
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0 12 * * MON&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;MondayWorker&lt;/span&gt;, &lt;span class="pl-c1"&gt;queue:&lt;/span&gt; &lt;span class="pl-c1"&gt;:scheduled&lt;/span&gt;}
]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These jobs would be executed as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;MyApp.MinuteWorker&lt;/code&gt; â€” Executed once every minute&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MyApp.HourlyWorker&lt;/code&gt; â€” Executed at the first minute of every hour with custom args&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MyApp.DailyWorker&lt;/code&gt; â€” Executed at midnight every day with no retries&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MyApp.MondayWorker&lt;/code&gt; â€” Executed at noon every Monday in the "scheduled" queue&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The crontab format respects all &lt;a href="https://en.wikipedia.org/wiki/Cron#Overview" rel="nofollow"&gt;standard rules&lt;/a&gt; and has one minute
resolution. Jobs are considered unique for most of each minute, which prevents
duplicate jobs with multiple nodes and across node restarts.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-cron-expressions" class="anchor" aria-hidden="true" href="#cron-expressions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cron Expressions&lt;/h4&gt;
&lt;p&gt;Standard Cron expressions are composed of rules specifying the minutes, hours,
days, months and weekdays. Rules for each field are comprised of literal values,
wildcards, step values or ranges:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;*&lt;/code&gt; â€” Wildcard, matches any value (0, 1, 2, ...)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt; â€” Literal, matches only itself (only 0)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*/15&lt;/code&gt; â€” Step, matches any value that is a multiple (0, 15, 30, 45)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0-5&lt;/code&gt; â€” Range, matches any value within the range (0, 1, 2, 3, 4, 5)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each part may have multiple rules, where rules are separated by a comma. The
allowed values for each field are as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;minute&lt;/code&gt; â€” 0-59&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hour&lt;/code&gt; â€” 0-23&lt;/li&gt;
&lt;li&gt;&lt;code&gt;days&lt;/code&gt; â€” 1-31&lt;/li&gt;
&lt;li&gt;&lt;code&gt;month&lt;/code&gt; â€” 1-12 (or aliases, &lt;code&gt;JAN&lt;/code&gt;, &lt;code&gt;FEB&lt;/code&gt;, &lt;code&gt;MAR&lt;/code&gt;, etc.)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weekdays&lt;/code&gt; â€” 0-6 (or aliases, &lt;code&gt;SUN&lt;/code&gt;, &lt;code&gt;MON&lt;/code&gt;, &lt;code&gt;TUE&lt;/code&gt;, etc.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some specific examples that demonstrate the full range of expressions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0 * * * *&lt;/code&gt; â€” The first minute of every hour&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*/15 9-17 * * *&lt;/code&gt; â€” Every fifteen minutes during standard business hours&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 0 * DEC *&lt;/code&gt; â€” Once a day at midnight during december&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 7-9,4-6 13 * FRI&lt;/code&gt; â€” Once an hour during both rush hours on Friday the 13th&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more in depth information see the man documentation for &lt;code&gt;cron&lt;/code&gt; and &lt;code&gt;crontab&lt;/code&gt;
in your system.  Alternatively you can experiment with various expressions
online at &lt;a href="https://crontab.guru" rel="nofollow"&gt;Crontab Guru&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-caveats--guidelines-2" class="anchor" aria-hidden="true" href="#caveats--guidelines-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caveats &amp;amp; Guidelines&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;All schedules are evaluated as UTC unless a different timezone is configured.
See &lt;code&gt;Oban.start_link/1&lt;/code&gt; for information about configuring a timezone.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Workers can be used for regular and scheduled jobs so long as they accept
different arguments.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Duplicate jobs are prevented through transactional locks and unique
constraints. Workers that are used for regular and scheduled jobs &lt;em&gt;must not&lt;/em&gt;
specify &lt;code&gt;unique&lt;/code&gt; options less than &lt;code&gt;60s&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Long running jobs may execute simultaneously if the scheduling interval is
shorter than it takes to execute the job. You can prevent overlap by passing
custom &lt;code&gt;unique&lt;/code&gt; opts in the crontab config:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;custom_args &lt;span class="pl-k"&gt;=&lt;/span&gt; %{&lt;span class="pl-c1"&gt;scheduled:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;}

unique_opts &lt;span class="pl-k"&gt;=&lt;/span&gt; [
  &lt;span class="pl-c1"&gt;period:&lt;/span&gt; &lt;span class="pl-c1"&gt;60&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;60&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;24&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;states:&lt;/span&gt; [&lt;span class="pl-c1"&gt;:available&lt;/span&gt;, &lt;span class="pl-c1"&gt;:scheduled&lt;/span&gt;, &lt;span class="pl-c1"&gt;:executing&lt;/span&gt;]
]

config &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-en"&gt;Oban&lt;/span&gt;, &lt;span class="pl-c1"&gt;repo:&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;, &lt;span class="pl-c1"&gt;crontab:&lt;/span&gt; [
  {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;* * * * *&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;SlowWorker&lt;/span&gt;, &lt;span class="pl-c1"&gt;args:&lt;/span&gt; custom_args, &lt;span class="pl-c1"&gt;unique:&lt;/span&gt; unique_opts},
]&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h2&gt;
&lt;p&gt;Oban provides some helpers to facilitate testing. The helpers handle the
boilerplate of making assertions on which jobs are enqueued. To use the
&lt;code&gt;assert_enqueued/1&lt;/code&gt; and &lt;code&gt;refute_enqueued/1&lt;/code&gt; helpers in your tests you must
include them in your testing module and specify your app's Ecto repo:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Testing&lt;/span&gt;, &lt;span class="pl-c1"&gt;repo:&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you can assert, refute or list jobs that have been enqueued within your
tests:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;assert_enqueued &lt;span class="pl-c1"&gt;worker:&lt;/span&gt; &lt;span class="pl-en"&gt;MyWorker&lt;/span&gt;, &lt;span class="pl-c1"&gt;args:&lt;/span&gt; %{&lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or&lt;/span&gt;

refute_enqueued &lt;span class="pl-c1"&gt;queue:&lt;/span&gt; &lt;span class="pl-c1"&gt;:special&lt;/span&gt;, &lt;span class="pl-c1"&gt;args:&lt;/span&gt; %{&lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or&lt;/span&gt;

assert [%{&lt;span class="pl-c1"&gt;args:&lt;/span&gt; %{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;}}] &lt;span class="pl-k"&gt;=&lt;/span&gt; all_enqueued &lt;span class="pl-c1"&gt;worker:&lt;/span&gt; &lt;span class="pl-en"&gt;MyWorker&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the &lt;code&gt;Oban.Testing&lt;/code&gt; module for more details.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-caveats--guidelines-3" class="anchor" aria-hidden="true" href="#caveats--guidelines-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caveats &amp;amp; Guidelines&lt;/h4&gt;
&lt;p&gt;As noted in &lt;a href="#Usage"&gt;Usage&lt;/a&gt;, there are some guidelines for running tests:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Disable all job dispatching by setting &lt;code&gt;queues: false&lt;/code&gt; or &lt;code&gt;queues: nil&lt;/code&gt; in
your &lt;code&gt;test.exs&lt;/code&gt; config. Keyword configuration is deep merged, so setting
&lt;code&gt;queues: []&lt;/code&gt; won't have any effect.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Disable pruning via &lt;code&gt;prune: :disabled&lt;/code&gt;. Pruning isn't necessary in testing
mode because jobs created within the sandbox are rolled back at the end of the
test. Additionally, the periodic pruning queries will raise
&lt;code&gt;DBConnection.OwnershipError&lt;/code&gt; when the application boots.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Disable cron jobs via &lt;code&gt;crontab: false&lt;/code&gt;. Periodic jobs aren't useful while
testing and scheduling can lead to random ownership issues.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be sure to use the Ecto Sandbox for testing. Oban makes use of database pubsub
events to dispatch jobs, but pubsub events never fire within a transaction.
Since sandbox tests run within a transaction no events will fire and jobs
won't be dispatched.&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;config &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;, &lt;span class="pl-c1"&gt;pool:&lt;/span&gt; &lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Adapters&lt;/span&gt;.&lt;span class="pl-en"&gt;SQL&lt;/span&gt;.&lt;span class="pl-en"&gt;Sandbox&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-integration-testing" class="anchor" aria-hidden="true" href="#integration-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integration Testing&lt;/h3&gt;
&lt;p&gt;During integration testing it may be necessary to run jobs because they do work
essential for the test to complete, i.e. sending an email, processing media,
etc. You can execute all available jobs in a particular queue by calling
&lt;code&gt;Oban.drain_queue/1&lt;/code&gt; directly from your tests.&lt;/p&gt;
&lt;p&gt;For example, to process all pending jobs in the "mailer" queue while testing
some business logic:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;BusinessTest&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;DataCase&lt;/span&gt;, &lt;span class="pl-c1"&gt;async:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;

  &lt;span class="pl-k"&gt;alias&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.{&lt;span class="pl-en"&gt;Business&lt;/span&gt;, &lt;span class="pl-en"&gt;Worker&lt;/span&gt;}

  test &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;we stay in the business of doing business&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-c1"&gt;:ok&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Business&lt;/span&gt;.&lt;span class="pl-en"&gt;schedule_a_meeting&lt;/span&gt;(%{&lt;span class="pl-c1"&gt;email:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;monty@brewster.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})

    assert %{&lt;span class="pl-c1"&gt;success:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;failure:&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;} &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;drain_queue&lt;/span&gt;(&lt;span class="pl-c1"&gt;:mailer&lt;/span&gt;)

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Now, make an assertion about the email delivery&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;code&gt;Oban.drain_queue/1&lt;/code&gt; for additional details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-error-handling" class="anchor" aria-hidden="true" href="#error-handling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Error Handling&lt;/h2&gt;
&lt;p&gt;When a job returns an error value, raises an error or exits during execution the
details are recorded within the &lt;code&gt;errors&lt;/code&gt; array on the job. When the number of
execution attempts is below the configured &lt;code&gt;max_attempts&lt;/code&gt; limit, the job will
automatically be retried in the future.&lt;/p&gt;
&lt;p&gt;The retry delay has an exponential backoff, meaning the job's second attempt
will be after 16s, third after 31s, fourth after 1m 36s, etc.&lt;/p&gt;
&lt;p&gt;See the &lt;code&gt;Oban.Worker&lt;/code&gt; documentation on "Customizing Backoff" for alternative
backoff strategies.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-error-details" class="anchor" aria-hidden="true" href="#error-details"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Error Details&lt;/h3&gt;
&lt;p&gt;Execution errors are stored as a formatted exception along with metadata about
when the failure ocurred and which attempt caused it. Each error is stored with
the following keys:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;at&lt;/code&gt; The utc timestamp when the error occurred at&lt;/li&gt;
&lt;li&gt;&lt;code&gt;attempt&lt;/code&gt; The attempt number when the error ocurred&lt;/li&gt;
&lt;li&gt;&lt;code&gt;error&lt;/code&gt; A formatted error message and stacktrace&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the &lt;a href="#Instrumentation-and-Logging"&gt;Instrumentation&lt;/a&gt; docs for an example of
integrating with external error reporting systems.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-limiting-retries" class="anchor" aria-hidden="true" href="#limiting-retries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Limiting Retries&lt;/h3&gt;
&lt;p&gt;By default jobs are retried up to 20 times. The number of retries is controlled by the
&lt;code&gt;max_attempts&lt;/code&gt; value, which can be set at the Worker or Job level. For example, to instruct a
worker to discard jobs after three failures:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Worker&lt;/span&gt;, &lt;span class="pl-c1"&gt;queue:&lt;/span&gt; &lt;span class="pl-c1"&gt;:limited&lt;/span&gt;, &lt;span class="pl-c1"&gt;max_attempts:&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-instrumentation-and-logging" class="anchor" aria-hidden="true" href="#instrumentation-and-logging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Instrumentation and Logging&lt;/h2&gt;
&lt;p&gt;Oban provides integration with &lt;a href="https://github.com/beam-telemetry/telemetry"&gt;Telemetry&lt;/a&gt;, a dispatching library for
metrics. It is easy to report Oban metrics to any backend by attaching to
&lt;code&gt;:oban&lt;/code&gt; events.&lt;/p&gt;
&lt;p&gt;Here is an example of a sample unstructured log handler:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;ObanLogger&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-en"&gt;Logger&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;handle_event&lt;/span&gt;([&lt;span class="pl-c1"&gt;:oban&lt;/span&gt;, event], measure, meta, &lt;span class="pl-c1"&gt;nil&lt;/span&gt;) &lt;span class="pl-k"&gt;when&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-en"&gt;Logger&lt;/span&gt;.&lt;span class="pl-en"&gt;warn&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[Oban &lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;event&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;]: &lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;meta.worker&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt; ran in &lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;measure.duration&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Attach the handler to success and failure events in &lt;code&gt;application.ex&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;events &lt;span class="pl-k"&gt;=&lt;/span&gt; [[&lt;span class="pl-c1"&gt;:oban&lt;/span&gt;, &lt;span class="pl-c1"&gt;:success&lt;/span&gt;], [&lt;span class="pl-c1"&gt;:oban&lt;/span&gt;, &lt;span class="pl-c1"&gt;:failure&lt;/span&gt;]]

&lt;span class="pl-c1"&gt;:telemetry&lt;/span&gt;.&lt;span class="pl-en"&gt;attach_many&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;oban-logger&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, events, &lt;span class="pl-smi"&gt;&amp;amp;&lt;/span&gt;&lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;ObanLogger&lt;/span&gt;.&lt;span class="pl-en"&gt;handle_event&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;Oban.Telemetry&lt;/code&gt; module provides a robust structured logger that handles all
of Oban's telemetry events. As in the example above, attach it within your
&lt;code&gt;application.ex&lt;/code&gt; module:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;:ok&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Telemetry&lt;/span&gt;.&lt;span class="pl-en"&gt;attach_default_logger&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more details on the default structured logger and information on event
metadata see docs for the &lt;code&gt;Oban.Telemetry&lt;/code&gt; module.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-reporting-errors" class="anchor" aria-hidden="true" href="#reporting-errors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting Errors&lt;/h3&gt;
&lt;p&gt;Another great use of execution data is error reporting. Here is an example of
integrating with &lt;a href="https://honeybadger.io" rel="nofollow"&gt;Honeybadger&lt;/a&gt; to report job failures:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-en"&gt;ErrorReporter&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;handle_event&lt;/span&gt;([&lt;span class="pl-c1"&gt;:oban&lt;/span&gt;, &lt;span class="pl-c1"&gt;:failure&lt;/span&gt;], measure, meta, &lt;span class="pl-c1"&gt;nil&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    context &lt;span class="pl-k"&gt;=&lt;/span&gt;
      meta
      &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Map&lt;/span&gt;.&lt;span class="pl-en"&gt;take&lt;/span&gt;([&lt;span class="pl-c1"&gt;:id&lt;/span&gt;, &lt;span class="pl-c1"&gt;:args&lt;/span&gt;, &lt;span class="pl-c1"&gt;:queue&lt;/span&gt;, &lt;span class="pl-c1"&gt;:worker&lt;/span&gt;])
      &lt;span class="pl-k"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;Map&lt;/span&gt;.&lt;span class="pl-en"&gt;merge&lt;/span&gt;(measure)

    &lt;span class="pl-en"&gt;Honeybadger&lt;/span&gt;.&lt;span class="pl-en"&gt;notify&lt;/span&gt;(meta.error, context, meta.stack)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-c1"&gt;:telemetry&lt;/span&gt;.&lt;span class="pl-en"&gt;attach&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;oban-errors&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, [&lt;span class="pl-c1"&gt;:oban&lt;/span&gt;, &lt;span class="pl-c1"&gt;:failure&lt;/span&gt;], &lt;span class="pl-smi"&gt;&amp;amp;&lt;/span&gt;&lt;span class="pl-en"&gt;ErrorReporter&lt;/span&gt;.&lt;span class="pl-en"&gt;handle_event&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-isolation" class="anchor" aria-hidden="true" href="#isolation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Isolation&lt;/h2&gt;
&lt;p&gt;Oban supports namespacing through PostgreSQL schemas, also called "prefixes" in
Ecto. With prefixes your jobs table can reside outside of your primary schema
(usually public) and you can have multiple separate job tables.&lt;/p&gt;
&lt;p&gt;To use a prefix you first have to specify it within your migration:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;defmodule&lt;/span&gt; &lt;span class="pl-e"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-e"&gt;Repo&lt;/span&gt;.&lt;span class="pl-e"&gt;Migrations&lt;/span&gt;.&lt;span class="pl-en"&gt;AddPrefixedObanJobsTable&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;use&lt;/span&gt; &lt;span class="pl-en"&gt;Ecto&lt;/span&gt;.&lt;span class="pl-en"&gt;Migration&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;up&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Migrations&lt;/span&gt;.&lt;span class="pl-en"&gt;up&lt;/span&gt;(&lt;span class="pl-c1"&gt;prefix:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;private&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;down&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-en"&gt;Oban&lt;/span&gt;.&lt;span class="pl-en"&gt;Migrations&lt;/span&gt;.&lt;span class="pl-en"&gt;down&lt;/span&gt;(&lt;span class="pl-c1"&gt;prefix:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;private&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The migration will create the "private" schema and all tables, functions and
triggers within that schema. With the database migrated you'll then specify the
prefix in your configuration:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;config &lt;span class="pl-c1"&gt;:my_app&lt;/span&gt;, &lt;span class="pl-en"&gt;Oban&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;prefix:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;private&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;repo:&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Repo&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;queues:&lt;/span&gt; [&lt;span class="pl-c1"&gt;default:&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now all jobs are inserted and executed using the &lt;code&gt;private.oban_jobs&lt;/code&gt; table. Note
that &lt;code&gt;Oban.insert/2,4&lt;/code&gt; will write jobs in the &lt;code&gt;private.oban_jobs&lt;/code&gt; table, you'll
need to specify a prefix manually if you insert jobs directly through a repo.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-supervisor-isolation" class="anchor" aria-hidden="true" href="#supervisor-isolation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supervisor Isolation&lt;/h3&gt;
&lt;p&gt;Not only is the &lt;code&gt;oban_jobs&lt;/code&gt; table isolated within the schema, but all
notification events are also isolated. That means that insert/update events will
only dispatch new jobs for their prefix. You can run multiple Oban instances
with different prefixes on the same system and have them entirely isolated,
provided you give each supervisor a distinct id.&lt;/p&gt;
&lt;p&gt;Here we configure our application to start three Oban supervisors using the
"public", "special" and "private" prefixes, respectively:&lt;/p&gt;
&lt;div class="highlight highlight-source-elixir"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;start&lt;/span&gt;(_type, _args) &lt;span class="pl-k"&gt;do&lt;/span&gt;
  children &lt;span class="pl-k"&gt;=&lt;/span&gt; [
    &lt;span class="pl-en"&gt;Repo&lt;/span&gt;,
    &lt;span class="pl-en"&gt;Endpoint&lt;/span&gt;,
    &lt;span class="pl-en"&gt;Supervisor&lt;/span&gt;.&lt;span class="pl-en"&gt;child_spec&lt;/span&gt;({&lt;span class="pl-en"&gt;Oban&lt;/span&gt;, &lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-en"&gt;ObanA&lt;/span&gt;, &lt;span class="pl-c1"&gt;repo:&lt;/span&gt; &lt;span class="pl-en"&gt;Repo&lt;/span&gt;}, &lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-en"&gt;ObanA&lt;/span&gt;),
    &lt;span class="pl-en"&gt;Supervisor&lt;/span&gt;.&lt;span class="pl-en"&gt;child_spec&lt;/span&gt;({&lt;span class="pl-en"&gt;Oban&lt;/span&gt;, &lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-en"&gt;ObanB&lt;/span&gt;, &lt;span class="pl-c1"&gt;repo:&lt;/span&gt; &lt;span class="pl-en"&gt;Repo&lt;/span&gt;, &lt;span class="pl-c1"&gt;prefix:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;special&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}, &lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-en"&gt;ObanB&lt;/span&gt;),
    &lt;span class="pl-en"&gt;Supervisor&lt;/span&gt;.&lt;span class="pl-en"&gt;child_spec&lt;/span&gt;({&lt;span class="pl-en"&gt;Oban&lt;/span&gt;, &lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-en"&gt;ObanC&lt;/span&gt;, &lt;span class="pl-c1"&gt;repo:&lt;/span&gt; &lt;span class="pl-en"&gt;Repo&lt;/span&gt;, &lt;span class="pl-c1"&gt;prefix:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;private&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}, &lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-en"&gt;ObanC&lt;/span&gt;)
  ]

  &lt;span class="pl-en"&gt;Supervisor&lt;/span&gt;.&lt;span class="pl-en"&gt;start_link&lt;/span&gt;(children, &lt;span class="pl-c1"&gt;strategy:&lt;/span&gt; &lt;span class="pl-c1"&gt;:one_for_one&lt;/span&gt;, &lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-en"&gt;MyApp&lt;/span&gt;.&lt;span class="pl-en"&gt;Supervisor&lt;/span&gt;)
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-pulse-tracking" class="anchor" aria-hidden="true" href="#pulse-tracking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pulse Tracking&lt;/h2&gt;
&lt;p&gt;Historic introspection is a defining feature of Oban. In addition to retaining
completed jobs Oban also generates "heartbeat" records every second for each
running queue.&lt;/p&gt;
&lt;p&gt;Heartbeat records are recorded in the &lt;code&gt;oban_beats&lt;/code&gt; table and pruned to an hour
of backlog. The recorded information is used for a couple of purposes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;To track active jobs. When a job executes it records the node and queue that
ran it in the &lt;code&gt;attempted_by&lt;/code&gt; column. Zombie jobs (jobs that were left
executing when a producer crashes or the node is shut down) are found by
comparing the &lt;code&gt;attempted_by&lt;/code&gt; values with recent heartbeat records and
resurrected accordingly.&lt;/li&gt;
&lt;li&gt;Each heartbeat records information about a node/queue pair such as whether it
is paused, what the execution limit is and exactly which jobs are running.
These records can power additional logging or metrics (and are the backbone
of the Oban UI).&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-querying-the-jobs-table" class="anchor" aria-hidden="true" href="#querying-the-jobs-table"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Querying the Jobs Table&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Oban.Job&lt;/code&gt; defines an Ecto schema and the jobs table can therefore be queried as usual, e.g.:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;MyApp.Repo.all(
  from j in Oban.Job,
    where: j.worker == "MyApp.Business",
    where: j.state == "discarded"
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-heroku" class="anchor" aria-hidden="true" href="#heroku"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Heroku&lt;/h3&gt;
&lt;p&gt;If your app crashes on launch, be sure to confirm you are running the correct
version of Elixir and Erlang (&lt;a href="#Requirements"&gt;view requirements&lt;/a&gt;). If using the
&lt;em&gt;hashnuke/elixir&lt;/em&gt; buildpack, you can update the &lt;code&gt;elixir_buildpack.config&lt;/code&gt; file
in your application's root directory to something like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Elixir version
elixir_version=1.9.0

# Erlang version
erlang_version=22.0.3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Available Erlang versions are available &lt;a href="https://github.com/HashNuke/heroku-buildpack-elixir-otp-builds/blob/master/otp-versions"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;To run the Oban test suite you must have PostgreSQL 10+ running locally with a
database named &lt;code&gt;oban_test&lt;/code&gt;. Follow these steps to create the database, create
the database and run all migrations:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mix test.setup&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To ensure a commit passes CI you should run &lt;code&gt;mix ci&lt;/code&gt; locally, which executes the
following commands:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Check formatting (&lt;code&gt;mix format --check-formatted&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Lint with Credo (&lt;code&gt;mix credo --strict&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Run all tests (&lt;code&gt;mix test --raise&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Run Dialyzer (&lt;code&gt;mix dialyzer --halt-exit-status&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>sorentwo</author><guid isPermaLink="false">https://github.com/sorentwo/oban</guid><pubDate>Wed, 08 Jan 2020 00:04:00 GMT</pubDate></item></channel></rss>