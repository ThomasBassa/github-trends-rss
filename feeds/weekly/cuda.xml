<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Cuda, This week</title><link>https://github.com/trending/cuda?since=weekly</link><description>The top repositories on GitHub for cuda, measured weekly</description><pubDate>Thu, 28 Nov 2019 01:06:34 GMT</pubDate><lastBuildDate>Thu, 28 Nov 2019 01:06:34 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>NVIDIA/cutlass #1 in Cuda, This week</title><link>https://github.com/NVIDIA/cutlass</link><description>&lt;p&gt;&lt;i&gt;CUDA Templates for Linear Algebra Subroutines&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/media/images/gemm-hierarchy-with-epilogue-no-labels.png"&gt;&lt;img src="/media/images/gemm-hierarchy-with-epilogue-no-labels.png" alt="ALT" title="Complete CUDA GEMM decomposition" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-cutlass-20" class="anchor" aria-hidden="true" href="#cutlass-20"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CUTLASS 2.0&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;CUTLASS 2.0 - November 2019&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;CUTLASS is a collection of CUDA C++ template abstractions for implementing
high-performance matrix-multiplication (GEMM) at all levels and scales within CUDA.
It incorporates strategies for hierarchical decomposition and data movement similar
to those used to implement cuBLAS.  CUTLASS decomposes these "moving parts" into
reusable, modular software components abstracted by C++ template classes.  These
thread-wide, warp-wide, block-wide, and device-wide primitives can be specialized
and tuned via custom tiling sizes, data types, and other algorithmic policy. The
resulting flexibility simplifies their use as building blocks within custom kernels
and applications.&lt;/p&gt;
&lt;p&gt;To support a wide variety of applications, CUTLASS provides extensive support for
mixed-precision computations, providing specialized data-movement and
multiply-accumulate abstractions for half-precision floating
point (FP16), single-precision floating point (FP32), double-precision floating
point (FP64) types, integer data types (4b and 8b), and binary data types (1b).
Furthermore, CUTLASS demonstrates warp-synchronous matrix multiply operations for
targeting the  programmable, high-throughput &lt;em&gt;Tensor Cores&lt;/em&gt; implemented by
NVIDIA's Volta and Turing architectures.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="/media/docs/quickstart.md"&gt;Quick Start Guide&lt;/a&gt; to get started quickly.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-whats-new-in-cutlass-20" class="anchor" aria-hidden="true" href="#whats-new-in-cutlass-20"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What's New in CUTLASS 2.0&lt;/h1&gt;
&lt;p&gt;CUTLASS 2.0 is a substantial refactoring from the previous version, intended to offer:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Better performance over 1.x, particularly for kernels targeting Turing Tensor Cores&lt;/li&gt;
&lt;li&gt;Robust and durable templates that reliably span the design space&lt;/li&gt;
&lt;li&gt;Encapsulated functionality that may be reusable in other contexts&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the &lt;a href="CHANGELOG.md"&gt;CHANGELOG&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="media/docs/functionality.md"&gt;functionality listing&lt;/a&gt; for the list of operations
supported at each level of the execution model hierarchy.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance&lt;/h1&gt;
&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/media/images/cutlass-performance-plot.png"&gt;&lt;img src="/media/images/cutlass-performance-plot.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CUTLASS primitives are very efficient.  When used to construct device-wide GEMM kernels,
they exhibit performance comparable to cuBLAS for scalar GEMM
computations. The above figure shows CUTLASS performance relative to cuBLAS
for large matrix dimensions on an NVIDIA GeForce 2080 Ti and an NVIDIA TitanV
using CUDA 10.2. Tensor Core operations are implemented using CUDA's
&lt;a href="https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-instructions-mma" rel="nofollow"&gt;mma instruction&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-compatibility" class="anchor" aria-hidden="true" href="#compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compatibility&lt;/h1&gt;
&lt;p&gt;CUTLASS requires a C++11 host compiler and
performs best when built with the &lt;a href="https://developer.nvidia.com/cuda-toolkit" rel="nofollow"&gt;CUDA 10.2 Toolkit&lt;/a&gt;.
It is compatible with CUDA 9.2, CUDA 10.0, and CUDA 10.1.&lt;/p&gt;
&lt;p&gt;We have tested the following environments.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Operating System&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Compiler&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Windows 10&lt;/td&gt;
&lt;td&gt;Microsoft Visual Studio 2015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Microsoft Visual Studio 2017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ubuntu 16.04&lt;/td&gt;
&lt;td&gt;GCC 5.4.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ubuntu 18.04&lt;/td&gt;
&lt;td&gt;GCC 7.3.0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Additionally, CUTLASS may be built with clang.
See &lt;a href="media/docs/quickstart.md#clang"&gt;these instructions&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;CUTLASS runs successfully on the following NVIDIA GPUs, and it is expected to be efficient on
any Maxwell-, Pascal-, Volta-, or Turing- architecture NVIDIA GPU.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;GPU&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Minimum CUDA Toolkit&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;CUDA Toolkit Enabling Native Tensor Cores&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;NVIDIA GeForce 1080&lt;/td&gt;
&lt;td&gt;9.2&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NVIDIA TitanXP&lt;/td&gt;
&lt;td&gt;9.2&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NVIDIA Tesla P100&lt;/td&gt;
&lt;td&gt;9.2&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NVIDIA Tesla V100&lt;/td&gt;
&lt;td&gt;9.2&lt;/td&gt;
&lt;td&gt;10.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NVIDIA TitanV&lt;/td&gt;
&lt;td&gt;9.2&lt;/td&gt;
&lt;td&gt;10.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NVIDIA GeForce RTX 2080 TI, 2080, 2070&lt;/td&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;10.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NVIDIA Tesla T4&lt;/td&gt;
&lt;td&gt;10.0&lt;/td&gt;
&lt;td&gt;10.2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h1&gt;
&lt;p&gt;CUTLASS 2.0 is described in the following documents and the accompanying
&lt;a href="https://nvidia.github.io/cutlass" rel="nofollow"&gt;Doxygen documentation&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="/media/docs/quickstart.md"&gt;Quick Start Guide&lt;/a&gt; - build and run CUTLASS&lt;/li&gt;
&lt;li&gt;&lt;a href="/media/docs/functionality.md"&gt;Functionality&lt;/a&gt; - summarizes functionality available in CUTLASS&lt;/li&gt;
&lt;li&gt;&lt;a href="media/docs/efficient_gemm.md"&gt;Efficient GEMM in CUDA&lt;/a&gt; - describes how GEMM kernels may be implemented efficiently in CUDA&lt;/li&gt;
&lt;li&gt;&lt;a href="media/docs/gemm_api.md"&gt;GEMM API&lt;/a&gt; - describes the CUTLASS GEMM model and C++ template concepts&lt;/li&gt;
&lt;li&gt;&lt;a href="media/docs/code_organization.md"&gt;Code Organization&lt;/a&gt; - describes the organization and contents of the CUTLASS project&lt;/li&gt;
&lt;li&gt;&lt;a href="media/docs/terminology.md"&gt;Terminology&lt;/a&gt; - describes terms used in the code&lt;/li&gt;
&lt;li&gt;&lt;a href="media/docs/programming_guidelines.md"&gt;Programming Guidelines&lt;/a&gt; - guidelines for writing efficient modern CUDA C++&lt;/li&gt;
&lt;li&gt;&lt;a href="media/docs/fundamental_types.md"&gt;Fundamental types&lt;/a&gt; - describes basic C++ classes used in CUTLASS to represent numeric quantities and arrays&lt;/li&gt;
&lt;li&gt;&lt;a href="media/docs/layout.md"&gt;Layouts&lt;/a&gt; - describes layouts of matrices and tensors in memory&lt;/li&gt;
&lt;li&gt;&lt;a href="media/docs/tile_iterator_concept.md"&gt;Tile Iterators&lt;/a&gt; - describes C++ concepts for iterating over tiles of matrices in memory&lt;/li&gt;
&lt;li&gt;&lt;a href="media/docs/profiler.md"&gt;CUTLASS Profiler&lt;/a&gt; - command-line driven profiling application&lt;/li&gt;
&lt;li&gt;&lt;a href="media/docs/utilities.md"&gt;CUTLASS Utilities&lt;/a&gt; - additional templates used to facilate rapid development&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We have also described the structure of an efficient GEMM in our talk at the
&lt;a href="http://on-demand.gputechconf.com/gtc/2018/presentation/s8854-cutlass-software-primitives-for-dense-linear-algebra-at-all-levels-and-scales-within-cuda.pdf" rel="nofollow"&gt;GPU Technology Conference 2018&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-building-cutlass" class="anchor" aria-hidden="true" href="#building-cutlass"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building CUTLASS&lt;/h1&gt;
&lt;p&gt;CUTLASS is a header-only template library and does not need to be built to be used by other
projects. Client applications should target CUTLASS's &lt;code&gt;include/&lt;/code&gt; directory in their include
paths.&lt;/p&gt;
&lt;p&gt;CUTLASS unit tests, examples, and utilities can be build with CMake starting version 3.12.
Make sure the &lt;code&gt;CUDACXX&lt;/code&gt; environment  variable points to NVCC in the CUDA Toolkit installed
on your system.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ export CUDACXX=${CUDA_INSTALL_PATH}/bin/nvcc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Create a build directory within the CUTLASS project, then run CMake. By default CUTLASS will build kernels
for CUDA architecture versions 5.0, 6.0, 6.1, 7.0 and 7.5. To reduce compile time you can specify
the architectures to build CUTLASS for by changing the CMake configuration setting
&lt;code&gt;CUTLASS_NVCC_ARCHS&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mkdir build &amp;amp;&amp;amp; cd build

$ cmake .. -DCUTLASS_NVCC_ARCHS=75               # compiles for NVIDIA's Turing GPU architecture
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;From the &lt;code&gt;build/&lt;/code&gt; directory, compile and run the CUTLASS unit tests by building the target &lt;code&gt;test_unit&lt;/code&gt; with make.&lt;/p&gt;
&lt;p&gt;The unit tests are organized as several binaries mirroring the top-level namespaces of CUTLASS,
and they may be executed in parallel via make's &lt;code&gt;-j&lt;/code&gt; command line argument.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make test_unit -j
...
...
...
[----------] Global test environment tear-down
[==========] 946 tests from 57 test cases ran. (10812 ms total)
[  PASSED  ] 946 tests.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;All tests should pass on supported platforms, though the exact number of tests may vary over time.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-project-structure" class="anchor" aria-hidden="true" href="#project-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Structure&lt;/h1&gt;
&lt;p&gt;CUTLASS is arranged as a header-only library along with Utilities, Tools, Examples, and unit tests.
&lt;a href="https://nvidia.github.io/cutlass" rel="nofollow"&gt;Doxygen documentation&lt;/a&gt; provides a complete list of files, classes,
and template concepts defined in the CUTLASS project.&lt;/p&gt;
&lt;p&gt;A detailed explanation of the source code organization may be found in the
&lt;a href="media/docs/code_organization.md"&gt;CUTLASS documentation&lt;/a&gt;, but several main components are summarized below.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-cutlass-template-library" class="anchor" aria-hidden="true" href="#cutlass-template-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CUTLASS Template Library&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;include/                     # client applications should target this directory in their build's include paths

  cutlass/                   # CUDA Templates for Linear Algebra Subroutines and Solvers - headers only

    arch/                    # direct exposure of architecture features (including instruction-level GEMMs)

    gemm/                    # code specialized for general matrix product computations

    layout/                  # layout definitions for matrices, tensors, and other mathematical objects in memory

    platform/                # CUDA-capable Standard Library components

    reduction/               # bandwidth-limited reduction kernels that do not fit the "gemm" model
    
    transform/               # code specialized for layout, type, and domain transformations

    *                        # core vocabulary types, containers, and basic numeric operations
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-cutlass-sdk-examples" class="anchor" aria-hidden="true" href="#cutlass-sdk-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CUTLASS SDK Examples&lt;/h3&gt;
&lt;p&gt;CUTLASS SDK examples apply CUTLASS templates to implement basic computations.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;examples/
  00_basic_gemm/             # launches a basic GEMM with single precision inputs and outputs

  01_cutlass_utilities/      # demonstrates CUTLASS Utilities for allocating and initializing tensors
  
  02_dump_reg_smem/          # debugging utilities for printing register and shared memory contents
  
  03_visualize_layout/       # utility for visualizing all layout functions in CUTLASS

  04_tile_iterator/          # example demonstrating an iterator over tiles in memory

  05_batched_gemm/           # example demonstrating CUTLASS's batched strided GEMM operation

  06_splitK_gemm/            # exmaple demonstrating CUTLASS's Split-K parallel reduction kernel

  07_volta_tensorop_gemm/    # example demonstrating mixed precision GEMM using Volta Tensor Cores

  08_turing_tensorop_gemm/   # example demonstrating integer GEMM using Turing Tensor Cores
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-tools" class="anchor" aria-hidden="true" href="#tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tools&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;tools/
  library/                   # CUTLASS Instance Library - contains instantiations of all supported CUTLASS templates

  profiler/                  # CUTLASS Profiler         - command-line utility for executing operations in the
                             #                            CUTLASS Library
  
  util/                      # CUTLASS Utilities        - contains numerous helper classes for
    include/                 #                            manging tensors in device memory, reference
      cutlass/               #                            implementations for GEMM, random initialization
        util/                #                            of tensors, and I/O.
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-test" class="anchor" aria-hidden="true" href="#test"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Test&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;test/unit/&lt;/code&gt; directory consist of unit tests implemented with Google Test that demonstrate
basic usage of Core API components and complete tests of the CUTLASS GEMM computations.&lt;/p&gt;
&lt;p&gt;Instructions for building and running the Unit tests are described in the &lt;a href="media/docs/quickstart.md"&gt;Quickstart guide&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-performance-profiling" class="anchor" aria-hidden="true" href="#performance-profiling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance Profiling&lt;/h1&gt;
&lt;p&gt;The &lt;code&gt;tools/profiler/&lt;/code&gt; directory contains a command-line utility for launching each of the GEMM kernels.
It can be built as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make cutlass_profiler -j
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To limit compilation time, only one tile size is instantiated for each data type, math instruction, and layout.
To instantiate all, set the following environment variable when running CMake from an empty &lt;code&gt;build/&lt;/code&gt; directory.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cmake .. -DCUTLASS_NVCC_ARCHS=75 -DCUTLASS_LIBRARY_KERNELS=all
...
$ make cutlass_profiler -j
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Example command line for profiling SGEMM kernels is as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./tools/profiler/cutlass_profiler --kernels=sgemm --m=4352 --n=4096 --k=4096

=============================
  Problem ID: 1

    Provider: CUTLASS
   Operation: cutlass_simt_sgemm_128x128_nn

 Disposition: Passed
      Status: Success

   Arguments:  --m=4352 --n=4096 --k=4096 --A=f32:column --B=f32:column --C=f32:column --alpha=1 --beta=0  \
               --split_k_slices=1 --batch_count=1 --op_class=simt --accum=f32 --cta_m=128 --cta_n=128 --cta_k=8  \
               --stages=2 --warps_m=2 --warps_n=2 --warps_k=1 --inst_m=1 --inst_n=1 --inst_k=1 --min_cc=50  \
               --max_cc=1024

       Bytes: 52428800  bytes
       FLOPs: 146064539648  flops

     Runtime: 10.5424  ms
      Memory: 4.63158 GiB/s

        Math: 13854.9 GFLOP/s
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="media/docs/profiler.md"&gt;Further details about the CUTLASS Profiler are described here.&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h1&gt;
&lt;p&gt;CUTLASS is released by NVIDIA Corporation as Open Source software under the
&lt;a href="LICENSE.txt"&gt;3-clause "New" BSD license&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h1&gt;
&lt;p&gt;The official list of CUTLASS developers and contributors is available here: &lt;a href="CONTRIBUTORS.md"&gt;CONTRIBUTORS&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-copyright" class="anchor" aria-hidden="true" href="#copyright"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright&lt;/h1&gt;
&lt;p&gt;Copyright (c) 2017-2019, NVIDIA CORPORATION.  All rights reserved.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  Redistribution and use in source and binary forms, with or without modification, are permitted
  provided that the following conditions are met:
      * Redistributions of source code must retain the above copyright notice, this list of
        conditions and the following disclaimer.
      * Redistributions in binary form must reproduce the above copyright notice, this list of
        conditions and the following disclaimer in the documentation and/or other materials
        provided with the distribution.
      * Neither the name of the NVIDIA CORPORATION nor the names of its contributors may be used
        to endorse or promote products derived from this software without specific prior written
        permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
  FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL NVIDIA CORPORATION BE LIABLE
  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  STRICT LIABILITY, OR TOR (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>NVIDIA</author><guid isPermaLink="false">https://github.com/NVIDIA/cutlass</guid><pubDate>Thu, 28 Nov 2019 00:01:00 GMT</pubDate></item><item><title>leoxiaobin/deep-high-resolution-net.pytorch #2 in Cuda, This week</title><link>https://github.com/leoxiaobin/deep-high-resolution-net.pytorch</link><description>&lt;p&gt;&lt;i&gt;The project is an official implementation of our CVPR2019 paper "Deep High-Resolution Representation Learning for Human Pose Estimation"&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-deep-high-resolution-representation-learning-for-human-pose-estimation-cvpr-2019" class="anchor" aria-hidden="true" href="#deep-high-resolution-representation-learning-for-human-pose-estimation-cvpr-2019"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deep High-Resolution Representation Learning for Human Pose Estimation (CVPR 2019)&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-news" class="anchor" aria-hidden="true" href="#news"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;News&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Visualization code for showing the pose estimation results. Thanks Depu!&lt;/li&gt;
&lt;li&gt;If you are interested in internship or research positions related to computer vision in ByteDance AI Lab, feel free to contact me(leoxiaobin-at-gmail.com).&lt;/li&gt;
&lt;li&gt;[2019/08/27] HigherHRNet is now on &lt;a href="https://arxiv.org/abs/1908.10357" rel="nofollow"&gt;ArXiv&lt;/a&gt;, which is a bottom-up approach for human pose estimation powerd by HRNet. We will also release code and models at &lt;a href="https://github.com/HRNet/Higher-HRNet-Human-Pose-Estimation"&gt;Higher-HRNet-Human-Pose-Estimation&lt;/a&gt;, stay tuned!&lt;/li&gt;
&lt;li&gt;Our new work &lt;a href="https://arxiv.org/abs/1904.04514" rel="nofollow"&gt;High-Resolution Representations for Labeling Pixels and Regions&lt;/a&gt; is available at &lt;a href="https://github.com/HRNet"&gt;HRNet&lt;/a&gt;. Our HRNet has been applied to a wide range of vision tasks, such as &lt;a href="https://github.com/HRNet/HRNet-Image-Classification"&gt;image classification&lt;/a&gt;, &lt;a href="https://github.com/HRNet/HRNet-Object-Detection"&gt;objection detection&lt;/a&gt;, &lt;a href="https://github.com/HRNet/HRNet-Semantic-Segmentation"&gt;semantic segmentation&lt;/a&gt; and &lt;a href="https://github.com/HRNet/HRNet-Facial-Landmark-Detection"&gt;facial landmark&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;This is an official pytorch implementation of &lt;a href="https://arxiv.org/abs/1902.09212" rel="nofollow"&gt;&lt;em&gt;Deep High-Resolution Representation Learning for Human Pose Estimation&lt;/em&gt;&lt;/a&gt;.
In this work, we are interested in the human pose estimation problem with a focus on learning reliable high-resolution representations. Most existing methods &lt;strong&gt;recover high-resolution representations from low-resolution representations&lt;/strong&gt; produced by a high-to-low resolution network. Instead, our proposed network &lt;strong&gt;maintains high-resolution representations&lt;/strong&gt; through the whole process.
We start from a high-resolution subnetwork as the first stage, gradually add high-to-low resolution subnetworks one by one to form more stages, and connect the mutli-resolution subnetworks &lt;strong&gt;in parallel&lt;/strong&gt;. We conduct &lt;strong&gt;repeated multi-scale fusions&lt;/strong&gt; such that each of the high-to-low resolution representations receives information from other parallel representations over and over, leading to rich high-resolution representations. As a result, the predicted keypoint heatmap is potentially more accurate and spatially more precise. We empirically demonstrate the effectiveness of our network through the superior pose estimation results over two benchmark datasets: the COCO keypoint detection dataset and the MPII Human Pose dataset. &lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/figures/hrnet.png"&gt;&lt;img src="/figures/hrnet.png" alt="Illustrating the architecture of the proposed HRNet" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-main-results" class="anchor" aria-hidden="true" href="#main-results"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Main Results&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-results-on-mpii-val" class="anchor" aria-hidden="true" href="#results-on-mpii-val"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Results on MPII val&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Arch&lt;/th&gt;
&lt;th&gt;Head&lt;/th&gt;
&lt;th&gt;Shoulder&lt;/th&gt;
&lt;th&gt;Elbow&lt;/th&gt;
&lt;th&gt;Wrist&lt;/th&gt;
&lt;th&gt;Hip&lt;/th&gt;
&lt;th&gt;Knee&lt;/th&gt;
&lt;th&gt;Ankle&lt;/th&gt;
&lt;th&gt;Mean&lt;/th&gt;
&lt;th&gt;Mean@0.1&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;pose_resnet_50&lt;/td&gt;
&lt;td&gt;96.4&lt;/td&gt;
&lt;td&gt;95.3&lt;/td&gt;
&lt;td&gt;89.0&lt;/td&gt;
&lt;td&gt;83.2&lt;/td&gt;
&lt;td&gt;88.4&lt;/td&gt;
&lt;td&gt;84.0&lt;/td&gt;
&lt;td&gt;79.6&lt;/td&gt;
&lt;td&gt;88.5&lt;/td&gt;
&lt;td&gt;34.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pose_resnet_101&lt;/td&gt;
&lt;td&gt;96.9&lt;/td&gt;
&lt;td&gt;95.9&lt;/td&gt;
&lt;td&gt;89.5&lt;/td&gt;
&lt;td&gt;84.4&lt;/td&gt;
&lt;td&gt;88.4&lt;/td&gt;
&lt;td&gt;84.5&lt;/td&gt;
&lt;td&gt;80.7&lt;/td&gt;
&lt;td&gt;89.1&lt;/td&gt;
&lt;td&gt;34.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pose_resnet_152&lt;/td&gt;
&lt;td&gt;97.0&lt;/td&gt;
&lt;td&gt;95.9&lt;/td&gt;
&lt;td&gt;90.0&lt;/td&gt;
&lt;td&gt;85.0&lt;/td&gt;
&lt;td&gt;89.2&lt;/td&gt;
&lt;td&gt;85.3&lt;/td&gt;
&lt;td&gt;81.3&lt;/td&gt;
&lt;td&gt;89.6&lt;/td&gt;
&lt;td&gt;35.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;pose_hrnet_w32&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;97.1&lt;/td&gt;
&lt;td&gt;95.9&lt;/td&gt;
&lt;td&gt;90.3&lt;/td&gt;
&lt;td&gt;86.4&lt;/td&gt;
&lt;td&gt;89.1&lt;/td&gt;
&lt;td&gt;87.1&lt;/td&gt;
&lt;td&gt;83.3&lt;/td&gt;
&lt;td&gt;90.3&lt;/td&gt;
&lt;td&gt;37.7&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-note" class="anchor" aria-hidden="true" href="#note"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Note:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Flip test is used.&lt;/li&gt;
&lt;li&gt;Input size is 256x256&lt;/li&gt;
&lt;li&gt;pose_resnet_[50,101,152] is our previous work of &lt;a href="http://openaccess.thecvf.com/content_ECCV_2018/html/Bin_Xiao_Simple_Baselines_for_ECCV_2018_paper.html" rel="nofollow"&gt;&lt;em&gt;Simple Baselines for Human Pose Estimation and Tracking&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-results-on-coco-val2017-with-detector-having-human-ap-of-564-on-coco-val2017-dataset" class="anchor" aria-hidden="true" href="#results-on-coco-val2017-with-detector-having-human-ap-of-564-on-coco-val2017-dataset"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Results on COCO val2017 with detector having human AP of 56.4 on COCO val2017 dataset&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Arch&lt;/th&gt;
&lt;th&gt;Input size&lt;/th&gt;
&lt;th&gt;#Params&lt;/th&gt;
&lt;th&gt;GFLOPs&lt;/th&gt;
&lt;th&gt;AP&lt;/th&gt;
&lt;th&gt;Ap .5&lt;/th&gt;
&lt;th&gt;AP .75&lt;/th&gt;
&lt;th&gt;AP (M)&lt;/th&gt;
&lt;th&gt;AP (L)&lt;/th&gt;
&lt;th&gt;AR&lt;/th&gt;
&lt;th&gt;AR .5&lt;/th&gt;
&lt;th&gt;AR .75&lt;/th&gt;
&lt;th&gt;AR (M)&lt;/th&gt;
&lt;th&gt;AR (L)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;pose_resnet_50&lt;/td&gt;
&lt;td&gt;256x192&lt;/td&gt;
&lt;td&gt;34.0M&lt;/td&gt;
&lt;td&gt;8.9&lt;/td&gt;
&lt;td&gt;0.704&lt;/td&gt;
&lt;td&gt;0.886&lt;/td&gt;
&lt;td&gt;0.783&lt;/td&gt;
&lt;td&gt;0.671&lt;/td&gt;
&lt;td&gt;0.772&lt;/td&gt;
&lt;td&gt;0.763&lt;/td&gt;
&lt;td&gt;0.929&lt;/td&gt;
&lt;td&gt;0.834&lt;/td&gt;
&lt;td&gt;0.721&lt;/td&gt;
&lt;td&gt;0.824&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pose_resnet_50&lt;/td&gt;
&lt;td&gt;384x288&lt;/td&gt;
&lt;td&gt;34.0M&lt;/td&gt;
&lt;td&gt;20.0&lt;/td&gt;
&lt;td&gt;0.722&lt;/td&gt;
&lt;td&gt;0.893&lt;/td&gt;
&lt;td&gt;0.789&lt;/td&gt;
&lt;td&gt;0.681&lt;/td&gt;
&lt;td&gt;0.797&lt;/td&gt;
&lt;td&gt;0.776&lt;/td&gt;
&lt;td&gt;0.932&lt;/td&gt;
&lt;td&gt;0.838&lt;/td&gt;
&lt;td&gt;0.728&lt;/td&gt;
&lt;td&gt;0.846&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pose_resnet_101&lt;/td&gt;
&lt;td&gt;256x192&lt;/td&gt;
&lt;td&gt;53.0M&lt;/td&gt;
&lt;td&gt;12.4&lt;/td&gt;
&lt;td&gt;0.714&lt;/td&gt;
&lt;td&gt;0.893&lt;/td&gt;
&lt;td&gt;0.793&lt;/td&gt;
&lt;td&gt;0.681&lt;/td&gt;
&lt;td&gt;0.781&lt;/td&gt;
&lt;td&gt;0.771&lt;/td&gt;
&lt;td&gt;0.934&lt;/td&gt;
&lt;td&gt;0.840&lt;/td&gt;
&lt;td&gt;0.730&lt;/td&gt;
&lt;td&gt;0.832&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pose_resnet_101&lt;/td&gt;
&lt;td&gt;384x288&lt;/td&gt;
&lt;td&gt;53.0M&lt;/td&gt;
&lt;td&gt;27.9&lt;/td&gt;
&lt;td&gt;0.736&lt;/td&gt;
&lt;td&gt;0.896&lt;/td&gt;
&lt;td&gt;0.803&lt;/td&gt;
&lt;td&gt;0.699&lt;/td&gt;
&lt;td&gt;0.811&lt;/td&gt;
&lt;td&gt;0.791&lt;/td&gt;
&lt;td&gt;0.936&lt;/td&gt;
&lt;td&gt;0.851&lt;/td&gt;
&lt;td&gt;0.745&lt;/td&gt;
&lt;td&gt;0.858&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pose_resnet_152&lt;/td&gt;
&lt;td&gt;256x192&lt;/td&gt;
&lt;td&gt;68.6M&lt;/td&gt;
&lt;td&gt;15.7&lt;/td&gt;
&lt;td&gt;0.720&lt;/td&gt;
&lt;td&gt;0.893&lt;/td&gt;
&lt;td&gt;0.798&lt;/td&gt;
&lt;td&gt;0.687&lt;/td&gt;
&lt;td&gt;0.789&lt;/td&gt;
&lt;td&gt;0.778&lt;/td&gt;
&lt;td&gt;0.934&lt;/td&gt;
&lt;td&gt;0.846&lt;/td&gt;
&lt;td&gt;0.736&lt;/td&gt;
&lt;td&gt;0.839&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pose_resnet_152&lt;/td&gt;
&lt;td&gt;384x288&lt;/td&gt;
&lt;td&gt;68.6M&lt;/td&gt;
&lt;td&gt;35.3&lt;/td&gt;
&lt;td&gt;0.743&lt;/td&gt;
&lt;td&gt;0.896&lt;/td&gt;
&lt;td&gt;0.811&lt;/td&gt;
&lt;td&gt;0.705&lt;/td&gt;
&lt;td&gt;0.816&lt;/td&gt;
&lt;td&gt;0.797&lt;/td&gt;
&lt;td&gt;0.937&lt;/td&gt;
&lt;td&gt;0.858&lt;/td&gt;
&lt;td&gt;0.751&lt;/td&gt;
&lt;td&gt;0.863&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;pose_hrnet_w32&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;256x192&lt;/td&gt;
&lt;td&gt;28.5M&lt;/td&gt;
&lt;td&gt;7.1&lt;/td&gt;
&lt;td&gt;0.744&lt;/td&gt;
&lt;td&gt;0.905&lt;/td&gt;
&lt;td&gt;0.819&lt;/td&gt;
&lt;td&gt;0.708&lt;/td&gt;
&lt;td&gt;0.810&lt;/td&gt;
&lt;td&gt;0.798&lt;/td&gt;
&lt;td&gt;0.942&lt;/td&gt;
&lt;td&gt;0.865&lt;/td&gt;
&lt;td&gt;0.757&lt;/td&gt;
&lt;td&gt;0.858&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;pose_hrnet_w32&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;384x288&lt;/td&gt;
&lt;td&gt;28.5M&lt;/td&gt;
&lt;td&gt;16.0&lt;/td&gt;
&lt;td&gt;0.758&lt;/td&gt;
&lt;td&gt;0.906&lt;/td&gt;
&lt;td&gt;0.825&lt;/td&gt;
&lt;td&gt;0.720&lt;/td&gt;
&lt;td&gt;0.827&lt;/td&gt;
&lt;td&gt;0.809&lt;/td&gt;
&lt;td&gt;0.943&lt;/td&gt;
&lt;td&gt;0.869&lt;/td&gt;
&lt;td&gt;0.767&lt;/td&gt;
&lt;td&gt;0.871&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;pose_hrnet_w48&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;256x192&lt;/td&gt;
&lt;td&gt;63.6M&lt;/td&gt;
&lt;td&gt;14.6&lt;/td&gt;
&lt;td&gt;0.751&lt;/td&gt;
&lt;td&gt;0.906&lt;/td&gt;
&lt;td&gt;0.822&lt;/td&gt;
&lt;td&gt;0.715&lt;/td&gt;
&lt;td&gt;0.818&lt;/td&gt;
&lt;td&gt;0.804&lt;/td&gt;
&lt;td&gt;0.943&lt;/td&gt;
&lt;td&gt;0.867&lt;/td&gt;
&lt;td&gt;0.762&lt;/td&gt;
&lt;td&gt;0.864&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;pose_hrnet_w48&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;384x288&lt;/td&gt;
&lt;td&gt;63.6M&lt;/td&gt;
&lt;td&gt;32.9&lt;/td&gt;
&lt;td&gt;0.763&lt;/td&gt;
&lt;td&gt;0.908&lt;/td&gt;
&lt;td&gt;0.829&lt;/td&gt;
&lt;td&gt;0.723&lt;/td&gt;
&lt;td&gt;0.834&lt;/td&gt;
&lt;td&gt;0.812&lt;/td&gt;
&lt;td&gt;0.942&lt;/td&gt;
&lt;td&gt;0.871&lt;/td&gt;
&lt;td&gt;0.767&lt;/td&gt;
&lt;td&gt;0.876&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-note-1" class="anchor" aria-hidden="true" href="#note-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Note:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Flip test is used.&lt;/li&gt;
&lt;li&gt;Person detector has person AP of 56.4 on COCO val2017 dataset.&lt;/li&gt;
&lt;li&gt;pose_resnet_[50,101,152] is our previous work of &lt;a href="http://openaccess.thecvf.com/content_ECCV_2018/html/Bin_Xiao_Simple_Baselines_for_ECCV_2018_paper.html" rel="nofollow"&gt;&lt;em&gt;Simple Baselines for Human Pose Estimation and Tracking&lt;/em&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;GFLOPs is for convolution and linear layers only.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-results-on-coco-test-dev2017-with-detector-having-human-ap-of-609-on-coco-test-dev2017-dataset" class="anchor" aria-hidden="true" href="#results-on-coco-test-dev2017-with-detector-having-human-ap-of-609-on-coco-test-dev2017-dataset"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Results on COCO test-dev2017 with detector having human AP of 60.9 on COCO test-dev2017 dataset&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Arch&lt;/th&gt;
&lt;th&gt;Input size&lt;/th&gt;
&lt;th&gt;#Params&lt;/th&gt;
&lt;th&gt;GFLOPs&lt;/th&gt;
&lt;th&gt;AP&lt;/th&gt;
&lt;th&gt;Ap .5&lt;/th&gt;
&lt;th&gt;AP .75&lt;/th&gt;
&lt;th&gt;AP (M)&lt;/th&gt;
&lt;th&gt;AP (L)&lt;/th&gt;
&lt;th&gt;AR&lt;/th&gt;
&lt;th&gt;AR .5&lt;/th&gt;
&lt;th&gt;AR .75&lt;/th&gt;
&lt;th&gt;AR (M)&lt;/th&gt;
&lt;th&gt;AR (L)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;pose_resnet_152&lt;/td&gt;
&lt;td&gt;384x288&lt;/td&gt;
&lt;td&gt;68.6M&lt;/td&gt;
&lt;td&gt;35.3&lt;/td&gt;
&lt;td&gt;0.737&lt;/td&gt;
&lt;td&gt;0.919&lt;/td&gt;
&lt;td&gt;0.828&lt;/td&gt;
&lt;td&gt;0.713&lt;/td&gt;
&lt;td&gt;0.800&lt;/td&gt;
&lt;td&gt;0.790&lt;/td&gt;
&lt;td&gt;0.952&lt;/td&gt;
&lt;td&gt;0.856&lt;/td&gt;
&lt;td&gt;0.748&lt;/td&gt;
&lt;td&gt;0.849&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;pose_hrnet_w48&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;384x288&lt;/td&gt;
&lt;td&gt;63.6M&lt;/td&gt;
&lt;td&gt;32.9&lt;/td&gt;
&lt;td&gt;0.755&lt;/td&gt;
&lt;td&gt;0.925&lt;/td&gt;
&lt;td&gt;0.833&lt;/td&gt;
&lt;td&gt;0.719&lt;/td&gt;
&lt;td&gt;0.815&lt;/td&gt;
&lt;td&gt;0.805&lt;/td&gt;
&lt;td&gt;0.957&lt;/td&gt;
&lt;td&gt;0.874&lt;/td&gt;
&lt;td&gt;0.763&lt;/td&gt;
&lt;td&gt;0.863&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;pose_hrnet_w48*&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;384x288&lt;/td&gt;
&lt;td&gt;63.6M&lt;/td&gt;
&lt;td&gt;32.9&lt;/td&gt;
&lt;td&gt;0.770&lt;/td&gt;
&lt;td&gt;0.927&lt;/td&gt;
&lt;td&gt;0.845&lt;/td&gt;
&lt;td&gt;0.734&lt;/td&gt;
&lt;td&gt;0.831&lt;/td&gt;
&lt;td&gt;0.820&lt;/td&gt;
&lt;td&gt;0.960&lt;/td&gt;
&lt;td&gt;0.886&lt;/td&gt;
&lt;td&gt;0.778&lt;/td&gt;
&lt;td&gt;0.877&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-note-2" class="anchor" aria-hidden="true" href="#note-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Note:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Flip test is used.&lt;/li&gt;
&lt;li&gt;Person detector has person AP of 60.9 on COCO test-dev2017 dataset.&lt;/li&gt;
&lt;li&gt;pose_resnet_152 is our previous work of &lt;a href="http://openaccess.thecvf.com/content_ECCV_2018/html/Bin_Xiao_Simple_Baselines_for_ECCV_2018_paper.html" rel="nofollow"&gt;&lt;em&gt;Simple Baselines for Human Pose Estimation and Tracking&lt;/em&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;GFLOPs is for convolution and linear layers only.&lt;/li&gt;
&lt;li&gt;pose_hrnet_w48* means using additional data from &lt;a href="https://challenger.ai/dataset/keypoint" rel="nofollow"&gt;AI challenger&lt;/a&gt; for training.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-environment" class="anchor" aria-hidden="true" href="#environment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Environment&lt;/h2&gt;
&lt;p&gt;The code is developed using python 3.6 on Ubuntu 16.04. NVIDIA GPUs are needed. The code is developed and tested using 4 NVIDIA P100 GPU cards. Other platforms or GPU cards are not fully tested.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick start&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install pytorch &amp;gt;= v1.0.0 following &lt;a href="https://pytorch.org/" rel="nofollow"&gt;official instruction&lt;/a&gt;.
&lt;strong&gt;Note that if you use pytorch's version &amp;lt; v1.0.0, you should following the instruction at &lt;a href="https://github.com/Microsoft/human-pose-estimation.pytorch"&gt;https://github.com/Microsoft/human-pose-estimation.pytorch&lt;/a&gt; to disable cudnn's implementations of BatchNorm layer. We encourage you to use higher pytorch's version(&amp;gt;=v1.0.0)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clone this repo, and we'll call the directory that you cloned as ${POSE_ROOT}.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install dependencies:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make libs:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ${POSE_ROOT}/lib
make
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install &lt;a href="https://github.com/cocodataset/cocoapi"&gt;COCOAPI&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# COCOAPI=/path/to/clone/cocoapi
git clone https://github.com/cocodataset/cocoapi.git $COCOAPI
cd $COCOAPI/PythonAPI
# Install into global site-packages
make install
# Alternatively, if you do not have permissions or prefer
# not to install the COCO API into global site-packages
python3 setup.py install --user
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that instructions like # COCOAPI=/path/to/install/cocoapi indicate that you should pick a path where you'd like to have the software cloned and then set an environment variable (COCOAPI in this case) accordingly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Init output(training model output directory) and log(tensorboard log directory) directory:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir output 
mkdir log
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Your directory tree should look like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;${POSE_ROOT}
├── data
├── experiments
├── lib
├── log
├── models
├── output
├── tools 
├── README.md
└── requirements.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download pretrained models from our model zoo(&lt;a href="https://drive.google.com/drive/folders/1hOTihvbyIxsm5ygDpbUuJ7O_tzv4oXjC?usp=sharing" rel="nofollow"&gt;GoogleDrive&lt;/a&gt; or &lt;a href="https://1drv.ms/f/s!AhIXJn_J-blW231MH2krnmLq5kkQ" rel="nofollow"&gt;OneDrive&lt;/a&gt;)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;${POSE_ROOT}
 `-- models
     `-- pytorch
         |-- imagenet
         |   |-- hrnet_w32-36af842e.pth
         |   |-- hrnet_w48-8ef0771d.pth
         |   |-- resnet50-19c8e357.pth
         |   |-- resnet101-5d3b4d8f.pth
         |   `-- resnet152-b121ed2d.pth
         |-- pose_coco
         |   |-- pose_hrnet_w32_256x192.pth
         |   |-- pose_hrnet_w32_384x288.pth
         |   |-- pose_hrnet_w48_256x192.pth
         |   |-- pose_hrnet_w48_384x288.pth
         |   |-- pose_resnet_101_256x192.pth
         |   |-- pose_resnet_101_384x288.pth
         |   |-- pose_resnet_152_256x192.pth
         |   |-- pose_resnet_152_384x288.pth
         |   |-- pose_resnet_50_256x192.pth
         |   `-- pose_resnet_50_384x288.pth
         `-- pose_mpii
             |-- pose_hrnet_w32_256x256.pth
             |-- pose_hrnet_w48_256x256.pth
             |-- pose_resnet_101_256x256.pth
             |-- pose_resnet_152_256x256.pth
             `-- pose_resnet_50_256x256.pth

&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-data-preparation" class="anchor" aria-hidden="true" href="#data-preparation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data preparation&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;For MPII data&lt;/strong&gt;, please download from &lt;a href="http://human-pose.mpi-inf.mpg.de/" rel="nofollow"&gt;MPII Human Pose Dataset&lt;/a&gt;. The original annotation files are in matlab format. We have converted them into json format, you also need to download them from &lt;a href="https://1drv.ms/f/s!AhIXJn_J-blW00SqrairNetmeVu4" rel="nofollow"&gt;OneDrive&lt;/a&gt; or &lt;a href="https://drive.google.com/drive/folders/1En_VqmStnsXMdldXA6qpqEyDQulnmS3a?usp=sharing" rel="nofollow"&gt;GoogleDrive&lt;/a&gt;.
Extract them under {POSE_ROOT}/data, and make them look like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;${POSE_ROOT}
|-- data
`-- |-- mpii
    `-- |-- annot
        |   |-- gt_valid.mat
        |   |-- test.json
        |   |-- train.json
        |   |-- trainval.json
        |   `-- valid.json
        `-- images
            |-- 000001163.jpg
            |-- 000003072.jpg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;For COCO data&lt;/strong&gt;, please download from &lt;a href="http://cocodataset.org/#download" rel="nofollow"&gt;COCO download&lt;/a&gt;, 2017 Train/Val is needed for COCO keypoints training and validation. We also provide person detection result of COCO val2017 and test-dev2017 to reproduce our multi-person pose estimation results. Please download from &lt;a href="https://1drv.ms/f/s!AhIXJn_J-blWzzDXoz5BeFl8sWM-" rel="nofollow"&gt;OneDrive&lt;/a&gt; or &lt;a href="https://drive.google.com/drive/folders/1fRUDNUDxe9fjqcRZ2bnF_TKMlO0nB_dk?usp=sharing" rel="nofollow"&gt;GoogleDrive&lt;/a&gt;.
Download and extract them under {POSE_ROOT}/data, and make them look like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;${POSE_ROOT}
|-- data
`-- |-- coco
    `-- |-- annotations
        |   |-- person_keypoints_train2017.json
        |   `-- person_keypoints_val2017.json
        |-- person_detection_results
        |   |-- COCO_val2017_detections_AP_H_56_person.json
        |   |-- COCO_test-dev2017_detections_AP_H_609_person.json
        `-- images
            |-- train2017
            |   |-- 000000000009.jpg
            |   |-- 000000000025.jpg
            |   |-- 000000000030.jpg
            |   |-- ... 
            `-- val2017
                |-- 000000000139.jpg
                |-- 000000000285.jpg
                |-- 000000000632.jpg
                |-- ... 
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-training-and-testing" class="anchor" aria-hidden="true" href="#training-and-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Training and Testing&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-testing-on-mpii-dataset-using-model-zoos-modelsgoogledrive-or-onedrive" class="anchor" aria-hidden="true" href="#testing-on-mpii-dataset-using-model-zoos-modelsgoogledrive-or-onedrive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing on MPII dataset using model zoo's models(&lt;a href="https://drive.google.com/drive/folders/1hOTihvbyIxsm5ygDpbUuJ7O_tzv4oXjC?usp=sharing" rel="nofollow"&gt;GoogleDrive&lt;/a&gt; or &lt;a href="https://1drv.ms/f/s!AhIXJn_J-blW231MH2krnmLq5kkQ" rel="nofollow"&gt;OneDrive&lt;/a&gt;)&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;python tools/test.py \
    --cfg experiments/mpii/hrnet/w32_256x256_adam_lr1e-3.yaml \
    TEST.MODEL_FILE models/pytorch/pose_mpii/pose_hrnet_w32_256x256.pth
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-training-on-mpii-dataset" class="anchor" aria-hidden="true" href="#training-on-mpii-dataset"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Training on MPII dataset&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;python tools/train.py \
    --cfg experiments/mpii/hrnet/w32_256x256_adam_lr1e-3.yaml
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-testing-on-coco-val2017-dataset-using-model-zoos-modelsgoogledrive-or-onedrive" class="anchor" aria-hidden="true" href="#testing-on-coco-val2017-dataset-using-model-zoos-modelsgoogledrive-or-onedrive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing on COCO val2017 dataset using model zoo's models(&lt;a href="https://drive.google.com/drive/folders/1hOTihvbyIxsm5ygDpbUuJ7O_tzv4oXjC?usp=sharing" rel="nofollow"&gt;GoogleDrive&lt;/a&gt; or &lt;a href="https://1drv.ms/f/s!AhIXJn_J-blW231MH2krnmLq5kkQ" rel="nofollow"&gt;OneDrive&lt;/a&gt;)&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;python tools/test.py \
    --cfg experiments/coco/hrnet/w32_256x192_adam_lr1e-3.yaml \
    TEST.MODEL_FILE models/pytorch/pose_coco/pose_hrnet_w32_256x192.pth \
    TEST.USE_GT_BBOX False
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-training-on-coco-train2017-dataset" class="anchor" aria-hidden="true" href="#training-on-coco-train2017-dataset"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Training on COCO train2017 dataset&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;python tools/train.py \
    --cfg experiments/coco/hrnet/w32_256x192_adam_lr1e-3.yaml \
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-visualization" class="anchor" aria-hidden="true" href="#visualization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Visualization&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-visualizing-predictions-on-coco-val" class="anchor" aria-hidden="true" href="#visualizing-predictions-on-coco-val"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Visualizing predictions on COCO val&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;python visualization/plot_coco.py \
    --prediction output/coco/w48_384x288_adam_lr1e-3/results/keypoints_val2017_results_0.json \
    --save-path visualization/results

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="figures\visualization\coco\score_610_id_2685_000000002685.png"&gt;&lt;img src="figures\visualization\coco\score_610_id_2685_000000002685.png" height="215" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="figures\visualization\coco\score_710_id_153229_000000153229.png"&gt;&lt;img src="figures\visualization\coco\score_710_id_153229_000000153229.png" height="215" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="figures\visualization\coco\score_755_id_343561_000000343561.png"&gt;&lt;img src="figures\visualization\coco\score_755_id_343561_000000343561.png" height="215" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="figures\visualization\coco\score_755_id_559842_000000559842.png"&gt;&lt;img src="figures\visualization\coco\score_755_id_559842_000000559842.png" height="209" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="figures\visualization\coco\score_770_id_6954_000000006954.png"&gt;&lt;img src="figures\visualization\coco\score_770_id_6954_000000006954.png" height="209" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="figures\visualization\coco\score_919_id_53626_000000053626.png"&gt;&lt;img src="figures\visualization\coco\score_919_id_53626_000000053626.png" height="209" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-other-applications" class="anchor" aria-hidden="true" href="#other-applications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other applications&lt;/h3&gt;
&lt;p&gt;Many other dense prediction tasks, such as segmentation, face alignment and object detection, etc. have been benefited by HRNet. More information can be found at &lt;a href="https://github.com/HRNet"&gt;High-Resolution Networks&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citation&lt;/h3&gt;
&lt;p&gt;If you use our code or models in your research, please cite with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@inproceedings{sun2019deep,
  title={Deep High-Resolution Representation Learning for Human Pose Estimation},
  author={Sun, Ke and Xiao, Bin and Liu, Dong and Wang, Jingdong},
  booktitle={CVPR},
  year={2019}
}

@inproceedings{xiao2018simple,
    author={Xiao, Bin and Wu, Haiping and Wei, Yichen},
    title={Simple Baselines for Human Pose Estimation and Tracking},
    booktitle = {European Conference on Computer Vision (ECCV)},
    year = {2018}
}

@article{WangSCJDZLMTWLX19,
  title={Deep High-Resolution Representation Learning for Visual Recognition},
  author={Jingdong Wang and Ke Sun and Tianheng Cheng and 
          Borui Jiang and Chaorui Deng and Yang Zhao and Dong Liu and Yadong Mu and 
          Mingkui Tan and Xinggang Wang and Wenyu Liu and Bin Xiao},
  journal   = {CoRR},
  volume    = {abs/1908.07919},
  year={2019}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>leoxiaobin</author><guid isPermaLink="false">https://github.com/leoxiaobin/deep-high-resolution-net.pytorch</guid><pubDate>Thu, 28 Nov 2019 00:02:00 GMT</pubDate></item></channel></rss>