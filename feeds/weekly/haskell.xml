<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Haskell, This week</title><link>https://github.com/trending/haskell?since=weekly</link><description>The top repositories on GitHub for haskell, measured weekly</description><pubDate>Sat, 25 Jan 2020 01:09:27 GMT</pubDate><lastBuildDate>Sat, 25 Jan 2020 01:09:27 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>koalaman/shellcheck #1 in Haskell, This week</title><link>https://github.com/koalaman/shellcheck</link><description>&lt;p&gt;&lt;i&gt;ShellCheck, a static analysis tool for shell scripts&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/koalaman/shellcheck" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b9e97f328fa055534e41ae29a7d69e7798d549a7/68747470733a2f2f7472617669732d63692e6f72672f6b6f616c616d616e2f7368656c6c636865636b2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/koalaman/shellcheck.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-shellcheck---a-shell-script-static-analysis-tool" class="anchor" aria-hidden="true" href="#shellcheck---a-shell-script-static-analysis-tool"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ShellCheck - A shell script static analysis tool&lt;/h1&gt;
&lt;p&gt;ShellCheck is a GPLv3 tool that gives warnings and suggestions for bash/sh shell scripts:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/terminal.png"&gt;&lt;img src="doc/terminal.png" alt="Screenshot of a terminal showing problematic shell script lines highlighted" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The goals of ShellCheck are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To point out and clarify typical beginner's syntax issues that cause a shell
to give cryptic error messages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To point out and clarify typical intermediate level semantic problems that
cause a shell to behave strangely and counter-intuitively.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To point out subtle caveats, corner cases and pitfalls that may cause an
advanced user's otherwise working script to fail under future circumstances.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href="README.md#user-content-gallery-of-bad-code"&gt;the gallery of bad code&lt;/a&gt; for examples of what ShellCheck can help you identify!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#how-to-use"&gt;How to use&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#on-the-web"&gt;On the web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#from-your-terminal"&gt;From your terminal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#in-your-editor"&gt;In your editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#in-your-build-or-test-suites"&gt;In your build or test suites&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#installing"&gt;Installing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#compiling-from-source"&gt;Compiling from source&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#installing-cabal"&gt;Installing Cabal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#compiling-shellcheck"&gt;Compiling ShellCheck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#running-tests"&gt;Running tests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#gallery-of-bad-code"&gt;Gallery of bad code&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#quoting"&gt;Quoting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conditionals"&gt;Conditionals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#frequently-misused-commands"&gt;Frequently misused commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#common-beginners-mistakes"&gt;Common beginner's mistakes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#style"&gt;Style&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#data-and-typing-errors"&gt;Data and typing errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#robustness"&gt;Robustness&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#portability"&gt;Portability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#miscellaneous"&gt;Miscellaneous&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#testimonials"&gt;Testimonials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ignoring-issues"&gt;Ignoring issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reporting-bugs"&gt;Reporting bugs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#copyright"&gt;Copyright&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#other-resources"&gt;Other Resources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-use" class="anchor" aria-hidden="true" href="#how-to-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to use&lt;/h2&gt;
&lt;p&gt;There are a number of ways to use ShellCheck!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-on-the-web" class="anchor" aria-hidden="true" href="#on-the-web"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;On the web&lt;/h3&gt;
&lt;p&gt;Paste a shell script on &lt;a href="https://www.shellcheck.net" rel="nofollow"&gt;https://www.shellcheck.net&lt;/a&gt; for instant feedback.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.shellcheck.net" rel="nofollow"&gt;ShellCheck.net&lt;/a&gt; is always synchronized to the latest git commit, and is the easiest way to give ShellCheck a go. Tell your friends!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-from-your-terminal" class="anchor" aria-hidden="true" href="#from-your-terminal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;From your terminal&lt;/h3&gt;
&lt;p&gt;Run &lt;code&gt;shellcheck yourscript&lt;/code&gt; in your terminal for instant output, as seen above.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-in-your-editor" class="anchor" aria-hidden="true" href="#in-your-editor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;In your editor&lt;/h3&gt;
&lt;p&gt;You can see ShellCheck suggestions directly in a variety of editors.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vim, through &lt;a href="https://github.com/w0rp/ale"&gt;ALE&lt;/a&gt;, &lt;a href="https://github.com/neomake/neomake"&gt;Neomake&lt;/a&gt;, or &lt;a href="https://github.com/scrooloose/syntastic"&gt;Syntastic&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/vim-syntastic.png"&gt;&lt;img src="doc/vim-syntastic.png" alt="Screenshot of Vim showing inlined shellcheck feedback" style="max-width:100%;"&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Emacs, through &lt;a href="https://github.com/flycheck/flycheck"&gt;Flycheck&lt;/a&gt; or &lt;a href="https://github.com/federicotdn/flymake-shellcheck"&gt;Flymake&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/emacs-flycheck.png"&gt;&lt;img src="doc/emacs-flycheck.png" alt="Screenshot of emacs showing inlined shellcheck feedback" style="max-width:100%;"&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Sublime, through &lt;a href="https://github.com/SublimeLinter/SublimeLinter-shellcheck"&gt;SublimeLinter&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Atom, through &lt;a href="https://github.com/AtomLinter/linter-shellcheck"&gt;Linter&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;VSCode, through &lt;a href="https://github.com/timonwong/vscode-shellcheck"&gt;vscode-shellcheck&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Most other editors, through &lt;a href="shellcheck.1.md#user-content-formats"&gt;GCC error compatibility&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-in-your-build-or-test-suites" class="anchor" aria-hidden="true" href="#in-your-build-or-test-suites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;In your build or test suites&lt;/h3&gt;
&lt;p&gt;While ShellCheck is mostly intended for interactive use, it can easily be added to builds or test suites.
It makes canonical use of exit codes, so you can just add a &lt;code&gt;shellcheck&lt;/code&gt; command as part of the process.&lt;/p&gt;
&lt;p&gt;For example, in a Makefile:&lt;/p&gt;
&lt;div class="highlight highlight-source-makefile"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;check-scripts&lt;/span&gt;:
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Fail if any of these files have warnings&lt;/span&gt;
    shellcheck myscripts/*.sh&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or in a Travis CI &lt;code&gt;.travis.yml&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;:
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Fail if any of these files have warnings&lt;/span&gt;
  - &lt;span class="pl-s"&gt;shellcheck myscripts/*.sh&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Services and platforms that have ShellCheck pre-installed and ready to use:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://travis-ci.org/" rel="nofollow"&gt;Travis CI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codacy.com/" rel="nofollow"&gt;Codacy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codeclimate.com/" rel="nofollow"&gt;Code Climate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codefactor.io/" rel="nofollow"&gt;Code Factor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/features/actions"&gt;Github&lt;/a&gt;(only Linux)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Services and platforms with third party plugins:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.sonarqube.org/" rel="nofollow"&gt;SonarQube&lt;/a&gt; through &lt;a href="https://github.com/emerald-squad/sonar-shellcheck-plugin"&gt;sonar-shellcheck-plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most other services, including &lt;a href="https://about.gitlab.com/" rel="nofollow"&gt;GitLab&lt;/a&gt;, let you install
ShellCheck yourself, either through the system's package manager (see &lt;a href="#installing"&gt;Installing&lt;/a&gt;),
or by downloading and unpacking a &lt;a href="#installing-a-pre-compiled-binary"&gt;binary release&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It's a good idea to manually install a specific ShellCheck version regardless. This avoids
any surprise build breaks when a new version with new warnings is published.&lt;/p&gt;
&lt;p&gt;For customized filtering or reporting, ShellCheck can output simple JSON, CheckStyle compatible XML,
GCC compatible warnings as well as human readable text (with or without ANSI colors). See the
&lt;a href="https://github.com/koalaman/shellcheck/wiki/Integration"&gt;Integration&lt;/a&gt; wiki page for more documentation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing&lt;/h2&gt;
&lt;p&gt;The easiest way to install ShellCheck locally is through your package manager.&lt;/p&gt;
&lt;p&gt;On systems with Cabal (installs to &lt;code&gt;~/.cabal/bin&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cabal update
cabal install ShellCheck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On systems with Stack (installs to &lt;code&gt;~/.local/bin&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;stack update
stack install ShellCheck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On Debian based distros:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get install shellcheck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On Arch Linux based distros:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pacman -S shellcheck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or get the dependency free &lt;a href="https://aur.archlinux.org/packages/shellcheck-static/" rel="nofollow"&gt;shellcheck-static&lt;/a&gt; from the AUR.&lt;/p&gt;
&lt;p&gt;On Gentoo based distros:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;emerge --ask shellcheck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On EPEL based distros:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yum -y install epel-release
yum install ShellCheck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On Fedora based distros:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dnf install ShellCheck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On FreeBSD:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pkg install hs-ShellCheck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On OS X with homebrew:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install shellcheck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On OpenBSD:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pkg_add shellcheck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On openSUSE&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;zypper in ShellCheck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or use OneClickInstall - &lt;a href="https://software.opensuse.org/package/ShellCheck" rel="nofollow"&gt;https://software.opensuse.org/package/ShellCheck&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;On Solus:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;eopkg install shellcheck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On Windows (via &lt;a href="https://chocolatey.org/packages/shellcheck" rel="nofollow"&gt;chocolatey&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-batchfile"&gt;&lt;pre&gt;C:\&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; choco install shellcheck&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or Windows (via &lt;a href="http://scoop.sh" rel="nofollow"&gt;scoop&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-batchfile"&gt;&lt;pre&gt;C:\&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; scoop install shellcheck&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From Snap Store:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;snap install --channel=edge shellcheck
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;From Docker Hub:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker run --rm -v &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$PWD&lt;/span&gt;:/mnt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; koalaman/shellcheck:stable myscript
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Or :v0.4.7 for that version, or :latest for daily builds&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or use &lt;code&gt;koalaman/shellcheck-alpine&lt;/code&gt; if you want a larger Alpine Linux based image to extend. It works exactly like a regular Alpine image, but has shellcheck preinstalled.&lt;/p&gt;
&lt;p&gt;Using the &lt;a href="https://nixos.org/nix" rel="nofollow"&gt;nix package manager&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;nix-env -iA nixpkgs.shellcheck&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, you can download pre-compiled binaries for the latest release here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://storage.googleapis.com/shellcheck/shellcheck-stable.linux.x86_64.tar.xz" rel="nofollow"&gt;Linux, x86_64&lt;/a&gt; (statically linked)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://storage.googleapis.com/shellcheck/shellcheck-stable.linux.armv6hf.tar.xz" rel="nofollow"&gt;Linux, armv6hf&lt;/a&gt;, i.e. Raspberry Pi (statically linked)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://storage.googleapis.com/shellcheck/shellcheck-stable.linux.armv6hf.tar.xz" rel="nofollow"&gt;Linux, aarch64&lt;/a&gt; aka ARM64 (statically linked)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shellcheck.storage.googleapis.com/shellcheck-stable.darwin.x86_64.tar.xz" rel="nofollow"&gt;MacOS, x86_64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://storage.googleapis.com/shellcheck/shellcheck-stable.zip" rel="nofollow"&gt;Windows, x86&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;or see the &lt;a href="https://shellcheck.storage.googleapis.com/index.html" rel="nofollow"&gt;storage bucket listing&lt;/a&gt; for checksums, older versions and the latest daily builds.&lt;/p&gt;
&lt;p&gt;Distro packages already come with a &lt;code&gt;man&lt;/code&gt; page. If you are building from source, it can be installed with:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;pandoc -s -f markdown-smart -t man shellcheck.1.md -o shellcheck.1&lt;/span&gt;
&lt;span class="pl-c1"&gt;sudo mv shellcheck.1 /usr/share/man/man1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-travis-ci" class="anchor" aria-hidden="true" href="#travis-ci"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Travis CI&lt;/h3&gt;
&lt;p&gt;Travis CI has now integrated ShellCheck by default, so you don't need to manually install it.&lt;/p&gt;
&lt;p&gt;If you still want to do so in order to upgrade at your leisure or ensure you're
using the latest release, follow the steps below to install a binary version.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installing-a-pre-compiled-binary" class="anchor" aria-hidden="true" href="#installing-a-pre-compiled-binary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing a pre-compiled binary&lt;/h3&gt;
&lt;p&gt;The pre-compiled binaries come in &lt;code&gt;tar.xz&lt;/code&gt; files. To decompress them, make sure
&lt;code&gt;xz&lt;/code&gt; is installed.
On Debian/Ubuntu/Mint, you can &lt;code&gt;apt install xz-utils&lt;/code&gt;.
On Redhat/Fedora/CentOS, &lt;code&gt;yum -y install xz&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A simple installer may do something like:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;scversion=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stable&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or "v0.4.7", or "latest"&lt;/span&gt;
wget -qO- &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://storage.googleapis.com/shellcheck/shellcheck-&lt;span class="pl-smi"&gt;${scversion?}&lt;/span&gt;.linux.x86_64.tar.xz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; tar -xJv
cp &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;shellcheck-&lt;span class="pl-smi"&gt;${scversion}&lt;/span&gt;/shellcheck&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /usr/bin/
shellcheck --version&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-compiling-from-source" class="anchor" aria-hidden="true" href="#compiling-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling from source&lt;/h2&gt;
&lt;p&gt;This section describes how to build ShellCheck from a source directory. ShellCheck is written in Haskell and requires 2GB of RAM to compile.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installing-cabal" class="anchor" aria-hidden="true" href="#installing-cabal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing Cabal&lt;/h3&gt;
&lt;p&gt;ShellCheck is built and packaged using Cabal. Install the package &lt;code&gt;cabal-install&lt;/code&gt; from your system's package manager (with e.g. &lt;code&gt;apt-get&lt;/code&gt;, &lt;code&gt;brew&lt;/code&gt;, &lt;code&gt;emerge&lt;/code&gt;, &lt;code&gt;yum&lt;/code&gt;, or &lt;code&gt;zypper&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;On MacOS (OS X), you can do a fast install of Cabal using brew, which takes a couple of minutes instead of more than 30 minutes if you try to compile it from source.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ brew install cabal-install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On MacPorts, the package is instead called &lt;code&gt;hs-cabal-install&lt;/code&gt;, while native Windows users should install the latest version of the Haskell platform from &lt;a href="https://www.haskell.org/platform/" rel="nofollow"&gt;https://www.haskell.org/platform/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Verify that &lt;code&gt;cabal&lt;/code&gt; is installed and update its dependency list with&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cabal update
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-compiling-shellcheck" class="anchor" aria-hidden="true" href="#compiling-shellcheck"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling ShellCheck&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git clone&lt;/code&gt; this repository, and &lt;code&gt;cd&lt;/code&gt; to the ShellCheck source directory to build/install:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cabal install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or if you intend to run the tests:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cabal install --enable-tests
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will compile ShellCheck and install it to your &lt;code&gt;~/.cabal/bin&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;Add this directory to your &lt;code&gt;PATH&lt;/code&gt; (for bash, add this to your &lt;code&gt;~/.bashrc&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;export&lt;/span&gt; PATH=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$HOME&lt;/span&gt;/.cabal/bin:&lt;span class="pl-smi"&gt;$PATH&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Log out and in again, and verify that your PATH is set up correctly:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ which shellcheck
&lt;span class="pl-k"&gt;~&lt;/span&gt;/.cabal/bin/shellcheck&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On native Windows, the &lt;code&gt;PATH&lt;/code&gt; should already be set up, but the system
may use a legacy codepage. In &lt;code&gt;cmd.exe&lt;/code&gt;, &lt;code&gt;powershell.exe&lt;/code&gt; and Powershell ISE,
make sure to use a TrueType font, not a Raster font, and set the active
codepage to UTF-8 (65001) with &lt;code&gt;chcp&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-batchfile"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;chcp&lt;/span&gt; &lt;span class="pl-c1"&gt;65001&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In Powershell ISE, you may need to additionally update the output encoding:&lt;/p&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;[&lt;span class="pl-k"&gt;Console&lt;/span&gt;]::OutputEncoding &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-k"&gt;System.Text.Encoding&lt;/span&gt;]::UTF8&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-running-tests" class="anchor" aria-hidden="true" href="#running-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running tests&lt;/h3&gt;
&lt;p&gt;To run the unit test suite:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cabal test
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-gallery-of-bad-code" class="anchor" aria-hidden="true" href="#gallery-of-bad-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gallery of bad code&lt;/h2&gt;
&lt;p&gt;So what kind of things does ShellCheck look for? Here is an incomplete list of detected issues.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-quoting" class="anchor" aria-hidden="true" href="#quoting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quoting&lt;/h3&gt;
&lt;p&gt;ShellCheck can recognize several types of incorrect quoting:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-smi"&gt;$1&lt;/span&gt;                           &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Unquoted variables&lt;/span&gt;
find &lt;span class="pl-c1"&gt;.&lt;/span&gt; -name &lt;span class="pl-k"&gt;*&lt;/span&gt;.ogg                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Unquoted find/grep patterns&lt;/span&gt;
rm &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~/my file.txt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Quoted tilde expansion&lt;/span&gt;
v=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--verbose="true"&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;;&lt;/span&gt; cmd &lt;span class="pl-smi"&gt;$v&lt;/span&gt;      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Literal quotes in variables&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;f&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;*.ogg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Incorrectly quoted 'for' loops&lt;/span&gt;
touch &lt;span class="pl-smi"&gt;$@&lt;/span&gt;                          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Unquoted $@&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Don&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;t forget to restart&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;   # Singlequote closed by apostrophe&lt;/span&gt;
&lt;span class="pl-s"&gt;echo &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;Don&lt;span class="pl-cce"&gt;\'&lt;/span&gt;t try this at home&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;    # Attempting to escape &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Path is $PATH&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Variables in single quotes&lt;/span&gt;
&lt;span class="pl-c1"&gt;trap&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;echo Took &lt;span class="pl-smi"&gt;${SECONDS}&lt;/span&gt;s&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; 0    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Prematurely expanded trap&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-conditionals" class="anchor" aria-hidden="true" href="#conditionals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conditionals&lt;/h3&gt;
&lt;p&gt;ShellCheck can recognize many types of incorrect test statements.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;[[ n &lt;span class="pl-k"&gt;!=&lt;/span&gt; 0 ]]                      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Constant test expressions&lt;/span&gt;
[[ &lt;span class="pl-k"&gt;-e&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;.mpg ]]                    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Existence checks of globs&lt;/span&gt;
[[ &lt;span class="pl-smi"&gt;$foo&lt;/span&gt;&lt;span class="pl-k"&gt;==&lt;/span&gt;0 ]]                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Always true due to missing spaces&lt;/span&gt;
[[ &lt;span class="pl-k"&gt;-n&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$foo&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ]]                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Always true due to literals&lt;/span&gt;
[[ &lt;span class="pl-smi"&gt;$foo&lt;/span&gt; &lt;span class="pl-k"&gt;=~&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fo+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ]]               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Quoted regex in =~&lt;/span&gt;
[ foo &lt;span class="pl-k"&gt;=~&lt;/span&gt; re ]                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Unsupported [ ] operators&lt;/span&gt;
[ &lt;span class="pl-smi"&gt;$1&lt;/span&gt; &lt;span class="pl-k"&gt;-eq&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;shellcheck&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ]           &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Numerical comparison of strings&lt;/span&gt;
[ &lt;span class="pl-smi"&gt;$n&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-smi"&gt;$m&lt;/span&gt; ]                      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; &amp;amp;&amp;amp; in [ .. ]&lt;/span&gt;
[ grep -q foo file ]              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Command without $(..)&lt;/span&gt;
[[ &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$$&lt;/span&gt;file&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;.jpg ]]           &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Comparisons that can't succeed&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;((&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;lt &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-pds"&gt;))&lt;/span&gt;&lt;/span&gt;                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Using test operators in ((..))&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-frequently-misused-commands" class="anchor" aria-hidden="true" href="#frequently-misused-commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Frequently misused commands&lt;/h3&gt;
&lt;p&gt;ShellCheck can recognize instances where commands are used incorrectly:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;grep &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*foo*&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; file                 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Globs in regex contexts&lt;/span&gt;
find &lt;span class="pl-c1"&gt;.&lt;/span&gt; -exec foo {} &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; bar {} &lt;span class="pl-cce"&gt;\;&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Prematurely terminated find -exec&lt;/span&gt;
sudo &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Var=42&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; /etc/profile &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Redirecting sudo&lt;/span&gt;
&lt;span class="pl-k"&gt;time&lt;/span&gt; --format=%s sleep 10         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Passing time(1) flags to time builtin&lt;/span&gt;
&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-c1"&gt;read&lt;/span&gt; h&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; ssh &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$h&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; uptime  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Commands eating while loop input&lt;/span&gt;
&lt;span class="pl-c1"&gt;alias&lt;/span&gt; archive=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;mv $1 /backup&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Defining aliases with arguments&lt;/span&gt;
tr -cd &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;[a-zA-Z0-9]&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [] around ranges in tr&lt;/span&gt;
&lt;span class="pl-c1"&gt;exec&lt;/span&gt; foo&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Done!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Misused 'exec'&lt;/span&gt;
find -name &lt;span class="pl-cce"&gt;\*&lt;/span&gt;.bak -o -name &lt;span class="pl-cce"&gt;\*&lt;/span&gt;~ -delete  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Implicit precedence in find&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; find . -exec foo &amp;gt; bar \;       # Redirections in find&lt;/span&gt;
&lt;span class="pl-en"&gt;f&lt;/span&gt;() { whoami&lt;span class="pl-k"&gt;;&lt;/span&gt; }; sudo f           &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; External use of internal functions&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-common-beginners-mistakes" class="anchor" aria-hidden="true" href="#common-beginners-mistakes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Common beginner's mistakes&lt;/h3&gt;
&lt;p&gt;ShellCheck recognizes many common beginner's syntax errors:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;var = 42                          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Spaces around = in assignments&lt;/span&gt;
&lt;span class="pl-smi"&gt;$foo&lt;/span&gt;=42                           &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; $ in assignments&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;$var&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; ...             &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; $ in for loop variables&lt;/span&gt;
var&lt;span class="pl-smi"&gt;$n&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Wrong indirect assignment&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-smi"&gt;${var&lt;span class="pl-smi"&gt;$n&lt;/span&gt;}&lt;/span&gt;                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Wrong indirect reference&lt;/span&gt;
var=(1, 2, 3)                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Comma separated arrays&lt;/span&gt;
array=( [index] = value )         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Incorrect index initialization&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-smi"&gt;$var&lt;/span&gt;[14]                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Missing {} in array references&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Argument 10 is &lt;span class="pl-smi"&gt;$1&lt;/span&gt;0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Positional parameter misreference&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;myfunction&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt; ..&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-k"&gt;fi&lt;/span&gt;     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Wrapping commands in $()&lt;/span&gt;
&lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; othercondition&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt; ..   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Using 'else if'&lt;/span&gt;
f&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;() { &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello world; }     # Using function before definition&lt;/span&gt;
&lt;span class="pl-s"&gt;[ false ]                         # 'false' being true&lt;/span&gt;
&lt;span class="pl-s"&gt;if ( -f file )                    # Using (..) instead of test&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-style" class="anchor" aria-hidden="true" href="#style"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Style&lt;/h3&gt;
&lt;p&gt;ShellCheck can make suggestions to improve style:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;[[ &lt;span class="pl-k"&gt;-z&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;find /tmp &lt;span class="pl-k"&gt;|&lt;/span&gt; grep mpg&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt; ]]  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Use grep -q instead&lt;/span&gt;
a &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; log&lt;span class="pl-k"&gt;;&lt;/span&gt; b &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; log&lt;span class="pl-k"&gt;;&lt;/span&gt; c &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; log      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Use a redirection block instead&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The time is &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;date&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Use $() instead&lt;/span&gt;
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; dir&lt;span class="pl-k"&gt;;&lt;/span&gt; process &lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-c1"&gt;cd&lt;/span&gt; ..&lt;span class="pl-k"&gt;;&lt;/span&gt;         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Use subshells instead&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; $[1+2]                       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Use standard $((..)) instead of old $[]&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$((&lt;/span&gt;&lt;span class="pl-smi"&gt;$RANDOM&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt;&lt;span class="pl-pds"&gt;))&lt;/span&gt;&lt;/span&gt;             &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Don't use $ on variables in $((..))&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;date&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;                    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Useless use of echo&lt;/span&gt;
cat file &lt;span class="pl-k"&gt;|&lt;/span&gt; grep foo               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Useless use of cat&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-data-and-typing-errors" class="anchor" aria-hidden="true" href="#data-and-typing-errors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data and typing errors&lt;/h3&gt;
&lt;p&gt;ShellCheck can recognize issues related to data and typing:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;args=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$@&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;                         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Assigning arrays to strings&lt;/span&gt;
files=(foo bar)&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$files&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Referencing arrays as strings&lt;/span&gt;
&lt;span class="pl-k"&gt;declare&lt;/span&gt; -A arr=(foo bar)          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Associative arrays without index&lt;/span&gt;
&lt;span class="pl-c1"&gt;printf&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%s\n&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arguments: &lt;span class="pl-smi"&gt;$@&lt;/span&gt;.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Concatenating strings and arrays&lt;/span&gt;
[[ &lt;span class="pl-smi"&gt;$#&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; 2 ]]                      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Comparing numbers as strings&lt;/span&gt;
var=World&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; var      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Unused lowercase variables&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello &lt;span class="pl-smi"&gt;$name&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Unassigned lowercase variables&lt;/span&gt;
cmd &lt;span class="pl-k"&gt;|&lt;/span&gt; &lt;span class="pl-c1"&gt;read&lt;/span&gt; bar&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-smi"&gt;$bar&lt;/span&gt;         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Assignments in subshells&lt;/span&gt;
cat foo &lt;span class="pl-k"&gt;|&lt;/span&gt; cp bar                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Piping to commands that don't read&lt;/span&gt;
&lt;span class="pl-c1"&gt;printf&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;%s: %s\n&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; foo             &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Mismatches in printf argument count&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-robustness" class="anchor" aria-hidden="true" href="#robustness"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Robustness&lt;/h3&gt;
&lt;p&gt;ShellCheck can make suggestions for improving the robustness of a script:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;rm -rf &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$STEAMROOT&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Catastrophic rm&lt;/span&gt;
touch ./-l&lt;span class="pl-k"&gt;;&lt;/span&gt; ls &lt;span class="pl-k"&gt;*&lt;/span&gt;                 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Globs that could become options&lt;/span&gt;
find &lt;span class="pl-c1"&gt;.&lt;/span&gt; -exec sh -c &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a &amp;amp;&amp;amp; b {}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-cce"&gt;\;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Find -exec shell injection&lt;/span&gt;
&lt;span class="pl-c1"&gt;printf&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello &lt;span class="pl-smi"&gt;$name&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;             &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Variables in printf format&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;f&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;ls &lt;span class="pl-k"&gt;*&lt;/span&gt;.txt&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Iterating over ls output&lt;/span&gt;
&lt;span class="pl-k"&gt;export&lt;/span&gt; MYVAR=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;cmd&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Masked exit codes&lt;/span&gt;
&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-smi"&gt;$version&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; 2.&lt;span class="pl-k"&gt;*&lt;/span&gt;) &lt;span class="pl-c1"&gt;:&lt;/span&gt;;; 2.6.&lt;span class="pl-k"&gt;*&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Shadowed case branches&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-portability" class="anchor" aria-hidden="true" href="#portability"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Portability&lt;/h3&gt;
&lt;p&gt;ShellCheck will warn when using features not supported by the shebang. For example, if you set the shebang to &lt;code&gt;#!/bin/sh&lt;/code&gt;, ShellCheck will warn about portability issues similar to &lt;code&gt;checkbashisms&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;echo&lt;/span&gt; {1..&lt;span class="pl-smi"&gt;$n&lt;/span&gt;}                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Works in ksh, but not bash/dash/sh&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; {1..10}                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Works in ksh and bash, but not dash/sh&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; -n 42                       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Works in ksh, bash and dash, undefined in sh&lt;/span&gt;
&lt;span class="pl-c1"&gt;trap&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;exit 42&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; sigint            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Unportable signal spec&lt;/span&gt;
cmd &lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; file                      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Unportable redirection operator&lt;/span&gt;
&lt;span class="pl-c1"&gt;read&lt;/span&gt; foo &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; /dev/tcp/host/22      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Unportable intercepted files&lt;/span&gt;
&lt;span class="pl-en"&gt;foo-bar&lt;/span&gt;() { ..&lt;span class="pl-k"&gt;;&lt;/span&gt; }                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Undefined/unsupported function name&lt;/span&gt;
[ &lt;span class="pl-smi"&gt;$UID&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; 0 ]                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Variable undefined in dash/sh&lt;/span&gt;
&lt;span class="pl-k"&gt;local&lt;/span&gt; var=value                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; local is undefined in sh&lt;/span&gt;
&lt;span class="pl-k"&gt;time&lt;/span&gt; sleep 1 &lt;span class="pl-k"&gt;|&lt;/span&gt; sleep 5           &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Undefined uses of 'time'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-miscellaneous" class="anchor" aria-hidden="true" href="#miscellaneous"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Miscellaneous&lt;/h3&gt;
&lt;p&gt;ShellCheck recognizes a menagerie of other issues:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;PS1=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\e[0;32m\$\e[0m &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; PS1 colors not in \[..\]&lt;/span&gt;
PATH=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$PATH&lt;/span&gt;:~/bin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Literal tilde in $PATH&lt;/span&gt;
rm “file”                         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Unicode quotes&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Carriage return / DOS line endings&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; hello &lt;span class="pl-cce"&gt;\ &lt;/span&gt;                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Trailing spaces after \&lt;/span&gt;
var=42 &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-smi"&gt;$var&lt;/span&gt;                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Expansion of inlined environment&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#!&lt;/span&gt;/bin/bash -x -e                 # Common shebang errors&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$((&lt;/span&gt;n&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;180&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;100&lt;/span&gt;&lt;span class="pl-pds"&gt;))&lt;/span&gt;&lt;/span&gt;               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Unnecessary loss of precision&lt;/span&gt;
ls &lt;span class="pl-k"&gt;*&lt;/span&gt;[:digit:].txt                 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Bad character class globs&lt;/span&gt;
sed &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s/foo/bar/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; file &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; file      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Redirecting to input&lt;/span&gt;
&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-c1"&gt;getopts&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; f&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-smi"&gt;$f&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Unhandled getopts flags&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-testimonials" class="anchor" aria-hidden="true" href="#testimonials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testimonials&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;At first you're like "shellcheck is awesome" but then you're like "wtf are we still using bash"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Alexander Tarasikov,
&lt;a href="https://twitter.com/astarasikov/status/568825996532707330" rel="nofollow"&gt;via Twitter&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ignoring-issues" class="anchor" aria-hidden="true" href="#ignoring-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ignoring issues&lt;/h2&gt;
&lt;p&gt;Issues can be ignored via environmental variable, command line, individually or globally within a file:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/Ignore"&gt;https://github.com/koalaman/shellcheck/wiki/Ignore&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reporting-bugs" class="anchor" aria-hidden="true" href="#reporting-bugs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting bugs&lt;/h2&gt;
&lt;p&gt;Please use the GitHub issue tracker for any bugs or feature suggestions:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/koalaman/shellcheck/issues"&gt;https://github.com/koalaman/shellcheck/issues&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Please submit patches to code or documentation as GitHub pull requests! Check
out the &lt;a href="https://github.com/koalaman/shellcheck/wiki/DevGuide"&gt;DevGuide&lt;/a&gt; on the
ShellCheck Wiki.&lt;/p&gt;
&lt;p&gt;Contributions must be licensed under the GNU GPLv3.
The contributor retains the copyright.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-copyright" class="anchor" aria-hidden="true" href="#copyright"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright&lt;/h2&gt;
&lt;p&gt;ShellCheck is licensed under the GNU General Public License, v3. A copy of this license is included in the file &lt;a href="LICENSE"&gt;LICENSE&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Copyright 2012-2019, &lt;a href="https://github.com/koalaman/"&gt;Vidar 'koala_man' Holen&lt;/a&gt; and contributors.&lt;/p&gt;
&lt;p&gt;Happy ShellChecking!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-other-resources" class="anchor" aria-hidden="true" href="#other-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The wiki has &lt;a href="https://github.com/koalaman/shellcheck/wiki/Checks"&gt;long form descriptions&lt;/a&gt; for each warning, e.g. &lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2221"&gt;SC2221&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;ShellCheck does not attempt to enforce any kind of formatting or indenting style, so also check out &lt;a href="https://github.com/mvdan/sh"&gt;shfmt&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>koalaman</author><guid isPermaLink="false">https://github.com/koalaman/shellcheck</guid><pubDate>Sat, 25 Jan 2020 00:01:00 GMT</pubDate></item><item><title>github/semantic #2 in Haskell, This week</title><link>https://github.com/github/semantic</link><description>&lt;p&gt;&lt;i&gt;Parsing, analyzing, and comparing source code across many languages&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-semantic" class="anchor" aria-hidden="true" href="#semantic"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Semantic&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;semantic&lt;/code&gt; is a Haskell library and command line tool for parsing, analyzing, and comparing source code.&lt;/p&gt;
&lt;p&gt;In a hurry? Check out our documentation of &lt;a href="docs/examples.md"&gt;example uses for the &lt;code&gt;semantic&lt;/code&gt; command line tool&lt;/a&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Table of Contents&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="#language-support"&gt;Language support&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="#development"&gt;Development&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="#technology-and-architecture"&gt;Technology and architecture&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="#licensing"&gt;Licensing&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Run &lt;code&gt;semantic --help&lt;/code&gt; for complete list of up-to-date options.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-parse" class="anchor" aria-hidden="true" href="#parse"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Parse&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Usage: semantic parse ([--sexpression] | [--json] | [--json-graph] | [--symbols]
                      | [--dot] | [--show] | [--quiet]) [FILES...]
  Generate parse trees for path(s)

Available options:
  --sexpression            Output s-expression parse trees (default)
  --json                   Output JSON parse trees
  --json-graph             Output JSON adjacency list
  --symbols                Output JSON symbol list
  --dot                    Output DOT graph parse trees
  --show                   Output using the Show instance (debug only, format
                           subject to change without notice)
  --quiet                  Don't produce output, but show timing stats
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-diff" class="anchor" aria-hidden="true" href="#diff"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Diff&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Usage: semantic diff ([--sexpression] | [--json] | [--json-graph] | [--toc] |
                     [--dot] | [--show]) [FILE_A] [FILE_B]
  Compute changes between paths

Available options:
  --sexpression            Output s-expression diff tree (default)
  --json                   Output JSON diff trees
  --json-graph             Output JSON diff trees
  --toc                    Output JSON table of contents diff summary
  --dot                    Output the diff as a DOT graph
  --show                   Output using the Show instance (debug only, format
                           subject to change without notice)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-graph" class="anchor" aria-hidden="true" href="#graph"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Graph&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Usage: semantic graph ([--imports] | [--calls]) [--packages] ([--dot] | [--json]
                      | [--show]) ([--root DIR] [--exclude-dir DIR]
                      DIR:LANGUAGE | FILE | --language ARG (FILES... | --stdin))
  Compute a graph for a directory or from a top-level entry point module

Available options:
  --imports                Compute an import graph (default)
  --calls                  Compute a call graph
  --packages               Include a vertex for the package, with edges from it
                           to each module
  --dot                    Output in DOT graph format (default)
  --json                   Output JSON graph
  --show                   Output using the Show instance (debug only, format
                           subject to change without notice)
  --root DIR               Root directory of project. Optional, defaults to
                           entry file/directory.
  --exclude-dir DIR        Exclude a directory (e.g. vendor)
  --language ARG           The language for the analysis.
  --stdin                  Read a list of newline-separated paths to analyze
                           from stdin.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-language-support" class="anchor" aria-hidden="true" href="#language-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Language support&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Priority&lt;/th&gt;
&lt;th align="left"&gt;Language&lt;/th&gt;
&lt;th align="center"&gt;Parse&lt;/th&gt;
&lt;th align="center"&gt;Assign&lt;/th&gt;
&lt;th align="center"&gt;Diff&lt;/th&gt;
&lt;th align="center"&gt;ToC&lt;/th&gt;
&lt;th align="center"&gt;Symbols&lt;/th&gt;
&lt;th align="center"&gt;Import graph&lt;/th&gt;
&lt;th align="center"&gt;Call graph&lt;/th&gt;
&lt;th align="center"&gt;Control flow graph&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;1&lt;/td&gt;
&lt;td align="left"&gt;Ruby&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png"&gt;🚧&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;2&lt;/td&gt;
&lt;td align="left"&gt;JavaScript&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png"&gt;🚧&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;3&lt;/td&gt;
&lt;td align="left"&gt;TypeScript&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png"&gt;🚧&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;4&lt;/td&gt;
&lt;td align="left"&gt;Python&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png"&gt;🚧&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;5&lt;/td&gt;
&lt;td align="left"&gt;Go&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png"&gt;🚧&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="left"&gt;PHP&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="left"&gt;Java&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png"&gt;🚧&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png"&gt;🚧&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png"&gt;🚧&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="large_orange_diamond" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f536.png"&gt;🔶&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="left"&gt;JSON&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;N/A&lt;/td&gt;
&lt;td align="center"&gt;N/A&lt;/td&gt;
&lt;td align="center"&gt;N/A&lt;/td&gt;
&lt;td align="center"&gt;N/A&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="left"&gt;JSX&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="large_orange_diamond" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f536.png"&gt;🔶&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="left"&gt;Haskell&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png"&gt;🚧&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png"&gt;🚧&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png"&gt;🚧&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="large_orange_diamond" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f536.png"&gt;🔶&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png"&gt;🚧&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="left"&gt;Markdown&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="large_orange_diamond" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f536.png"&gt;🔶&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;N/A&lt;/td&gt;
&lt;td align="center"&gt;N/A&lt;/td&gt;
&lt;td align="center"&gt;N/A&lt;/td&gt;
&lt;td align="center"&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; — Supported&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="large_orange_diamond" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f536.png"&gt;🔶&lt;/g-emoji&gt; — Partial support&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="construction" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png"&gt;🚧&lt;/g-emoji&gt; — Under development&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;semantic&lt;/code&gt; requires at least GHC 8.8.1 and Cabal 3.0. We strongly recommend using &lt;a href="https://www.haskell.org/ghcup/" rel="nofollow"&gt;&lt;code&gt;ghcup&lt;/code&gt;&lt;/a&gt; to sandbox GHC versions, as GHC packages installed through your OS's package manager may not install statically-linked versions of the GHC boot libraries. &lt;code&gt;semantic&lt;/code&gt; currently builds only on Unix systems; users of other operating systems may wish to use the &lt;a href="https://github.com/github/semantic/packages/11609"&gt;Docker images&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We use &lt;code&gt;cabal's&lt;/code&gt; &lt;a href="https://www.haskell.org/cabal/users-guide/nix-local-build-overview.html" rel="nofollow"&gt;Nix-style local builds&lt;/a&gt; for development. To get started quickly:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone git@github.com:github/semantic.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; semantic
script/bootstrap
cabal v2-build
cabal v2-test
cabal v2-run semantic -- --help&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;stack&lt;/code&gt; as a build tool is not officially supported; there is an unofficial &lt;a href="https://gist.github.com/jkachmar/f200caee83280f1f25e9cfa2dd2b16bb"&gt;&lt;code&gt;stack.yaml&lt;/code&gt;&lt;/a&gt; available, though we cannot make guarantees as to its stability.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-technology-and-architecture" class="anchor" aria-hidden="true" href="#technology-and-architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Technology and architecture&lt;/h2&gt;
&lt;p&gt;Architecturally, &lt;code&gt;semantic&lt;/code&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Reads blobs.&lt;/li&gt;
&lt;li&gt;Generates parse trees for those blobs with &lt;a href="https://github.com/tree-sitter/tree-sitter"&gt;tree-sitter&lt;/a&gt; (an incremental parsing system for programming tools).&lt;/li&gt;
&lt;li&gt;Assigns those trees into a generalized representation of syntax.&lt;/li&gt;
&lt;li&gt;Performs analysis, computes diffs, or just returns parse trees.&lt;/li&gt;
&lt;li&gt;Renders output in one of many supported formats.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Semantic leverages a number of interesting algorithms and techniques:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Myers' algorithm (SES) as described in the paper &lt;a href="http://www.xmailserver.org/diff2.pdf" rel="nofollow"&gt;&lt;em&gt;An O(ND) Difference Algorithm and Its Variations&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;RWS as described in the paper &lt;a href="https://db.in.tum.de/~finis/papers/RWS-Diff.pdf" rel="nofollow"&gt;&lt;em&gt;RWS-Diff: Flexible and Efficient Change Detection in Hierarchical Data&lt;/em&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Open unions and &lt;a href="http://www.cs.ru.nl/~W.Swierstra/Publications/DataTypesALaCarte.pdf" rel="nofollow"&gt;data types à la carte&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;An implementation of &lt;a href="https://plum-umd.github.io/abstracting-definitional-interpreters/" rel="nofollow"&gt;Abstracting Definitional Interpreters&lt;/a&gt; extended to work with an à la carte representation of syntax terms.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributions" class="anchor" aria-hidden="true" href="#contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions&lt;/h2&gt;
&lt;p&gt;Contributions are welcome!  Please see our &lt;a href="CONTRIBUTING.md"&gt;contribution
guidelines&lt;/a&gt; and our &lt;a href="CODE_OF_CONDUCT.md"&gt;code of conduct&lt;/a&gt; for
details on how to participate in our community.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-licensing" class="anchor" aria-hidden="true" href="#licensing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licensing&lt;/h2&gt;
&lt;p&gt;Semantic is licensed under the &lt;a href="LICENSE"&gt;MIT license&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>github</author><guid isPermaLink="false">https://github.com/github/semantic</guid><pubDate>Sat, 25 Jan 2020 00:02:00 GMT</pubDate></item><item><title>PostgREST/postgrest #3 in Haskell, This week</title><link>https://github.com/PostgREST/postgrest</link><description>&lt;p&gt;&lt;i&gt;REST API for any Postgres database&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="static/bigger-logo.png"&gt;&lt;img src="static/bigger-logo.png" alt="Logo" title="Logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.patreon.com/postgrest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b58bca7cfd49bb287996ec5e9507f6c553ffedcf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f6e6174652d50617472656f6e2d6f72616e67652e7376673f636f6c6f72423d463936383534" alt="Donate" data-canonical-src="https://img.shields.io/badge/Donate-Patreon-orange.svg?colorB=F96854" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.paypal.me/postgrest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d5d24e33e2f4b6fe53987419a21b203c03789a8f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f6e6174652d50617950616c2d677265656e2e737667" alt="Donate" data-canonical-src="https://img.shields.io/badge/Donate-PayPal-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://heroku.com/deploy?template=https://github.com/PostgREST/postgrest" rel="nofollow"&gt;
&lt;img src="https://camo.githubusercontent.com/28f245d50718262bcedf4ac848d3796b91016046/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322538362539315f4465706c6f795f746f2d4865726f6b752d3730353662662e737667" alt="Deploy" data-canonical-src="https://img.shields.io/badge/%E2%86%91_Deploy_to-Heroku-7056bf.svg" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://gitter.im/begriffs/postgrest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/287041f1718973583e609d554a404c31cde5c403/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6769747465722d6a6f696e253230636861742532302545322538362539322d627269676874677265656e2e737667" alt="Join the chat at https://gitter.im/begriffs/postgrest" data-canonical-src="https://img.shields.io/badge/gitter-join%20chat%20%E2%86%92-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://postgrest.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c7b42a2a9563380b01c0f92d8a41413c4c0047ef/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d627269676874677265656e2e7376673f7374796c653d666c6174" alt="Docs" data-canonical-src="https://img.shields.io/badge/docs-latest-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://hub.docker.com/r/postgrest/postgrest/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d7e55dc1eb22ebc1784a8b48e1a88b7594b40e00/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f706f737467726573742f706f737467726573742e737667" alt="Docker Stars" data-canonical-src="https://img.shields.io/docker/pulls/postgrest/postgrest.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/PostgREST/postgrest/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/455bc284b2fb56609b34548e1982be5701246913/68747470733a2f2f636972636c6563692e636f6d2f67682f506f737467524553542f706f737467726573742f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="Build Status" data-canonical-src="https://circleci.com/gh/PostgREST/postgrest/tree/master.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://hackage.haskell.org/package/postgrest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/28a718bacfb8ddfcdda28adfe98bbb0c1b3d5b05/68747470733a2f2f696d672e736869656c64732e696f2f6861636b6167652f762f706f737467726573742e7376673f6c6162656c3d6861636b616765" alt="Hackage docs" data-canonical-src="https://img.shields.io/hackage/v/postgrest.svg?label=hackage" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PostgREST serves a fully RESTful API from any existing PostgreSQL
database. It provides a cleaner, more standards-compliant, faster
API than you are likely to write from scratch.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sponsors" class="anchor" aria-hidden="true" href="#sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsors&lt;/h2&gt;
&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td align="center" valign="middle"&gt;
        &lt;a href="https://www.cybertec-postgresql.com/en/" rel="nofollow"&gt;
          &lt;img width="222px" src="static/cybertec.png" style="max-width:100%;"&gt;
        &lt;/a&gt;
      &lt;/td&gt;
      &lt;td align="center" valign="middle"&gt;
        &lt;a href="https://www.2ndquadrant.com/en/?utm_campaign=External%20Websites&amp;amp;utm_source=PostgREST&amp;amp;utm_medium=Logo" rel="nofollow"&gt;
          &lt;img width="222px" src="static/2ndquadrant.png" style="max-width:100%;"&gt;
        &lt;/a&gt;
      &lt;/td&gt;
      &lt;td align="center" valign="middle"&gt;
        &lt;a href="https://tryretool.com/?utm_source=sponsor&amp;amp;utm_campaign=postgrest" rel="nofollow"&gt;
          &lt;img width="222px" src="static/retool.png" style="max-width:100%;"&gt;
        &lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Big thanks to our sponsors! You can join them by supporting PostgREST on &lt;a href="https://www.patreon.com/postgrest" rel="nofollow"&gt;Patreon&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Download the binary (&lt;a href="https://github.com/PostgREST/postgrest/releases/latest"&gt;latest release&lt;/a&gt;)
for your platform.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Invoke for help:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;postgrest --help&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="http://postgrest.org" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Latest documentation is at &lt;a href="http://postgrest.org" rel="nofollow"&gt;postgrest.org&lt;/a&gt;. You can contribute to the docs in &lt;a href="https://github.com/PostgREST/postgrest-docs"&gt;PostgREST/postgrest-docs&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance&lt;/h2&gt;
&lt;p&gt;TLDR; subsecond response times for up to 2000 requests/sec on Heroku
free tier. If you're used to servers written in interpreted languages,
prepare to be pleasantly surprised by PostgREST performance.&lt;/p&gt;
&lt;p&gt;Three factors contribute to the speed. First the server is written
in &lt;a href="https://www.haskell.org/" rel="nofollow"&gt;Haskell&lt;/a&gt; using the
&lt;a href="http://www.yesodweb.com/blog/2011/03/preliminary-warp-cross-language-benchmarks" rel="nofollow"&gt;Warp&lt;/a&gt;
HTTP server (aka a compiled language with lightweight threads).
Next it delegates as much calculation as possible to the database
including&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Serializing JSON responses directly in SQL&lt;/li&gt;
&lt;li&gt;Data validation&lt;/li&gt;
&lt;li&gt;Authorization&lt;/li&gt;
&lt;li&gt;Combined row counting and retrieval&lt;/li&gt;
&lt;li&gt;Data post in single command (&lt;code&gt;returning *&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally it uses the database efficiently with the
&lt;a href="https://nikita-volkov.github.io/hasql-benchmarks/" rel="nofollow"&gt;Hasql&lt;/a&gt; library
by&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Keeping a pool of db connections&lt;/li&gt;
&lt;li&gt;Using the PostgreSQL binary protocol&lt;/li&gt;
&lt;li&gt;Being stateless to allow horizontal scaling&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-security" class="anchor" aria-hidden="true" href="#security"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security&lt;/h2&gt;
&lt;p&gt;PostgREST &lt;a href="http://postgrest.org/en/stable/auth.html" rel="nofollow"&gt;handles
authentication&lt;/a&gt; (via JSON Web
Tokens) and delegates authorization to the role information defined in
the database. This ensures there is a single declarative source of truth
for security.  When dealing with the database the server assumes the
identity of the currently authenticated user, and for the duration of
the connection cannot do anything the user themselves couldn't. Other
forms of authentication can be built on top of the JWT primitive. See
the docs for more information.&lt;/p&gt;
&lt;p&gt;PostgreSQL 9.5 supports true &lt;a href="http://www.postgresql.org/docs/9.5/static/ddl-rowsecurity.html" rel="nofollow"&gt;row-level
security&lt;/a&gt;.
In previous versions it can be simulated with triggers and
security-barrier views. Because the possible queries to the database
are limited to certain templates using
&lt;a href="http://blog.2ndquadrant.com/how-do-postgresql-security_barrier-views-work/" rel="nofollow"&gt;leakproof&lt;/a&gt;
functions, the trigger workaround does not compromise row-level
security.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-versioning" class="anchor" aria-hidden="true" href="#versioning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Versioning&lt;/h2&gt;
&lt;p&gt;A robust long-lived API needs the freedom to exist in multiple
versions. PostgREST does versioning through database schemas. This
allows you to expose tables and views without making the app brittle.
Underlying tables can be superseded and hidden behind public facing
views.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-self-documentation" class="anchor" aria-hidden="true" href="#self-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Self-documentation&lt;/h2&gt;
&lt;p&gt;PostgREST uses the &lt;a href="https://openapis.org/" rel="nofollow"&gt;OpenAPI&lt;/a&gt; standard to
generate up-to-date documentation for APIs. You can use a tool like
&lt;a href="https://github.com/swagger-api/swagger-ui"&gt;Swagger-UI&lt;/a&gt; to render
interactive documentation for demo requests against the live API server.&lt;/p&gt;
&lt;p&gt;This project uses HTTP to communicate other metadata as well.  For
instance the number of rows returned by an endpoint is reported by -
and limited with - range headers. More about
&lt;a href="http://begriffs.com/posts/2014-03-06-beyond-http-header-links.html" rel="nofollow"&gt;that&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-data-integrity" class="anchor" aria-hidden="true" href="#data-integrity"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Integrity&lt;/h2&gt;
&lt;p&gt;Rather than relying on an Object Relational Mapper and custom
imperative coding, this system requires you put declarative constraints
directly into your database. Hence no application can corrupt your
data (including your API server).&lt;/p&gt;
&lt;p&gt;The PostgREST exposes HTTP interface with safeguards to prevent
surprises, such as enforcing idempotent PUT requests.&lt;/p&gt;
&lt;p&gt;See examples of &lt;a href="http://www.tutorialspoint.com/postgresql/postgresql_constraints.htm" rel="nofollow"&gt;PostgreSQL
constraints&lt;/a&gt;
and the &lt;a href="http://postgrest.org/en/stable/api.html" rel="nofollow"&gt;API guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supporting-development" class="anchor" aria-hidden="true" href="#supporting-development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supporting development&lt;/h2&gt;
&lt;p&gt;You can help PostgREST ongoing maintenance and development by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Making a regular donation through Patreon &lt;a href="https://www.patreon.com/postgrest" rel="nofollow"&gt;https://www.patreon.com/postgrest&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Alternatively, you can make a one-time donation via Paypal &lt;a href="https://www.paypal.me/postgrest" rel="nofollow"&gt;https://www.paypal.me/postgrest&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Every donation will be spent on making PostgREST better for the whole community.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-thanks" class="anchor" aria-hidden="true" href="#thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thanks&lt;/h2&gt;
&lt;p&gt;The PostgREST organization is grateful to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The project &lt;a href="https://github.com/PostgREST/postgrest/blob/master/BACKERS.md"&gt;sponsors and backers&lt;/a&gt; who support PostgREST's development.&lt;/li&gt;
&lt;li&gt;The project &lt;a href="https://github.com/PostgREST/postgrest/graphs/contributors"&gt;contributors&lt;/a&gt; who have improved PostgREST immensely with their code
and good judgement. See more details in the &lt;a href="https://github.com/PostgREST/postgrest/blob/master/CHANGELOG.md"&gt;changelog&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The cool logo came from &lt;a href="https://github.com/casalaina"&gt;Mikey Casalaina&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>PostgREST</author><guid isPermaLink="false">https://github.com/PostgREST/postgrest</guid><pubDate>Sat, 25 Jan 2020 00:03:00 GMT</pubDate></item><item><title>elm/compiler #4 in Haskell, This week</title><link>https://github.com/elm/compiler</link><description>&lt;p&gt;&lt;i&gt;Compiler for Elm, a functional language for reliable webapps.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-elm" class="anchor" aria-hidden="true" href="#elm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Elm&lt;/h1&gt;
&lt;p&gt;A delightful language for reliable webapps.&lt;/p&gt;
&lt;p&gt;Check out the &lt;a href="http://elm-lang.org/" rel="nofollow"&gt;Home Page&lt;/a&gt;, &lt;a href="http://elm-lang.org/try" rel="nofollow"&gt;Try Online&lt;/a&gt;, or &lt;a href="http://guide.elm-lang.org/" rel="nofollow"&gt;The Official Guide&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="sparkles" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2728.png"&gt;✨&lt;/g-emoji&gt; &lt;a href="https://guide.elm-lang.org/install/elm.html" rel="nofollow"&gt;Install&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="sparkles" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2728.png"&gt;✨&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;For multiple versions, previous versions, and uninstallation, see the instructions &lt;a href="https://github.com/elm/compiler/blob/master/installers/README.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-help" class="anchor" aria-hidden="true" href="#help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help&lt;/h2&gt;
&lt;p&gt;If you are stuck, ask around on &lt;a href="http://elmlang.herokuapp.com/" rel="nofollow"&gt;the Elm slack channel&lt;/a&gt;. Folks are friendly and happy to help with questions!&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>elm</author><guid isPermaLink="false">https://github.com/elm/compiler</guid><pubDate>Sat, 25 Jan 2020 00:04:00 GMT</pubDate></item><item><title>jgm/pandoc #5 in Haskell, This week</title><link>https://github.com/jgm/pandoc</link><description>&lt;p&gt;&lt;i&gt;Universal markup converter&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;
&lt;h1&gt;&lt;a id="user-content-pandoc" class="anchor" aria-hidden="true" href="#pandoc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pandoc&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/jgm/pandoc/releases"&gt;&lt;img src="https://camo.githubusercontent.com/411f0ac7f05102f79a830ffdeb2ba4f087a667e9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6a676d2f70616e646f632e7376673f6c6162656c3d63757272656e742b72656c65617365" alt="github release" data-canonical-src="https://img.shields.io/github/release/jgm/pandoc.svg?label=current+release" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://hackage.haskell.org/package/pandoc" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4d03bb9489bd54187b8486c245dbc084d041e13f/68747470733a2f2f696d672e736869656c64732e696f2f6861636b6167652f762f70616e646f632e7376673f6c6162656c3d6861636b616765" alt="hackage release" data-canonical-src="https://img.shields.io/hackage/v/pandoc.svg?label=hackage" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://brewformulas.org/Pandoc" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/08d2230b9e9e2cbb12ea775d1bac8f50fd4275e8/68747470733a2f2f696d672e736869656c64732e696f2f686f6d65627265772f762f70616e646f632e737667" alt="homebrew" data-canonical-src="https://img.shields.io/homebrew/v/pandoc.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://stackage.org/lts/package/pandoc" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/44b5a4bcb04e663394157a419be74ff590f74ced/687474703a2f2f737461636b6167652e6f72672f7061636b6167652f70616e646f632f62616467652f6c7473" alt="stackage LTS package" data-canonical-src="http://stackage.org/package/pandoc/badge/lts" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/jgm/pandoc" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aedf8f0e0910d305ec01f09e62cdd2932308fc8a/68747470733a2f2f636972636c6563692e636f6d2f67682f6a676d2f70616e646f632e7376673f7374796c653d737667" alt="CircleCI" data-canonical-src="https://circleci.com/gh/jgm/pandoc.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/jgm/pandoc/actions"&gt;&lt;img src="https://github.com/jgm/pandoc/workflows/CI%20tests/badge.svg" alt="CI tests" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.gnu.org/licenses/gpl.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/768ccc754b99092765bcf90953180fa0a2b7f3f0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c76322b2d6c69676874677261792e737667" alt="license" data-canonical-src="https://img.shields.io/badge/license-GPLv2+-lightgray.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://groups.google.com/forum/#!forum/pandoc-discuss" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/065ea70a67e226da3fb10642858cfd74f1a8307e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f70616e646f632d646973637573732d7265642e7376673f7374796c653d736f6369616c" alt="pandoc-discuss on google groups" data-canonical-src="https://img.shields.io/badge/pandoc-discuss-red.svg?style=social" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-universal-markup-converter" class="anchor" aria-hidden="true" href="#the-universal-markup-converter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The universal markup converter&lt;/h2&gt;
&lt;p&gt;Pandoc is a &lt;a href="http://haskell.org" rel="nofollow"&gt;Haskell&lt;/a&gt; library for converting from
one markup format to another, and a command-line tool that uses this
library. It can convert &lt;em&gt;from&lt;/em&gt;&lt;/p&gt;
&lt;div id="user-content-input-formats"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;commonmark&lt;/code&gt; (&lt;a href="http://commonmark.org" rel="nofollow"&gt;CommonMark&lt;/a&gt; Markdown)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;creole&lt;/code&gt; (&lt;a href="http://www.wikicreole.org/wiki/Creole1.0" rel="nofollow"&gt;Creole 1.0&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docbook&lt;/code&gt; (&lt;a href="http://docbook.org" rel="nofollow"&gt;DocBook&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docx&lt;/code&gt; (&lt;a href="https://en.wikipedia.org/wiki/Office_Open_XML" rel="nofollow"&gt;Word docx&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dokuwiki&lt;/code&gt; (&lt;a href="https://www.dokuwiki.org/dokuwiki" rel="nofollow"&gt;DokuWiki markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;epub&lt;/code&gt; (&lt;a href="http://idpf.org/epub" rel="nofollow"&gt;EPUB&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fb2&lt;/code&gt;
(&lt;a href="http://www.fictionbook.org/index.php/Eng:XML_Schema_Fictionbook_2.1" rel="nofollow"&gt;FictionBook2&lt;/a&gt;
e-book)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gfm&lt;/code&gt; (&lt;a href="https://help.github.com/articles/github-flavored-markdown/"&gt;GitHub-Flavored
Markdown&lt;/a&gt;),
or the deprecated and less accurate &lt;code&gt;markdown_github&lt;/code&gt;; use
&lt;a href="https://pandoc.org/MANUAL.html#markdown-variants" rel="nofollow"&gt;&lt;code&gt;markdown_github&lt;/code&gt;&lt;/a&gt;
only if you need extensions not supported in
&lt;a href="https://pandoc.org/MANUAL.html#markdown-variants" rel="nofollow"&gt;&lt;code&gt;gfm&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;haddock&lt;/code&gt; (&lt;a href="https://www.haskell.org/haddock/doc/html/ch03s08.html" rel="nofollow"&gt;Haddock
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;html&lt;/code&gt; (&lt;a href="http://www.w3.org/html/" rel="nofollow"&gt;HTML&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ipynb&lt;/code&gt; (&lt;a href="https://nbformat.readthedocs.io/en/latest/" rel="nofollow"&gt;Jupyter
notebook&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jats&lt;/code&gt; (&lt;a href="https://jats.nlm.nih.gov" rel="nofollow"&gt;JATS&lt;/a&gt; XML)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jira&lt;/code&gt;
(&lt;a href="https://jira.atlassian.com/secure/WikiRendererHelpAction.jspa?section=all" rel="nofollow"&gt;Jira&lt;/a&gt;
wiki markup)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;json&lt;/code&gt; (JSON version of native AST)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;latex&lt;/code&gt; (&lt;a href="http://latex-project.org" rel="nofollow"&gt;LaTeX&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown&lt;/code&gt; (&lt;a href="https://pandoc.org/MANUAL.html#pandocs-markdown" rel="nofollow"&gt;Pandoc’s
Markdown&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown_mmd&lt;/code&gt;
(&lt;a href="http://fletcherpenney.net/multimarkdown/" rel="nofollow"&gt;MultiMarkdown&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown_phpextra&lt;/code&gt; (&lt;a href="https://michelf.ca/projects/php-markdown/extra/" rel="nofollow"&gt;PHP Markdown
Extra&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown_strict&lt;/code&gt; (original unextended
&lt;a href="http://daringfireball.net/projects/markdown/" rel="nofollow"&gt;Markdown&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mediawiki&lt;/code&gt; (&lt;a href="https://www.mediawiki.org/wiki/Help:Formatting" rel="nofollow"&gt;MediaWiki
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;man&lt;/code&gt; (&lt;a href="http://man7.org/linux/man-pages/man7/groff_man.7.html" rel="nofollow"&gt;roff
man&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;muse&lt;/code&gt; (&lt;a href="https://amusewiki.org/library/manual" rel="nofollow"&gt;Muse&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;native&lt;/code&gt; (native Haskell)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;odt&lt;/code&gt; (&lt;a href="http://en.wikipedia.org/wiki/OpenDocument" rel="nofollow"&gt;ODT&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;opml&lt;/code&gt; (&lt;a href="http://dev.opml.org/spec2.html" rel="nofollow"&gt;OPML&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;org&lt;/code&gt; (&lt;a href="http://orgmode.org" rel="nofollow"&gt;Emacs Org mode&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rst&lt;/code&gt;
(&lt;a href="http://docutils.sourceforge.net/docs/ref/rst/introduction.html" rel="nofollow"&gt;reStructuredText&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;t2t&lt;/code&gt; (&lt;a href="http://txt2tags.org" rel="nofollow"&gt;txt2tags&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;textile&lt;/code&gt; (&lt;a href="http://redcloth.org/textile" rel="nofollow"&gt;Textile&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tikiwiki&lt;/code&gt; (&lt;a href="https://doc.tiki.org/Wiki-Syntax-Text#The_Markup_Language_Wiki-Syntax" rel="nofollow"&gt;TikiWiki
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;twiki&lt;/code&gt; (&lt;a href="http://twiki.org/cgi-bin/view/TWiki/TextFormattingRules" rel="nofollow"&gt;TWiki
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vimwiki&lt;/code&gt; (&lt;a href="https://vimwiki.github.io" rel="nofollow"&gt;Vimwiki&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;It can convert &lt;em&gt;to&lt;/em&gt;&lt;/p&gt;
&lt;div id="user-content-output-formats"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;asciidoc&lt;/code&gt; (&lt;a href="http://www.methods.co.nz/asciidoc/" rel="nofollow"&gt;AsciiDoc&lt;/a&gt;) or
&lt;code&gt;asciidoctor&lt;/code&gt; (&lt;a href="https://asciidoctor.org/" rel="nofollow"&gt;AsciiDoctor&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beamer&lt;/code&gt; (&lt;a href="https://ctan.org/pkg/beamer" rel="nofollow"&gt;LaTeX beamer&lt;/a&gt; slide show)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;commonmark&lt;/code&gt; (&lt;a href="http://commonmark.org" rel="nofollow"&gt;CommonMark&lt;/a&gt; Markdown)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;context&lt;/code&gt; (&lt;a href="http://www.contextgarden.net/" rel="nofollow"&gt;ConTeXt&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docbook&lt;/code&gt; or &lt;code&gt;docbook4&lt;/code&gt; (&lt;a href="http://docbook.org" rel="nofollow"&gt;DocBook&lt;/a&gt; 4)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docbook5&lt;/code&gt; (DocBook 5)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docx&lt;/code&gt; (&lt;a href="https://en.wikipedia.org/wiki/Office_Open_XML" rel="nofollow"&gt;Word docx&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dokuwiki&lt;/code&gt; (&lt;a href="https://www.dokuwiki.org/dokuwiki" rel="nofollow"&gt;DokuWiki markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;epub&lt;/code&gt; or &lt;code&gt;epub3&lt;/code&gt; (&lt;a href="http://idpf.org/epub" rel="nofollow"&gt;EPUB&lt;/a&gt; v3 book)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;epub2&lt;/code&gt; (EPUB v2)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fb2&lt;/code&gt;
(&lt;a href="http://www.fictionbook.org/index.php/Eng:XML_Schema_Fictionbook_2.1" rel="nofollow"&gt;FictionBook2&lt;/a&gt;
e-book)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gfm&lt;/code&gt; (&lt;a href="https://help.github.com/articles/github-flavored-markdown/"&gt;GitHub-Flavored
Markdown&lt;/a&gt;),
or the deprecated and less accurate &lt;code&gt;markdown_github&lt;/code&gt;; use
&lt;a href="https://pandoc.org/MANUAL.html#markdown-variants" rel="nofollow"&gt;&lt;code&gt;markdown_github&lt;/code&gt;&lt;/a&gt;
only if you need extensions not supported in
&lt;a href="https://pandoc.org/MANUAL.html#markdown-variants" rel="nofollow"&gt;&lt;code&gt;gfm&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;haddock&lt;/code&gt; (&lt;a href="https://www.haskell.org/haddock/doc/html/ch03s08.html" rel="nofollow"&gt;Haddock
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;html&lt;/code&gt; or &lt;code&gt;html5&lt;/code&gt; (&lt;a href="http://www.w3.org/html/" rel="nofollow"&gt;HTML&lt;/a&gt;,
i.e. &lt;a href="http://www.w3.org/TR/html5/" rel="nofollow"&gt;HTML5&lt;/a&gt;/XHTML &lt;a href="https://www.w3.org/TR/html-polyglot/" rel="nofollow"&gt;polyglot
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;html4&lt;/code&gt; (&lt;a href="http://www.w3.org/TR/xhtml1/" rel="nofollow"&gt;XHTML&lt;/a&gt; 1.0 Transitional)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;icml&lt;/code&gt; (&lt;a href="http://wwwimages.adobe.com/www.adobe.com/content/dam/acom/en/devnet/indesign/sdk/cs6/idml/idml-cookbook.pdf" rel="nofollow"&gt;InDesign
ICML&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ipynb&lt;/code&gt; (&lt;a href="https://nbformat.readthedocs.io/en/latest/" rel="nofollow"&gt;Jupyter
notebook&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jats&lt;/code&gt; (&lt;a href="https://jats.nlm.nih.gov" rel="nofollow"&gt;JATS&lt;/a&gt; XML)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jira&lt;/code&gt;
(&lt;a href="https://jira.atlassian.com/secure/WikiRendererHelpAction.jspa?section=all" rel="nofollow"&gt;Jira&lt;/a&gt;
wiki markup)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;json&lt;/code&gt; (JSON version of native AST)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;latex&lt;/code&gt; (&lt;a href="http://latex-project.org" rel="nofollow"&gt;LaTeX&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;man&lt;/code&gt; (&lt;a href="http://man7.org/linux/man-pages/man7/groff_man.7.html" rel="nofollow"&gt;roff
man&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown&lt;/code&gt; (&lt;a href="https://pandoc.org/MANUAL.html#pandocs-markdown" rel="nofollow"&gt;Pandoc’s
Markdown&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown_mmd&lt;/code&gt;
(&lt;a href="http://fletcherpenney.net/multimarkdown/" rel="nofollow"&gt;MultiMarkdown&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown_phpextra&lt;/code&gt; (&lt;a href="https://michelf.ca/projects/php-markdown/extra/" rel="nofollow"&gt;PHP Markdown
Extra&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;markdown_strict&lt;/code&gt; (original unextended
&lt;a href="http://daringfireball.net/projects/markdown/" rel="nofollow"&gt;Markdown&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mediawiki&lt;/code&gt; (&lt;a href="https://www.mediawiki.org/wiki/Help:Formatting" rel="nofollow"&gt;MediaWiki
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ms&lt;/code&gt; (&lt;a href="http://man7.org/linux/man-pages/man7/groff_ms.7.html" rel="nofollow"&gt;roff
ms&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;muse&lt;/code&gt; (&lt;a href="https://amusewiki.org/library/manual" rel="nofollow"&gt;Muse&lt;/a&gt;),&lt;/li&gt;
&lt;li&gt;&lt;code&gt;native&lt;/code&gt; (native Haskell),&lt;/li&gt;
&lt;li&gt;&lt;code&gt;odt&lt;/code&gt; (&lt;a href="http://en.wikipedia.org/wiki/OpenDocument" rel="nofollow"&gt;OpenOffice text
document&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;opml&lt;/code&gt; (&lt;a href="http://dev.opml.org/spec2.html" rel="nofollow"&gt;OPML&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;opendocument&lt;/code&gt; (&lt;a href="http://opendocument.xml.org" rel="nofollow"&gt;OpenDocument&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;org&lt;/code&gt; (&lt;a href="http://orgmode.org" rel="nofollow"&gt;Emacs Org mode&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pdf&lt;/code&gt; (&lt;a href="https://www.adobe.com/pdf/" rel="nofollow"&gt;PDF&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plain&lt;/code&gt; (plain text),&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pptx&lt;/code&gt;
(&lt;a href="https://en.wikipedia.org/wiki/Microsoft_PowerPoint" rel="nofollow"&gt;PowerPoint&lt;/a&gt;
slide show)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rst&lt;/code&gt;
(&lt;a href="http://docutils.sourceforge.net/docs/ref/rst/introduction.html" rel="nofollow"&gt;reStructuredText&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rtf&lt;/code&gt; (&lt;a href="http://en.wikipedia.org/wiki/Rich_Text_Format" rel="nofollow"&gt;Rich Text
Format&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;texinfo&lt;/code&gt; (&lt;a href="http://www.gnu.org/software/texinfo/" rel="nofollow"&gt;GNU Texinfo&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;textile&lt;/code&gt; (&lt;a href="http://redcloth.org/textile" rel="nofollow"&gt;Textile&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;slideous&lt;/code&gt; (&lt;a href="http://goessner.net/articles/slideous/" rel="nofollow"&gt;Slideous&lt;/a&gt; HTML
and JavaScript slide show)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;slidy&lt;/code&gt; (&lt;a href="http://www.w3.org/Talks/Tools/Slidy/" rel="nofollow"&gt;Slidy&lt;/a&gt; HTML and
JavaScript slide show)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dzslides&lt;/code&gt; (&lt;a href="http://paulrouget.com/dzslides/" rel="nofollow"&gt;DZSlides&lt;/a&gt; HTML5 +
JavaScript slide show),&lt;/li&gt;
&lt;li&gt;&lt;code&gt;revealjs&lt;/code&gt; (&lt;a href="http://lab.hakim.se/reveal-js/" rel="nofollow"&gt;reveal.js&lt;/a&gt; HTML5 +
JavaScript slide show)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;s5&lt;/code&gt; (&lt;a href="http://meyerweb.com/eric/tools/s5/" rel="nofollow"&gt;S5&lt;/a&gt; HTML and JavaScript
slide show)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tei&lt;/code&gt; (&lt;a href="https://github.com/TEIC/TEI-Simple"&gt;TEI Simple&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;xwiki&lt;/code&gt; (&lt;a href="https://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/XWikiSyntax/" rel="nofollow"&gt;XWiki
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zimwiki&lt;/code&gt; (&lt;a href="http://zim-wiki.org/manual/Help/Wiki_Syntax.html" rel="nofollow"&gt;ZimWiki
markup&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;the path of a custom Lua writer, see &lt;a href="https://pandoc.org/MANUAL.html#custom-writers" rel="nofollow"&gt;Custom
writers&lt;/a&gt; below&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;Pandoc can also produce PDF output via LaTeX, Groff ms, or HTML.&lt;/p&gt;
&lt;p&gt;Pandoc’s enhanced version of Markdown includes syntax for tables,
definition lists, metadata blocks, footnotes, citations, math, and much
more. See the User’s Manual below under &lt;a href="https://pandoc.org/MANUAL.html#pandocs-markdown" rel="nofollow"&gt;Pandoc’s
Markdown&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Pandoc has a modular design: it consists of a set of readers, which
parse text in a given format and produce a native representation of the
document (an &lt;em&gt;abstract syntax tree&lt;/em&gt; or AST), and a set of writers, which
convert this native representation into a target format. Thus, adding an
input or output format requires only adding a reader or writer. Users
can also run custom pandoc filters to modify the intermediate AST (see
the documentation for &lt;a href="https://pandoc.org/filters.html" rel="nofollow"&gt;filters&lt;/a&gt; and
&lt;a href="https://pandoc.org/lua-filters.html" rel="nofollow"&gt;Lua filters&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Because pandoc’s intermediate representation of a document is less
expressive than many of the formats it converts between, one should not
expect perfect conversions between every format and every other. Pandoc
attempts to preserve the structural elements of a document, but not
formatting details such as margin size. And some document elements, such
as complex tables, may not fit into pandoc’s simple document model.
While conversions from pandoc’s Markdown to all formats aspire to be
perfect, conversions from formats more expressive than pandoc’s Markdown
can be expected to be lossy.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing&lt;/h2&gt;
&lt;p&gt;Here’s &lt;a href="INSTALL.md"&gt;how to install pandoc&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Pandoc’s website contains a full &lt;a href="https://pandoc.org/MANUAL.html" rel="nofollow"&gt;User’s
Guide&lt;/a&gt;. It is also available
&lt;a href="MANUAL.txt"&gt;here&lt;/a&gt; as pandoc-flavored Markdown. The website also
contains some &lt;a href="https://pandoc.org/demos.html" rel="nofollow"&gt;examples of the use of
pandoc&lt;/a&gt; and a limited &lt;a href="https://pandoc.org/try" rel="nofollow"&gt;online
demo&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Pull requests, bug reports, and feature requests are welcome. Please
make sure to read &lt;a href="CONTRIBUTING.md"&gt;the contributor guidelines&lt;/a&gt; before
opening a new issue.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;© 2006-2018 John MacFarlane (&lt;a href="mailto:jgm@berkeley.edu"&gt;jgm@berkeley.edu&lt;/a&gt;). Released under the
&lt;a href="http://www.gnu.org/copyleft/gpl.html" title="GNU General Public License" rel="nofollow"&gt;GPL&lt;/a&gt;,
version 2 or greater. This software carries no warranty of any kind.
(See COPYRIGHT for full copyright and warranty notices.)&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jgm</author><guid isPermaLink="false">https://github.com/jgm/pandoc</guid><pubDate>Sat, 25 Jan 2020 00:05:00 GMT</pubDate></item><item><title>purescript/purescript #6 in Haskell, This week</title><link>https://github.com/purescript/purescript</link><description>&lt;p&gt;&lt;i&gt;A strongly-typed language that compiles to JavaScript&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="http://purescript.org" rel="nofollow"&gt;&lt;img src="logo.png" alt="PureScript" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A small strongly typed programming language with expressive types that compiles to JavaScript, written in and inspired by Haskell.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://hackage.haskell.org/package/purescript" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/65eee210087673ce43767ef205145f4ddb37cdfe/68747470733a2f2f696d672e736869656c64732e696f2f6861636b6167652f762f707572657363726970742e737667" alt="Hackage" data-canonical-src="https://img.shields.io/hackage/v/purescript.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="http://travis-ci.org/purescript/purescript" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5ded54cb98fe3375b06254262e6cebe157eecefc/68747470733a2f2f6170692e7472617669732d63692e6f72672f707572657363726970742f707572657363726970742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://api.travis-ci.org/purescript/purescript.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-language-info" class="anchor" aria-hidden="true" href="#language-info"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Language info&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://purescript.org" rel="nofollow"&gt;PureScript home&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/purescript/purescript/releases"&gt;Releases &amp;amp; changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/purescript/purescript/blob/master/CONTRIBUTING.md"&gt;Contributing to PureScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://leanpub.com/purescript/read" rel="nofollow"&gt;PureScript book&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/purescript/documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://try.purescript.org" rel="nofollow"&gt;Try PureScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pursuit.purescript.org/" rel="nofollow"&gt;Pursuit Package Index&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-help" class="anchor" aria-hidden="true" href="#help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help!&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://functionalprogramming.slack.com/" rel="nofollow"&gt;#purescript @ FP Slack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discourse.purescript.org/" rel="nofollow"&gt;PureScript Language Forum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/tagged/purescript" rel="nofollow"&gt;PureScript on StackOverflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>purescript</author><guid isPermaLink="false">https://github.com/purescript/purescript</guid><pubDate>Sat, 25 Jan 2020 00:06:00 GMT</pubDate></item><item><title>hadolint/hadolint #7 in Haskell, This week</title><link>https://github.com/hadolint/hadolint</link><description>&lt;p&gt;&lt;i&gt;Dockerfile linter, validate inline bash, written in Haskell&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/hadolint/hadolint" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e6d207874dc54249e9d09cbca1941c2471077aff/68747470733a2f2f7472617669732d63692e6f72672f6861646f6c696e742f6861646f6c696e742e7376673f6272616e63683d6d6173746572" alt="Linux/OSX Build Status" data-canonical-src="https://travis-ci.org/hadolint/hadolint.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/hadolint/hadolint/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/eb7cd8d4d85529cc7f47bf648a68e8031b14f52d/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f2f6769746875622f6861646f6c696e742f6861646f6c696e743f7376673d74727565266272616e63683d6d6173746572" alt="Windows Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status//github/hadolint/hadolint?svg=true&amp;amp;branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://tldrlegal.com/l/gpl-3.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/71665acade75a335fdeb8ba3d8a5983471ff27e5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c2d2d332d626c75652e737667" alt="GPL-3 licensed" data-canonical-src="https://img.shields.io/badge/license-GPL--3-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/hadolint/hadolint/releases/latest"&gt;&lt;img src="https://camo.githubusercontent.com/620dbcfd64659be27db8b3c4849485e9b78c7a51/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6861646f6c696e742f6861646f6c696e742e737667" alt="GitHub release" data-canonical-src="https://img.shields.io/github/release/hadolint/hadolint.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href=""&gt;&lt;img src="https://camo.githubusercontent.com/ada7a5263c892948b81eb40488f10c288a5c3568/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6861646f6c696e742f6861646f6c696e742f746f74616c2e737667" alt="Github downloads" data-canonical-src="https://img.shields.io/github/downloads/hadolint/hadolint/total.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ed1547b1b7f6060ad464d180a0c28975ba876830/68747470733a2f2f6861646f6c696e742e6769746875622e696f2f6861646f6c696e742f696d672f6361745f636f6e7461696e65722e706e67"&gt;&lt;img align="right" alt="pipecat" width="150" src="https://camo.githubusercontent.com/ed1547b1b7f6060ad464d180a0c28975ba876830/68747470733a2f2f6861646f6c696e742e6769746875622e696f2f6861646f6c696e742f696d672f6361745f636f6e7461696e65722e706e67" data-canonical-src="https://hadolint.github.io/hadolint/img/cat_container.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-haskell-dockerfile-linter" class="anchor" aria-hidden="true" href="#haskell-dockerfile-linter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Haskell Dockerfile Linter&lt;/h1&gt;
&lt;p&gt;A smarter Dockerfile linter that helps you build &lt;a href="https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices" rel="nofollow"&gt;best practice&lt;/a&gt; Docker
images. The linter is parsing the Dockerfile into an AST and performs rules on
top of the AST. It is standing on the shoulders of &lt;a href="https://github.com/koalaman/shellcheck"&gt;ShellCheck&lt;/a&gt; to lint
the Bash code inside &lt;code&gt;RUN&lt;/code&gt; instructions.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hadolint.github.io/hadolint" rel="nofollow"&gt;&lt;g-emoji class="g-emoji" alias="globe_with_meridians" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f310.png"&gt;🌐&lt;/g-emoji&gt; &lt;strong&gt;Check the online version on
hadolint.github.io/hadolint&lt;/strong&gt;&lt;/a&gt;
&lt;a href="https://hadolint.github.io/hadolint" rel="nofollow"&gt;&lt;img src="screenshot.png" alt="Screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-use" class="anchor" aria-hidden="true" href="#how-to-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to use&lt;/h2&gt;
&lt;p&gt;You can run &lt;code&gt;hadolint&lt;/code&gt; locally to lint your Dockerfile.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;hadolint &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Dockerfile&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
hadolint --ignore DL3003 --ignore DL3006 &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Dockerfile&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; exclude specific rules&lt;/span&gt;
hadolint --trusted-registry my-company.com:500 &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Dockerfile&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Warn when using untrusted FROM images&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Docker comes to the rescue to provide an easy way how to run &lt;code&gt;hadolint&lt;/code&gt; on most
platforms.
Just pipe your &lt;code&gt;Dockerfile&lt;/code&gt; to &lt;code&gt;docker run&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker run --rm -i hadolint/hadolint &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; Dockerfile&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;p&gt;You can download prebuilt binaries for OSX, Windows and Linux from the latest
&lt;a href="https://github.com/hadolint/hadolint/releases/latest"&gt;release page&lt;/a&gt;. However, if it doesn't work for you, please fall back to
Docker, &lt;code&gt;brew&lt;/code&gt; or source installation.&lt;/p&gt;
&lt;p&gt;If you are on OSX you can use &lt;a href="https://brew.sh/" rel="nofollow"&gt;brew&lt;/a&gt; to install &lt;code&gt;hadolint&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;brew install hadolint&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On Windows you can use &lt;a href="https://github.com/lukesampson/scoop"&gt;scoop&lt;/a&gt; to install &lt;code&gt;hadolint&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-batchfile"&gt;&lt;pre&gt;scoop install hadolint&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As shown before, &lt;code&gt;hadolint&lt;/code&gt; is available as a Docker container:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker pull hadolint/hadolint&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you need a Docker container with shell access, use the Debian or Alpine
variants of the Docker image:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;docker pull hadolint/hadolint:latest-debian
docker pull hadolint/hadolint:latest-alpine&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also build &lt;code&gt;hadolint&lt;/code&gt; locally. You need &lt;a href="https://www.haskell.org/platform/" rel="nofollow"&gt;Haskell&lt;/a&gt; and the &lt;a href="http://docs.haskellstack.org/en/stable/install_and_upgrade.html" rel="nofollow"&gt;stack&lt;/a&gt;
build tool to build the binary.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/hadolint/hadolint
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; hadolint
stack install&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-configure" class="anchor" aria-hidden="true" href="#configure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configure&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;hadolint&lt;/code&gt; supports specifying the ignored rules using a configuration file. The configuration
file should be in &lt;code&gt;yaml&lt;/code&gt; format. This is one valid configuration file as an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;ignored&lt;/span&gt;:
  - &lt;span class="pl-s"&gt;DL3000&lt;/span&gt;
  - &lt;span class="pl-s"&gt;SC1010&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Additionally, &lt;code&gt;hadolint&lt;/code&gt; can warn you when images from untrusted repositories are being
used in Dockerfiles, you can append the &lt;code&gt;trustedRegistries&lt;/code&gt; keys to the configuration
file as shown below:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;ignored&lt;/span&gt;:
  - &lt;span class="pl-s"&gt;DL3000&lt;/span&gt;
  - &lt;span class="pl-s"&gt;SC1010&lt;/span&gt;

&lt;span class="pl-ent"&gt;trustedRegistries&lt;/span&gt;:
  - &lt;span class="pl-s"&gt;docker.io&lt;/span&gt;
  - &lt;span class="pl-s"&gt;my-company.com:5000&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configuration files can be used globally or per project. By default, &lt;code&gt;hadolint&lt;/code&gt; will look for
a configuration file in the current directory with the name &lt;code&gt;.hadolint.yaml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The global configuration file should be placed in the folder specified by &lt;code&gt;XDG_CONFIG_HOME&lt;/code&gt;,
with the name &lt;code&gt;hadolint.yaml&lt;/code&gt;. In summary, the following locations are valid for the configuration
file, in order or preference:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$PWD/.hadolint.yaml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$XDG_CONFIG_HOME/hadolint.yaml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/.config/hadolint.yaml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In windows, the &lt;code&gt;%LOCALAPPDATA%&lt;/code&gt; environment variable is used instead of &lt;code&gt;XDG_CONFIG_HOME&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Additionally, you can pass a custom configuration file in the command line with
the &lt;code&gt;--config&lt;/code&gt; option&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;hadolint --config /path/to/config.yaml Dockerfile&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-inline-ignores" class="anchor" aria-hidden="true" href="#inline-ignores"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inline ignores&lt;/h2&gt;
&lt;p&gt;It is also possible to ignore rules by using a special comment directly above the Dockerfile
instruction you want to make an exception for. Ignore rule comments look like
&lt;code&gt;# hadolint ignore=DL3001,SC1081&lt;/code&gt;. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-dockerfile"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; hadolint ignore=DL3006&lt;/span&gt;
&lt;span class="pl-k"&gt;FROM&lt;/span&gt; ubuntu

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; hadolint ignore=DL3003,SC1035&lt;/span&gt;
&lt;span class="pl-k"&gt;RUN&lt;/span&gt; cd /tmp &amp;amp;&amp;amp; echo &lt;span class="pl-s"&gt;"hello!"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Inline ignores will only work if place directly above the instruction.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-integrations" class="anchor" aria-hidden="true" href="#integrations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integrations&lt;/h2&gt;
&lt;p&gt;To get most of &lt;code&gt;hadolint&lt;/code&gt; it is useful to integrate it as a check to your CI
or to your editor to lint your &lt;code&gt;Dockerfile&lt;/code&gt; as you write it. See our
&lt;a href="docs/INTEGRATION.md"&gt;Integration&lt;/a&gt; docs.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-rules" class="anchor" aria-hidden="true" href="#rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rules&lt;/h2&gt;
&lt;p&gt;An incomplete list of implemented rules. Click on the error code to get more
detailed information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Rules with the prefix &lt;code&gt;DL&lt;/code&gt; originate from &lt;code&gt;hadolint&lt;/code&gt;. Take a look at
&lt;code&gt;Rules.hs&lt;/code&gt; to find the implementation of the rules.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rules with the &lt;code&gt;SC&lt;/code&gt; prefix originate from &lt;strong&gt;ShellCheck&lt;/strong&gt; (Only the most
common rules are listed, there are dozens more)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please &lt;a href="https://github.com/hadolint/hadolint/issues/new"&gt;create an issue&lt;/a&gt; if you have an idea for a good rule.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Rule&lt;/th&gt;
&lt;th align="left"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3000"&gt;DL3000&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use absolute WORKDIR.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3001"&gt;DL3001&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;For some bash commands it makes no sense running them in a Docker container like ssh, vim, shutdown, service, ps, free, top, kill, mount, ifconfig.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3002"&gt;DL3002&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Last user should not be root.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3003"&gt;DL3003&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use WORKDIR to switch to a directory.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3004"&gt;DL3004&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Do not use sudo as it leads to unpredictable behavior. Use a tool like gosu to enforce root.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3005"&gt;DL3005&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Do not use apt-get upgrade or dist-upgrade.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3006"&gt;DL3006&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Always tag the version of an image explicitly.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3007"&gt;DL3007&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Using latest is prone to errors if the image will ever update. Pin the version explicitly to a release tag.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3008"&gt;DL3008&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Pin versions in apt-get install.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3009"&gt;DL3009&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Delete the apt-get lists after installing something.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3010"&gt;DL3010&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use ADD for extracting archives into an image.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3011"&gt;DL3011&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Valid UNIX ports range from 0 to 65535.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3012"&gt;DL3012&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Provide an email address or URL as maintainer.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3013"&gt;DL3013&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Pin versions in pip.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3014"&gt;DL3014&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use the &lt;code&gt;-y&lt;/code&gt; switch.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3015"&gt;DL3015&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Avoid additional packages by specifying --no-install-recommends.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3016"&gt;DL3016&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Pin versions in &lt;code&gt;npm&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3017"&gt;DL3017&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Do not use &lt;code&gt;apk upgrade&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3018"&gt;DL3018&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Pin versions in apk add. Instead of &lt;code&gt;apk add &amp;lt;package&amp;gt;&lt;/code&gt; use &lt;code&gt;apk add &amp;lt;package&amp;gt;=&amp;lt;version&amp;gt;&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3019"&gt;DL3019&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use the &lt;code&gt;--no-cache&lt;/code&gt; switch to avoid the need to use &lt;code&gt;--update&lt;/code&gt; and remove &lt;code&gt;/var/cache/apk/*&lt;/code&gt; when done installing packages.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3020"&gt;DL3020&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use &lt;code&gt;COPY&lt;/code&gt; instead of &lt;code&gt;ADD&lt;/code&gt; for files and folders.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3021"&gt;DL3021&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;COPY&lt;/code&gt; with more than 2 arguments requires the last argument to end with &lt;code&gt;/&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3022"&gt;DL3022&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;COPY --from&lt;/code&gt; should reference a previously defined &lt;code&gt;FROM&lt;/code&gt; alias&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3023"&gt;DL3023&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;COPY --from&lt;/code&gt; cannot reference its own &lt;code&gt;FROM&lt;/code&gt; alias&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3024"&gt;DL3024&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;FROM&lt;/code&gt; aliases (stage names) must be unique&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3025"&gt;DL3025&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use arguments JSON notation for CMD and ENTRYPOINT arguments&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3026"&gt;DL3026&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use only an allowed registry in the FROM image&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3027"&gt;DL3027&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Do not use &lt;code&gt;apt&lt;/code&gt; as it is meant to be a end-user tool, use &lt;code&gt;apt-get&lt;/code&gt; or &lt;code&gt;apt-cache&lt;/code&gt; instead&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL3028"&gt;DL3028&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Pin versions in gem install. Instead of &lt;code&gt;gem install &amp;lt;gem&amp;gt;&lt;/code&gt; use &lt;code&gt;gem install &amp;lt;gem&amp;gt;:&amp;lt;version&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL4000"&gt;DL4000&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;MAINTAINER is deprecated.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL4001"&gt;DL4001&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Either use Wget or Curl but not both.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL4003"&gt;DL4003&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Multiple &lt;code&gt;CMD&lt;/code&gt; instructions found.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL4004"&gt;DL4004&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Multiple &lt;code&gt;ENTRYPOINT&lt;/code&gt; instructions found.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL4005"&gt;DL4005&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use &lt;code&gt;SHELL&lt;/code&gt; to change the default shell.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/hadolint/hadolint/wiki/DL4006"&gt;DL4006&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Set the &lt;code&gt;SHELL&lt;/code&gt; option -o pipefail before &lt;code&gt;RUN&lt;/code&gt; with a pipe in it&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1000"&gt;SC1000&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;$&lt;/code&gt; is not used specially and should therefore be escaped.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1001"&gt;SC1001&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;This &lt;code&gt;\c&lt;/code&gt; will be a regular &lt;code&gt;'c'&lt;/code&gt;  in this context.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1007"&gt;SC1007&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Remove space after &lt;code&gt;=&lt;/code&gt; if trying to assign a value (or for empty string, use &lt;code&gt;var='' ...&lt;/code&gt;).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1010"&gt;SC1010&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use semicolon or linefeed before &lt;code&gt;done&lt;/code&gt; (or quote to make it literal).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1018"&gt;SC1018&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;This is a unicode non-breaking space. Delete it and retype as space.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1035"&gt;SC1035&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;You need a space here&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1045"&gt;SC1045&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;It's not &lt;code&gt;foo &amp;amp;; bar&lt;/code&gt;, just &lt;code&gt;foo &amp;amp; bar&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1065"&gt;SC1065&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Trying to declare parameters? Don't. Use &lt;code&gt;()&lt;/code&gt; and refer to params as &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt; etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1066"&gt;SC1066&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Don't use $ on the left side of assignments.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1068"&gt;SC1068&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Don't put spaces around the &lt;code&gt;=&lt;/code&gt; in assignments.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1077"&gt;SC1077&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;For command expansion, the tick should slant left (` vs ´).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1078"&gt;SC1078&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Did you forget to close this double-quoted string?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1079"&gt;SC1079&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;This is actually an end quote, but due to next char, it looks suspect.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1081"&gt;SC1081&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Scripts are case sensitive. Use &lt;code&gt;if&lt;/code&gt;, not &lt;code&gt;If&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1083"&gt;SC1083&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;This &lt;code&gt;{/}&lt;/code&gt; is literal. Check expression (missing &lt;code&gt;;/\n&lt;/code&gt;?) or quote it.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1086"&gt;SC1086&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Don't use &lt;code&gt;$&lt;/code&gt; on the iterator name in for loops.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1087"&gt;SC1087&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Braces are required when expanding arrays, as in &lt;code&gt;${array[idx]}&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1095"&gt;SC1095&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;You need a space or linefeed between the function name and body.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1097"&gt;SC1097&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Unexpected &lt;code&gt;==&lt;/code&gt;. For assignment, use &lt;code&gt;=&lt;/code&gt;. For comparison, use &lt;code&gt;[/[[&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1098"&gt;SC1098&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Quote/escape special characters when using &lt;code&gt;eval&lt;/code&gt;, e.g. &lt;code&gt;eval "a=(b)"&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC1099"&gt;SC1099&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;You need a space before the &lt;code&gt;#&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2002"&gt;SC2002&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Useless cat. Consider &lt;code&gt;cmd &amp;lt; file | ..&lt;/code&gt; or &lt;code&gt;cmd file | ..&lt;/code&gt; instead.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2015"&gt;SC2015&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Note that &lt;code&gt;A &amp;amp;&amp;amp; B || C&lt;/code&gt; is not if-then-else. C may run when A is true.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2026"&gt;SC2026&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;This word is outside of quotes. Did you intend to 'nest '"'single quotes'"' instead'?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2028"&gt;SC2028&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;echo&lt;/code&gt; won't expand escape sequences. Consider &lt;code&gt;printf&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2035"&gt;SC2035&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use &lt;code&gt;./*glob*&lt;/code&gt; or &lt;code&gt;-- *glob*&lt;/code&gt; so names with dashes won't become options.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2039"&gt;SC2039&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;In POSIX sh, something is undefined.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2046"&gt;SC2046&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Quote this to prevent word splitting&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2086"&gt;SC2086&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Double quote to prevent globbing and word splitting.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2140"&gt;SC2140&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Word is in the form &lt;code&gt;"A"B"C"&lt;/code&gt; (B indicated). Did you mean &lt;code&gt;"ABC"&lt;/code&gt; or &lt;code&gt;"A\"B\"C"&lt;/code&gt;?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2154"&gt;SC2154&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;var is referenced but not assigned.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2155"&gt;SC2155&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Declare and assign separately to avoid masking return values.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/koalaman/shellcheck/wiki/SC2164"&gt;SC2164&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Use &lt;code&gt;cd ... || exit&lt;/code&gt; in case &lt;code&gt;cd&lt;/code&gt; fails.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-develop" class="anchor" aria-hidden="true" href="#develop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Develop&lt;/h2&gt;
&lt;p&gt;If you are an experienced Haskeller we would be really thankful if you would
tear our code apart in a review.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Clone repository&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone --recursive git@github.com:hadolint/hadolint.git&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install the dependencies&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;stack install&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-repl" class="anchor" aria-hidden="true" href="#repl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;REPL&lt;/h3&gt;
&lt;p&gt;The easiest way to try out the parser is using the REPL.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; start the repl&lt;/span&gt;
stack repl
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; parse instruction and look at AST representation&lt;/span&gt;
parseString &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FROM debian:jessie&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-tests" class="anchor" aria-hidden="true" href="#tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tests&lt;/h3&gt;
&lt;p&gt;Run unit tests.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;stack &lt;span class="pl-c1"&gt;test&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run integration tests.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./integration_test.sh&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-ast" class="anchor" aria-hidden="true" href="#ast"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AST&lt;/h3&gt;
&lt;p&gt;Dockerfile syntax is fully described in the &lt;a href="http://docs.docker.com/engine/reference/builder/" rel="nofollow"&gt;Dockerfile reference&lt;/a&gt;. Just take
a look at &lt;a href="https://www.stackage.org/haddock/nightly-2018-01-07/language-docker-2.0.1/Language-Docker-Syntax.html" rel="nofollow"&gt;Syntax.hs&lt;/a&gt; in the &lt;code&gt;language-docker&lt;/code&gt; project to see the AST definition.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-alternatives" class="anchor" aria-hidden="true" href="#alternatives"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alternatives&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;RedCoolBeans/&lt;a href="https://github.com/RedCoolBeans/dockerlint/"&gt;dockerlint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;projectatomic/&lt;a href="https://github.com/projectatomic/dockerfile_lint/"&gt;dockerfile_lint&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/article&gt;&lt;/div&gt;</description><author>hadolint</author><guid isPermaLink="false">https://github.com/hadolint/hadolint</guid><pubDate>Sat, 25 Jan 2020 00:07:00 GMT</pubDate></item><item><title>data61/fp-course #8 in Haskell, This week</title><link>https://github.com/data61/fp-course</link><description>&lt;p&gt;&lt;i&gt;Functional Programming Course&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="markdown" data-path="README.markdown"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-functional-programming-course" class="anchor" aria-hidden="true" href="#functional-programming-course"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Functional Programming Course&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/qfpl/assets/master/data61-transparent-bg.png"&gt;&lt;img src="https://raw.githubusercontent.com/qfpl/assets/master/data61-transparent-bg.png" alt="CSIRO's Data61" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-written-by-tony-morris--mark-hibberd-for-data61-formerly-nicta" class="anchor" aria-hidden="true" href="#written-by-tony-morris--mark-hibberd-for-data61-formerly-nicta"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Written by Tony Morris &amp;amp; Mark Hibberd for Data61 (formerly NICTA)&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-with-contributions-from-individuals-thanks" class="anchor" aria-hidden="true" href="#with-contributions-from-individuals-thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;With contributions from individuals (thanks!)&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-special-note-1" class="anchor" aria-hidden="true" href="#special-note-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Special note 1&lt;/h4&gt;
&lt;p&gt;If you have arrived here by &lt;a href="https://github.com/data61/fp-course"&gt;https://github.com/data61/fp-course&lt;/a&gt; and you are
looking for the &lt;em&gt;answers&lt;/em&gt; (not the exercises), please go to &lt;a href="https://github.com/tonymorris/fp-course"&gt;https://github.com/tonymorris/fp-course&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-special-note-2" class="anchor" aria-hidden="true" href="#special-note-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Special note 2&lt;/h4&gt;
&lt;p&gt;As of February 2017, this repository is taking the place of the repository hosted at
&lt;a href="https://github.com/NICTA/course"&gt;https://github.com/NICTA/course&lt;/a&gt; which is deprecated.&lt;/p&gt;
&lt;p&gt;Data61 replaces what was NICTA since July 2016. The new repository is located at
&lt;a href="https://github.com/data61/fp-course"&gt;https://github.com/data61/fp-course&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h4&gt;
&lt;p&gt;The course is structured according to a linear progression and uses the Haskell
programming language to learn programming concepts pertaining to functional
programming.&lt;/p&gt;
&lt;p&gt;Exercises are annotated with a comment containing the word "Exercise." The existing code compiles, however answers have
been replaced with a call to the Haskell &lt;code&gt;error&lt;/code&gt; function and so the code will throw an exception if it is run. Some
exercises contain tips, which are annotated with a preceding "Tip:". It is not necessary to adhere to tips. Tips are
provided for potential guidance, which may be discarded if you prefer a different path to a solution.&lt;/p&gt;
&lt;p&gt;The exercises are designed in a way that requires personal guidance, so if you
attempt it on your own and feel a little lost, this is normal. All the
instructions are not contained herein.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help&lt;/h3&gt;
&lt;p&gt;There are two mailing lists for asking questions. All questions are welcome,
however, your first post might be moderated. This is simply to prevent spam.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://groups.google.com/forum/#!forum/nicta-fp" rel="nofollow"&gt;[nicta-fp]&lt;/a&gt; is a Google
Group for any queries related to functional programming. This mailing list is
owned by Data61 and is open to the public. Questions relating to this course
are most welcome here.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://groups.google.com/forum/#!forum/haskell-exercises" rel="nofollow"&gt;[haskell-exercises]&lt;/a&gt;
is a Google Group for queries related specifically to this Data61 functional
programming course material. This mailing list is not owned by Data61, but is
run by others who are keen to share ideas relating to the course.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;#nicta-course on Freenode is an IRC channel that
is operated by others who are going through this course material on their
own time and effort.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;#qfpl on Freenode is the IRC channel of the
Queensland Functional Programming Lab - the team that runs the course in Brisbane.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;#scalaz on Freenode is an IRC channel that is operated
by others who are keen to share ideas relating to functional programming in
general. Most of the participants of this channel have completed the Data61
functional programming course to some extent. They are in various timezones
and share a passion for functional programming, so may be able to provide
relatively quick assistance with questions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install the Glasgow Haskell Compiler (GHC) version 8.0 or higher.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Change to the directory containing this document.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Execute the command &lt;code&gt;ghci&lt;/code&gt;, which will compile and load all the source code.
You may need to set permissions on the root directory and the ghci configuration
file, &lt;code&gt;chmod go-w .ghci ./&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Inspect the introductory modules to get a feel for Haskell's syntax, then move
on to the exercises starting with &lt;code&gt;Course.Optional&lt;/code&gt;. The
&lt;a href="#progression"&gt;Progression&lt;/a&gt; section of this document lists the recommended
order in which to attempt the exercises.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edit a source file to a proposed solution to an exercise. At the &lt;code&gt;ghci&lt;/code&gt;
prompt, issue the command &lt;code&gt;:reload&lt;/code&gt;. This will compile your solution and
reload it in the GHC interpreter. You may use &lt;code&gt;:r&lt;/code&gt; for short.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-tips-after-having-started" class="anchor" aria-hidden="true" href="#tips-after-having-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tips after having started&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Some questions take a particular form. These are called &lt;em&gt;WTF questions&lt;/em&gt;. WTF
questions are those of this form or similar:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;What does ____ mean?&lt;/li&gt;
&lt;li&gt;What does the ____ function mean?&lt;/li&gt;
&lt;li&gt;What is a ____ ?&lt;/li&gt;
&lt;li&gt;Where did ____ come from ?&lt;/li&gt;
&lt;li&gt;What is the structure of ____ ?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;They are all answerable with the &lt;code&gt;:info&lt;/code&gt; command. For example, suppose you
have the question, "What does the &lt;code&gt;swiggletwoop&lt;/code&gt; function mean?" You may
answer this at GHCi with:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; :info swiggletwoop&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You may also use &lt;code&gt;:i&lt;/code&gt; for short.&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;Functional Programming techniques rely heavily on types. This reliance may
feel foreign at first, however, it is an important part of this course. If
you wish to know the type of an expression or value, use &lt;code&gt;:type&lt;/code&gt;. For
example,&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; :type reverse&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;List t -&amp;gt; List t&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This tells you that the &lt;code&gt;reverse&lt;/code&gt; function takes a list of elements of some
arbitrary type (&lt;code&gt;t&lt;/code&gt;) and returns a list of elements of that same type. Try
it.&lt;/p&gt;
&lt;p&gt;You may also use &lt;code&gt;:t&lt;/code&gt; for short.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GHCi has TAB-completion. For example you might type the following:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; :type rev&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now hit the TAB key. If there is only one function in scope that begins with
the characters &lt;code&gt;rev&lt;/code&gt;, then that name will auto-complete. Try it. This
completion is context-sensitive. For example, it doesn't make sense to ask
for the type of a data type itself, so data type names will not auto-complete
in that context, however, if you ask for &lt;code&gt;:info&lt;/code&gt;, then they are included in
that context. Be aware of this when you use auto-complete.&lt;/p&gt;
&lt;p&gt;This also works for file names:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; readFile "/etc/pas"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now hit the TAB key. If there is only one existing filename on a path that
begins with &lt;code&gt;/etc/pas&lt;/code&gt;, then that name will auto-complete. Try it.&lt;/p&gt;
&lt;p&gt;If there is more than one identifier that can complete, hit TAB twice
quickly. This will present you with your options to complete.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Follow the types.&lt;/p&gt;
&lt;p&gt;You may find yourself in a position of being unsure how to proceed for a
given exercise. You are encouraged to adopt a different perspective. Instead
of asking how to proceed, ask how you might proceed while adhering to the
guideline provided by the types for the exercise at hand.&lt;/p&gt;
&lt;p&gt;It is possible to follow the types without achieving the desired goal,
however, this is reasonably unlikely at the start. As you become more reliant
on following the types, you will develop more trust in the potential paths
that they can take you, including identification of false paths.&lt;/p&gt;
&lt;p&gt;Where types fall short, use the tests written in comments above each exercise.
They can be copied and pasted into GHCi. You should also take the first step
of following the types. Do it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do not use tab characters&lt;/p&gt;
&lt;p&gt;Set up your text editor to use space characters rather than tabs.
Using tab characters in Haskell can lead to confusing error messages.
GHC will give you a warning if your program contains a tab character.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do not use the stack build tool. It does not work.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-running-the-tests" class="anchor" aria-hidden="true" href="#running-the-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running the tests&lt;/h3&gt;
&lt;p&gt;Tests are stored under the &lt;code&gt;src/Test/&lt;/code&gt; directory. Each module from the course that
has tests has a corresponding &lt;code&gt;&amp;lt;MODULE&amp;gt;Test.hs&lt;/code&gt; file. Within each test module,
tests for each function are grouped using the &lt;code&gt;testGroup&lt;/code&gt; function. Within each
test group there are test cases (&lt;code&gt;testCase&lt;/code&gt; function), and properties
(&lt;code&gt;testProperty&lt;/code&gt; function).&lt;/p&gt;
&lt;p&gt;Tests are run using a built-in test runner that has no requirements
beyond those of the course (a supported version of GHCi). By default,
the full test suite is loaded, and each module's tests are
exported. You can run the tests in GHCi like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; test test_List
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-specific-modules" class="anchor" aria-hidden="true" href="#specific-modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Specific modules&lt;/h4&gt;
&lt;p&gt;For convenience, each test module also exports individual tests. To run tests
from a single module, load it, and then run &lt;code&gt;test &amp;lt;tests&amp;gt;&lt;/code&gt;. For example, in
&lt;code&gt;GHCi&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; :l src/Test/ListTest.hs
&amp;gt;&amp;gt; test headOrTest
&amp;gt;&amp;gt; test productTest
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-reload-and-run-tests" class="anchor" aria-hidden="true" href="#reload-and-run-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;:reload&lt;/code&gt; and run tests&lt;/h4&gt;
&lt;p&gt;There is also a custom &lt;code&gt;:test&lt;/code&gt; command defined in &lt;code&gt;.ghci&lt;/code&gt; that will
invoke &lt;code&gt;:reload&lt;/code&gt; and then &lt;code&gt;test&lt;/code&gt; in a single action:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; :test test_List
&amp;gt;&amp;gt; :test headOrTest
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-doctest" class="anchor" aria-hidden="true" href="#doctest"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;doctest&lt;/h4&gt;
&lt;p&gt;The doctest tests are a mirror of the tests that reside in comments alongside
the code. They are not executable, but examples can be copied into GHCI.
Examples begin with &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; while properties begin with &lt;code&gt;prop&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-progression" class="anchor" aria-hidden="true" href="#progression"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Progression&lt;/h3&gt;
&lt;p&gt;We recommend you perform some exercises before others. The first step
is to inspect the introduction modules.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Course.ExactlyOne&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Course.Validation&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;They contain examples of data structures and Haskell syntax. They do not contain
exercises and exist to provide a cursory examination of Haskell syntax. The next
step is to complete the exercises in &lt;code&gt;Course.Optional&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;After this, we recommend the following progression of modules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Course.List&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Course.Functor&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Course.Applicative&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Course.Monad&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Course.FileIO&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Course.State&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Course.StateT&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Course.Extend&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Course.Comonad&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Course.Contravariant&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Course.Compose&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Course.Traversable&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Course.ListZipper&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Course.Parser&lt;/code&gt; &lt;em&gt;(see also &lt;code&gt;Course.Person&lt;/code&gt; for the parsing rules)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Course.MoreParser&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Course.JsonParser&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Course.Interactive&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Course.Anagrams&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Course.FastAnagrams&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Course.Cheque&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;During this progression, it is often the case that some exercises are abandoned
due to time constraints and the benefit of completing some exercises over
others. For example, in the progression, &lt;code&gt;Course.Functor&lt;/code&gt; to &lt;code&gt;Course.Monad&lt;/code&gt;, the
exercises repeat a similar theme. Instead, a participant may wish to do
different exercises, such as &lt;code&gt;Course.Parser&lt;/code&gt;. In this case, the remaining
answers are filled out, so that progress on to &lt;code&gt;Course.Parser&lt;/code&gt; can begin
(which depends on correct answers up to &lt;code&gt;Course.Monad&lt;/code&gt;). It is recommended to
take this deviation if it is felt that there is more reward in doing so.&lt;/p&gt;
&lt;p&gt;Answers for the exercises can be found here:
&lt;a href="https://github.com/tonymorris/fp-course"&gt;https://github.com/tonymorris/fp-course&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After these are completed, complete the exercises in the &lt;code&gt;projects&lt;/code&gt; directory.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-introducing-haskell" class="anchor" aria-hidden="true" href="#introducing-haskell"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introducing Haskell&lt;/h3&gt;
&lt;p&gt;This section is a guide for the instructor to introduce Haskell syntax. Each of
these points should be covered before attempting the exercises.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;values, assignment&lt;/li&gt;
&lt;li&gt;type signatures &lt;code&gt;::&lt;/code&gt; reads as &lt;em&gt;has the type&lt;/em&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;-&amp;gt;&lt;/code&gt; in a type signature is &lt;em&gt;right-associative&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;functions are values&lt;/li&gt;
&lt;li&gt;functions take arguments
&lt;ul&gt;
&lt;li&gt;functions take &lt;em&gt;only one argument&lt;/em&gt; but we approximate with spoken
language&lt;/li&gt;
&lt;li&gt;functions can be declared inline using &lt;em&gt;lambda expressions&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;the &lt;code&gt;\&lt;/code&gt; symbol in a lambda expression denotes a Greek lambda&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;operators, beginning with non-alpha character, are in infix position by
default
&lt;ul&gt;
&lt;li&gt;use in prefix position by surrounding with &lt;em&gt;(parentheses)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;regular identifiers, beginning with alpha character, are in prefix position by
default
&lt;ul&gt;
&lt;li&gt;use in infix position by surrounding with &lt;code&gt;backticks&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;polymorphism
&lt;ul&gt;
&lt;li&gt;type variables &lt;em&gt;always&lt;/em&gt; start with a lower-case character&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;data types, declared using the &lt;code&gt;data&lt;/code&gt; keyword
&lt;ul&gt;
&lt;li&gt;following the &lt;code&gt;data&lt;/code&gt; keyword is the &lt;em&gt;data type name&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;following the data type name are zero of more type variables&lt;/li&gt;
&lt;li&gt;then &lt;code&gt;=&lt;/code&gt; sign&lt;/li&gt;
&lt;li&gt;data types have zero or more constructors
&lt;ul&gt;
&lt;li&gt;data type constructors start with an upper-case character, or colon &lt;code&gt;(:)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;following each constructor is a list of zero or more &lt;em&gt;constructor arguments&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;between each constructor is a pipe symbol &lt;code&gt;(|)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;the &lt;code&gt;deriving&lt;/code&gt; keyword gives us default implementations for some functions
on that data type&lt;/li&gt;
&lt;li&gt;when constructors appear on the left side of &lt;code&gt;=&lt;/code&gt; we are &lt;em&gt;pattern-matching&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;when constructors appear on the right side of &lt;code&gt;=&lt;/code&gt; we are &lt;em&gt;constructing&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;type-classes&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-learning-the-tools" class="anchor" aria-hidden="true" href="#learning-the-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learning the tools&lt;/h3&gt;
&lt;p&gt;When this course is run in-person, some tools, particularly within Haskell, are
covered first.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GHCi
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:type&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:info&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;values&lt;/li&gt;
&lt;li&gt;type signatures
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;x :: T&lt;/code&gt; is read as &lt;em&gt;x is of the type T&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;functions are values&lt;/li&gt;
&lt;li&gt;functions take arguments&lt;/li&gt;
&lt;li&gt;functions take one argument&lt;/li&gt;
&lt;li&gt;lambda expressions&lt;/li&gt;
&lt;li&gt;operators (infix/prefix)
&lt;ul&gt;
&lt;li&gt;identifiers starting with &lt;code&gt;isAlpha&lt;/code&gt; are prefix by default, infix surrounded in backticks (`)&lt;/li&gt;
&lt;li&gt;other identifiers are infix by default, prefix surrounded in parentheses&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;data types
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;data&lt;/code&gt; keyword&lt;/li&gt;
&lt;li&gt;recursive data types&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;pattern matching&lt;/li&gt;
&lt;li&gt;&lt;code&gt;deriving&lt;/code&gt; keyword&lt;/li&gt;
&lt;li&gt;type-classes&lt;/li&gt;
&lt;li&gt;type parameters
&lt;ul&gt;
&lt;li&gt;always lower-case 'a'..'z'&lt;/li&gt;
&lt;li&gt;aka generics, templates C++, parametric polymorphism&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-parser-grammar-assistance" class="anchor" aria-hidden="true" href="#parser-grammar-assistance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Parser grammar assistance&lt;/h3&gt;
&lt;p&gt;The exercises in &lt;code&gt;Parser.hs&lt;/code&gt; can be assisted by stating problems in a specific way, with a conversion to code.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;English&lt;/th&gt;
&lt;th&gt;Parser library&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;and then&lt;/td&gt;
&lt;td&gt;&lt;code&gt;bindParser&lt;/code&gt; &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;always&lt;/td&gt;
&lt;td&gt;&lt;code&gt;valueParser&lt;/code&gt; &lt;code&gt;pure&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;or&lt;/td&gt;
&lt;td&gt;&lt;code&gt;|||&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0 or many&lt;/td&gt;
&lt;td&gt;&lt;code&gt;list&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1 or many&lt;/td&gt;
&lt;td&gt;&lt;code&gt;list1&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;is&lt;/td&gt;
&lt;td&gt;&lt;code&gt;is&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;exactly n&lt;/td&gt;
&lt;td&gt;&lt;code&gt;thisMany n&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fail&lt;/td&gt;
&lt;td&gt;&lt;code&gt;failed&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;call it x&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\x -&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-monad-comprehension" class="anchor" aria-hidden="true" href="#monad-comprehension"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Monad comprehension&lt;/h3&gt;
&lt;h5&gt;&lt;a id="user-content-do-notation" class="anchor" aria-hidden="true" href="#do-notation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;do-notation&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;insert the word &lt;code&gt;do&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;turn &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; into &lt;code&gt;&amp;lt;-&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;delete &lt;code&gt;-&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;delete &lt;code&gt;\&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;swap each side of &lt;code&gt;&amp;lt;-&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-linq" class="anchor" aria-hidden="true" href="#linq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LINQ&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;write &lt;code&gt;from&lt;/code&gt; on each line&lt;/li&gt;
&lt;li&gt;turn &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; into in&lt;/li&gt;
&lt;li&gt;delete &lt;code&gt;-&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;delete &lt;code&gt;\&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;swap each side of &lt;code&gt;in&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;turn value into &lt;code&gt;select&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-demonstrate-io-maintains-referential-transparency" class="anchor" aria-hidden="true" href="#demonstrate-io-maintains-referential-transparency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Demonstrate IO maintains referential transparency&lt;/h3&gt;
&lt;p&gt;Are these two programs, the same program?&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p1 ::
  IO ()
p1 =
  let file = "/tmp/file"
  in  do  _ &amp;lt;- writeFile file "abcdef"
          x &amp;lt;- readFile file
          _ &amp;lt;- putStrLn x
          _ &amp;lt;- writeFile file "ghijkl"
          y &amp;lt;- readFile file
          putStrLn (show (x, y))

p2 ::
  IO ()
p2 =
  let file = "/tmp/file"
      expr = readFile file
  in  do  _ &amp;lt;- writeFile file "abcdef"
          x &amp;lt;- expr
          _ &amp;lt;- putStrLn x
          _ &amp;lt;- writeFile file "ghijkl"
          y &amp;lt;- expr
          putStrLn (show (x, y))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What about these two programs?&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def writeFile(filename, contents):
    with open(filename, "w") as f:
        f.write(contents)

def readFile(filename):
    contents = ""
    with open(filename, "r") as f:
        contents = f.read()
        return contents

def p1():
    file = "/tmp/file"

    writeFile(file, "abcdef")
    x = readFile(file)
    print(x)
    writeFile(file, "ghijkl")
    y = readFile(file)
    print (x + y)

def p2():
    file = "/tmp/file"
    expr = readFile(file)

    writeFile(file, "abcdef")
    x = expr
    print(x)
    writeFile(file, "ghijkl")
    y = expr
    print (x + y)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-one-day" class="anchor" aria-hidden="true" href="#one-day"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;One-day&lt;/h3&gt;
&lt;p&gt;Sometimes this course material is condensed into one-day. In these cases, the
following exercises are recommended:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Optional&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mapOptional&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bindOptional&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(??)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(&amp;lt;+&amp;gt;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;List&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;headOr&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;product&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;length&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;map&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(++)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flatMap&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reverse&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Functor&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;instance Functor List&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;instance Functor Optional&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;instance Functor ((-&amp;gt;) t)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;instance Functor void&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Applicative&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;instance Applicative List&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;instance Applicative Optional&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;instance Applicative ((-&amp;gt;) t)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lift2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sequence&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FileIO&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-references" class="anchor" aria-hidden="true" href="#references"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://hackage.haskell.org/packages/archive/base/latest/doc/html/Prelude.html#v:error" rel="nofollow"&gt;The Haskell &lt;code&gt;error&lt;/code&gt; function&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://haskell.org/ghc" rel="nofollow"&gt;Glasgow Haskell Compiler&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>data61</author><guid isPermaLink="false">https://github.com/data61/fp-course</guid><pubDate>Sat, 25 Jan 2020 00:08:00 GMT</pubDate></item><item><title>idris-lang/Idris-dev #9 in Haskell, This week</title><link>https://github.com/idris-lang/Idris-dev</link><description>&lt;p&gt;&lt;i&gt;A Dependently Typed Functional Programming Language&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-idris" class="anchor" aria-hidden="true" href="#idris"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Idris&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/idris-lang/Idris-dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cd343118e69b413195fb1e0b5f1021d601498942/68747470733a2f2f7472617669732d63692e6f72672f69647269732d6c616e672f49647269732d6465762e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/idris-lang/Idris-dev.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/idrislang/idris-dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b982bf88ef78a9c9e286a6e6b2d5c11deb367e4b/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f786938797538316f793131333467376f2f6272616e63682f6d61737465723f7376673d74727565" alt="Appveyor build" data-canonical-src="https://ci.appveyor.com/api/projects/status/xi8yu81oy1134g7o/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://readthedocs.org/projects/idris/?badge=latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/864a08dfca8c9a1849bd393b65af8d267bb0b89a/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f69647269732f62616467652f3f76657273696f6e3d6c6174657374" alt="Documentation Status" data-canonical-src="https://readthedocs.org/projects/idris/badge/?version=latest" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://hackage.haskell.org/package/idris" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d7eccafe3d5829c82a4d58a90fd169ff427287a6/68747470733a2f2f696d672e736869656c64732e696f2f6861636b6167652f762f69647269732e737667" alt="Hackage" data-canonical-src="https://img.shields.io/hackage/v/idris.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://stackage.org/lts/package/idris" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2cd84fd43e84d9dd4bbbf82b83eeb978cdae15a7/68747470733a2f2f737461636b6167652e6f72672f7061636b6167652f69647269732f62616467652f6c7473" alt="Stackage LTS" data-canonical-src="https://stackage.org/package/idris/badge/lts" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://stackage.org/nightly/package/idris" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d8731729a1701110e153935f87391ca6c4e8b703/68747470733a2f2f737461636b6167652e6f72672f7061636b6167652f69647269732f62616467652f6e696768746c79" alt="Stackage Nightly" data-canonical-src="https://stackage.org/package/idris/badge/nightly" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.irccloud.com/invite?channel=%23idris&amp;amp;hostname=irc.freenode.net&amp;amp;port=6697&amp;amp;ssl=1" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/066b9c3b856a9da49aeac5f58e571e0bf1b827b5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4952432d25323369647269732d3165373266662e7376673f7374796c653d666c6174" alt="IRC" data-canonical-src="https://img.shields.io/badge/IRC-%23idris-1e72ff.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Idris (&lt;a href="https://idris-lang.org/" rel="nofollow"&gt;https://idris-lang.org/&lt;/a&gt;) is a general-purpose functional programming
language with dependent types.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation-guides" class="anchor" aria-hidden="true" href="#installation-guides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation Guides.&lt;/h2&gt;
&lt;p&gt;This repository represents the latest development version of the
language, and may contain bugs that are being actively worked on.  For
those who wish to use a more stable version of Idris please consider
installing the latest version that has been released on Hackage.
Installation instructions for various platforms can be
&lt;a href="https://github.com/idris-lang/Idris-dev/wiki/Installation-Instructions"&gt;found on the Idris Wiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;More information about building Idris from source has been detailed in the &lt;a href="INSTALL.md"&gt;Installation Guide&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-code-generation" class="anchor" aria-hidden="true" href="#code-generation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Generation&lt;/h2&gt;
&lt;p&gt;Idris has support for external code generators. Supplied with the distribution
is a C code generator to compile executables, and a JavaScript code generator
with support for node.js and browser JavaScript.&lt;/p&gt;
&lt;p&gt;More information about &lt;a href="https://idris.readthedocs.io/en/latest/reference/codegen.html" rel="nofollow"&gt;code generators can be found on the wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-more-information" class="anchor" aria-hidden="true" href="#more-information"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More Information&lt;/h2&gt;
&lt;p&gt;If you would like to find out more information, or ask questions, we
currently have a &lt;a href="https://github.com/idris-lang/Idris-dev/wiki"&gt;Wiki&lt;/a&gt;;
a &lt;a href="https://groups.google.com/forum/#!forum/idris-lang" rel="nofollow"&gt;mailing list&lt;/a&gt;,
and an &lt;code&gt;IRC&lt;/code&gt; channel &lt;code&gt;#idris&lt;/code&gt; on freenode. To join the IRC channel,
point your irc client to &lt;code&gt;chat.freenode.net&lt;/code&gt; then &lt;code&gt;/join #idris&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For those further interested in using Idris for projects, the
&lt;a href="https://github.com/idris-hackers"&gt;Idris Hackers&lt;/a&gt; GitHub organisation is
where some interesting projects are being hosted.&lt;/p&gt;
&lt;p&gt;For those interested in contributing to Idris directly we kindly ask that
prospective developers please consult the &lt;a href="CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; first.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>idris-lang</author><guid isPermaLink="false">https://github.com/idris-lang/Idris-dev</guid><pubDate>Sat, 25 Jan 2020 00:09:00 GMT</pubDate></item><item><title>digital-asset/ghcide #10 in Haskell, This week</title><link>https://github.com/digital-asset/ghcide</link><description>&lt;p&gt;&lt;i&gt;A library for building Haskell IDE tooling&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-ghcide---a-library-for-building-haskell-ide-tooling" class="anchor" aria-hidden="true" href="#ghcide---a-library-for-building-haskell-ide-tooling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;ghcide&lt;/code&gt; - A library for building Haskell IDE tooling&lt;/h1&gt;
&lt;p&gt;Note: &lt;code&gt;ghcide&lt;/code&gt; was previously called &lt;code&gt;hie-core&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Our vision is that you should build an IDE by combining:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/digital-asset/ghcide/master/img/vscode2.png"&gt;&lt;img src="https://raw.githubusercontent.com/digital-asset/ghcide/master/img/vscode2.png" alt="vscode" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mpickering/hie-bios"&gt;&lt;code&gt;hie-bios&lt;/code&gt;&lt;/a&gt; for determining where your files are, what are their dependencies, what extensions are enabled and so on;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ghcide&lt;/code&gt; (i.e. this library) for defining how to type check, when to type check, and producing diagnostic messages;&lt;/li&gt;
&lt;li&gt;A bunch of plugins that haven't yet been written, e.g. &lt;a href="https://github.com/ndmitchell/hlint"&gt;&lt;code&gt;hie-hlint&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://github.com/tweag/ormolu"&gt;&lt;code&gt;hie-ormolu&lt;/code&gt;&lt;/a&gt;, to choose which features you want;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alanz/haskell-lsp"&gt;&lt;code&gt;haskell-lsp&lt;/code&gt;&lt;/a&gt; for sending those messages to a &lt;a href="https://microsoft.github.io/language-server-protocol/" rel="nofollow"&gt;Language Server Protocol (LSP)&lt;/a&gt; server;&lt;/li&gt;
&lt;li&gt;An extension for your editor. We provide a &lt;a href="https://code.visualstudio.com/api" rel="nofollow"&gt;VS Code extension&lt;/a&gt; as &lt;code&gt;extension&lt;/code&gt; in this directory, although the components work in other LSP editors too (see below for instructions using Emacs).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are more details about our approach &lt;a href="https://4ta.uk/p/shaking-up-the-ide" rel="nofollow"&gt;in this blog post&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ghcide&lt;/code&gt; already exports the following features via the lsp protocol:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Feature&lt;/th&gt;
&lt;th&gt;LSP name&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Display error messages (parse errors, typecheck errors, etc.) and enabled warnings.&lt;/td&gt;
&lt;td&gt;diagnostics&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Go to definition in local package&lt;/td&gt;
&lt;td&gt;definition&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Display type and source module of values&lt;/td&gt;
&lt;td&gt;hover&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Remove redundant imports, replace suggested typos for values and module imports, fill type holes, insert missing type signatures, add suggested ghc extensions&lt;/td&gt;
&lt;td&gt;codeAction (quickfix)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-using-it" class="anchor" aria-hidden="true" href="#using-it"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using it&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-install-ghcide" class="anchor" aria-hidden="true" href="#install-ghcide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install &lt;code&gt;ghcide&lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-with-nix" class="anchor" aria-hidden="true" href="#with-nix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;With Nix&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://github.com/hercules-ci/ghcide-nix"&gt;See ghcide-nix repository&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-with-cabal-or-stack" class="anchor" aria-hidden="true" href="#with-cabal-or-stack"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;With Cabal or Stack&lt;/h4&gt;
&lt;p&gt;First install the &lt;code&gt;ghcide&lt;/code&gt; binary using &lt;code&gt;stack&lt;/code&gt; or &lt;code&gt;cabal&lt;/code&gt;, e.g.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;git clone https://github.com/digital-asset/ghcide.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd ghcide&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cabal install&lt;/code&gt; or &lt;code&gt;stack install&lt;/code&gt; (and make sure &lt;code&gt;~/.local/bin&lt;/code&gt; is on your &lt;code&gt;$PATH&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It's important that &lt;code&gt;ghcide&lt;/code&gt; is compiled with the same compiler you use to build your projects.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-test-ghcide" class="anchor" aria-hidden="true" href="#test-ghcide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Test &lt;code&gt;ghcide&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Next, check that &lt;code&gt;ghcide&lt;/code&gt; is capable of loading your code. Change to the project directory and run &lt;code&gt;ghcide&lt;/code&gt;, which will try and load everything using the same code as the IDE, but in a way that's much easier to understand. For example, taking the example of &lt;a href="https://github.com/ndmitchell/shake"&gt;&lt;code&gt;shake&lt;/code&gt;&lt;/a&gt;, running &lt;code&gt;ghcide&lt;/code&gt; gives some error messages and warnings before reporting at the end:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Files that failed:&lt;/span&gt;
&lt;span class="pl-c1"&gt; * .\model\Main.hs&lt;/span&gt;
&lt;span class="pl-c1"&gt; * .\model\Model.hs&lt;/span&gt;
&lt;span class="pl-c1"&gt; * .\model\Test.hs&lt;/span&gt;
&lt;span class="pl-c1"&gt; * .\model\Util.hs&lt;/span&gt;
&lt;span class="pl-c1"&gt; * .\output\docs\Main.hs&lt;/span&gt;
&lt;span class="pl-c1"&gt; * .\output\docs\Part_Architecture_md.hs&lt;/span&gt;
&lt;span class="pl-c1"&gt;Completed (152 worked, 6 failed)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Of the 158 files in Shake, as of this moment, 152 can be loaded by the IDE, but 6 can't (error messages for the reasons they can't be loaded are given earlier). The failing files are all prototype work or test output, meaning I can confidently use Shake.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;ghcide&lt;/code&gt; executable mostly relies on &lt;a href="https://github.com/mpickering/hie-bios"&gt;&lt;code&gt;hie-bios&lt;/code&gt;&lt;/a&gt; to do the difficult work of setting up your GHC environment. If it doesn't work, see &lt;a href="https://github.com/mpickering/hie-bios#readme"&gt;the &lt;code&gt;hie-bios&lt;/code&gt; manual&lt;/a&gt; to get it working. My default fallback is to figure it out by hand and create a &lt;code&gt;direct&lt;/code&gt; style &lt;a href="https://github.com/ndmitchell/shake/blob/master/hie.yaml"&gt;&lt;code&gt;hie.yaml&lt;/code&gt;&lt;/a&gt; listing the command line arguments to load the project.&lt;/p&gt;
&lt;p&gt;If you can't get &lt;code&gt;ghcide&lt;/code&gt; working outside the editor, see &lt;a href="docs/Setup.md"&gt;this setup troubleshooting guide&lt;/a&gt;. Once you have got &lt;code&gt;ghcide&lt;/code&gt; working outside the editor, the next step is to pick which editor to integrate with.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-with-vs-code" class="anchor" aria-hidden="true" href="#using-with-vs-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using with VS Code&lt;/h3&gt;
&lt;p&gt;You can install the VSCode extension from the &lt;a href="https://marketplace.visualstudio.com/items?itemName=DigitalAssetHoldingsLLC.ghcide" rel="nofollow"&gt;VSCode
marketplace&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-with-atom" class="anchor" aria-hidden="true" href="#using-with-atom"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using with Atom&lt;/h3&gt;
&lt;p&gt;You can follow the &lt;a href="https://github.com/moodmosaic/ide-haskell-ghcide#readme"&gt;instructions&lt;/a&gt; to install with &lt;code&gt;apm&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-with-sublime-text" class="anchor" aria-hidden="true" href="#using-with-sublime-text"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using with Sublime Text&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://packagecontrol.io/packages/LSP" rel="nofollow"&gt;LSP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Press Ctrl+Shift+P or Cmd+Shift+P in Sublime Text and search for &lt;em&gt;Preferences: LSP Settings&lt;/em&gt;, then paste these settings&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;{
  "clients":
  {
    "ghcide":
    {
      "enabled"   : true,
      "languageId": "haskell",
      "command"   : ["ghcide", "--lsp"],
      "scopes"    : ["source.haskell"],
      "syntaxes"  : ["Packages/Haskell/Haskell.sublime-syntax"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-using-with-emacs" class="anchor" aria-hidden="true" href="#using-with-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using with Emacs&lt;/h3&gt;
&lt;p&gt;If you don't already have &lt;a href="https://melpa.org/#/" rel="nofollow"&gt;MELPA&lt;/a&gt; package installation configured, visit MELPA &lt;a href="https://melpa.org/#/getting-started" rel="nofollow"&gt;getting started&lt;/a&gt; page to get set up. Then, install &lt;a href="https://melpa.org/#/use-package" rel="nofollow"&gt;&lt;code&gt;use-package&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now you have a choice of two different Emacs packages which can be used to communicate with the &lt;code&gt;ghcide&lt;/code&gt; LSP server:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lsp-ui&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eglot&lt;/code&gt; (requires Emacs 26.1+)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In each case, you can enable support by adding the shown lines to your &lt;code&gt;.emacs&lt;/code&gt;:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-lsp-ui" class="anchor" aria-hidden="true" href="#lsp-ui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lsp-ui&lt;/h4&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; LSP&lt;/span&gt;
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; flycheck
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (global-flycheck-mode &lt;span class="pl-c1"&gt;t&lt;/span&gt;))
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; yasnippet
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; lsp-mode
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:hook&lt;/span&gt; (&lt;span class="pl-c1"&gt;haskell-mode&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; lsp)
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; lsp)
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; lsp-ui
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; lsp-ui-mode)
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; lsp-haskell
 &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
 &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
 (&lt;span class="pl-k"&gt;setq&lt;/span&gt; lsp-haskell-process-path-hie &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ghcide&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 (&lt;span class="pl-k"&gt;setq&lt;/span&gt; lsp-haskell-process-args-hie '())
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Comment/uncomment this line to see interactions between lsp client/server.&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;(setq lsp-log-io t)&lt;/span&gt;
)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-eglot" class="anchor" aria-hidden="true" href="#eglot"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;eglot&lt;/h4&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; eglot
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;add-to-list&lt;/span&gt; &lt;span class="pl-c1"&gt;'eglot-server-programs&lt;/span&gt; '(&lt;span class="pl-c1"&gt;haskell-mode&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ghcide&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--lsp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))))&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-using-with-vimneovim" class="anchor" aria-hidden="true" href="#using-with-vimneovim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using with Vim/Neovim&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-languageclient-neovim" class="anchor" aria-hidden="true" href="#languageclient-neovim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LanguageClient-neovim&lt;/h4&gt;
&lt;p&gt;Install &lt;a href="https://github.com/autozimu/LanguageClient-neovim"&gt;LanguageClient-neovim&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Add this to your vim config:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;LanguageClient_rootMarkers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*.cabal&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;stack.yaml&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;LanguageClient_serverCommands&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rust&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rls&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;],
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;haskell&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ghcide&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;],
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Refer to &lt;code&gt;:he LanguageClient&lt;/code&gt; for more details on usage and configuration.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-vim-lsp" class="anchor" aria-hidden="true" href="#vim-lsp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;vim-lsp&lt;/h4&gt;
&lt;p&gt;Install &lt;a href="https://github.com/prabirshrestha/vim-lsp"&gt;vim-lsp&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Add this to your vim config:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;au&lt;/span&gt; &lt;span class="pl-c1"&gt;User&lt;/span&gt; lsp_setup &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;lsp#register_server&lt;/span&gt;({
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ghcide&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cmd&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: {server_info&lt;span class="pl-k"&gt;-&lt;/span&gt;&amp;gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/your/path/to/ghcide&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--lsp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]},
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;whitelist&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;haskell&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;],
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To verify it works move your cursor over a symbol and run &lt;code&gt;:LspHover&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cocnvim" class="anchor" aria-hidden="true" href="#cocnvim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coc.nvim&lt;/h3&gt;
&lt;p&gt;Install &lt;a href="https://github.com/neoclide/coc.nvim"&gt;coc.nvim&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Add this to your coc-settings.json (which you can edit with :CocConfig):&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;languageserver&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;haskell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;command&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ghcide&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;args&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--lsp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      ],
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rootPatterns&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.stack.yaml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.hie-bios&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BUILD.bazel&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cabal.config&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;package.yaml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      ],
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;filetypes&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lhs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;haskell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      ]
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's a nice article on setting up neovim and coc: &lt;a href="http://marco-lopes.com/articles/Vim-and-Haskell-in-2019/" rel="nofollow"&gt;Vim and Haskell in
2019&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-spacevim" class="anchor" aria-hidden="true" href="#spacevim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SpaceVim&lt;/h3&gt;
&lt;p&gt;In the &lt;code&gt;autocomplete&lt;/code&gt; layer, add the &lt;code&gt;autocomplete_method&lt;/code&gt; option to force the use of &lt;code&gt;coc&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-toml"&gt;&lt;pre&gt;[[&lt;span class="pl-en"&gt;layers&lt;/span&gt;]]
  &lt;span class="pl-smi"&gt;name&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;autocomplete&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;auto-completion-return-key-behavior&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;complete&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-smi"&gt;auto-completion-tab-key-behavior&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;smart&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  [&lt;span class="pl-en"&gt;options&lt;/span&gt;]
    &lt;span class="pl-smi"&gt;autocomplete_method&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;coc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add this to your coc-settings.json (which you can edit with :CocConfig):&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;languageserver&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;haskell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;command&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ghcide&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;args&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--lsp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      ],
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rootPatterns&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.stack.yaml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.hie-bios&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BUILD.bazel&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cabal.config&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;package.yaml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      ],
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;filetypes&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lhs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;haskell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      ]
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This example above describes a setup in which &lt;code&gt;ghcide&lt;/code&gt; is installed
using &lt;code&gt;stack install ghcide&lt;/code&gt; within a project.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-hacking-on-ghcide" class="anchor" aria-hidden="true" href="#hacking-on-ghcide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hacking on ghcide&lt;/h2&gt;
&lt;p&gt;To build and work on &lt;code&gt;ghcide&lt;/code&gt; itself, you can use Stack or cabal, e.g.,
running &lt;code&gt;stack test&lt;/code&gt; will execute the test suite.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-the-extension" class="anchor" aria-hidden="true" href="#building-the-extension"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the extension&lt;/h3&gt;
&lt;p&gt;For development, you can also the VSCode extension from this repository (see
&lt;a href="https://code.visualstudio.com/docs/setup/mac" rel="nofollow"&gt;https://code.visualstudio.com/docs/setup/mac&lt;/a&gt; for details on adding
&lt;code&gt;code&lt;/code&gt; to your &lt;code&gt;$PATH&lt;/code&gt;):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;cd extension/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm ci&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm run vscepackage&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;code --install-extension ghcide-0.0.1.vsix&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now opening a &lt;code&gt;.hs&lt;/code&gt; file should work with &lt;code&gt;ghcide&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-history-and-relationship-to-other-haskell-ides" class="anchor" aria-hidden="true" href="#history-and-relationship-to-other-haskell-ides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;History and relationship to other Haskell IDE's&lt;/h2&gt;
&lt;p&gt;The code behind &lt;code&gt;ghcide&lt;/code&gt; was originally developed by &lt;a href="https://digitalasset.com/" rel="nofollow"&gt;Digital Asset&lt;/a&gt; as part of the &lt;a href="https://github.com/digital-asset/daml"&gt;DAML programming language&lt;/a&gt;. DAML is a smart contract language targeting distributed-ledger runtimes, based on &lt;a href="https://www.haskell.org/ghc/" rel="nofollow"&gt;GHC&lt;/a&gt; with custom language extensions. The DAML programming language has &lt;a href="https://webide.daml.com/" rel="nofollow"&gt;an IDE&lt;/a&gt;, and work was done to separate off a reusable Haskell-only IDE (what is now &lt;code&gt;ghcide&lt;/code&gt;) which the &lt;a href="https://github.com/digital-asset/daml/tree/master/compiler/damlc"&gt;DAML IDE then builds upon&lt;/a&gt;. Since that time, there have been various &lt;a href="https://github.com/digital-asset/ghcide/graphs/contributors"&gt;non-Digital Asset contributors&lt;/a&gt;, in addition to continued investment by Digital Asset. All contributions require a &lt;a href="https://cla.digitalasset.com/digital-asset/ghcide" rel="nofollow"&gt;Contributor License Agreement&lt;/a&gt; that states you license the code under the &lt;a href="LICENSE"&gt;Apache License&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Haskell community &lt;a href="https://github.com/DanielG/ghc-mod"&gt;has&lt;/a&gt; &lt;a href="https://github.com/chrisdone/intero"&gt;various&lt;/a&gt; &lt;a href="https://github.com/rikvdkleij/intellij-haskell"&gt;IDE&lt;/a&gt; &lt;a href="http://leksah.org/" rel="nofollow"&gt;choices&lt;/a&gt;, but the one that has been gathering momentum is &lt;a href="https://github.com/haskell/haskell-ide-engine#readme"&gt;&lt;code&gt;haskell-ide-engine&lt;/code&gt;&lt;/a&gt;. Our project owes a debt of gratitude to the &lt;code&gt;haskell-ide-engine&lt;/code&gt;. We reuse libraries from their ecosystem, including &lt;a href="https://github.com/mpickering/hie-bios#readme"&gt;&lt;code&gt;hie-bios&lt;/code&gt;&lt;/a&gt; (a likely future environment setup layer in &lt;code&gt;haskell-ide-engine&lt;/code&gt;), &lt;a href="https://github.com/alanz/haskell-lsp#readme"&gt;&lt;code&gt;haskell-lsp&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://github.com/bubba/lsp-test#readme"&gt;&lt;code&gt;lsp-test&lt;/code&gt;&lt;/a&gt; (the &lt;code&gt;haskell-ide-engine&lt;/code&gt; &lt;a href="https://microsoft.github.io/language-server-protocol/" rel="nofollow"&gt;LSP protocol&lt;/a&gt; pieces). We make heavy use of their contributions to GHC itself, in particular the work to make GHC take string buffers rather than files. While &lt;code&gt;ghcide&lt;/code&gt; is not a part of &lt;code&gt;haskell-ide-engine&lt;/code&gt;, we feel it &lt;em&gt;could&lt;/em&gt; form the core of a future version - but such decisions are up to the &lt;code&gt;haskell-ide-engine&lt;/code&gt; contributors.&lt;/p&gt;
&lt;p&gt;The best summary of the architecture of &lt;code&gt;ghcide&lt;/code&gt; is available &lt;a href="https://www.youtube.com/watch?v=cijsaeWNf2E&amp;amp;list=PLxxF72uPfQVRdAsvj7THoys-nVj-oc4Ss" rel="nofollow"&gt;this talk&lt;/a&gt; (&lt;a href="https://ndmitchell.com/downloads/slides-making_a_haskell_ide-07_sep_2019.pdf" rel="nofollow"&gt;slides&lt;/a&gt;), given at &lt;a href="https://munihac.de/2019.html" rel="nofollow"&gt;MuniHac 2019&lt;/a&gt;. However, since that talk the project has renamed from &lt;code&gt;hie-core&lt;/code&gt; to &lt;code&gt;ghcide&lt;/code&gt;, and the repo has moved to &lt;a href="https://github.com/digital-asset/ghcide/"&gt;this location&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>digital-asset</author><guid isPermaLink="false">https://github.com/digital-asset/ghcide</guid><pubDate>Sat, 25 Jan 2020 00:10:00 GMT</pubDate></item><item><title>ndmitchell/shake #11 in Haskell, This week</title><link>https://github.com/ndmitchell/shake</link><description>&lt;p&gt;&lt;i&gt;Shake build system&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-shake----" class="anchor" aria-hidden="true" href="#shake----"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Shake &lt;a href="https://hackage.haskell.org/package/shake" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1907a9fb89d0984751a4ac52b93b433c7d413c39/68747470733a2f2f696d672e736869656c64732e696f2f6861636b6167652f762f7368616b652e7376673f6c6162656c3d4861636b616765" alt="Hackage version" data-canonical-src="https://img.shields.io/hackage/v/shake.svg?label=Hackage" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.stackage.org/package/shake" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/de5312701f89387469059e3dbc5d8e939bfd4d9d/68747470733a2f2f7777772e737461636b6167652e6f72672f7061636b6167652f7368616b652f62616467652f6e696768746c793f6c6162656c3d537461636b616765" alt="Stackage version" data-canonical-src="https://www.stackage.org/package/shake/badge/nightly?label=Stackage" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.org/ndmitchell/shake" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/89c669065047a557d80955c8890ef3484984dc76/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6e646d69746368656c6c2f7368616b652f6d61737465722e7376673f6c6162656c3d4c696e75782532306275696c64" alt="Linux build status" data-canonical-src="https://img.shields.io/travis/ndmitchell/shake/master.svg?label=Linux%20build" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://ci.appveyor.com/project/ndmitchell/shake" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/53e8d71708bf96a67f68acf9d431323c82ccc576/68747470733a2f2f696d672e736869656c64732e696f2f6170707665796f722f63692f6e646d69746368656c6c2f7368616b652f6d61737465722e7376673f6c6162656c3d57696e646f77732532306275696c64" alt="Windows build status" data-canonical-src="https://img.shields.io/appveyor/ci/ndmitchell/shake/master.svg?label=Windows%20build" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Shake is a tool for writing build systems - an alternative to make, Scons, Ant etc. Shake has been used commercially for over five years, running thousands of builds per day. The website for Shake users is at &lt;a href="https://shakebuild.com" rel="nofollow"&gt;shakebuild.com&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Why use Shake?&lt;/strong&gt; Shake lets you write large robust build systems, which deal properly with generated source files and run quickly. If you are writing a custom build system of any moderate size (more than a few rules) you should use Shake. The advantages over other build systems are detailed in the document &lt;a href="https://shakebuild.com/why" rel="nofollow"&gt;Why choose Shake?&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How do I use Shake?&lt;/strong&gt; Shake is a Haskell library that you use to define your rules. The &lt;a href="https://shakebuild.com/manual" rel="nofollow"&gt;Shake manual&lt;/a&gt; provides a walk through of a small but realistic example, assuming no Haskell knowledge.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackage.haskell.org/packages/archive/shake/latest/doc/html/Development-Shake.html" rel="nofollow"&gt;Generated documentation&lt;/a&gt; for all functions, includes lots of examples.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://neilmitchell.blogspot.co.uk/search/label/shake" rel="nofollow"&gt;Blog posts&lt;/a&gt; detailing ongoing development work.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ndmitchell.com/downloads/paper-shake_before_building-10_sep_2012.pdf" rel="nofollow"&gt;Academic paper&lt;/a&gt; on the underlying principles behind Shake.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-other-links" class="anchor" aria-hidden="true" href="#other-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other links&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hackage.haskell.org/package/shake" rel="nofollow"&gt;Download the Haskell package&lt;/a&gt; from Hackage and install it using Cabal.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/?fromgroups#!forum/shake-build-system" rel="nofollow"&gt;Mailing list&lt;/a&gt; for any questions/bugs/thoughts on Shake. If you need more information and aren't sure where to start, use the mailing list.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/tagged/shake-build-system" rel="nofollow"&gt;Questions&lt;/a&gt; can be asked on StackOverflow with the tag &lt;code&gt;shake-build-system&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Is your company using Shake? Write something public (even just a &lt;a href="https://twitter.com/ndm_haskell" rel="nofollow"&gt;tweet to &lt;code&gt;@ndm_haskell&lt;/code&gt;&lt;/a&gt;) and I'll include a link &lt;a href="https://shakebuild.com/#who-uses-shake" rel="nofollow"&gt;on the website&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ndmitchell</author><guid isPermaLink="false">https://github.com/ndmitchell/shake</guid><pubDate>Sat, 25 Jan 2020 00:11:00 GMT</pubDate></item></channel></rss>