<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: WebAssembly, This week</title><link>https://github.com/trending/webassembly?since=weekly</link><description>The top repositories on GitHub for webassembly, measured weekly</description><pubDate>Tue, 29 Oct 2019 03:38:05 GMT</pubDate><lastBuildDate>Tue, 29 Oct 2019 03:38:05 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>1400</ttl><item><title>AssemblyScript/assemblyscript #1 in WebAssembly, This week</title><link>https://github.com/AssemblyScript/assemblyscript</link><description>&lt;p&gt;&lt;i&gt;Definitely not a TypeScript to WebAssembly compiler ðŸš€&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content--assemblyscript" class="anchor" aria-hidden="true" href="#-assemblyscript"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/28916798?s=64"&gt;&lt;img src="https://avatars1.githubusercontent.com/u/28916798?s=64" alt="" style="max-width:100%;"&gt;&lt;/a&gt; AssemblyScript&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/AssemblyScript/assemblyscript/actions"&gt;&lt;img src="https://github.com/AssemblyScript/assemblyscript/workflows/CI/badge.svg" alt="Actions Status" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;AssemblyScript&lt;/strong&gt; compiles a strict subset of &lt;a href="http://www.typescriptlang.org" rel="nofollow"&gt;TypeScript&lt;/a&gt; (basically JavaScript with types) to &lt;a href="http://webassembly.org" rel="nofollow"&gt;WebAssembly&lt;/a&gt; using &lt;a href="https://github.com/WebAssembly/binaryen"&gt;Binaryen&lt;/a&gt;. It generates lean and mean WebAssembly modules while being just an &lt;code&gt;npm install&lt;/code&gt; away.&lt;/p&gt;
&lt;p&gt;Check out the &lt;a href="https://docs.assemblyscript.org" rel="nofollow"&gt;documentation&lt;/a&gt; or try it out in &lt;a href="https://webassembly.studio" rel="nofollow"&gt;WebAssembly Studio&lt;/a&gt;!&lt;/p&gt;
&lt;hr&gt;
&lt;h3 align="center"&gt;&lt;a id="user-content-our-sponsors" class="anchor" aria-hidden="true" href="#our-sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Our Sponsors&lt;/h3&gt;
&lt;p align="center"&gt;
  &lt;a href="https://opencollective.com/assemblyscript/tiers/sponsor/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e8033d900c1b33ae4f24bbd53ee3801b66b8dc49/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f617373656d626c797363726970742f74696572732f73706f6e736f722f302f6176617461722e737667" data-canonical-src="https://opencollective.com/assemblyscript/tiers/sponsor/0/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://opencollective.com/assemblyscript/tiers/sponsor/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/549b74eccb9b880acc0ed43806e02fe3c6e896ed/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f617373656d626c797363726970742f74696572732f73706f6e736f722f312f6176617461722e737667" data-canonical-src="https://opencollective.com/assemblyscript/tiers/sponsor/1/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://opencollective.com/assemblyscript/tiers/sponsor/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4dd7829e9897ebed4e2431a6d55ef4662ab110db/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f617373656d626c797363726970742f74696572732f73706f6e736f722f322f6176617461722e737667" data-canonical-src="https://opencollective.com/assemblyscript/tiers/sponsor/2/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://opencollective.com/assemblyscript/tiers/sponsor/3/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5008720d71082908fab308338bdfe44b64572d67/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f617373656d626c797363726970742f74696572732f73706f6e736f722f332f6176617461722e737667" data-canonical-src="https://opencollective.com/assemblyscript/tiers/sponsor/3/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://opencollective.com/assemblyscript/tiers/sponsor/4/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f994df79c501f887ca2340cbfb3798e546f6bf86/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f617373656d626c797363726970742f74696572732f73706f6e736f722f342f6176617461722e737667" data-canonical-src="https://opencollective.com/assemblyscript/tiers/sponsor/4/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://opencollective.com/assemblyscript/tiers/sponsor/5/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a7715f1b951b9ba3deae4ac919123b9c5fb37b10/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f617373656d626c797363726970742f74696572732f73706f6e736f722f352f6176617461722e737667" data-canonical-src="https://opencollective.com/assemblyscript/tiers/sponsor/5/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://opencollective.com/assemblyscript/tiers/sponsor/6/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/60e553bb7183a6bee722c31acdde1b8793c83f0b/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f617373656d626c797363726970742f74696572732f73706f6e736f722f362f6176617461722e737667" data-canonical-src="https://opencollective.com/assemblyscript/tiers/sponsor/6/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://opencollective.com/assemblyscript/tiers/sponsor/7/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/72f881bd446434d05828a37098cdd7559793da62/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f617373656d626c797363726970742f74696572732f73706f6e736f722f372f6176617461722e737667" data-canonical-src="https://opencollective.com/assemblyscript/tiers/sponsor/7/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://opencollective.com/assemblyscript/tiers/sponsor/8/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1d15970791dc59955f167cafc1f2a58a88456967/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f617373656d626c797363726970742f74696572732f73706f6e736f722f382f6176617461722e737667" data-canonical-src="https://opencollective.com/assemblyscript/tiers/sponsor/8/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://opencollective.com/assemblyscript/tiers/sponsor/9/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a986fd7a692f40689864898ee0d8e7e45809fc01/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f617373656d626c797363726970742f74696572732f73706f6e736f722f392f6176617461722e737667" data-canonical-src="https://opencollective.com/assemblyscript/tiers/sponsor/9/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 align="center"&gt;&lt;a id="user-content-our-backers" class="anchor" aria-hidden="true" href="#our-backers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Our Backers&lt;/h3&gt;
&lt;p align="center"&gt;
  &lt;a href="https://opencollective.com/assemblyscript#backers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e3f7ae81eb0f2337fc777ed2bce16969c41cd5a5/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f617373656d626c797363726970742f6261636b65722e7376673f6176617461724865696768743d3434" data-canonical-src="https://opencollective.com/assemblyscript/backer.svg?avatarHeight=44" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;The core team members and most contributors do this open source work in their free time. If you use AssemblyScript for a serious task or plan to do so, and you'd like us to invest more time on it, &lt;a href="https://opencollective.com/assemblyscript" rel="nofollow"&gt;please donate to our OpenCollective&lt;/a&gt;. By sponsoring this project, your logo will show up above. Thank you so much for your support!&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-motivation" class="anchor" aria-hidden="true" href="#motivation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Motivation&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;You are now able to write WebAssembly, without learning a new language, and harness all these benefits WebAssembly might offer you. I think that is kind of powerful. [...] It [AssemblyScript] is absolutely usable, and very enjoyable! - Surma, &lt;a href="https://youtu.be/njt-Qzw0mVY" rel="nofollow"&gt;WebAssembly for Web Developers (Google I/O â€™19)&lt;/a&gt; (May 8th, 2019)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;AssemblyScript was frictionless. Not only does it allow you to use TypeScript to write WebAssembly, [...] it also produces glue-free WebAssembly modules that are very small with decent performance. â€“ Surma, &lt;a href="https://developers.google.com/web/updates/2019/02/hotpath-with-wasm" rel="nofollow"&gt;Replacing a hot path in your app's JavaScript with WebAssembly&lt;/a&gt; (Feb 16, 2019)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Perhaps the fundamental issue [to get a small .wasm file] is that JavaScript is the only language for which the Web runtime is a perfect fit. Close relatives that were designed to compile to it, like TypeScript, can be very efficient as well. But languages like C, C++, Rust, and so forth were not originally designed for that purpose. â€“ Alon Zakai, &lt;a href="https://kripken.github.io/blog/binaryen/2018/04/18/rust-emscripten.html" rel="nofollow"&gt;Small WebAssembly Binaries with Rust + Emscripten&lt;/a&gt; (Apr 18, 2018)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;JavaScript's heyday as the only browser language is over, but most web developers are used to writing JavaScript, and learning a new syntax just to get access to WebAssembly is not (always) ideal. If only there was something in to bridge the gapâ€¦ â€“ Jani Tarvainen, &lt;a href="https://malloc.fi/typescript-bridge-javascript-webassembly" rel="nofollow"&gt;TypeScript is the bridge between JavaScript and WebAssembly&lt;/a&gt; (Feb 20, 2018)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;I do think [compiling TypeScript into WASM] is tremendously useful. It allows JavaScript developers to create WASM modules without having to learn C. â€“ Colin Eberhardt, &lt;a href="http://blog.scottlogic.com/2017/10/17/wasm-mandelbrot.html" rel="nofollow"&gt;Exploring different approaches to building WebAssembly modules&lt;/a&gt; (Oct 17, 2017)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-instructions" class="anchor" aria-hidden="true" href="#instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Instructions&lt;/h2&gt;
&lt;p&gt;For general usage instructions, please refer to the &lt;a href="https://docs.assemblyscript.org" rel="nofollow"&gt;documentation&lt;/a&gt; instead. The following sets up a &lt;em&gt;development environment&lt;/em&gt; of the compiler, for example if you plan to make a pull request:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$&amp;gt; git clone https://github.com/AssemblyScript/assemblyscript.git
$&amp;gt; cd assemblyscript
$&amp;gt; npm install
$&amp;gt; npm link
$&amp;gt; npm run clean
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that a fresh clone of the compiler will use the distribution files in &lt;code&gt;dist/&lt;/code&gt;, but after an &lt;code&gt;npm run clean&lt;/code&gt; it will run &lt;a href="./src"&gt;the sources&lt;/a&gt; directly through ts-node, which is useful in development. This condition can also be checked by running &lt;code&gt;asc -v&lt;/code&gt; (it is running the sources if it states &lt;code&gt;-dev&lt;/code&gt;). Also please see our &lt;a href="./CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt; before making your first pull request.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;To build an UMD bundle to &lt;code&gt;dist/assemblyscript.js&lt;/code&gt; (depends on &lt;a href="https://github.com/AssemblyScript/binaryen.js"&gt;binaryen.js&lt;/a&gt;), including a browser version of asc to &lt;code&gt;dist/asc.js&lt;/code&gt; (depends on assemblyscript.js):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$&amp;gt; npm run build
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Cleaning the distribution files (again):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$&amp;gt; npm run clean
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Linting potential changes:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$&amp;gt; npm run check
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Running the &lt;a href="./tests"&gt;tests&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$&amp;gt; npm test
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Running everything in order (lint, clean, test, build, test):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$&amp;gt; npm run all
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>AssemblyScript</author><guid isPermaLink="false">https://github.com/AssemblyScript/assemblyscript</guid><pubDate>Tue, 29 Oct 2019 00:00:00 GMT</pubDate></item></channel></rss>