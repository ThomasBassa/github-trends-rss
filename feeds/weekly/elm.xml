<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Elm, This week</title><link>https://github.com/trending/elm?since=weekly</link><description>The top repositories on GitHub for elm, measured weekly</description><pubDate>Sun, 17 Nov 2019 01:07:44 GMT</pubDate><lastBuildDate>Sun, 17 Nov 2019 01:07:44 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>elm/core #1 in Elm, This week</title><link>https://github.com/elm/core</link><description>&lt;p&gt;&lt;i&gt;Elm's core libraries&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-core-libraries" class="anchor" aria-hidden="true" href="#core-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core Libraries&lt;/h1&gt;
&lt;p&gt;Every Elm project needs this package!&lt;/p&gt;
&lt;p&gt;It provides &lt;strong&gt;basic functionality&lt;/strong&gt; like addition and subtraction as well as &lt;strong&gt;data structures&lt;/strong&gt; like lists, dictionaries, and sets.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;New to Elm?&lt;/strong&gt; Go to &lt;a href="https://elm-lang.org" rel="nofollow"&gt;elm-lang.org&lt;/a&gt; for an overview.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-default-imports" class="anchor" aria-hidden="true" href="#default-imports"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Default Imports&lt;/h2&gt;
&lt;p&gt;The modules in this package are so common, that some of them are imported by default in all Elm files. So it is as if every Elm file starts with these imports:&lt;/p&gt;
&lt;div class="highlight highlight-source-elm"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-c1"&gt;Basics&lt;/span&gt; &lt;span class="pl-k"&gt;exposing&lt;/span&gt; (..)
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-c1"&gt;List&lt;/span&gt; &lt;span class="pl-k"&gt;exposing&lt;/span&gt; (&lt;span class="pl-k"&gt;List&lt;/span&gt;, &lt;span class="pl-en"&gt;(::)&lt;/span&gt;)
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-c1"&gt;Maybe&lt;/span&gt; &lt;span class="pl-k"&gt;exposing&lt;/span&gt; (&lt;span class="pl-k"&gt;Maybe&lt;/span&gt;&lt;span class="pl-en"&gt;(..)&lt;/span&gt;)
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-c1"&gt;Result&lt;/span&gt; &lt;span class="pl-k"&gt;exposing&lt;/span&gt; (&lt;span class="pl-k"&gt;Result&lt;/span&gt;&lt;span class="pl-en"&gt;(..)&lt;/span&gt;)
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;exposing&lt;/span&gt; (&lt;span class="pl-k"&gt;String&lt;/span&gt;)
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-c1"&gt;Char&lt;/span&gt; &lt;span class="pl-k"&gt;exposing&lt;/span&gt; (&lt;span class="pl-k"&gt;Char&lt;/span&gt;)
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-c1"&gt;Tuple&lt;/span&gt;

&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-c1"&gt;Debug&lt;/span&gt;

&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-c1"&gt;Platform&lt;/span&gt; &lt;span class="pl-k"&gt;exposing&lt;/span&gt; ( &lt;span class="pl-k"&gt;Program&lt;/span&gt; )
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-c1"&gt;Platform.Cmd&lt;/span&gt; &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Cmd&lt;/span&gt; &lt;span class="pl-k"&gt;exposing&lt;/span&gt; ( &lt;span class="pl-k"&gt;Cmd&lt;/span&gt; )
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-c1"&gt;Platform.Sub&lt;/span&gt; &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Sub&lt;/span&gt; &lt;span class="pl-k"&gt;exposing&lt;/span&gt; ( &lt;span class="pl-k"&gt;Sub&lt;/span&gt; )&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The intention is to include things that are both extremely useful and very unlikely to overlap with anything that anyone will ever write in a library. By keeping the set of default imports relatively small, it also becomes easier to use whatever version of &lt;code&gt;map&lt;/code&gt; suits your fancy. Finally, it makes it easier to figure out where the heck a function is coming from.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>elm</author><guid isPermaLink="false">https://github.com/elm/core</guid><pubDate>Sun, 17 Nov 2019 00:01:00 GMT</pubDate></item><item><title>primait/pyxis-components #2 in Elm, This week</title><link>https://github.com/primait/pyxis-components</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-pyxis-ui-components-written-in-elm" class="anchor" aria-hidden="true" href="#pyxis-ui-components-written-in-elm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pyxis UI components written in &lt;code&gt;elm&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;Prima Design System public package for &lt;code&gt;elm&lt;/code&gt;.
It helps to build scalable UIs by mantaining consistency between design and components across different apps.&lt;/p&gt;
&lt;p&gt;Written in &lt;code&gt;elm@0.19&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;By using &lt;code&gt;elm&lt;/code&gt;'s type system we can predict behaviors of our components and test them, building strong, scalable ecosystem for our design.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-common-usage-patterns" class="anchor" aria-hidden="true" href="#common-usage-patterns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Common usage patterns&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-do" class="anchor" aria-hidden="true" href="#do"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Do&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Always&lt;/em&gt; use this package by defining namespaced &lt;code&gt;alias&lt;/code&gt;es.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Always&lt;/em&gt; keep documentation up-to-date while developing new features or changing &lt;code&gt;api&lt;/code&gt;s.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Always&lt;/em&gt; create an &lt;code&gt;Example.elm&lt;/code&gt; which shows up what the component you created does.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Always&lt;/em&gt; update the &lt;code&gt;frontend&lt;/code&gt; team and consider with them the need to &lt;code&gt;tag&lt;/code&gt; a new &lt;code&gt;release&lt;/code&gt; of &lt;code&gt;Pyxis&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-dont" class="anchor" aria-hidden="true" href="#dont"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Don't&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Never&lt;/em&gt; use exposing-all  (&lt;code&gt;exposing (..)&lt;/code&gt;) operator.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Never&lt;/em&gt; name modules with plural. For instance  &lt;code&gt;Accordions&lt;/code&gt; is &lt;em&gt;bad&lt;/em&gt;. &lt;code&gt;Accordion&lt;/code&gt; is &lt;em&gt;good&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Never&lt;/em&gt; repeat namespace in exposed methods. For instance &lt;code&gt;Accordion.initAccordion&lt;/code&gt; is &lt;em&gt;bad&lt;/em&gt;. &lt;code&gt;Accordion.init&lt;/code&gt; is &lt;em&gt;good&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import Prima.Pyxis.Accordion.Accordion as Accordion exposing (Config, State, Accordion)
...

view : Model -&amp;gt; List (Html Msg) 
view model =
   Accordion.render model.accordionState model.accordionConfig 
   
...
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-publishing-package" class="anchor" aria-hidden="true" href="#publishing-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Publishing package&lt;/h2&gt;
&lt;p&gt;Run the following commands after you had committed your work:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;./node_modules/.bin/elm bump&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Follow terminal advices to write documentation and confirm the package update (if needed)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./node_modules/.bin/elm publish&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-testing-package" class="anchor" aria-hidden="true" href="#testing-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing package&lt;/h2&gt;
&lt;p&gt;Run the &lt;code&gt;./node_modules/.bin/elm reactor&lt;/code&gt; command.
It will start a local server which points to  &lt;code&gt;http://localhost:8000&lt;/code&gt; .
&lt;em&gt;Remember to run Pyxis on local webserver in order to see styled form fields.&lt;/em&gt;
You can now navigate through the examples and test your work before publishing it.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>primait</author><guid isPermaLink="false">https://github.com/primait/pyxis-components</guid><pubDate>Sun, 17 Nov 2019 00:02:00 GMT</pubDate></item></channel></rss>