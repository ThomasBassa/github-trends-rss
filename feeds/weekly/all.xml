<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: All Languages, This week</title><link>https://github.com/trending/all?since=weekly</link><description>The top repositories on GitHub for all, measured weekly</description><pubDate>Tue, 19 Nov 2019 01:07:14 GMT</pubDate><lastBuildDate>Tue, 19 Nov 2019 01:07:14 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>CorentinJ/Real-Time-Voice-Cloning #1 in All Languages, This week</title><link>https://github.com/CorentinJ/Real-Time-Voice-Cloning</link><description>&lt;p&gt;&lt;i&gt;Clone a voice in 5 seconds to generate arbitrary speech in real-time&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-real-time-voice-cloning" class="anchor" aria-hidden="true" href="#real-time-voice-cloning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Real-Time Voice Cloning&lt;/h1&gt;
&lt;p&gt;This repository is an implementation of &lt;a href="https://arxiv.org/pdf/1806.04558.pdf" rel="nofollow"&gt;Transfer Learning from Speaker Verification to
Multispeaker Text-To-Speech Synthesis&lt;/a&gt; (SV2TTS) with a vocoder that works in real-time. Feel free to check &lt;a href="https://matheo.uliege.be/handle/2268.2/6801" rel="nofollow"&gt;my thesis&lt;/a&gt; if you're curious or if you're looking for info I haven't documented yet (don't hesitate to make an issue for that too). Mostly I would recommend giving a quick look to the figures beyond the introduction.&lt;/p&gt;
&lt;p&gt;SV2TTS is a three-stage deep learning framework that allows to create a numerical representation of a voice from a few seconds of audio, and to use it to condition a text-to-speech model trained to generalize to new voices.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video demonstration&lt;/strong&gt; (click the picture):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=-O_hYhToKoA" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9c33f78be8afe656503da974c478ea2ba2647db7/68747470733a2f2f692e696d6775722e636f6d2f386c46556c677a2e706e67" alt="Toolbox demo" data-canonical-src="https://i.imgur.com/8lFUlgz.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-papers-implemented" class="anchor" aria-hidden="true" href="#papers-implemented"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Papers implemented&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;URL&lt;/th&gt;
&lt;th&gt;Designation&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;Implementation source&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://arxiv.org/pdf/1806.04558.pdf" rel="nofollow"&gt;&lt;strong&gt;1806.04558&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;SV2TTS&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;This repo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://arxiv.org/pdf/1802.08435.pdf" rel="nofollow"&gt;1802.08435&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;WaveRNN (vocoder)&lt;/td&gt;
&lt;td&gt;Efficient Neural Audio Synthesis&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/fatchord/WaveRNN"&gt;fatchord/WaveRNN&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://arxiv.org/pdf/1712.05884.pdf" rel="nofollow"&gt;1712.05884&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Tacotron 2 (synthesizer)&lt;/td&gt;
&lt;td&gt;Natural TTS Synthesis by Conditioning Wavenet on Mel Spectrogram Predictions&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/Rayhane-mamah/Tacotron-2"&gt;Rayhane-mamah/Tacotron-2&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://arxiv.org/pdf/1710.10467.pdf" rel="nofollow"&gt;1710.10467&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;GE2E (encoder)&lt;/td&gt;
&lt;td&gt;Generalized End-To-End Loss for Speaker Verification&lt;/td&gt;
&lt;td&gt;This repo&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-news" class="anchor" aria-hidden="true" href="#news"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;News&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;13/11/19&lt;/strong&gt;: I'm sorry that I can't maintain this repo as much as I wish I could. I'm working full time on improving voice cloning techniques and I don't have the time to share my improvements here. Plus this repo relies on a lot of old tensorflow code and it's hard to work with. If you're a researcher, then this repo might be of use to you. &lt;strong&gt;If you just want to clone your voice&lt;/strong&gt;, do check our demo on &lt;a href="https://www.resemble.ai/" rel="nofollow"&gt;Resemble.AI&lt;/a&gt; - it can run for free but it will be a bit slower, and it will give much better results than this repo.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;20/08/19:&lt;/strong&gt; I'm working on &lt;a href="https://github.com/resemble-ai/Resemblyzer"&gt;resemblyzer&lt;/a&gt;, an independent package for the voice encoder. You can use your trained encoder models from this repo with it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;06/07/19:&lt;/strong&gt; Need to run within a docker container on a remote server? See &lt;a href="https://sean.lane.sh/posts/2019/07/Running-the-Real-Time-Voice-Cloning-project-in-Docker/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;25/06/19:&lt;/strong&gt; Experimental support for low-memory GPUs (~2gb) added for the synthesizer. Pass &lt;code&gt;--low_mem&lt;/code&gt; to &lt;code&gt;demo_cli.py&lt;/code&gt; or &lt;code&gt;demo_toolbox.py&lt;/code&gt; to enable it. It adds a big overhead, so it's not recommended if you have enough VRAM.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick start&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h3&gt;
&lt;p&gt;You will need the following whether you plan to use the toolbox only or to retrain the models.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python 3.7&lt;/strong&gt;. Python 3.6 might work too, but I wouldn't go lower because I make extensive use of pathlib.&lt;/p&gt;
&lt;p&gt;Run &lt;code&gt;pip install -r requirements.txt&lt;/code&gt; to install the necessary packages. Additionally you will need &lt;a href="https://pytorch.org/get-started/locally/" rel="nofollow"&gt;PyTorch&lt;/a&gt; (&amp;gt;=1.0.1).&lt;/p&gt;
&lt;p&gt;A GPU is mandatory, but you don't necessarily need a high tier GPU if you only want to use the toolbox.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pretrained-models" class="anchor" aria-hidden="true" href="#pretrained-models"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pretrained models&lt;/h3&gt;
&lt;p&gt;Download the latest &lt;a href="https://github.com/CorentinJ/Real-Time-Voice-Cloning/wiki/Pretrained-models"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-preliminary" class="anchor" aria-hidden="true" href="#preliminary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Preliminary&lt;/h3&gt;
&lt;p&gt;Before you download any dataset, you can begin by testing your configuration with:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python demo_cli.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If all tests pass, you're good to go.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-datasets" class="anchor" aria-hidden="true" href="#datasets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Datasets&lt;/h3&gt;
&lt;p&gt;For playing with the toolbox alone, I only recommend downloading &lt;a href="http://www.openslr.org/resources/12/train-clean-100.tar.gz" rel="nofollow"&gt;&lt;code&gt;LibriSpeech/train-clean-100&lt;/code&gt;&lt;/a&gt;. Extract the contents as &lt;code&gt;&amp;lt;datasets_root&amp;gt;/LibriSpeech/train-clean-100&lt;/code&gt; where &lt;code&gt;&amp;lt;datasets_root&amp;gt;&lt;/code&gt; is a directory of your choosing. Other datasets are supported in the toolbox, see &lt;a href="https://github.com/CorentinJ/Real-Time-Voice-Cloning/wiki/Training#datasets"&gt;here&lt;/a&gt;. You're free not to download any dataset, but then you will need your own data as audio files or you will have to record it with the toolbox.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-toolbox" class="anchor" aria-hidden="true" href="#toolbox"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Toolbox&lt;/h3&gt;
&lt;p&gt;You can then try the toolbox:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python demo_toolbox.py -d &amp;lt;datasets_root&amp;gt;&lt;/code&gt;&lt;br&gt;
or&lt;br&gt;
&lt;code&gt;python demo_toolbox.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;depending on whether you downloaded any datasets. If you are running an X-server or if you have the error &lt;code&gt;Aborted (core dumped)&lt;/code&gt;, see &lt;a href="https://github.com/CorentinJ/Real-Time-Voice-Cloning/issues/11#issuecomment-504733590"&gt;this issue&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-wiki" class="anchor" aria-hidden="true" href="#wiki"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Wiki&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;How it all works&lt;/strong&gt; (WIP - &lt;a href="https://github.com/CorentinJ/Real-Time-Voice-Cloning/wiki/How-it-all-works"&gt;stub&lt;/a&gt;, you might be better off reading my thesis until it's done)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CorentinJ/Real-Time-Voice-Cloning/wiki/Training"&gt;&lt;strong&gt;Training models yourself&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Training with other data/languages&lt;/strong&gt; (WIP - see &lt;a href="https://github.com/CorentinJ/Real-Time-Voice-Cloning/issues/30#issuecomment-507864097"&gt;here&lt;/a&gt; for now)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CorentinJ/Real-Time-Voice-Cloning/wiki/TODO-&amp;amp;-planned-features"&gt;&lt;strong&gt;TODO and planned features&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributions--issues" class="anchor" aria-hidden="true" href="#contributions--issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions &amp;amp; Issues&lt;/h2&gt;
&lt;p&gt;I'm working full-time as of June 2019. I don't have time to maintain this repo nor reply to issues. Sorry.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>CorentinJ</author><guid isPermaLink="false">https://github.com/CorentinJ/Real-Time-Voice-Cloning</guid><pubDate>Tue, 19 Nov 2019 00:01:00 GMT</pubDate></item><item><title>menzi11/BullshitGenerator #2 in All Languages, This week</title><link>https://github.com/menzi11/BullshitGenerator</link><description>&lt;p&gt;&lt;i&gt; Needs to generate some texts to test if my GUI rendering codes good or not. so I made this.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-狗屁不通文章生成器" class="anchor" aria-hidden="true" href="#狗屁不通文章生成器"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;狗屁不通文章生成器&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-bullshitgenerator" class="anchor" aria-hidden="true" href="#bullshitgenerator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;BullshitGenerator&lt;/h1&gt;
&lt;p&gt;偶尔需要一些中文文字用于GUI开发时测试文本渲染. &lt;strong&gt;本项目只做这一项, 请勿用于其他任何用途&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Needs to generate some texts to test if my GUI rendering codes good or not. so I made this.&lt;/p&gt;
&lt;p&gt;本项目为python3版本, 还有由suulnnka修改在线版, 使用更加方便:
&lt;a href="https://suulnnka.github.io/BullshitGenerator/index.html" rel="nofollow"&gt;https://suulnnka.github.io/BullshitGenerator/index.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下一步计划:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;防止文章过于内容重复&lt;/li&gt;
&lt;li&gt;加入更多啰嗦话.&lt;/li&gt;
&lt;li&gt;加入马三立&amp;lt;开会迷&amp;gt;里的内容&lt;/li&gt;
&lt;li&gt;加入手写体直接渲染出图片的功能(&lt;strong&gt;仅仅用于测试本人的打印机是否工作正常, 请勿做它用&lt;/strong&gt;).&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-关于pull-requests" class="anchor" aria-hidden="true" href="#关于pull-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;关于Pull requests:&lt;/h2&gt;
&lt;p&gt;鄙人每个requests都会仔细阅读, 但因近期事情较多, merge未必及时, 毕竟是业余项目, 请大家见谅. 如果未来实在更新不及时, 也欢迎有志之士替代本人继续本项目.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-关于中文变量名" class="anchor" aria-hidden="true" href="#关于中文变量名"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;关于中文变量名:&lt;/h2&gt;
&lt;p&gt;平时撸码鄙人是不写中文变量名的, 本项目中的中文变量名只是最开始瞎写的时候边写语料边写代码时懒得切英文输入法了. 不过既然如此就保持吧!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-关于生成算法" class="anchor" aria-hidden="true" href="#关于生成算法"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;关于生成算法&lt;/h2&gt;
&lt;p&gt;鄙人才疏学浅并不会任何自然语言处理相关算法. 而且目前比较偏爱简单有效的方式达到目的方式. 除非撞到了天花板, 否则暂时不会引入任何神经网络等算法. 不过欢迎任何人另开分支实现更复杂, 效果更好的算法. 不过除非效果拔群, 否则鄙人暂时不会融合.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>menzi11</author><guid isPermaLink="false">https://github.com/menzi11/BullshitGenerator</guid><pubDate>Tue, 19 Nov 2019 00:02:00 GMT</pubDate></item><item><title>jgraph/drawio #3 in All Languages, This week</title><link>https://github.com/jgraph/drawio</link><description>&lt;p&gt;&lt;i&gt;Source to www.draw.io&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/jgraph/drawio" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f9cb06fda9b6edfd8c9b5ed5b55820dcb811d60e/68747470733a2f2f7472617669732d63692e6f72672f6a67726170682f64726177696f2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/jgraph/drawio.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.draw.io" rel="nofollow"&gt;draw.io&lt;/a&gt; is an online diagramming web site that delivers the source in this project. It is a production-grade deployment, with full &lt;a href="https://github.com/jgraph/security-privacy-legal"&gt;security process&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;draw.io is a client-side, static web application. There is no user authentication or data storage concept in this repo. The online version stores data in mainstream cloud storage options, currently Google Drive, OneDrive, Dropbox, GitHub, Gitlab or Trello.&lt;/p&gt;
&lt;p&gt;There are a range of &lt;a href="https://about.draw.io/integrations-ecosystem/" rel="nofollow"&gt;integrations into other tools&lt;/a&gt;, some by this core team, some by third-parties.&lt;/p&gt;
&lt;p&gt;draw.io has an official &lt;a href="https://github.com/jgraph/docker-drawio"&gt;Docker image&lt;/a&gt; for local deployment, as well as &lt;a href="https://github.com/jgraph/drawio-desktop"&gt;Desktop versions&lt;/a&gt; for MacOS, Linux and Windows.&lt;/p&gt;
&lt;p&gt;draw.io uses the &lt;a href="https://github.com/jgraph/mxgraph"&gt;mxGraph library&lt;/a&gt; as the base of the stack, with the &lt;a href="https://github.com/jgraph/mxgraph/tree/master/javascript/examples/grapheditor"&gt;GraphEditor example&lt;/a&gt; from mxGraph as the base of the application part. The mxGraph library build used is stored under /etc/mxgraph/mxClient.js.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;draw.io is licensed under the Apache v2.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;p&gt;A development guide is being started on the GitHub project wiki. There is a &lt;a href="http://stackoverflow.com/questions/tagged/draw.io" rel="nofollow"&gt;draw.io&lt;/a&gt; tag on Stack Overflow currently, please make sure any questions adhere to their guidelines for question.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://jgraph.github.io/mxgraph/" rel="nofollow"&gt;mxGraph documentation&lt;/a&gt; provides a lot of the docs for the bottom part of the stack. There is an &lt;a href="http://stackoverflow.com/questions/tagged/mxgraph" rel="nofollow"&gt;mxgraph tag on SO&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-running" class="anchor" aria-hidden="true" href="#running"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running&lt;/h2&gt;
&lt;p&gt;One way to run draw.io is to fork this project, &lt;a href="https://help.github.com/categories/github-pages-basics/"&gt;publish the master branch to GitHub pages&lt;/a&gt; and the &lt;a href="https://jgraph.github.io/drawio/src/main/webapp/index.html" rel="nofollow"&gt;pages sites&lt;/a&gt; will have the full editor functionality (sans the integrations).&lt;/p&gt;
&lt;p&gt;The full packaged .war of the client and servlets is built when the project is tagged and available on the &lt;a href="https://github.com/jgraph/draw.io/releases"&gt;releases page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-browsers" class="anchor" aria-hidden="true" href="#supported-browsers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Browsers&lt;/h2&gt;
&lt;p&gt;draw.io supports IE 11, Chrome 32+, Firefox 38+, Safari 9.1.x, 10.1.x and 11.0.x, Opera 20+, Native Android browser 5.1.x+, the default browser in the current and previous major iOS versions (e.g. 11.2.x and 10.3.x) and Edge 23+.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jgraph</author><guid isPermaLink="false">https://github.com/jgraph/drawio</guid><pubDate>Tue, 19 Nov 2019 00:03:00 GMT</pubDate></item><item><title>fengdu78/lihang-code #4 in All Languages, This week</title><link>https://github.com/fengdu78/lihang-code</link><description>&lt;p&gt;&lt;i&gt;《统计学习方法》的代码实现&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;strong&gt;代码目录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第1章 统计学习方法概论&lt;/p&gt;
&lt;p&gt;第2章 感知机&lt;/p&gt;
&lt;p&gt;第3章 k近邻法&lt;/p&gt;
&lt;p&gt;第4章 朴素贝叶斯&lt;/p&gt;
&lt;p&gt;第5章 决策树&lt;/p&gt;
&lt;p&gt;第6章 逻辑斯谛回归&lt;/p&gt;
&lt;p&gt;第7章 支持向量机&lt;/p&gt;
&lt;p&gt;第8章 提升方法&lt;/p&gt;
&lt;p&gt;第9章 EM算法及其推广&lt;/p&gt;
&lt;p&gt;第10章 隐马尔可夫模型&lt;/p&gt;
&lt;p&gt;第11章 条件随机场&lt;/p&gt;
&lt;p&gt;第12章 监督学习方法总结&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;参考：
&lt;a href="https://github.com/wzyonggege/statistical-learning-method"&gt;https://github.com/wzyonggege/statistical-learning-method&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/WenDesi/lihang_book_algorithm"&gt;https://github.com/WenDesi/lihang_book_algorithm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/tudaodiaozhale" rel="nofollow"&gt;https://blog.csdn.net/tudaodiaozhale&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;代码整理和修改：机器学习初学者&lt;/p&gt;
&lt;p&gt;微信公众号：机器学习初学者 &lt;a target="_blank" rel="noopener noreferrer" href="images/gongzhong.jpg"&gt;&lt;img src="images/gongzhong.jpg" alt="gongzhong" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;知识星球：黄博的机器学习圈子&lt;a target="_blank" rel="noopener noreferrer" href="images/zhishixingqiu1.jpg"&gt;&lt;img src="images/zhishixingqiu1.jpg" alt="xingqiu" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.zhihu.com/people/fengdu78" rel="nofollow"&gt;知乎&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>fengdu78</author><guid isPermaLink="false">https://github.com/fengdu78/lihang-code</guid><pubDate>Tue, 19 Nov 2019 00:04:00 GMT</pubDate></item><item><title>material-components/material-components-android-examples #5 in All Languages, This week</title><link>https://github.com/material-components/material-components-android-examples</link><description>&lt;p&gt;&lt;i&gt;Companion example apps and code for MDC-Android.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-material-components-android-examples" class="anchor" aria-hidden="true" href="#material-components-android-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;material-components-android-examples&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/mdc_samples.gif"&gt;&lt;img src="screenshots/mdc_samples.gif" alt="Reply, Owl, Basil sample demos" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The apps in this repository are Android implementations of fictional &lt;a href="https://material.io/design/material-studies/" rel="nofollow"&gt;Material Studies&lt;/a&gt;. Each one is built using the &lt;a href="http://github.com/material-components/material-components-android/"&gt;MDC-Android library&lt;/a&gt; and showcases customizations of color, typography, and shape made with &lt;a href="https://material.io/design/material-theming/" rel="nofollow"&gt;Material Theming&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Reply"&gt;Reply&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Owl"&gt;Owl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Coming Soon] Basil&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Copyright 2019 Google, Inc.

Licensed to the Apache Software Foundation (ASF) under one or more contributor
license agreements. See the NOTICE file distributed with this work for
additional information regarding copyright ownership. The ASF licenses this
file to you under the Apache License, Version 2.0 (the "License"); you may not
use this file except in compliance with the License. You may obtain a copy of
the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations under
the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>material-components</author><guid isPermaLink="false">https://github.com/material-components/material-components-android-examples</guid><pubDate>Tue, 19 Nov 2019 00:05:00 GMT</pubDate></item><item><title>async-rs/async-std #6 in All Languages, This week</title><link>https://github.com/async-rs/async-std</link><description>&lt;p&gt;&lt;i&gt;Async version of the Rust standard library&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1 align="center"&gt;&lt;a id="user-content-async-std" class="anchor" aria-hidden="true" href="#async-std"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;async-std&lt;/h1&gt;
&lt;div align="center"&gt;
 &lt;strong&gt;
   Async version of the Rust standard library
 &lt;/strong&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div align="center"&gt;
  
  &lt;a href="https://crates.io/crates/async-std" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/f78082c3aee59e42faa48eeb645c179942688b61/68747470733a2f2f696d672e736869656c64732e696f2f6372617465732f762f6173796e632d7374642e7376673f7374796c653d666c61742d737175617265" alt="Crates.io version" data-canonical-src="https://img.shields.io/crates/v/async-std.svg?style=flat-square" style="max-width:100%;"&gt;
  &lt;/a&gt;
  
  &lt;a href="https://crates.io/crates/async-std" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/6e35b5b694d9649208efe8f59c2941697f8b7460/68747470733a2f2f696d672e736869656c64732e696f2f6372617465732f642f6173796e632d7374642e7376673f7374796c653d666c61742d737175617265" alt="Download" data-canonical-src="https://img.shields.io/crates/d/async-std.svg?style=flat-square" style="max-width:100%;"&gt;
  &lt;/a&gt;
  
  &lt;a href="https://docs.rs/async-std" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/8cf92ee7cd4513cdd8d165061fcf774c1ac271e4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e7376673f7374796c653d666c61742d737175617265" alt="docs.rs docs" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg?style=flat-square" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://discord.gg/JvZeVNe" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/cf98d67087e5a06faf8de39f99a081d1d2f9205b/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3539383838303638393835363937303736322e7376673f6c6f676f3d646973636f7264267374796c653d666c61742d737175617265" alt="chat" data-canonical-src="https://img.shields.io/discord/598880689856970762.svg?logo=discord&amp;amp;style=flat-square" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;div align="center"&gt;
  &lt;h3&gt;&lt;a id="user-content-----------api-docs--------------------book--------------------releases--------------------contributing------" class="anchor" aria-hidden="true" href="#----------api-docs--------------------book--------------------releases--------------------contributing------"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;
    &lt;a href="https://docs.rs/async-std" rel="nofollow"&gt;
      API Docs
    &lt;/a&gt;
    &lt;span&gt; | &lt;/span&gt;
    &lt;a href="https://book.async.rs" rel="nofollow"&gt;
      Book
    &lt;/a&gt;
    &lt;span&gt; | &lt;/span&gt;
    &lt;a href="https://github.com/async-rs/async-std/releases"&gt;
      Releases
    &lt;/a&gt;
    &lt;span&gt; | &lt;/span&gt;
    &lt;a href="https://async.rs/contribute" rel="nofollow"&gt;
      Contributing
    &lt;/a&gt;
  &lt;/h3&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;This crate provides an async version of &lt;a href="https://doc.rust-lang.org/std/index.html" rel="nofollow"&gt;&lt;code&gt;std&lt;/code&gt;&lt;/a&gt;. It provides all the interfaces
you are used to, but in an async version and ready for Rust's &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt;
syntax.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Modern:&lt;/strong&gt; Built from the ground up for &lt;code&gt;std::future&lt;/code&gt; and &lt;code&gt;async/await&lt;/code&gt; with
blazing fast compilation time.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fast:&lt;/strong&gt; Our robust allocator and threadpool designs provide ultra-high
throughput with predictably low latency.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Intuitive:&lt;/strong&gt; Complete parity with the stdlib means you only need to learn
APIs once.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Clear:&lt;/strong&gt; &lt;a href="https://docs.rs/async-std" rel="nofollow"&gt;Detailed documentation&lt;/a&gt; and &lt;a href="https://book.async.rs" rel="nofollow"&gt;accessible guides&lt;/a&gt; mean
using async Rust was never easier.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h2&gt;
&lt;div class="highlight highlight-source-rust"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;use&lt;/span&gt; async_std&lt;span class="pl-k"&gt;::&lt;/span&gt;task;

&lt;span class="pl-k"&gt;fn&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
    task&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-en"&gt;block_on&lt;/span&gt;(&lt;span class="pl-k"&gt;async&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;println!&lt;/span&gt;(&lt;span class="pl-s"&gt;"Hello, world!"&lt;/span&gt;);
    })
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;More examples, including networking and file access, can be found in our
&lt;a href="https://github.com/async-rs/async-std/tree/master/examples"&gt;&lt;code&gt;examples&lt;/code&gt;&lt;/a&gt; directory.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-philosophy" class="anchor" aria-hidden="true" href="#philosophy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Philosophy&lt;/h2&gt;
&lt;p&gt;We believe Async Rust should be as easy to pick up as Sync Rust. We also believe
that the best API is the one you already know. And finally, we believe that
providing an asynchronous counterpart to the standard library is the best way
stdlib provides a reliable basis for both performance and productivity.&lt;/p&gt;
&lt;p&gt;Async-std is the embodiment of that vision. It combines single-allocation task
creation, with an adaptive lock-free executor, threadpool and network driver to
create a smooth system that processes work at a high pace with low latency,
using Rust's familiar stdlib API.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;With &lt;a href="https://github.com/killercup/cargo-edit"&gt;cargo add&lt;/a&gt; installed run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ cargo add async-std&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We also provide a set of "unstable" features with async-std. See the &lt;a href="https://docs.rs/async-std/#features" rel="nofollow"&gt;features
documentation&lt;/a&gt; on how to enable them.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;sup&gt;
Licensed under either of &lt;a href="LICENSE-APACHE"&gt;Apache License, Version
2.0&lt;/a&gt; or &lt;a href="LICENSE-MIT"&gt;MIT license&lt;/a&gt; at your option.
&lt;/sup&gt;
&lt;br&gt;
&lt;sub&gt;
Unless you explicitly state otherwise, any contribution intentionally submitted
for inclusion in this crate by you, as defined in the Apache-2.0 license, shall
be dual licensed as above, without any additional terms or conditions.
&lt;/sub&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>async-rs</author><guid isPermaLink="false">https://github.com/async-rs/async-std</guid><pubDate>Tue, 19 Nov 2019 00:06:00 GMT</pubDate></item><item><title>microsoft/vscode #7 in All Languages, This week</title><link>https://github.com/microsoft/vscode</link><description>&lt;p&gt;&lt;i&gt;Visual Studio Code&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-visual-studio-code---open-source-code---oss" class="anchor" aria-hidden="true" href="#visual-studio-code---open-source-code---oss"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Visual Studio Code - Open Source ("Code - OSS")&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://dev.azure.com/vscode/VSCode/_build/latest?definitionId=12" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f20567452d9138054e0ca9b7140e5b3d2ffb11d8/68747470733a2f2f6465762e617a7572652e636f6d2f7673636f64652f5653436f64652f5f617069732f6275696c642f7374617475732f5653253230436f64653f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/vscode/VSCode/_apis/build/status/VS%20Code?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Microsoft/vscode/issues?q=is%3Aopen+is%3Aissue+label%3Afeature-request+sort%3Areactions-%2B1-desc"&gt;&lt;img src="https://camo.githubusercontent.com/cf974a4808e0dbc611bbcef98acfc6677af4689f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f4d6963726f736f66742f7673636f64652f666561747572652d726571756573742e737667" alt="Feature Requests" data-canonical-src="https://img.shields.io/github/issues/Microsoft/vscode/feature-request.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Microsoft/vscode/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Abug"&gt;&lt;img src="https://camo.githubusercontent.com/130b23a27ab8ee345bf6d02187f49b287aa1521f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f4d6963726f736f66742f7673636f64652f6275672e737667" alt="Bugs" data-canonical-src="https://img.shields.io/github/issues/Microsoft/vscode/bug.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/Microsoft/vscode" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/750ae6a0dbd84e32738e6d4a21a79ce5fb51c21b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d6f6e2532306769747465722d79656c6c6f772e737667" alt="Gitter" data-canonical-src="https://img.shields.io/badge/chat-on%20gitter-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-repository" class="anchor" aria-hidden="true" href="#the-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Repository&lt;/h2&gt;
&lt;p&gt;This repository ("&lt;code&gt;Code - OSS&lt;/code&gt;") is where we (Microsoft) develop the &lt;a href="https://code.visualstudio.com" rel="nofollow"&gt;Visual Studio Code&lt;/a&gt; product. Not only do we work on code and issues here, we also publish our &lt;a href="https://github.com/microsoft/vscode/wiki/Roadmap"&gt;roadmap&lt;/a&gt;, &lt;a href="https://github.com/microsoft/vscode/wiki/Iteration-Plans"&gt;monthly iteration plans&lt;/a&gt;, and our &lt;a href="https://github.com/microsoft/vscode/wiki/Running-the-Endgame"&gt;endgame plans&lt;/a&gt;. This source code is available to everyone under the standard &lt;a href="https://github.com/microsoft/vscode/blob/master/LICENSE.txt"&gt;MIT license&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-visual-studio-code" class="anchor" aria-hidden="true" href="#visual-studio-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Visual Studio Code&lt;/h2&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1487073/58344409-70473b80-7e0a-11e9-8570-b2efc6f8fa44.png"&gt;&lt;img alt="VS Code in action" src="https://user-images.githubusercontent.com/1487073/58344409-70473b80-7e0a-11e9-8570-b2efc6f8fa44.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://code.visualstudio.com" rel="nofollow"&gt;Visual Studio Code&lt;/a&gt; is a distribution of the &lt;code&gt;Code - OSS&lt;/code&gt; repository with Microsoft specific customizations released under a traditional &lt;a href="https://code.visualstudio.com/License/" rel="nofollow"&gt;Microsoft product license&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://code.visualstudio.com" rel="nofollow"&gt;Visual Studio Code&lt;/a&gt; combines the simplicity of a code editor with what developers need for their core edit-build-debug cycle. It provides comprehensive code editing, navigation, and understanding support along with lightweight debugging, a rich extensibility model, and lightweight integration with existing tools.&lt;/p&gt;
&lt;p&gt;Visual Studio Code is updated monthly with new features and bug fixes. You can download it for Windows, macOS, and Linux on &lt;a href="https://code.visualstudio.com/Download" rel="nofollow"&gt;Visual Studio Code's website&lt;/a&gt;. To get the latest releases every day, install the &lt;a href="https://code.visualstudio.com/insiders" rel="nofollow"&gt;Insiders build&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;There are many ways in which you can participate in the project, for example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/vscode/issues"&gt;Submit bugs and feature requests&lt;/a&gt;, and help us verify as they are checked in&lt;/li&gt;
&lt;li&gt;Review &lt;a href="https://github.com/microsoft/vscode/pulls"&gt;source code changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Review the &lt;a href="https://github.com/microsoft/vscode-docs"&gt;documentation&lt;/a&gt; and make pull requests for anything from typos to new content&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are interested in fixing issues and contributing directly to the code base,
please see the document &lt;a href="https://github.com/Microsoft/vscode/wiki/How-to-Contribute"&gt;How to Contribute&lt;/a&gt;, which covers the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/vscode/wiki/How-to-Contribute#build-and-run"&gt;How to build and run from source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/vscode/wiki/How-to-Contribute#debugging"&gt;The development workflow, including debugging and running tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/vscode/wiki/Coding-Guidelines"&gt;Coding guidelines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/vscode/wiki/How-to-Contribute#pull-requests"&gt;Submitting pull requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/vscode/wiki/How-to-Contribute#where-to-contribute"&gt;Finding an issue to work on&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aka.ms/vscodeloc" rel="nofollow"&gt;Contributing to translations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-feedback" class="anchor" aria-hidden="true" href="#feedback"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feedback&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Ask a question on &lt;a href="https://stackoverflow.com/questions/tagged/vscode" rel="nofollow"&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="CONTRIBUTING.md"&gt;Request a new feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Up vote &lt;a href="https://github.com/Microsoft/vscode/issues?q=is%3Aopen+is%3Aissue+label%3Afeature-request+sort%3Areactions-%2B1-desc"&gt;popular feature requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Microsoft/vscode/issues"&gt;File an issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Follow &lt;a href="https://twitter.com/code" rel="nofollow"&gt;@code&lt;/a&gt; and let us know what you think!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-related-projects" class="anchor" aria-hidden="true" href="#related-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related Projects&lt;/h2&gt;
&lt;p&gt;Many of the core components and extensions to Code live in their own repositories on GitHub. For example, the &lt;a href="https://github.com/microsoft/vscode-node-debug"&gt;node debug adapter&lt;/a&gt; and the &lt;a href="https://github.com/microsoft/vscode-mono-debug"&gt;mono debug adapter&lt;/a&gt; have their own repositories. For a complete list, please visit the &lt;a href="https://github.com/Microsoft/vscode/wiki/Related-Projects"&gt;Related Projects&lt;/a&gt; page on our &lt;a href="https://github.com/Microsoft/vscode/wiki"&gt;wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bundled-extensions" class="anchor" aria-hidden="true" href="#bundled-extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bundled Extensions&lt;/h2&gt;
&lt;p&gt;Code includes a set of built-in extensions located in the &lt;a href="extensions"&gt;extensions&lt;/a&gt; folder, including grammars and snippets for many languages. Extensions that provide rich language support (code completion, Go to Definition) for a language have the suffix &lt;code&gt;language-features&lt;/code&gt;. For example, the &lt;code&gt;json&lt;/code&gt; extension provides coloring for &lt;code&gt;JSON&lt;/code&gt; and the &lt;code&gt;json-language-features&lt;/code&gt; provides rich language support for &lt;code&gt;JSON&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code of Conduct&lt;/h2&gt;
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright (c) Microsoft Corporation. All rights reserved.&lt;/p&gt;
&lt;p&gt;Licensed under the &lt;a href="LICENSE.txt"&gt;MIT&lt;/a&gt; license.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>microsoft</author><guid isPermaLink="false">https://github.com/microsoft/vscode</guid><pubDate>Tue, 19 Nov 2019 00:07:00 GMT</pubDate></item><item><title>gzc426/Java-Interview #8 in All Languages, This week</title><link>https://github.com/gzc426/Java-Interview</link><description>&lt;p&gt;&lt;i&gt;Java 面试必会 直通BAT&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;ul&gt;
&lt;li&gt;本仓库会持续更新，欢迎Star给一个鼓励！&lt;/li&gt;
&lt;li&gt;本github最初的版本是一份word文档，目前只是把word刚刚搬上来了，但是有些图片、排版还没来得急整理，看起来可能还是有点困难&lt;/li&gt;
&lt;li&gt;所以可以先关注一下我的公众号，在我的公众号[程序员乔戈里]后台回复 &lt;strong&gt;888&lt;/strong&gt; 获取这个github仓库的PDF版本，左侧有导航栏，方便大家阅读。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;github必须md格式才能看得舒服些，花了很多时间找word转md的工具，找了几款不太好用，于是自己手动把word改成md格式，后来发现有些重复性工作可以写个程序处理，就写了个程序，把word中的标题、代码都变成md格式，虽然能处理不少，但是还是需要人工校对，还有图片需要上传，真的超级费事，要搞吐了。。。各位也别抱怨我的github格式不好了，毕竟也还没完全处理完，体谅一下~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/550b00775ba6801fb92758e25354cbda7ac9c167/687474703a2f2f7777312e73696e61696d672e636e2f6c617267652f3030377338484a556c79316730666b6763707938636a333037363037363074372e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/550b00775ba6801fb92758e25354cbda7ac9c167/687474703a2f2f7777312e73696e61696d672e636e2f6c617267652f3030377338484a556c79316730666b6763707938636a333037363037363074372e6a7067" alt="" data-canonical-src="http://ww1.sinaimg.cn/large/007s8HJUly1g0fkgcpy8cj30760760t7.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>gzc426</author><guid isPermaLink="false">https://github.com/gzc426/Java-Interview</guid><pubDate>Tue, 19 Nov 2019 00:08:00 GMT</pubDate></item><item><title>dragen1860/TensorFlow-2.x-Tutorials #9 in All Languages, This week</title><link>https://github.com/dragen1860/TensorFlow-2.x-Tutorials</link><description>&lt;p&gt;&lt;i&gt;TensorFlow 2.x version's  Tutorials and Examples, including CNN, RNN, GAN, Auto-Encoders, FasterRCNN, GPT, BERT examples, etc. TF 2.0版入门实例代码，实战教程。&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-tensorflow-20-tutorials" class="anchor" aria-hidden="true" href="#tensorflow-20-tutorials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TensorFlow 2.0 Tutorials&lt;/h1&gt;
&lt;p&gt;Our repo. is the &lt;strong&gt;Winner&lt;/strong&gt; of &lt;a href="https://devpost.com/software/tensorflow-2-0-tutorials" rel="nofollow"&gt;⚡#PoweredByTF 2.0 Challenge!&lt;/a&gt;.&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="res/tensorflow-2.0.gif"&gt;&lt;img src="res/tensorflow-2.0.gif" width="250" align="middle" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Timeline:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Oct. 1, 2019: TensorFlow 2.0 Stable!&lt;/li&gt;
&lt;li&gt;Aug. 24, 2019: &lt;a href="https://www.tensorflow.org/versions/r2.0/api_docs/python/tf" rel="nofollow"&gt;TensorFlow 2.0 rc0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jun. 8, 2019: &lt;a href="https://twitter.com/fchollet/status/1134583289384120320" rel="nofollow"&gt;TensorFlow 2.0 Beta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mar. 7, 2019: &lt;a href="https://www.tensorflow.org/alpha" rel="nofollow"&gt;Tensorflow 2.0 Alpha&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jan. 11, 2019: &lt;a href="https://www.tensorflow.org/versions/r2.0/api_docs/python/tf" rel="nofollow"&gt;TensorFlow r2.0 preview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Aug. 14, 2018: &lt;a href="https://groups.google.com/a/tensorflow.org/forum/#!topic/discuss/bgug1G6a89A" rel="nofollow"&gt;TensorFlow 2.0 is coming&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;make sure you are using python 3.x.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPU install&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;pip install tensorflow &lt;span class="pl-k"&gt;-&lt;/span&gt;U&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;GPU install&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Install &lt;code&gt;CUDA 10.0&lt;/code&gt;(or after) and &lt;code&gt;cudnn&lt;/code&gt; by yourself. and set &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; up.&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;pip install tensorflow&lt;span class="pl-k"&gt;-&lt;/span&gt;gpu  &lt;span class="pl-k"&gt;-&lt;/span&gt;U&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Test installation:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-k"&gt;import&lt;/span&gt; tensorflow  &lt;span class="pl-k"&gt;as&lt;/span&gt; tf

In [&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: tf.&lt;span class="pl-c1"&gt;__version__&lt;/span&gt;
Out[&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2.0.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
In [&lt;span class="pl-c1"&gt;4&lt;/span&gt;]: tf.test.is_gpu_available()
&lt;span class="pl-c1"&gt;...&lt;/span&gt;
totalMemory: &lt;span class="pl-c1"&gt;3.&lt;/span&gt;&lt;span class="pl-ii"&gt;95GiB&lt;/span&gt; freeMemory: &lt;span class="pl-c1"&gt;3.&lt;/span&gt;&lt;span class="pl-ii"&gt;00GiB&lt;/span&gt;
&lt;span class="pl-c1"&gt;...&lt;/span&gt;
Out[&lt;span class="pl-c1"&gt;4&lt;/span&gt;]: &lt;span class="pl-c1"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-配套tf2视频教程" class="anchor" aria-hidden="true" href="#配套tf2视频教程"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;配套TF2视频教程&lt;/h1&gt;
&lt;p align="center"&gt;
  &lt;a href="https://study.163.com/course/courseMain.htm?share=2&amp;amp;shareId=480000001847407&amp;amp;courseId=1209092816&amp;amp;_trace_c_p_k2_=dca16f8fd11a4525bac8c89f779b2cfa" rel="nofollow"&gt;
    &lt;img src="res/cover.png" width="400" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://study.163.com/course/courseMain.htm?share=2&amp;amp;shareId=480000001847407&amp;amp;courseId=1209092816&amp;amp;_trace_c_p_k2_=dca16f8fd11a4525bac8c89f779b2cfa" rel="nofollow"&gt;
    &lt;img src="res/TF_QR_163.png" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/p&gt; 
&lt;p&gt;TensorFlow 2.0的视频教程链接：&lt;a href="https://study.163.com/course/courseMain.htm?share=2&amp;amp;shareId=480000001847407&amp;amp;courseId=1209092816&amp;amp;_trace_c_p_k2_=dca16f8fd11a4525bac8c89f779b2cfa" rel="nofollow"&gt;深度学习与TensorFlow 2实战&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-acknowledgement" class="anchor" aria-hidden="true" href="#acknowledgement"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgement&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;爱可可-爱生活 友情推荐 &lt;a target="_blank" rel="noopener noreferrer" href="res/weibo.jpg"&gt;&lt;img src="res/weibo.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-includes" class="anchor" aria-hidden="true" href="#includes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Includes&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;TensorFlow 2.0 Overview&lt;/li&gt;
&lt;li&gt;TensorFlow 2.0 Basic Usage&lt;/li&gt;
&lt;li&gt;Linear Regression&lt;/li&gt;
&lt;li&gt;MNIST, FashionMNIST&lt;/li&gt;
&lt;li&gt;CIFAR10&lt;/li&gt;
&lt;li&gt;Fully Connected Layer&lt;/li&gt;
&lt;li&gt;VGG16&lt;/li&gt;
&lt;li&gt;Inception Network&lt;/li&gt;
&lt;li&gt;ResNet18&lt;/li&gt;
&lt;li&gt;Naive RNN&lt;/li&gt;
&lt;li&gt;LSTM&lt;/li&gt;
&lt;li&gt;ColorBot&lt;/li&gt;
&lt;li&gt;Auto-Encoders&lt;/li&gt;
&lt;li&gt;Variational Auto-Encoders&lt;/li&gt;
&lt;li&gt;DCGAN&lt;/li&gt;
&lt;li&gt;CycleGAN&lt;/li&gt;
&lt;li&gt;WGAN&lt;/li&gt;
&lt;li&gt;Pixel2Pixel&lt;/li&gt;
&lt;li&gt;Faster RCNN&lt;/li&gt;
&lt;li&gt;A2C&lt;/li&gt;
&lt;li&gt;GPT&lt;/li&gt;
&lt;li&gt;BERT&lt;/li&gt;
&lt;li&gt;GCN&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Feel free to submit a &lt;strong&gt;PR&lt;/strong&gt; request to make this repo. more complete!&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-refered-repos" class="anchor" aria-hidden="true" href="#refered-repos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Refered Repos.&lt;/h1&gt;
&lt;p&gt;Our work is not built from scratch. Great appreciation to these open works！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/madalinabuzau/tensorflow-eager-tutorials"&gt;https://github.com/madalinabuzau/tensorflow-eager-tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/herbiebradley/CycleGAN-Tensorflow"&gt;https://github.com/herbiebradley/CycleGAN-Tensorflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/eager/python/examples/pix2pix/pix2pix_eager.ipynb"&gt;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/eager/python/examples/pix2pix/pix2pix_eager.ipynb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/moono/tf-eager-on-GAN"&gt;https://github.com/moono/tf-eager-on-GAN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Viredery/tf-eager-fasterrcnn"&gt;https://github.com/Viredery/tf-eager-fasterrcnn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/github/gitignore/blob/master/Python.gitignore"&gt;https://github.com/github/gitignore/blob/master/Python.gitignore&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>dragen1860</author><guid isPermaLink="false">https://github.com/dragen1860/TensorFlow-2.x-Tutorials</guid><pubDate>Tue, 19 Nov 2019 00:09:00 GMT</pubDate></item><item><title>blaCCkHatHacEEkr/PENTESTING-BIBLE #10 in All Languages, This week</title><link>https://github.com/blaCCkHatHacEEkr/PENTESTING-BIBLE</link><description>&lt;p&gt;&lt;i&gt;This repository was created and developed by Ammar Amer @cry__pto Only. Updates to this repository will continue to arrive until the number of links reaches 10000 links &amp; 10000 pdf files .Learn Ethical Hacking and penetration testing .hundreds of ethical hacking &amp; penetration testing &amp; red team &amp; cyber security &amp; computer science resources.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-pentesting-bible" class="anchor" aria-hidden="true" href="#pentesting-bible"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PENTESTING-BIBLE&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-hundreds-of-ethical-hacking--penetration-testing--red-team--cyber-security--computer-science-resources" class="anchor" aria-hidden="true" href="#hundreds-of-ethical-hacking--penetration-testing--red-team--cyber-security--computer-science-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hundreds of ethical hacking &amp;amp; penetration testing &amp;amp; red team &amp;amp; cyber security &amp;amp; computer science resources.&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-more-than-1000-link" class="anchor" aria-hidden="true" href="#more-than-1000-link"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MORE THAN 1000 LINK&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-more-to-come" class="anchor" aria-hidden="true" href="#more-to-come"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MORE TO COME&lt;/h1&gt;
&lt;p&gt;-1- 3 Ways Extract Password Hashes from NTDS.dit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/3-ways-extract-password-hashes-from-ntds-dit" rel="nofollow"&gt;https://www.hackingarticles.in/3-ways-extract-password-hashes-from-ntds-dit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-2- 3 ways to Capture HTTP Password in Network PC:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/3-ways-to-capture-http-password-in-network-pc/" rel="nofollow"&gt;https://www.hackingarticles.in/3-ways-to-capture-http-password-in-network-pc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-3- 3 Ways to Crack Wifi using Pyrit,oclHashcat and Cowpatty:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/3-ways-crack-wifi-using-pyrit-oclhashcat-cowpatty/" rel="nofollow"&gt;www.hackingarticles.in/3-ways-crack-wifi-using-pyrit-oclhashcat-cowpatty/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-4-BugBounty @ Linkedln-How I was able to bypass Open Redirection Protection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/2e143eb36941" rel="nofollow"&gt;https://medium.com/p/2e143eb36941&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-5-BugBounty — “Let me reset your password and login into your account “-How I was able to Compromise any User Account via Reset Password Functionality:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/a11bb5f863b3/share/twitter" rel="nofollow"&gt;https://medium.com/p/a11bb5f863b3/share/twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-6-“Journey from LFI to RCE!!!”-How I was able to get the same in one of the India’s popular property buy/sell company:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/a69afe5a0899" rel="nofollow"&gt;https://medium.com/p/a69afe5a0899&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-7-BugBounty — “I don’t need your current password to login into your account” - How could I completely takeover any user’s account in an online classi ed ads company:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/e51a945b083d" rel="nofollow"&gt;https://medium.com/p/e51a945b083d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-8-BugBounty — “How I was able to shop for free!”- Payment Price Manipulation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/b29355a8e68e" rel="nofollow"&gt;https://medium.com/p/b29355a8e68e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-9-Recon — my way:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/82b7e5f62e21" rel="nofollow"&gt;https://medium.com/p/82b7e5f62e21&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-10-Reconnaissance: a eulogy in three acts:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/7840824b9ef2" rel="nofollow"&gt;https://medium.com/p/7840824b9ef2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-11-Red-Teaming-Toolkit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/infosecn1nja/Red-Teaming-Toolkit"&gt;https://github.com/infosecn1nja/Red-Teaming-Toolkit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-12-Red Team Tips:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://vincentyiu.co.uk/" rel="nofollow"&gt;https://vincentyiu.co.uk/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-13-Shellcode: A reverse shell for Linux in C with support for TLS/SSL:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://modexp.wordpress.com/2019/04/24/glibc-shellcode/" rel="nofollow"&gt;https://modexp.wordpress.com/2019/04/24/glibc-shellcode/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-14-Shellcode: Encrypting traffic:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://modexp.wordpress.com/2018/08/17/shellcode-encrypting-traffic/" rel="nofollow"&gt;https://modexp.wordpress.com/2018/08/17/shellcode-encrypting-traffic/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-15-Penetration Testing of an FTP Server:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/19afe538be4b" rel="nofollow"&gt;https://medium.com/p/19afe538be4b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-16-Reverse Engineering of the Anubis Malware — Part 1:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/741e12f5a6bd" rel="nofollow"&gt;https://medium.com/p/741e12f5a6bd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-17-Privilege Escalation on Linux with Live examples:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/privilege-escalation-linux-live-examples/" rel="nofollow"&gt;https://resources.infosecinstitute.com/privilege-escalation-linux-live-examples/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-18-Pentesting Cheatsheets:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ired.team/offensive-security-experiments/offensive-security-cheetsheets" rel="nofollow"&gt;https://ired.team/offensive-security-experiments/offensive-security-cheetsheets&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-19-Powershell Payload Delivery via DNS using Invoke-PowerCloud:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ired.team/offensive-security-experiments/payload-delivery-via-dns-using-invoke-powercloud" rel="nofollow"&gt;https://ired.team/offensive-security-experiments/payload-delivery-via-dns-using-invoke-powercloud&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-20-SMART GOOGLE SEARCH QUERIES TO FIND VULNERABLE SITES – LIST OF 4500+ GOOGLE DORKS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sguru.org/ghdb-download-list-4500-google-dorks-free/" rel="nofollow"&gt;https://sguru.org/ghdb-download-list-4500-google-dorks-free/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-21-SQL Injection Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.netsparker.com/blog/web-security/sql-injection-cheat-sheet/" rel="nofollow"&gt;https://www.netsparker.com/blog/web-security/sql-injection-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-22-SQLmap’s os-shell + Backdooring website with Weevely:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/8cb6dcf17fa4" rel="nofollow"&gt;https://medium.com/p/8cb6dcf17fa4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-23-SQLMap Tamper Scripts (SQL Injection and WAF bypass) Tips:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/c5a3f5764cb3" rel="nofollow"&gt;https://medium.com/p/c5a3f5764cb3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-24-Top 10 Essential NMAP Scripts for Web App Hacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/c7829ff5ab7" rel="nofollow"&gt;https://medium.com/p/c7829ff5ab7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-25-BugBounty — How I was able to download the Source Code of India’s Largest Telecom Service Provider including dozens of more popular websites!:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/52cf5c5640a1" rel="nofollow"&gt;https://medium.com/p/52cf5c5640a1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-26-Re ected XSS Bypass Filter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/de41d35239a3" rel="nofollow"&gt;https://medium.com/p/de41d35239a3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-27-XSS Payloads, getting past alert(1):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/217ab6c6ead7" rel="nofollow"&gt;https://medium.com/p/217ab6c6ead7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-28-XS-Searching Google’s bug tracker to find out vulnerable source code Or how side-channel timing attacks aren’t that impractical:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/50d8135b7549" rel="nofollow"&gt;https://medium.com/p/50d8135b7549&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-29-Web Application Firewall (WAF) Evasion Techniques:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@themiddleblue/web-application-firewall-waf-evasion-techniques" rel="nofollow"&gt;https://medium.com/@themiddleblue/web-application-firewall-waf-evasion-techniques&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-30-OSINT Resources for 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/b15d55187c3f" rel="nofollow"&gt;https://medium.com/p/b15d55187c3f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-31-The OSINT Toolkit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/3b9233d1cdf9" rel="nofollow"&gt;https://medium.com/p/3b9233d1cdf9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-32-OSINT : Chasing Malware + C&amp;amp;C Servers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/3c893dc1e8cb" rel="nofollow"&gt;https://medium.com/p/3c893dc1e8cb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-33-OSINT tool for visualizing relationships between domains, IPs and email addresses:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/94377aa1f20a" rel="nofollow"&gt;https://medium.com/p/94377aa1f20a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-34-From OSINT to Internal – Gaining Access from outside the perimeter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.n00py.io/.../from-osint-to-internal-gaining-access-from-the-outside-the-perimeter" rel="nofollow"&gt;https://www.n00py.io/.../from-osint-to-internal-gaining-access-from-the-outside-the-perimeter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-35-Week in OSINT #2018–35:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/b2ab1765157b" rel="nofollow"&gt;https://medium.com/p/b2ab1765157b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-36-Week in OSINT #2019–14:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/df83f5b334b4" rel="nofollow"&gt;https://medium.com/p/df83f5b334b4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-37-Instagram OSINT | What A Nice Picture:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/8f4c7edfbcc6" rel="nofollow"&gt;https://medium.com/p/8f4c7edfbcc6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-38-awesome-osint:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/jivoi/awesome-osint"&gt;https://github.com/jivoi/awesome-osint&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-39-OSINT_Team_Links:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/IVMachiavelli/OSINT_Team_Links"&gt;https://github.com/IVMachiavelli/OSINT_Team_Links&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-40-Open-Source Intelligence (OSINT) Reconnaissance:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/75edd7f7dada" rel="nofollow"&gt;https://medium.com/p/75edd7f7dada&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-41-Hacking Cryptocurrency Miners with OSINT Techniques:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/677bbb3e0157" rel="nofollow"&gt;https://medium.com/p/677bbb3e0157&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-42-A penetration tester’s guide to sub- domain enumeration:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.appsecco.com/a-penetration-testers-guide-to-sub-domain-enumeration-7d842d5570f6?gi=f44ec9d8f4b5" rel="nofollow"&gt;https://blog.appsecco.com/a-penetration-testers-guide-to-sub-domain-enumeration-7d842d5570f6?gi=f44ec9d8f4b5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-43-Packages that actively seeks vulnerable exploits in the wild. More of an umbrella group for similar packages:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blackarch.org/recon.html" rel="nofollow"&gt;https://blackarch.org/recon.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-44-What tools I use for my recon during BugBounty:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/ec25f7f12e6d" rel="nofollow"&gt;https://medium.com/p/ec25f7f12e6d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-45-Command and Control – DNS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/09/06/command-and-control-dns/" rel="nofollow"&gt;https://pentestlab.blog/2017/09/06/command-and-control-dns/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-46-Command and Control – WebDAV:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/09/12/command-and-control-webdav/" rel="nofollow"&gt;https://pentestlab.blog/2017/09/12/command-and-control-webdav/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-47-Command and Control – Twitter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/09/26/command-and-control-twitter/" rel="nofollow"&gt;https://pentestlab.blog/2017/09/26/command-and-control-twitter/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-48-Command and Control – Kernel:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/10/02/command-and-control-kernel/" rel="nofollow"&gt;https://pentestlab.blog/2017/10/02/command-and-control-kernel/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-49-Source code disclosure via exposed .git folder:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentester.land/tutorials/.../source-code-disclosure-via-exposed-git-folder.html" rel="nofollow"&gt;https://pentester.land/tutorials/.../source-code-disclosure-via-exposed-git-folder.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-50-Pentesting Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hausec.com/pentesting-cheatsheet/" rel="nofollow"&gt;https://hausec.com/pentesting-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-51-Windows Userland Persistence Fundamentals:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.fuzzysecurity.com/tutorials/19.html" rel="nofollow"&gt;https://www.fuzzysecurity.com/tutorials/19.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-52-A technique that a lot of SQL injection beginners don’t know | Atmanand Nagpure write-up:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/abdc7c269dd5" rel="nofollow"&gt;https://medium.com/p/abdc7c269dd5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-53-awesome-bug-bounty:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/djadmin/awesome-bug-bounty"&gt;https://github.com/djadmin/awesome-bug-bounty&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-54-dostoevsky-pentest-notes:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/dostoevskylabs/dostoevsky-pentest-notes"&gt;https://github.com/dostoevskylabs/dostoevsky-pentest-notes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-55-awesome-pentest:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/enaqx/awesome-pentest"&gt;https://github.com/enaqx/awesome-pentest&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-56-awesome-windows-exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/enddo/awesome-windows-exploitation"&gt;https://github.com/enddo/awesome-windows-exploitation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-57-awesome-exploit-development:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/FabioBaroni/awesome-exploit-development"&gt;https://github.com/FabioBaroni/awesome-exploit-development&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-58-BurpSuit + SqlMap = One Love:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/64451eb7b1e8" rel="nofollow"&gt;https://medium.com/p/64451eb7b1e8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-59-Crack WPA/WPA2 Wi-Fi Routers with Aircrack-ng and Hashcat:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/a5a5d3ffea46" rel="nofollow"&gt;https://medium.com/p/a5a5d3ffea46&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-60-DLL Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/04/04/dll-injection" rel="nofollow"&gt;https://pentestlab.blog/2017/04/04/dll-injection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-61-DLL Hijacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/03/27/dll-hijacking" rel="nofollow"&gt;https://pentestlab.blog/2017/03/27/dll-hijacking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-62-My Recon Process — DNS Enumeration:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/d0e288f81a8a" rel="nofollow"&gt;https://medium.com/p/d0e288f81a8a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-63-Google Dorks for nding Emails, Admin users etc:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://d4msec.wordpress.com/2015/09/03/google-dorks-for-finding-emails-admin-users-etc" rel="nofollow"&gt;https://d4msec.wordpress.com/2015/09/03/google-dorks-for-finding-emails-admin-users-etc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-64-Google Dorks List 2018:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/fb70d0cbc94" rel="nofollow"&gt;https://medium.com/p/fb70d0cbc94&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-65-Hack your own NMAP with a BASH one-liner:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/758352f9aece" rel="nofollow"&gt;https://medium.com/p/758352f9aece&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-66-UNIX / LINUX CHEAT SHEET:&lt;/p&gt;
&lt;p&gt;cheatsheetworld.com/programming/unix-linux-cheat-sheet/&lt;/p&gt;
&lt;p&gt;-67-Linux Capabilities Privilege Escalation via OpenSSL with SELinux Enabled and Enforced:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/74d2bec02099" rel="nofollow"&gt;https://medium.com/p/74d2bec02099&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-68- information gathering:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/category/information-gathering/" rel="nofollow"&gt;https://pentestlab.blog/category/information-gathering/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-69-post exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/category/post-exploitation/" rel="nofollow"&gt;https://pentestlab.blog/category/post-exploitation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-70-privilege  escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/category/privilege-escalation/" rel="nofollow"&gt;https://pentestlab.blog/category/privilege-escalation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-71-red team:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/category/red-team/" rel="nofollow"&gt;https://pentestlab.blog/category/red-team/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-72-The Ultimate Penetration Testing Command Cheat Sheet for Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/command-cheat-sheet-for-linux/" rel="nofollow"&gt;https://www.hackingloops.com/command-cheat-sheet-for-linux/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-73-Web Application Penetration Testing Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jdow.io/blog/2018/03/18/web-application-penetration-testing-methodology/" rel="nofollow"&gt;https://jdow.io/blog/2018/03/18/web-application-penetration-testing-methodology/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-74-Windows Kernel Exploits:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/04/24/windows-kernel-exploits" rel="nofollow"&gt;https://pentestlab.blog/2017/04/24/windows-kernel-exploits&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-75-Windows oneliners to download remote payload and execute arbitrary code:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://arno0x0x.wordpress.com/2017/11/20/windows-oneliners-to-download-remote-payload-and-execute-arbitrary-code/" rel="nofollow"&gt;https://arno0x0x.wordpress.com/2017/11/20/windows-oneliners-to-download-remote-payload-and-execute-arbitrary-code/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-76-Windows-Post-Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/emilyanncr/Windows-Post-Exploitation"&gt;https://github.com/emilyanncr/Windows-Post-Exploitation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-77-Windows Post Exploitation Shells and File Transfer with Netcat for Windows:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/a2ddc3557403" rel="nofollow"&gt;https://medium.com/p/a2ddc3557403&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-78-Windows Privilege Escalation Fundamentals:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.fuzzysecurity.com/tutorials/16.html" rel="nofollow"&gt;https://www.fuzzysecurity.com/tutorials/16.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-79-Windows Privilege Escalation Guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/" rel="nofollow"&gt;www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-80-Windows Active Directory Post Exploitation Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/48c2bd70388" rel="nofollow"&gt;https://medium.com/p/48c2bd70388&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-81-Windows Exploitation Tricks: Abusing the User-Mode Debugger:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://googleprojectzero.blogspot.com/2019/04/windows-exploitation-tricks-abusing.html" rel="nofollow"&gt;https://googleprojectzero.blogspot.com/2019/04/windows-exploitation-tricks-abusing.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-82-VNC Penetration Testing (Port 5901):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/vnc-penetration-testing" rel="nofollow"&gt;http://www.hackingarticles.in/vnc-penetration-testing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-83- Big List Of Google Dorks Hacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://xspiyr.wordpress.com/2012/09/05/big-list-of-google-dorks-hacking" rel="nofollow"&gt;https://xspiyr.wordpress.com/2012/09/05/big-list-of-google-dorks-hacking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-84-List of google dorks for sql injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://deadlyhacker.wordpress.com/2013/05/09/list-of-google-dorks-for-sql-injection/" rel="nofollow"&gt;https://deadlyhacker.wordpress.com/2013/05/09/list-of-google-dorks-for-sql-injection/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-85-Download Google Dorks List 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/323c8067502c" rel="nofollow"&gt;https://medium.com/p/323c8067502c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-86-Comprehensive Guide to Sqlmap (Target Options):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/comprehensive-guide-to-sqlmap-target-options15249-2" rel="nofollow"&gt;http://www.hackingarticles.in/comprehensive-guide-to-sqlmap-target-options15249-2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-87-EMAIL RECONNAISSANCE AND PHISHING TEMPLATE GENERATION MADE SIMPLE:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.cybersyndicates.com/.../email-reconnaissance-phishing-template-generation-made-simple" rel="nofollow"&gt;www.cybersyndicates.com/.../email-reconnaissance-phishing-template-generation-made-simple&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-88-Comprehensive Guide on Gobuster Tool:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/comprehensive-guide-on-gobuster-tool/" rel="nofollow"&gt;https://www.hackingarticles.in/comprehensive-guide-on-gobuster-tool/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-89-My Top 5 Web Hacking Tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/e15b3c1f21e8" rel="nofollow"&gt;https://medium.com/p/e15b3c1f21e8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-90-[technical] Pen-testing resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/cd01de9036ad" rel="nofollow"&gt;https://medium.com/p/cd01de9036ad&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-91-File System Access on Webserver using Sqlmap:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/file-system-access-on-webserver-using-sqlmap" rel="nofollow"&gt;http://www.hackingarticles.in/file-system-access-on-webserver-using-sqlmap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-92-kali-linux-cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/NoorQureshi/kali-linux-cheatsheet"&gt;https://github.com/NoorQureshi/kali-linux-cheatsheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-93-Pentesting Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://anhtai.me/pentesting-cheatsheet/" rel="nofollow"&gt;https://anhtai.me/pentesting-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-94-Command Injection Exploitation through Sqlmap in DVWA (OS-cmd):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/command-injection-exploitation-through-sqlmap-in-dvwa" rel="nofollow"&gt;http://www.hackingarticles.in/command-injection-exploitation-through-sqlmap-in-dvwa&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-95-XSS Payload List - Cross Site Scripting Vulnerability Payload List:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.kitploit.com/2018/05/xss-payload-list-cross-site-scripting.html" rel="nofollow"&gt;https://www.kitploit.com/2018/05/xss-payload-list-cross-site-scripting.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-96-Analyzing CVE-2018-6376 – Joomla!, Second Order SQL Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.notsosecure.com/analyzing-cve-2018-6376/" rel="nofollow"&gt;https://www.notsosecure.com/analyzing-cve-2018-6376/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-97-Exploiting Sql Injection with Nmap and Sqlmap:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/exploiting-sql-injection-nmap-sqlmap" rel="nofollow"&gt;http://www.hackingarticles.in/exploiting-sql-injection-nmap-sqlmap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-98-awesome-malware-analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rshipp/awesome-malware-analysis"&gt;https://github.com/rshipp/awesome-malware-analysis&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-99-Anatomy of UAC Attacks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.fuzzysecurity.com/tutorials/27.html" rel="nofollow"&gt;https://www.fuzzysecurity.com/tutorials/27.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-100-awesome-cyber-skills:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/joe-shenouda/awesome-cyber-skills"&gt;https://github.com/joe-shenouda/awesome-cyber-skills&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-101-5 ways to Banner Grabbing:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/5-ways-banner-grabbing" rel="nofollow"&gt;http://www.hackingarticles.in/5-ways-banner-grabbing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-102-6 Ways to Hack PostgresSQL Login:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/6-ways-to-hack-postgressql-login" rel="nofollow"&gt;http://www.hackingarticles.in/6-ways-to-hack-postgressql-login&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-103-6 Ways to Hack SSH Login Password:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/6-ways-to-hack-ssh-login-password" rel="nofollow"&gt;http://www.hackingarticles.in/6-ways-to-hack-ssh-login-password&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-104-10 Free Ways to Find Someone’s Email Address:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/e6f37f5fe10a" rel="nofollow"&gt;https://medium.com/p/e6f37f5fe10a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-105-USING A SCF FILE TO GATHER HASHES:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://1337red.wordpress.com/using-a-scf-file-to-gather-hashes" rel="nofollow"&gt;https://1337red.wordpress.com/using-a-scf-file-to-gather-hashes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-106-Hack Remote Windows PC using DLL Files (SMB Delivery Exploit):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-remote-windows-pc-using-dll-files-smb-delivery-exploit" rel="nofollow"&gt;http://www.hackingarticles.in/hack-remote-windows-pc-using-dll-files-smb-delivery-exploit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;107-Hack Remote Windows PC using Office OLE Multiple DLL Hijack Vulnerabilities:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-remote-windows-pc-using-office-ole-multiple-dll-hijack-vulnerabilities" rel="nofollow"&gt;http://www.hackingarticles.in/hack-remote-windows-pc-using-office-ole-multiple-dll-hijack-vulnerabilities&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-108-BUG BOUNTY HUNTING (METHODOLOGY , TOOLKIT , TIPS &amp;amp; TRICKS , Blogs):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/ef6542301c65" rel="nofollow"&gt;https://medium.com/p/ef6542301c65&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-109-How To Perform External Black-box Penetration Testing in Organization with “ZERO” Information:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/external-black-box-penetration-testing" rel="nofollow"&gt;https://gbhackers.com/external-black-box-penetration-testing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-110-A Complete Penetration Testing &amp;amp; Hacking Tools List for Hackers &amp;amp; Security Professionals:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/hacking-tools-list" rel="nofollow"&gt;https://gbhackers.com/hacking-tools-list&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-111-Most Important Considerations with Malware Analysis Cheats And Tools list:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/malware-analysis-cheat-sheet-and-tools-list" rel="nofollow"&gt;https://gbhackers.com/malware-analysis-cheat-sheet-and-tools-list&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-112-Awesome-Hacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Hack-with-Github/Awesome-Hacking"&gt;https://github.com/Hack-with-Github/Awesome-Hacking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-113-awesome-threat-intelligence:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/hslatman/awesome-threat-intelligence"&gt;https://github.com/hslatman/awesome-threat-intelligence&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-114-awesome-yara:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/InQuest/awesome-yara"&gt;https://github.com/InQuest/awesome-yara&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-115-Red-Team-Infrastructure-Wiki:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/bluscreenofjeff/Red-Team-Infrastructure-Wiki"&gt;https://github.com/bluscreenofjeff/Red-Team-Infrastructure-Wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-116-awesome-pentest:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/enaqx/awesome-pentest"&gt;https://github.com/enaqx/awesome-pentest&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-117-awesome-cyber-skills:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/joe-shenouda/awesome-cyber-skills"&gt;https://github.com/joe-shenouda/awesome-cyber-skills&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-118-pentest-wiki:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/nixawk/pentest-wiki"&gt;https://github.com/nixawk/pentest-wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-119-awesome-web-security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/qazbnm456/awesome-web-security"&gt;https://github.com/qazbnm456/awesome-web-security&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-120-Infosec_Reference:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rmusser01/Infosec_Reference"&gt;https://github.com/rmusser01/Infosec_Reference&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-121-awesome-iocs:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/sroberts/awesome-iocs"&gt;https://github.com/sroberts/awesome-iocs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-122-blackhat-arsenal-tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/toolswatch/blackhat-arsenal-tools"&gt;https://github.com/toolswatch/blackhat-arsenal-tools&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-123-awesome-social-engineering:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/v2-dev/awesome-social-engineering"&gt;https://github.com/v2-dev/awesome-social-engineering&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-124-Penetration Testing Framework 0.59:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.vulnerabilityassessment.co.uk/Penetration%20Test.html" rel="nofollow"&gt;www.vulnerabilityassessment.co.uk/Penetration%20Test.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-125-Penetration Testing Tools Cheat Sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://highon.coffee/blog/penetration-testing-tools-cheat-sheet/" rel="nofollow"&gt;https://highon.coffee/blog/penetration-testing-tools-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-126-SN1PER – A Detailed Explanation of Most Advanced Automated Information Gathering &amp;amp; Penetration Testing Tool:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/sn1per-a-detailed-explanation-of-most-advanced-automated-information-gathering-penetration-testing-tool" rel="nofollow"&gt;https://gbhackers.com/sn1per-a-detailed-explanation-of-most-advanced-automated-information-gathering-penetration-testing-tool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-127-Spear Phishing 101:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.inspired-sec.com/archive/2017/05/07/Phishing.html" rel="nofollow"&gt;https://blog.inspired-sec.com/archive/2017/05/07/Phishing.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-128-100 ways to discover (part 1):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sylarsec.com/2019/01/11/100-ways-to-discover-part-1/" rel="nofollow"&gt;https://sylarsec.com/2019/01/11/100-ways-to-discover-part-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-129-Comprehensive Guide to SSH Tunnelling:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/comprehensive-guide-to-ssh-tunnelling/" rel="nofollow"&gt;http://www.hackingarticles.in/comprehensive-guide-to-ssh-tunnelling/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-130-Capture VNC Session of Remote PC using SetToolkit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/capture-vnc-session-remote-pc-using-settoolkit/" rel="nofollow"&gt;http://www.hackingarticles.in/capture-vnc-session-remote-pc-using-settoolkit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-131-Hack Remote PC using PSEXEC Injection in SET Toolkit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-remote-pc-using-psexec-injection-set-toolkit/" rel="nofollow"&gt;http://www.hackingarticles.in/hack-remote-pc-using-psexec-injection-set-toolkit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-132-Denial of Service Attack on Network PC using SET Toolkit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/denial-of-service-attack-on-network-pc-using-set-toolkit/" rel="nofollow"&gt;http://www.hackingarticles.in/denial-of-service-attack-on-network-pc-using-set-toolkit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-133-Hack Gmail and Facebook of Remote PC using DNS Spoofing and SET Toolkit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-gmail-and-facebook-of-remote-pc-using-dns-spoofing-and-set-toolkit/" rel="nofollow"&gt;http://www.hackingarticles.in/hack-gmail-and-facebook-of-remote-pc-using-dns-spoofing-and-set-toolkit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-134-Hack Any Android Phone with DroidJack (Beginner’s Guide):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-android-phone-droidjack-beginners-guide/" rel="nofollow"&gt;http://www.hackingarticles.in/hack-android-phone-droidjack-beginners-guide/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-135-HTTP RAT Tutorial for Beginners:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/http-rat-tutorial-beginners/" rel="nofollow"&gt;http://www.hackingarticles.in/http-rat-tutorial-beginners/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-136-5 ways to Create Permanent Backdoor in Remote PC:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/5-ways-create-permanent-backdoor-remote-pc/" rel="nofollow"&gt;http://www.hackingarticles.in/5-ways-create-permanent-backdoor-remote-pc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-137-How to Enable and Monitor Firewall Log in Windows PC:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/enable-monitor-firewall-log-windows-pc/" rel="nofollow"&gt;http://www.hackingarticles.in/enable-monitor-firewall-log-windows-pc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-138-EMPIRE TIPS AND TRICKS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2015/08/26/empire-tips-and-tricks/" rel="nofollow"&gt;https://enigma0x3.net/2015/08/26/empire-tips-and-tricks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-139-CSRF account takeover Explained Automated/Manual:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/447e4b96485b" rel="nofollow"&gt;https://medium.com/p/447e4b96485b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-140-CSRF Exploitation using XSS:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/csrf-exploitation-using-xss" rel="nofollow"&gt;http://www.hackingarticles.in/csrf-exploitation-using-xss&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-141-Dumping Domain Password Hashes:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2018/07/04/dumping-domain-password-hashes/" rel="nofollow"&gt;https://pentestlab.blog/2018/07/04/dumping-domain-password-hashes/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-142-Empire Post Exploitation – Unprivileged Agent to DA Walkthrough:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bneg.io/2017/05/24/empire-post-exploitation/" rel="nofollow"&gt;https://bneg.io/2017/05/24/empire-post-exploitation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-143-Dropbox for the Empire:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bneg.io/2017/05/13/dropbox-for-the-empire/" rel="nofollow"&gt;https://bneg.io/2017/05/13/dropbox-for-the-empire/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-144-Empire without PowerShell.exe:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bneg.io/2017/07/26/empire-without-powershell-exe/" rel="nofollow"&gt;https://bneg.io/2017/07/26/empire-without-powershell-exe/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-145-REVIVING DDE: USING ONENOTE AND EXCEL FOR CODE EXECUTION:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2018/01/29/reviving-dde-using-onenote-and-excel-for-code-execution/" rel="nofollow"&gt;https://enigma0x3.net/2018/01/29/reviving-dde-using-onenote-and-excel-for-code-execution/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-146-PHISHING WITH EMPIRE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2016/03/15/phishing-with-empire/" rel="nofollow"&gt;https://enigma0x3.net/2016/03/15/phishing-with-empire/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-146-BYPASSING UAC ON WINDOWS 10 USING DISK CLEANUP:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2016/07/22/bypassing-uac-on-windows-10-using-disk-cleanup/" rel="nofollow"&gt;https://enigma0x3.net/2016/07/22/bypassing-uac-on-windows-10-using-disk-cleanup/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-147-“FILELESS” UAC BYPASS USING EVENTVWR.EXE AND REGISTRY HIJACKING:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/" rel="nofollow"&gt;https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-148-“FILELESS” UAC BYPASS USING SDCLT.EXE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2017/03/17/fileless-uac-bypass-using-sdclt-exe/" rel="nofollow"&gt;https://enigma0x3.net/2017/03/17/fileless-uac-bypass-using-sdclt-exe/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-149-PHISHING AGAINST PROTECTED VIEW:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2017/07/13/phishing-against-protected-view/" rel="nofollow"&gt;https://enigma0x3.net/2017/07/13/phishing-against-protected-view/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-150-LATERAL MOVEMENT USING EXCEL.APPLICATION AND DCOM:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2017/09/11/lateral-movement-using-excel-application-and-dcom/" rel="nofollow"&gt;https://enigma0x3.net/2017/09/11/lateral-movement-using-excel-application-and-dcom/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-151-enum4linux Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://highon.coffee/blog/enum4linux-cheat-sheet/" rel="nofollow"&gt;https://highon.coffee/blog/enum4linux-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-152-enumeration:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://technologyredefine.blogspot.com/2017/11/enumeration.html" rel="nofollow"&gt;https://technologyredefine.blogspot.com/2017/11/enumeration.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-153-Command and Control – WebSocket:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/12/06/command-and-control-websocket" rel="nofollow"&gt;https://pentestlab.blog/2017/12/06/command-and-control-websocket&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-154-Command and Control – WMI:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/11/20/command-and-control-wmi" rel="nofollow"&gt;https://pentestlab.blog/2017/11/20/command-and-control-wmi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-155-Dangerous Virus For Windows Crashes Everything Hack window Using Virus:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://thelearninghacking.com/create-virus-hack-windows/" rel="nofollow"&gt;http://thelearninghacking.com/create-virus-hack-windows/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-156-Comprehensive Guide to Nmap Port Status:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/comprehensive-guide-nmap-port-status" rel="nofollow"&gt;http://www.hackingarticles.in/comprehensive-guide-nmap-port-status&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-157-Commix – Automated All-in-One OS Command Injection and Exploitation Tool:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/commix-automated-all-in-one-os-command-injection-and-exploitation-tool" rel="nofollow"&gt;https://gbhackers.com/commix-automated-all-in-one-os-command-injection-and-exploitation-tool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-158-Compromising Jenkins and extracting credentials:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.n00py.io/2017/01/compromising-jenkins-and-extracting-credentials/" rel="nofollow"&gt;https://www.n00py.io/2017/01/compromising-jenkins-and-extracting-credentials/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-159-footprinting:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://technologyredefine.blogspot.com/2017/09/footprinting_17.html" rel="nofollow"&gt;https://technologyredefine.blogspot.com/2017/09/footprinting_17.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-160-awesome-industrial-control-system-security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/hslatman/awesome-industrial-control-system-security"&gt;https://github.com/hslatman/awesome-industrial-control-system-security&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-161-xss-payload-list:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ismailtasdelen/xss-payload-list"&gt;https://github.com/ismailtasdelen/xss-payload-list&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-162-awesome-vehicle-security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/jaredthecoder/awesome-vehicle-security"&gt;https://github.com/jaredthecoder/awesome-vehicle-security&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-163-awesome-osint:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/jivoi/awesome-osint"&gt;https://github.com/jivoi/awesome-osint&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-164-awesome-python:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/vinta/awesome-python"&gt;https://github.com/vinta/awesome-python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-165-Microsoft Windows - UAC Protection Bypass (Via Slui File Handler Hijack) (Metasploit):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/download/44830.rb" rel="nofollow"&gt;https://www.exploit-db.com/download/44830.rb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-166-nbtscan Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://highon.coffee/blog/nbtscan-cheat-sheet/" rel="nofollow"&gt;https://highon.coffee/blog/nbtscan-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-167-neat-tricks-to-bypass-csrfprotection:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.slideshare.net/0ang3el/neat-tricks-to-bypass-csrfprotection" rel="nofollow"&gt;www.slideshare.net/0ang3el/neat-tricks-to-bypass-csrfprotection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-168-ACCESSING CLIPBOAR D FROM THE LOC K SC REEN IN WI NDOWS 10 #2:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://oddvar.moe/2017/01/27/access-clipboard-from-lock-screen-in-windows-10-2/" rel="nofollow"&gt;https://oddvar.moe/2017/01/27/access-clipboard-from-lock-screen-in-windows-10-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-169-NMAP CHEAT-SHEET (Nmap Scanning Types, Scanning Commands , NSE Scripts):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/868a7bd7f692" rel="nofollow"&gt;https://medium.com/p/868a7bd7f692&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-170-Nmap Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://highon.coffee/blog/nmap-cheat-sheet/" rel="nofollow"&gt;https://highon.coffee/blog/nmap-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-171-Powershell Without Powershell – How To Bypass Application Whitelisting, Environment Restrictions &amp;amp; AV:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhillsinfosec.com/powershell-without-powershell-how-to-bypass-application-whitelisting-environment-restrictions-av/" rel="nofollow"&gt;https://www.blackhillsinfosec.com/powershell-without-powershell-how-to-bypass-application-whitelisting-environment-restrictions-av/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-172-Phishing with PowerPoint:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhillsinfosec.com/phishing-with-powerpoint/" rel="nofollow"&gt;https://www.blackhillsinfosec.com/phishing-with-powerpoint/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-173-hide-payload-ms-office-document-properties:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhillsinfosec.com/hide-payload-ms-office-document-properties/" rel="nofollow"&gt;https://www.blackhillsinfosec.com/hide-payload-ms-office-document-properties/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-174-How to Evade Application Whitelisting Using REGSVR32:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhillsinfosec.com/evade-application-whitelisting-using-regsvr32/" rel="nofollow"&gt;https://www.blackhillsinfosec.com/evade-application-whitelisting-using-regsvr32/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-175-How to Build a C2 Infrastructure with Digital Ocean – Part 1:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhillsinfosec.com/build-c2-infrastructure-digital-ocean-part-1/" rel="nofollow"&gt;https://www.blackhillsinfosec.com/build-c2-infrastructure-digital-ocean-part-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-176-WordPress Penetration Testing using Symposium Plugin SQL Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/wordpress-penetration-testing-using-symposium-plugin-sql-injection" rel="nofollow"&gt;http://www.hackingarticles.in/wordpress-penetration-testing-using-symposium-plugin-sql-injection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-177-Manual SQL Injection Exploitation Step by Step:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/manual-sql-injection-exploitation-step-step" rel="nofollow"&gt;http://www.hackingarticles.in/manual-sql-injection-exploitation-step-step&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-178-MSSQL Penetration Testing with Metasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/mssql-penetration-testing-metasploit" rel="nofollow"&gt;http://www.hackingarticles.in/mssql-penetration-testing-metasploit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-179-Multiple Ways to Get root through Writable File:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/multiple-ways-to-get-root-through-writable-file" rel="nofollow"&gt;http://www.hackingarticles.in/multiple-ways-to-get-root-through-writable-file&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-180-MySQL Penetration Testing with Nmap:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/mysql-penetration-testing-nmap" rel="nofollow"&gt;http://www.hackingarticles.in/mysql-penetration-testing-nmap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-181-NetBIOS and SMB Penetration Testing on Windows:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/netbios-and-smb-penetration-testing-on-windows" rel="nofollow"&gt;http://www.hackingarticles.in/netbios-and-smb-penetration-testing-on-windows&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-182-Network Packet Forensic using Wireshark:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/network-packet-forensic-using-wireshark" rel="nofollow"&gt;http://www.hackingarticles.in/network-packet-forensic-using-wireshark&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-183-Escape and Evasion Egressing Restricted Networks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.optiv.com/blog/escape-and-evasion-egressing-restricted-networks/" rel="nofollow"&gt;https://www.optiv.com/blog/escape-and-evasion-egressing-restricted-networks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-183-Awesome-Hacking-Resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/vitalysim/Awesome-Hacking-Resources"&gt;https://github.com/vitalysim/Awesome-Hacking-Resources&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-184-Hidden directories and les as a source of sensitive information about web application:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/84e5c534e5ad" rel="nofollow"&gt;https://medium.com/p/84e5c534e5ad&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-185-Hiding Registry keys with PSRe ect:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://posts.specterops.io/hiding-registry-keys-with-psreflect-b18ec5ac8353" rel="nofollow"&gt;https://posts.specterops.io/hiding-registry-keys-with-psreflect-b18ec5ac8353&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-186-awesome-cve-poc:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/qazbnm456/awesome-cve-poc"&gt;https://github.com/qazbnm456/awesome-cve-poc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-187-Linux Capabilities Privilege Escalation via OpenSSL with SELinux Enabled and Enforced:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/74d2bec02099" rel="nofollow"&gt;https://medium.com/p/74d2bec02099&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-188-Post Exploitation in Windows using dir Command:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/post-exploitation-windows-using-dir-command" rel="nofollow"&gt;http://www.hackingarticles.in/post-exploitation-windows-using-dir-command&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;189-Web Application Firewall (WAF) Evasion Techniques #2:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/secjuice/web-application-firewall-waf-evasion-techniques-2-125995f3e7b0" rel="nofollow"&gt;https://medium.com/secjuice/web-application-firewall-waf-evasion-techniques-2-125995f3e7b0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-190-Forensics Investigation of Remote PC (Part 1):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/forensics-investigation-of-remote-pc-part-1" rel="nofollow"&gt;http://www.hackingarticles.in/forensics-investigation-of-remote-pc-part-1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-191-CloudFront Hijacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.mindpointgroup.com/blog/pen-test/cloudfront-hijacking/" rel="nofollow"&gt;https://www.mindpointgroup.com/blog/pen-test/cloudfront-hijacking/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-192-PowerPoint and Custom Actions:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cofense.com/powerpoint-and-custom-actions/" rel="nofollow"&gt;https://cofense.com/powerpoint-and-custom-actions/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-193-Privilege Escalation on Windows 7,8,10, Server 2008, Server 2012 using Potato:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/privilege-escalation-on-windows-7810-server-2008-server-2012-using-potato" rel="nofollow"&gt;http://www.hackingarticles.in/privilege-escalation-on-windows-7810-server-2008-server-2012-using-potato&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-194-How to intercept TOR hidden service requests with Burp:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/6214035963a0" rel="nofollow"&gt;https://medium.com/p/6214035963a0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-195-How to Make a Captive Portal of Death:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/48e82a1d81a/share/twitter" rel="nofollow"&gt;https://medium.com/p/48e82a1d81a/share/twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-196-How to find any CEO’s email address in minutes:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/70dcb96e02b0" rel="nofollow"&gt;https://medium.com/p/70dcb96e02b0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;197-Microsoft Windows 10 - Child Process Restriction Mitigation Bypass:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/download/44888.txt" rel="nofollow"&gt;https://www.exploit-db.com/download/44888.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-198-Microsoft Windows - Token Process Trust SID Access Check Bypass Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/download/44630.txt" rel="nofollow"&gt;https://www.exploit-db.com/download/44630.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-199-Microsoft Word upload to Stored XSS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.n00py.io/2018/03/microsoft-word-upload-to-stored-xss/" rel="nofollow"&gt;https://www.n00py.io/2018/03/microsoft-word-upload-to-stored-xss/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-200-MobileApp-Pentest-Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/tanprathan/MobileApp-Pentest-Cheatsheet"&gt;https://github.com/tanprathan/MobileApp-Pentest-Cheatsheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-201-awesome:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/sindresorhus/awesome"&gt;https://github.com/sindresorhus/awesome&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-201-writing arm shellcode:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://azeria-labs.com/writing-arm-shellcode/" rel="nofollow"&gt;https://azeria-labs.com/writing-arm-shellcode/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-202-debugging with gdb introduction:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://azeria-labs.com/debugging-with-gdb-introduction/" rel="nofollow"&gt;https://azeria-labs.com/debugging-with-gdb-introduction/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-203-emulate raspberrypi with qemu:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://azeria-labs.com/emulate-raspberry-pi-with-qemu/" rel="nofollow"&gt;https://azeria-labs.com/emulate-raspberry-pi-with-qemu/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-204-Bash One-Liner to Check Your Password(s) via pwnedpasswords.com’s API Using the k-Anonymity Method:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/a5807a9a8056" rel="nofollow"&gt;https://medium.com/p/a5807a9a8056&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-205-A Red Teamer's guide to pivoting:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://artkond.com/2017/03/23/pivoting-guide/" rel="nofollow"&gt;https://artkond.com/2017/03/23/pivoting-guide/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-206-Using WebDAV features as a covert channel:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://arno0x0x.wordpress.com/2017/09/07/using-webdav-features-as-a-covert-channel/" rel="nofollow"&gt;https://arno0x0x.wordpress.com/2017/09/07/using-webdav-features-as-a-covert-channel/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-207-A View of Persistence:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://rastamouse.me/2018/03/a-view-of-persistence/" rel="nofollow"&gt;https://rastamouse.me/2018/03/a-view-of-persistence/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-208- pupy websocket transport:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bitrot.sh/post/28-11-2017-pupy-websocket-transport/" rel="nofollow"&gt;https://bitrot.sh/post/28-11-2017-pupy-websocket-transport/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-209-Subdomains Enumeration Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentester.land/cheatsheets/2018/11/.../subdomains-enumeration-cheatsheet.html" rel="nofollow"&gt;https://pentester.land/cheatsheets/2018/11/.../subdomains-enumeration-cheatsheet.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-210-DNS Reconnaissance – DNSRecon:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2012/11/13/dns-reconnaissance-dnsrecon/" rel="nofollow"&gt;https://pentestlab.blog/2012/11/13/dns-reconnaissance-dnsrecon/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-211-Cheatsheets:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bitrot.sh/cheatsheet" rel="nofollow"&gt;https://bitrot.sh/cheatsheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-212-Understanding Guide to Nmap Firewall Scan (Part 2):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/understanding-guide-nmap-firewall-scan-part-2" rel="nofollow"&gt;http://www.hackingarticles.in/understanding-guide-nmap-firewall-scan-part-2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-213-Exploit Office 2016 using CVE-2018-0802:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://technologyredefine.blogspot.com/2018/01/exploit-office-2016-using-cve-2018-0802.html" rel="nofollow"&gt;https://technologyredefine.blogspot.com/2018/01/exploit-office-2016-using-cve-2018-0802.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-214-windows-exploit-suggester:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://technologyredefine.blogspot.com/2018/01/windows-exploit-suggester.html" rel="nofollow"&gt;https://technologyredefine.blogspot.com/2018/01/windows-exploit-suggester.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-215-INSTALLING PRESISTENCE BACKDOOR IN WINDOWS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://technologyredefine.blogspot.com/2018/01/installing-presistence-backdoor-in.html" rel="nofollow"&gt;https://technologyredefine.blogspot.com/2018/01/installing-presistence-backdoor-in.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-216-IDS, IPS AND FIREWALL EVASION USING NMAP:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://technologyredefine.blogspot.com/2017/09/ids-ips-and-firewall-evasion-using-nmap.html" rel="nofollow"&gt;https://technologyredefine.blogspot.com/2017/09/ids-ips-and-firewall-evasion-using-nmap.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-217-Wireless Penetration Testing Checklist – A Detailed Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/wireless-penetration-testing-checklist-a-detailed-cheat-sheet" rel="nofollow"&gt;https://gbhackers.com/wireless-penetration-testing-checklist-a-detailed-cheat-sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;218-Most Important Web Application Security Tools &amp;amp; Resources for Hackers and Security Professionals:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/web-application-security-tools-resources" rel="nofollow"&gt;https://gbhackers.com/web-application-security-tools-resources&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-219-Web Application Penetration Testing Checklist – A Detailed Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/web-application-penetration-testing-checklist-a-detailed-cheat-sheet" rel="nofollow"&gt;https://gbhackers.com/web-application-penetration-testing-checklist-a-detailed-cheat-sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-220-Top 500 Most Important XSS Script Cheat Sheet for Web Application Penetration Testing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/top-500-important-xss-cheat-sheet" rel="nofollow"&gt;https://gbhackers.com/top-500-important-xss-cheat-sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-221-USBStealer – Password Hacking Tool For Windows Machine Applications:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/pasword-hacking" rel="nofollow"&gt;https://gbhackers.com/pasword-hacking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-222-Most Important Mobile Application Penetration Testing Cheat sheet with Tools &amp;amp; Resources for Security Professionals:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/mobile-application-penetration-testing" rel="nofollow"&gt;https://gbhackers.com/mobile-application-penetration-testing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-223-Metasploit Can Be Directly Used For Hardware Penetration Testing Now:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/metasploit-can-be-directly-used-for-hardware-vulnerability-testing-now" rel="nofollow"&gt;https://gbhackers.com/metasploit-can-be-directly-used-for-hardware-vulnerability-testing-now&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-224-How to Perform Manual SQL Injection While Pentesting With Single quote Error Based Parenthesis Method:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/manual-sql-injection-2" rel="nofollow"&gt;https://gbhackers.com/manual-sql-injection-2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-225-Email Spoo ng – Exploiting Open Relay configured Public Mailservers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/email-spoofing-exploiting-open-relay" rel="nofollow"&gt;https://gbhackers.com/email-spoofing-exploiting-open-relay&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-226-Email Header Analysis – Received Email is Genuine or Spoofed:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/email-header-analysis" rel="nofollow"&gt;https://gbhackers.com/email-header-analysis&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-227-Most Important Cyber Threat Intelligence Tools List For Hackers and Security Professionals:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/cyber-threat-intelligence-tools" rel="nofollow"&gt;https://gbhackers.com/cyber-threat-intelligence-tools&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-228-Creating and Analyzing a Malicious PDF File with PDF-Parser Tool:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/creating-and-analyzing-a-malicious-pdf-file-with-pdf-parser-tool" rel="nofollow"&gt;https://gbhackers.com/creating-and-analyzing-a-malicious-pdf-file-with-pdf-parser-tool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-229-Commix – Automated All-in-One OS Command Injection and Exploitation Tool:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/commix-automated-all-in-one-os-command-injection-and-exploitation-tool" rel="nofollow"&gt;https://gbhackers.com/commix-automated-all-in-one-os-command-injection-and-exploitation-tool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-230-Advanced ATM Penetration Testing Methods:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/advanced-atm-penetration-testing-methods" rel="nofollow"&gt;https://gbhackers.com/advanced-atm-penetration-testing-methods&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-231-A8-Cross-Site Request Forgery (CSRF):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/a8-cross-site-request-forgery-csrf" rel="nofollow"&gt;https://gbhackers.com/a8-cross-site-request-forgery-csrf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-232-Fully undetectable backdooring PE File:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://haiderm.com/fully-undetectable-backdooring-pe-file/" rel="nofollow"&gt;https://haiderm.com/fully-undetectable-backdooring-pe-file/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-233-backdooring exe files:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://haiderm.com/tag/backdooring-exe-files/" rel="nofollow"&gt;https://haiderm.com/tag/backdooring-exe-files/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-234-From PHP (s)HELL to Powershell Heaven:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/da40ce840da8" rel="nofollow"&gt;https://medium.com/p/da40ce840da8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-235-Forensic Investigation of Nmap Scan using Wireshark:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/forensic-investigation-of-nmap-scan-using-wireshark" rel="nofollow"&gt;http://www.hackingarticles.in/forensic-investigation-of-nmap-scan-using-wireshark&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-236-Unleashing an Ultimate XSS Polyglot:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/0xsobky/HackVault/wiki"&gt;https://github.com/0xsobky/HackVault/wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-237-wifi-arsenal:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/0x90/wifi-arsenal"&gt;https://github.com/0x90/wifi-arsenal&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-238-XXE_payloads:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/staaldraad/01415b990939494879b4"&gt;https://gist.github.com/staaldraad/01415b990939494879b4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-239-xss_payloads_2016:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/7ioSecurity/XSS-Payloads/raw/master/xss_payloads_2016"&gt;https://github.com/7ioSecurity/XSS-Payloads/raw/master/xss_payloads_2016&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-240-A curated list of awesome command-line frameworks, toolkits, guides and gizmos. Inspired by awesome-php.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/alebcay/awesome-shell"&gt;https://github.com/alebcay/awesome-shell&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-241-The goal of this repository is to document the most common techniques to bypass AppLocker.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/api0cradle/UltimateAppLockerByPassList"&gt;https://github.com/api0cradle/UltimateAppLockerByPassList&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-242-A curated list of CTF frameworks, libraries, resources and softwares:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/apsdehal/awesome-ctf"&gt;https://github.com/apsdehal/awesome-ctf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-243-A collection of android security related resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ashishb/android-security-awesome"&gt;https://github.com/ashishb/android-security-awesome&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-244-OSX and iOS related security tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ashishb/osx-and-ios-security-awesome"&gt;https://github.com/ashishb/osx-and-ios-security-awesome&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-245-regexp-security-cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/attackercan/regexp-security-cheatsheet"&gt;https://github.com/attackercan/regexp-security-cheatsheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-246-PowerView-2.0 tips and tricks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/HarmJ0y/3328d954607d71362e3c"&gt;https://gist.github.com/HarmJ0y/3328d954607d71362e3c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-247-A curated list of awesome awesomeness:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/bayandin/awesome-awesomeness"&gt;https://github.com/bayandin/awesome-awesomeness&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-248-Android App Security Checklist:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/b-mueller/android_app_security_checklist"&gt;https://github.com/b-mueller/android_app_security_checklist&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-249-Crack WPA/WPA2 Wi-Fi Routers with Airodump-ng and Aircrack-ng/Hashcat:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/brannondorsey/wifi-cracking"&gt;https://github.com/brannondorsey/wifi-cracking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-250-My-Gray-Hacker-Resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/bt3gl/My-Gray-Hacker-Resources"&gt;https://github.com/bt3gl/My-Gray-Hacker-Resources&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-251-A collection of tools developed by other researchers in the Computer Science area to process network traces:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/caesar0301/awesome-pcaptools"&gt;https://github.com/caesar0301/awesome-pcaptools&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-252-A curated list of awesome Hacking tutorials, tools and resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/carpedm20/awesome-hacking"&gt;https://github.com/carpedm20/awesome-hacking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-253-RFSec-ToolKit is a collection of Radio Frequency Communication Protocol Hacktools.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/cn0xroot/RFSec-ToolKit"&gt;https://github.com/cn0xroot/RFSec-ToolKit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-254-Collection of the cheat sheets useful for pentesting:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/coreb1t/awesome-pentest-cheat-sheets"&gt;https://github.com/coreb1t/awesome-pentest-cheat-sheets&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-255-Collection of the cheat sheets useful for pentesting:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/coreb1t/awesome-pentest-cheat-sheets"&gt;https://github.com/coreb1t/awesome-pentest-cheat-sheets&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-256-Collection of the cheat sheets useful for pentesting:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/coreb1t/awesome-pentest-cheat-sheets"&gt;https://github.com/coreb1t/awesome-pentest-cheat-sheets&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-257-A curated list of awesome forensic analysis tools and resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/cugu/awesome-forensics"&gt;https://github.com/cugu/awesome-forensics&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-258-Open-Redirect-Payloads:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/cujanovic/Open-Redirect-Payloads"&gt;https://github.com/cujanovic/Open-Redirect-Payloads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-259-A Threat hunter's playbook to aid the development of techniques and hypothesis for hunting campaigns.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Cyb3rWard0g/ThreatHunter-Playbook"&gt;https://github.com/Cyb3rWard0g/ThreatHunter-Playbook&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-260-Windows memory hacking library:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/DarthTon/Blackbone"&gt;https://github.com/DarthTon/Blackbone&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-261-A collective list of public JSON APIs for use in security.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/deralexxx/security-apis"&gt;https://github.com/deralexxx/security-apis&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-262-An authoritative list of awesome devsecops tools with the help from community experiments and contributions.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/devsecops/awesome-devsecops"&gt;https://github.com/devsecops/awesome-devsecops&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-263-List of Awesome Hacking places, organised by Country and City, listing if it features power and wifi:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/diasdavid/awesome-hacking-spots"&gt;https://github.com/diasdavid/awesome-hacking-spots&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-264-A comprehensive curated list of available Bug Bounty &amp;amp; Disclosure Programs and Write-ups:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/djadmin/awesome-bug-bounty"&gt;https://github.com/djadmin/awesome-bug-bounty&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-265-Notes for taking the OSCP in 2097:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/dostoevskylabs/dostoevsky-pentest-notes"&gt;https://github.com/dostoevskylabs/dostoevsky-pentest-notes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-266-A curated list of awesome Windows Exploitation resources, and shiny things. Inspired by awesom:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/enddo/awesome-windows-exploitation"&gt;https://github.com/enddo/awesome-windows-exploitation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-267-A curated list of resources (books, tutorials, courses, tools and vulnerable applications) for learning about Exploit Development:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/FabioBaroni/awesome-exploit-development"&gt;https://github.com/FabioBaroni/awesome-exploit-development&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-268-A curated list of awesome reversing resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/fdivrp/awesome-reversing"&gt;https://github.com/fdivrp/awesome-reversing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-269-Git All the Payloads! A collection of web attack payloads:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/foospidy/payloads"&gt;https://github.com/foospidy/payloads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-270-GitHub Project Resource List:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/FuzzySecurity/Resource-List"&gt;https://github.com/FuzzySecurity/Resource-List&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-271-Use your macOS terminal shell to do awesome things.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/herrbischoff/awesome-macos-command-line"&gt;https://github.com/herrbischoff/awesome-macos-command-line&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-272-Defeating Windows User Account Control:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/hfiref0x/UACME"&gt;https://github.com/hfiref0x/UACME&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-273-Free Security and Hacking eBooks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Hack-with-Github/Free-Security-eBooks"&gt;https://github.com/Hack-with-Github/Free-Security-eBooks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-274-Universal Radio Hacker: investigate wireless protocols like a boss:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/jopohl/urh"&gt;https://github.com/jopohl/urh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-275-A curated list of movies every hacker &amp;amp; cyberpunk must watch:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/k4m4/movies-for-hackers"&gt;https://github.com/k4m4/movies-for-hackers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-276-Various public documents, whitepapers and articles about APT campaigns:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/kbandla/APTnotes"&gt;https://github.com/kbandla/APTnotes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-277-A database of common, interesting or useful commands, in one handy referable form:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/leostat/rtfm"&gt;https://github.com/leostat/rtfm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-278-A curated list of tools for incident response:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/meirwah/awesome-incident-response"&gt;https://github.com/meirwah/awesome-incident-response&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-279-A curated list of awesome guides, tools, and other resources related to the security and compromise of locks, safes, and keys:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/meitar/awesome-lockpicking"&gt;https://github.com/meitar/awesome-lockpicking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-280-A curated list of static analysis tools, linters and code quality checkers for various programming languages:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mre/awesome-static-analysis"&gt;https://github.com/mre/awesome-static-analysis&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-281-A Collection of Hacks in IoT Space so that we can address them (hopefully):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/nebgnahz/awesome-iot-hacks"&gt;https://github.com/nebgnahz/awesome-iot-hacks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-281-A Course on Intermediate Level Linux Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/nnamon/linux-exploitation-course"&gt;https://github.com/nnamon/linux-exploitation-course&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-282-Kali Linux Cheat Sheet for Penetration Testers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/NoorQureshi/kali-linux-cheatsheet"&gt;https://github.com/NoorQureshi/kali-linux-cheatsheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-283-A curated list of awesome infosec courses and training resources.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/onlurking/awesome-infosec"&gt;https://github.com/onlurking/awesome-infosec&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-284-A curated list of resources for learning about application security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/paragonie/awesome-appsec"&gt;https://github.com/paragonie/awesome-appsec&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-285-an awesome list of honeypot resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/paralax/awesome-honeypots"&gt;https://github.com/paralax/awesome-honeypots&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;286-GitHub Enterprise SQL Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blogger.com/share-post.g?blogID=2987759532072489303&amp;amp;postID=6980097238231152493" rel="nofollow"&gt;https://www.blogger.com/share-post.g?blogID=2987759532072489303&amp;amp;postID=6980097238231152493&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-287-A curated list of fuzzing resources ( Books, courses - free and paid, videos, tools, tutorials and vulnerable applications to practice on ) for learning Fuzzing and initial phases of Exploit Development like root cause analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/secfigo/Awesome-Fuzzing"&gt;https://github.com/secfigo/Awesome-Fuzzing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-288-PHP htaccess injection cheat sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/sektioneins/pcc/wiki"&gt;https://github.com/sektioneins/pcc/wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-289-A curated list of the awesome resources about the Vulnerability Research:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/sergey-pronin/Awesome-Vulnerability-Research"&gt;https://github.com/sergey-pronin/Awesome-Vulnerability-Research&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-290-A list of useful payloads and bypass for Web Application Security and Pentest/CTF:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings"&gt;https://github.com/swisskyrepo/PayloadsAllTheThings&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-291-A collection of Red Team focused tools, scripts, and notes:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/threatexpress/red-team-scripts"&gt;https://github.com/threatexpress/red-team-scripts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-292-Awesome XSS stuff:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/UltimateHackers/AwesomeXSS"&gt;https://github.com/UltimateHackers/AwesomeXSS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-293-A collection of hacking / penetration testing resources to make you better!:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/vitalysim/Awesome-Hacking-Resources"&gt;https://github.com/vitalysim/Awesome-Hacking-Resources&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-294-Docker Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/wsargent/docker-cheat-sheet"&gt;https://github.com/wsargent/docker-cheat-sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-295-Decrypted content of eqgrp-auction-file.tar.xz:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/x0rz/EQGRP"&gt;https://github.com/x0rz/EQGRP&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-296-A bunch of links related to Linux kernel exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/xairy/linux-kernel-exploitation"&gt;https://github.com/xairy/linux-kernel-exploitation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-297-Penetration Testing 102 - Windows Privilege Escalation Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.exumbraops.com/penetration-testing-102-windows-privilege-escalation-cheatsheet" rel="nofollow"&gt;www.exumbraops.com/penetration-testing-102-windows-privilege-escalation-cheatsheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-298-Pentesting Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://anhtai.me/pentesting-cheatsheet/" rel="nofollow"&gt;https://anhtai.me/pentesting-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-299-Windows Privilege Escalation Methods for Pentesters:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/" rel="nofollow"&gt;https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-300-Penetration Testing Cheat Sheet For Windows Machine – Intrusion Detection:&lt;/p&gt;
&lt;p&gt;-301-Reading Your Way Around UAC (Part 1):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://tyranidslair.blogspot.co.uk/2017/05/reading-your-way-around-uac-part-1.html" rel="nofollow"&gt;https://tyranidslair.blogspot.co.uk/2017/05/reading-your-way-around-uac-part-1.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-302--Reading Your Way Around UAC (Part 2):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://tyranidslair.blogspot.co.uk/2017/05/reading-your-way-around-uac-part-2.html" rel="nofollow"&gt;https://tyranidslair.blogspot.co.uk/2017/05/reading-your-way-around-uac-part-2.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-303-Executing Metasploit &amp;amp; Empire Payloads from MS Office Document Properties (part 2 of 2):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stealingthe.network/executing-metasploit-empire-payloads-from-ms-office-document-properties-part-2-of-2/" rel="nofollow"&gt;https://stealingthe.network/executing-metasploit-empire-payloads-from-ms-office-document-properties-part-2-of-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-304-SSRF - Server Side Request Forgery (Types and ways to exploit it) Part-1:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/29d034c27978" rel="nofollow"&gt;https://medium.com/p/29d034c27978&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-304-Automating Cobalt Strike,Aggressor Collection Scripts:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/bluscreenofjeff/AggressorScripts"&gt;https://github.com/bluscreenofjeff/AggressorScripts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/harleyQu1nn/AggressorScripts"&gt;https://github.com/harleyQu1nn/AggressorScripts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-305-Vi Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://highon.coffee/blog/vi-cheat-sheet/" rel="nofollow"&gt;https://highon.coffee/blog/vi-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-306-Network Recon Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cheatography.com/coffeefueled/cheat-sheets/network-recon/" rel="nofollow"&gt;https://www.cheatography.com/coffeefueled/cheat-sheets/network-recon/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-307-LFI Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://highon.coffee/blog/lfi-cheat-sheet/" rel="nofollow"&gt;https://highon.coffee/blog/lfi-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-308-Systemd Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://highon.coffee/blog/systemd-cheat-sheet/" rel="nofollow"&gt;https://highon.coffee/blog/systemd-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-309-Aircrack-ng Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securityonline.info/aircrack-ng-cheatsheet/" rel="nofollow"&gt;https://securityonline.info/aircrack-ng-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-310-Kali Linux Cheat Sheet for Penetration Testers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackmoreops.com/?p=7212" rel="nofollow"&gt;https://www.blackmoreops.com/?p=7212&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-311-Wifi Pentesting Command Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://randomkeystrokes.com/2016/07/01/wifi-pentesting-cheatsheet/" rel="nofollow"&gt;https://randomkeystrokes.com/2016/07/01/wifi-pentesting-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-312-Android Testing Environment Cheatsheet (Part 1):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://randomkeystrokes.com/2016/10/17/android-testing-environment-cheatsheet/" rel="nofollow"&gt;https://randomkeystrokes.com/2016/10/17/android-testing-environment-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-313-cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://randomkeystrokes.com/category/cheatsheet/" rel="nofollow"&gt;https://randomkeystrokes.com/category/cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-314-Reverse Shell Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://highon.coffee/blog/reverse-shell-cheat-sheet/" rel="nofollow"&gt;https://highon.coffee/blog/reverse-shell-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-315-Linux Commands Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://highon.coffee/blog/linux-commands-cheat-sheet/" rel="nofollow"&gt;https://highon.coffee/blog/linux-commands-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-316-Linux Privilege Escalation using Sudo Rights:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/linux-privilege-escalation-using-exploiting-sudo-rights" rel="nofollow"&gt;http://www.hackingarticles.in/linux-privilege-escalation-using-exploiting-sudo-rights&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-317-Linux Privilege Escalation using Misconfigured NFS:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/linux-privilege-escalation-using-misconfigured-nfs/" rel="nofollow"&gt;http://www.hackingarticles.in/linux-privilege-escalation-using-misconfigured-nfs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-318-Linux Privilege Escalation by Exploiting Cronjobs:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/linux-privilege-escalation-by-exploiting-cron-jobs/" rel="nofollow"&gt;http://www.hackingarticles.in/linux-privilege-escalation-by-exploiting-cron-jobs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-319-Web Penetration Testing:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/web-penetration-testing/" rel="nofollow"&gt;http://www.hackingarticles.in/web-penetration-testing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-320-Webshell to Meterpreter:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/webshell-to-meterpreter" rel="nofollow"&gt;http://www.hackingarticles.in/webshell-to-meterpreter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-321-WordPress Penetration Testing using WPScan &amp;amp; Metasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/wordpress-penetration-testing-using-wpscan-metasploit" rel="nofollow"&gt;http://www.hackingarticles.in/wordpress-penetration-testing-using-wpscan-metasploit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-322-XSS Exploitation in DVWA (Bypass All Security):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/xss-exploitation-dvwa-bypass-security" rel="nofollow"&gt;http://www.hackingarticles.in/xss-exploitation-dvwa-bypass-security&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-323-Linux Privilege Escalation Using PATH Variable:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/linux-privilege-escalation-using-path-variable/" rel="nofollow"&gt;http://www.hackingarticles.in/linux-privilege-escalation-using-path-variable/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-324-VNC tunneling over SSH:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/vnc-tunneling-ssh" rel="nofollow"&gt;http://www.hackingarticles.in/vnc-tunneling-ssh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-325-VNC Pivoting through Meterpreter:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/vnc-pivoting-meterpreter" rel="nofollow"&gt;http://www.hackingarticles.in/vnc-pivoting-meterpreter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-326-Week of Evading Microsoft ATA - Announcement and Day 1:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.labofapenetrationtester.com/2017/08/week-of-evading-microsoft-ata-day1.html" rel="nofollow"&gt;https://www.labofapenetrationtester.com/2017/08/week-of-evading-microsoft-ata-day1.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-327-Abusing DNSAdmins privilege for escalation in Active Directory:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.labofapenetrationtester.com/2017/05/abusing-dnsadmins-privilege-for-escalation-in-active-directory.html" rel="nofollow"&gt;https://www.labofapenetrationtester.com/2017/05/abusing-dnsadmins-privilege-for-escalation-in-active-directory.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-328-Using SQL Server for attacking a Forest Trust:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.labofapenetrationtester.com/2017/03/using-sql-server-for-attacking-forest-trust.html" rel="nofollow"&gt;https://www.labofapenetrationtester.com/2017/03/using-sql-server-for-attacking-forest-trust.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-329-Empire :&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.harmj0y.net/blog/category/empire/" rel="nofollow"&gt;http://www.harmj0y.net/blog/category/empire/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-330-8 Deadly Commands You Should Never Run on Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.howtogeek.com/125157/8-deadly-commands-you-should-never-run-on-linux/" rel="nofollow"&gt;https://www.howtogeek.com/125157/8-deadly-commands-you-should-never-run-on-linux/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-331-External C2 framework for Cobalt Strike:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.insomniacsecurity.com/2018/01/11/externalc2.html" rel="nofollow"&gt;https://www.insomniacsecurity.com/2018/01/11/externalc2.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-332-How to use Public IP on Kali Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/use-public-ip-kali-linux" rel="nofollow"&gt;http://www.hackingarticles.in/use-public-ip-kali-linux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-333-Bypass Admin access through guest Account in windows 10:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/bypass-admin-access-guest-account-windows-10" rel="nofollow"&gt;http://www.hackingarticles.in/bypass-admin-access-guest-account-windows-10&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-334-Bypass Firewall Restrictions with Metasploit (reverse_tcp_allports):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/bypass-firewall-restrictions-metasploit-reverse_tcp_allports" rel="nofollow"&gt;http://www.hackingarticles.in/bypass-firewall-restrictions-metasploit-reverse_tcp_allports&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-335-Bypass SSH Restriction by Port Relay:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/bypass-ssh-restriction-by-port-relay" rel="nofollow"&gt;http://www.hackingarticles.in/bypass-ssh-restriction-by-port-relay&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-336-Bypass UAC Protection of Remote Windows 10 PC (Via FodHelper Registry Key):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/bypass-uac-protection-remote-windows-10-pc-via-fodhelper-registry-key" rel="nofollow"&gt;http://www.hackingarticles.in/bypass-uac-protection-remote-windows-10-pc-via-fodhelper-registry-key&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-337-Bypass UAC in Windows 10 using bypass_comhijack Exploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/bypass-uac-windows-10-using-bypass_comhijack-exploit" rel="nofollow"&gt;http://www.hackingarticles.in/bypass-uac-windows-10-using-bypass_comhijack-exploit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-338-Bind Payload using SFX archive with Trojanizer:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/bind-payload-using-sfx-archive-trojanizer" rel="nofollow"&gt;http://www.hackingarticles.in/bind-payload-using-sfx-archive-trojanizer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-339-Capture NTLM Hashes using PDF (Bad-Pdf):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/capture-ntlm-hashes-using-pdf-bad-pdf" rel="nofollow"&gt;http://www.hackingarticles.in/capture-ntlm-hashes-using-pdf-bad-pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-340-Best of Post Exploitation Exploits &amp;amp; Tricks:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/best-of-post-exploitation-exploits-tricks/" rel="nofollow"&gt;http://www.hackingarticles.in/best-of-post-exploitation-exploits-tricks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-341-Detect SQL Injection Attack using Snort IDS:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/detect-sql-injection-attack-using-snort-ids/" rel="nofollow"&gt;http://www.hackingarticles.in/detect-sql-injection-attack-using-snort-ids/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-342-Beginner Guide to Website Footprinting:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/beginner-guide-website-footprinting/" rel="nofollow"&gt;http://www.hackingarticles.in/beginner-guide-website-footprinting/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-343-How to Enable and Monitor Firewall Log in Windows PC:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/enable-monitor-firewall-log-windows-pc/" rel="nofollow"&gt;http://www.hackingarticles.in/enable-monitor-firewall-log-windows-pc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-344-Wifi Post Exploitation on Remote PC:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/wifi-post-exploitation-remote-pc/" rel="nofollow"&gt;http://www.hackingarticles.in/wifi-post-exploitation-remote-pc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-335-Check Meltdown Vulnerability in CPU:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/check-meltdown-vulnerability-cpu" rel="nofollow"&gt;http://www.hackingarticles.in/check-meltdown-vulnerability-cpu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-336-XXE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://phonexicum.github.io/infosec/xxe.html" rel="nofollow"&gt;https://phonexicum.github.io/infosec/xxe.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-337-[XSS] Re ected XSS Bypass Filter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/de41d35239a3" rel="nofollow"&gt;https://medium.com/p/de41d35239a3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-338-Engagement Tools Tutorial in Burp suite:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/engagement-tools-tutorial-burp-suite" rel="nofollow"&gt;http://www.hackingarticles.in/engagement-tools-tutorial-burp-suite&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-339-Wiping Out CSRF:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@jrozner/wiping-out-csrf-ded97ae7e83f" rel="nofollow"&gt;https://medium.com/@jrozner/wiping-out-csrf-ded97ae7e83f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-340-First entry: Welcome and fileless UAC bypass:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://winscripting.blog/2017/05/12/first-entry-welcome-and-uac-bypass/" rel="nofollow"&gt;https://winscripting.blog/2017/05/12/first-entry-welcome-and-uac-bypass/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-341-Writing a Custom Shellcode Encoder:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/31816e767611" rel="nofollow"&gt;https://medium.com/p/31816e767611&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-342-Security Harden CentOS 7 :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://highon.coffee/blog/security-harden-centos-7/" rel="nofollow"&gt;https://highon.coffee/blog/security-harden-centos-7/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-343-THE BIG BAD WOLF - XSS AND MAINTAINING ACCESS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.paulosyibelo.com/2018/06/the-big-bad-wolf-xss-and-maintaining.html" rel="nofollow"&gt;https://www.paulosyibelo.com/2018/06/the-big-bad-wolf-xss-and-maintaining.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-344-MySQL:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://websec.ca/kb/CHANGELOG.txt" rel="nofollow"&gt;https://websec.ca/kb/CHANGELOG.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-345-Deobfuscation of VM based software protection:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shell-storm.org/talks/SSTIC2017_Deobfuscation_of_VM_based_software_protection.pdf" rel="nofollow"&gt;http://shell-storm.org/talks/SSTIC2017_Deobfuscation_of_VM_based_software_protection.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-346-Online Assembler and Disassembler:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shell-storm.org/online/Online-Assembler-and-Disassembler/" rel="nofollow"&gt;http://shell-storm.org/online/Online-Assembler-and-Disassembler/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-347-Shellcodes database for study cases:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shell-storm.org/shellcode/" rel="nofollow"&gt;http://shell-storm.org/shellcode/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-348-Dynamic Binary Analysis and Obfuscated Codes:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shell-storm.org/talks/sthack2016-rthomas-jsalwan.pdf" rel="nofollow"&gt;http://shell-storm.org/talks/sthack2016-rthomas-jsalwan.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-349-How Triton may help to analyse obfuscated binaries:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://triton.quarkslab.com/files/misc82-triton.pdf" rel="nofollow"&gt;http://triton.quarkslab.com/files/misc82-triton.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-350-Triton: A Concolic Execution Framework:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shell-storm.org/talks/SSTIC2015_English_slide_detailed_version_Triton_Concolic_Execution_FrameWork_FSaudel_JSalwan.pdf" rel="nofollow"&gt;http://shell-storm.org/talks/SSTIC2015_English_slide_detailed_version_Triton_Concolic_Execution_FrameWork_FSaudel_JSalwan.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-351-Automatic deobfuscation of the Tigress binary protection using symbolic execution and LLVM:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/JonathanSalwan/Tigress_protection"&gt;https://github.com/JonathanSalwan/Tigress_protection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-352-What kind of semantics information Triton can provide?:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://triton.quarkslab.com/blog/What-kind-of-semantics-information-Triton-can-provide/" rel="nofollow"&gt;http://triton.quarkslab.com/blog/What-kind-of-semantics-information-Triton-can-provide/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-353-Code coverage using a dynamic symbolic execution:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://triton.quarkslab.com/blog/Code-coverage-using-dynamic-symbolic-execution/" rel="nofollow"&gt;http://triton.quarkslab.com/blog/Code-coverage-using-dynamic-symbolic-execution/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-354-Triton (concolic execution framework) under the hood:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://triton.quarkslab.com/blog/first-approach-with-the-framework/" rel="nofollow"&gt;http://triton.quarkslab.com/blog/first-approach-with-the-framework/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-355-- Stack and heap overflow detection at runtime via behavior analysis and Pin:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shell-storm.org/blog/Stack-and-heap-overflow-detection-at-runtime-via-behavior-analysis-and-PIN/" rel="nofollow"&gt;http://shell-storm.org/blog/Stack-and-heap-overflow-detection-at-runtime-via-behavior-analysis-and-PIN/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-356-Binary analysis: Concolic execution with Pin and z3:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shell-storm.org/blog/Binary-analysis-Concolic-execution-with-Pin-and-z3/" rel="nofollow"&gt;http://shell-storm.org/blog/Binary-analysis-Concolic-execution-with-Pin-and-z3/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-357-In-Memory fuzzing with Pin:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shell-storm.org/blog/In-Memory-fuzzing-with-Pin/" rel="nofollow"&gt;http://shell-storm.org/blog/In-Memory-fuzzing-with-Pin/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-358-Hackover 2015 r150 (outdated solving for Triton use cases):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/JonathanSalwan/Triton/blob/master/src/examples/python/ctf-writeups/hackover-ctf-2015-r150/solve.py"&gt;https://github.com/JonathanSalwan/Triton/blob/master/src/examples/python/ctf-writeups/hackover-ctf-2015-r150/solve.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-359-Skip sh – Web Application Security Scanner for XSS, SQL Injection, Shell injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/skipfish-web-application-security-scanner" rel="nofollow"&gt;https://gbhackers.com/skipfish-web-application-security-scanner&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-360-Sublist3r – Tool for Penetration testers to Enumerate Sub-domains:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/sublist3r-penetration-testers" rel="nofollow"&gt;https://gbhackers.com/sublist3r-penetration-testers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-361-bypassing application whitelisting with bginfo:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://oddvar.moe/2017/05/18/bypassing-application-whitelisting-with-bginfo/" rel="nofollow"&gt;https://oddvar.moe/2017/05/18/bypassing-application-whitelisting-with-bginfo/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-362-accessing-clipboard-from-the-lock-screen-in-windows-10:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://oddvar.moe/2017/01/24/accessing-clipboard-from-the-lock-screen-in-windows-10/" rel="nofollow"&gt;https://oddvar.moe/2017/01/24/accessing-clipboard-from-the-lock-screen-in-windows-10/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-363-bypassing-device-guard-umci-using-chm-cve-2017-8625:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://oddvar.moe/2017/08/13/bypassing-device-guard-umci-using-chm-cve-2017-8625/" rel="nofollow"&gt;https://oddvar.moe/2017/08/13/bypassing-device-guard-umci-using-chm-cve-2017-8625/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-364-defense-in-depth-writeup:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://oddvar.moe/2017/09/13/defense-in-depth-writeup/" rel="nofollow"&gt;https://oddvar.moe/2017/09/13/defense-in-depth-writeup/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-365-applocker-case-study-how-insecure-is-it-really-part-1:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://oddvar.moe/2017/12/13/applocker-case-study-how-insecure-is-it-really-part-1/" rel="nofollow"&gt;https://oddvar.moe/2017/12/13/applocker-case-study-how-insecure-is-it-really-part-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-366-empires-cross-platform-office-macro:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhillsinfosec.com/empires-cross-platform-office-macro/" rel="nofollow"&gt;https://www.blackhillsinfosec.com/empires-cross-platform-office-macro/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-367-recon tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blackarch.org/recon.html" rel="nofollow"&gt;https://blackarch.org/recon.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-368-Black Hat 2018 tools list:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/991fa38901da" rel="nofollow"&gt;https://medium.com/p/991fa38901da&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-369-Application Introspection &amp;amp; Hooking With Frida:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.fuzzysecurity.com/tutorials/29.html" rel="nofollow"&gt;https://www.fuzzysecurity.com/tutorials/29.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-370-And I did OSCP!:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/589babbfea19" rel="nofollow"&gt;https://medium.com/p/589babbfea19&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-371-CoffeeMiner: Hacking WiFi to inject cryptocurrency miner to HTML requests:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://arnaucube.com/blog/coffeeminer-hacking-wifi-cryptocurrency-miner.html" rel="nofollow"&gt;https://arnaucube.com/blog/coffeeminer-hacking-wifi-cryptocurrency-miner.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-372-Most Important Endpoint Security &amp;amp; Threat Intelligence Tools List for Hackers and Security Professionals:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/threat-intelligence-tools" rel="nofollow"&gt;https://gbhackers.com/threat-intelligence-tools&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-373-Penetration Testing Cheat Sheet For Windows Machine – Intrusion Detection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://techincidents.com/penetration-testing-cheat-sheet/" rel="nofollow"&gt;https://techincidents.com/penetration-testing-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-374-privilege escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://toshellandback.com/category/privilege-escalation/" rel="nofollow"&gt;https://toshellandback.com/category/privilege-escalation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-375-The Complete List of Windows Post-Exploitation Commands (No Powershell):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/999b5433b61e" rel="nofollow"&gt;https://medium.com/p/999b5433b61e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-376-The Art of Subdomain Enumeration:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.sweepatic.com/tag/subdomain-enumeration/" rel="nofollow"&gt;https://blog.sweepatic.com/tag/subdomain-enumeration/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-377-The Principles of a Subdomain Takeover:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.sweepatic.com/subdomain-takeover-principles/" rel="nofollow"&gt;https://blog.sweepatic.com/subdomain-takeover-principles/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-378-The journey of Web Cache + Firewall Bypass to SSRF to AWS credentials compromise!:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/b250fb40af82" rel="nofollow"&gt;https://medium.com/p/b250fb40af82&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-379-The Solution for Web for Pentester-I:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/4c21b3ae9673" rel="nofollow"&gt;https://medium.com/p/4c21b3ae9673&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-380-The Ultimate Penetration Testing Command Cheat Sheet for Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/command-cheat-sheet-for-linux/" rel="nofollow"&gt;https://www.hackingloops.com/command-cheat-sheet-for-linux/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-381-: Ethical Hacking, Hack Tools, Hacking Tricks, Information Gathering, Penetration Testing, Recommended:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/hacking-tricks/" rel="nofollow"&gt;https://www.hackingloops.com/hacking-tricks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-383-Introduction to Exploitation, Part 1: Introducing Concepts and Terminology:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/exploitation-terminology/" rel="nofollow"&gt;https://www.hackingloops.com/exploitation-terminology/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-384-How Hackers Kick Victims Off of Wireless Networks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/kick-victims-off-of-wireless-networks/" rel="nofollow"&gt;https://www.hackingloops.com/kick-victims-off-of-wireless-networks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-385-Maintaining Access Part 1: Introduction and Metasploit Example:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/maintaining-access-metasploit/" rel="nofollow"&gt;https://www.hackingloops.com/maintaining-access-metasploit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-386-How to Steal Windows Credentials with Mimikatz and Metasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/mimikatz/" rel="nofollow"&gt;https://www.hackingloops.com/mimikatz/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-387-Evading Anti-virus Part 2: Obfuscating Payloads with Msfvenom:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/msfvenom/" rel="nofollow"&gt;https://www.hackingloops.com/msfvenom/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-388-Evading Anti-virus Part 1: Infecting EXEs with Shellter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/evading-anti-virus-shellter/" rel="nofollow"&gt;https://www.hackingloops.com/evading-anti-virus-shellter/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-389-Mobile Hacking Part 4: Fetching Payloads via USB Rubber Ducky:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/payloads-via-usb-rubber-ducky/" rel="nofollow"&gt;https://www.hackingloops.com/payloads-via-usb-rubber-ducky/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-390-Ethical Hacking Practice Test 6 – Footprinting Fundamentals Level1:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/ethical-hacking-practice-test-6-footprinting-fundamentals-level1/" rel="nofollow"&gt;https://www.hackingloops.com/ethical-hacking-practice-test-6-footprinting-fundamentals-level1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-391-Skip Cracking Responder Hashes and Relay Them:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://threat.tevora.com/quick-tip-skip-cracking-responder-hashes-and-replay-them/" rel="nofollow"&gt;https://threat.tevora.com/quick-tip-skip-cracking-responder-hashes-and-replay-them/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-392-Cracking NTLMv1 Handshakes with Crack.sh:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://threat.tevora.com/quick-tip-crack-ntlmv1-handshakes-with-crack-sh/" rel="nofollow"&gt;http://threat.tevora.com/quick-tip-crack-ntlmv1-handshakes-with-crack-sh/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-393-Top 3 Anti-Forensic OpSec Tips for Linux &amp;amp; A New Dead Man’s Switch:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/d5e92843e64a" rel="nofollow"&gt;https://medium.com/p/d5e92843e64a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-394-VNC Penetration Testing (Port 5901):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/vnc-penetration-testing" rel="nofollow"&gt;http://www.hackingarticles.in/vnc-penetration-testing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-395-Windows Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.bhafsec.com/wiki/index.php/Windows_Privilege_Escalation" rel="nofollow"&gt;http://www.bhafsec.com/wiki/index.php/Windows_Privilege_Escalation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-396-Removing Sender’s IP Address From Email’s Received: From Header:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.devside.net/wamp-server/removing-senders-ip-address-from-emails-received-from-header" rel="nofollow"&gt;https://www.devside.net/wamp-server/removing-senders-ip-address-from-emails-received-from-header&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-397-Dump Cleartext Password in Linux PC using MimiPenguin:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/dump-cleartext-password-linux-pc-using-mimipenguin" rel="nofollow"&gt;http://www.hackingarticles.in/dump-cleartext-password-linux-pc-using-mimipenguin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-398-Embedded Backdoor with Image using FakeImageExploiter:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/embedded-backdoor-image-using-fakeimageexploiter" rel="nofollow"&gt;http://www.hackingarticles.in/embedded-backdoor-image-using-fakeimageexploiter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-399-Exploit Command Injection Vulnearbility with Commix and Netcat:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/exploit-command-injection-vulnearbility-commix-netcat" rel="nofollow"&gt;http://www.hackingarticles.in/exploit-command-injection-vulnearbility-commix-netcat&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-400-Exploiting Form Based Sql Injection using Sqlmap:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/exploiting-form-based-sql-injection-using-sqlmap" rel="nofollow"&gt;http://www.hackingarticles.in/exploiting-form-based-sql-injection-using-sqlmap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-401-Beginner Guide to impacket Tool kit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/beginner-guide-to-impacket-tool-kit" rel="nofollow"&gt;http://www.hackingarticles.in/beginner-guide-to-impacket-tool-kit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-402-Best of Post Exploitation Exploits &amp;amp; Tricks:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/best-of-post-exploitation-exploits-tricks" rel="nofollow"&gt;http://www.hackingarticles.in/best-of-post-exploitation-exploits-tricks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-403-Command Injection to Meterpreter using Commix:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/command-injection-meterpreter-using-commix" rel="nofollow"&gt;http://www.hackingarticles.in/command-injection-meterpreter-using-commix&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-404-Comprehensive Guide to Crunch Tool:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/comprehensive-guide-to-crunch-tool" rel="nofollow"&gt;http://www.hackingarticles.in/comprehensive-guide-to-crunch-tool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-405-Compressive Guide to File Transfer (Post Exploitation):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/compressive-guide-to-file-transfer-post-exploitation" rel="nofollow"&gt;http://www.hackingarticles.in/compressive-guide-to-file-transfer-post-exploitation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-406-Crack Wifi Password using Aircrack-Ng (Beginner’s Guide):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/crack-wifi-password-using-aircrack-ng" rel="nofollow"&gt;http://www.hackingarticles.in/crack-wifi-password-using-aircrack-ng&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-407-How to Detect Meterpreter in Your PC:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/detect-meterpreter-pc" rel="nofollow"&gt;http://www.hackingarticles.in/detect-meterpreter-pc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-408-Easy way to Hack Database using Wizard switch in Sqlmap:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/easy-way-hack-database-using-wizard-switch-sqlmap" rel="nofollow"&gt;http://www.hackingarticles.in/easy-way-hack-database-using-wizard-switch-sqlmap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-409-Exploiting the Webserver using Sqlmap and Metasploit (OS-Pwn):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/exploiting-webserver-using-sqlmap-metasploit-os-pwn" rel="nofollow"&gt;http://www.hackingarticles.in/exploiting-webserver-using-sqlmap-metasploit-os-pwn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-410-Create SSL Certified Meterpreter Payload using MPM:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/exploit-remote-pc-ssl-certified-meterpreter-payload-using-mpm" rel="nofollow"&gt;http://www.hackingarticles.in/exploit-remote-pc-ssl-certified-meterpreter-payload-using-mpm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-411-Port forwarding: A practical hands-on guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.abatchy.com/2017/01/port-forwarding-practical-hands-on-guide" rel="nofollow"&gt;https://www.abatchy.com/2017/01/port-forwarding-practical-hands-on-guide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-412-Exploit Dev 101: Jumping to Shellcode:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.abatchy.com/2017/05/jumping-to-shellcode.html" rel="nofollow"&gt;https://www.abatchy.com/2017/05/jumping-to-shellcode.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-413-Introduction to Manual Backdooring:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.abatchy.com/2017/05/introduction-to-manual-backdooring_24.html" rel="nofollow"&gt;https://www.abatchy.com/2017/05/introduction-to-manual-backdooring_24.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-414-Kernel Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.abatchy.com/2018/01/kernel-exploitation-1" rel="nofollow"&gt;https://www.abatchy.com/2018/01/kernel-exploitation-1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-415-Exploit Dev 101: Bypassing ASLR on Windows:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.abatchy.com/2017/06/exploit-dev-101-bypassing-aslr-on.html" rel="nofollow"&gt;https://www.abatchy.com/2017/06/exploit-dev-101-bypassing-aslr-on.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-416-Shellcode reduction tips (x86):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.abatchy.com/2017/04/shellcode-reduction-tips-x86" rel="nofollow"&gt;https://www.abatchy.com/2017/04/shellcode-reduction-tips-x86&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-417-OSCE Study Plan:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.abatchy.com/2017/03/osce-study-plan" rel="nofollow"&gt;https://www.abatchy.com/2017/03/osce-study-plan&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-418-[DefCamp CTF Qualification 2017] Don't net, kids! (Revexp 400):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.abatchy.com/2017/10/defcamp-dotnot" rel="nofollow"&gt;https://www.abatchy.com/2017/10/defcamp-dotnot&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-419-DRUPAL 7.X SERVICES MODULE UNSERIALIZE() TO RCE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ambionics.io/" rel="nofollow"&gt;https://www.ambionics.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-420-SQL VULNERABLE WEBSITES LIST 2017 [APPROX 2500 FRESH SQL VULNERABLE SITES]:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cityofhackerz.com/sql-vulnerable-websites-list-2017" rel="nofollow"&gt;https://www.cityofhackerz.com/sql-vulnerable-websites-list-2017&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-421-Windows IR Live Forensics Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cheatography.com/tag/forensics/" rel="nofollow"&gt;https://www.cheatography.com/tag/forensics/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-422-windows-kernel-logic-bug-class-access:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://googleprojectzero.blogspot.com/2019/03/windows-kernel-logic-bug-class-access.html" rel="nofollow"&gt;https://googleprojectzero.blogspot.com/2019/03/windows-kernel-logic-bug-class-access.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-423-injecting-code-into-windows-protected:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://googleprojectzero.blogspot.com/2018/11/injecting-code-into-windows-protected.html" rel="nofollow"&gt;https://googleprojectzero.blogspot.com/2018/11/injecting-code-into-windows-protected.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-424-USING THE DDE ATTACK WITH POWERSHELL EMPIRE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://1337red.wordpress.com/using-the-dde-attack-with-powershell-empire" rel="nofollow"&gt;https://1337red.wordpress.com/using-the-dde-attack-with-powershell-empire&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-425-Automated Derivative Administrator Search:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://wald0.com/?p=14" rel="nofollow"&gt;https://wald0.com/?p=14&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-426-A Red Teamer’s Guide to GPOs and OUs:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://wald0.com/?p=179" rel="nofollow"&gt;https://wald0.com/?p=179&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-427-Pen Testing and Active Directory, Part VI: The Final Case:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.varonis.com/pen-testing-active-directory-part-vi-final-case/" rel="nofollow"&gt;https://blog.varonis.com/pen-testing-active-directory-part-vi-final-case/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-428-Offensive Tools and Techniques:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sec.uno/2017/03/01/offensive-tools-and-techniques/" rel="nofollow"&gt;https://www.sec.uno/2017/03/01/offensive-tools-and-techniques/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-429-Three penetration testing tips to out-hack hackers:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://infosechotspot.com/three-penetration-testing-tips-to-out-hack-hackers-betanews/" rel="nofollow"&gt;http://infosechotspot.com/three-penetration-testing-tips-to-out-hack-hackers-betanews/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-430-Introducing BloodHound:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://wald0.com/?p=68" rel="nofollow"&gt;https://wald0.com/?p=68&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-431-Red + Blue = Purple:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.blackhillsinfosec.com/?p=5368" rel="nofollow"&gt;http://www.blackhillsinfosec.com/?p=5368&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-432-Active Directory Access Control List – Attacks and Defense – Enterprise Mobility and Security Blog:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blogs.technet.microsoft.com/enterprisemobility/2017/09/18/active-directory-access-control-list-attacks-and-defense/" rel="nofollow"&gt;https://blogs.technet.microsoft.com/enterprisemobility/2017/09/18/active-directory-access-control-list-attacks-and-defense/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-433-PrivEsc: Unquoted Service Path:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gracefulsecurity.com/privesc-unquoted-service-path/" rel="nofollow"&gt;https://www.gracefulsecurity.com/privesc-unquoted-service-path/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-434-PrivEsc: Insecure Service Permissions:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gracefulsecurity.com/privesc-insecure-service-permissions/" rel="nofollow"&gt;https://www.gracefulsecurity.com/privesc-insecure-service-permissions/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-435-PrivEsc: DLL Hijacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gracefulsecurity.com/privesc-dll-hijacking/" rel="nofollow"&gt;https://www.gracefulsecurity.com/privesc-dll-hijacking/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-436-Android Reverse Engineering 101 – Part 1:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.fasteque.com/android-reverse-engineering-101-part-1/" rel="nofollow"&gt;http://www.fasteque.com/android-reverse-engineering-101-part-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-437-Luckystrike: An Evil Office Document Generator:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.shellntel.com/blog/2016/9/13/luckystrike-a-database-backed-evil-macro-generator" rel="nofollow"&gt;https://www.shellntel.com/blog/2016/9/13/luckystrike-a-database-backed-evil-macro-generator&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-438-the-number-one-pentesting-tool-youre-not-using:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.shellntel.com/blog/2016/8/3/the-number-one-pentesting-tool-youre-not-using" rel="nofollow"&gt;https://www.shellntel.com/blog/2016/8/3/the-number-one-pentesting-tool-youre-not-using&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-439-uac-bypass:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.securitynewspaper.com/tag/uac-bypass/" rel="nofollow"&gt;http://www.securitynewspaper.com/tag/uac-bypass/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-440-XSSer – Automated Framework Tool to Detect and Exploit XSS vulnerabilities:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/xsser-automated-framework-detectexploit-report-xss-vulnerabilities" rel="nofollow"&gt;https://gbhackers.com/xsser-automated-framework-detectexploit-report-xss-vulnerabilities&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-441-Penetration Testing on X11 Server:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/penetration-testing-on-x11-server" rel="nofollow"&gt;http://www.hackingarticles.in/penetration-testing-on-x11-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-442-Always Install Elevated:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/02/28/always-install-elevated" rel="nofollow"&gt;https://pentestlab.blog/2017/02/28/always-install-elevated&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-443-Scanning for Active Directory Privileges &amp;amp; Privileged Accounts:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://adsecurity.org/?p=3658" rel="nofollow"&gt;https://adsecurity.org/?p=3658&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-444-Windows Server 2016 Active Directory Features:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://adsecurity.org/?p=3646" rel="nofollow"&gt;https://adsecurity.org/?p=3646&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-445-powershell:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://adsecurity.org/?tag=powershell" rel="nofollow"&gt;https://adsecurity.org/?tag=powershell&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-446-PowerShell Security: PowerShell Attack Tools, Mitigation, &amp;amp; Detection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://adsecurity.org/?p=2921" rel="nofollow"&gt;https://adsecurity.org/?p=2921&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-447-DerbyCon 6 (2016) Talk – Attacking EvilCorp: Anatomy of a Corporate Hack:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://adsecurity.org/?p=3214" rel="nofollow"&gt;https://adsecurity.org/?p=3214&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-448-Real-World Example of How Active Directory Can Be Compromised (RSA Conference Presentation):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://adsecurity.org/?p=2085" rel="nofollow"&gt;https://adsecurity.org/?p=2085&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-449-Advanced ATM Penetration Testing Methods:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/advanced-atm-penetration-testing-methods" rel="nofollow"&gt;https://gbhackers.com/advanced-atm-penetration-testing-methods&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-450-Background: Microsoft Ofice  Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://rhinosecuritylabs.com/research/abusing-microsoft-word-features-phishing-subdoc/" rel="nofollow"&gt;https://rhinosecuritylabs.com/research/abusing-microsoft-word-features-phishing-subdoc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-451-Automated XSS Finder:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/4236ed1c6457" rel="nofollow"&gt;https://medium.com/p/4236ed1c6457&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-452-Application whitelist bypass using XLL and embedded shellcode:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://rileykidd.com/.../application-whitelist-bypass-using-XLL-and-embedded-shellc" rel="nofollow"&gt;https://rileykidd.com/.../application-whitelist-bypass-using-XLL-and-embedded-shellc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-453-AppLocker Bypass – Regsvr32:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/05/11/applocker-bypass-regsvr32" rel="nofollow"&gt;https://pentestlab.blog/2017/05/11/applocker-bypass-regsvr32&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-454-Nmap Scans using Hex Value of Flags:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/nmap-scans-using-hex-value-flags" rel="nofollow"&gt;http://www.hackingarticles.in/nmap-scans-using-hex-value-flags&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-455-Nmap Scan with Timing Parameters:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/nmap-scan-with-timing-parameters" rel="nofollow"&gt;http://www.hackingarticles.in/nmap-scan-with-timing-parameters&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-456-OpenSSH User Enumeration Time- Based Attack with Osueta:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/openssh-user-enumeration-time-based-attack-osueta" rel="nofollow"&gt;http://www.hackingarticles.in/openssh-user-enumeration-time-based-attack-osueta&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-457-Penetration Testing:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/web-penetration-testing/" rel="nofollow"&gt;http://www.hackingarticles.in/web-penetration-testing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-458-Penetration Testing on Remote Desktop (Port 3389):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/penetration-testing-remote-desktop-port-3389" rel="nofollow"&gt;http://www.hackingarticles.in/penetration-testing-remote-desktop-port-3389&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-459-Penetration Testing on Telnet (Port 23):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/penetration-testing-telnet-port-23" rel="nofollow"&gt;http://www.hackingarticles.in/penetration-testing-telnet-port-23&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-460-Penetration Testing in Windows/Active Directory with Crackmapexec:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/penetration-testing-windowsactive-directory-crackmapexec" rel="nofollow"&gt;http://www.hackingarticles.in/penetration-testing-windowsactive-directory-crackmapexec&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-461-Penetration Testing in WordPress Website using WordPress Exploit Framework:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/penetration-testing-wordpress-website-using-wordpress-exploit-framework" rel="nofollow"&gt;http://www.hackingarticles.in/penetration-testing-wordpress-website-using-wordpress-exploit-framework&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-462-Port Scanning using Metasploit with IPTables:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/port-scanning-using-metasploit-iptables" rel="nofollow"&gt;http://www.hackingarticles.in/port-scanning-using-metasploit-iptables&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-463-Post Exploitation Using WMIC (System Command):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/post-exploitation-using-wmic-system-command" rel="nofollow"&gt;http://www.hackingarticles.in/post-exploitation-using-wmic-system-command&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-464-Privilege Escalation in Linux using etc/passwd file:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/privilege-escalation-in-linux-using-etc-passwd-file" rel="nofollow"&gt;http://www.hackingarticles.in/privilege-escalation-in-linux-using-etc-passwd-file&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-465-RDP Pivoting with Metasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/rdp-pivoting-metasploit" rel="nofollow"&gt;http://www.hackingarticles.in/rdp-pivoting-metasploit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-466-A New Way to Hack Remote PC using Xerosploit and Metasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/new-way-hack-remote-pc-using-xerosploit-metasploit" rel="nofollow"&gt;http://www.hackingarticles.in/new-way-hack-remote-pc-using-xerosploit-metasploit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-467-Shell to Meterpreter using Session Command:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/shell-meterpreter-using-session-command" rel="nofollow"&gt;http://www.hackingarticles.in/shell-meterpreter-using-session-command&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-468-SMTP Pentest Lab Setup in Ubuntu (Port 25):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/smtp-pentest-lab-setup-ubuntu" rel="nofollow"&gt;http://www.hackingarticles.in/smtp-pentest-lab-setup-ubuntu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-469-SNMP Lab Setup and Penetration Testing:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/snmp-lab-setup-and-penetration-testing" rel="nofollow"&gt;http://www.hackingarticles.in/snmp-lab-setup-and-penetration-testing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-470-SQL Injection Exploitation in Multiple Targets using Sqlmap:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/sql-injection-exploitation-multiple-targets-using-sqlmap" rel="nofollow"&gt;http://www.hackingarticles.in/sql-injection-exploitation-multiple-targets-using-sqlmap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-471-Sql Injection Exploitation with Sqlmap and Burp Suite (Burp CO2 Plugin):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/sql-injection-exploitation-sqlmap-burp-suite-burp-co2-plugin" rel="nofollow"&gt;http://www.hackingarticles.in/sql-injection-exploitation-sqlmap-burp-suite-burp-co2-plugin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-472-SSH Penetration Testing (Port 22):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/ssh-penetration-testing-port-22" rel="nofollow"&gt;http://www.hackingarticles.in/ssh-penetration-testing-port-22&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-473-Manual Post Exploitation on Windows PC (System Command):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/manual-post-exploitation-windows-pc-system-command" rel="nofollow"&gt;http://www.hackingarticles.in/manual-post-exploitation-windows-pc-system-command&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-474-SSH Pivoting using Meterpreter:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/ssh-pivoting-using-meterpreter" rel="nofollow"&gt;http://www.hackingarticles.in/ssh-pivoting-using-meterpreter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-475-Stealing Windows Credentials of Remote PC with MS Office Document:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/stealing-windows-credentials-remote-pc-ms-office-document" rel="nofollow"&gt;http://www.hackingarticles.in/stealing-windows-credentials-remote-pc-ms-office-document&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-476-Telnet Pivoting through Meterpreter:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/telnet-pivoting-meterpreter" rel="nofollow"&gt;http://www.hackingarticles.in/telnet-pivoting-meterpreter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-477-Hack Password using Rogue Wi-Fi Access Point Attack (WiFi-Pumpkin):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-password-using-rogue-wi-fi-access-point-attack-wifi-pumpkin" rel="nofollow"&gt;http://www.hackingarticles.in/hack-password-using-rogue-wi-fi-access-point-attack-wifi-pumpkin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-478-Hack Remote PC using Fake Updates Scam with Ettercap and Metasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-remote-pc-using-fake-updates-scam-with-ettercap-and-metasploit" rel="nofollow"&gt;http://www.hackingarticles.in/hack-remote-pc-using-fake-updates-scam-with-ettercap-and-metasploit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-479-Hack Remote Windows 10 Password in Plain Text using Wdigest Credential Caching Exploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-remote-windows-10-password-plain-text-using-wdigest-credential-caching-exploit" rel="nofollow"&gt;http://www.hackingarticles.in/hack-remote-windows-10-password-plain-text-using-wdigest-credential-caching-exploit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-480-Hack Remote Windows 10 PC using TheFatRat:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-remote-windows-10-pc-using-thefatrat" rel="nofollow"&gt;http://www.hackingarticles.in/hack-remote-windows-10-pc-using-thefatrat&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-481-2 Ways to Hack Windows 10 Password Easy Way:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-windows-10-password-easy-way" rel="nofollow"&gt;http://www.hackingarticles.in/hack-windows-10-password-easy-way&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-482-How to Change ALL Files Extension in Remote PC (Confuse File Extensions Attack):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/how-to-change-all-files-extension-in-remote-pc-confuse-file-extensions-attack" rel="nofollow"&gt;http://www.hackingarticles.in/how-to-change-all-files-extension-in-remote-pc-confuse-file-extensions-attack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-483-How to Delete ALL Files in Remote Windows PC:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/how-to-delete-all-files-in-remote-windows-pc-2" rel="nofollow"&gt;http://www.hackingarticles.in/how-to-delete-all-files-in-remote-windows-pc-2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-484-How to Encrypt Drive of Remote Victim PC:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/how-to-encrypt-drive-of-remote-victim-pc" rel="nofollow"&gt;http://www.hackingarticles.in/how-to-encrypt-drive-of-remote-victim-pc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-485-Post Exploitation in Linux With Metasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2013/01/04/post-exploitation-in-linux-with-metasploit" rel="nofollow"&gt;https://pentestlab.blog/2013/01/04/post-exploitation-in-linux-with-metasploit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-486-Red Team:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://posts.specterops.io/tagged/red-team?source=post" rel="nofollow"&gt;https://posts.specterops.io/tagged/red-team?source=post&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-487-Code Signing Certi cate Cloning Attacks and Defenses:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://posts.specterops.io/tagged/code-signing?source=post" rel="nofollow"&gt;https://posts.specterops.io/tagged/code-signing?source=post&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-488-Phishing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://posts.specterops.io/tagged/phishing?source=post" rel="nofollow"&gt;https://posts.specterops.io/tagged/phishing?source=post&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-489-PowerPick – A ClickOnce Adjunct:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.sixdub.net/?p=555" rel="nofollow"&gt;http://www.sixdub.net/?p=555&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-490-sql-injection-xss-playground:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ired.team/offensive-security-experiments/offensive-security-cheetsheets/sql-injection-xss-playground" rel="nofollow"&gt;https://ired.team/offensive-security-experiments/offensive-security-cheetsheets/sql-injection-xss-playground&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-491-Privilege Escalation &amp;amp; Post-Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rmusser01/Infosec_Reference/raw/master/Draft/Privilege%20Escalation%20%26%20Post-Exploitation.md"&gt;https://github.com/rmusser01/Infosec_Reference/raw/master/Draft/Privilege%20Escalation%20%26%20Post-Exploitation.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-492-https-payload-and-c2-redirectors:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://posts.specterops.io/https-payload-and-c2-redirectors-ff8eb6f87742?source=placement_card_footer_grid---------2-41" rel="nofollow"&gt;https://posts.specterops.io/https-payload-and-c2-redirectors-ff8eb6f87742?source=placement_card_footer_grid---------2-41&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-493-a-push-toward-transparency:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://posts.specterops.io/a-push-toward-transparency-c385a0dd1e34?source=placement_card_footer_grid---------0-41" rel="nofollow"&gt;https://posts.specterops.io/a-push-toward-transparency-c385a0dd1e34?source=placement_card_footer_grid---------0-41&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-494-bloodhound:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://posts.specterops.io/tagged/bloodhound?source=post" rel="nofollow"&gt;https://posts.specterops.io/tagged/bloodhound?source=post&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-495-active directory:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://posts.specterops.io/tagged/active-directory?source=post" rel="nofollow"&gt;https://posts.specterops.io/tagged/active-directory?source=post&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-496-Load &amp;amp; Execute Bundles with migrationTool:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://posts.specterops.io/load-execute-bundles-with-migrationtool-f952e276e1a6?source=placement_card_footer_grid---------1-41" rel="nofollow"&gt;https://posts.specterops.io/load-execute-bundles-with-migrationtool-f952e276e1a6?source=placement_card_footer_grid---------1-41&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-497-Outlook Forms and Shells:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sensepost.com/blog/2017/outlook-forms-and-shells/" rel="nofollow"&gt;https://sensepost.com/blog/2017/outlook-forms-and-shells/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-498-Tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sensepost.com/blog/tools/" rel="nofollow"&gt;https://sensepost.com/blog/tools/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-499-2018 pentesting resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sensepost.com/blog/2018/" rel="nofollow"&gt;https://sensepost.com/blog/2018/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-500-network pentest:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securityonline.info/category/penetration-testing/network-pentest/" rel="nofollow"&gt;https://securityonline.info/category/penetration-testing/network-pentest/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-501-[technical] Pen-testing resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/cd01de9036ad" rel="nofollow"&gt;https://medium.com/p/cd01de9036ad&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-502-Stored XSS on Facebook:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opnsec.com/2018/03/stored-xss-on-facebook/" rel="nofollow"&gt;https://opnsec.com/2018/03/stored-xss-on-facebook/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-503-vulnerabilities:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.brokenbrowser.com/category/vulnerabilities/" rel="nofollow"&gt;https://www.brokenbrowser.com/category/vulnerabilities/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-504-Extending BloodHound: Track and Visualize Your Compromise:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://porterhau5.com/.../extending-bloodhound-track-and-visualize-your-compromise" rel="nofollow"&gt;https://porterhau5.com/.../extending-bloodhound-track-and-visualize-your-compromise&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-505-so-you-want-to-be-a-web-security-researcher:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://portswigger.net/blog/so-you-want-to-be-a-web-security-researcher" rel="nofollow"&gt;https://portswigger.net/blog/so-you-want-to-be-a-web-security-researcher&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-506-BugBounty — AWS S3 added to my “Bucket” list!:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/f68dd7d0d1ce" rel="nofollow"&gt;https://medium.com/p/f68dd7d0d1ce&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-507-BugBounty — API keys leakage, Source code disclosure in India’s largest e-commerce health care company:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/c75967392c7e" rel="nofollow"&gt;https://medium.com/p/c75967392c7e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-508-BugBounty — Exploiting CRLF Injection can lands into a nice bounty:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/159525a9cb62" rel="nofollow"&gt;https://medium.com/p/159525a9cb62&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-509-BugBounty — How I was able to bypass rewall to get RCE and then went from server shell to get root user account:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/783f71131b94" rel="nofollow"&gt;https://medium.com/p/783f71131b94&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-510-BugBounty — “I don’t need your current password to login into youraccount” - How could I completely takeover any user’s account in an online classi ed ads company:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/e51a945b083d" rel="nofollow"&gt;https://medium.com/p/e51a945b083d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-511-Ping Power — ICMP Tunnel:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/ping-power-icmp-tunnel-31e2abb2aaea?source=placement_card_footer_grid---------1-41" rel="nofollow"&gt;https://medium.com/bugbountywriteup/ping-power-icmp-tunnel-31e2abb2aaea?source=placement_card_footer_grid---------1-41&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-512-hacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.nextleveltricks.com/hacking/" rel="nofollow"&gt;https://www.nextleveltricks.com/hacking/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-513-Top 8 Best YouTube Channels To Learn Ethical Hacking Online !:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.nextleveltricks.com/youtube-channels-to-learn-hacking/" rel="nofollow"&gt;https://www.nextleveltricks.com/youtube-channels-to-learn-hacking/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-514-Google Dorks List 2018 | Fresh Google Dorks 2018 for SQLi:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.nextleveltricks.com/latest-google-dorks-list/" rel="nofollow"&gt;https://www.nextleveltricks.com/latest-google-dorks-list/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-515-Art of Shellcoding: Basic AES Shellcode Crypter:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.nipunjaswal.com/2018/02/shellcode-crypter.html" rel="nofollow"&gt;http://www.nipunjaswal.com/2018/02/shellcode-crypter.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-516-Big List Of Google Dorks Hacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://xspiyr.wordpress.com/2012/09/05/big-list-of-google-dorks-hacking/" rel="nofollow"&gt;https://xspiyr.wordpress.com/2012/09/05/big-list-of-google-dorks-hacking/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-517-nmap-cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bitrot.sh/cheatsheet/09-12-2017-nmap-cheatsheet/" rel="nofollow"&gt;https://bitrot.sh/cheatsheet/09-12-2017-nmap-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-518-Aws Recon:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enciphers.com/tag/aws-recon/" rel="nofollow"&gt;https://enciphers.com/tag/aws-recon/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-519-Recon:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enciphers.com/tag/recon/" rel="nofollow"&gt;https://enciphers.com/tag/recon/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-520-Subdomain Enumeration:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enciphers.com/tag/subdomain-enumeration/" rel="nofollow"&gt;https://enciphers.com/tag/subdomain-enumeration/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-521-Shodan:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enciphers.com/tag/shodan/" rel="nofollow"&gt;https://enciphers.com/tag/shodan/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-522-Dump LAPS passwords with ldapsearch:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://malicious.link/post/2017/dump-laps-passwords-with-ldapsearch/" rel="nofollow"&gt;https://malicious.link/post/2017/dump-laps-passwords-with-ldapsearch/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-523-peepdf - PDF Analysis Tool:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://eternal-todo.com/tools/peepdf-pdf-analysis-tool" rel="nofollow"&gt;http://eternal-todo.com/tools/peepdf-pdf-analysis-tool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-524-Evilginx 2 - Next Generation of Phishing 2FA Tokens:&lt;/p&gt;
&lt;p&gt;breakdev.org/evilginx-2-next-generation-of-phishing-2fa-tokens/&lt;/p&gt;
&lt;p&gt;-526-Evil XML with two encodings:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mohemiv.com/all/evil-xml/" rel="nofollow"&gt;https://mohemiv.com/all/evil-xml/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-527-create-word-macros-with-powershell:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://4sysops.com/archives/create-word-macros-with-powershell/" rel="nofollow"&gt;https://4sysops.com/archives/create-word-macros-with-powershell/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-528-Excess XSS A comprehensive tutorial on cross-site scripting:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://excess-xss.com/" rel="nofollow"&gt;https://excess-xss.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-529-Executing Commands and Bypassing AppLocker with PowerShell Diagnostic Scripts:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bohops.com/2018/01/07/executing-commands-and-bypassing-applocker-with-powershell-diagnostic-scripts/" rel="nofollow"&gt;https://bohops.com/2018/01/07/executing-commands-and-bypassing-applocker-with-powershell-diagnostic-scripts/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-530-Abusing DCOM For Yet Another Lateral Movement Technique:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bohops.com/2018/04/28/abusing-dcom-for-yet-another-lateral-movement-technique/" rel="nofollow"&gt;https://bohops.com/2018/04/28/abusing-dcom-for-yet-another-lateral-movement-technique/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-531-Trust Direction: An Enabler for Active Directory Enumeration and Trust Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bohops.com/2017/12/02/trust-direction-an-enabler-for-active-directory-enumeration-and-trust-exploitation/" rel="nofollow"&gt;https://bohops.com/2017/12/02/trust-direction-an-enabler-for-active-directory-enumeration-and-trust-exploitation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-532-Abusing DCOM For Yet Another Lateral Movement Technique:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bohops.com/2018/04/28/abusing-dcom-for-yet-another-lateral-movement-technique/" rel="nofollow"&gt;https://bohops.com/2018/04/28/abusing-dcom-for-yet-another-lateral-movement-technique/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-533-“Practical recon techniques for bug hunters &amp;amp; pen testers”:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.appsecco.com/practical-recon-techniques-for-bug-hunters-pen-testers-at-levelup-0x02-b72c15641972?source=placement_card_footer_grid---------2-41" rel="nofollow"&gt;https://blog.appsecco.com/practical-recon-techniques-for-bug-hunters-pen-testers-at-levelup-0x02-b72c15641972?source=placement_card_footer_grid---------2-41&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-534-Exploiting Node.js deserialization bug for Remote Code Execution:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opsecx.com/index.php/2017/02/08/exploiting-node-js-deserialization-bug-for-remote-code-execution/" rel="nofollow"&gt;https://opsecx.com/index.php/2017/02/08/exploiting-node-js-deserialization-bug-for-remote-code-execution/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-535-Exploiting System Shield AntiVirus Arbitrary Write Vulnerability using SeTakeOwnershipPrivilege:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.greyhathacker.net/?p=1006" rel="nofollow"&gt;http://www.greyhathacker.net/?p=1006&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-536-Running Macros via ActiveX Controls:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.greyhathacker.net/?p=948" rel="nofollow"&gt;http://www.greyhathacker.net/?p=948&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-537-all=BUG+MALWARE+EXPLOITS&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.greyhathacker.net/?cat=18" rel="nofollow"&gt;http://www.greyhathacker.net/?cat=18&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-538-“FILELESS” UAC BYPASS USING EVENTVWR.EXE AND:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking" rel="nofollow"&gt;https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-539-BYPASSING UAC ON WINDOWS 10 USING DISK CLEANUP:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2016/07/22/bypassing-uac-on-windows-10-using-disk-cleanup/" rel="nofollow"&gt;https://enigma0x3.net/2016/07/22/bypassing-uac-on-windows-10-using-disk-cleanup/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-540-A Look at CVE-2017-8715: Bypassing CVE-2017-0218 using PowerShell Module Manifests:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2017/11/06/a-look-at-cve-2017-8715-bypassing-cve-2017-0218-using-powershell-module-manifests/" rel="nofollow"&gt;https://enigma0x3.net/2017/11/06/a-look-at-cve-2017-8715-bypassing-cve-2017-0218-using-powershell-module-manifests/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-541-“FILELESS” UAC BYPASS USING SDCLT.EXE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2017/03/17/fileless-uac-bypass-using-sdclt-exe" rel="nofollow"&gt;https://enigma0x3.net/2017/03/17/fileless-uac-bypass-using-sdclt-exe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-542-File Upload XSS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/83ea55bb9a55" rel="nofollow"&gt;https://medium.com/p/83ea55bb9a55&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-543-Firebase Databases:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/f651a7d49045" rel="nofollow"&gt;https://medium.com/p/f651a7d49045&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-544-Safe Red Team Infrastructure:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@malcomvetter/safe-red-team-infrastructure-c5d6a0f13fac" rel="nofollow"&gt;https://medium.com/@malcomvetter/safe-red-team-infrastructure-c5d6a0f13fac&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-545-RED-TEAM:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cybersyndicates.com/tags/red-team/" rel="nofollow"&gt;https://cybersyndicates.com/tags/red-team/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-546-Egressing Bluecoat with Cobaltstike &amp;amp; Let's Encrypt:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=cgwfjCmKQwM" rel="nofollow"&gt;https://www.youtube.com/watch?v=cgwfjCmKQwM&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-547-Veil-Evasion:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cybersyndicates.com/tags/veil-evasion/" rel="nofollow"&gt;https://cybersyndicates.com/tags/veil-evasion/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-548-Dangerous Virus For Windows Crashes Everything Hack window Using Virus:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://thelearninghacking.com/create-virus-hack-windows/" rel="nofollow"&gt;http://thelearninghacking.com/create-virus-hack-windows/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-549-Download Google Dorks List 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/323c8067502c" rel="nofollow"&gt;https://medium.com/p/323c8067502c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-550-Don’t leak sensitive data via security scanning tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/7d1f715f0486" rel="nofollow"&gt;https://medium.com/p/7d1f715f0486&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-551-CRLF Injection Into PHP’s cURL Options:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@tomnomnom/crlf-injection-into-phps-curl-options-e2e0d7cfe545?source=placement_card_footer_grid---------0-60" rel="nofollow"&gt;https://medium.com/@tomnomnom/crlf-injection-into-phps-curl-options-e2e0d7cfe545?source=placement_card_footer_grid---------0-60&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-552-Open Redirects &amp;amp; Security Done Right!:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@AkshaySharmaUS/open-redirects-security-done-right-e524a3185496?source=placement_card_footer_grid---------2-60" rel="nofollow"&gt;https://medium.com/@AkshaySharmaUS/open-redirects-security-done-right-e524a3185496?source=placement_card_footer_grid---------2-60&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-553-DOM XSS – auth.uber.com:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stamone-bug-bounty.blogspot.com/2017/10/dom-xss-auth_14.html" rel="nofollow"&gt;https://stamone-bug-bounty.blogspot.com/2017/10/dom-xss-auth_14.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-554-PowerPoint and Custom Actions:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cofense.com/powerpoint-and-custom-actions/" rel="nofollow"&gt;https://cofense.com/powerpoint-and-custom-actions/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-555-exploiting-adobe-coldfusion:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://codewhitesec.blogspot.com/2018/03/exploiting-adobe-coldfusion.html" rel="nofollow"&gt;https://codewhitesec.blogspot.com/2018/03/exploiting-adobe-coldfusion.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-556-Command and Control – HTTPS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/10/04/command-and-control-https" rel="nofollow"&gt;https://pentestlab.blog/2017/10/04/command-and-control-https&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-557-Command and Control – Images:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2018/01/02/command-and-control-images" rel="nofollow"&gt;https://pentestlab.blog/2018/01/02/command-and-control-images&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-558-Command and Control – JavaScript:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2018/01/08/command-and-control-javascript" rel="nofollow"&gt;https://pentestlab.blog/2018/01/08/command-and-control-javascript&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-559-XSS-Payloads:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Pgaijin66/XSS-Payloads"&gt;https://github.com/Pgaijin66/XSS-Payloads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-560-Command and Control – Web Interface:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2018/01/03/command-and-control-web-interface" rel="nofollow"&gt;https://pentestlab.blog/2018/01/03/command-and-control-web-interface&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-561-Command and Control – Website:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/11/14/command-and-control-website" rel="nofollow"&gt;https://pentestlab.blog/2017/11/14/command-and-control-website&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-562-Command and Control – WebSocket:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/12/06/command-and-control-websocket" rel="nofollow"&gt;https://pentestlab.blog/2017/12/06/command-and-control-websocket&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-563-atomic-red-team:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/redcanaryco/atomic-red-team"&gt;https://github.com/redcanaryco/atomic-red-team&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-564-PowerView-3.0-tricks.ps1:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/HarmJ0y/184f9822b195c52dd50c379ed3117993"&gt;https://gist.github.com/HarmJ0y/184f9822b195c52dd50c379ed3117993&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-565-awesome-sec-talks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/PaulSec/awesome-sec-talks"&gt;https://github.com/PaulSec/awesome-sec-talks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-566-Awesome-Red-Teaming:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/yeyintminthuhtut/Awesome-Red-Teaming"&gt;https://github.com/yeyintminthuhtut/Awesome-Red-Teaming&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-567-awesome-php:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ziadoz/awesome-php"&gt;https://github.com/ziadoz/awesome-php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-568-latest-hacks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackercool.com/latest-hacks/" rel="nofollow"&gt;https://hackercool.com/latest-hacks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-569-GraphQL NoSQL Injection Through JSON Types:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.east5th.co/blog/2017/06/12/graphql-nosql-injection-through-json-types/" rel="nofollow"&gt;http://www.east5th.co/blog/2017/06/12/graphql-nosql-injection-through-json-types/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-570-Writing .NET Executables for Pentesters:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.peew.pw/blog/2017/12/4/writing-net-executables-for-penteters-part-2" rel="nofollow"&gt;https://www.peew.pw/blog/2017/12/4/writing-net-executables-for-penteters-part-2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-571-A curated list of fuzzing resources ( Books, courses - free and paid, videos, tools, tutorials and vulnerable applications to practice on ) for learning Fuzzing and initial phases of Exploit Development like root cause analysis.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/secfigo/Awesome-Fuzzing"&gt;https://github.com/secfigo/Awesome-Fuzzing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-572-How to Shutdown, Restart, Logoff, and Hibernate Remote Windows PC:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/how-to-shutdown-restart-logoff-and-hibernate-remote-windows-pc" rel="nofollow"&gt;http://www.hackingarticles.in/how-to-shutdown-restart-logoff-and-hibernate-remote-windows-pc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-572-Injecting Metasploit Payloads into Android Applications – Manually:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/06/26/injecting-metasploit-payloads-into-android-applications-manually" rel="nofollow"&gt;https://pentestlab.blog/2017/06/26/injecting-metasploit-payloads-into-android-applications-manually&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-573-Google Dorks For Carding [Huge List] - Part 1:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hacker-arena.blogspot.com/2014/03/google-dorks-for-carding-huge-list-part.html" rel="nofollow"&gt;https://hacker-arena.blogspot.com/2014/03/google-dorks-for-carding-huge-list-part.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-574-Google dorks for growth hackers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/7f83c8107057" rel="nofollow"&gt;https://medium.com/p/7f83c8107057&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-575-Google Dorks For Carding (HUGE LIST):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leetpedia.blogspot.com/2013/01/google-dorks-for-carding-huge-list.html" rel="nofollow"&gt;https://leetpedia.blogspot.com/2013/01/google-dorks-for-carding-huge-list.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-576-BIGGEST SQL Injection Dorks List ~ 20K+ Dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leetpedia.blogspot.com/2013/05/biggest-sql-injection-dorks-list-20k.html" rel="nofollow"&gt;https://leetpedia.blogspot.com/2013/05/biggest-sql-injection-dorks-list-20k.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-577-Pastebin Accounts Hacking (Facebook/Paypal/LR/Gmail/Yahoo, etc):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leetpedia.blogspot.com/2013/01/pastebin-accounts-hacking.html" rel="nofollow"&gt;https://leetpedia.blogspot.com/2013/01/pastebin-accounts-hacking.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-578-How I Chained 4 vulnerabilities on GitHub Enterprise, From SSRF Execution Chain to RCE!:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.orange.tw/2017/07/how-i-chained-4-vulnerabilities-on.html" rel="nofollow"&gt;http://blog.orange.tw/2017/07/how-i-chained-4-vulnerabilities-on.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-579-Hijacking VNC (Enum, Brute, Access and Crack):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/d3d18a4601cc" rel="nofollow"&gt;https://medium.com/p/d3d18a4601cc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-580-Linux Post Exploitation Command List:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mubix/post-exploitation/wiki"&gt;https://github.com/mubix/post-exploitation/wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-581-List of google dorks for sql injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://deadlyhacker.wordpress.com/2013/05/09/list-of-google-dorks-for-sql-injection/" rel="nofollow"&gt;https://deadlyhacker.wordpress.com/2013/05/09/list-of-google-dorks-for-sql-injection/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-582-Microsoft Office – NTLM Hashes via Frameset:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/12/18/microsoft-office-ntlm-hashes-via-frameset" rel="nofollow"&gt;https://pentestlab.blog/2017/12/18/microsoft-office-ntlm-hashes-via-frameset&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-583-Microsoft Windows 10 - Child Process Restriction Mitigation Bypass:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/download/44888.txt" rel="nofollow"&gt;https://www.exploit-db.com/download/44888.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-584-Microsoft Windows CVE-2018-8210 Remote Code Execution Vulnerability:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.securityfocus.com/bid/104407" rel="nofollow"&gt;https://www.securityfocus.com/bid/104407&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-585-Microsoft Windows Kernel CVE-2018-0982 Local Privilege Escalation Vulnerability:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.securityfocus.com/bid/104382" rel="nofollow"&gt;https://www.securityfocus.com/bid/104382&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-586-miSafes Mi-Cam Device Hijacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://packetstormsecurity.com/files/146504/SA-20180221-0.txt" rel="nofollow"&gt;https://packetstormsecurity.com/files/146504/SA-20180221-0.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-587-Low-Level Windows API Access From PowerShell:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.fuzzysecurity.com/tutorials/24.html" rel="nofollow"&gt;https://www.fuzzysecurity.com/tutorials/24.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-588-Linux Kernel 'mm/hugetlb.c' Local Denial of Service Vulnerability:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.securityfocus.com/bid/103316" rel="nofollow"&gt;https://www.securityfocus.com/bid/103316&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-589-Lateral Movement – RDP:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2018/04/24/lateral-movement-rdp/" rel="nofollow"&gt;https://pentestlab.blog/2018/04/24/lateral-movement-rdp/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-590-Snagging creds from locked machines:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://malicious.link/post/2016/snagging-creds-from-locked-machines/" rel="nofollow"&gt;https://malicious.link/post/2016/snagging-creds-from-locked-machines/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-591-Making a Blind SQL Injection a Little Less Blind:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/428dcb614ba8" rel="nofollow"&gt;https://medium.com/p/428dcb614ba8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-592-VulnHub — Kioptrix: Level 5:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@bondo.mike/vulnhub-kioptrix-level-5-88ab65146d48?source=placement_card_footer_grid---------1-60" rel="nofollow"&gt;https://medium.com/@bondo.mike/vulnhub-kioptrix-level-5-88ab65146d48?source=placement_card_footer_grid---------1-60&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-593-Unauthenticated Account Takeover Through HTTP Leak:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/33386bb0ba0b" rel="nofollow"&gt;https://medium.com/p/33386bb0ba0b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-594-Hakluke’s Ultimate OSCP Guide: Part 1 — Is OSCP for you?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@hakluke/haklukes-ultimate-oscp-guide-part-1-is-oscp-for-you-b57cbcce7440?source=placement_card_footer_grid---------2-43" rel="nofollow"&gt;https://medium.com/@hakluke/haklukes-ultimate-oscp-guide-part-1-is-oscp-for-you-b57cbcce7440?source=placement_card_footer_grid---------2-43&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-595-Finding Target-relevant Domain Fronts:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@vysec.private/finding-target-relevant-domain-fronts-7f4ad216c223?source=placement_card_footer_grid---------0-44" rel="nofollow"&gt;https://medium.com/@vysec.private/finding-target-relevant-domain-fronts-7f4ad216c223?source=placement_card_footer_grid---------0-44&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-596-Safe Red Team Infrastructure:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@malcomvetter/safe-red-team-infrastructure-c5d6a0f13fac?source=placement_card_footer_grid---------1-60" rel="nofollow"&gt;https://medium.com/@malcomvetter/safe-red-team-infrastructure-c5d6a0f13fac?source=placement_card_footer_grid---------1-60&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-597-Cobalt Strike Visualizations:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@001SPARTaN/cobalt-strike-visualizations-e6a6e841e16b?source=placement_card_footer_grid---------2-60" rel="nofollow"&gt;https://medium.com/@001SPARTaN/cobalt-strike-visualizations-e6a6e841e16b?source=placement_card_footer_grid---------2-60&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-598-OWASP Top 10 2017 — Web Application Security Risks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/31f356491712" rel="nofollow"&gt;https://medium.com/p/31f356491712&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-599-XSS-Auditor — the protector of unprotected:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/xss-auditor-the-protector-of-unprotected-f900a5e15b7b?source=placement_card_footer_grid---------0-60" rel="nofollow"&gt;https://medium.com/bugbountywriteup/xss-auditor-the-protector-of-unprotected-f900a5e15b7b?source=placement_card_footer_grid---------0-60&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-600-Netcat vs Cryptcat – Remote Shell to Control Kali Linux from Windows machine:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/netcat-vs-cryptcat" rel="nofollow"&gt;https://gbhackers.com/netcat-vs-cryptcat&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-601-Jenkins Servers Infected With Miner.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/e370a900ab2e" rel="nofollow"&gt;https://medium.com/p/e370a900ab2e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-602-cheat-sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pentestmonkey.net/category/cheat-sheet" rel="nofollow"&gt;http://pentestmonkey.net/category/cheat-sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-603-Command and Control – Website Keyword:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/09/14/command-and-control-website-keyword/" rel="nofollow"&gt;https://pentestlab.blog/2017/09/14/command-and-control-website-keyword/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-604-Command and Control – Twitter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/09/26/command-and-control-twitter/" rel="nofollow"&gt;https://pentestlab.blog/2017/09/26/command-and-control-twitter/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-605-Command and Control – Windows COM:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/09/01/command-and-control-windows-com/" rel="nofollow"&gt;https://pentestlab.blog/2017/09/01/command-and-control-windows-com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-606-Microsoft Office – NTLM Hashes via Frameset:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/12/18/microsoft-office-ntlm-hashes-via-frameset/" rel="nofollow"&gt;https://pentestlab.blog/2017/12/18/microsoft-office-ntlm-hashes-via-frameset/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-607-PHISHING AGAINST PROTECTED VIEW:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2017/07/13/phishing-against-protected-view/" rel="nofollow"&gt;https://enigma0x3.net/2017/07/13/phishing-against-protected-view/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-608-PHISHING WITH EMPIRE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enigma0x3.net/2016/03/15/phishing-with-empire/" rel="nofollow"&gt;https://enigma0x3.net/2016/03/15/phishing-with-empire/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-609-Reverse Engineering Android Applications:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/02/06/reverse-engineering-android-applications/" rel="nofollow"&gt;https://pentestlab.blog/2017/02/06/reverse-engineering-android-applications/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-610-HTML Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2013/06/26/html-injection/" rel="nofollow"&gt;https://pentestlab.blog/2013/06/26/html-injection/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-611-Meterpreter stage AV/IDS evasion with powershell:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://arno0x0x.wordpress.com/2016/04/13/meterpreter-av-ids-evasion-powershell/" rel="nofollow"&gt;https://arno0x0x.wordpress.com/2016/04/13/meterpreter-av-ids-evasion-powershell/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-612-Windows Atomic Tests by ATT&amp;amp;CK Tactic &amp;amp; Technique:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/windows-index.md"&gt;https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/windows-index.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-613-Windows Active Directory Post Exploitation Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/48c2bd70388" rel="nofollow"&gt;https://medium.com/p/48c2bd70388&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-614-Windows 10 UAC Loophole Can Be Used to Infect Systems with Malware:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://news.softpedia.com/news/windows-10-uac-loophole-can-be-used-to-infect-systems-with-malware-513996.shtml" rel="nofollow"&gt;http://news.softpedia.com/news/windows-10-uac-loophole-can-be-used-to-infect-systems-with-malware-513996.shtml&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-615-How to Bypass Anti-Virus to Run Mimikatz:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhillsinfosec.com/bypass-anti-virus-run-mimikatz/" rel="nofollow"&gt;https://www.blackhillsinfosec.com/bypass-anti-virus-run-mimikatz/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-616-Userland API Monitoring and Code Injection Detection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0x00sec.org/t/userland-api-monitoring-and-code-injection-detection/5565" rel="nofollow"&gt;https://0x00sec.org/t/userland-api-monitoring-and-code-injection-detection/5565&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-617-USE TOR. USE EMPIRE.:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://secureallthethings.blogspot.com/2016/11/use-tor-use-empire.html" rel="nofollow"&gt;http://secureallthethings.blogspot.com/2016/11/use-tor-use-empire.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-617-ADVANCED CROSS SITE SCRIPTING (XSS) CHEAT SHEET:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.muhaddis.info/advanced-cross-site-scripting-xss-cheat-sheet/" rel="nofollow"&gt;https://www.muhaddis.info/advanced-cross-site-scripting-xss-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-618-Empire without PowerShell.exe:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bneg.io/2017/07/26/empire-without-powershell-exe/" rel="nofollow"&gt;https://bneg.io/2017/07/26/empire-without-powershell-exe/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-619-RED TEAM:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bneg.io/category/red-team/" rel="nofollow"&gt;https://bneg.io/category/red-team/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-620-PDF Tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.didierstevens.com/programs/pdf-tools/" rel="nofollow"&gt;https://blog.didierstevens.com/programs/pdf-tools/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-621-DNS Data ex ltration — What is this and How to use?&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.fosec.vn/dns-data-exfiltration-what-is-this-and-how-to-use-2f6c69998822" rel="nofollow"&gt;https://blog.fosec.vn/dns-data-exfiltration-what-is-this-and-how-to-use-2f6c69998822&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-621-Google Dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/7cfd432e0cf3" rel="nofollow"&gt;https://medium.com/p/7cfd432e0cf3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-622-Hacking with JSP Shells:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.netspi.com/hacking-with-jsp-shells/" rel="nofollow"&gt;https://blog.netspi.com/hacking-with-jsp-shells/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-623-Malware Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/RPISEC/Malware/raw/master/README.md"&gt;https://github.com/RPISEC/Malware/raw/master/README.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-624-A curated list of Capture The Flag (CTF) frameworks, libraries, resources and softwares.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/SandySekharan/CTF-tool"&gt;https://github.com/SandySekharan/CTF-tool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-625-Group Policy Preferences:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/03/20/group-policy-preferences" rel="nofollow"&gt;https://pentestlab.blog/2017/03/20/group-policy-preferences&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-627-CHECKING FOR MALICIOUSNESS IN AC OFORM OBJECTS ON PDF FILES:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://furoner.wordpress.com/2017/11/15/checking-for-maliciousness-in-acroform-objects-on-pdf-files" rel="nofollow"&gt;https://furoner.wordpress.com/2017/11/15/checking-for-maliciousness-in-acroform-objects-on-pdf-files&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-628-deobfuscation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://furoner.wordpress.com/tag/deobfuscation/" rel="nofollow"&gt;https://furoner.wordpress.com/tag/deobfuscation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-629-POWERSHELL EMPIRE STAGERS 1: PHISHING WITH AN OFFICE
MACRO AND EVADING AVS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://fzuckerman.wordpress.com/2016/10/06/powershell-empire-stagers-1-phishing-with-an-office-macro-and-evading-avs/" rel="nofollow"&gt;https://fzuckerman.wordpress.com/2016/10/06/powershell-empire-stagers-1-phishing-with-an-office-macro-and-evading-avs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-630-A COMPREHENSIVE TUTORIAL ON CROSS-SITE SCRIPTING:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://fzuckerman.wordpress.com/2016/10/06/a-comprehensive-tutorial-on-cross-site-scripting/" rel="nofollow"&gt;https://fzuckerman.wordpress.com/2016/10/06/a-comprehensive-tutorial-on-cross-site-scripting/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-631-GCAT – BACKDOOR EM PYTHON:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://fzuckerman.wordpress.com/2016/10/06/gcat-backdoor-em-python/" rel="nofollow"&gt;https://fzuckerman.wordpress.com/2016/10/06/gcat-backdoor-em-python/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-632-Latest Carding Dorks List for Sql njection 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://latestechnews.com/carding-dorks/" rel="nofollow"&gt;https://latestechnews.com/carding-dorks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-633-google docs for credit card:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://latestechnews.com/tag/google-docs-for-credit-card/" rel="nofollow"&gt;https://latestechnews.com/tag/google-docs-for-credit-card/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-634-How To Scan Multiple Organizations
With Shodan and Golang (OSINT):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/d994ba6a9587" rel="nofollow"&gt;https://medium.com/p/d994ba6a9587&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-635-How to Evade Application
Whitelisting Using REGSVR32:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhillsinfosec.com/evade-application-whitelisting-using-regsvr32/" rel="nofollow"&gt;https://www.blackhillsinfosec.com/evade-application-whitelisting-using-regsvr32/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-636-phishing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhillsinfosec.com/tag/phishing/" rel="nofollow"&gt;https://www.blackhillsinfosec.com/tag/phishing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-637-Merlin in action: Intro to Merlin:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://asciinema.org/a/ryljo8qNjHz1JFcFDK7wP6e9I" rel="nofollow"&gt;https://asciinema.org/a/ryljo8qNjHz1JFcFDK7wP6e9I&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-638-IP Cams from around the world:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/a6f269f56805" rel="nofollow"&gt;https://medium.com/p/a6f269f56805&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-639-Advanced Cross Site Scripting(XSS) Cheat Sheet by
Jaydeep Dabhi:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jaydeepdabhi.wordpress.com/2016/01/12/advanced-cross-site-scriptingxss-cheat-sheet-by-jaydeep-dabhi/" rel="nofollow"&gt;https://jaydeepdabhi.wordpress.com/2016/01/12/advanced-cross-site-scriptingxss-cheat-sheet-by-jaydeep-dabhi/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-640-Just how easy it is to do a domain or
subdomain take over!?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/265d635b43d8" rel="nofollow"&gt;https://medium.com/p/265d635b43d8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-641-How to Create hidden user in Remote PC:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/create-hidden-remote-metaspolit" rel="nofollow"&gt;http://www.hackingarticles.in/create-hidden-remote-metaspolit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-642-Process Doppelgänging – a new way to impersonate a process:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hshrzd.wordpress.com/2017/12/18/process-doppelganging-a-new-way-to-impersonate-a-process/" rel="nofollow"&gt;https://hshrzd.wordpress.com/2017/12/18/process-doppelganging-a-new-way-to-impersonate-a-process/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-643-How to turn a DLL into astandalone EXE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hshrzd.wordpress.com/2016/07/21/how-to-turn-a-dll-into-a-standalone-exe/" rel="nofollow"&gt;https://hshrzd.wordpress.com/2016/07/21/how-to-turn-a-dll-into-a-standalone-exe/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-644-Hijacking extensions handlers as a malware persistence method:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hshrzd.wordpress.com/2017/05/25/hijacking-extensions-handlers-as-a-malware-persistence-method/" rel="nofollow"&gt;https://hshrzd.wordpress.com/2017/05/25/hijacking-extensions-handlers-as-a-malware-persistence-method/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-645-I'll Get Your Credentials ... Later!:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.fuzzysecurity.com/tutorials/18.html" rel="nofollow"&gt;https://www.fuzzysecurity.com/tutorials/18.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-646-Game Over: CanYouPwnMe &amp;gt; Kevgir-1:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.fuzzysecurity.com/tutorials/26.html" rel="nofollow"&gt;https://www.fuzzysecurity.com/tutorials/26.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-647-IKARUS anti.virus and its 9 exploitable kernel vulnerabilities:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.greyhathacker.net/?p=995" rel="nofollow"&gt;http://www.greyhathacker.net/?p=995&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-648-Getting started in Bug Bounty:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/7052da28445a" rel="nofollow"&gt;https://medium.com/p/7052da28445a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-649-Union SQLi Challenges (Zixem Write-up):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/ctf-writeups/union-sqli-challenges-zixem-write-up-4e74ad4e88b4?source=placement_card_footer_grid---------2-60" rel="nofollow"&gt;https://medium.com/ctf-writeups/union-sqli-challenges-zixem-write-up-4e74ad4e88b4?source=placement_card_footer_grid---------2-60&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-650-scanless – A Tool for Perform Anonymous Port Scan on Target Websites:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/scanless-port-scans-websites-behalf" rel="nofollow"&gt;https://gbhackers.com/scanless-port-scans-websites-behalf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-651-WEBAPP PENTEST:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securityonline.info/category/penetration-testing/webapp-pentest/" rel="nofollow"&gt;https://securityonline.info/category/penetration-testing/webapp-pentest/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-652-Cross-Site Scripting (XSS) Payloads:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securityonline.info/tag/cross-site-scripting-xss-payloads/" rel="nofollow"&gt;https://securityonline.info/tag/cross-site-scripting-xss-payloads/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-653-sg1: swiss army knife for data encryption, exfiltration &amp;amp; covert communication:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securityonline.info/tag/sg1/" rel="nofollow"&gt;https://securityonline.info/tag/sg1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-654-NETWORK PENTEST:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securityonline.info/category/penetration-testing/network-pentest/" rel="nofollow"&gt;https://securityonline.info/category/penetration-testing/network-pentest/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-655-SQL injection in an UPDATE query - a bug bounty story!:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://zombiehelp54.blogspot.com/2017/02/sql-injection-in-update-query-bug.html" rel="nofollow"&gt;https://zombiehelp54.blogspot.com/2017/02/sql-injection-in-update-query-bug.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-656-Cross-site Scripting:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.netsparker.com/blog/web-security/cross-site-scripting-xss/" rel="nofollow"&gt;https://www.netsparker.com/blog/web-security/cross-site-scripting-xss/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-657-Local File Inclusion:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.netsparker.com/blog/web-security/local-file-inclusion-vulnerability/" rel="nofollow"&gt;https://www.netsparker.com/blog/web-security/local-file-inclusion-vulnerability/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-658-Command Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.netsparker.com/blog/web-security/command-injection-vulnerability/" rel="nofollow"&gt;https://www.netsparker.com/blog/web-security/command-injection-vulnerability/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-659-a categorized list of Windows CMD commands:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ss64.com/nt/commands.html" rel="nofollow"&gt;https://ss64.com/nt/commands.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-660-Understanding Guide for Nmap Timing Scan (Firewall Bypass):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/understanding-guide-nmap-timing-scan-firewall-bypass" rel="nofollow"&gt;http://www.hackingarticles.in/understanding-guide-nmap-timing-scan-firewall-bypass&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-661-RFID Hacking with The Proxmark 3:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.kchung.co/tag/rfid/" rel="nofollow"&gt;https://blog.kchung.co/tag/rfid/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-662-A practical guide to RFID badge copying:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.nviso.be/2017/01/11/a-practical-guide-to-rfid-badge-copying" rel="nofollow"&gt;https://blog.nviso.be/2017/01/11/a-practical-guide-to-rfid-badge-copying&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-663-Denial of Service using Cookie Bombing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/55c2d0ef808c" rel="nofollow"&gt;https://medium.com/p/55c2d0ef808c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-664-Vultr Domain Hijacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://vincentyiu.co.uk/red-team/cloud-security/vultr-domain-hijacking" rel="nofollow"&gt;https://vincentyiu.co.uk/red-team/cloud-security/vultr-domain-hijacking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-665-Command and Control:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://vincentyiu.co.uk/red-team/domain-fronting" rel="nofollow"&gt;https://vincentyiu.co.uk/red-team/domain-fronting&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-666-Cisco Auditing Tool &amp;amp; Cisco Global Exploiter to Exploit 14 Vulnerabilities in Cisco Switches and Routers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/cisco-global-exploiter-cge" rel="nofollow"&gt;https://gbhackers.com/cisco-global-exploiter-cge&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-667-CHECKING FOR MALICIOUSNESS IN ACROFORM  OBJECTS ON PDF FILES:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://furoner.wordpress.com/2017/11/15/checking-for-maliciousness-in-acroform-objects-on-pdf-files" rel="nofollow"&gt;https://furoner.wordpress.com/2017/11/15/checking-for-maliciousness-in-acroform-objects-on-pdf-files&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-668-Situational Awareness:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2018/05/28/situational-awareness/" rel="nofollow"&gt;https://pentestlab.blog/2018/05/28/situational-awareness/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-669-Unquoted Service Path:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/03/09/unquoted-service-path" rel="nofollow"&gt;https://pentestlab.blog/2017/03/09/unquoted-service-path&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-670-NFS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestacademy.wordpress.com/2017/09/20/nfs/" rel="nofollow"&gt;https://pentestacademy.wordpress.com/2017/09/20/nfs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-671-List of Tools for Pentest Rookies:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestacademy.wordpress.com/2016/09/20/list-of-tools-for-pentest-rookies/" rel="nofollow"&gt;https://pentestacademy.wordpress.com/2016/09/20/list-of-tools-for-pentest-rookies/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-672-Common Windows Commands for Pentesters:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestacademy.wordpress.com/2016/06/21/common-windows-commands-for-pentesters/" rel="nofollow"&gt;https://pentestacademy.wordpress.com/2016/06/21/common-windows-commands-for-pentesters/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-673-Open-Source Intelligence (OSINT) Reconnaissance:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/75edd7f7dada" rel="nofollow"&gt;https://medium.com/p/75edd7f7dada&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-674-OSINT x UCCU Workshop on Open Source Intelligence:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/miaoski/osint-x-uccu-workshop-on-open-source-intelligence" rel="nofollow"&gt;https://www.slideshare.net/miaoski/osint-x-uccu-workshop-on-open-source-intelligence&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-675-Advanced Attack Techniques:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cyberark.com/threat-research-category/advanced-attack-techniques/" rel="nofollow"&gt;https://www.cyberark.com/threat-research-category/advanced-attack-techniques/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-676-Credential Theft:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cyberark.com/threat-research-category/credential-theft/" rel="nofollow"&gt;https://www.cyberark.com/threat-research-category/credential-theft/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-678-The Cloud Shadow Admin Threat: 10 Permissions to Protect:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cyberark.com/threat-research-blog/cloud-shadow-admin-threat-10-permissions-protect/" rel="nofollow"&gt;https://www.cyberark.com/threat-research-blog/cloud-shadow-admin-threat-10-permissions-protect/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-679-Online Credit Card Theft: Today’s Browsers Store Sensitive Information Deficiently, Putting User Data at Risk:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cyberark.com/threat-research-blog/online-credit-card-theft-todays-browsers-store-sensitive-information-deficiently-putting-user-data-risk/" rel="nofollow"&gt;https://www.cyberark.com/threat-research-blog/online-credit-card-theft-todays-browsers-store-sensitive-information-deficiently-putting-user-data-risk/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-680-Weakness Within: Kerberos Delegation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cyberark.com/threat-research-blog/weakness-within-kerberos-delegation/" rel="nofollow"&gt;https://www.cyberark.com/threat-research-blog/weakness-within-kerberos-delegation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-681-Simple Domain Fronting PoC with GAE C2 server:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.securityartwork.es/2017/01/31/simple-domain-fronting-poc-with-gae-c2-server/" rel="nofollow"&gt;https://www.securityartwork.es/2017/01/31/simple-domain-fronting-poc-with-gae-c2-server/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-682-Find Critical Information about a Host using DMitry:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.thehackr.com/find-critical-information-host-using-dmitry/" rel="nofollow"&gt;https://www.thehackr.com/find-critical-information-host-using-dmitry/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-683-How To Do OS Fingerprinting In Kali Using Xprobe2:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://disq.us/?url=http%3A%2F%2Fwww.thehackr.com%2Fos-fingerprinting-kali%2F&amp;amp;key=scqgRVMQacpzzrnGSOPySA" rel="nofollow"&gt;http://disq.us/?url=http%3A%2F%2Fwww.thehackr.com%2Fos-fingerprinting-kali%2F&amp;amp;key=scqgRVMQacpzzrnGSOPySA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-684-Crack SSH, FTP, Telnet Logins Using Hydra:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.thehackr.com/crack-ssh-ftp-telnet-logins-using-hydra/" rel="nofollow"&gt;https://www.thehackr.com/crack-ssh-ftp-telnet-logins-using-hydra/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-685-Reveal Saved Passwords in Browser using JavaScript Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.thehackr.com/reveal-saved-passwords-browser-using-javascript-injection/" rel="nofollow"&gt;https://www.thehackr.com/reveal-saved-passwords-browser-using-javascript-injection/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-686-Nmap Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://s3-us-west-2.amazonaws.com/stationx-public-download/nmap_cheet_sheet_0.6.pdf" rel="nofollow"&gt;https://s3-us-west-2.amazonaws.com/stationx-public-download/nmap_cheet_sheet_0.6.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-687-Manual Post Exploitation on Windows PC (Network Command):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/manual-post-exploitation-windows-pc-network-command" rel="nofollow"&gt;http://www.hackingarticles.in/manual-post-exploitation-windows-pc-network-command&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-688-Hack Gmail or Facebook Password of Remote PC using NetRipper Exploitation Tool:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-gmail-or-facebook-password-of-remote-pc-using-netripper-exploitation-tool" rel="nofollow"&gt;http://www.hackingarticles.in/hack-gmail-or-facebook-password-of-remote-pc-using-netripper-exploitation-tool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-689-Hack Locked Workstation Password in Clear Text:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-locked-workstation-password-clear-text" rel="nofollow"&gt;http://www.hackingarticles.in/hack-locked-workstation-password-clear-text&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-690-How to Find ALL Excel, Office, PDF, and Images in Remote PC:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/how-to-find-all-excel-office-pdf-images-files-in-remote-pc" rel="nofollow"&gt;http://www.hackingarticles.in/how-to-find-all-excel-office-pdf-images-files-in-remote-pc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-691-red-teaming:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.redteamsecure.com/category/red-teaming/" rel="nofollow"&gt;https://www.redteamsecure.com/category/red-teaming/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-692-Create a Fake AP and Sniff Data mitmAP:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.uaeinfosec.com/create-fake-ap-sniff-data-mitmap/" rel="nofollow"&gt;http://www.uaeinfosec.com/create-fake-ap-sniff-data-mitmap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-693-Bruteforcing From Nmap Output BruteSpray:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.uaeinfosec.com/bruteforcing-nmap-output-brutespray/" rel="nofollow"&gt;http://www.uaeinfosec.com/bruteforcing-nmap-output-brutespray/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-694-Reverse Engineering Framework radare2:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.uaeinfosec.com/reverse-engineering-framework-radare2/" rel="nofollow"&gt;http://www.uaeinfosec.com/reverse-engineering-framework-radare2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-695-Automated ettercap TCP/IP Hijacking Tool Morpheus:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.uaeinfosec.com/automated-ettercap-tcpip-hijacking-tool-morpheus/" rel="nofollow"&gt;http://www.uaeinfosec.com/automated-ettercap-tcpip-hijacking-tool-morpheus/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-696-List Of Vulnerable SQL Injection Sites:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blogger.com/share-post.g?blogID=1175829128367570667&amp;amp;postID=4652029420701251199" rel="nofollow"&gt;https://www.blogger.com/share-post.g?blogID=1175829128367570667&amp;amp;postID=4652029420701251199&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-697-Command and Control – Gmail:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/08/03/command-and-control-gmail/" rel="nofollow"&gt;https://pentestlab.blog/2017/08/03/command-and-control-gmail/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-698-Command and Control – DropBox:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/08/29/command-and-control-dropbox/" rel="nofollow"&gt;https://pentestlab.blog/2017/08/29/command-and-control-dropbox/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-699-Skeleton Key:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2018/04/10/skeleton-key/" rel="nofollow"&gt;https://pentestlab.blog/2018/04/10/skeleton-key/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-700-Secondary Logon Handle:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/04/07/secondary-logon-handle" rel="nofollow"&gt;https://pentestlab.blog/2017/04/07/secondary-logon-handle&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-701-Hot Potato:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/04/13/hot-potato" rel="nofollow"&gt;https://pentestlab.blog/2017/04/13/hot-potato&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-702-Leveraging INF-SCT Fetch &amp;amp; Execute Techniques For Bypass, Evasion, &amp;amp; Persistence (Part 2):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bohops.com/2018/03/10/leveraging-inf-sct-fetch-execute-techniques-for-bypass-evasion-persistence-part-2/" rel="nofollow"&gt;https://bohops.com/2018/03/10/leveraging-inf-sct-fetch-execute-techniques-for-bypass-evasion-persistence-part-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-703-Linux-Kernel-exploits:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://tacxingxing.com/category/exploit/kernel-exploit/" rel="nofollow"&gt;http://tacxingxing.com/category/exploit/kernel-exploit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-704-Linux-Kernel-Exploit Stack Smashing:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://tacxingxing.com/2018/02/26/linuxkernelexploit-stack-smashing/" rel="nofollow"&gt;http://tacxingxing.com/2018/02/26/linuxkernelexploit-stack-smashing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-705-Linux Kernel Exploit Environment:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://tacxingxing.com/2018/02/15/linuxkernelexploit-huan-jing-da-jian/" rel="nofollow"&gt;http://tacxingxing.com/2018/02/15/linuxkernelexploit-huan-jing-da-jian/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-706-Linux-Kernel-Exploit NULL dereference:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://tacxingxing.com/2018/02/22/linuxkernelexploit-null-dereference/" rel="nofollow"&gt;http://tacxingxing.com/2018/02/22/linuxkernelexploit-null-dereference/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-707-Apache mod_python for red teams:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.nettitude.com/blog/apache-mod_python-for-red-teams/" rel="nofollow"&gt;https://labs.nettitude.com/blog/apache-mod_python-for-red-teams/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-708-Bounty Write-up (HTB):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/9b01c934dfd2/" rel="nofollow"&gt;https://medium.com/p/9b01c934dfd2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;709-CTF Writeups:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/ctf-writeups" rel="nofollow"&gt;https://medium.com/ctf-writeups&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-710-Detecting Malicious Microsoft Office Macro Documents:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.greyhathacker.net/?p=872" rel="nofollow"&gt;http://www.greyhathacker.net/?p=872&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-711-SQL injection in Drupal:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/31756" rel="nofollow"&gt;https://hackerone.com/reports/31756&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-712-XSS and open redirect on Twitter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/260744" rel="nofollow"&gt;https://hackerone.com/reports/260744&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-713-Shopify login open redirect:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/55546" rel="nofollow"&gt;https://hackerone.com/reports/55546&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-714-HackerOne interstitial redirect:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/111968" rel="nofollow"&gt;https://hackerone.com/reports/111968&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-715-Ubiquiti sub-domain takeovers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/181665" rel="nofollow"&gt;https://hackerone.com/reports/181665&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-716-Scan.me pointing to Zendesk:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/114134" rel="nofollow"&gt;https://hackerone.com/reports/114134&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-717-Starbucks' sub-domain takeover:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/325336" rel="nofollow"&gt;https://hackerone.com/reports/325336&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-718-Vine's sub-domain takeover:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/32825" rel="nofollow"&gt;https://hackerone.com/reports/32825&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-719-Uber's sub-domain takeover:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/175070" rel="nofollow"&gt;https://hackerone.com/reports/175070&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-720-Read access to Google:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.detectify.com/2014/04/11/how-we-got-read-access-on-googles-production-servers/" rel="nofollow"&gt;https://blog.detectify.com/2014/04/11/how-we-got-read-access-on-googles-production-servers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-721-A Facebook XXE with Word:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.bram.us/2014/12/29/how-i-hacked-facebook-with-a-word-document/" rel="nofollow"&gt;https://www.bram.us/2014/12/29/how-i-hacked-facebook-with-a-word-document/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-722-The Wikiloc XXE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.davidsopas.com/wikiloc-xxe-vulnerability/" rel="nofollow"&gt;https://www.davidsopas.com/wikiloc-xxe-vulnerability/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-723-Uber Jinja2 TTSI:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/125980" rel="nofollow"&gt;https://hackerone.com/reports/125980&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-724-Uber Angular template injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/125027" rel="nofollow"&gt;https://hackerone.com/reports/125027&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-725-Yahoo Mail stored XSS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://klikki.fi/adv/yahoo2.html" rel="nofollow"&gt;https://klikki.fi/adv/yahoo2.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-726-Google image search XSS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mahmoudsec.blogspot.com/2015/09/how-i-found-xss-vulnerability-in-google.html" rel="nofollow"&gt;https://mahmoudsec.blogspot.com/2015/09/how-i-found-xss-vulnerability-in-google.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-727-Shopify Giftcard Cart XSS :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/95089" rel="nofollow"&gt;https://hackerone.com/reports/95089&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-728-Shopify wholesale XSS :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/106293" rel="nofollow"&gt;https://hackerone.com/reports/106293&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-729-Bypassing the Shopify admin authentication:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/270981" rel="nofollow"&gt;https://hackerone.com/reports/270981&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-730-Starbucks race conditions:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sakurity.com/blog/2015/05/21/starbucks.html" rel="nofollow"&gt;https://sakurity.com/blog/2015/05/21/starbucks.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-731-Binary.com vulnerability – stealing a user's money:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/98247" rel="nofollow"&gt;https://hackerone.com/reports/98247&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-732-HackerOne signal manipulation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/106305" rel="nofollow"&gt;https://hackerone.com/reports/106305&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-733-Shopify S buckets open:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/98819" rel="nofollow"&gt;https://hackerone.com/reports/98819&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-734-HackerOne S buckets open:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/209223" rel="nofollow"&gt;https://hackerone.com/reports/209223&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-735-Bypassing the GitLab 2F authentication:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitlab.com/gitlab-org/gitlab-ce/issues/14900" rel="nofollow"&gt;https://gitlab.com/gitlab-org/gitlab-ce/issues/14900&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-736-Yahoo PHP info disclosure:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.it-securityguard.com/bugbounty-yahoo-phpinfo-php-disclosure-2/" rel="nofollow"&gt;https://blog.it-securityguard.com/bugbounty-yahoo-phpinfo-php-disclosure-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-737-Shopify for exporting installed users:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/96470" rel="nofollow"&gt;https://hackerone.com/reports/96470&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-738-Shopify Twitter disconnect:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/111216" rel="nofollow"&gt;https://hackerone.com/reports/111216&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-739-Badoo full account takeover:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerone.com/reports/127703" rel="nofollow"&gt;https://hackerone.com/reports/127703&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-740-Disabling PS Logging:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/leechristensen/Random/blob/master/CSharp/DisablePSLogging.cs"&gt;https://github.com/leechristensen/Random/blob/master/CSharp/DisablePSLogging.cs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-741-macro-less-code-exec-in-msword:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sensepost.com/blog/2017/macro-less-code-exec-in-msword/" rel="nofollow"&gt;https://sensepost.com/blog/2017/macro-less-code-exec-in-msword/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-742-5 ways to Exploiting PUT Vulnerability:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/5-ways-to-exploiting-put-vulnerabilit" rel="nofollow"&gt;http://www.hackingarticles.in/5-ways-to-exploiting-put-vulnerabilit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-743-5 Ways to Exploit Verb Tempering Vulnerability:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/5-ways-to-exploit-verb-tempering-vulnerability" rel="nofollow"&gt;http://www.hackingarticles.in/5-ways-to-exploit-verb-tempering-vulnerability&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-744-5 Ways to Hack MySQL Login Password:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/5-ways-to-hack-mysql-login-password" rel="nofollow"&gt;http://www.hackingarticles.in/5-ways-to-hack-mysql-login-password&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-745-5 Ways to Hack SMB Login Password:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/5-ways-to-hack-smb-login-password" rel="nofollow"&gt;http://www.hackingarticles.in/5-ways-to-hack-smb-login-password&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-746-6 Ways to Hack FTP Login Password:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/6-ways-to-hack-ftp-login-password" rel="nofollow"&gt;http://www.hackingarticles.in/6-ways-to-hack-ftp-login-password&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-746-6 Ways to Hack SNMP Password:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/6-ways-to-hack-snmp-password" rel="nofollow"&gt;http://www.hackingarticles.in/6-ways-to-hack-snmp-password&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-747-6 Ways to Hack VNC Login Password:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/6-ways-to-hack-vnc-login-password" rel="nofollow"&gt;http://www.hackingarticles.in/6-ways-to-hack-vnc-login-password&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-748-Access Sticky keys Backdoor on Remote PC with Sticky Keys Hunter:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/access-sticky-keys-backdoor-remote-pc-sticky-keys-hunter" rel="nofollow"&gt;http://www.hackingarticles.in/access-sticky-keys-backdoor-remote-pc-sticky-keys-hunter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-749-Beginner Guide to IPtables:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/beginner-guide-iptables" rel="nofollow"&gt;http://www.hackingarticles.in/beginner-guide-iptables&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-750-Beginner Guide to impacket Tool kit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/beginner-guide-to-impacket-tool-kit" rel="nofollow"&gt;http://www.hackingarticles.in/beginner-guide-to-impacket-tool-kit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-751-Exploit Remote Windows 10 PC using Discover Tool:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/exploit-remote-windows-10-pc-using-discover-tool" rel="nofollow"&gt;http://www.hackingarticles.in/exploit-remote-windows-10-pc-using-discover-tool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-752-Forensics Investigation of Remote PC (Part 2):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/forensics-investigation-of-remote-pc-part-2" rel="nofollow"&gt;http://www.hackingarticles.in/forensics-investigation-of-remote-pc-part-2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-753-5 ways to File upload vulnerability Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/5-ways-file-upload-vulnerability-exploitation" rel="nofollow"&gt;http://www.hackingarticles.in/5-ways-file-upload-vulnerability-exploitation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-754-FTP Penetration Testing in Ubuntu (Port 21):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/ftp-penetration-testing-in-ubuntu-port-21" rel="nofollow"&gt;http://www.hackingarticles.in/ftp-penetration-testing-in-ubuntu-port-21&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-755-FTP Penetration Testing on Windows (Port 21):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/ftp-penetration-testing-windows" rel="nofollow"&gt;http://www.hackingarticles.in/ftp-penetration-testing-windows&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-756-FTP Pivoting through RDP:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/ftp-pivoting-rdp" rel="nofollow"&gt;http://www.hackingarticles.in/ftp-pivoting-rdp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-757-Fun with Metasploit Payloads:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/fun-metasploit-payloads" rel="nofollow"&gt;http://www.hackingarticles.in/fun-metasploit-payloads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-758-Gather Cookies and History of Mozilla Firefox in Remote Windows, Linux or MAC PC:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/gather-cookies-and-history-of-mozilla-firefox-in-remote-windows-linux-or-mac-pc" rel="nofollow"&gt;http://www.hackingarticles.in/gather-cookies-and-history-of-mozilla-firefox-in-remote-windows-linux-or-mac-pc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-759-Generating Reverse Shell using Msfvenom (One Liner Payload):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/generating-reverse-shell-using-msfvenom-one-liner-payload" rel="nofollow"&gt;http://www.hackingarticles.in/generating-reverse-shell-using-msfvenom-one-liner-payload&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-760-Generating Scan Reports Using Nmap (Output Scan):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/generating-scan-reports-using-nmap-output-scan" rel="nofollow"&gt;http://www.hackingarticles.in/generating-scan-reports-using-nmap-output-scan&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-761-Get Meterpreter Session of Locked PC Remotely (Remote Desktop Enabled):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/get-meterpreter-session-locked-pc-remotely-remote-desktop-enabled" rel="nofollow"&gt;http://www.hackingarticles.in/get-meterpreter-session-locked-pc-remotely-remote-desktop-enabled&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-762-Hack ALL Security Features in Remote Windows 7 PC:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-all-security-features-in-remote-windows-7-pc" rel="nofollow"&gt;http://www.hackingarticles.in/hack-all-security-features-in-remote-windows-7-pc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-763-5 ways to Exploit LFi Vulnerability:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/5-ways-exploit-lfi-vulnerability" rel="nofollow"&gt;http://www.hackingarticles.in/5-ways-exploit-lfi-vulnerability&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-764-5 Ways to Directory Bruteforcing on Web Server:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/5-ways-directory-bruteforcing-web-server" rel="nofollow"&gt;http://www.hackingarticles.in/5-ways-directory-bruteforcing-web-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-765-Hack Call Logs, SMS, Camera of Remote Android Phone using Metasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-call-logs-sms-camera-remote-android-phone-using-metasploit" rel="nofollow"&gt;http://www.hackingarticles.in/hack-call-logs-sms-camera-remote-android-phone-using-metasploit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-766-Hack Gmail and Facebook Password in Network using Bettercap:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-gmail-facebook-password-network-using-bettercap" rel="nofollow"&gt;http://www.hackingarticles.in/hack-gmail-facebook-password-network-using-bettercap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-767-ICMP Penetration Testing:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/icmp-penetration-testing" rel="nofollow"&gt;http://www.hackingarticles.in/icmp-penetration-testing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-768-Understanding Guide to Mimikatz:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/understanding-guide-mimikatz" rel="nofollow"&gt;http://www.hackingarticles.in/understanding-guide-mimikatz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-769-5 Ways to Create Dictionary for Bruteforcing:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/5-ways-create-dictionary-bruteforcing" rel="nofollow"&gt;http://www.hackingarticles.in/5-ways-create-dictionary-bruteforcing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-770-Linux Privilege Escalation using LD_Preload:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/linux-privilege-escalation-using-ld_preload/" rel="nofollow"&gt;http://www.hackingarticles.in/linux-privilege-escalation-using-ld_preload/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-771-2 Ways to Hack Remote Desktop Password using kali Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/2-ways-to-hack-remote-desktop-password-using-kali-linux" rel="nofollow"&gt;http://www.hackingarticles.in/2-ways-to-hack-remote-desktop-password-using-kali-linux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-772-2 ways to use Msfvenom Payload with Netcat:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/2-ways-use-msfvenom-payload-netcat" rel="nofollow"&gt;http://www.hackingarticles.in/2-ways-use-msfvenom-payload-netcat&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-773-4 ways to Connect Remote PC using SMB Port:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/4-ways-connect-remote-pc-using-smb-port" rel="nofollow"&gt;http://www.hackingarticles.in/4-ways-connect-remote-pc-using-smb-port&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-774-4 Ways to DNS Enumeration:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/4-ways-dns-enumeration" rel="nofollow"&gt;http://www.hackingarticles.in/4-ways-dns-enumeration&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-775-4 Ways to get Linux Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/4-ways-get-linux-privilege-escalation" rel="nofollow"&gt;http://www.hackingarticles.in/4-ways-get-linux-privilege-escalation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-776-101+ OSINT Resources for Investigators [2019]:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://i-sight.com/resources/101-osint-resources-for-investigators/" rel="nofollow"&gt;https://i-sight.com/resources/101-osint-resources-for-investigators/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-777-Week in OSINT #2019–02:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/week-in-osint/week-in-osint-2019-02-d4009c27e85f" rel="nofollow"&gt;https://medium.com/week-in-osint/week-in-osint-2019-02-d4009c27e85f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-778-OSINT Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hack2interesting.com/osint-cheat-sheet/" rel="nofollow"&gt;https://hack2interesting.com/osint-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-779-OSINT Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://infoskirmish.com/osint-cheat-sheet/" rel="nofollow"&gt;https://infoskirmish.com/osint-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-780-OSINT Links for Investigators:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://i-sight.com/resources/osint-links-for-investigators/" rel="nofollow"&gt;https://i-sight.com/resources/osint-links-for-investigators/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-781- Metasploit Cheat Sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.kitploit.com/2019/02/metasploit-cheat-sheet.html" rel="nofollow"&gt;https://www.kitploit.com/2019/02/metasploit-cheat-sheet.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-782- Exploit Development Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/coreb1t/awesome-pentest-cheat-sheets/commit/5b83fa9cfb05f4774eb5e1be2cde8dbb04d011f4"&gt;https://github.com/coreb1t/awesome-pentest-cheat-sheets/commit/5b83fa9cfb05f4774eb5e1be2cde8dbb04d011f4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-783-Building Profiles for a Social Engineering Attack:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2012/04/19/building-profiles-for-a-social-engineering-attack/" rel="nofollow"&gt;https://pentestlab.blog/2012/04/19/building-profiles-for-a-social-engineering-attack/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-784-Practical guide to NTLM Relaying in 2017 (A.K.A getting a foothold in under 5 minutes):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://byt3bl33d3r.github.io/practical-guide-to-ntlm-relaying-in-2017-aka-getting-a-foothold-in-under-5-minutes.html" rel="nofollow"&gt;https://byt3bl33d3r.github.io/practical-guide-to-ntlm-relaying-in-2017-aka-getting-a-foothold-in-under-5-minutes.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-785-Getting the goods with CrackMapExec: Part 2:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://byt3bl33d3r.github.io/tag/crackmapexec.html" rel="nofollow"&gt;https://byt3bl33d3r.github.io/tag/crackmapexec.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-786-Bug Hunting Methodology (part-1):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/91295b2d2066" rel="nofollow"&gt;https://medium.com/p/91295b2d2066&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-787-Exploring Cobalt Strike's ExternalC2 framework:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.xpnsec.com/exploring-cobalt-strikes-externalc2-framework/" rel="nofollow"&gt;https://blog.xpnsec.com/exploring-cobalt-strikes-externalc2-framework/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-788-Airbnb – When Bypassing JSON Encoding, XSS Filter, WAF, CSP, and Auditor turns into Eight Vulnerabilities:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://buer.haus/2017/03/08/airbnb-when-bypassing-json-encoding-xss-filter-waf-csp-and-auditor-turns-into-eight-vulnerabilities/" rel="nofollow"&gt;https://buer.haus/2017/03/08/airbnb-when-bypassing-json-encoding-xss-filter-waf-csp-and-auditor-turns-into-eight-vulnerabilities/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-789-Adversarial Tactics, Techniques &amp;amp; Common Knowledge:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://attack.mitre.org/wiki/Main_Page" rel="nofollow"&gt;https://attack.mitre.org/wiki/Main_Page&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-790-Bug Bounty — Tips / Tricks / JS (JavaScript Files):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/bdde412ea49d" rel="nofollow"&gt;https://medium.com/p/bdde412ea49d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-791-Bug Bounty Hunting Tips #2 —Target their mobile apps (Android Edition):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/f88a9f383fcc" rel="nofollow"&gt;https://medium.com/p/f88a9f383fcc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-792-DiskShadow: The Return of VSS Evasion, Persistence, and Active Directory
Database Extraction:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bohops.com/2018/03/26/diskshadow-the-return-of-vss-evasion-persistence-and-active-directory-database-extraction/" rel="nofollow"&gt;https://bohops.com/2018/03/26/diskshadow-the-return-of-vss-evasion-persistence-and-active-directory-database-extraction/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-793-Executing Commands and Bypassing AppLocker with PowerShell Diagnostic Scripts:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bohops.com/2018/01/07/executing-commands-and-bypassing-applocker-with-powershell-diagnostic-scripts/" rel="nofollow"&gt;https://bohops.com/2018/01/07/executing-commands-and-bypassing-applocker-with-powershell-diagnostic-scripts/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-794-ClickOnce (Twice or Thrice): A Technique for Social Engineering and (Un)trusted Command Execution:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bohops.com/2017/12/02/clickonce-twice-or-thrice-a-technique-for-social-engineering-and-untrusted-command-execution/" rel="nofollow"&gt;https://bohops.com/2017/12/02/clickonce-twice-or-thrice-a-technique-for-social-engineering-and-untrusted-command-execution/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-795-Leveraging INF-SCT Fetch &amp;amp; Execute Techniques For Bypass, Evasion, &amp;amp; Persistence (Part 2):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bohops.com/2018/03/10/leveraging-inf-sct-fetch-execute-techniques-for-bypass-evasion-persistence-part-2/" rel="nofollow"&gt;https://bohops.com/2018/03/10/leveraging-inf-sct-fetch-execute-techniques-for-bypass-evasion-persistence-part-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-796-DiskShadow: The Return of VSS Evasion, Persistence, and Active Directory Database Extraction:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bohops.com/2018/03/26/diskshadow-the-return-of-vss-evasion-persistence-and-active-directory-database-extraction/" rel="nofollow"&gt;https://bohops.com/2018/03/26/diskshadow-the-return-of-vss-evasion-persistence-and-active-directory-database-extraction/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-797-Trust Direction: An Enabler for Active Directory Enumeration and Trust Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bohops.com/2017/12/02/trust-direction-an-enabler-for-active-directory-enumeration-and-trust-exploitation/" rel="nofollow"&gt;https://bohops.com/2017/12/02/trust-direction-an-enabler-for-active-directory-enumeration-and-trust-exploitation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-798-DiskShadow: The Return of VSS Evasion, Persistence, and Active Directory Database Extraction:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bohops.com/2018/03/26/diskshadow-the-return-of-vss-evasion-persistence-and-active-directory-database-extraction/" rel="nofollow"&gt;https://bohops.com/2018/03/26/diskshadow-the-return-of-vss-evasion-persistence-and-active-directory-database-extraction/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-799-Abusing Exported Functions and Exposed DCOM Interfaces for Pass-Thru Command Execution and Lateral Movement:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bohops.com/2018/03/17/abusing-exported-functions-and-exposed-dcom-interfaces-for-pass-thru-command-execution-and-lateral-movement/" rel="nofollow"&gt;https://bohops.com/2018/03/17/abusing-exported-functions-and-exposed-dcom-interfaces-for-pass-thru-command-execution-and-lateral-movement/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-800-Capcom Rootkit Proof-Of-Concept:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.fuzzysecurity.com/tutorials/28.html" rel="nofollow"&gt;https://www.fuzzysecurity.com/tutorials/28.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-801-Linux Privilege Escalation using Misconfigured NFS:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/linux-privilege-escalation-using-misconfigured-nfs/" rel="nofollow"&gt;http://www.hackingarticles.in/linux-privilege-escalation-using-misconfigured-nfs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-802-Beginners Guide for John the Ripper (Part 1):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/beginner-guide-john-the-ripper-part-1/" rel="nofollow"&gt;http://www.hackingarticles.in/beginner-guide-john-the-ripper-part-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-803-Working of Traceroute using Wireshark:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/working-of-traceroute-using-wireshark/" rel="nofollow"&gt;http://www.hackingarticles.in/working-of-traceroute-using-wireshark/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-804-Multiple Ways to Get root through Writable File:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/multiple-ways-to-get-root-through-writable-file/" rel="nofollow"&gt;http://www.hackingarticles.in/multiple-ways-to-get-root-through-writable-file/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-805-4 ways to SMTP Enumeration:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/4-ways-smtp-enumeration" rel="nofollow"&gt;http://www.hackingarticles.in/4-ways-smtp-enumeration&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-806-4 ways to Hack MS SQL Login Password:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/4-ways-to-hack-ms-sql-login-password" rel="nofollow"&gt;http://www.hackingarticles.in/4-ways-to-hack-ms-sql-login-password&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-807-4 Ways to Hack Telnet Passsword:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/4-ways-to-hack-telnet-passsword" rel="nofollow"&gt;http://www.hackingarticles.in/4-ways-to-hack-telnet-passsword&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-808-5 ways to Brute Force Attack on WordPress Website:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/5-ways-brute-force-attack-wordpress-website" rel="nofollow"&gt;http://www.hackingarticles.in/5-ways-brute-force-attack-wordpress-website&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-809-5 Ways to Crawl a Website:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/5-ways-crawl-website" rel="nofollow"&gt;http://www.hackingarticles.in/5-ways-crawl-website&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-810-Local Linux Enumeration &amp;amp; Privilege Escalation Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.rebootuser.com/?p=1623" rel="nofollow"&gt;https://www.rebootuser.com/?p=1623&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-811-The Drebin Dataset:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sec.cs.tu-bs.de/~danarp/drebin/download.html" rel="nofollow"&gt;https://www.sec.cs.tu-bs.de/~danarp/drebin/download.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-812-ECMAScript 6 from an Attacker's Perspective - Breaking Frameworks, Sandboxes, and everything else:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/x00mario/es6-en" rel="nofollow"&gt;https://www.slideshare.net/x00mario/es6-en&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-813-IT and Information Security Cheat Sheets:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://zeltser.com/cheat-sheets/" rel="nofollow"&gt;https://zeltser.com/cheat-sheets/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-814-Cheat Sheets - DFIR Training:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.dfir.training/cheat-sheets" rel="nofollow"&gt;https://www.dfir.training/cheat-sheets&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-815-WinDbg Malware Analysis Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://oalabs.openanalysis.net/2019/02/18/windbg-for-malware-analysis/" rel="nofollow"&gt;https://oalabs.openanalysis.net/2019/02/18/windbg-for-malware-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-819-Cheat Sheet for Analyzing Malicious Software:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.prodefence.org/cheat-sheet-for-analyzing-malicious-software/" rel="nofollow"&gt;https://www.prodefence.org/cheat-sheet-for-analyzing-malicious-software/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-820-Analyzing Malicious Documents Cheat Sheet - Prodefence:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.prodefence.org/analyzing-malicious-documents-cheat-sheet-2/" rel="nofollow"&gt;https://www.prodefence.org/analyzing-malicious-documents-cheat-sheet-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-821-Cheat Sheets - SANS Digital Forensics:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://digital-forensics.sans.org/community/cheat-sheets" rel="nofollow"&gt;https://digital-forensics.sans.org/community/cheat-sheets&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-822-Linux Command Line Forensics and Intrusion Detection Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sandflysecurity.com/blog/compromised-linux-cheat-sheet/" rel="nofollow"&gt;https://www.sandflysecurity.com/blog/compromised-linux-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-823-Windows Registry Auditing Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/Hackerhurricane/windows-registry-auditing-cheat-sheet-ver-jan-2016-malwarearchaeology" rel="nofollow"&gt;https://www.slideshare.net/Hackerhurricane/windows-registry-auditing-cheat-sheet-ver-jan-2016-malwarearchaeology&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-824-Cheat Sheet of Useful Commands Every Kali Linux User Needs To Know:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://kennyvn.com/cheatsheet-useful-bash-commands-linux/" rel="nofollow"&gt;https://kennyvn.com/cheatsheet-useful-bash-commands-linux/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-825-kali-linux-cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/NoorQureshi/kali-linux-cheatsheet"&gt;https://github.com/NoorQureshi/kali-linux-cheatsheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-826-8 Best Kali Linux Terminal Commands used by Hackers (2019 Edition):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securedyou.com/best-kali-linux-commands-terminal-hacking/" rel="nofollow"&gt;https://securedyou.com/best-kali-linux-commands-terminal-hacking/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-827-Kali Linux Commands Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.pinterest.com/pin/393431717429496576/" rel="nofollow"&gt;https://www.pinterest.com/pin/393431717429496576/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-827-Kali Linux Commands Cheat Sheet A To Z:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://officialhacker.com/linux-commands-cheat-sheet/" rel="nofollow"&gt;https://officialhacker.com/linux-commands-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-828-Linux commands CHEATSHEET for HACKERS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.reddit.com/r/Kalilinux/.../linux_commands_cheatsheet_for_hackers/" rel="nofollow"&gt;https://www.reddit.com/r/Kalilinux/.../linux_commands_cheatsheet_for_hackers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-829-100 Linux Commands – A Brief Outline With Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://fosslovers.com/100-linux-commands-cheatsheet/" rel="nofollow"&gt;https://fosslovers.com/100-linux-commands-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-830-Kali Linux – Penetration Testing Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://uwnthesis.wordpress.com/2016/06/.../kali-linux-penetration-testing-cheat-sheet/" rel="nofollow"&gt;https://uwnthesis.wordpress.com/2016/06/.../kali-linux-penetration-testing-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-831-Basic Linux Terminal Shortcuts Cheat Sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://computingforgeeks.com/basic-linux-terminal-shortcuts-cheat-sheet/" rel="nofollow"&gt;https://computingforgeeks.com/basic-linux-terminal-shortcuts-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-832-List Of 220+ Kali Linux and Linux Commands Line {Free PDF} :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://itechhacks.com/kali-linux-and-linux-commands/" rel="nofollow"&gt;https://itechhacks.com/kali-linux-and-linux-commands/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-833-Transferring files from Kali to Windows (post exploitation):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.ropnop.com/transferring-files-from-kali-to-windows/" rel="nofollow"&gt;https://blog.ropnop.com/transferring-files-from-kali-to-windows/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-834-The Ultimate Penetration Testing Command Cheat Sheet for Kali Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hostingland.com/.../the-ultimate-penetration-testing-command-cheat-sheet" rel="nofollow"&gt;https://www.hostingland.com/.../the-ultimate-penetration-testing-command-cheat-sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-835-What is penetration testing? 10 hacking tools the pros use:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.csoonline.com/article/.../17-penetration-testing-tools-the-pros-use.html" rel="nofollow"&gt;https://www.csoonline.com/article/.../17-penetration-testing-tools-the-pros-use.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-836-Best Hacking Tools List for Hackers &amp;amp; Security Professionals in 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/hacking-tools-list/" rel="nofollow"&gt;https://gbhackers.com/hacking-tools-list/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-837-ExploitedBunker PenTest Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://exploitedbunker.com/articles/pentest-cheatsheet/" rel="nofollow"&gt;https://exploitedbunker.com/articles/pentest-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-838-How to use Zarp for penetration testing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.techrepublic.com/article/how-to-use-zarp-for-penetration-testing/" rel="nofollow"&gt;https://www.techrepublic.com/article/how-to-use-zarp-for-penetration-testing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-839-Wireless Penetration Testing Cheat Sheet;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://uceka.com/2014/05/12/wireless-penetration-testing-cheat-sheet/" rel="nofollow"&gt;https://uceka.com/2014/05/12/wireless-penetration-testing-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-840-Pentest Cheat Sheets:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cheatography.com/tag/pentest/" rel="nofollow"&gt;https://www.cheatography.com/tag/pentest/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-841-40 Best Penetration Testing (Pen Testing) Tools in 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.guru99.com/top-5-penetration-testing-tools.html" rel="nofollow"&gt;https://www.guru99.com/top-5-penetration-testing-tools.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-842-Metasploit Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hacking.land/2019/02/metasploit-cheat-sheet.html" rel="nofollow"&gt;https://www.hacking.land/2019/02/metasploit-cheat-sheet.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-843-OSCP useful resources and tools;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://acknak.fr/en/articles/oscp-tools/" rel="nofollow"&gt;https://acknak.fr/en/articles/oscp-tools/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-844-Pentest + Exploit dev Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ehackings.com/all-posts/pentest-exploit-dev-cheatsheet/" rel="nofollow"&gt;https://ehackings.com/all-posts/pentest-exploit-dev-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-845-What is Penetration Testing? A Quick Guide for 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cloudwards.net/penetration-testing/" rel="nofollow"&gt;https://www.cloudwards.net/penetration-testing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-846-Recon resource:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentester.land/cheatsheets/2019/04/15/recon-resources.html" rel="nofollow"&gt;https://pentester.land/cheatsheets/2019/04/15/recon-resources.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-847-Network Recon Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cheatography.com/coffeefueled/cheat-sheets/network-recon/" rel="nofollow"&gt;https://www.cheatography.com/coffeefueled/cheat-sheets/network-recon/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-848-Recon Cheat Sheets:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cheatography.com/tag/recon/" rel="nofollow"&gt;https://www.cheatography.com/tag/recon/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-849-Penetration Testing Active Directory, Part II:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hausec.com/2019/03/12/penetration-testing-active-directory-part-ii/" rel="nofollow"&gt;https://hausec.com/2019/03/12/penetration-testing-active-directory-part-ii/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-850-Reverse-engineering Cheat Sheets:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cheatography.com/tag/reverse-engineering/" rel="nofollow"&gt;https://www.cheatography.com/tag/reverse-engineering/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-851-Reverse Engineering Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.scribd.com/doc/38163906/Reverse-Engineering-Cheat-Sheet" rel="nofollow"&gt;https://www.scribd.com/doc/38163906/Reverse-Engineering-Cheat-Sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-852-ATOMBOMBING: BRAND NEW CODE INJECTION FOR WINDOWS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.ensilo.com/atombombing-brand-new-code-injection-for-windows" rel="nofollow"&gt;https://blog.ensilo.com/atombombing-brand-new-code-injection-for-windows&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-853-PROPagate:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hexacorn.com/blog/2017/10/26/propagate-a-new-code-injection-trick/" rel="nofollow"&gt;http://www.hexacorn.com/blog/2017/10/26/propagate-a-new-code-injection-trick/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-854-Process Doppelgänging, by Tal Liberman and Eugene Kogan::&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhat.com/docs/eu-17/materials/eu-17-Liberman-Lost-In-Transaction-Process-Doppelganging.pdf" rel="nofollow"&gt;https://www.blackhat.com/docs/eu-17/materials/eu-17-Liberman-Lost-In-Transaction-Process-Doppelganging.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-855-Gargoyle:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jlospinoso.github.io/security/assembly/c/cpp/developing/software/2017/03/04/gargoyle-memory-analysis-evasion.html" rel="nofollow"&gt;https://jlospinoso.github.io/security/assembly/c/cpp/developing/software/2017/03/04/gargoyle-memory-analysis-evasion.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-856-GHOSTHOOK:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cyberark.com/threat-research-blog/ghosthook-bypassing-patchguard-processor-trace-based-hooking/" rel="nofollow"&gt;https://www.cyberark.com/threat-research-blog/ghosthook-bypassing-patchguard-processor-trace-based-hooking/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-857-Learn C:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.programiz.com/c-programming" rel="nofollow"&gt;https://www.programiz.com/c-programming&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-858-x86 Assembly Programming Tutorial:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.tutorialspoint.com/assembly_programming/" rel="nofollow"&gt;https://www.tutorialspoint.com/assembly_programming/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-859-Dr. Paul Carter's PC Assembly Language:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pacman128.github.io/pcasm/" rel="nofollow"&gt;http://pacman128.github.io/pcasm/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-860-Introductory Intel x86 - Architecture, Assembly, Applications, and Alliteration:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://opensecuritytraining.info/IntroX86.html" rel="nofollow"&gt;http://opensecuritytraining.info/IntroX86.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-861-x86 Disassembly:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikibooks.org/wiki/X86_Disassembly" rel="nofollow"&gt;https://en.wikibooks.org/wiki/X86_Disassembly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-862-use-of-dns-tunneling-for-cc-communications-malware:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securelist.com/use-of-dns-tunneling-for-cc-communications/78203/" rel="nofollow"&gt;https://securelist.com/use-of-dns-tunneling-for-cc-communications/78203/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-863-Using IDAPython to Make Your Life Easier (Series)::&lt;/p&gt;
&lt;p&gt;&lt;a href="https://researchcenter.paloaltonetworks.com/2015/12/using-idapython-to-make-your-life-easier-part-1/" rel="nofollow"&gt;https://researchcenter.paloaltonetworks.com/2015/12/using-idapython-to-make-your-life-easier-part-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-864-NET binary analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cysinfo.com/cyber-attack-targeting-cbi-and-possibly-indian-army-officials/" rel="nofollow"&gt;https://cysinfo.com/cyber-attack-targeting-cbi-and-possibly-indian-army-officials/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-865-detailed analysis of the BlackEnergy3 big dropper:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cysinfo.com/blackout-memory-analysis-of-blackenergy-big-dropper/" rel="nofollow"&gt;https://cysinfo.com/blackout-memory-analysis-of-blackenergy-big-dropper/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-866-detailed analysis of Uroburos rootkit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gdatasoftware.com/blog/2014/06/23953-analysis-of-uroburos-using-windbg" rel="nofollow"&gt;https://www.gdatasoftware.com/blog/2014/06/23953-analysis-of-uroburos-using-windbg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-867-TCP/IP and tcpdump Pocket Reference Guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/security-resources/tcpip.pdf" rel="nofollow"&gt;https://www.sans.org/security-resources/tcpip.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-868-TCPDUMP Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://packetlife.net/media/library/12/tcpdump.pdf" rel="nofollow"&gt;http://packetlife.net/media/library/12/tcpdump.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-869-Scapy Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://packetlife.net/media/library/36/scapy.pdf" rel="nofollow"&gt;http://packetlife.net/media/library/36/scapy.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-870-WIRESHARK DISPLAY FILTERS:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://packetlife.net/media/library/13/Wireshark_Display_Filters.pdf" rel="nofollow"&gt;http://packetlife.net/media/library/13/Wireshark_Display_Filters.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-871-Windows command line sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/security-resources/sec560/windows_command_line_sheet_v1.pdf" rel="nofollow"&gt;https://www.sans.org/security-resources/sec560/windows_command_line_sheet_v1.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-872-Metasploit cheat sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/security-resources/sec560/misc_tools_sheet_v1.pdf" rel="nofollow"&gt;https://www.sans.org/security-resources/sec560/misc_tools_sheet_v1.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-873-IPv6 Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://packetlife.net/media/library/8/IPv6.pdf" rel="nofollow"&gt;http://packetlife.net/media/library/8/IPv6.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-874-IPv4 Subnetting:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://packetlife.net/media/library/15/IPv4_Subnetting.pdf" rel="nofollow"&gt;http://packetlife.net/media/library/15/IPv4_Subnetting.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-875-IOS IPV4 ACCESS LISTS:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://packetlife.net/media/library/14/IOS_IPv4_Access_Lists.pdf" rel="nofollow"&gt;http://packetlife.net/media/library/14/IOS_IPv4_Access_Lists.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-876-Common Ports List:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://packetlife.net/media/library/23/common_ports.pdf" rel="nofollow"&gt;http://packetlife.net/media/library/23/common_ports.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-877-WLAN:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://packetlife.net/media/library/4/IEEE_802.11_WLAN.pdf" rel="nofollow"&gt;http://packetlife.net/media/library/4/IEEE_802.11_WLAN.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-878-VLANs Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://packetlife.net/media/library/20/VLANs.pdf" rel="nofollow"&gt;http://packetlife.net/media/library/20/VLANs.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-879-VoIP Basics CheatSheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://packetlife.net/media/library/34/VOIP_Basics.pdf" rel="nofollow"&gt;http://packetlife.net/media/library/34/VOIP_Basics.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-880-Google hacking and defense cheat sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/security-resources/GoogleCheatSheet.pdf" rel="nofollow"&gt;https://www.sans.org/security-resources/GoogleCheatSheet.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-881-Nmap CheatSheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pen-testing.sans.org/blog/2013/10/08/nmap-cheat-sheet-1-0" rel="nofollow"&gt;https://pen-testing.sans.org/blog/2013/10/08/nmap-cheat-sheet-1-0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-882-Netcat cheat sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/security-resources/sec560/netcat_cheat_sheet_v1.pdf" rel="nofollow"&gt;https://www.sans.org/security-resources/sec560/netcat_cheat_sheet_v1.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-883-PowerShell cheat sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blogs.sans.org/pen-testing/files/2016/05/PowerShellCheatSheet_v41.pdf" rel="nofollow"&gt;https://blogs.sans.org/pen-testing/files/2016/05/PowerShellCheatSheet_v41.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-884-Scapy cheat sheet POCKET REFERENCE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blogs.sans.org/pen-testing/files/2016/04/ScapyCheatSheet_v0.2.pdf" rel="nofollow"&gt;https://blogs.sans.org/pen-testing/files/2016/04/ScapyCheatSheet_v0.2.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-885-SQL injection cheat sheet.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://information.rapid7.com/sql-injection-cheat-sheet-download.html" rel="nofollow"&gt;https://information.rapid7.com/sql-injection-cheat-sheet-download.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-886-Injection cheat sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://information.rapid7.com/injection-non-sql-cheat-sheet-download.html" rel="nofollow"&gt;https://information.rapid7.com/injection-non-sql-cheat-sheet-download.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-887-Symmetric Encryption Algorithms cheat sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cheatography.com/rubberdragonfarts/cheat-sheets/symmetric-encryption-algorithms/" rel="nofollow"&gt;https://www.cheatography.com/rubberdragonfarts/cheat-sheets/symmetric-encryption-algorithms/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-888-Intrusion Discovery Cheat Sheet v2.0 for Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pen-testing.sans.org/retrieve/linux-cheat-sheet.pdf" rel="nofollow"&gt;https://pen-testing.sans.org/retrieve/linux-cheat-sheet.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-889-Intrusion Discovery Cheat Sheet v2.0 for Window:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pen-testing.sans.org/retrieve/windows-cheat-sheet.pdf" rel="nofollow"&gt;https://pen-testing.sans.org/retrieve/windows-cheat-sheet.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-890-Memory Forensics Cheat Sheet v1.2:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://digital-forensics.sans.org/media/memory-forensics-cheat-sheet.pdf" rel="nofollow"&gt;https://digital-forensics.sans.org/media/memory-forensics-cheat-sheet.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-891-CRITICAL LOG REVIEW CHECKLIST FOR SECURITY INCIDENTS G E N E R AL APPROACH:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/brochure/course/log-management-in-depth/6" rel="nofollow"&gt;https://www.sans.org/brochure/course/log-management-in-depth/6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-892-Evidence collection cheat sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://digital-forensics.sans.org/media/evidence_collection_cheat_sheet.pdf" rel="nofollow"&gt;https://digital-forensics.sans.org/media/evidence_collection_cheat_sheet.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-893-Hex file and regex cheat sheet v1.0:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://digital-forensics.sans.org/media/hex_file_and_regex_cheat_sheet.pdf" rel="nofollow"&gt;https://digital-forensics.sans.org/media/hex_file_and_regex_cheat_sheet.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-894-Rekall Memory Forensic Framework Cheat Sheet v1.2.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://digital-forensics.sans.org/media/rekall-memory-forensics-cheatsheet.pdf" rel="nofollow"&gt;https://digital-forensics.sans.org/media/rekall-memory-forensics-cheatsheet.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-895-SIFT WORKSTATION Cheat Sheet v3.0.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://digital-forensics.sans.org/media/sift_cheat_sheet.pdf" rel="nofollow"&gt;https://digital-forensics.sans.org/media/sift_cheat_sheet.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-896-Volatility Memory Forensic Framework Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://digital-forensics.sans.org/media/volatility-memory-forensics-cheat-sheet.pdf" rel="nofollow"&gt;https://digital-forensics.sans.org/media/volatility-memory-forensics-cheat-sheet.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-897-Hands - on Network Forensics.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.first.org/resources/papers/conf2015/first_2015_-_hjelmvik-_erik_-_hands-on_network_forensics_20150604.pdf" rel="nofollow"&gt;https://www.first.org/resources/papers/conf2015/first_2015_-_hjelmvik-_erik_-_hands-on_network_forensics_20150604.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-898-VoIP Security Vulnerabilities.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/reading-room/whitepapers/voip/voip-security-vulnerabilities-2036" rel="nofollow"&gt;https://www.sans.org/reading-room/whitepapers/voip/voip-security-vulnerabilities-2036&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-899-Incident Response: How to Fight Back:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/reading-room/whitepapers/analyst/incident-response-fight-35342" rel="nofollow"&gt;https://www.sans.org/reading-room/whitepapers/analyst/incident-response-fight-35342&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-900-BI-7_VoIP_Analysis_Fundamentals:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sharkfest.wireshark.org/sharkfest.12/presentations/BI-7_VoIP_Analysis_Fundamentals.pdf" rel="nofollow"&gt;https://sharkfest.wireshark.org/sharkfest.12/presentations/BI-7_VoIP_Analysis_Fundamentals.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-901-Bug Hunting Guide:&lt;/p&gt;
&lt;p&gt;cybertheta.blogspot.com/2018/08/bug-hunting-guide.html&lt;/p&gt;
&lt;p&gt;-902-Guide 001 |Getting Started in Bug Bounty Hunting:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://whoami.securitybreached.org/2019/.../guide-getting-started-in-bug-bounty-hun" rel="nofollow"&gt;https://whoami.securitybreached.org/2019/.../guide-getting-started-in-bug-bounty-hun&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;-903-SQL injection cheat sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://portswigger.net" rel="nofollow"&gt;https://portswigger.net&lt;/a&gt; › Web Security Academy › SQL injection › Cheat sheet&lt;/p&gt;
&lt;p&gt;-904-RSnake's XSS Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.in-secure.org/2018/08/22/rsnakes-xss-cheat-sheet/" rel="nofollow"&gt;https://www.in-secure.org/2018/08/22/rsnakes-xss-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-905-Bug Bounty Tips (2):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ctrsec.io/index.php/2019/03/20/bug-bounty-tips-2/" rel="nofollow"&gt;https://ctrsec.io/index.php/2019/03/20/bug-bounty-tips-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-906-A Review of my Bug Hunting Journey:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://kongwenbin.com/a-review-of-my-bug-hunting-journey/" rel="nofollow"&gt;https://kongwenbin.com/a-review-of-my-bug-hunting-journey/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-907-Meet the First Hacker Millionaire on HackerOne:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://itblogr.com/meet-the-first-hacker-millionaire-on-hackerone/" rel="nofollow"&gt;https://itblogr.com/meet-the-first-hacker-millionaire-on-hackerone/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-908-XSS Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.reddit.com/r/programming/comments/4sn54s/xss_cheat_sheet/" rel="nofollow"&gt;https://www.reddit.com/r/programming/comments/4sn54s/xss_cheat_sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-909-Bug Bounty Hunter Methodology:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/bugcrowd/bug-bounty-hunter-methodology-nullcon-2016" rel="nofollow"&gt;https://www.slideshare.net/bugcrowd/bug-bounty-hunter-methodology-nullcon-2016&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-910-#10 Rules of Bug Bounty:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackernoon.com/10-rules-of-bug-bounty-65082473ab8c" rel="nofollow"&gt;https://hackernoon.com/10-rules-of-bug-bounty-65082473ab8c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-911-Bugbounty Checklist:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.excis3.be/bugbounty-checklist/21/" rel="nofollow"&gt;https://www.excis3.be/bugbounty-checklist/21/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-912-FireBounty | The Ultimate Bug Bounty List!:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://firebounty.com/" rel="nofollow"&gt;https://firebounty.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-913-Brutelogic xss cheat sheet 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://brutelogic.com.br/blog/ebook/xss-cheat-sheet/" rel="nofollow"&gt;https://brutelogic.com.br/blog/ebook/xss-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-914-XSS Cheat Sheet by Rodolfo Assis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leanpub.com/xss" rel="nofollow"&gt;https://leanpub.com/xss&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-915-Cross-Site-Scripting (XSS) – Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ironhackers.es/en/cheatsheet/cross-site-scripting-xss-cheat-sheet/" rel="nofollow"&gt;https://ironhackers.es/en/cheatsheet/cross-site-scripting-xss-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-916-XSS Cheat Sheet V. 2018 :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackerconnected.wordpress.com/2018/03/15/xss-cheat-sheet-v-2018/" rel="nofollow"&gt;https://hackerconnected.wordpress.com/2018/03/15/xss-cheat-sheet-v-2018/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-917-Cross-site Scripting Payloads Cheat Sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://exploit.linuxsec.org/xss-payloads-list" rel="nofollow"&gt;https://exploit.linuxsec.org/xss-payloads-list&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-918-Xss Cheat Sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.in-secure.org/tag/xss-cheat-sheet/" rel="nofollow"&gt;https://www.in-secure.org/tag/xss-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-919-Open Redirect Cheat Sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentester.land/cheatsheets/2018/11/02/open-redirect-cheatsheet.html" rel="nofollow"&gt;https://pentester.land/cheatsheets/2018/11/02/open-redirect-cheatsheet.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-920-XSS, SQL Injection and Fuzzing Bar Code Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.irongeek.com/xss-sql-injection-fuzzing-barcode-generator.php" rel="nofollow"&gt;https://www.irongeek.com/xss-sql-injection-fuzzing-barcode-generator.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-921-XSS Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://tools.paco.bg/13/" rel="nofollow"&gt;https://tools.paco.bg/13/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-922-XSS for ASP.net developers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gosecure.net/blog/2016/03/22/xss-for-asp-net-developers" rel="nofollow"&gt;https://www.gosecure.net/blog/2016/03/22/xss-for-asp-net-developers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-923-Cross-Site Request Forgery Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://trustfoundry.net/cross-site-request-forgery-cheat-sheet/" rel="nofollow"&gt;https://trustfoundry.net/cross-site-request-forgery-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-924-CSRF Attacks: Anatomy, Prevention, and XSRF Tokens:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.acunetix.com/websitesecurity/csrf-attacks/" rel="nofollow"&gt;https://www.acunetix.com/websitesecurity/csrf-attacks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-925-Cross-Site Request Forgery (CSRF) Prevention Cheat Sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mamchenkov.net/.../05/.../cross-site-request-forgery-csrf-prevention-cheat-shee" rel="nofollow"&gt;https://mamchenkov.net/.../05/.../cross-site-request-forgery-csrf-prevention-cheat-shee&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;-926-Guide to CSRF (Cross-Site Request Forgery):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.veracode.com/security/csrf" rel="nofollow"&gt;https://www.veracode.com/security/csrf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-927-Cross-site Request Forgery - Exploitation &amp;amp; Prevention:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.netsparker.com/blog/web-security/csrf-cross-site-request-forgery/" rel="nofollow"&gt;https://www.netsparker.com/blog/web-security/csrf-cross-site-request-forgery/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-928-SQL Injection Cheat Sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.netsparker.com/blog/web-security/sql-injection-cheat-sheet/" rel="nofollow"&gt;https://www.netsparker.com/blog/web-security/sql-injection-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-929-MySQL SQL Injection Practical Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.perspectiverisk.com/mysql-sql-injection-practical-cheat-sheet/" rel="nofollow"&gt;https://www.perspectiverisk.com/mysql-sql-injection-practical-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-930-SQL Injection (SQLi) - Cheat Sheet, Attack Examples &amp;amp; Protection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.checkmarx.com/knowledge/knowledgebase/SQLi" rel="nofollow"&gt;https://www.checkmarx.com/knowledge/knowledgebase/SQLi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-931-SQL injection attacks: A cheat sheet for business pros:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.techrepublic.com/.../sql-injection-attacks-a-cheat-sheet-for-business-pros/" rel="nofollow"&gt;https://www.techrepublic.com/.../sql-injection-attacks-a-cheat-sheet-for-business-pros/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-932-The SQL Injection Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://biztechmagazine.com/article/.../guide-combatting-sql-injection-attacks-perfcon" rel="nofollow"&gt;https://biztechmagazine.com/article/.../guide-combatting-sql-injection-attacks-perfcon&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-933-SQL Injection Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/sql-injection-cheat-sheet/" rel="nofollow"&gt;https://resources.infosecinstitute.com/sql-injection-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-934-Comprehensive SQL Injection Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.darknet.org.uk/2007/05/comprehensive-sql-injection-cheat-sheet/" rel="nofollow"&gt;https://www.darknet.org.uk/2007/05/comprehensive-sql-injection-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-935-MySQL SQL Injection Cheat Sheet:&lt;/p&gt;
&lt;p&gt;pentestmonkey.net/cheat-sheet/sql-injection/mysql-sql-injection-cheat-sheet&lt;/p&gt;
&lt;p&gt;-936-SQL Injection Cheat Sheet: MySQL:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gracefulsecurity.com/sql-injection-cheat-sheet-mysql/" rel="nofollow"&gt;https://www.gracefulsecurity.com/sql-injection-cheat-sheet-mysql/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-937- MySQL Injection Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.asafety.fr/mysql-injection-cheat-sheet/" rel="nofollow"&gt;https://www.asafety.fr/mysql-injection-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-938-SQL Injection Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.reddit.com/r/netsec/comments/7l449h/sql_injection_cheat_sheet/" rel="nofollow"&gt;https://www.reddit.com/r/netsec/comments/7l449h/sql_injection_cheat_sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-939-Google dorks cheat sheet 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sanfrantokyo.com/pph5/yxo7.php?xxx=5&amp;amp;lf338=google...cheat-sheet-2019" rel="nofollow"&gt;https://sanfrantokyo.com/pph5/yxo7.php?xxx=5&amp;amp;lf338=google...cheat-sheet-2019&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-940-Command Injection Cheatsheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackersonlineclub.com/command-injection-cheatsheet/" rel="nofollow"&gt;https://hackersonlineclub.com/command-injection-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-941-OS Command Injection Vulnerability:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.immuniweb.com/vulnerability/os-command-injection.html" rel="nofollow"&gt;https://www.immuniweb.com/vulnerability/os-command-injection.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-942-OS Command Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.checkmarx.com/knowledge/knowledgebase/OS-Command_Injection" rel="nofollow"&gt;https://www.checkmarx.com/knowledge/knowledgebase/OS-Command_Injection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-943-Command Injection: The Good, the Bad and the Blind:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gracefulsecurity.com/command-injection-the-good-the-bad-and-the-blind/" rel="nofollow"&gt;https://www.gracefulsecurity.com/command-injection-the-good-the-bad-and-the-blind/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-944-OS command injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://portswigger.net" rel="nofollow"&gt;https://portswigger.net&lt;/a&gt; › Web Security Academy › OS command injection&lt;/p&gt;
&lt;p&gt;-945-How to Test for Command Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.securityinnovation.com/blog/.../how-to-test-for-command-injection.html" rel="nofollow"&gt;https://blog.securityinnovation.com/blog/.../how-to-test-for-command-injection.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-946-Data Exfiltration via Blind OS Command Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.contextis.com/en/blog/data-exfiltration-via-blind-os-command-injection" rel="nofollow"&gt;https://www.contextis.com/en/blog/data-exfiltration-via-blind-os-command-injection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-947-XXE Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gracefulsecurity.com/xxe-cheatsheet/" rel="nofollow"&gt;https://www.gracefulsecurity.com/xxe-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-948-bugbounty-cheatsheet/xxe.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/EdOverflow/bugbounty-cheatsheet/blob/master/cheatsheets/xxe.md"&gt;https://github.com/EdOverflow/bugbounty-cheatsheet/blob/master/cheatsheets/xxe.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-949-XXE - Information Security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://phonexicum.github.io/infosec/xxe.html" rel="nofollow"&gt;https://phonexicum.github.io/infosec/xxe.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-950-XXE Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hahwul.com/p/xxe-cheat-sheet.html" rel="nofollow"&gt;https://www.hahwul.com/p/xxe-cheat-sheet.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-951-Advice From A Researcher: Hunting XXE For Fun and Profit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.bugcrowd.com/blog/advice-from-a-bug-hunter-xxe/" rel="nofollow"&gt;https://www.bugcrowd.com/blog/advice-from-a-bug-hunter-xxe/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-952-Out of Band Exploitation (OOB) CheatSheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.notsosecure.com/oob-exploitation-cheatsheet/" rel="nofollow"&gt;https://www.notsosecure.com/oob-exploitation-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-953-Web app penentration testing checklist and cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.malwrforensics.com/.../web-app-penentration-testing-checklist-and-cheatsheet-with-example" rel="nofollow"&gt;www.malwrforensics.com/.../web-app-penentration-testing-checklist-and-cheatsheet-with-example&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-954-Useful Resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://lsdsecurity.com/useful-resources/" rel="nofollow"&gt;https://lsdsecurity.com/useful-resources/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-955-Exploiting XXE Vulnerabilities in IIS/.NET:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pen-testing.sans.org/.../entity-inception-exploiting-iis-net-with-xxe-vulnerabiliti" rel="nofollow"&gt;https://pen-testing.sans.org/.../entity-inception-exploiting-iis-net-with-xxe-vulnerabiliti&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;-956-Top 65 OWASP Cheat Sheet Collections - ALL IN ONE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.yeahhub.com/top-65-owasp-cheat-sheet-collections-all-in-one/" rel="nofollow"&gt;https://www.yeahhub.com/top-65-owasp-cheat-sheet-collections-all-in-one/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-957-Hacking Resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.torontowebsitedeveloper.com/hacking-resources" rel="nofollow"&gt;https://www.torontowebsitedeveloper.com/hacking-resources&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-958-Out of Band XML External Entity Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.netsparker.com/web...scanner/.../out-of-band-xml-external-entity-injectio" rel="nofollow"&gt;https://www.netsparker.com/web...scanner/.../out-of-band-xml-external-entity-injectio&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;-959-XXE - ZeroSec - Adventures In Information Security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.zsec.uk/out-of-band-xxe-2/" rel="nofollow"&gt;https://blog.zsec.uk/out-of-band-xxe-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-960-Blog - Automated Data Exfiltration with XXE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.gdssecurity.com/labs/2015/4/.../automated-data-exfiltration-with-xxe.html" rel="nofollow"&gt;https://blog.gdssecurity.com/labs/2015/4/.../automated-data-exfiltration-with-xxe.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-961-My Experience during Infosec Interviews:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/.../my-experience-during-infosec-interviews-ed1f74ce41b8" rel="nofollow"&gt;https://medium.com/.../my-experience-during-infosec-interviews-ed1f74ce41b8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-962-Top 10 Security Risks on the Web (OWASP):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sensedia.com/.../top-10-security-risks-on-the-web-owasp-and-how-to-mitigate-t" rel="nofollow"&gt;https://sensedia.com/.../top-10-security-risks-on-the-web-owasp-and-how-to-mitigate-t&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;-963-Antivirus Evasion Tools [Updated 2019] :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/antivirus-evasion-tools/" rel="nofollow"&gt;https://resources.infosecinstitute.com/antivirus-evasion-tools/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-964-Adventures in Anti-Virus Evasion:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gracefulsecurity.com/anti-virus-evasion/" rel="nofollow"&gt;https://www.gracefulsecurity.com/anti-virus-evasion/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-965-Antivirus Bypass Phantom Evasion - 2019 :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.reddit.com/r/Kalilinux/.../antivirus_bypass_phantom_evasion_2019/" rel="nofollow"&gt;https://www.reddit.com/r/Kalilinux/.../antivirus_bypass_phantom_evasion_2019/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-966-Antivirus Evasion with Python:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/antivirus-evasion-with-python-49185295caf1" rel="nofollow"&gt;https://medium.com/bugbountywriteup/antivirus-evasion-with-python-49185295caf1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-967-Windows oneliners to get shell:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ironhackers.es/en/cheatsheet/comandos-en-windows-para-obtener-shell/" rel="nofollow"&gt;https://ironhackers.es/en/cheatsheet/comandos-en-windows-para-obtener-shell/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-968-Does Veil Evasion Still Work Against Modern AntiVirus?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/veil-evasion-virustotal/" rel="nofollow"&gt;https://www.hackingloops.com/veil-evasion-virustotal/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-969-Google dorks cheat sheet 2019 :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sanfrantokyo.com/pph5/yxo7.php?xxx=5&amp;amp;lf338=google...cheat-sheet-2019" rel="nofollow"&gt;https://sanfrantokyo.com/pph5/yxo7.php?xxx=5&amp;amp;lf338=google...cheat-sheet-2019&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-970-Malware Evasion Techniques :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/ThomasRoccia/malware-evasion-techniques" rel="nofollow"&gt;https://www.slideshare.net/ThomasRoccia/malware-evasion-techniques&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-971-How to become a cybersecurity pro: A cheat sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.techrepublic.com/article/cheat-sheet-how-to-become-a-cybersecurity-pro/" rel="nofollow"&gt;https://www.techrepublic.com/article/cheat-sheet-how-to-become-a-cybersecurity-pro/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-972-Bypassing Antivirus With Ten Lines of Code:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackingandsecurity.blogspot.com/.../bypassing-antivirus-with-ten-lines-of.html" rel="nofollow"&gt;https://hackingandsecurity.blogspot.com/.../bypassing-antivirus-with-ten-lines-of.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-973-Bypassing antivirus detection on a PDF exploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.digital.security/en/blog/bypassing-antivirus-detection-pdf-exploit" rel="nofollow"&gt;https://www.digital.security/en/blog/bypassing-antivirus-detection-pdf-exploit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-974-Generating Payloads &amp;amp; Anti-Virus Bypass Methods:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://uceka.com/2014/02/19/generating-payloads-anti-virus-bypass-methods/" rel="nofollow"&gt;https://uceka.com/2014/02/19/generating-payloads-anti-virus-bypass-methods/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-975-Apkwash Android Antivirus Evasion For Msfvemon:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackingarise.com/apkwash-android-antivirus-evasion-for-msfvemon/" rel="nofollow"&gt;https://hackingarise.com/apkwash-android-antivirus-evasion-for-msfvemon/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-976-Penetration Testing with Windows Computer &amp;amp; Bypassing an Antivirus:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.prodefence.org/penetration-testing-with-windows-computer-bypassing-antivirus" rel="nofollow"&gt;https://www.prodefence.org/penetration-testing-with-windows-computer-bypassing-antivirus&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-978-Penetration Testing: The Quest For Fully UnDetectable Malware:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.foregenix.com/.../penetration-testing-the-quest-for-fully-undetectable-malware" rel="nofollow"&gt;https://www.foregenix.com/.../penetration-testing-the-quest-for-fully-undetectable-malware&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-979-AVET: An AntiVirus Bypassing tool working with Metasploit Framework :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://githacktools.blogspot.com" rel="nofollow"&gt;https://githacktools.blogspot.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-980-Creating an undetectable payload using Veil-Evasion Toolkit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.yeahhub.com/creating-undetectable-payload-using-veil-evasion-toolkit/" rel="nofollow"&gt;https://www.yeahhub.com/creating-undetectable-payload-using-veil-evasion-toolkit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-981-Evading Antivirus :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sathisharthars.com/tag/evading-antivirus/" rel="nofollow"&gt;https://sathisharthars.com/tag/evading-antivirus/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-982-AVPASS – All things in moderation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hydrasky.com/mobile-security/avpass/" rel="nofollow"&gt;https://hydrasky.com/mobile-security/avpass/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-983-Complete Penetration Testing &amp;amp; Hacking Tools List:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cybarrior.com/blog/2019/03/31/hacking-tools-list/" rel="nofollow"&gt;https://cybarrior.com/blog/2019/03/31/hacking-tools-list/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-984-Modern red teaming: 21 resources for your security team:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://techbeacon.com/security/modern-red-teaming-21-resources-your-security-team" rel="nofollow"&gt;https://techbeacon.com/security/modern-red-teaming-21-resources-your-security-team&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-985-BloodHound and CypherDog Cheatsheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hausec.com/2019/04/15/bloodhound-and-cypherdog-cheatsheet/" rel="nofollow"&gt;https://hausec.com/2019/04/15/bloodhound-and-cypherdog-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-986-Redteam Archives:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ethicalhackingguru.com/category/redteam/" rel="nofollow"&gt;https://ethicalhackingguru.com/category/redteam/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-987-NMAP Commands Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.networkstraining.com/nmap-commands-cheat-sheet/" rel="nofollow"&gt;https://www.networkstraining.com/nmap-commands-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-988-Nmap Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dhound.io/blog/nmap-cheatsheet" rel="nofollow"&gt;https://dhound.io/blog/nmap-cheatsheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-989-Nmap Cheat Sheet: From Discovery to Exploits:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/nmap-cheat-sheet/" rel="nofollow"&gt;https://resources.infosecinstitute.com/nmap-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-990-Nmap Cheat Sheet and Pro Tips:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackertarget.com/nmap-cheatsheet-a-quick-reference-guide/" rel="nofollow"&gt;https://hackertarget.com/nmap-cheatsheet-a-quick-reference-guide/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-991-Nmap Tutorial: from the Basics to Advanced Tips:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackertarget.com/nmap-tutorial/" rel="nofollow"&gt;https://hackertarget.com/nmap-tutorial/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-992-How to run a complete network scan with OpenVAS;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.techrepublic.com/.../how-to-run-a-complete-network-scan-with-openvas/" rel="nofollow"&gt;https://www.techrepublic.com/.../how-to-run-a-complete-network-scan-with-openvas/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-993-Nmap: my own cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreafortuna.org/2018/03/12/nmap-my-own-cheatsheet/" rel="nofollow"&gt;https://www.andreafortuna.org/2018/03/12/nmap-my-own-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-994-Top 32 Nmap Command Examples For Linux Sys/Network Admins:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cyberciti.biz/security/nmap-command-examples-tutorials/" rel="nofollow"&gt;https://www.cyberciti.biz/security/nmap-command-examples-tutorials/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-995-35+ Best Free NMap Tutorials and Courses to Become Pro Hacker:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.fromdev.com/2019/01/best-free-nmap-tutorials-courses.html" rel="nofollow"&gt;https://www.fromdev.com/2019/01/best-free-nmap-tutorials-courses.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-996-Scanning Tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://widesecurity.net/kali-linux/kali-linux-tools-scanning/" rel="nofollow"&gt;https://widesecurity.net/kali-linux/kali-linux-tools-scanning/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-997-Nmap - Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ivoidwarranties.tech/posts/pentesting-tuts/nmap/cheatsheet/" rel="nofollow"&gt;https://www.ivoidwarranties.tech/posts/pentesting-tuts/nmap/cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-998-Linux for Network Engineers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://netbeez.net/blog/linux-how-to-use-nmap/" rel="nofollow"&gt;https://netbeez.net/blog/linux-how-to-use-nmap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-999-Nmap Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/nmap-cheat-sheet-port-scanning-basics-ethical-hackers/" rel="nofollow"&gt;https://www.hackingloops.com/nmap-cheat-sheet-port-scanning-basics-ethical-hackers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1000-Tactical Nmap for Beginner Network Reconnaissance:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://null-byte.wonderhowto.com/.../tactical-nmap-for-beginner-network-reconnaiss" rel="nofollow"&gt;https://null-byte.wonderhowto.com/.../tactical-nmap-for-beginner-network-reconnaiss&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;-1001-A Guide For Google Hacking Database:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackgentips.com/google-hacking-database/" rel="nofollow"&gt;https://www.hackgentips.com/google-hacking-database/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1002-2019 Data Breaches - The Worst Breaches, So Far:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.identityforce.com/blog/2019-data-breaches" rel="nofollow"&gt;https://www.identityforce.com/blog/2019-data-breaches&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1003-15 Vulnerable Sites To (Legally) Practice Your Hacking Skills:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.checkmarx.com/.../15-vulnerable-sites-to-legally-practice-your-hacking-skills" rel="nofollow"&gt;https://www.checkmarx.com/.../15-vulnerable-sites-to-legally-practice-your-hacking-skills&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1004-Google Hacking Master List :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://it.toolbox.com/blogs/rmorril/google-hacking-master-list-111408" rel="nofollow"&gt;https://it.toolbox.com/blogs/rmorril/google-hacking-master-list-111408&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1005-Smart searching with googleDorking | Exposing the Invisible:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://exposingtheinvisible.org/guides/google-dorking/" rel="nofollow"&gt;https://exposingtheinvisible.org/guides/google-dorking/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1006-Google Dorks 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://korben.info/google-dorks-2019-liste.html" rel="nofollow"&gt;https://korben.info/google-dorks-2019-liste.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1007-Google Dorks List and how to use it for Good;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://edgy.app/google-dorks-list" rel="nofollow"&gt;https://edgy.app/google-dorks-list&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1008-How to Use Google to Hack(Googledorks):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://null-byte.wonderhowto.com/how-to/use-google-hack-googledorks-0163566/" rel="nofollow"&gt;https://null-byte.wonderhowto.com/how-to/use-google-hack-googledorks-0163566/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1009-Using google as hacking tool:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cybertechies007.blogspot.com/.../using-google-as-hacking-tool-googledorks.ht" rel="nofollow"&gt;https://cybertechies007.blogspot.com/.../using-google-as-hacking-tool-googledorks.ht&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;-1010-#googledorks hashtag on Twitter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/hashtag/googledorks" rel="nofollow"&gt;https://twitter.com/hashtag/googledorks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1011-Top Five Open Source Intelligence (OSINT) Tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/top-five-open-source-intelligence-osint-tools/" rel="nofollow"&gt;https://resources.infosecinstitute.com/top-five-open-source-intelligence-osint-tools/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1012-What is open-source intelligence (OSINT)?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.microfocus.com/en-us/what-is/open-source-intelligence-osint" rel="nofollow"&gt;https://www.microfocus.com/en-us/what-is/open-source-intelligence-osint&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1013-A Guide to Open Source Intelligence Gathering (OSINT):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/a-guide-to-open-source-intelligence-gathering-osint-ca831e13f29c" rel="nofollow"&gt;https://medium.com/bugbountywriteup/a-guide-to-open-source-intelligence-gathering-osint-ca831e13f29c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1014-OSINT: How to find information on anyone:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@Peter_UXer/osint-how-to-find-information-on-anyone-5029a3c7fd56" rel="nofollow"&gt;https://medium.com/@Peter_UXer/osint-how-to-find-information-on-anyone-5029a3c7fd56&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1015-What is OSINT? How can I make use of it?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securitytrails.com/blog/what-is-osint-how-can-i-make-use-of-it" rel="nofollow"&gt;https://securitytrails.com/blog/what-is-osint-how-can-i-make-use-of-it&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1016-OSINT Tools for the Dark Web:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jakecreps.com/2019/05/16/osint-tools-for-the-dark-web/" rel="nofollow"&gt;https://jakecreps.com/2019/05/16/osint-tools-for-the-dark-web/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1017-A Guide to Open Source Intelligence (OSINT):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cjr.org/tow_center_reports/guide-to-osint-and-hostile-communities.php" rel="nofollow"&gt;https://www.cjr.org/tow_center_reports/guide-to-osint-and-hostile-communities.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1018-An Introduction To Open Source Intelligence (OSINT):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.secjuice.com/introduction-to-open-source-intelligence-osint/" rel="nofollow"&gt;https://www.secjuice.com/introduction-to-open-source-intelligence-osint/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1019-SSL &amp;amp; TLS HTTPS Testing [Definitive Guide] - Aptive:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.aptive.co.uk/blog/tls-ssl-security-testing/" rel="nofollow"&gt;https://www.aptive.co.uk/blog/tls-ssl-security-testing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1020-Exploit Title: [Files Containing E-mail and Associated Password Lists]:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/ghdb/4262/?source=ghdbid" rel="nofollow"&gt;https://www.exploit-db.com/ghdb/4262/?source=ghdbid&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1021-cheat_sheets:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://zachgrace.com/cheat_sheets/" rel="nofollow"&gt;http://zachgrace.com/cheat_sheets/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1022-Intel SYSRET:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/2017/06/14/intel-sysret" rel="nofollow"&gt;https://pentestlab.blog/2017/06/14/intel-sysret&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1023-Windows Preventive Maintenance Best Practices:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.professormesser.com/free-a-plus-training/220-902/windows-preventive-maintenance-best-practices/" rel="nofollow"&gt;http://www.professormesser.com/free-a-plus-training/220-902/windows-preventive-maintenance-best-practices/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1024-An Overview of Storage Devices:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.professormesser.com/?p=19367" rel="nofollow"&gt;http://www.professormesser.com/?p=19367&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1025-An Overview of RAID:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.professormesser.com/?p=19373" rel="nofollow"&gt;http://www.professormesser.com/?p=19373&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1026-How to Troubleshoot:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.professormesser.com/free-a-plus-training/220-902/how-to-troubleshoot/" rel="nofollow"&gt;http://www.professormesser.com/free-a-plus-training/220-902/how-to-troubleshoot/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1027-Mobile Device Security Troubleshooting:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.professormesser.com/free-a-plus-training/220-902/mobile-device-security-troubleshooting/" rel="nofollow"&gt;http://www.professormesser.com/free-a-plus-training/220-902/mobile-device-security-troubleshooting/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1028-Using Wireshark: Identifying Hosts and Users:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://unit42.paloaltonetworks.com/using-wireshark-identifying-hosts-and-users/" rel="nofollow"&gt;https://unit42.paloaltonetworks.com/using-wireshark-identifying-hosts-and-users/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1029-Using Wireshark - Display Filter Expressions:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://unit42.paloaltonetworks.com/using-wireshark-display-filter-expressions/" rel="nofollow"&gt;https://unit42.paloaltonetworks.com/using-wireshark-display-filter-expressions/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1030-Decrypting SSL/TLS traffic with Wireshark:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/decrypting-ssl-tls-traffic-with-wireshark/" rel="nofollow"&gt;https://resources.infosecinstitute.com/decrypting-ssl-tls-traffic-with-wireshark/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1031-A collection of handy Bash One-Liners and terminal tricks for data processing and Linux system maintenance.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://onceupon.github.io/Bash-Oneliner/" rel="nofollow"&gt;https://onceupon.github.io/Bash-Oneliner/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1032- Bash One-Liners Explained, Part I: Working with files :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://catonmat.net/bash-one-liners-explained-part-one" rel="nofollow"&gt;https://catonmat.net/bash-one-liners-explained-part-one&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1033-Bash One-Liners Explained, Part IV: Working with history:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://catonmat.net/bash-one-liners-explained-part-four" rel="nofollow"&gt;https://catonmat.net/bash-one-liners-explained-part-four&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1034-Useful bash one-liners :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/stephenturner/oneliners"&gt;https://github.com/stephenturner/oneliners&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1035-Some Random One-liner Linux Commands [Part 1]:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ostechnix.com/random-one-liner-linux-commands-part-1/" rel="nofollow"&gt;https://www.ostechnix.com/random-one-liner-linux-commands-part-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1036-The best terminal one-liners from and for smart admins + devs.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ssdnodes.com/tools/one-line-wise/" rel="nofollow"&gt;https://www.ssdnodes.com/tools/one-line-wise/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1037-Shell one-liner:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://rosettacode.org/wiki/Shell_one-liner#Racket" rel="nofollow"&gt;https://rosettacode.org/wiki/Shell_one-liner#Racket&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1038-SSH Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pentestmonkey.net/tag/ssh" rel="nofollow"&gt;http://pentestmonkey.net/tag/ssh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1039-7000 Google Dork List:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/raw/Tdvi8vgK" rel="nofollow"&gt;https://pastebin.com/raw/Tdvi8vgK&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1040-GOOGLE HACKİNG DATABASE – GHDB:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/raw/1ndqG7aq" rel="nofollow"&gt;https://pastebin.com/raw/1ndqG7aq&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1041-STEALING PASSWORD WITH GOOGLE HACK:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/raw/x6BNZ7NN" rel="nofollow"&gt;https://pastebin.com/raw/x6BNZ7NN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1042-Hack Remote PC with PHP File using PhpSploit Stealth Post-Exploitation Framework:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackingarticles.in/hack-remote-pc-with-php-file-using-phpsploit-stealth-post-exploitation-framework" rel="nofollow"&gt;http://www.hackingarticles.in/hack-remote-pc-with-php-file-using-phpsploit-stealth-post-exploitation-framework&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1043-Open Source database of android malware:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.code.google.com/archive/p/androguard/wikis/DatabaseAndroidMalwares.wiki" rel="nofollow"&gt;www.code.google.com/archive/p/androguard/wikis/DatabaseAndroidMalwares.wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1044-big-list-of-naughty-strings:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/minimaxir/big-list-of-naughty-strings/blob/master/blns.txt"&gt;https://github.com/minimaxir/big-list-of-naughty-strings/blob/master/blns.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1045-publicly available cap files:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.netresec.com/?page=PcapFiles" rel="nofollow"&gt;http://www.netresec.com/?page=PcapFiles&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1046-“Insertion, Evasion, and Denial of Service: Eluding Network Intrusion Detection”:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.119.399&amp;amp;rep=rep1&amp;amp;type=pdf" rel="nofollow"&gt;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.119.399&amp;amp;rep=rep1&amp;amp;type=pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1047-Building a malware analysis toolkit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://zeltser.com/build-malware-analysis-toolkit/" rel="nofollow"&gt;https://zeltser.com/build-malware-analysis-toolkit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1048-Netcat Reverse Shell Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet" rel="nofollow"&gt;http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1049-Packers and crypters:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://securityblog.gr/2950/detect-packers-cryptors-and-compilers/" rel="nofollow"&gt;http://securityblog.gr/2950/detect-packers-cryptors-and-compilers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1050-Evading antivirus:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.blackhillsinfosec.com/?p=5094" rel="nofollow"&gt;http://www.blackhillsinfosec.com/?p=5094&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1051-cheat sheets and information,The Art of Hacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/The-Art-of-Hacking"&gt;https://github.com/The-Art-of-Hacking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1052-Error-based SQL injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/37953.pdf" rel="nofollow"&gt;https://www.exploit-db.com/docs/37953.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1053-XSS cheat sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.veracode.com/security/xss" rel="nofollow"&gt;https://www.veracode.com/security/xss&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1054-Active Directory Enumeration with PowerShell:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/46990" rel="nofollow"&gt;https://www.exploit-db.com/docs/46990&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1055-Buffer Overflows, C Programming, NSA GHIDRA and More:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/47032" rel="nofollow"&gt;https://www.exploit-db.com/docs/47032&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1056-Analysis of CVE-2019-0708 (BlueKeep):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/46947" rel="nofollow"&gt;https://www.exploit-db.com/docs/46947&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1057-Windows Privilege Escalations:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/46131" rel="nofollow"&gt;https://www.exploit-db.com/docs/46131&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1058-The Ultimate Guide For Subdomain Takeover with Practical:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/46415" rel="nofollow"&gt;https://www.exploit-db.com/docs/46415&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1059-File transfer skills in the red team post penetration test:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/46515" rel="nofollow"&gt;https://www.exploit-db.com/docs/46515&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1060-How To Exploit PHP Remotely To Bypass Filters &amp;amp; WAF Rules:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/46049" rel="nofollow"&gt;https://www.exploit-db.com/docs/46049&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1061-Flying under the radar:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/45898" rel="nofollow"&gt;https://www.exploit-db.com/docs/45898&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1062-what is google hacking? and why it is useful ?and how you can learn how  to use  it:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/cry__pto/status/1142497470825545729?s=20" rel="nofollow"&gt;https://twitter.com/cry__pto/status/1142497470825545729?s=20&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1063-useful blogs for penetration testers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/cry__pto/status/1142497470825545729?s=20" rel="nofollow"&gt;https://twitter.com/cry__pto/status/1142497470825545729?s=20&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1064-useful #BugBounty resources &amp;amp; links &amp;amp; tutorials &amp;amp; explanations &amp;amp; writeups ::&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/cry__pto/status/1143965322233483265?s=20" rel="nofollow"&gt;https://twitter.com/cry__pto/status/1143965322233483265?s=20&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1065-Union- based SQL injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://securityidiots.com/Web-Pentest/SQL-Injection/Basic-Union-Based-SQL-Injection.html" rel="nofollow"&gt;http://securityidiots.com/Web-Pentest/SQL-Injection/Basic-Union-Based-SQL-Injection.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1066-Broken access control:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.happybearsoftware.com/quick-check-for-access-control-vulnerabilities-in-rails" rel="nofollow"&gt;https://www.happybearsoftware.com/quick-check-for-access-control-vulnerabilities-in-rails&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1067-Understanding firewall types and configurations:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://searchsecurity.techtarget.com/feature/The-five-different-types-of-firewalls" rel="nofollow"&gt;http://searchsecurity.techtarget.com/feature/The-five-different-types-of-firewalls&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1068-5 Kali Linux tricks that you may not know:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentester.land/tips-n-tricks/2018/11/09/5-kali-linux-tricks-that-you-may-not-know.html" rel="nofollow"&gt;https://pentester.land/tips-n-tricks/2018/11/09/5-kali-linux-tricks-that-you-may-not-know.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1069-5 tips to make the most of Twitter as a pentester or bug bounty hunter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentester.land/tips-n-tricks/2018/10/23/5-tips-to-make-the-most-of-twitter-as-a-pentester-or-bug-bounty-hunter.html" rel="nofollow"&gt;https://pentester.land/tips-n-tricks/2018/10/23/5-tips-to-make-the-most-of-twitter-as-a-pentester-or-bug-bounty-hunter.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1060-A Guide To Subdomain Takeovers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackerone.com/blog/Guide-Subdomain-Takeovers" rel="nofollow"&gt;https://www.hackerone.com/blog/Guide-Subdomain-Takeovers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1061-Advanced Recon Automation (Subdomains) case 1:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/9ffc4baebf70" rel="nofollow"&gt;https://medium.com/p/9ffc4baebf70&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1062-Security testing for REST API with w3af:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/quick-code/security-testing-for-rest-api-with-w3af-2c43b452e457?source=post_recirc---------0------------------" rel="nofollow"&gt;https://medium.com/quick-code/security-testing-for-rest-api-with-w3af-2c43b452e457?source=post_recirc---------0------------------&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1062-The Lazy Hacker:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securit.ie/blog/?p=86" rel="nofollow"&gt;https://securit.ie/blog/?p=86&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1063-Practical recon techniques for bug hunters &amp;amp; pen testers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/appsecco/practical-recon-levelup0x02/raw/200c43b58e9bf528a33c9dfa826fda89b229606c/practical_recon.md"&gt;https://github.com/appsecco/practical-recon-levelup0x02/raw/200c43b58e9bf528a33c9dfa826fda89b229606c/practical_recon.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1064-A More Advanced Recon Automation #1 (Subdomains):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://poc-server.com/blog/2019/01/18/advanced-recon-subdomains/" rel="nofollow"&gt;https://poc-server.com/blog/2019/01/18/advanced-recon-subdomains/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1065-Expanding your scope (Recon automation #2):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://poc-server.com/blog/2019/01/31/expanding-your-scope-recon-automation/" rel="nofollow"&gt;https://poc-server.com/blog/2019/01/31/expanding-your-scope-recon-automation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1066-RCE by uploading a web.config:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://poc-server.com/blog/2018/05/22/rce-by-uploading-a-web-config/" rel="nofollow"&gt;https://poc-server.com/blog/2018/05/22/rce-by-uploading-a-web-config/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1067-Finding and exploiting Blind XSS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://enciphers.com/finding-and-exploiting-blind-xss/" rel="nofollow"&gt;https://enciphers.com/finding-and-exploiting-blind-xss/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1068-Google dorks list 2018:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://conzu.de/en/google-dork-liste-2018-conzu" rel="nofollow"&gt;http://conzu.de/en/google-dork-liste-2018-conzu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1096-Out of Band Exploitation (OOB) CheatSheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.notsosecure.com/oob-exploitation-cheatsheet/" rel="nofollow"&gt;https://www.notsosecure.com/oob-exploitation-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1070-Metasploit Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://nitesculucian.github.io/2018/12/01/metasploit-cheat-sheet/" rel="nofollow"&gt;https://nitesculucian.github.io/2018/12/01/metasploit-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1071-Linux Post Exploitation Cheat Sheet :&lt;/p&gt;
&lt;p&gt;red-orbita.com/?p=8455&lt;/p&gt;
&lt;p&gt;-1072-OSCP/Pen Testing Resources :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@sdgeek/oscp-pen-testing-resources-271e9e570d45" rel="nofollow"&gt;https://medium.com/@sdgeek/oscp-pen-testing-resources-271e9e570d45&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1073-Out Of Band Exploitation (OOB) CheatSheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://packetstormsecurity.com/files/149290/Out-Of-Band-Exploitation-OOB-CheatSheet.html" rel="nofollow"&gt;https://packetstormsecurity.com/files/149290/Out-Of-Band-Exploitation-OOB-CheatSheet.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1074-HTML5 Security Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://html5sec.org/" rel="nofollow"&gt;https://html5sec.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1075-Kali Linux Cheat Sheet for Penetration Testers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackmoreops.com/2016/12/20/kali-linux-cheat-sheet-for-penetration-testers/" rel="nofollow"&gt;https://www.blackmoreops.com/2016/12/20/kali-linux-cheat-sheet-for-penetration-testers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1076-Responder - CheatSheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ivoidwarranties.tech/posts/pentesting-tuts/responder/cheatsheet/" rel="nofollow"&gt;https://www.ivoidwarranties.tech/posts/pentesting-tuts/responder/cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1076-Windows Post-Exploitation Command List:&lt;/p&gt;
&lt;p&gt;pentest.tonyng.net/windows-post-exploitation-command-list/&lt;/p&gt;
&lt;p&gt;-1077-Transfer files (Post explotation) - CheatSheet&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ironhackers.es/en/cheatsheet/transferir-archivos-post-explotacion-cheatsheet/" rel="nofollow"&gt;https://ironhackers.es/en/cheatsheet/transferir-archivos-post-explotacion-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1078-SQL Injection Cheat Sheet: MSSQL — GracefulSecurity:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gracefulsecurity.com/sql-injection-cheat-sheet-mssql/" rel="nofollow"&gt;https://www.gracefulsecurity.com/sql-injection-cheat-sheet-mssql/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1079-OSCP useful resources and tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://acknak.fr/en/articles/oscp-tools/" rel="nofollow"&gt;https://acknak.fr/en/articles/oscp-tools/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1080-Penetration Testing 102 - Windows Privilege Escalation - Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.exumbraops.com/penetration-testing-102-windows-privilege-escalation-cheatsheet" rel="nofollow"&gt;www.exumbraops.com/penetration-testing-102-windows-privilege-escalation-cheatsheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1081-Transferring files from Kali to Windows (post exploitation) :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.ropnop.com/transferring-files-from-kali-to-windows/" rel="nofollow"&gt;https://blog.ropnop.com/transferring-files-from-kali-to-windows/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1082-Hack Like a Pro: The Ultimate Command Cheat Sheet for Metasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://null-byte.wonderhowto.com/.../hack-like-pro-ultimate-command-cheat-sheet-f" rel="nofollow"&gt;https://null-byte.wonderhowto.com/.../hack-like-pro-ultimate-command-cheat-sheet-f&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;-1083-OSCP Goldmine (not clickbait):&lt;/p&gt;
&lt;p&gt;0xc0ffee.io/blog/OSCP-Goldmine&lt;/p&gt;
&lt;p&gt;-1084-Privilege escalation: Linux :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://vulp3cula.gitbook.io/hackers-grimoire/post-exploitation/privesc-linux" rel="nofollow"&gt;https://vulp3cula.gitbook.io/hackers-grimoire/post-exploitation/privesc-linux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1085-Exploitation Tools Archives :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentesttools.net/category/exploitationtools/" rel="nofollow"&gt;https://pentesttools.net/category/exploitationtools/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1086-From Local File Inclusion to Remote Code Execution - Part 1:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outpost24.com/blog/from-local-file-inclusion-to-remote-code-execution-part-1" rel="nofollow"&gt;https://outpost24.com/blog/from-local-file-inclusion-to-remote-code-execution-part-1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1087-Basic Linux Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/" rel="nofollow"&gt;https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1088-Title: Ultimate Directory Traversal &amp;amp; Path Traversal Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.vulnerability-lab.com/resources/documents/587.txt" rel="nofollow"&gt;www.vulnerability-lab.com/resources/documents/587.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1089-Binary Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pwndevils.com/hacking/howtwohack.html" rel="nofollow"&gt;https://pwndevils.com/hacking/howtwohack.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1090-A guide to Linux Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://payatu.com/guide-linux-privilege-escalation/" rel="nofollow"&gt;https://payatu.com/guide-linux-privilege-escalation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1091-Penetration Testing Tools Cheat Sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://news.ycombinator.com/item?id=11977304" rel="nofollow"&gt;https://news.ycombinator.com/item?id=11977304&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1092-List of Metasploit Commands - Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://thehacktoday.com/metasploit-commands/" rel="nofollow"&gt;https://thehacktoday.com/metasploit-commands/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1093-A journey into Radare 2 – Part 2: Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.megabeets.net/a-journey-into-radare-2-part-2/" rel="nofollow"&gt;https://www.megabeets.net/a-journey-into-radare-2-part-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1094-Remote Code Evaluation (Execution) Vulnerability:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.netsparker.com/blog/web-security/remote-code-evaluation-execution/" rel="nofollow"&gt;https://www.netsparker.com/blog/web-security/remote-code-evaluation-execution/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1095-Exploiting Python Code Injection in Web Applications:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.securitynewspaper.com/.../exploiting-python-code-injection-web-applicat" rel="nofollow"&gt;https://www.securitynewspaper.com/.../exploiting-python-code-injection-web-applicat&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;-1096-Shells · Total OSCP Guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sushant747.gitbooks.io/total-oscp-guide/reverse-shell.html" rel="nofollow"&gt;https://sushant747.gitbooks.io/total-oscp-guide/reverse-shell.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1097-MongoDB Injection cheat sheet Archives:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.securelayer7.net/tag/mongodb-injection-cheat-sheet/" rel="nofollow"&gt;https://blog.securelayer7.net/tag/mongodb-injection-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1098-Basic Shellshock Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.knapsy.com/blog/2014/10/07/basic-shellshock-exploitation/" rel="nofollow"&gt;https://blog.knapsy.com/blog/2014/10/07/basic-shellshock-exploitation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1099-Wireshark Tutorial and Tactical Cheat Sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackertarget.com/wireshark-tutorial-and-cheat-sheet/" rel="nofollow"&gt;https://hackertarget.com/wireshark-tutorial-and-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1100-Windows Command Line cheatsheet (part 2):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreafortuna.org/2017/.../windows-command-line-cheatsheet-part-2-wm" rel="nofollow"&gt;https://www.andreafortuna.org/2017/.../windows-command-line-cheatsheet-part-2-wm&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;-1101-Detecting WMI exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.irongeek.com/i.php?page=videos/derbycon8/track-3-03...exploitation" rel="nofollow"&gt;www.irongeek.com/i.php?page=videos/derbycon8/track-3-03...exploitation&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;1102-Metasploit Cheat Sheet - Hacking Land :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hacking.land/2019/02/metasploit-cheat-sheet.html" rel="nofollow"&gt;https://www.hacking.land/2019/02/metasploit-cheat-sheet.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1103-5 Practical Scenarios for XSS Attacks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentest-tools.com/blog/xss-attacks-practical-scenarios/" rel="nofollow"&gt;https://pentest-tools.com/blog/xss-attacks-practical-scenarios/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1104-Ultimate gdb cheat sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://nadavclaudecohen.com/2017/10/10/ultimate-gdb-cheat-sheet/" rel="nofollow"&gt;http://nadavclaudecohen.com/2017/10/10/ultimate-gdb-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1105-Reverse Engineering Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.scribd.com/doc/38163906/Reverse-Engineering-Cheat-Sheet" rel="nofollow"&gt;https://www.scribd.com/doc/38163906/Reverse-Engineering-Cheat-Sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1106-Reverse Engineering Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.scribd.com/document/94575179/Reverse-Engineering-Cheat-Sheet" rel="nofollow"&gt;https://www.scribd.com/document/94575179/Reverse-Engineering-Cheat-Sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1107-Reverse Engineering For Malware Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://eforensicsmag.com/reverse_engi_cheatsheet/" rel="nofollow"&gt;https://eforensicsmag.com/reverse_engi_cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1108-Reverse-engineering Cheat Sheets :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cheatography.com/tag/reverse-engineering/" rel="nofollow"&gt;https://www.cheatography.com/tag/reverse-engineering/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1109-Shortcuts for Understanding Malicious Scripts:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.linkedin.com/pulse/shortcuts-understanding-malicious-scripts-viviana-ross" rel="nofollow"&gt;https://www.linkedin.com/pulse/shortcuts-understanding-malicious-scripts-viviana-ross&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1110-WinDbg Malware Analysis Cheat Sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://oalabs.openanalysis.net/2019/02/18/windbg-for-malware-analysis/" rel="nofollow"&gt;https://oalabs.openanalysis.net/2019/02/18/windbg-for-malware-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1111-Cheat Sheet for Malware Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreafortuna.org/2016/08/16/cheat-sheet-for-malware-analysis/" rel="nofollow"&gt;https://www.andreafortuna.org/2016/08/16/cheat-sheet-for-malware-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1112-Tips for Reverse-Engineering Malicious Code :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.digitalmunition.me/tips-reverse-engineering-malicious-code-new-cheat-sheet" rel="nofollow"&gt;https://www.digitalmunition.me/tips-reverse-engineering-malicious-code-new-cheat-sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1113-Cheatsheet for radare2 :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leungs.xyz/reversing/2018/04/16/radare2-cheatsheet.html" rel="nofollow"&gt;https://leungs.xyz/reversing/2018/04/16/radare2-cheatsheet.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1114-Reverse Engineering Cheat Sheets:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.pinterest.com/pin/576390452300827323/" rel="nofollow"&gt;https://www.pinterest.com/pin/576390452300827323/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1115-Reverse Engineering Resources-Beginners to intermediate Guide/Links:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@vignesh4303/reverse-engineering-resources-beginners-to-intermediate-guide-links-f64c207505ed" rel="nofollow"&gt;https://medium.com/@vignesh4303/reverse-engineering-resources-beginners-to-intermediate-guide-links-f64c207505ed&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1116-Malware Resources :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.professor.bike/malware-resources" rel="nofollow"&gt;https://www.professor.bike/malware-resources&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1117-Zero-day exploits: A cheat sheet for professionals:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.techrepublic.com/article/zero-day-exploits-the-smart-persons-guide/" rel="nofollow"&gt;https://www.techrepublic.com/article/zero-day-exploits-the-smart-persons-guide/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1118-Getting cozy with exploit development:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0x00sec.org/t/getting-cozy-with-exploit-development/5311" rel="nofollow"&gt;https://0x00sec.org/t/getting-cozy-with-exploit-development/5311&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1119-appsec - Web Security Cheatsheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://security.stackexchange.com/questions/2985/web-security-cheatsheet-todo-list" rel="nofollow"&gt;https://security.stackexchange.com/questions/2985/web-security-cheatsheet-todo-list&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1120-PEDA - Python Exploit Development Assistance For GDB:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.pinterest.ru/pin/789044797190775841/" rel="nofollow"&gt;https://www.pinterest.ru/pin/789044797190775841/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1121-Exploit Development Introduction (part 1) :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cybrary.it/video/exploit-development-introduction-part-1/" rel="nofollow"&gt;https://www.cybrary.it/video/exploit-development-introduction-part-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1122-Windows Exploit Development: A simple buffer overflow example:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/windows-expliot-dev-101-e5311ac284a" rel="nofollow"&gt;https://medium.com/bugbountywriteup/windows-expliot-dev-101-e5311ac284a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1123-Exploit Development-Everything You Need to Know:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://null-byte.wonderhowto.com/how-to/exploit-development-everything-you-need-know-0167801/" rel="nofollow"&gt;https://null-byte.wonderhowto.com/how-to/exploit-development-everything-you-need-know-0167801/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1124-Exploit Development :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0x00sec.org/c/exploit-development" rel="nofollow"&gt;https://0x00sec.org/c/exploit-development&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1125-Exploit Development - Infosec Resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/category/exploit-development/" rel="nofollow"&gt;https://resources.infosecinstitute.com/category/exploit-development/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1126-Exploit Development :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.reddit.com/r/ExploitDev/" rel="nofollow"&gt;https://www.reddit.com/r/ExploitDev/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1127-A Study in Exploit Development - Part 1: Setup and Proof of Concept :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.anitian.com/a-study-in-exploit-development-part-1-setup-and-proof-of-concept" rel="nofollow"&gt;https://www.anitian.com/a-study-in-exploit-development-part-1-setup-and-proof-of-concept&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1128-Exploit Development for Beginners:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=tVDuuz60KKc" rel="nofollow"&gt;https://www.youtube.com/watch?v=tVDuuz60KKc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1129-Introduction to Exploit Development:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.fuzzysecurity.com/tutorials/expDev/1.html" rel="nofollow"&gt;https://www.fuzzysecurity.com/tutorials/expDev/1.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1130-Exploit Development And Reverse Engineering:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.immunitysec.com/services/exploit-dev-reverse-engineering.html" rel="nofollow"&gt;https://www.immunitysec.com/services/exploit-dev-reverse-engineering.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1131-wireless forensics:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/reading-room/whitepapers/wireless/80211-network-forensic-analysis-33023" rel="nofollow"&gt;https://www.sans.org/reading-room/whitepapers/wireless/80211-network-forensic-analysis-33023&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1132-fake AP Detection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/reading-room/whitepapers/detection/detecting-preventing-rogue-devices-network-1866" rel="nofollow"&gt;https://www.sans.org/reading-room/whitepapers/detection/detecting-preventing-rogue-devices-network-1866&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1133-In-Depth analysis of SamSam Ransomware:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.crowdstrike.com/blog/an-in-depth-analysis-of-samsam-ransomware-and-boss-spider/" rel="nofollow"&gt;https://www.crowdstrike.com/blog/an-in-depth-analysis-of-samsam-ransomware-and-boss-spider/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1134-WannaCry ransomware:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.endgame.com/blog/technical-blog/wcrywanacry-ransomware-technical-analysis" rel="nofollow"&gt;https://www.endgame.com/blog/technical-blog/wcrywanacry-ransomware-technical-analysis&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1135-malware analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/reading-room/whitepapers/malicious/paper/2103" rel="nofollow"&gt;https://www.sans.org/reading-room/whitepapers/malicious/paper/2103&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1136-Metasploit's detailed communication and protocol writeup:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/english/27935-metasploit---the-exploit-learning-tree.pdf" rel="nofollow"&gt;https://www.exploit-db.com/docs/english/27935-metasploit---the-exploit-learning-tree.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1137-Metasploit's SSL-generation module::&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rapid7/metasploit-framework/blob/76954957c740525cff2db5a60bcf936b4ee06c42/lib/rex/post/meterpreter/client.rb"&gt;https://github.com/rapid7/metasploit-framework/blob/76954957c740525cff2db5a60bcf936b4ee06c42/lib/rex/post/meterpreter/client.rb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1139-Empire IOCs::&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/reading-room/whitepapers/detection/disrupting-empire-identifying-powershell-empire-command-control-activity-38315" rel="nofollow"&gt;https://www.sans.org/reading-room/whitepapers/detection/disrupting-empire-identifying-powershell-empire-command-control-activity-38315&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1140-excellent free training on glow analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://opensecuritytraining.info/Flow.html" rel="nofollow"&gt;http://opensecuritytraining.info/Flow.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1141-NetFlow using Silk:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://tools.netsa.cert.org/silk/analysis-handbook.pdf" rel="nofollow"&gt;https://tools.netsa.cert.org/silk/analysis-handbook.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1142-Deep Packet Inspection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://is.muni.cz/th/ql57c/dp-svoboda.pdf" rel="nofollow"&gt;https://is.muni.cz/th/ql57c/dp-svoboda.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1143-Detecting Behavioral Personas with OSINT and Datasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/45543" rel="nofollow"&gt;https://www.exploit-db.com/docs/45543&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1144-WordPress Penetration Testing using WPScan and MetaSploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/45556" rel="nofollow"&gt;https://www.exploit-db.com/docs/45556&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1145-Bulk SQL Injection using Burp-to-SQLMap:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/45428" rel="nofollow"&gt;https://www.exploit-db.com/docs/45428&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1146-XML External Entity Injection - Explanation and Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/45374" rel="nofollow"&gt;https://www.exploit-db.com/docs/45374&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1147-	Web Application Firewall (WAF) Evasion Techniques #3 (CloudFlare and ModSecurity OWASP CRS3):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/45368" rel="nofollow"&gt;https://www.exploit-db.com/docs/45368&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1148-File Upload Restrictions Bypass:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/45074" rel="nofollow"&gt;https://www.exploit-db.com/docs/45074&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1149-VLAN Hopping Attack:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/45050" rel="nofollow"&gt;https://www.exploit-db.com/docs/45050&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1150-Jigsaw Ransomware Analysis using Volatility:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@0xINT3/jigsaw-ransomware-analysis-using-volatility-2047fc3d9be9" rel="nofollow"&gt;https://medium.com/@0xINT3/jigsaw-ransomware-analysis-using-volatility-2047fc3d9be9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1151-Ransomware early detection by the analysis of file sharing traffic:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sciencedirect.com/science/article/pii/S108480451830300X" rel="nofollow"&gt;https://www.sciencedirect.com/science/article/pii/S108480451830300X&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1152-Do You Think You Can Analyse Ransomware?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/asecuritysite-when-bob-met-alice/do-you-think-you-can-analyse-ransomware-bbc813b95529" rel="nofollow"&gt;https://medium.com/asecuritysite-when-bob-met-alice/do-you-think-you-can-analyse-ransomware-bbc813b95529&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1153-Analysis of LockerGoga Ransomware :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labsblog.f-secure.com/2019/03/27/analysis-of-lockergoga-ransomware/" rel="nofollow"&gt;https://labsblog.f-secure.com/2019/03/27/analysis-of-lockergoga-ransomware/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1154-Detection and Forensic Analysis of Ransomware Attacks :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.netfort.com/assets/NetFort-Ransomware-White-Paper.pdf" rel="nofollow"&gt;https://www.netfort.com/assets/NetFort-Ransomware-White-Paper.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1155-Bad Rabbit Ransomware Technical Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://logrhythm.com/blog/bad-rabbit-ransomware-technical-analysis/" rel="nofollow"&gt;https://logrhythm.com/blog/bad-rabbit-ransomware-technical-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1156-NotPetya Ransomware analysis :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://safe-cyberdefense.com/notpetya-ransomware-analysis/" rel="nofollow"&gt;https://safe-cyberdefense.com/notpetya-ransomware-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1157-Identifying WannaCry on Your Server Using Logs:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.loggly.com/blog/identifying-wannacry-server-using-logs/" rel="nofollow"&gt;https://www.loggly.com/blog/identifying-wannacry-server-using-logs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1158-The past, present, and future of ransomware:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.itproportal.com/features/the-past-present-and-future-of-ransomware/" rel="nofollow"&gt;https://www.itproportal.com/features/the-past-present-and-future-of-ransomware/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1159-The dynamic analysis of WannaCry ransomware :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ieeexplore.ieee.org/iel7/8318543/8323471/08323682.pdf" rel="nofollow"&gt;https://ieeexplore.ieee.org/iel7/8318543/8323471/08323682.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1160-Malware Analysis: Ransomware - SlideShare:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/davidepiccardi/malware-analysis-ransomware" rel="nofollow"&gt;https://www.slideshare.net/davidepiccardi/malware-analysis-ransomware&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1161-Article: Anatomy of ransomware malware: detection, analysis :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.inderscience.com/info/inarticle.php?artid=84399" rel="nofollow"&gt;https://www.inderscience.com/info/inarticle.php?artid=84399&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1162-Tracking desktop ransomware payments :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhat.com/docs/us-17/wednesday/us-17-Invernizzi-Tracking-Ransomware-End-To-End.pdf" rel="nofollow"&gt;https://www.blackhat.com/docs/us-17/wednesday/us-17-Invernizzi-Tracking-Ransomware-End-To-End.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1163-What is Ransomware? Defined, Explained, and Explored:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.forcepoint.com/cyber-edu/ransomware" rel="nofollow"&gt;https://www.forcepoint.com/cyber-edu/ransomware&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1164-Detect and Recover from Ransomware Attacks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.indexengines.com/ransomware" rel="nofollow"&gt;https://www.indexengines.com/ransomware&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1165-Wingbird rootkit analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://artemonsecurity.blogspot.com/2017/01/wingbird-rootkit-analysis.html" rel="nofollow"&gt;https://artemonsecurity.blogspot.com/2017/01/wingbird-rootkit-analysis.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1166-Windows Kernel Rootkits: Techniques and Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.offensivecon.org/trainings/2019/windows-kernel-rootkits-techniques-and-analysis.html" rel="nofollow"&gt;https://www.offensivecon.org/trainings/2019/windows-kernel-rootkits-techniques-and-analysis.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1167-Rootkit: What is a Rootkit and How to Detect It :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.veracode.com/security/rootkit" rel="nofollow"&gt;https://www.veracode.com/security/rootkit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1168-Dissecting Turla Rootkit Malware Using Dynamic Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.lastline.com/.../dissecting-turla-rootkit-malware-using-dynamic-analysis/" rel="nofollow"&gt;https://www.lastline.com/.../dissecting-turla-rootkit-malware-using-dynamic-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1169-Rootkits and Rootkit Detection (Windows Forensic Analysis) Part 2:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://what-when-how.com/windows-forensic-analysis/rootkits-and-rootkit-detection-windows-forensic-analysis-part-2/" rel="nofollow"&gt;https://what-when-how.com/windows-forensic-analysis/rootkits-and-rootkit-detection-windows-forensic-analysis-part-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1170-ZeroAccess – an advanced kernel mode rootkit :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.botnetlegalnotice.com/ZeroAccess/files/Ex_12_Decl_Anselmi.pdf" rel="nofollow"&gt;https://www.botnetlegalnotice.com/ZeroAccess/files/Ex_12_Decl_Anselmi.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1171-Rootkit Analysis Identification Elimination:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://acronyms.thefreedictionary.com/Rootkit+Analysis+Identification+Elimination" rel="nofollow"&gt;https://acronyms.thefreedictionary.com/Rootkit+Analysis+Identification+Elimination&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1172-TDL3: The Rootkit of All Evil?:&lt;/p&gt;
&lt;p&gt;static1.esetstatic.com/us/resources/white-papers/TDL3-Analysis.pdf&lt;/p&gt;
&lt;p&gt;-1173-Avatar Rootkit: Dropper Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/avatar-rootkit-dropper-analysis-part-1/" rel="nofollow"&gt;https://resources.infosecinstitute.com/avatar-rootkit-dropper-analysis-part-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1174-Sality rootkit analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.prodefence.org/sality-rootkit-analysis/" rel="nofollow"&gt;https://www.prodefence.org/sality-rootkit-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1175-RootKit Hook Analyzer:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.resplendence.com/hookanalyzer/" rel="nofollow"&gt;https://www.resplendence.com/hookanalyzer/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1176-Behavioral Analysis of Rootkit Malware:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://isc.sans.edu/forums/diary/Behavioral+Analysis+of+Rootkit+Malware/1487/" rel="nofollow"&gt;https://isc.sans.edu/forums/diary/Behavioral+Analysis+of+Rootkit+Malware/1487/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1177-Malware Memory Analysis of the IVYL Linux Rootkit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://apps.dtic.mil/docs/citations/AD1004349" rel="nofollow"&gt;https://apps.dtic.mil/docs/citations/AD1004349&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1178-Analysis of the KNARK rootkit :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://linuxsecurity.com/news/intrusion-detection/analysis-of-the-knark-rootkit" rel="nofollow"&gt;https://linuxsecurity.com/news/intrusion-detection/analysis-of-the-knark-rootkit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1179-32 Bit Windows Kernel Mode Rootkit Lab Setup with INetSim :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@eaugusto/32-bit-windows-kernel-mode-rootkit-lab-setup-with-inetsim-e49c22e9fcd1" rel="nofollow"&gt;https://medium.com/@eaugusto/32-bit-windows-kernel-mode-rootkit-lab-setup-with-inetsim-e49c22e9fcd1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1180-Ten Process Injection Techniques: A Technical Survey of Common and Trending Process Injection Techniques:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process" rel="nofollow"&gt;https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1181-Code &amp;amp; Process Injection - Red Teaming Experiments:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ired.team/offensive-security/code-injection-process-injection" rel="nofollow"&gt;https://ired.team/offensive-security/code-injection-process-injection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1182-What Malware Authors Don't want you to know:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhat.com/.../asia-17-KA-What-Malware-Authors-Don't-Want-You-To-Know" rel="nofollow"&gt;https://www.blackhat.com/.../asia-17-KA-What-Malware-Authors-Don't-Want-You-To-Know&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1183-.NET Process Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@malcomvetter/net-process-injection-1a1af00359bc" rel="nofollow"&gt;https://medium.com/@malcomvetter/net-process-injection-1a1af00359bc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1184-Memory Injection like a Boss :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.countercept.com/blog/memory-injection-like-a-boss/" rel="nofollow"&gt;https://www.countercept.com/blog/memory-injection-like-a-boss/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1185-Process injection - Malware style:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/demeester1/process-injection" rel="nofollow"&gt;https://www.slideshare.net/demeester1/process-injection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1186-Userland API Monitoring and Code Injection Detection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0x00sec.org/t/userland-api-monitoring-and-code-injection-detection/5565" rel="nofollow"&gt;https://0x00sec.org/t/userland-api-monitoring-and-code-injection-detection/5565&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1187-Unpacking Redaman Malware &amp;amp; Basics of Self-Injection Packers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://liveoverflow.com/unpacking-buhtrap-malware-basics-of-self-injection-packers-ft-oalabs-2/" rel="nofollow"&gt;https://liveoverflow.com/unpacking-buhtrap-malware-basics-of-self-injection-packers-ft-oalabs-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1188-Code injection on macOS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://knight.sc/malware/2019/03/15/code-injection-on-macos.html" rel="nofollow"&gt;https://knight.sc/malware/2019/03/15/code-injection-on-macos.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1189-(Shell)Code Injection In Linux Userland :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.sektor7.net/#!res/2018/pure-in-memory-linux.md" rel="nofollow"&gt;https://blog.sektor7.net/#!res/2018/pure-in-memory-linux.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1190-Code injection on Windows using Python:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreafortuna.org/2018/08/06/code-injection-on-windows-using-python-a-simple-example/" rel="nofollow"&gt;https://www.andreafortuna.org/2018/08/06/code-injection-on-windows-using-python-a-simple-example/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1191-What is Reflective DLL Injection and how can be detected?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreafortuna.org/cybersecurity/what-is-reflective-dll-injection-and-how-can-be-detected/" rel="nofollow"&gt;https://www.andreafortuna.org/cybersecurity/what-is-reflective-dll-injection-and-how-can-be-detected/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1192-Windows Process Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://modexp.wordpress.com/2018/08/23/process-injection-propagate/" rel="nofollow"&gt;https://modexp.wordpress.com/2018/08/23/process-injection-propagate/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1193-A+ cheat sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/abnmi/a-cheat-sheet" rel="nofollow"&gt;https://www.slideshare.net/abnmi/a-cheat-sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1194-A Bettercap Tutorial — From Installation to Mischief:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://danielmiessler.com/study/bettercap/" rel="nofollow"&gt;https://danielmiessler.com/study/bettercap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1195-Debugging Malware with WinDbg:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ixiacom.com/company/blog/debugging-malware-windbg" rel="nofollow"&gt;https://www.ixiacom.com/company/blog/debugging-malware-windbg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1195-Malware analysis, my own list of tools and resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreafortuna.org/2016/08/05/malware-analysis-my-own-list-of-tools-and-resources/" rel="nofollow"&gt;https://www.andreafortuna.org/2016/08/05/malware-analysis-my-own-list-of-tools-and-resources/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1196-Getting Started with Reverse Engineering:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://lospi.net/developing/software/.../assembly/2015/03/.../reversing-with-ida.html" rel="nofollow"&gt;https://lospi.net/developing/software/.../assembly/2015/03/.../reversing-with-ida.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1197-Debugging malicious windows scriptlets with Google chrome:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@0xamit/debugging-malicious-windows-scriptlets-with-google-chrome-c31ba409975c" rel="nofollow"&gt;https://medium.com/@0xamit/debugging-malicious-windows-scriptlets-with-google-chrome-c31ba409975c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1198-Intro to Radare2 for Malware Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://malwology.com/2018/11/30/intro-to-radare2-for-malware-analysis/" rel="nofollow"&gt;https://malwology.com/2018/11/30/intro-to-radare2-for-malware-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1199-Intro to Malware Analysis and Reverse Engineering:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cybrary.it/course/malware-analysis/" rel="nofollow"&gt;https://www.cybrary.it/course/malware-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1200-Common Malware Persistence Mechanisms:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/common-malware-persistence-mechanisms/" rel="nofollow"&gt;https://resources.infosecinstitute.com/common-malware-persistence-mechanisms/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1201-Finding Registry Malware Persistence with RECmd:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://digital-forensics.sans.org/blog/2019/05/07/malware-persistence-recmd" rel="nofollow"&gt;https://digital-forensics.sans.org/blog/2019/05/07/malware-persistence-recmd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1202-Windows Malware Persistence Mechanisms :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.swordshield.com/blog/windows-malware-persistence-mechanisms/" rel="nofollow"&gt;https://www.swordshield.com/blog/windows-malware-persistence-mechanisms/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1203-  persistence techniques:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreafortuna.org/2017/07/06/malware-persistence-techniques/" rel="nofollow"&gt;https://www.andreafortuna.org/2017/07/06/malware-persistence-techniques/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1204- Persistence Mechanism - an overview | ScienceDirect Topics:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sciencedirect.com/topics/computer-science/persistence-mechanism" rel="nofollow"&gt;https://www.sciencedirect.com/topics/computer-science/persistence-mechanism&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1205-Malware analysis for Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sothis.tech/en/malware-analysis-for-linux-wirenet/" rel="nofollow"&gt;https://www.sothis.tech/en/malware-analysis-for-linux-wirenet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1206-Linux Malware Persistence with Cron:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sandflysecurity.com/blog/linux-malware-persistence-with-cron/" rel="nofollow"&gt;https://www.sandflysecurity.com/blog/linux-malware-persistence-with-cron/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1207-What is advanced persistent threat (APT)? :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://searchsecurity.techtarget.com/definition/advanced-persistent-threat-APT" rel="nofollow"&gt;https://searchsecurity.techtarget.com/definition/advanced-persistent-threat-APT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1208-Malware Analysis, Part 1: Understanding Code Obfuscation :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.vadesecure.com/en/malware-analysis-understanding-code-obfuscation-techniques/" rel="nofollow"&gt;https://www.vadesecure.com/en/malware-analysis-understanding-code-obfuscation-techniques/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1209-Top 6 Advanced Obfuscation Techniques:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sensorstechforum.com/advanced-obfuscation-techniques-malware/" rel="nofollow"&gt;https://sensorstechforum.com/advanced-obfuscation-techniques-malware/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1210-Malware Obfuscation Techniques:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dl.acm.org/citation.cfm?id=1908903" rel="nofollow"&gt;https://dl.acm.org/citation.cfm?id=1908903&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1211-How Hackers Hide Their Malware: Advanced Obfuscation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.darkreading.com/attacks-breaches/how-hackers-hide-their-malware-advanced-obfuscation/a/d-id/1329723" rel="nofollow"&gt;https://www.darkreading.com/attacks-breaches/how-hackers-hide-their-malware-advanced-obfuscation/a/d-id/1329723&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1212-Malware obfuscation techniques: four simple examples:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreafortuna.org/2016/10/13/malware-obfuscation-techniques-four-simple-examples/" rel="nofollow"&gt;https://www.andreafortuna.org/2016/10/13/malware-obfuscation-techniques-four-simple-examples/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1213-Malware Monday: Obfuscation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@bromiley/malware-monday-obfuscation-f65239146db0" rel="nofollow"&gt;https://medium.com/@bromiley/malware-monday-obfuscation-f65239146db0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1213-Challenge of Malware Analysis: Malware obfuscation Techniques:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ijiss.org/ijiss/index.php/ijiss/article/view/327" rel="nofollow"&gt;https://www.ijiss.org/ijiss/index.php/ijiss/article/view/327&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1214-Static Malware Analysis - Infosec Resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/malware-analysis-basics-static-analysis/" rel="nofollow"&gt;https://resources.infosecinstitute.com/malware-analysis-basics-static-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1215-Malware Basic Static Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@jain.sm/malware-basic-static-analysis-cf19b4600725" rel="nofollow"&gt;https://medium.com/@jain.sm/malware-basic-static-analysis-cf19b4600725&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1216-Difference Between Static Malware Analysis and Dynamic Malware Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.differencebetween.net/technology/difference-between-static-malware-analysis-and-dynamic-malware-analysis/" rel="nofollow"&gt;http://www.differencebetween.net/technology/difference-between-static-malware-analysis-and-dynamic-malware-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1217-What is Malware Analysis | Different Tools for Malware Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.comodo.com/different-techniques-for-malware-analysis/" rel="nofollow"&gt;https://blog.comodo.com/different-techniques-for-malware-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1218-Detecting Malware Pre-execution with Static Analysis and Machine Learning:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sentinelone.com/blog/detecting-malware-pre-execution-static-analysis-machine-learning/" rel="nofollow"&gt;https://www.sentinelone.com/blog/detecting-malware-pre-execution-static-analysis-machine-learning/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1219-Limits of Static Analysis for Malware Detection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ieeexplore.ieee.org/document/4413008" rel="nofollow"&gt;https://ieeexplore.ieee.org/document/4413008&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1220-Kernel mode versus user mode:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.codinghorror.com/understanding-user-and-kernel-mode/" rel="nofollow"&gt;https://blog.codinghorror.com/understanding-user-and-kernel-mode/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1221-Understanding the ELF:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@MrJamesFisher/understanding-the-elf-4bd60daac571" rel="nofollow"&gt;https://medium.com/@MrJamesFisher/understanding-the-elf-4bd60daac571&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1222-Windows Privilege Abuse: Auditing, Detection, and Defense:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/palantir/windows-privilege-abuse-auditing-detection-and-defense-3078a403d74e" rel="nofollow"&gt;https://medium.com/palantir/windows-privilege-abuse-auditing-detection-and-defense-3078a403d74e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1223-First steps to volatile memory analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@zemelusa/first-steps-to-volatile-memory-analysis-dcbd4d2d56a1" rel="nofollow"&gt;https://medium.com/@zemelusa/first-steps-to-volatile-memory-analysis-dcbd4d2d56a1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1224-Maliciously Mobile: A Brief History of Mobile Malware:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/threat-intel/mobile-malware-infosec-history-70f3fcaa61c8" rel="nofollow"&gt;https://medium.com/threat-intel/mobile-malware-infosec-history-70f3fcaa61c8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1225-Modern Binary Exploitation Writeups 0x01:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/binary-exploitation-5fe810db3ed4" rel="nofollow"&gt;https://medium.com/bugbountywriteup/binary-exploitation-5fe810db3ed4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1226-Exploit Development 01 — Terminology:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@MKahsari/exploit-development-01-terminology-db8c19db80d5" rel="nofollow"&gt;https://medium.com/@MKahsari/exploit-development-01-terminology-db8c19db80d5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1227-Zero-day exploits: A cheat sheet for professionals:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.techrepublic.com/article/zero-day-exploits-the-smart-persons-guide/" rel="nofollow"&gt;https://www.techrepublic.com/article/zero-day-exploits-the-smart-persons-guide/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1228-Best google hacking list on the net:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/x5LVJu9T" rel="nofollow"&gt;https://pastebin.com/x5LVJu9T&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1229-Google Hacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/6nsVK5Xi" rel="nofollow"&gt;https://pastebin.com/6nsVK5Xi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1230-OSCP links:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/AiYV80uQ" rel="nofollow"&gt;https://pastebin.com/AiYV80uQ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1231-Pentesting 1 Information gathering:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/qLitw9eT" rel="nofollow"&gt;https://pastebin.com/qLitw9eT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1232-OSCP-Survival-Guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/kdc6th08" rel="nofollow"&gt;https://pastebin.com/kdc6th08&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1233-Googledork:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/qKwU37BK" rel="nofollow"&gt;https://pastebin.com/qKwU37BK&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1234-Exploit DB:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/De4DNNKK" rel="nofollow"&gt;https://pastebin.com/De4DNNKK&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1235-Dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/cfVcqknA" rel="nofollow"&gt;https://pastebin.com/cfVcqknA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1236-GOOGLE HACKİNG DATABASE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/1ndqG7aq" rel="nofollow"&gt;https://pastebin.com/1ndqG7aq&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1237-Carding Dorks 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/Hqsxu6Nn" rel="nofollow"&gt;https://pastebin.com/Hqsxu6Nn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1238-17k Carding Dorks 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/fgdZxy74" rel="nofollow"&gt;https://pastebin.com/fgdZxy74&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1239-CARDING DORKS 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/Y7KvzZqg" rel="nofollow"&gt;https://pastebin.com/Y7KvzZqg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1240-sqli dork 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/8gdeLYvU" rel="nofollow"&gt;https://pastebin.com/8gdeLYvU&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1241-Private Carding Dorks 2018:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/F0KxkMMD" rel="nofollow"&gt;https://pastebin.com/F0KxkMMD&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1242-20K dorks list fresh full carding 2018:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/LgCh0NRJ" rel="nofollow"&gt;https://pastebin.com/LgCh0NRJ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1243-8k Carding Dorks :):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/2bjBPiEm" rel="nofollow"&gt;https://pastebin.com/2bjBPiEm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1244-8500 SQL DORKS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/yeREBFzp" rel="nofollow"&gt;https://pastebin.com/yeREBFzp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1245-REAL CARDING DORKS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/0kMhA0Gb" rel="nofollow"&gt;https://pastebin.com/0kMhA0Gb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1246-15k btc dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/zbbBXSfG" rel="nofollow"&gt;https://pastebin.com/zbbBXSfG&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1247-Sqli dorks 2016-2017:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/7TQiMj3A" rel="nofollow"&gt;https://pastebin.com/7TQiMj3A&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1248-Here is kind of a tutorial on how to write google dorks.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/hZCXrAFK" rel="nofollow"&gt;https://pastebin.com/hZCXrAFK&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1249-10k Private Fortnite Dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/SF9UmG1Y" rel="nofollow"&gt;https://pastebin.com/SF9UmG1Y&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1250-find login panel dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/9FGUPqZc" rel="nofollow"&gt;https://pastebin.com/9FGUPqZc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1251-Shell dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/iZBFQ5yp" rel="nofollow"&gt;https://pastebin.com/iZBFQ5yp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1252-HQ PAID GAMING DORKS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/vNYnyW09" rel="nofollow"&gt;https://pastebin.com/vNYnyW09&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1253-10K HQ Shopping DORKS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/HTP6rAt4" rel="nofollow"&gt;https://pastebin.com/HTP6rAt4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1254-Exploit Dorks for Joomla,FCK and others 2015 Old but gold:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/ttxAJbdW" rel="nofollow"&gt;https://pastebin.com/ttxAJbdW&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1255-Gain access to unsecured IP cameras with these Google dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/93aPbwwE" rel="nofollow"&gt;https://pastebin.com/93aPbwwE&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1256-new fresh dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/ZjdxBbNB" rel="nofollow"&gt;https://pastebin.com/ZjdxBbNB&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1257-SQL DORKS FOR CC:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/ZQTHwk2S" rel="nofollow"&gt;https://pastebin.com/ZQTHwk2S&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1258-Wordpress uploadify Dorks Priv8:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/XAGmHVUr" rel="nofollow"&gt;https://pastebin.com/XAGmHVUr&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1259-650 DORKS CC:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/xZHARTyz" rel="nofollow"&gt;https://pastebin.com/xZHARTyz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1260-3k Dorks Shopping:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/e1XiNa8M" rel="nofollow"&gt;https://pastebin.com/e1XiNa8M&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1261-DORKS 2018 :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/YAZkPJ0j" rel="nofollow"&gt;https://pastebin.com/YAZkPJ0j&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1262-HQ FORTNITE DORKS LIST:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/rzhiNad8" rel="nofollow"&gt;https://pastebin.com/rzhiNad8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1263-HQ PAID DORKS MIXED GAMING LOL STEAM ..MUSIC SHOPING:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/VwVpAvj2" rel="nofollow"&gt;https://pastebin.com/VwVpAvj2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1264-Camera dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/fsARft2j" rel="nofollow"&gt;https://pastebin.com/fsARft2j&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1265-Admin Login Dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/HWWNZCph" rel="nofollow"&gt;https://pastebin.com/HWWNZCph&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1266-sql gov dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/C8wqyNW8" rel="nofollow"&gt;https://pastebin.com/C8wqyNW8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1267-10k hq gaming dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/cDLN8edi" rel="nofollow"&gt;https://pastebin.com/cDLN8edi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1268-HQ SQLI Google Dorks For Shops/Amazon! Enjoy! :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/y59kK2h0" rel="nofollow"&gt;https://pastebin.com/y59kK2h0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1269-Dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/PKvZYMAa" rel="nofollow"&gt;https://pastebin.com/PKvZYMAa&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1270-10k btc dorks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/vRnxvbCu" rel="nofollow"&gt;https://pastebin.com/vRnxvbCu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1271-7,000 Dorks for hacking into various sites:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/n8JVQv3X" rel="nofollow"&gt;https://pastebin.com/n8JVQv3X&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1272-List of information gathering search engines/tools etc:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/GTX9X5tF" rel="nofollow"&gt;https://pastebin.com/GTX9X5tF&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1273-FBOSINT:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/5KqnFS0B" rel="nofollow"&gt;https://pastebin.com/5KqnFS0B&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1274-Ultimate Penetration Testing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/4EEeEnXe" rel="nofollow"&gt;https://pastebin.com/4EEeEnXe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1275-massive list of information gathering search engines/tools :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/GZ9TVxzh" rel="nofollow"&gt;https://pastebin.com/GZ9TVxzh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1276-CEH Class:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/JZdCHrN4" rel="nofollow"&gt;https://pastebin.com/JZdCHrN4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1277-CEH/CHFI Bundle Study Group Sessions:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/XTwksPK7" rel="nofollow"&gt;https://pastebin.com/XTwksPK7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1278-OSINT - Financial:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/LtxkUi0Y" rel="nofollow"&gt;https://pastebin.com/LtxkUi0Y&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1279-Most Important Security Tools and Resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/cGE8rG04" rel="nofollow"&gt;https://pastebin.com/cGE8rG04&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1280-OSINT resources from inteltechniques.com:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/Zbdz7wit" rel="nofollow"&gt;https://pastebin.com/Zbdz7wit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1281-Red Team Tips:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/AZDBAr1m" rel="nofollow"&gt;https://pastebin.com/AZDBAr1m&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1282-OSCP Notes by Ash:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/wFWx3a7U" rel="nofollow"&gt;https://pastebin.com/wFWx3a7U&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1283-OSCP Prep:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/98JG5f2v" rel="nofollow"&gt;https://pastebin.com/98JG5f2v&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1284-OSCP Review/Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/JMMM7t4f" rel="nofollow"&gt;https://pastebin.com/JMMM7t4f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1285-OSCP Prep class:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/s59GPJrr" rel="nofollow"&gt;https://pastebin.com/s59GPJrr&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1286-Complete Anti-Forensics Guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/6V6wZK0i" rel="nofollow"&gt;https://pastebin.com/6V6wZK0i&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1287-The Linux Command Line Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/PUtWDKX5" rel="nofollow"&gt;https://pastebin.com/PUtWDKX5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1288-Command-Line Log Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/WEDwpcz9" rel="nofollow"&gt;https://pastebin.com/WEDwpcz9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1289-An A-Z Index of the Apple macOS command line (OS X):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/RmPLQA5f" rel="nofollow"&gt;https://pastebin.com/RmPLQA5f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1290-San Diego Exploit Development 2018:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/VfwhT8Yd" rel="nofollow"&gt;https://pastebin.com/VfwhT8Yd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1291-Windows Exploit Development Megaprimer:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/DvdEW4Az" rel="nofollow"&gt;https://pastebin.com/DvdEW4Az&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1292-Some Free Reverse engineering resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/si2ThQPP" rel="nofollow"&gt;https://pastebin.com/si2ThQPP&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1293-Sans:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/MKiSnjLm" rel="nofollow"&gt;https://pastebin.com/MKiSnjLm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1294-Metasploit Next Level:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/0jC1BUiv" rel="nofollow"&gt;https://pastebin.com/0jC1BUiv&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1295-Just playing around....:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/gHXPzf6B" rel="nofollow"&gt;https://pastebin.com/gHXPzf6B&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1296-Red Team Course:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/YUYSXNpG" rel="nofollow"&gt;https://pastebin.com/YUYSXNpG&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1297-New Exploit Development 2018:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/xaRxgYqQ" rel="nofollow"&gt;https://pastebin.com/xaRxgYqQ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1298-Good reviews of CTP/OSCE (in no particular order)::&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/RSPbatip" rel="nofollow"&gt;https://pastebin.com/RSPbatip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1299-Vulnerability Research Engineering Bookmarks Collection v1.0:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/8mUhjGSU" rel="nofollow"&gt;https://pastebin.com/8mUhjGSU&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1300-Professional-hacker's Pastebin :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/u/Professional-hacker" rel="nofollow"&gt;https://pastebin.com/u/Professional-hacker&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1301-Google Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.googleguide.com/print/adv_op_ref.pdf" rel="nofollow"&gt;http://www.googleguide.com/print/adv_op_ref.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1302-Shodan for penetration testers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.defcon.org/images/defcon-18/dc-18-presentations/Schearer/DEFCON-18-Schearer-SHODAN.pdf" rel="nofollow"&gt;https://www.defcon.org/images/defcon-18/dc-18-presentations/Schearer/DEFCON-18-Schearer-SHODAN.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1303-Linux networking tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/miglen/70765e663c48ae0544da08c07006791f"&gt;https://gist.github.com/miglen/70765e663c48ae0544da08c07006791f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1304-DNS spoofing with NetHunter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cyberarms.wordpress.com/category/nethunter-tutorial/" rel="nofollow"&gt;https://cyberarms.wordpress.com/category/nethunter-tutorial/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1305-Tips on writing a penetration testing report:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/reading-room/whitepapers/bestprac/writing-penetration-testing-report-33343" rel="nofollow"&gt;https://www.sans.org/reading-room/whitepapers/bestprac/writing-penetration-testing-report-33343&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1306-Technical penetration report sample:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://tbgsecurity.com/wordpress/wp-content/uploads/2016/11/Sample-Penetration-Test-Report.pdf" rel="nofollow"&gt;https://tbgsecurity.com/wordpress/wp-content/uploads/2016/11/Sample-Penetration-Test-Report.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1307-Nessus sample reports:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.tenable.com/products/nessus/sample-reports" rel="nofollow"&gt;https://www.tenable.com/products/nessus/sample-reports&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1308-Sample penetration testing report:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.offensive-security.com/reports/sample-penetration-testing-report.pdf" rel="nofollow"&gt;https://www.offensive-security.com/reports/sample-penetration-testing-report.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1309-jonh-the-ripper-cheat-sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://countuponsecurity.com/2015/06/14/jonh-the-ripper-cheat-sheet/" rel="nofollow"&gt;https://countuponsecurity.com/2015/06/14/jonh-the-ripper-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1310-ultimate guide to cracking foreign character passwords using hashcat:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.netmux.com/blog/ultimate-guide-to-cracking-foreign-character-passwords-using-has" rel="nofollow"&gt;http://www.netmux.com/blog/ultimate-guide-to-cracking-foreign-character-passwords-using-has&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1311-Building_a_Password_Cracking_Rig_for_Hashcat_-_Part_III:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.unix-ninja.com/p/Building_a_Password_Cracking_Rig_for_Hashcat_-_Part_III" rel="nofollow"&gt;https://www.unix-ninja.com/p/Building_a_Password_Cracking_Rig_for_Hashcat_-_Part_III&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1312-cracking story how i cracked over 122 million sha1 and md5 hashed passwords:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.thireus.com/cracking-story-how-i-cracked-over-122-million-sha1-and-md5-hashed-passwords/" rel="nofollow"&gt;http://blog.thireus.com/cracking-story-how-i-cracked-over-122-million-sha1-and-md5-hashed-passwords/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1313-CSA (Cloud Security Alliance) Security White Papers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cloudsecurityalliance.org/download/" rel="nofollow"&gt;https://cloudsecurityalliance.org/download/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1314-NIST Security Considerations in the System Development Life Cycle:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://nvlpubs.nist.gov/nistpubs/legacy/sp/nistspecialpublication800-64r2.pdf" rel="nofollow"&gt;https://nvlpubs.nist.gov/nistpubs/legacy/sp/nistspecialpublication800-64r2.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1315-ISO 29100 information technology security techniques privacy framework:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.iso.org/standard/45123.html" rel="nofollow"&gt;https://www.iso.org/standard/45123.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1316-NIST National Checklist Program:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://nvd.nist.gov/ncp/repository" rel="nofollow"&gt;https://nvd.nist.gov/ncp/repository&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1317-OWASP Guide to Cryptography:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Guide_to_Cryptography" rel="nofollow"&gt;https://www.owasp.org/index.php/Guide_to_Cryptography&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1318-NVD (National Vulnerability Database):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://nvd.nist.gov/" rel="nofollow"&gt;https://nvd.nist.gov/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1319-CVE details:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cvedetails.com/" rel="nofollow"&gt;https://cvedetails.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1320-CIS Cybersecurity Tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cisecurity.org/cybersecurity-tools/" rel="nofollow"&gt;https://www.cisecurity.org/cybersecurity-tools/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1321-Security aspects of virtualization by ENISA:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.enisa.europa.eu/publications/security-aspects-of-virtualization/" rel="nofollow"&gt;https://www.enisa.europa.eu/publications/security-aspects-of-virtualization/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1322-CIS Benchmarks also provides a security guide for VMware, Docker, and Kubernetes:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cisecurity.org/cis-benchmarks/" rel="nofollow"&gt;https://www.cisecurity.org/cis-benchmarks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1323-OpenStack's hardening of the virtualization layer provides a secure guide to building the virtualization layer:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.openstack.org/security-guide/compute/hardening-the-virtualization-layers.html" rel="nofollow"&gt;https://docs.openstack.org/security-guide/compute/hardening-the-virtualization-layers.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1324-Docker security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.docker.com/engine/security/security/" rel="nofollow"&gt;https://docs.docker.com/engine/security/security/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1325-Microsoft Security Development Lifecycle:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.microsoft.com/en-us/SDL/" rel="nofollow"&gt;http://www.microsoft.com/en-us/SDL/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1326-OWASP SAMM Project:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/OWASP_SAMM_Project" rel="nofollow"&gt;https://www.owasp.org/index.php/OWASP_SAMM_Project&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1327-CWE/SANS Top 25 Most Dangerous Software Errors:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cwe.mitre.org/top25/" rel="nofollow"&gt;https://cwe.mitre.org/top25/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1329-OWASP Vulnerable Web Applications Directory Project:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/OWASP_Vulnerable_Web_Applications_Directory_Project" rel="nofollow"&gt;https://www.owasp.org/index.php/OWASP_Vulnerable_Web_Applications_Directory_Project&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1330-CERT Secure Coding Standards:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://wiki.sei.cmu.edu/confluence/display/seccode/SEI+CERT+Coding+Standards" rel="nofollow"&gt;https://wiki.sei.cmu.edu/confluence/display/seccode/SEI+CERT+Coding+Standards&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1331-NIST Special Publication 800-53:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://nvd.nist.gov/800-53" rel="nofollow"&gt;https://nvd.nist.gov/800-53&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1332-SAFECode Security White Papers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://safecode.org/publications/" rel="nofollow"&gt;https://safecode.org/publications/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1333-Microsoft Threat Modeling tool 2016:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://aka.ms/tmt2016/" rel="nofollow"&gt;https://aka.ms/tmt2016/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1334-Apache Metron for real-time big data security:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://metron.apache.org/documentation/" rel="nofollow"&gt;http://metron.apache.org/documentation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1335-Introducing OCTAVE Allegro: Improving the Information Security Risk Assessment Process:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.sei.cmu.edu/asset_files/TechnicalReport/2007_005_001_14885.pdf" rel="nofollow"&gt;https://resources.sei.cmu.edu/asset_files/TechnicalReport/2007_005_001_14885.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1336-NIST 800-18 Guide for Developing Security Plans for Federal Information Systems:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://nvlpubs.nist.gov/nistpubs/legacy/sp/nistspecialpublication800-18r1.pdf" rel="nofollow"&gt;http://nvlpubs.nist.gov/nistpubs/legacy/sp/nistspecialpublication800-18r1.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1337-ITU-T X.805 (10/2003) Security architecture for systems providing end- to-end communications:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.itu.int/rec/dologin_pub.asp?lang=e&amp;amp;id=T-REC-X.805-200310-I!!PDF-E&amp;amp;type=items" rel="nofollow"&gt;https://www.itu.int/rec/dologin_pub.asp?lang=e&amp;amp;id=T-REC-X.805-200310-I!!PDF-E&amp;amp;type=items&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1338-ETSI TS 102 165-1 V4.2.1 (2006-12) : Method and proforma for Threat, Risk, Vulnerability Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.etsi.org/deliver/etsi_ts/102100_102199/10216501/04.02.01_60/ts_10216501v040201p.pdf" rel="nofollow"&gt;http://www.etsi.org/deliver/etsi_ts/102100_102199/10216501/04.02.01_60/ts_10216501v040201p.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1339-SAFECode Fundamental Practices for Secure Software Development:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://safecode.org/wp-content/uploads/2018/03/SAFECode_Fundamental_Practices_for_Secure_Software_Development_March_2018.pdf" rel="nofollow"&gt;https://safecode.org/wp-content/uploads/2018/03/SAFECode_Fundamental_Practices_for_Secure_Software_Development_March_2018.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1340-NIST 800-64 Security Considerations in the System Development Life Cycle:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://csrc.nist.gov/publications/detail/sp/800-64/rev-2/final" rel="nofollow"&gt;https://csrc.nist.gov/publications/detail/sp/800-64/rev-2/final&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1341-SANS A Security Checklist for Web Application Design:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/reading-room/whitepapers/securecode/security-checklist-web-application-design-1389" rel="nofollow"&gt;https://www.sans.org/reading-room/whitepapers/securecode/security-checklist-web-application-design-1389&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1342-Best Practices for implementing a Security Awareness Program:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.pcisecuritystandards.org/documents/PCI_DSS_V1.0_Best_Practices_for_Implementing_Security_Awareness_Program.pdf" rel="nofollow"&gt;https://www.pcisecuritystandards.org/documents/PCI_DSS_V1.0_Best_Practices_for_Implementing_Security_Awareness_Program.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1343-ETSI TS 102 165-1 V4.2.1 (2006-12): Method and proforma for Threat, Risk, Vulnerability Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.etsi.org/deliver/etsi_ts/102100_102199/10216501/04.02.03_60/ts_10216501v040203p.pdf" rel="nofollow"&gt;http://www.etsi.org/deliver/etsi_ts/102100_102199/10216501/04.02.03_60/ts_10216501v040203p.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1344-NIST 800-18 Guide for Developing Security Plans for Federal Information Systems:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://csrc.nist.gov/publications/detail/sp/800-18/rev-1/final" rel="nofollow"&gt;https://csrc.nist.gov/publications/detail/sp/800-18/rev-1/final&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1345-SafeCode Tactical Threat Modeling:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://safecode.org/safecodepublications/tactical-threat-modeling/" rel="nofollow"&gt;https://safecode.org/safecodepublications/tactical-threat-modeling/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1346-SANS Web Application Security Design Checklist:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/reading-room/whitepapers/securecode/security-checklist-web-application-design-1389" rel="nofollow"&gt;https://www.sans.org/reading-room/whitepapers/securecode/security-checklist-web-application-design-1389&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1347-Data Anonymization for production data dumps:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/sunitparekh/data-anonymization"&gt;https://github.com/sunitparekh/data-anonymization&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1348-SANS Continuous Monitoring—What It Is, Why It Is Needed, and How to Use It:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/reading-room/whitepapers/analyst/continuous-monitoring-is-needed-35030" rel="nofollow"&gt;https://www.sans.org/reading-room/whitepapers/analyst/continuous-monitoring-is-needed-35030&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1349-Guide to Computer Security Log Management:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ws680.nist.gov/publication/get_pdf.cfm?pub_id=50881" rel="nofollow"&gt;https://ws680.nist.gov/publication/get_pdf.cfm?pub_id=50881&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1350-Malware Indicators:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/citizenlab/malware-indicators"&gt;https://github.com/citizenlab/malware-indicators&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1351-OSINT Threat Feeds:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.circl.lu/doc/misp/feed-osint/" rel="nofollow"&gt;https://www.circl.lu/doc/misp/feed-osint/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1352-SANS How to Use Threat Intelligence effectively:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sans.org/reading-room/whitepapers/analyst/threat-intelligence-is-effectively-37282" rel="nofollow"&gt;https://www.sans.org/reading-room/whitepapers/analyst/threat-intelligence-is-effectively-37282&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1353-NIST 800-150 Guide to Cyber Threat Information Sharing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://nvlpubs.nist.gov/nistpubs/specialpublications/nist.sp.800-150.pdf" rel="nofollow"&gt;https://nvlpubs.nist.gov/nistpubs/specialpublications/nist.sp.800-150.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1354-Securing Web Application Technologies Checklist:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://software-security.sans.org/resources/swat" rel="nofollow"&gt;https://software-security.sans.org/resources/swat&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1355-Firmware Security Training:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/advanced-threat-research/firmware-security-training"&gt;https://github.com/advanced-threat-research/firmware-security-training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1356-Burp Suite Bootcamp:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/5sG7Rpg5" rel="nofollow"&gt;https://pastebin.com/5sG7Rpg5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1357-Web app hacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/ANsw7WRx" rel="nofollow"&gt;https://pastebin.com/ANsw7WRx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1358-XSS Payload:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/EdxzE4P1" rel="nofollow"&gt;https://pastebin.com/EdxzE4P1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1359-XSS Filter Evasion Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pastebin.com/bUutGfSy" rel="nofollow"&gt;https://pastebin.com/bUutGfSy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1360-Persistence using RunOnceEx – Hidden from Autoruns.exe:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://oddvar.moe/2018/03/21/persistence-using-runonceex-hidden-from-autoruns-exe/" rel="nofollow"&gt;https://oddvar.moe/2018/03/21/persistence-using-runonceex-hidden-from-autoruns-exe/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1361-Windows Operating System Archaeology:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/enigma0x3/windows-operating-system-archaeology" rel="nofollow"&gt;https://www.slideshare.net/enigma0x3/windows-operating-system-archaeology&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1362-How to Backdoor Windows 10 Using an Android Phone &amp;amp; USB Rubber Ducky:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.prodefence.org/how-to-backdoor-windows-10-using-an-android-phone-usb-rubber-ducky/" rel="nofollow"&gt;https://www.prodefence.org/how-to-backdoor-windows-10-using-an-android-phone-usb-rubber-ducky/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1363-Malware Analysis using Osquery :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackernoon.com/malware-analysis-using-osquery-part-2-69f08ec2ecec" rel="nofollow"&gt;https://hackernoon.com/malware-analysis-using-osquery-part-2-69f08ec2ecec&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1364-Tales of a Blue Teamer: Detecting Powershell Empire shenanigans with Sysinternals :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://holdmybeersecurity.com/2019/02/27/sysinternals-for-windows-incident-response/" rel="nofollow"&gt;https://holdmybeersecurity.com/2019/02/27/sysinternals-for-windows-incident-response/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1365-Userland registry hijacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://3gstudent.github.io/Userland-registry-hijacking/" rel="nofollow"&gt;https://3gstudent.github.io/Userland-registry-hijacking/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1366-Malware Hiding Techniques to Watch for: AlienVault Labs:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.alienvault.com/blogs/labs-research/malware-hiding-techniques-to-watch-for-alienvault-labs" rel="nofollow"&gt;https://www.alienvault.com/blogs/labs-research/malware-hiding-techniques-to-watch-for-alienvault-labs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1367- Full text of "Google hacking for penetration testers" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/pdfy-TPtNL6_ERVnbod0r/Google+Hacking+-+For+Penetration+Tester_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/pdfy-TPtNL6_ERVnbod0r/Google+Hacking+-+For+Penetration+Tester_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1368- Full text of "Long, Johnny Google Hacking For Penetration Testers" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/LongJohnnyGoogleHackingForPenetrationTesters/Long%2C%20Johnny%20-%20Google%20Hacking%20for%20Penetration%20Testers_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/LongJohnnyGoogleHackingForPenetrationTesters/Long%2C%20Johnny%20-%20Google%20Hacking%20for%20Penetration%20Testers_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1369- Full text of "Coding For Penetration Testers" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/CodingForPenetrationTesters/Coding%20for%20Penetration%20Testers_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/CodingForPenetrationTesters/Coding%20for%20Penetration%20Testers_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1370- Full text of "Hacking For Dummies" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/HackingForDummies/Hacking%20For%20Dummies_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/HackingForDummies/Hacking%20For%20Dummies_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1371-Full text of "Wiley. Hacking. 5th. Edition. Jan. 2016. ISBN. 1119154685. Profescience.blogspot.com" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/Wiley.Hacking.5th.Edition.Jan.2016.ISBN.1119154685.Profescience.blogspot.com/Wiley.Hacking.5th.Edition.Jan.2016.ISBN.1119154685.Profescience.blogspot.com_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/Wiley.Hacking.5th.Edition.Jan.2016.ISBN.1119154685.Profescience.blogspot.com/Wiley.Hacking.5th.Edition.Jan.2016.ISBN.1119154685.Profescience.blogspot.com_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1372- Full text of "Social Engineering The Art Of Human Hacking" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/SocialEngineeringTheArtOfHumanHacking/Social%20Engineering%20-%20The%20Art%20of%20Human%20Hacking_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/SocialEngineeringTheArtOfHumanHacking/Social%20Engineering%20-%20The%20Art%20of%20Human%20Hacking_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1373- Full text of "CYBER WARFARE" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/CYBERWARFARE/CYBER%20WARFARE_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/CYBERWARFARE/CYBER%20WARFARE_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1374-Full text of "NSA DOCID: 4046925 Untangling The Web: A Guide To Internet Research" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/Untangling_the_Web/Untangling_the_Web_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/Untangling_the_Web/Untangling_the_Web_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1375- Full text of "sectools" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/sectools/hack-the-stack-network-security_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/sectools/hack-the-stack-network-security_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1376- Full text of "Aggressive network self-defense" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/pdfy-YNtvDJueGZb1DCDA/Aggressive%20Network%20Self-Defense_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/pdfy-YNtvDJueGZb1DCDA/Aggressive%20Network%20Self-Defense_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1377-Community Texts:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/details/opensource?and%5B%5D=%28language%3Aeng+OR+language%3A%22English%22%29+AND+subject%3A%22google%22" rel="nofollow"&gt;https://archive.org/details/opensource?and%5B%5D=%28language%3Aeng+OR+language%3A%22English%22%29+AND+subject%3A%22google%22&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1378- Full text of "Cyber Spying - Tracking (sometimes).PDF (PDFy mirror)" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/pdfy-5-Ln_yPZ22ondBJ8/Cyber%20Spying%20-%20Tracking%20%28sometimes%29_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/pdfy-5-Ln_yPZ22ondBJ8/Cyber%20Spying%20-%20Tracking%20%28sometimes%29_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1379- Full text of "Enzyclopedia Of Cybercrime" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/EnzyclopediaOfCybercrime/Enzyclopedia%20Of%20Cybercrime_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/EnzyclopediaOfCybercrime/Enzyclopedia%20Of%20Cybercrime_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1380- Full text of "Information Security Management Handbook" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/InformationSecurityManagementHandbook/Information%20Security%20Management%20Handbook_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/InformationSecurityManagementHandbook/Information%20Security%20Management%20Handbook_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1381- Full text of "ARMArchitecture Reference Manual" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/ARMArchitectureReferenceManual/DetectionOfIntrusionsAndMalwareAndVulnerabilityAssessment2016_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/ARMArchitectureReferenceManual/DetectionOfIntrusionsAndMalwareAndVulnerabilityAssessment2016_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1382- Full text of "Metasploit The Penetration Tester S Guide" :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/MetasploitThePenetrationTesterSGuide/Metasploit-The+Penetration+Tester+s+Guide_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/MetasploitThePenetrationTesterSGuide/Metasploit-The+Penetration+Tester+s+Guide_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1383-Tips &amp;amp; tricks to master Google’s search engine:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/infosec-adventures/google-hacking-39599373be7d" rel="nofollow"&gt;https://medium.com/infosec-adventures/google-hacking-39599373be7d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1384-Ethical Google Hacking - Sensitive Doc Dork (Part 2) :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securing-the-stack.teachable.com/courses/ethical-google-hacking-1/lectures/3877866" rel="nofollow"&gt;https://securing-the-stack.teachable.com/courses/ethical-google-hacking-1/lectures/3877866&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1385- Google Hacking Secrets:the Hidden Codes of Google :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ma-no.org/en/security/google-hacking-secrets-the-hidden-codes-of-google" rel="nofollow"&gt;https://www.ma-no.org/en/security/google-hacking-secrets-the-hidden-codes-of-google&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1386-google hacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/SamNizam/3-google-hacking" rel="nofollow"&gt;https://www.slideshare.net/SamNizam/3-google-hacking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1387-How Penetration Testers Use Google Hacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cqure.nl/kennisplatform/how-penetration-testers-use-google-hacking" rel="nofollow"&gt;https://www.cqure.nl/kennisplatform/how-penetration-testers-use-google-hacking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1388-Free Automated Malware Analysis Sandboxes and Services:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://zeltser.com/automated-malware-analysis/" rel="nofollow"&gt;https://zeltser.com/automated-malware-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1389-How to get started with Malware Analysis and Reverse Engineering:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0ffset.net/miscellaneous/how-to-get-started-with-malware-analysis/" rel="nofollow"&gt;https://0ffset.net/miscellaneous/how-to-get-started-with-malware-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1390-Handy Tools And Websites For Malware Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.informationsecuritybuzz.com/articles/handy-tools-and-websites/" rel="nofollow"&gt;https://www.informationsecuritybuzz.com/articles/handy-tools-and-websites/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1391-Dynamic Malware Analysis:&lt;/p&gt;
&lt;p&gt;prasannamundas.com/share/dynamic-malware-analysis/&lt;/p&gt;
&lt;p&gt;-1392-Intro to Radare2 for Malware Analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://malwology.com/2018/11/30/intro-to-radare2-for-malware-analysis/" rel="nofollow"&gt;https://malwology.com/2018/11/30/intro-to-radare2-for-malware-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1393-Detecting malware through static and dynamic techniques:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://technical.nttsecurity.com/.../detecting-malware-through-static-and-dynamic-tec" rel="nofollow"&gt;https://technical.nttsecurity.com/.../detecting-malware-through-static-and-dynamic-tec&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;-1394-Malware Analysis Tutorial : Tricks for Confusing Static Analysis Tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.prodefence.org/malware-analysis-tutorial-tricks-confusing-static-analysis-tools" rel="nofollow"&gt;https://www.prodefence.org/malware-analysis-tutorial-tricks-confusing-static-analysis-tools&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1395-Malware Analysis Lab At Home In 5 Steps:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ethicalhackingguru.com/malware-analysis-lab-at-home-in-5-steps/" rel="nofollow"&gt;https://ethicalhackingguru.com/malware-analysis-lab-at-home-in-5-steps/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1396-Malware Forensics Guide - Static and Dynamic Approach:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.yeahhub.com/malware-forensics-guide-static-dynamic-approach/" rel="nofollow"&gt;https://www.yeahhub.com/malware-forensics-guide-static-dynamic-approach/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1397-Top 30 Bug Bounty Programs in 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.guru99.com/bug-bounty-programs.html" rel="nofollow"&gt;https://www.guru99.com/bug-bounty-programs.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1398-Introduction - Book of BugBounty Tips:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gowsundar.gitbook.io/book-of-bugbounty-tips/" rel="nofollow"&gt;https://gowsundar.gitbook.io/book-of-bugbounty-tips/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1399-List of bug bounty writeups:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentester.land/list-of-bug-bounty-writeups.html" rel="nofollow"&gt;https://pentester.land/list-of-bug-bounty-writeups.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1400-Tips From A Bugbounty Hunter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.secjuice.com/bugbounty-hunter/" rel="nofollow"&gt;https://www.secjuice.com/bugbounty-hunter/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1401-Cross Site Scripting (XSS) - Book of BugBounty Tips:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gowsundar.gitbook.io/book-of-bugbounty-tips/cross-site-scripting-xss" rel="nofollow"&gt;https://gowsundar.gitbook.io/book-of-bugbounty-tips/cross-site-scripting-xss&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1402-BugBountyTips:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://null0xp.wordpress.com/tag/bugbountytips/" rel="nofollow"&gt;https://null0xp.wordpress.com/tag/bugbountytips/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1403-Xss Filter Bypass Payloads:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.oroazteca.net/mq67/xss-filter-bypass-payloads.html" rel="nofollow"&gt;www.oroazteca.net/mq67/xss-filter-bypass-payloads.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1404-Bug Bounty Methodology:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://eforensicsmag.com/bug-bounty-methodology-ttp-tacticstechniques-and-procedures-v-2-0" rel="nofollow"&gt;https://eforensicsmag.com/bug-bounty-methodology-ttp-tacticstechniques-and-procedures-v-2-0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1405-GDB cheat-sheet for exploit development:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.mannulinux.org/2017/01/gdb-cheat-sheet-for-exploit-development.html" rel="nofollow"&gt;www.mannulinux.org/2017/01/gdb-cheat-sheet-for-exploit-development.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1406-A Study in Exploit Development - Part 1: Setup and Proof of Concept :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.anitian.com/a-study-in-exploit-development-part-1-setup-and-proof-of-concept" rel="nofollow"&gt;https://www.anitian.com/a-study-in-exploit-development-part-1-setup-and-proof-of-concept&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1407-Exploit development tutorial :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.computerweekly.com/tutorial/Exploit-development-tutorial-Part-Deux" rel="nofollow"&gt;https://www.computerweekly.com/tutorial/Exploit-development-tutorial-Part-Deux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1408-exploit code development:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.phreedom.org/presentations/exploit-code-development/exploit-code-development.pdf" rel="nofollow"&gt;http://www.phreedom.org/presentations/exploit-code-development/exploit-code-development.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1409-“Help Defeat Denial of Service Attacks: Step-by-Step”:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.sans.org/dosstep/" rel="nofollow"&gt;http://www.sans.org/dosstep/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1410-Internet Firewalls: Frequently Asked Questions:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.interhack.net/pubs/fwfaq/" rel="nofollow"&gt;http://www.interhack.net/pubs/fwfaq/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1411-Service Name and Transport Protocol Port Number:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.iana.org/assignments/port-numbers" rel="nofollow"&gt;http://www.iana.org/assignments/port-numbers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1412-10 Useful Open Source Security Firewalls for Linux Systems:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.tecmint.com/open-source-security-firewalls-for-linux-systems/" rel="nofollow"&gt;https://www.tecmint.com/open-source-security-firewalls-for-linux-systems/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1413-40 Linux Server Hardening Security Tips:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cyberciti.biz/tips/linux-security.html" rel="nofollow"&gt;https://www.cyberciti.biz/tips/linux-security.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1414-Linux hardening: A 15-step checklist for a secure Linux server :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.computerworld.com/.../linux-hardening-a-15-step-checklist-for-a-secure-linux-server" rel="nofollow"&gt;https://www.computerworld.com/.../linux-hardening-a-15-step-checklist-for-a-secure-linux-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1415-25 Hardening Security Tips for Linux Servers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.tecmint.com/linux-server-hardening-security-tips/" rel="nofollow"&gt;https://www.tecmint.com/linux-server-hardening-security-tips/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1416-How to Harden Unix/Linux Systems &amp;amp; Close Security Gaps:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.beyondtrust.com/blog/entry/harden-unix-linux-systems-close-security-gaps" rel="nofollow"&gt;https://www.beyondtrust.com/blog/entry/harden-unix-linux-systems-close-security-gaps&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1417-34 Linux Server Security Tips &amp;amp; Checklists for Sysadmins:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.process.st/server-security/" rel="nofollow"&gt;https://www.process.st/server-security/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1418-Linux Hardening:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/MichaelBoelen/linux-hardening" rel="nofollow"&gt;https://www.slideshare.net/MichaelBoelen/linux-hardening&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1419-23 Hardening Tips to Secure your Linux Server:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.rootusers.com/23-hardening-tips-to-secure-your-linux-server/" rel="nofollow"&gt;https://www.rootusers.com/23-hardening-tips-to-secure-your-linux-server/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1420-What is the Windows Registry? :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.computerhope.com/jargon/r/registry.htm" rel="nofollow"&gt;https://www.computerhope.com/jargon/r/registry.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1421-Windows Registry, Everything You Need To Know:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gammadyne.com/registry.htm" rel="nofollow"&gt;https://www.gammadyne.com/registry.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1422-Windows Registry Tutorial:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.akadia.com/services/windows_registry_tutorial.html" rel="nofollow"&gt;https://www.akadia.com/services/windows_registry_tutorial.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1423-5 Tools to Scan a Linux Server for Malware and Rootkits:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.tecmint.com/scan-linux-for-malware-and-rootkits/" rel="nofollow"&gt;https://www.tecmint.com/scan-linux-for-malware-and-rootkits/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1424-Subdomain takeover dew to missconfigured project settings for Custom domain .:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/subdomain-takeover-dew-to-missconfigured-project-settings-for-custom-domain-46e90e702969" rel="nofollow"&gt;https://medium.com/bugbountywriteup/subdomain-takeover-dew-to-missconfigured-project-settings-for-custom-domain-46e90e702969&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1425-Massive Subdomains p0wned:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/massive-subdomains-p0wned-80374648336e" rel="nofollow"&gt;https://medium.com/bugbountywriteup/massive-subdomains-p0wned-80374648336e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1426-Subdomain Takeover: Basics:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0xpatrik.com/subdomain-takeover-basics/" rel="nofollow"&gt;https://0xpatrik.com/subdomain-takeover-basics/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1427-Subdomain Takeover: Finding Candidates:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0xpatrik.com/subdomain-takeover-candidates/" rel="nofollow"&gt;https://0xpatrik.com/subdomain-takeover-candidates/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1428-Bugcrowd's Domain &amp;amp; Subdomain Takeover!:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bugbountypoc.com/bugcrowds-domain-takeover/" rel="nofollow"&gt;https://bugbountypoc.com/bugcrowds-domain-takeover/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1429-What Are Subdomain Takeovers, How to Test and Avoid Them?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dzone.com/articles/what-are-subdomain-takeovers-how-to-test-and-avoid" rel="nofollow"&gt;https://dzone.com/articles/what-are-subdomain-takeovers-how-to-test-and-avoid&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1430-Finding Candidates for Subdomain Takeovers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jarv.is/notes/finding-candidates-subdomain-takeovers/" rel="nofollow"&gt;https://jarv.is/notes/finding-candidates-subdomain-takeovers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1431-Subdomain takeover of blog.snapchat.com:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackernoon.com/subdomain-takeover-of-blog-snapchat-com-60860de02fe7" rel="nofollow"&gt;https://hackernoon.com/subdomain-takeover-of-blog-snapchat-com-60860de02fe7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1432-Hostile Subdomain takeove:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.detectify.com/tag/hostile-subdomain-takeover/" rel="nofollow"&gt;https://labs.detectify.com/tag/hostile-subdomain-takeover/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1433-Microsoft Account Takeover Vulnerability Affecting 400 Million Users:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.safetydetective.com/blog/microsoft-outlook/" rel="nofollow"&gt;https://www.safetydetective.com/blog/microsoft-outlook/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1434-What is Subdomain Hijack/Takeover Vulnerability? How to Identify? &amp;amp; Exploit It?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.securitybreached.org/2017/10/11/what-is-subdomain-takeover-vulnerability/" rel="nofollow"&gt;https://blog.securitybreached.org/2017/10/11/what-is-subdomain-takeover-vulnerability/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1435-Subdomain takeover detection with AQUATONE:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://michenriksen.com/blog/subdomain-takeover-detection-with-aquatone/" rel="nofollow"&gt;https://michenriksen.com/blog/subdomain-takeover-detection-with-aquatone/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1436-A hostile subdomain takeover! – Breaking application security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://evilenigma.blog/2019/03/12/a-hostile-subdomain-takeover/" rel="nofollow"&gt;https://evilenigma.blog/2019/03/12/a-hostile-subdomain-takeover/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1437-Web Development Reading List:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.smashingmagazine.com/2017/03/web-development-reading-list-172/" rel="nofollow"&gt;https://www.smashingmagazine.com/2017/03/web-development-reading-list-172/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1438-CSRF Attack can lead to Stored XSS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/csrf-attack-can-lead-to-stored-xss-f40ba91f1e4f" rel="nofollow"&gt;https://medium.com/bugbountywriteup/csrf-attack-can-lead-to-stored-xss-f40ba91f1e4f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1439-What is Mimikatz: The Beginner's Guide | Varonis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.varonis.com/bog/what-is-mimikatz" rel="nofollow"&gt;https://www.varonis.com/bog/what-is-mimikatz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1440-Preventing Mimikatz Attacks :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/blue-team/preventing-mimikatz-attacks-ed283e7ebdd5" rel="nofollow"&gt;https://medium.com/blue-team/preventing-mimikatz-attacks-ed283e7ebdd5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1441-Mimikatz tutorial: How it hacks Windows passwords, credentials:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://searchsecurity.techtarget.com/.../Mimikatz-tutorial-How-it-hacks-Windows-passwords-credentials" rel="nofollow"&gt;https://searchsecurity.techtarget.com/.../Mimikatz-tutorial-How-it-hacks-Windows-passwords-credentials&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1442-Mimikatz: Walkthrough [Updated 2019]:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/mimikatz-walkthrough/" rel="nofollow"&gt;https://resources.infosecinstitute.com/mimikatz-walkthrough/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1443-Mimikatz -Windows Tutorial for Beginner:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hacknpentest.com/mimikatz-windows-tutorial-beginners-guide-part-1/" rel="nofollow"&gt;https://hacknpentest.com/mimikatz-windows-tutorial-beginners-guide-part-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1444-Mitigations against Mimikatz Style Attacks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://isc.sans.edu/forums/diary/Mitigations+against+Mimikatz+Style+Attacks" rel="nofollow"&gt;https://isc.sans.edu/forums/diary/Mitigations+against+Mimikatz+Style+Attacks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1445-Exploring Mimikatz - Part 1 :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.xpnsec.com/exploring-mimikatz-part-1/" rel="nofollow"&gt;https://blog.xpnsec.com/exploring-mimikatz-part-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1446-Powershell AV Evasion. Running Mimikatz with PowerLine:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jlajara.gitlab.io/posts/2019/01/27/Mimikatz-AV-Evasion.html" rel="nofollow"&gt;https://jlajara.gitlab.io/posts/2019/01/27/Mimikatz-AV-Evasion.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1447-How to Steal Windows Credentials with Mimikatz and Metasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/mimikatz/" rel="nofollow"&gt;https://www.hackingloops.com/mimikatz/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1448-Retrieving NTLM Hashes without touching LSASS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreafortuna.org/2018/03/26/retrieving-ntlm-hashes-without-touching-lsass-the-internal-monologue-attack/" rel="nofollow"&gt;https://www.andreafortuna.org/2018/03/26/retrieving-ntlm-hashes-without-touching-lsass-the-internal-monologue-attack/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1449-From Responder to NT Authority\SYSTEM:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/from-responder-to-nt-authority-system-39abd3593319" rel="nofollow"&gt;https://medium.com/bugbountywriteup/from-responder-to-nt-authority-system-39abd3593319&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1450-Getting Creds via NTLMv2:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0xdf.gitlab.io/2019/01/13/getting-net-ntlm-hases-from-windows.html" rel="nofollow"&gt;https://0xdf.gitlab.io/2019/01/13/getting-net-ntlm-hases-from-windows.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1451-Living off the land: stealing NetNTLM hashes:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.securify.nl/blog/SFY20180501/living-off-the-land_-stealing-netntlm-hashes.html" rel="nofollow"&gt;https://www.securify.nl/blog/SFY20180501/living-off-the-land_-stealing-netntlm-hashes.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1452-(How To) Using Responder to capture passwords on a Windows:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.securityflux.com/?p=303" rel="nofollow"&gt;www.securityflux.com/?p=303&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1453-Pwning with Responder - A Pentester's Guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.notsosecure.com/pwning-with-responder-a-pentesters-guide/" rel="nofollow"&gt;https://www.notsosecure.com/pwning-with-responder-a-pentesters-guide/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1454-LLMNR and NBT-NS Poisoning Using Responder:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.4armed.com/blog/llmnr-nbtns-poisoning-using-responder/" rel="nofollow"&gt;https://www.4armed.com/blog/llmnr-nbtns-poisoning-using-responder/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1455-Responder - Ultimate Guide :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ivoidwarranties.tech/posts/pentesting-tuts/responder/guide/" rel="nofollow"&gt;https://www.ivoidwarranties.tech/posts/pentesting-tuts/responder/guide/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1456-Responder - CheatSheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ivoidwarranties.tech/posts/pentesting-tuts/responder/cheatsheet/" rel="nofollow"&gt;https://www.ivoidwarranties.tech/posts/pentesting-tuts/responder/cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1457-LM, NTLM, Net-NTLMv2, oh my! :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@petergombos/lm-ntlm-net-ntlmv2-oh-my-a9b235c58ed4" rel="nofollow"&gt;https://medium.com/@petergombos/lm-ntlm-net-ntlmv2-oh-my-a9b235c58ed4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1458-SMB Relay Attack Tutorial:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://intrinium.com/smb-relay-attack-tutorial" rel="nofollow"&gt;https://intrinium.com/smb-relay-attack-tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1459-Cracking NTLMv2 responses captured using responder:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://zone13.io/post/cracking-ntlmv2-responses-captured-using-responder/" rel="nofollow"&gt;https://zone13.io/post/cracking-ntlmv2-responses-captured-using-responder/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1460-Skip Cracking Responder Hashes and Relay Them:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://threat.tevora.com/quick-tip-skip-cracking-responder-hashes-and-replay-them/" rel="nofollow"&gt;https://threat.tevora.com/quick-tip-skip-cracking-responder-hashes-and-replay-them/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1461-Metasploit's First Antivirus Evasion Modules:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.rapid7.com/2018/10/09/introducing-metasploits-first-evasion-module/" rel="nofollow"&gt;https://blog.rapid7.com/2018/10/09/introducing-metasploits-first-evasion-module/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1462-Evading Anti-virus Part 1: Infecting EXEs with Shellter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/evading-anti-virus-shellter/" rel="nofollow"&gt;https://www.hackingloops.com/evading-anti-virus-shellter/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1463-Evading AV with Shellter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.securityartwork.es/2018/11/02/evading-av-with-shellter-i-also-have-sysmon-and-wazuh-i/" rel="nofollow"&gt;https://www.securityartwork.es/2018/11/02/evading-av-with-shellter-i-also-have-sysmon-and-wazuh-i/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1464-Shellter-A Shellcode Injecting Tool :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/shellter-a-shellcode-injecting-tool/" rel="nofollow"&gt;https://www.hackingarticles.in/shellter-a-shellcode-injecting-tool/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1465-Bypassing antivirus programs using SHELLTER:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://myhackstuff.com/shellter-bypassing-antivirus-programs/" rel="nofollow"&gt;https://myhackstuff.com/shellter-bypassing-antivirus-programs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1466-John the Ripper step-by-step tutorials for end-users :&lt;/p&gt;
&lt;p&gt;openwall.info/wiki/john/tutorials&lt;/p&gt;
&lt;p&gt;-1467-Beginners Guide for John the Ripper (Part 1):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/beginner-guide-john-the-ripper-part-1/" rel="nofollow"&gt;https://www.hackingarticles.in/beginner-guide-john-the-ripper-part-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1468-John the Ripper Basics Tutorial:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ultimatepeter.com/john-the-ripper-basics-tutorial/" rel="nofollow"&gt;https://ultimatepeter.com/john-the-ripper-basics-tutorial/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1469-Crack Windows password with john the ripper:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.securitynewspaper.com/2018/11/27/crack-windows-password-with-john-the-ripper/" rel="nofollow"&gt;https://www.securitynewspaper.com/2018/11/27/crack-windows-password-with-john-the-ripper/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1470-Getting Started Cracking Password Hashes with John the Ripper :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.tunnelsup.com/getting-started-cracking-password-hashes/" rel="nofollow"&gt;https://www.tunnelsup.com/getting-started-cracking-password-hashes/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1471-Shell code exploit with Buffer overflow:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@jain.sm/shell-code-exploit-with-buffer-overflow-8d78cc11f89b" rel="nofollow"&gt;https://medium.com/@jain.sm/shell-code-exploit-with-buffer-overflow-8d78cc11f89b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1472-Shellcoding for Linux and Windows Tutorial :&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.vividmachines.com/shellcode/shellcode.html" rel="nofollow"&gt;www.vividmachines.com/shellcode/shellcode.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1473-Buffer Overflow Practical Examples :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0xrick.github.io/binary-exploitation/bof5/" rel="nofollow"&gt;https://0xrick.github.io/binary-exploitation/bof5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1474-Msfvenom shellcode analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://snowscan.io/msfvenom-shellcode-analysis/" rel="nofollow"&gt;https://snowscan.io/msfvenom-shellcode-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1475-Process Continuation Shellcode:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://azeria-labs.com/process-continuation-shellcode/" rel="nofollow"&gt;https://azeria-labs.com/process-continuation-shellcode/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1476-Dynamic Shellcode Execution:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.countercept.com/blog/dynamic-shellcode-execution/" rel="nofollow"&gt;https://www.countercept.com/blog/dynamic-shellcode-execution/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1477-Tutorials: Writing shellcode to binary files:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.fuzzysecurity.com/tutorials/7.html" rel="nofollow"&gt;https://www.fuzzysecurity.com/tutorials/7.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1478-Creating Shellcode for an Egg Hunter :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securitychops.com/2018/05/26/slae-assignment-3-egghunter-shellcode.html" rel="nofollow"&gt;https://securitychops.com/2018/05/26/slae-assignment-3-egghunter-shellcode.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1479-How to: Shellcode to reverse bind a shell with netcat :&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.hackerfall.com/story/shellcode-to-reverse-bind-a-shell-with-netcat" rel="nofollow"&gt;www.hackerfall.com/story/shellcode-to-reverse-bind-a-shell-with-netcat&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1480-Bashing the Bash — Replacing Shell Scripts with Python:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/capital-one-tech/bashing-the-bash-replacing-shell-scripts-with-python-d8d201bc0989" rel="nofollow"&gt;https://medium.com/capital-one-tech/bashing-the-bash-replacing-shell-scripts-with-python-d8d201bc0989&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1481-How to See All Devices on Your Network With nmap on Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.howtogeek.com/.../how-to-see-all-devices-on-your-network-with-nmap-on-linux" rel="nofollow"&gt;https://www.howtogeek.com/.../how-to-see-all-devices-on-your-network-with-nmap-on-linux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1482-A Complete Guide to Nmap:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.edureka.co/blog/nmap-tutorial/" rel="nofollow"&gt;https://www.edureka.co/blog/nmap-tutorial/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1483-Nmap from Beginner to Advanced :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/nmap/" rel="nofollow"&gt;https://resources.infosecinstitute.com/nmap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1484-Using Wireshark: Identifying Hosts and Users:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://unit42.paloaltonetworks.com/using-wireshark-identifying-hosts-and-users/" rel="nofollow"&gt;https://unit42.paloaltonetworks.com/using-wireshark-identifying-hosts-and-users/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1485-tshark tutorial and filter examples:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackertarget.com/tshark-tutorial-and-filter-examples/" rel="nofollow"&gt;https://hackertarget.com/tshark-tutorial-and-filter-examples/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1486-Fuzz Testing(Fuzzing) Tutorial: What is, Types, Tools &amp;amp; Example:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.guru99.com/fuzz-testing.html" rel="nofollow"&gt;https://www.guru99.com/fuzz-testing.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1487-Tutorial: Dumb Fuzzing - Peach Community Edition:&lt;/p&gt;
&lt;p&gt;community.peachfuzzer.com/v3/TutorialDumbFuzzing.html&lt;/p&gt;
&lt;p&gt;-1488-HowTo: ExploitDev Fuzzing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hansesecure.de/2018/03/howto-exploitdev-fuzzing/" rel="nofollow"&gt;https://hansesecure.de/2018/03/howto-exploitdev-fuzzing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1489-Fuzzing with Metasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.corelan.be/?s=fuzzing" rel="nofollow"&gt;https://www.corelan.be/?s=fuzzing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1490-Fuzzing – how to find bugs automagically using AFL:&lt;/p&gt;
&lt;p&gt;9livesdata.com/fuzzing-how-to-find-bugs-automagically-using-afl/&lt;/p&gt;
&lt;p&gt;-1491-Introduction to File Format Fuzzing &amp;amp; Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@DanielC7/introduction-to-file-format-fuzzing-exploitation-922143ab2ab3" rel="nofollow"&gt;https://medium.com/@DanielC7/introduction-to-file-format-fuzzing-exploitation-922143ab2ab3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1492-0x3 Python Tutorial: Fuzzer:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.primalsecurity.net/0x3-python-tutorial-fuzzer/" rel="nofollow"&gt;https://www.primalsecurity.net/0x3-python-tutorial-fuzzer/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1493-Hunting For Bugs With AFL:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://research.aurainfosec.io/hunting-for-bugs-101/" rel="nofollow"&gt;https://research.aurainfosec.io/hunting-for-bugs-101/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1494-Fuzzing: The New Unit Testing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/DmitryVyukov/fuzzing-the-new-unit-testing" rel="nofollow"&gt;https://www.slideshare.net/DmitryVyukov/fuzzing-the-new-unit-testing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1495-Fuzzing With Peach Framework:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.terminatio.org/fuzzing-peach-framework-full-tutorial-download/" rel="nofollow"&gt;https://www.terminatio.org/fuzzing-peach-framework-full-tutorial-download/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1496-How we found a tcpdump vulnerability using cloud fuzzing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.softscheck.com/en/identifying-security-vulnerabilities-with-cloud-fuzzing/" rel="nofollow"&gt;https://www.softscheck.com/en/identifying-security-vulnerabilities-with-cloud-fuzzing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1497-Finding a Fuzzer: Peach Fuzzer vs. Sulley:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@jtpereyda/finding-a-fuzzer-peach-fuzzer-vs-sulley-1fcd6baebfd4" rel="nofollow"&gt;https://medium.com/@jtpereyda/finding-a-fuzzer-peach-fuzzer-vs-sulley-1fcd6baebfd4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1498-Android malware analysis:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/rossja/android-malware-analysis-71109948" rel="nofollow"&gt;https://www.slideshare.net/rossja/android-malware-analysis-71109948&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1499-15+ Malware Analysis Tools &amp;amp; Techniques :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.template.net/business/tools/malware-analysis/" rel="nofollow"&gt;https://www.template.net/business/tools/malware-analysis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1500-30 Online Malware Analysis Sandboxes / Static Analyzers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@su13ym4n/15-online-sandboxes-for-malware-analysis-f8885ecb8a35" rel="nofollow"&gt;https://medium.com/@su13ym4n/15-online-sandboxes-for-malware-analysis-f8885ecb8a35&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1501-Linux Command Line Forensics and Intrusion Detection Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sandflysecurity.com/blog/compromised-linux-cheat-sheet/" rel="nofollow"&gt;https://www.sandflysecurity.com/blog/compromised-linux-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1502-Cheat Sheets - SANS Digital Forensics:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://digital-forensics.sans.org/community/cheat-sheets" rel="nofollow"&gt;https://digital-forensics.sans.org/community/cheat-sheets&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1503-Breach detection with Linux filesystem forensics:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opensource.com/article/18/4/linux-filesystem-forensics" rel="nofollow"&gt;https://opensource.com/article/18/4/linux-filesystem-forensics&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1504-Digital Forensics Cheat Sheets Collection :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://neverendingsecurity.wordpress.com/digital-forensics-cheat-sheets-collection/" rel="nofollow"&gt;https://neverendingsecurity.wordpress.com/digital-forensics-cheat-sheets-collection/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1505-Security Incident Survey Cheat Sheet for Server Administrators:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://zeltser.com/security-incident-survey-cheat-sheet/" rel="nofollow"&gt;https://zeltser.com/security-incident-survey-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1506-Digital forensics: A cheat sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.techrepublic.com/article/digital-forensics-the-smart-persons-guide/" rel="nofollow"&gt;https://www.techrepublic.com/article/digital-forensics-the-smart-persons-guide/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1507-Windows Registry Forensics using 'RegRipper' Command-Line on Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.pinterest.cl/pin/794815034207804059/" rel="nofollow"&gt;https://www.pinterest.cl/pin/794815034207804059/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1508-Windows IR Live Forensics Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cheatography.com/koriley/cheat-sheets/windows-ir-live-forensics/" rel="nofollow"&gt;https://www.cheatography.com/koriley/cheat-sheets/windows-ir-live-forensics/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1509-10 Best Known Forensics Tools That Works on Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://linoxide.com/linux-how-to/forensics-tools-linux/" rel="nofollow"&gt;https://linoxide.com/linux-how-to/forensics-tools-linux/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1510-Top 20 Free Digital Forensic Investigation Tools for SysAdmins:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://techtalk.gfi.com/top-20-free-digital-forensic-investigation-tools-for-sysadmins/" rel="nofollow"&gt;https://techtalk.gfi.com/top-20-free-digital-forensic-investigation-tools-for-sysadmins/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1511-Windows Volatile Memory Acquisition &amp;amp; Forensics 2018:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@lucideus/windows-volatile-memory-acquisition-forensics-2018-lucideus-forensics-3f297d0e5bfd" rel="nofollow"&gt;https://medium.com/@lucideus/windows-volatile-memory-acquisition-forensics-2018-lucideus-forensics-3f297d0e5bfd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1512-PowerShell Cheat Sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.digitalforensics.com/blog/powershell-cheat-sheet-2/" rel="nofollow"&gt;https://www.digitalforensics.com/blog/powershell-cheat-sheet-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1513-Forensic Artifacts: evidences of program execution on Windows systems:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreafortuna.org/forensic-artifacts-evidences-of-program-execution-on-windows-systems" rel="nofollow"&gt;https://www.andreafortuna.org/forensic-artifacts-evidences-of-program-execution-on-windows-systems&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1514-How to install a CPU?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.computer-hardware-explained.com/how-to-install-a-cpu.html" rel="nofollow"&gt;https://www.computer-hardware-explained.com/how-to-install-a-cpu.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1515-How To Upgrade and Install a New CPU or Motherboard:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.howtogeek.com/.../how-to-upgrade-and-install-a-new-cpu-or-motherboard-or-both" rel="nofollow"&gt;https://www.howtogeek.com/.../how-to-upgrade-and-install-a-new-cpu-or-motherboard-or-both&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1516-Installing and Troubleshooting CPUs:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.pearsonitcertification.com/articles/article.aspx?p=1681054&amp;amp;seqNum=2" rel="nofollow"&gt;www.pearsonitcertification.com/articles/article.aspx?p=1681054&amp;amp;seqNum=2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1517-15 FREE Pastebin Alternatives You Can Use Right Away:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.rootreport.com/pastebin-alternatives/" rel="nofollow"&gt;https://www.rootreport.com/pastebin-alternatives/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1518-Basic computer troubleshooting steps:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.computerhope.com/basic.htm" rel="nofollow"&gt;https://www.computerhope.com/basic.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1519-18 Best Websites to Learn Computer Troubleshooting and Tech support:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://transcosmos.co.uk/best-websites-to-learn-computer-troubleshooting-and-tech-support" rel="nofollow"&gt;http://transcosmos.co.uk/best-websites-to-learn-computer-troubleshooting-and-tech-support&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1520-Post Exploitation with PowerShell Empire 2.3.0 :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.yeahhub.com/post-exploitation-powershell-empire-2-3-0-detailed-tutorial/" rel="nofollow"&gt;https://www.yeahhub.com/post-exploitation-powershell-empire-2-3-0-detailed-tutorial/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1521-Windows Persistence with PowerShell Empire :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/windows-persistence-with-powershell-empire/" rel="nofollow"&gt;https://www.hackingarticles.in/windows-persistence-with-powershell-empire/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1522-powershell-empire-tutorials-empire-to-meterpreter-shellcode-injection-ssl-tutorial:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.dudeworks.com/powershell-empire-tutorials-empire-to-meterpreter-shellcode-injection-ssl-tutorial" rel="nofollow"&gt;https://www.dudeworks.com/powershell-empire-tutorials-empire-to-meterpreter-shellcode-injection-ssl-tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1523-Bypassing Anti-Virtus &amp;amp; Hacking Windows 10 Using Empire :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://zsecurity.org/bypassing-anti-virtus-hacking-windows-10-using-empire/" rel="nofollow"&gt;https://zsecurity.org/bypassing-anti-virtus-hacking-windows-10-using-empire/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1524-Hacking with Empire – PowerShell Post-Exploitation Agent :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.prodefence.org/hacking-with-empire-powershell-post-exploitation-agent/" rel="nofollow"&gt;https://www.prodefence.org/hacking-with-empire-powershell-post-exploitation-agent/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1525-Hacking Windows Active Directory Full guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.kalitut.com/hacking-windows-active-directory-full.html" rel="nofollow"&gt;www.kalitut.com/hacking-windows-active-directory-full.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1526-PowerShell Empire for Post-Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/powershell-empire/" rel="nofollow"&gt;https://www.hackingloops.com/powershell-empire/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1527-Generate A One-Liner – Welcome To LinuxPhilosophy!:&lt;/p&gt;
&lt;p&gt;linuxphilosophy.com/rtfm/more/empire/generate-a-one-liner/&lt;/p&gt;
&lt;p&gt;-1528-CrackMapExec - Ultimate Guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ivoidwarranties.tech/posts/pentesting-tuts/cme/crackmapexec/" rel="nofollow"&gt;https://www.ivoidwarranties.tech/posts/pentesting-tuts/cme/crackmapexec/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1529-PowerShell Logging and Security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.secjuice.com/enterprise-powershell-protection-logging/" rel="nofollow"&gt;https://www.secjuice.com/enterprise-powershell-protection-logging/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1530-Create your own FUD Backdoors with Empire:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.extremehacking.org/blog/2016/08/25/create-fud-backdoors-empire/" rel="nofollow"&gt;http://blog.extremehacking.org/blog/2016/08/25/create-fud-backdoors-empire/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1531-PowerShell Empire Complete Tutorial For Beginners:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://video.hacking.reviews/2019/06/powershell-empire-complete-tutorial-for.html" rel="nofollow"&gt;https://video.hacking.reviews/2019/06/powershell-empire-complete-tutorial-for.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1532-Bash Bunny: Windows Remote Shell using Metasploit &amp;amp; PowerShell:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cyberarms.wordpress.com/.../bash-bunny-windows-remote-shell-using-metasploit-powershell" rel="nofollow"&gt;https://cyberarms.wordpress.com/.../bash-bunny-windows-remote-shell-using-metasploit-powershell&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1533-Kerberoasting - Stealing Service Account Credentials:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.scip.ch/en/?labs.20181011" rel="nofollow"&gt;https://www.scip.ch/en/?labs.20181011&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1534-Automating Mimikatz with Empire and DeathStar :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.stealthbits.com/automating-mimikatz-with-empire-and-deathstar/" rel="nofollow"&gt;https://blog.stealthbits.com/automating-mimikatz-with-empire-and-deathstar/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1535-Windows oneliners to get shell :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ironhackers.es/en/cheatsheet/comandos-en-windows-para-obtener-shell/" rel="nofollow"&gt;https://ironhackers.es/en/cheatsheet/comandos-en-windows-para-obtener-shell/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1536-ObfuscatedEmpire :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cobbr.io/ObfuscatedEmpire.html" rel="nofollow"&gt;https://cobbr.io/ObfuscatedEmpire.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1537-Pentesting with PowerShell in six steps:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://periciacomputacional.com/pentesting-with-powershell-in-six-steps/" rel="nofollow"&gt;https://periciacomputacional.com/pentesting-with-powershell-in-six-steps/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1538-Using Credentials to Own Windows Boxes - Part 3 (WMI and WinRM):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.ropnop.com/using-credentials-to-own-windows-boxes-part-3-wmi-and-winrm" rel="nofollow"&gt;https://blog.ropnop.com/using-credentials-to-own-windows-boxes-part-3-wmi-and-winrm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1539-PowerShell Security Best Practices:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.digitalshadows.com/blog-and-research/powershell-security-best-practices/" rel="nofollow"&gt;https://www.digitalshadows.com/blog-and-research/powershell-security-best-practices/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1540-You can detect PowerShell attacks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/Hackerhurricane/you-can-detect-powershell-attacks" rel="nofollow"&gt;https://www.slideshare.net/Hackerhurricane/you-can-detect-powershell-attacks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1541-Detecting and Preventing PowerShell Attacks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.eventsentry.com/.../powershell-pw3rh311-detecting-preventing-powershell-attacks" rel="nofollow"&gt;https://www.eventsentry.com/.../powershell-pw3rh311-detecting-preventing-powershell-attacks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1542-Detecting Offensive PowerShell Attack Tools – Active Directory Security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://adsecurity.org/?p=2604" rel="nofollow"&gt;https://adsecurity.org/?p=2604&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1543-An Internal Pentest Audit Against Active Directory:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.exploit-db.com/docs/46019" rel="nofollow"&gt;https://www.exploit-db.com/docs/46019&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1544-A complete Active Directory Penetration Testing Checklist :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gbhackers.com/active-directory-penetration-testing-checklist/" rel="nofollow"&gt;https://gbhackers.com/active-directory-penetration-testing-checklist/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1545-Active Directory | Penetration Testing Lab:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestlab.blog/tag/active-directory/" rel="nofollow"&gt;https://pentestlab.blog/tag/active-directory/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1546-Building and Attacking an Active Directory lab with PowerShell :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://1337red.wordpress.com/building-and-attacking-an-active-directory-lab-with-powershell" rel="nofollow"&gt;https://1337red.wordpress.com/building-and-attacking-an-active-directory-lab-with-powershell&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1547-Penetration Testing in Windows Server Active Directory using Metasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/penetration-testing-windows-server-active-directory-using-metasploit-part-1" rel="nofollow"&gt;https://www.hackingarticles.in/penetration-testing-windows-server-active-directory-using-metasploit-part-1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1548-Red Team Penetration Testing – Going All the Way (Part 2 of 3) :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.anitian.com/red-team-testing-going-all-the-way-part2/" rel="nofollow"&gt;https://www.anitian.com/red-team-testing-going-all-the-way-part2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1549-Penetration Testing Active Directory, Part II:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.jishuwen.com/d/2Mtq" rel="nofollow"&gt;https://www.jishuwen.com/d/2Mtq&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1550-Gaining Domain Admin from Outside Active Directory:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://markitzeroday.com/pass-the-hash/crack-map-exec/2018/03/04/da-from-outside-the-domain.html" rel="nofollow"&gt;https://markitzeroday.com/pass-the-hash/crack-map-exec/2018/03/04/da-from-outside-the-domain.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1551-Post Exploitation Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0xsecurity.com/blog/some-hacking-techniques/post-exploitation-cheat-sheet" rel="nofollow"&gt;https://0xsecurity.com/blog/some-hacking-techniques/post-exploitation-cheat-sheet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1552-Windows post-exploitation :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/emilyanncr/Windows-Post-Exploitation"&gt;https://github.com/emilyanncr/Windows-Post-Exploitation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1553-OSCP - Windows Post Exploitation :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackingandsecurity.blogspot.com/2017/9/oscp-windows-post-exploitation.html" rel="nofollow"&gt;https://hackingandsecurity.blogspot.com/2017/9/oscp-windows-post-exploitation.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1554-Windows Post-Exploitation Command List:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pentest.tonyng.net/windows-post-exploitation-command-list/" rel="nofollow"&gt;http://pentest.tonyng.net/windows-post-exploitation-command-list/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1555-Windows Post-Exploitation Command List:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://tim3warri0r.blogspot.com/2012/09/windows-post-exploitation-command-list.html" rel="nofollow"&gt;http://tim3warri0r.blogspot.com/2012/09/windows-post-exploitation-command-list.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1556-Linux Post-Exploitation · OSCP - Useful Resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://backdoorshell.gitbooks.io/oscp-useful-links/content/linux-post-exploitation.html" rel="nofollow"&gt;https://backdoorshell.gitbooks.io/oscp-useful-links/content/linux-post-exploitation.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1557-Pentesting Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://anhtai.me/pentesting-cheatsheet/" rel="nofollow"&gt;https://anhtai.me/pentesting-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1558-Pentesting Cheatsheets - Red Teaming Experiments:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ired.team/offensive-security-experiments/offensive-security-cheetsheets" rel="nofollow"&gt;https://ired.team/offensive-security-experiments/offensive-security-cheetsheets&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1559-OSCP Goldmine:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://0xc0ffee.io/blog/OSCP-Goldmine" rel="nofollow"&gt;http://0xc0ffee.io/blog/OSCP-Goldmine&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1560-Linux Post Exploitation Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://red-orbita.com/?p=8455" rel="nofollow"&gt;http://red-orbita.com/?p=8455&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1562-OSCP useful resources and tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://acknak.fr/en/articles/oscp-tools/" rel="nofollow"&gt;https://acknak.fr/en/articles/oscp-tools/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1563-Windows Post-Exploitation Command List :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://es.scribd.com/document/100182787/Windows-Post-Exploitation-Command-List" rel="nofollow"&gt;https://es.scribd.com/document/100182787/Windows-Post-Exploitation-Command-List&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1564-Metasploit Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentesttools.net/metasploit-cheat-sheet/" rel="nofollow"&gt;https://pentesttools.net/metasploit-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1565-Windows Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://awansec.com/windows-priv-esc.html" rel="nofollow"&gt;https://awansec.com/windows-priv-esc.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1566-Linux Unix Bsd Post Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://attackerkb.com/Unix/LinuxUnixBSD_Post_Exploitation" rel="nofollow"&gt;https://attackerkb.com/Unix/LinuxUnixBSD_Post_Exploitation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1567-Privilege Escalation &amp;amp; Post-Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://movaxbx.ru/2018/09/16/privilege-escalation-post-exploitation/" rel="nofollow"&gt;https://movaxbx.ru/2018/09/16/privilege-escalation-post-exploitation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1568-Metasploit Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://vk-intel.org/2016/12/28/metasploit-cheat-sheet/" rel="nofollow"&gt;https://vk-intel.org/2016/12/28/metasploit-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1569-Metasploit Cheat Sheet :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://nitesculucian.github.io/2018/12/01/metasploit-cheat-sheet/" rel="nofollow"&gt;https://nitesculucian.github.io/2018/12/01/metasploit-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1570-Privilege escalation: Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://vulp3cula.gitbook.io/hackers-grimoire/post-exploitation/privesc-linux" rel="nofollow"&gt;https://vulp3cula.gitbook.io/hackers-grimoire/post-exploitation/privesc-linux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1571-Cheat Sheets — Amethyst Security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ssddcyber.com/cheatsheets" rel="nofollow"&gt;https://www.ssddcyber.com/cheatsheets&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1572-Responder - CheatSheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ivoidwarranties.tech/posts/pentesting-tuts/responder/cheatsheet/" rel="nofollow"&gt;https://www.ivoidwarranties.tech/posts/pentesting-tuts/responder/cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1573-Cheatsheets:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://h4ck.co/wp-content/uploads/2018/06/cheatsheet.txt" rel="nofollow"&gt;https://h4ck.co/wp-content/uploads/2018/06/cheatsheet.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1574-Are you ready for OSCP?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hacktoday.io/t/are-you-ready-for-oscp/59" rel="nofollow"&gt;https://www.hacktoday.io/t/are-you-ready-for-oscp/59&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1575-Windows Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.p64cyber.com/windows-privilege-escalation/" rel="nofollow"&gt;https://labs.p64cyber.com/windows-privilege-escalation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1576-A guide to Linux Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://payatu.com/guide-linux-privilege-escalation/" rel="nofollow"&gt;https://payatu.com/guide-linux-privilege-escalation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1577-Windows Post-Exploitation-Cheat-Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pentestpanther.com/2019/07/01/windows-post-exploitation-cheat-sheet/" rel="nofollow"&gt;http://pentestpanther.com/2019/07/01/windows-post-exploitation-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1578-Windows Privilege Escalation (privesc) Resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.willchatham.com/security/windows-privilege-escalation-privesc-resources/" rel="nofollow"&gt;https://www.willchatham.com/security/windows-privilege-escalation-privesc-resources/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1579-Dissecting Mobile Malware:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://slideplayer.com/slide/3434519/" rel="nofollow"&gt;https://slideplayer.com/slide/3434519/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1580-Android malware analysis with Radare: Dissecting the Triada Trojan:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.nowsecure.com/blog/2016/11/21/android-malware-analysis-radare-triad/" rel="nofollow"&gt;www.nowsecure.com/blog/2016/11/21/android-malware-analysis-radare-triad/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1581-Dissecting Mobile Native Code Packers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.zimperium.com/dissecting-mobile-native-code-packers-case-study/" rel="nofollow"&gt;https://blog.zimperium.com/dissecting-mobile-native-code-packers-case-study/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1582-What is Mobile Malware? Defined, Explained, and Explored:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.forcepoint.com/cyber-edu/mobile-malware" rel="nofollow"&gt;https://www.forcepoint.com/cyber-edu/mobile-malware&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1583-Malware Development — Professionalization of an Ancient Art:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/scip/malware-development-professionalization-of-an-ancient-art-4dfb3f10f34b" rel="nofollow"&gt;https://medium.com/scip/malware-development-professionalization-of-an-ancient-art-4dfb3f10f34b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1584-Weaponizing Malware Code Sharing with Cythereal MAGIC:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@arun_73782/cythereal-magic-e68b0c943b1d" rel="nofollow"&gt;https://medium.com/@arun_73782/cythereal-magic-e68b0c943b1d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1585-Web App Pentest Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@muratkaraoz/web-app-pentest-cheat-sheet-c17394af773" rel="nofollow"&gt;https://medium.com/@muratkaraoz/web-app-pentest-cheat-sheet-c17394af773&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1586-The USB Threat is [Still] Real — Pentest Tools for Sysadmins, Continued:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@jeremy.trinka/the-usb-threat-is-still-real-pentest-tools-for-sysadmins-continued-88560af447bf" rel="nofollow"&gt;https://medium.com/@jeremy.trinka/the-usb-threat-is-still-real-pentest-tools-for-sysadmins-continued-88560af447bf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1587-How to Run An External Pentest:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@_jayhill/how-to-run-an-external-pentest-dd76ed14bb6a" rel="nofollow"&gt;https://medium.com/@_jayhill/how-to-run-an-external-pentest-dd76ed14bb6a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1588-Advice for new pentesters:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@PentesterLab/advice-for-new-pentesters-a5f7d75a3aea" rel="nofollow"&gt;https://medium.com/@PentesterLab/advice-for-new-pentesters-a5f7d75a3aea&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1589-NodeJS Application Pentest Tips:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/nodejs-application-pentest-tips-improper-uri-handling-in-express-390b3a07cb3e" rel="nofollow"&gt;https://medium.com/bugbountywriteup/nodejs-application-pentest-tips-improper-uri-handling-in-express-390b3a07cb3e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1590-How to combine Pentesting with Automation to improve your security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/how-to-combine-pentest-with-automation-to-improve-your-security" rel="nofollow"&gt;https://medium.com/how-to-combine-pentest-with-automation-to-improve-your-security&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1591-Day 79: FTP Pentest Guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@int0x33/day-79-ftp-pentest-guide-5106967bd50a" rel="nofollow"&gt;https://medium.com/@int0x33/day-79-ftp-pentest-guide-5106967bd50a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1592-SigintOS: A Wireless Pentest Distro Review:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@tomac/sigintos-a-wireless-pentest-distro-review-a7ea93ee8f8b" rel="nofollow"&gt;https://medium.com/@tomac/sigintos-a-wireless-pentest-distro-review-a7ea93ee8f8b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1593-Conducting an IoT Pentest :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/6fa573ac6668?source=user_profile" rel="nofollow"&gt;https://medium.com/p/6fa573ac6668?source=user_profile&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;-1594-Efficient way to pentest Android Chat Applications:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/android-tamer/efficient-way-to-pentest-android-chat-applications-46221d8a040f" rel="nofollow"&gt;https://medium.com/android-tamer/efficient-way-to-pentest-android-chat-applications-46221d8a040f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1595-APT2 - Automated PenTest Toolkit :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/media/f1cf43d92a17d5c4c6e2e572133bfeed/href" rel="nofollow"&gt;https://medium.com/media/f1cf43d92a17d5c4c6e2e572133bfeed/href&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1596-Pentest Tools and Distros:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/hacker-toolbelt/pentest-tools-and-distros-9d738d83f82d" rel="nofollow"&gt;https://medium.com/hacker-toolbelt/pentest-tools-and-distros-9d738d83f82d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1597-Keeping notes during a pentest/security assessment/code review:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.pentesterlab.com/keeping-notes-during-a-pentest-security-assessment-code-review-7e6db8091a66?gi=4c290731e24b" rel="nofollow"&gt;https://blog.pentesterlab.com/keeping-notes-during-a-pentest-security-assessment-code-review-7e6db8091a66?gi=4c290731e24b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1598-An intro to pentesting an Android phone:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@tnvo/an-intro-to-pentesting-an-android-phone-464ec4860f39" rel="nofollow"&gt;https://medium.com/@tnvo/an-intro-to-pentesting-an-android-phone-464ec4860f39&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1599-The Penetration Testing Report:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@mtrdesign/the-penetration-testing-report-38a0a0b25cf2" rel="nofollow"&gt;https://medium.com/@mtrdesign/the-penetration-testing-report-38a0a0b25cf2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1600-VA vs Pentest:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@play.threepetsirikul/va-vs-pentest-cybersecurity-2a17250d5e03" rel="nofollow"&gt;https://medium.com/@play.threepetsirikul/va-vs-pentest-cybersecurity-2a17250d5e03&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1601-Pentest: Hacking WPA2 WiFi using Aircrack on Kali Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@digitalmunition/pentest-hacking-wpa2-wifi-using-aircrack-on-kali-linux-99519fee946f" rel="nofollow"&gt;https://medium.com/@digitalmunition/pentest-hacking-wpa2-wifi-using-aircrack-on-kali-linux-99519fee946f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1602-Pentesting Ethereum dApps:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@brandonarvanaghi/pentesting-ethereum-dapps-2a84c8dfee19" rel="nofollow"&gt;https://medium.com/@brandonarvanaghi/pentesting-ethereum-dapps-2a84c8dfee19&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1603-Android pentest lab in a nutshell :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@dortz/android-pentest-lab-in-a-nutshell-ee60be8638d3" rel="nofollow"&gt;https://medium.com/@dortz/android-pentest-lab-in-a-nutshell-ee60be8638d3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1604-Pentest Magazine: Web Scraping with Python :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@heavenraiza/web-scraping-with-python-170145fd90d3" rel="nofollow"&gt;https://medium.com/@heavenraiza/web-scraping-with-python-170145fd90d3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1605-Pentesting iOS apps without jailbreak:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/securing/pentesting-ios-apps-without-jailbreak-91809d23f64e" rel="nofollow"&gt;https://medium.com/securing/pentesting-ios-apps-without-jailbreak-91809d23f64e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1606-OSCP/Pen Testing Resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@sdgeek/oscp-pen-testing-resources-271e9e570d45" rel="nofollow"&gt;https://medium.com/@sdgeek/oscp-pen-testing-resources-271e9e570d45&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1607-Web Application Security &amp;amp; Bug Bounty (Methodology, Reconnaissance, Vulnerabilities, Reporting):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.usejournal.com/web-application-security-bug-bounty-methodology-reconnaissance-vulnerabilities-reporting-635073cddcf2?gi=4a578db171dc" rel="nofollow"&gt;https://blog.usejournal.com/web-application-security-bug-bounty-methodology-reconnaissance-vulnerabilities-reporting-635073cddcf2?gi=4a578db171dc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1608-Local File Inclusion (LFI) — Web Application Penetration Testing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@Aptive/local-file-inclusion-lfi-web-application-penetration-testing-cc9dc8dd3601" rel="nofollow"&gt;https://medium.com/@Aptive/local-file-inclusion-lfi-web-application-penetration-testing-cc9dc8dd3601&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1609-Local File Inclusion (Basic):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@kamransaifullah786/local-file-inclusion-basic-242669a7af3" rel="nofollow"&gt;https://medium.com/@kamransaifullah786/local-file-inclusion-basic-242669a7af3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1610-PHP File Inclusion Vulnerability:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.immuniweb.com/vulnerability/php-file-inclusion.html" rel="nofollow"&gt;https://www.immuniweb.com/vulnerability/php-file-inclusion.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1611-Local File Inclusion:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://teambi0s.gitlab.io/bi0s-wiki/web/lfi/" rel="nofollow"&gt;https://teambi0s.gitlab.io/bi0s-wiki/web/lfi/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1612-Web Application Penetration Testing: Local File Inclusion:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hakin9.org/web-application-penetration-testing-local-file-inclusion-lfi-testing/" rel="nofollow"&gt;https://hakin9.org/web-application-penetration-testing-local-file-inclusion-lfi-testing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1613-From Local File Inclusion to Code Execution :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/local-file-inclusion-code-execution/" rel="nofollow"&gt;https://resources.infosecinstitute.com/local-file-inclusion-code-execution/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1614-RFI / LFI:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://security.radware.com/ddos-knowledge-center/DDoSPedia/rfi-lfi/" rel="nofollow"&gt;https://security.radware.com/ddos-knowledge-center/DDoSPedia/rfi-lfi/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1615-From Local File Inclusion to Remote Code Execution - Part 2:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://outpost24.com/blog/from-local-file-inclusion-to-remote-code-execution-part-2" rel="nofollow"&gt;https://outpost24.com/blog/from-local-file-inclusion-to-remote-code-execution-part-2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1616-Local File Inclusion:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://xapax.gitbooks.io/security/content/local_file_inclusion.html" rel="nofollow"&gt;https://xapax.gitbooks.io/security/content/local_file_inclusion.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1617-Beginner Guide to File Inclusion Attack (LFI/RFI) :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/beginner-guide-file-inclusion-attack-lfirfi/" rel="nofollow"&gt;https://www.hackingarticles.in/beginner-guide-file-inclusion-attack-lfirfi/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1618-LFI / RFI:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://secf00tprint.github.io/blog/payload-tester/lfirfi/en" rel="nofollow"&gt;https://secf00tprint.github.io/blog/payload-tester/lfirfi/en&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1619-LFI and RFI Attacks - All You Need to Know:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.getastra.com/blog/your-guide-to-defending-against-lfi-and-rfi-attacks/" rel="nofollow"&gt;https://www.getastra.com/blog/your-guide-to-defending-against-lfi-and-rfi-attacks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1620-Log Poisoning - LFI to RCE :&lt;/p&gt;
&lt;p&gt;&lt;a href="http://liberty-shell.com/sec/2018/05/19/poisoning/" rel="nofollow"&gt;http://liberty-shell.com/sec/2018/05/19/poisoning/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1621-LFI:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/cyber-punk/lfi-63050678" rel="nofollow"&gt;https://www.slideshare.net/cyber-punk/lfi-63050678&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1622-Hand Guide To Local File Inclusion(LFI):&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.securityidiots.com/Web-Pentest/LFI/guide-to-lfi.html" rel="nofollow"&gt;www.securityidiots.com/Web-Pentest/LFI/guide-to-lfi.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1623-Local File Inclusion (LFI) - Cheat Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ironhackers.es/herramientas/lfi-cheat-sheet/" rel="nofollow"&gt;https://ironhackers.es/herramientas/lfi-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1624-Web Application Penetration Testing Local File Inclusion (LFI):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cnblogs.com/Primzahl/p/6258149.html" rel="nofollow"&gt;https://www.cnblogs.com/Primzahl/p/6258149.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1625-File Inclusion Vulnerability Prevention:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.pivotpointsecurity.com/blog/file-inclusion-vulnerabilities/" rel="nofollow"&gt;https://www.pivotpointsecurity.com/blog/file-inclusion-vulnerabilities/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1626-The Most In-depth Hacker's Guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://books.google.com/books?isbn=1329727681" rel="nofollow"&gt;https://books.google.com/books?isbn=1329727681&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1627-Hacking Essentials: The Beginner's Guide To Ethical Hacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://books.google.com/books?id=e6CHDwAAQBAJ" rel="nofollow"&gt;https://books.google.com/books?id=e6CHDwAAQBAJ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1628-Web App Hacking, Part 11: Local File Inclusion:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackers-arise.com/.../Web-App-Hacking-Part-11-Local-File-Inclusion-LFI" rel="nofollow"&gt;https://www.hackers-arise.com/.../Web-App-Hacking-Part-11-Local-File-Inclusion-LFI&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1629-Local and remote file inclusion :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://vulp3cula.gitbook.io/hackers-grimoire/exploitation/web-application/lfi-rfi" rel="nofollow"&gt;https://vulp3cula.gitbook.io/hackers-grimoire/exploitation/web-application/lfi-rfi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1630-Upgrade from LFI to RCE via PHP Sessions :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.rcesecurity.com/2017/08/from-lfi-to-rce-via-php-sessions/" rel="nofollow"&gt;https://www.rcesecurity.com/2017/08/from-lfi-to-rce-via-php-sessions/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1631-CVV #1: Local File Inclusion:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/cvv-1-local-file-inclusion-ebc48e0e479a" rel="nofollow"&gt;https://medium.com/bugbountywriteup/cvv-1-local-file-inclusion-ebc48e0e479a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1632-(PDF) Cross Site Scripting (XSS) in Action:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.researchgate.net/publication/241757130_Cross_Site_Scripting_XSS_in_Action" rel="nofollow"&gt;https://www.researchgate.net/publication/241757130_Cross_Site_Scripting_XSS_in_Action&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1633-XSS exploitation part 1:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.securityidiots.com/Web-Pentest/XSS/xss-exploitation-series-part-1.html" rel="nofollow"&gt;www.securityidiots.com/Web-Pentest/XSS/xss-exploitation-series-part-1.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1634-Weaponizing self-xss:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://silentbreaksecurity.com/weaponizing-self-xss/" rel="nofollow"&gt;https://silentbreaksecurity.com/weaponizing-self-xss/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1635-Cookie Tracking and Stealing using Cross-Site Scripting:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.geeksforgeeks.org/cookie-tracking-stealing-using-cross-site-scripting/" rel="nofollow"&gt;https://www.geeksforgeeks.org/cookie-tracking-stealing-using-cross-site-scripting/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1636-Defense against the Black Arts:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://books.google.com/books?isbn=1439821224" rel="nofollow"&gt;https://books.google.com/books?isbn=1439821224&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1637-CSRF Attacks: Anatomy, Prevention, and XSRF Tokens:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.acunetix.com/websitesecurity/csrf-attacks/" rel="nofollow"&gt;https://www.acunetix.com/websitesecurity/csrf-attacks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1638-Bypassing CSRF protection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.bugbountynotes.com/training/tutorial?id=5" rel="nofollow"&gt;https://www.bugbountynotes.com/training/tutorial?id=5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1639-Stealing CSRF tokens with XSS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://digi.ninja/blog/xss_steal_csrf_token.php" rel="nofollow"&gt;https://digi.ninja/blog/xss_steal_csrf_token.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1640-Same Origin Policy and ways to Bypass:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@minosagap/same-origin-policy-and-ways-to-bypass-250effdc4a12" rel="nofollow"&gt;https://medium.com/@minosagap/same-origin-policy-and-ways-to-bypass-250effdc4a12&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1641-Bypassing Same Origin Policy :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/bypassing-same-origin-policy-sop/" rel="nofollow"&gt;https://resources.infosecinstitute.com/bypassing-same-origin-policy-sop/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1642-Client-Side Attack - an overview :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sciencedirect.com/topics/computer-science/client-side-attack" rel="nofollow"&gt;https://www.sciencedirect.com/topics/computer-science/client-side-attack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1643-Client-Side Injection Attacks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.alertlogic.com/blog/client-side-injection-attacks/" rel="nofollow"&gt;https://blog.alertlogic.com/blog/client-side-injection-attacks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1645-The Client-Side Battle Against JavaScript Attacks Is Already Here:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/swlh/the-client-side-battle-against-javascript-attacks-is-already-here-656f3602c1f2" rel="nofollow"&gt;https://medium.com/swlh/the-client-side-battle-against-javascript-attacks-is-already-here-656f3602c1f2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1646-Why Let’s Encrypt is a really, really, really bad idea:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/swlh/why-lets-encrypt-is-a-really-really-really-bad-idea-d69308887801" rel="nofollow"&gt;https://medium.com/swlh/why-lets-encrypt-is-a-really-really-really-bad-idea-d69308887801&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1647-Huge Guide to Client-Side Attacks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.notion.so/d382649cfebd4c5da202677b6cad1d40" rel="nofollow"&gt;https://www.notion.so/d382649cfebd4c5da202677b6cad1d40&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1648-OSCP Prep – Episode 11: Client Side Attacks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://kentosec.com/2018/09/02/oscp-prep-episode-11-client-side-attacks/" rel="nofollow"&gt;https://kentosec.com/2018/09/02/oscp-prep-episode-11-client-side-attacks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1649-Client side attack - AV Evasion:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://rafalharazinski.gitbook.io/security/oscp/untitled-1/client-side-attack" rel="nofollow"&gt;https://rafalharazinski.gitbook.io/security/oscp/untitled-1/client-side-attack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1650-Client-Side Attack With Metasploit (Part 4):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://thehiddenwiki.pw/blog/2018/07/23/client-side-attack-metasploit/" rel="nofollow"&gt;https://thehiddenwiki.pw/blog/2018/07/23/client-side-attack-metasploit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1651-Ransomware: Latest Developments and How to Defend Against Them:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.recordedfuture.com/latest-ransomware-attacks/" rel="nofollow"&gt;https://www.recordedfuture.com/latest-ransomware-attacks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1652-Cookie Tracking and Stealing using Cross-Site Scripting:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.geeksforgeeks.org/cookie-tracking-stealing-using-cross-site-scripting/" rel="nofollow"&gt;https://www.geeksforgeeks.org/cookie-tracking-stealing-using-cross-site-scripting/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1653-How to Write an XSS Cookie Stealer in JavaScript to Steal Passwords:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://null-byte.wonderhowto.com/.../write-xss-cookie-stealer-javascript-steal-passwords-0180833" rel="nofollow"&gt;https://null-byte.wonderhowto.com/.../write-xss-cookie-stealer-javascript-steal-passwords-0180833&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1654-How I was able to steal cookies via stored XSS in one of the famous e-commerce site:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@bhavarth33/how-i-was-able-to-steal-cookies-via-stored-xss-in-one-of-the-famous-e-commerce-site-3de8ab94437d" rel="nofollow"&gt;https://medium.com/@bhavarth33/how-i-was-able-to-steal-cookies-via-stored-xss-in-one-of-the-famous-e-commerce-site-3de8ab94437d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1655-Steal victim's cookie using Cross Site Scripting (XSS) :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securityonline.info/steal-victims-cookie-using-cross-site-scripting-xss/" rel="nofollow"&gt;https://securityonline.info/steal-victims-cookie-using-cross-site-scripting-xss/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1656-Remote Code Execution — Damn Vulnerable Web Application(DVWA) - Medium level security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@mikewaals/remote-code-execution-damn-vulnerable-web-application-dvwa-medium-level-security-ca283cda3e86" rel="nofollow"&gt;https://medium.com/@mikewaals/remote-code-execution-damn-vulnerable-web-application-dvwa-medium-level-security-ca283cda3e86&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1657-Remote Command Execution:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hacksland.net/remote-command-execution/" rel="nofollow"&gt;https://hacksland.net/remote-command-execution/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1658-DevOops — An XML External Entity (XXE) HackTheBox Walkthrough:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/devoops-an-xml-external-entity-xxe-hackthebox-walkthrough-fb5ba03aaaa2" rel="nofollow"&gt;https://medium.com/bugbountywriteup/devoops-an-xml-external-entity-xxe-hackthebox-walkthrough-fb5ba03aaaa2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1659-XML External Entity - Beyond /etc/passwd (For Fun &amp;amp; Profit):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhillsinfosec.com/xml-external-entity-beyond-etcpasswd-fun-profit/" rel="nofollow"&gt;https://www.blackhillsinfosec.com/xml-external-entity-beyond-etcpasswd-fun-profit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1660-XXE - ZeroSec - Adventures In Information Security:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.zsec.uk/out-of-band-xxe-2/" rel="nofollow"&gt;https://blog.zsec.uk/out-of-band-xxe-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1661-Exploitation: XML External Entity (XXE) Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://depthsecurity.com/blog/exploitation-xml-external-entity-xxe-injection" rel="nofollow"&gt;https://depthsecurity.com/blog/exploitation-xml-external-entity-xxe-injection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1662-Hack The Box: DevOops:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://redteamtutorials.com/2018/11/11/hack-the-box-devoops/" rel="nofollow"&gt;https://redteamtutorials.com/2018/11/11/hack-the-box-devoops/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1663-Web Application Penetration Testing Notes:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://techvomit.net/web-application-penetration-testing-notes/" rel="nofollow"&gt;https://techvomit.net/web-application-penetration-testing-notes/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1664-WriteUp – Aragog (HackTheBox) :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ironhackers.es/en/writeups/writeup-aragog-hackthebox/" rel="nofollow"&gt;https://ironhackers.es/en/writeups/writeup-aragog-hackthebox/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1665-Linux Privilege Escalation Using PATH Variable:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/linux-privilege-escalation-using-path-variable/" rel="nofollow"&gt;https://www.hackingarticles.in/linux-privilege-escalation-using-path-variable/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1666-Linux Privilege Escalation via Automated Script :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/linux-privilege-escalation-via-automated-script/" rel="nofollow"&gt;https://www.hackingarticles.in/linux-privilege-escalation-via-automated-script/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1667-Privilege Escalation - Linux :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://chryzsh.gitbooks.io/pentestbook/privilege_escalation_-_linux.html" rel="nofollow"&gt;https://chryzsh.gitbooks.io/pentestbook/privilege_escalation_-_linux.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1668-Linux Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://percussiveelbow.github.io/linux-privesc/" rel="nofollow"&gt;https://percussiveelbow.github.io/linux-privesc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1669-Perform Local Privilege Escalation Using a Linux Kernel Exploit :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://null-byte.wonderhowto.com/how-to/perform-local-privilege-escalation-using-linux-kernel-exploit-0186317/" rel="nofollow"&gt;https://null-byte.wonderhowto.com/how-to/perform-local-privilege-escalation-using-linux-kernel-exploit-0186317/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1670-Linux Privilege Escalation With Kernel Exploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.yeahhub.com/linux-privilege-escalation-with-kernel-exploit-8572-c/" rel="nofollow"&gt;https://www.yeahhub.com/linux-privilege-escalation-with-kernel-exploit-8572-c/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1671-Reach the root! How to gain privileges in Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackmag.com/security/reach-the-root/" rel="nofollow"&gt;https://hackmag.com/security/reach-the-root/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1672-Enumeration for Linux Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0x00sec.org/t/enumeration-for-linux-privilege-escalation/1959" rel="nofollow"&gt;https://0x00sec.org/t/enumeration-for-linux-privilege-escalation/1959&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1673-Linux Privilege Escalation Scripts :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://netsec.ws/?p=309" rel="nofollow"&gt;https://netsec.ws/?p=309&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1674-Understanding Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.admin-magazine.com/Articles/Understanding-Privilege-Escalation" rel="nofollow"&gt;www.admin-magazine.com/Articles/Understanding-Privilege-Escalation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1675-Toppo:1 | Vulnhub Walkthrough:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/egghunter/toppo-1-vulnhub-walkthrough-c5f05358cf7d" rel="nofollow"&gt;https://medium.com/egghunter/toppo-1-vulnhub-walkthrough-c5f05358cf7d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1676-Privilege Escalation resources:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://forum.hackthebox.eu/discussion/1243/privilege-escalation-resources" rel="nofollow"&gt;https://forum.hackthebox.eu/discussion/1243/privilege-escalation-resources&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1678-OSCP Notes – Privilege Escalation (Linux):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securism.wordpress.com/oscp-notes-privilege-escalation-linux/" rel="nofollow"&gt;https://securism.wordpress.com/oscp-notes-privilege-escalation-linux/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1679-Udev Exploit Allows Local Privilege Escalation :&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.madirish.net/370" rel="nofollow"&gt;www.madirish.net/370&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1680-Understanding Linux Privilege Escalation and Defending Against It:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://linux-audit.com/understanding-linux-privilege-escalation-and-defending-againt-it" rel="nofollow"&gt;https://linux-audit.com/understanding-linux-privilege-escalation-and-defending-againt-it&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1681-Windows Privilege Escalation Using PowerShell:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hacknpentest.com/windows-privilege-escalation-using-powershell/" rel="nofollow"&gt;https://hacknpentest.com/windows-privilege-escalation-using-powershell/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1682-Privilege Escalation | Azeria Labs:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://azeria-labs.com/privilege-escalation/" rel="nofollow"&gt;https://azeria-labs.com/privilege-escalation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1683-Abusing SUDO (Linux Privilege Escalation):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://touhidshaikh.com/blog/?p=790" rel="nofollow"&gt;https://touhidshaikh.com/blog/?p=790&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1684-Privilege Escalation - Linux:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mysecurityjournal.blogspot.com/p/privilege-escalation-linux.html" rel="nofollow"&gt;https://mysecurityjournal.blogspot.com/p/privilege-escalation-linux.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1685-0day Linux Escalation Privilege Exploit Collection :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.spentera.id/0day-linux-escalation-privilege-exploit-collection/" rel="nofollow"&gt;https://blog.spentera.id/0day-linux-escalation-privilege-exploit-collection/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1686-Linux for Pentester: cp Privilege Escalation :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackin.co/articles/linux-for-pentester-cp-privilege-escalation.html" rel="nofollow"&gt;https://hackin.co/articles/linux-for-pentester-cp-privilege-escalation.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1687-Practical Privilege Escalation Using Meterpreter:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ethicalhackingblog.com/practical-privilege-escalation-using-meterpreter/" rel="nofollow"&gt;https://ethicalhackingblog.com/practical-privilege-escalation-using-meterpreter/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1688-dirty_sock: Linux Privilege Escalation (via snapd):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.redpacketsecurity.com/dirty_sock-linux-privilege-escalation-via-snapd/" rel="nofollow"&gt;https://www.redpacketsecurity.com/dirty_sock-linux-privilege-escalation-via-snapd/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1689-Linux privilege escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jok3rsecurity.com/linux-privilege-escalation/" rel="nofollow"&gt;https://jok3rsecurity.com/linux-privilege-escalation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1690-The Complete Meterpreter Guide | Privilege Escalation &amp;amp; Clearing Tracks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hsploit.com/the-complete-meterpreter-guide-privilege-escalation-clearing-tracks/" rel="nofollow"&gt;https://hsploit.com/the-complete-meterpreter-guide-privilege-escalation-clearing-tracks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1691-How to prepare for PWK/OSCP, a noob-friendly guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.abatchy.com/2017/03/how-to-prepare-for-pwkoscp-noob" rel="nofollow"&gt;https://www.abatchy.com/2017/03/how-to-prepare-for-pwkoscp-noob&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1692-Basic Linux privilege escalation by kernel exploits:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://greysec.net/showthread.php?tid=1355" rel="nofollow"&gt;https://greysec.net/showthread.php?tid=1355&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1693-Linux mount without root :&lt;/p&gt;
&lt;p&gt;epaymentamerica.com/tozkwje/xlvkawj2.php?trjsef=linux-mount-without-root&lt;/p&gt;
&lt;p&gt;-1694-Linux Privilege Escalation Oscp:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.condadorealty.com/2h442/linux-privilege-escalation-oscp.html" rel="nofollow"&gt;www.condadorealty.com/2h442/linux-privilege-escalation-oscp.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1695-Privilege Escalation Attack Tutorial:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://alhilalgroup.info/photography/privilege-escalation-attack-tutorial" rel="nofollow"&gt;https://alhilalgroup.info/photography/privilege-escalation-attack-tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1696-Oscp Bethany Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ilustrado.com.br/i8v7/7ogf.php?veac=oscp-bethany-privilege-escalation" rel="nofollow"&gt;https://ilustrado.com.br/i8v7/7ogf.php?veac=oscp-bethany-privilege-escalation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1697-Hacking a Website and Gaining Root Access using Dirty COW Exploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ethicalhackers.club/hacking-website-gaining-root-access-using-dirtycow-exploit/" rel="nofollow"&gt;https://ethicalhackers.club/hacking-website-gaining-root-access-using-dirtycow-exploit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1698-Privilege Escalation - Linux · Total OSCP Guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sushant747.gitbooks.io/total-oscp-guide/privilege_escalation_-_linux.html" rel="nofollow"&gt;https://sushant747.gitbooks.io/total-oscp-guide/privilege_escalation_-_linux.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1699-Linux advanced privilege escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/JameelNabbo/linux-advanced-privilege-escalation" rel="nofollow"&gt;https://www.slideshare.net/JameelNabbo/linux-advanced-privilege-escalation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1700-Local Linux privilege escalation overview:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://myexperiments.io/linux-privilege-escalation.html" rel="nofollow"&gt;https://myexperiments.io/linux-privilege-escalation.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1701-Windows Privilege Escalation Scripts &amp;amp; Techniques :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@rahmatnurfauzi/windows-privilege-escalation-scripts-techniques-30fa37bd194" rel="nofollow"&gt;https://medium.com/@rahmatnurfauzi/windows-privilege-escalation-scripts-techniques-30fa37bd194&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1702-Penetration Testing: Maintaining Access:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/penetration-testing-maintaining-access/" rel="nofollow"&gt;https://resources.infosecinstitute.com/penetration-testing-maintaining-access/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1703-Kali Linux Maintaining Access :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.tutorialspoint.com/kali_linux/kali_linux_maintaining_access.htm" rel="nofollow"&gt;https://www.tutorialspoint.com/kali_linux/kali_linux_maintaining_access.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1704-Best Open Source Tools for Maintaining Access &amp;amp; Tunneling:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://n0where.net/maintaining-access" rel="nofollow"&gt;https://n0where.net/maintaining-access&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1705-Maintaining Access Part 1: Introduction and Metasploit Example:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingloops.com/maintaining-access-metasploit/" rel="nofollow"&gt;https://www.hackingloops.com/maintaining-access-metasploit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1706-Maintaining Access - Ethical hacking and penetration testing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://miloserdov.org/?cat=143" rel="nofollow"&gt;https://miloserdov.org/?cat=143&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1707-Maintaining Access with Web Backdoors [Weevely]:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.yeahhub.com/maintaining-access-web-backdoors-weevely/" rel="nofollow"&gt;https://www.yeahhub.com/maintaining-access-web-backdoors-weevely/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1708-Best Open Source MITM Tools: Sniffing &amp;amp; Spoofing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://n0where.net/mitm-tools" rel="nofollow"&gt;https://n0where.net/mitm-tools&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1709-Cain and Abel - Man in the Middle (MITM) Attack Tool Explained:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cybersguards.com/cain-and-abel-man-in-the-middle-mitm-attack-tool-explained/" rel="nofollow"&gt;https://cybersguards.com/cain-and-abel-man-in-the-middle-mitm-attack-tool-explained/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1710-Man In The Middle Attack (MITM):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@nancyjohn.../man-in-the-middle-attack-mitm-114b53b2d987" rel="nofollow"&gt;https://medium.com/@nancyjohn.../man-in-the-middle-attack-mitm-114b53b2d987&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1711-Real-World Man-in-the-Middle (MITM) Attack :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ieeexplore.ieee.org/document/8500082" rel="nofollow"&gt;https://ieeexplore.ieee.org/document/8500082&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1712-The Ultimate Guide to Man in the Middle Attacks :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://doubleoctopus.com/blog/the-ultimate-guide-to-man-in-the-middle-mitm-attacks-and-how-to-prevent-them/" rel="nofollow"&gt;https://doubleoctopus.com/blog/the-ultimate-guide-to-man-in-the-middle-mitm-attacks-and-how-to-prevent-them/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1713-How to Conduct ARP Spoofing for MITM Attacks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://tutorialedge.net/security/arp-spoofing-for-mitm-attack-tutorial/" rel="nofollow"&gt;https://tutorialedge.net/security/arp-spoofing-for-mitm-attack-tutorial/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1714-How To Do A Man-in-the-Middle Attack Using ARP Spoofing &amp;amp; Poisoning:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/secjuice/man-in-the-middle-attack-using-arp-spoofing-fa13af4f4633" rel="nofollow"&gt;https://medium.com/secjuice/man-in-the-middle-attack-using-arp-spoofing-fa13af4f4633&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1715-Ettercap and middle-attacks tutorial :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pentestmag.com/ettercap-tutorial-for-windows/" rel="nofollow"&gt;https://pentestmag.com/ettercap-tutorial-for-windows/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1716-How To Setup A Man In The Middle Attack Using ARP Poisoning:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://online-it.nu/how-to-setup-a-man-in-the-middle-attack-using-arp-poisoning/" rel="nofollow"&gt;https://online-it.nu/how-to-setup-a-man-in-the-middle-attack-using-arp-poisoning/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1717-Intro to Wireshark and Man in the Middle Attacks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.commonlounge.com/discussion/2627e25558924f3fbb6e03f8f912a12d" rel="nofollow"&gt;https://www.commonlounge.com/discussion/2627e25558924f3fbb6e03f8f912a12d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1718-MiTM Attack with Ettercap:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackers-arise.com/single-post/2017/08/28/MiTM-Attack-with-Ettercap" rel="nofollow"&gt;https://www.hackers-arise.com/single-post/2017/08/28/MiTM-Attack-with-Ettercap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1719-Man in the Middle Attack with Websploit Framework:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.yeahhub.com/man-middle-attack-websploit-framework/" rel="nofollow"&gt;https://www.yeahhub.com/man-middle-attack-websploit-framework/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1720-SSH MitM Downgrade :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sites.google.com/site/clickdeathsquad/Home/cds-ssh-mitmdowngrade" rel="nofollow"&gt;https://sites.google.com/site/clickdeathsquad/Home/cds-ssh-mitmdowngrade&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1721-How to use Netcat for Listening, Banner Grabbing and Transferring Files:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.yeahhub.com/use-netcat-listening-banner-grabbing-transferring-files/" rel="nofollow"&gt;https://www.yeahhub.com/use-netcat-listening-banner-grabbing-transferring-files/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1722-Powershell port scanner and banner grabber:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.linkedin.com/pulse/powershell-port-scanner-banner-grabber-jeremy-martin/" rel="nofollow"&gt;https://www.linkedin.com/pulse/powershell-port-scanner-banner-grabber-jeremy-martin/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1723-What is banner grabbing attack:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://rxkjftu.ga/sport/what-is-banner-grabbing-attack.php" rel="nofollow"&gt;https://rxkjftu.ga/sport/what-is-banner-grabbing-attack.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1724-Network penetration testing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://guif.re/networkpentest" rel="nofollow"&gt;https://guif.re/networkpentest&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1725-NMAP Cheatsheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://redteamtutorials.com/2018/10/14/nmap-cheatsheet/" rel="nofollow"&gt;https://redteamtutorials.com/2018/10/14/nmap-cheatsheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1726-How To Scan a Network With Nmap:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://online-it.nu/how-to-scan-a-network-with-nmap/" rel="nofollow"&gt;https://online-it.nu/how-to-scan-a-network-with-nmap/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1727-Hacking Metasploitable : Scanning and Banner grabbing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://hackercool.com/2015/11/hacking-metasploitable-scanning-banner-grabbing/" rel="nofollow"&gt;https://hackercool.com/2015/11/hacking-metasploitable-scanning-banner-grabbing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1728-Penetration Testing of an FTP Server:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://shahmeeramir.com/penetration-testing-of-an-ftp-server-19afe538be4b" rel="nofollow"&gt;https://shahmeeramir.com/penetration-testing-of-an-ftp-server-19afe538be4b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1729-Nmap Usage &amp;amp; Cheet-Sheet:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://aerroweb.wordpress.com/2018/03/14/namp-cheat-sheet/" rel="nofollow"&gt;https://aerroweb.wordpress.com/2018/03/14/namp-cheat-sheet/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1730-Discovering SSH Host Keys with NMAP:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mwhubbard.blogspot.com/2015/03/discovering-ssh-host-keys-with-nmap.html" rel="nofollow"&gt;https://mwhubbard.blogspot.com/2015/03/discovering-ssh-host-keys-with-nmap.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1731-Banner Grabbing using Nmap &amp;amp; NetCat - Detailed Explanation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://techincidents.com/banner-grabbing-using-nmap-netcat" rel="nofollow"&gt;https://techincidents.com/banner-grabbing-using-nmap-netcat&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1732-Nmap – (Vulnerability Discovery):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://crazybulletctfwriteups.wordpress.com/2015/09/5/nmap-vulnerability-discovery/" rel="nofollow"&gt;https://crazybulletctfwriteups.wordpress.com/2015/09/5/nmap-vulnerability-discovery/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1733-Penetration Testing on MYSQL (Port 3306):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/penetration-testing-on-mysql-port-3306/" rel="nofollow"&gt;https://www.hackingarticles.in/penetration-testing-on-mysql-port-3306/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1774-Password Spraying - Infosec Resources :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://resources.infosecinstitute.com/password-spraying/" rel="nofollow"&gt;https://resources.infosecinstitute.com/password-spraying/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1775-Password Spraying- Common mistakes and how to avoid them:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@adam.toscher/password-spraying-common-mistakes-and-how-to-avoid-them-3fd16b1a352b" rel="nofollow"&gt;https://medium.com/@adam.toscher/password-spraying-common-mistakes-and-how-to-avoid-them-3fd16b1a352b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1776-Password Spraying Tutorial:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://attack.stealthbits.com/password-spraying-tutorial-defense" rel="nofollow"&gt;https://attack.stealthbits.com/password-spraying-tutorial-defense&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1777-password spraying Archives:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.blackhillsinfosec.com/tag/password-spraying/" rel="nofollow"&gt;https://www.blackhillsinfosec.com/tag/password-spraying/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1778-The 21 Best Email Finding Tools::&lt;/p&gt;
&lt;p&gt;&lt;a href="https://beamery.com/blog/find-email-addresses" rel="nofollow"&gt;https://beamery.com/blog/find-email-addresses&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1779-OSINT Primer: People (Part 2):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0xpatrik.com/osint-people/" rel="nofollow"&gt;https://0xpatrik.com/osint-people/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1780-Discovering Hidden Email Gateways with OSINT Techniques:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.ironbastion.com.au/discovering-hidden-email-servers-with-osint-part-2/" rel="nofollow"&gt;https://blog.ironbastion.com.au/discovering-hidden-email-servers-with-osint-part-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1781-Top 20 Data Reconnaissance and Intel Gathering Tools :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securitytrails.com/blog/top-20-intel-tools" rel="nofollow"&gt;https://securitytrails.com/blog/top-20-intel-tools&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1782-101+ OSINT Resources for Investigators [2019]:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://i-sight.com/resources/101-osint-resources-for-investigators/" rel="nofollow"&gt;https://i-sight.com/resources/101-osint-resources-for-investigators/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1783-Digging Through Someones Past Using OSINT:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://nullsweep.com/digging-through-someones-past-using-osint/" rel="nofollow"&gt;https://nullsweep.com/digging-through-someones-past-using-osint/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1784-Gathering Open Source Intelligence:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://posts.specterops.io/gathering-open-source-intelligence-bee58de48e05" rel="nofollow"&gt;https://posts.specterops.io/gathering-open-source-intelligence-bee58de48e05&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1785-How to Locate the Person Behind an Email Address:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.sourcecon.com/how-to-locate-the-person-behind-an-email-address/" rel="nofollow"&gt;https://www.sourcecon.com/how-to-locate-the-person-behind-an-email-address/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1786-Find hacked email addresses and check breach mails:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.securitynewspaper.com/2019/01/16/find-hacked-email-addresses/" rel="nofollow"&gt;https://www.securitynewspaper.com/2019/01/16/find-hacked-email-addresses/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1787-A Pentester's Guide - Part 3 (OSINT, Breach Dumps, &amp;amp; Password :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://delta.navisec.io/osint-for-pentesters-part-3-password-spraying-methodology/" rel="nofollow"&gt;https://delta.navisec.io/osint-for-pentesters-part-3-password-spraying-methodology/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1788-Top 10 OSINT Tools/Sources for Security Folks:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.snoopysecurity.github.io/osint/2018/08/02/10_OSINT_for_security_folks.html" rel="nofollow"&gt;www.snoopysecurity.github.io/osint/2018/08/02/10_OSINT_for_security_folks.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1789-Top 5 Open Source OSINT Tools for a Penetration Tester:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.breachlock.com/top-5-open-source-osint-tools/" rel="nofollow"&gt;https://www.breachlock.com/top-5-open-source-osint-tools/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1790-Open Source Intelligence tools for social media: my own list:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.andreafortuna.org/2017/03/20/open-source-intelligence-tools-for-social-media-my-own-list/" rel="nofollow"&gt;https://www.andreafortuna.org/2017/03/20/open-source-intelligence-tools-for-social-media-my-own-list/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1791-Red Teaming: I can see you! Insights from an InfoSec expert :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.perspectiverisk.com/i-can-see-you-osint/" rel="nofollow"&gt;https://www.perspectiverisk.com/i-can-see-you-osint/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1792-OSINT Playbook for Recruiters:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://amazinghiring.com/osint-playbook/" rel="nofollow"&gt;https://amazinghiring.com/osint-playbook/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1793- Links for Doxing, Personal OSInt, Profiling, Footprinting, Cyberstalking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.irongeek.com/i.php?page=security/doxing-footprinting-cyberstalking" rel="nofollow"&gt;https://www.irongeek.com/i.php?page=security/doxing-footprinting-cyberstalking&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1794-Open Source Intelligence Gathering 201 (Covering 12 additional techniques):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.appsecco.com/open-source-intelligence-gathering-201-covering-12-additional-techniques-b76417b5a544?gi=2afe435c630a" rel="nofollow"&gt;https://blog.appsecco.com/open-source-intelligence-gathering-201-covering-12-additional-techniques-b76417b5a544?gi=2afe435c630a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1795-Online Investigative Tools for Social Media Discovery and Locating People:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://4thetruth.info/colorado-private-investigator-online-detective-social-media-and-online-people-search-online-search-tools.html" rel="nofollow"&gt;https://4thetruth.info/colorado-private-investigator-online-detective-social-media-and-online-people-search-online-search-tools.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1796-Expanding Skype Forensics with OSINT: Email Accounts:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.automatingosint.com/blog/2016/05/expanding-skype-forensics-with-osint-email-accounts/" rel="nofollow"&gt;http://www.automatingosint.com/blog/2016/05/expanding-skype-forensics-with-osint-email-accounts/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1798-2019 OSINT Guide:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.randhome.io/blog/2019/01/05/2019-osint-guide/" rel="nofollow"&gt;https://www.randhome.io/blog/2019/01/05/2019-osint-guide/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1799-OSINT - Passive Recon and Discovery of Assets:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0x00sec.org/t/osint-passive-recon-and-discovery-of-assets/6715" rel="nofollow"&gt;https://0x00sec.org/t/osint-passive-recon-and-discovery-of-assets/6715&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1800-OSINT With Datasploit:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dzone.com/articles/osint-with-datasploit" rel="nofollow"&gt;https://dzone.com/articles/osint-with-datasploit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1801-Building an OSINT Reconnaissance Tool from Scratch:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@SundownDEV/phone-number-scanning-osint-recon-tool-6ad8f0cac27b" rel="nofollow"&gt;https://medium.com/@SundownDEV/phone-number-scanning-osint-recon-tool-6ad8f0cac27b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1802-Find Identifying Information from a Phone Number Using OSINT Tools:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://null-byte.wonderhowto.com/how-to/find-identifying-information-from-phone-number-using-osint-tools-0195472/" rel="nofollow"&gt;https://null-byte.wonderhowto.com/how-to/find-identifying-information-from-phone-number-using-osint-tools-0195472/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1803-Find Details Of any Mobile Number, Email ID, IP Address in the world (Step By Step):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.securitynewspaper.com/2019/05/02/find-details-of-any-mobile-number-email-id-ip-address-in-the-world-step-by-step/" rel="nofollow"&gt;https://www.securitynewspaper.com/2019/05/02/find-details-of-any-mobile-number-email-id-ip-address-in-the-world-step-by-step/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1804-Investigative tools for finding people online and keeping yourself safe:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ijnet.org/en/story/investigative-tools-finding-people-online-and-keeping-yourself-safe" rel="nofollow"&gt;https://ijnet.org/en/story/investigative-tools-finding-people-online-and-keeping-yourself-safe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1805- Full text of "The Hacker Playbook 2 Practical Guide To Penetration Testing By Peter Kim":&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/stream/TheHackerPlaybook2PracticalGuideToPenetrationTestingByPeterKim/The%20Hacker%20Playbook%202%20-%20Practical%20Guide%20To%20Penetration%20Testing%20By%20Peter%20Kim_djvu.txt" rel="nofollow"&gt;https://archive.org/stream/TheHackerPlaybook2PracticalGuideToPenetrationTestingByPeterKim/The%20Hacker%20Playbook%202%20-%20Practical%20Guide%20To%20Penetration%20Testing%20By%20Peter%20Kim_djvu.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1806-The Internet Archive offers over 15,000,000 freely downloadable books and texts. There is also a collection of 550,000 modern eBooks that may be borrowed by anyone with a free archive.org account:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://archive.org/details/texts?and%5B%5D=hacking&amp;amp;sin=" rel="nofollow"&gt;https://archive.org/details/texts?and%5B%5D=hacking&amp;amp;sin=&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1807-Exploiting SSRF like a Boss — Escalation of an SSRF to Local File Read!:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@zain.sabahat/exploiting-ssrf-like-a-boss-c090dc63d326" rel="nofollow"&gt;https://medium.com/@zain.sabahat/exploiting-ssrf-like-a-boss-c090dc63d326&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1808-How to Pass OSCP Like Boss:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@parthdeshani/how-to-pass-oscp-like-boss-b269f2ea99d" rel="nofollow"&gt;https://medium.com/@parthdeshani/how-to-pass-oscp-like-boss-b269f2ea99d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1809-Deploy a private Burp Collaborator Server in Azure:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/deploy-a-private-burp-collaborator-server-in-azure-f0d932ae1d70" rel="nofollow"&gt;https://medium.com/bugbountywriteup/deploy-a-private-burp-collaborator-server-in-azure-f0d932ae1d70&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1810-Using Shodan Better Way! :):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/using-shodan-better-way-b40f330e45f6" rel="nofollow"&gt;https://medium.com/bugbountywriteup/using-shodan-better-way-b40f330e45f6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1811-How To Do Your Reconnaissance Properly Before Chasing A Bug Bounty:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/guide-to-basic-recon-bug-bounties-recon-728c5242a115" rel="nofollow"&gt;https://medium.com/bugbountywriteup/guide-to-basic-recon-bug-bounties-recon-728c5242a115&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1812-How we got LFI in apache Drill (Recon like a boss)::&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/how-we-got-lfi-in-apache-drill-recon-like-a-boss-6f739a79d87d" rel="nofollow"&gt;https://medium.com/bugbountywriteup/how-we-got-lfi-in-apache-drill-recon-like-a-boss-6f739a79d87d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1813-Chaining Self XSS with UI Redressing is Leading to Session Hijacking:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/chaining-self-xss-with-ui-redressing-is-leading-to-session-hijacking-pwn-users-like-a-boss-efb46249cd14" rel="nofollow"&gt;https://medium.com/bugbountywriteup/chaining-self-xss-with-ui-redressing-is-leading-to-session-hijacking-pwn-users-like-a-boss-efb46249cd14&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1814-Week in OSINT #2019–19:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/week-in-osint/week-in-osint-2019-18-1975fb8ea43a4" rel="nofollow"&gt;https://medium.com/week-in-osint/week-in-osint-2019-18-1975fb8ea43a4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1814-Week in OSINT #2019–02:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/week-in-osint/week-in-osint-2019-02-d4009c27e85f" rel="nofollow"&gt;https://medium.com/week-in-osint/week-in-osint-2019-02-d4009c27e85f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1815-Week in OSINT #2019–24:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/week-in-osint/week-in-osint-2019-24-4fcd17ca908f" rel="nofollow"&gt;https://medium.com/week-in-osint/week-in-osint-2019-24-4fcd17ca908f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1816-Page Admin Disclosure | Facebook Bug Bounty 2019:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/page-admin-disclosure-facebook-bug-bounty-2019-ee9920e768eb" rel="nofollow"&gt;https://medium.com/bugbountywriteup/page-admin-disclosure-facebook-bug-bounty-2019-ee9920e768eb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1817-XSS in Edmodo within 5 Minute (My First Bug Bounty):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@valakeyur/xss-in-edmodo-within-5-minute-my-first-bug-bounty-889e3da6167d" rel="nofollow"&gt;https://medium.com/@valakeyur/xss-in-edmodo-within-5-minute-my-first-bug-bounty-889e3da6167d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1818-Collection Of Bug Bounty Tip-Will Be updated daily:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@vignesh4303/collection-of-bug-bounty-tip-will-be-updated-daily-605911cfa248" rel="nofollow"&gt;https://medium.com/@vignesh4303/collection-of-bug-bounty-tip-will-be-updated-daily-605911cfa248&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1819-A Unique XSS Scenario in SmartSheet || $1000 bounty.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@rohanchavan/a-unique-xss-scenario-1000-bounty-347f8f92fcc6" rel="nofollow"&gt;https://medium.com/@rohanchavan/a-unique-xss-scenario-1000-bounty-347f8f92fcc6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1820-How I found a simple bug in Facebook without any Test:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/how-i-found-a-simple-bug-in-facebook-without-any-test-3bc8cf5e2ca2" rel="nofollow"&gt;https://medium.com/bugbountywriteup/how-i-found-a-simple-bug-in-facebook-without-any-test-3bc8cf5e2ca2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1821-Facebook BugBounty — Disclosing page members:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@tnirmalz/facebook-bugbounty-disclosing-page-members-1178595cc520" rel="nofollow"&gt;https://medium.com/@tnirmalz/facebook-bugbounty-disclosing-page-members-1178595cc520&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1822-Don’t underestimates the Errors They can provide good $$$ Bounty!:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@noob.assassin/dont-underestimates-the-errors-they-can-provide-good-bounty-d437ecca6596" rel="nofollow"&gt;https://medium.com/@noob.assassin/dont-underestimates-the-errors-they-can-provide-good-bounty-d437ecca6596&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1823-Django and Web Security Headers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@ksarthak4ever/django-and-web-security-headers-d72a9e54155e" rel="nofollow"&gt;https://medium.com/@ksarthak4ever/django-and-web-security-headers-d72a9e54155e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1824-Weaponising Staged Cross-Site Scripting (XSS) Payloads:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/redteam/weaponising-staged-cross-site-scripting-xss-payloads-7b917f605800" rel="nofollow"&gt;https://medium.com/redteam/weaponising-staged-cross-site-scripting-xss-payloads-7b917f605800&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1825-How I was able to Bypass XSS Protection on HackerOne’s Private Program:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@vulnerabilitylabs/how-i-was-able-to-bypass-xss-protection-on-hackerones-private-program-8914a31339a9" rel="nofollow"&gt;https://medium.com/@vulnerabilitylabs/how-i-was-able-to-bypass-xss-protection-on-hackerones-private-program-8914a31339a9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1826-XSS in Microsoft subdomain:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.usejournal.com/xss-in-microsoft-subdomain-81c4e46d6631" rel="nofollow"&gt;https://blog.usejournal.com/xss-in-microsoft-subdomain-81c4e46d6631&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1827-How Angular Protects Us From XSS Attacks?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/hackernoon/how-angular-protects-us-from-xss-attacks-3cb7a7d49d95" rel="nofollow"&gt;https://medium.com/hackernoon/how-angular-protects-us-from-xss-attacks-3cb7a7d49d95&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1828-[FUN] Bypass XSS Detection WAF:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/soulsecteam/fun-bypass-xss-detection-waf-cabd431e030e" rel="nofollow"&gt;https://medium.com/soulsecteam/fun-bypass-xss-detection-waf-cabd431e030e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1829-Bug Hunting Methodology(Part-2):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.usejournal.com/bug-hunting-methodology-part-2-5579dac06150" rel="nofollow"&gt;https://blog.usejournal.com/bug-hunting-methodology-part-2-5579dac06150&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1830-Learn Web Application Penetration Testing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.usejournal.com/web-application-penetration-testing-9fbf7533b361" rel="nofollow"&gt;https://blog.usejournal.com/web-application-penetration-testing-9fbf7533b361&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1831-“Exploiting a Single Parameter”:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/securitywall/exploiting-a-single-parameter-6f4ba2acf523" rel="nofollow"&gt;https://medium.com/securitywall/exploiting-a-single-parameter-6f4ba2acf523&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1832-CORS To CSRF Attack:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.usejournal.com/cors-to-csrf-attack-c33a595d441" rel="nofollow"&gt;https://blog.usejournal.com/cors-to-csrf-attack-c33a595d441&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1833-Account Takeover Using CSRF(json-based):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@shub66452/account-takeover-using-csrf-json-based-a0e6efd1bffc" rel="nofollow"&gt;https://medium.com/@shub66452/account-takeover-using-csrf-json-based-a0e6efd1bffc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1834-Bypassing Anti-CSRF with Burp Suite Session Handling:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bestestredteam.com/tag/anti-csrf/" rel="nofollow"&gt;https://bestestredteam.com/tag/anti-csrf/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1835-10 Methods to Bypass Cross Site Request Forgery (CSRF):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://haiderm.com/10-methods-to-bypass-cross-site-request-forgery-csrf/" rel="nofollow"&gt;https://haiderm.com/10-methods-to-bypass-cross-site-request-forgery-csrf/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1836-Exploiting CSRF on JSON endpoints with Flash and redirects:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/681d4ad6b31b" rel="nofollow"&gt;https://medium.com/p/681d4ad6b31b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1837-Finding and exploiting Cross-site request forgery (CSRF):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://securityonline.info/finding-exploiting-cross-site-request-forgery/" rel="nofollow"&gt;https://securityonline.info/finding-exploiting-cross-site-request-forgery/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1838-Hacking Facebook accounts using CSRF in Oculus-Facebook integration:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.josipfranjkovic.com/blog/hacking-facebook-oculus-integration-csrf" rel="nofollow"&gt;https://www.josipfranjkovic.com/blog/hacking-facebook-oculus-integration-csrf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1839-Synchronizer Token Pattern: No more tricks:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/p/d2af836ccf71" rel="nofollow"&gt;https://medium.com/p/d2af836ccf71&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1840-The $12,000 Intersection between Clickjacking, XSS, and Denial of Service:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@imashishmathur/the-12-000-intersection-between-clickjacking-xss-and-denial-of-service-f8cdb3c5e6d1" rel="nofollow"&gt;https://medium.com/@imashishmathur/the-12-000-intersection-between-clickjacking-xss-and-denial-of-service-f8cdb3c5e6d1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1841-XML External Entity(XXE):&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@ghostlulzhacks/xml-external-entity-xxe-62bcd1555b7b" rel="nofollow"&gt;https://medium.com/@ghostlulzhacks/xml-external-entity-xxe-62bcd1555b7b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1842-XXE Attacks— Part 1: XML Basics:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@klose7/https-medium-com-klose7-xxe-attacks-part-1-xml-basics-6fa803da9f26" rel="nofollow"&gt;https://medium.com/@klose7/https-medium-com-klose7-xxe-attacks-part-1-xml-basics-6fa803da9f26&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1843-From XXE to RCE with PHP/expect — The Missing Link:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@airman604/from-xxe-to-rce-with-php-expect-the-missing-link-a18c265ea4c7" rel="nofollow"&gt;https://medium.com/@airman604/from-xxe-to-rce-with-php-expect-the-missing-link-a18c265ea4c7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1844-My first XML External Entity (XXE) attack with .gpx file:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@valeriyshevchenko/my-first-xml-external-entity-xxe-attack-with-gpx-file-5ca78da9ae98" rel="nofollow"&gt;https://medium.com/@valeriyshevchenko/my-first-xml-external-entity-xxe-attack-with-gpx-file-5ca78da9ae98&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1845-Open Redirects &amp;amp; Security Done Right!:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@AkshaySharmaUS/open-redirects-security-done-right-e524a3185496" rel="nofollow"&gt;https://medium.com/@AkshaySharmaUS/open-redirects-security-done-right-e524a3185496&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1846-XXE on Windows system …then what ??:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@canavaroxum/xxe-on-windows-system-then-what-76d571d66745" rel="nofollow"&gt;https://medium.com/@canavaroxum/xxe-on-windows-system-then-what-76d571d66745&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1847-Unauthenticated Blind SSRF in Oracle EBS CVE-2018-3167:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@x41x41x41/unauthenticated-ssrf-in-oracle-ebs-765bd789a145" rel="nofollow"&gt;https://medium.com/@x41x41x41/unauthenticated-ssrf-in-oracle-ebs-765bd789a145&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1848-SVG XLink SSRF fingerprinting libraries version:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@arbazhussain/svg-xlink-ssrf-fingerprinting-libraries-version-450ebecc2f3c" rel="nofollow"&gt;https://medium.com/@arbazhussain/svg-xlink-ssrf-fingerprinting-libraries-version-450ebecc2f3c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1849-What is XML Injection Attack:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@dahiya.aj12/what-is-xml-injection-attack-279691bd00b6" rel="nofollow"&gt;https://medium.com/@dahiya.aj12/what-is-xml-injection-attack-279691bd00b6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1850-SSRF - Server Side Request Forgery (Types and ways to exploit it) Part-1:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@madrobot/ssrf-server-side-request-forgery-types-and-ways-to-exploit-it-part-1-29d034c27978" rel="nofollow"&gt;https://medium.com/@madrobot/ssrf-server-side-request-forgery-types-and-ways-to-exploit-it-part-1-29d034c27978&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1851-Penetration Testing Introduction: Scanning &amp;amp; Reconnaissance:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/cyberdefenders/penetration-testing-introduction-scanning-reconnaissance-f865af0761f" rel="nofollow"&gt;https://medium.com/cyberdefenders/penetration-testing-introduction-scanning-reconnaissance-f865af0761f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1852-Beginner’s Guide to recon automation.:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/beginners-guide-to-recon-automation-f95b317c6dbb" rel="nofollow"&gt;https://medium.com/bugbountywriteup/beginners-guide-to-recon-automation-f95b317c6dbb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1853-Red Teamer’s Guide to Pulse Secure SSL VPN:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/pulse-secure-ssl-vpn-post-auth-rce-to-ssh-shell-2b497d35c35b" rel="nofollow"&gt;https://medium.com/bugbountywriteup/pulse-secure-ssl-vpn-post-auth-rce-to-ssh-shell-2b497d35c35b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1854-CVE-2019-15092 WordPress Plugin Import Export Users = 1.3.0 - CSV Injection:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/cve-2019-15092-wordpress-plugin-import-export-users-1-3-0-csv-injection-b5cc14535787" rel="nofollow"&gt;https://medium.com/bugbountywriteup/cve-2019-15092-wordpress-plugin-import-export-users-1-3-0-csv-injection-b5cc14535787&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1855-How I harvested Facebook credentials via free wifi?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/how-i-harvested-facebook-credentials-via-free-wifi-5da6bdcae049" rel="nofollow"&gt;https://medium.com/bugbountywriteup/how-i-harvested-facebook-credentials-via-free-wifi-5da6bdcae049&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1856-How to hack any Payment Gateway?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/how-to-hack-any-payment-gateway-1ae2f0c6cbe5" rel="nofollow"&gt;https://medium.com/bugbountywriteup/how-to-hack-any-payment-gateway-1ae2f0c6cbe5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1857-How I hacked into my neighbour’s WiFi and harvested login credentials?:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/how-i-hacked-into-my-neighbours-wifi-and-harvested-credentials-487fab106bfc" rel="nofollow"&gt;https://medium.com/bugbountywriteup/how-i-hacked-into-my-neighbours-wifi-and-harvested-credentials-487fab106bfc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1858-What do Netcat, SMTP and self XSS have in common? Stored XSS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/what-do-netcat-smtp-and-self-xss-have-in-common-stored-xss-a05648b72002" rel="nofollow"&gt;https://medium.com/bugbountywriteup/what-do-netcat-smtp-and-self-xss-have-in-common-stored-xss-a05648b72002&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1859-1-Click Account Takeover in Virgool.io — a Nice Case Study:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/1-click-account-takeover-in-virgool-io-a-nice-case-study-6bfc3cb98ef2" rel="nofollow"&gt;https://medium.com/bugbountywriteup/1-click-account-takeover-in-virgool-io-a-nice-case-study-6bfc3cb98ef2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1860-Digging into Android Applications — Part 1 — Drozer + Burp:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/bugbountywriteup/digging-android-applications-part-1-drozer-burp-4fd4730d1cf2" rel="nofollow"&gt;https://medium.com/bugbountywriteup/digging-android-applications-part-1-drozer-burp-4fd4730d1cf2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1861-Linux for Pentester: APT Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/linux-for-pentester-apt-privilege-escalation" rel="nofollow"&gt;https://www.hackingarticles.in/linux-for-pentester-apt-privilege-escalation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1862-Linux for Pentester : ZIP Privilege Escalation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/linux-for-pentester-zip-privilege-escalation" rel="nofollow"&gt;https://www.hackingarticles.in/linux-for-pentester-zip-privilege-escalation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1863-Koadic - COM Command &amp;amp; Control Framework:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/koadic-com-command-control-framework" rel="nofollow"&gt;https://www.hackingarticles.in/koadic-com-command-control-framework&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1864-Configure Sqlmap for WEB-GUI in Kali Linux :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/configure-sqlmap-for-web-gui-in-kali-linux" rel="nofollow"&gt;https://www.hackingarticles.in/configure-sqlmap-for-web-gui-in-kali-linux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1865-Penetration Testing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.hackingarticles.in/Penetration-Testing" rel="nofollow"&gt;https://www.hackingarticles.in/Penetration-Testing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1866-Buffer Overflow Examples, Code execution by shellcode :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://0xrick.github.io/binary-exploitation/bof5" rel="nofollow"&gt;https://0xrick.github.io/binary-exploitation/bof5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1867-Dynamic Shellcode Execution:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.countercept.com/blog/dynamic-shellcode-execution" rel="nofollow"&gt;https://www.countercept.com/blog/dynamic-shellcode-execution&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1868-JSC Exploits:&lt;/p&gt;
&lt;p&gt;-&lt;a href="https://googleprojectzero.blogspot.com/2019/08/jsc-exploits.html" rel="nofollow"&gt;https://googleprojectzero.blogspot.com/2019/08/jsc-exploits.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1869-Injecting Into The Hunt:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jsecurity101.com/2019/Injecting-Into-The-Hunt" rel="nofollow"&gt;https://jsecurity101.com/2019/Injecting-Into-The-Hunt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1870-Bypassing Antivirus with Golang:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.jumpsec.com/2019/06/20/bypassing-antivirus-with-golang-gopher.it" rel="nofollow"&gt;https://labs.jumpsec.com/2019/06/20/bypassing-antivirus-with-golang-gopher.it&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1871-Windows Process Injection: Print Spooler:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://modexp.wordpress.com/2019/03/07/process-injection-print-spooler" rel="nofollow"&gt;https://modexp.wordpress.com/2019/03/07/process-injection-print-spooler&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1872-Inject Shellcode Into Memory Using Unicorn :&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ethicalhackingguru.com/inject-shellcode-memory-using-unicorn" rel="nofollow"&gt;https://ethicalhackingguru.com/inject-shellcode-memory-using-unicorn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1873-Macros and More with SharpShooter v2.0:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.mdsec.co.uk/2019/02/macros-and-more-with-sharpshooter-v2-0" rel="nofollow"&gt;https://www.mdsec.co.uk/2019/02/macros-and-more-with-sharpshooter-v2-0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1874-Fuzz Testing(Fuzzing) Tutorial: What is, Types, Tools &amp;amp; Example:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.guru99.com/fuzz-testing" rel="nofollow"&gt;https://www.guru99.com/fuzz-testing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-1875-Introduction to File Format Fuzzing &amp;amp; Exploitation:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com/@DanielC7/introduction-to-file-format-fuzzing-exploitation-922143ab2ab3" rel="nofollow"&gt;https://medium.com/@DanielC7/introduction-to-file-format-fuzzing-exploitation-922143ab2ab3&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>blaCCkHatHacEEkr</author><guid isPermaLink="false">https://github.com/blaCCkHatHacEEkr/PENTESTING-BIBLE</guid><pubDate>Tue, 19 Nov 2019 00:10:00 GMT</pubDate></item><item><title>brave/brave-browser #11 in All Languages, This week</title><link>https://github.com/brave/brave-browser</link><description>&lt;p&gt;&lt;i&gt;Next generation Brave browser for macOS, Windows, Linux, and eventually Android&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-brave-browser" class="anchor" aria-hidden="true" href="#brave-browser"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Brave Browser&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;This repository holds the build tools needed to build the Brave desktop browser for macOS, Windows, and Linux.  In particular, it fetches and syncs code from the projects we define in &lt;code&gt;package.json&lt;/code&gt; and &lt;code&gt;src/brave/DEPS&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://chromium.googlesource.com/chromium/src.git" rel="nofollow"&gt;Chromium&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Fetches code via &lt;code&gt;depot_tools&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;sets the branch for Chromium (ex: 65.0.3325.181).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/brave/brave-core"&gt;brave-core&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Mounted at &lt;code&gt;src/brave&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Maintains patches for 3rd party Chromium code.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/brave/ad-block"&gt;ad-block&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Mounted at &lt;code&gt;src/brave/vendor/ad-block&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Implements Brave's ad-block engine.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/brave/tracking-protection"&gt;tracking-protection&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Mounted at &lt;code&gt;src/brave/vendor/tracking-protection&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Implements Brave's tracking-protection engine.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-build-instructions" class="anchor" aria-hidden="true" href="#build-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build instructions&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://github.com/brave/brave-browser/wiki"&gt;Brave Wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-downloads" class="anchor" aria-hidden="true" href="#downloads"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Downloads&lt;/h2&gt;
&lt;p&gt;You can &lt;a href="https://brave.com/download" rel="nofollow"&gt;visit our website&lt;/a&gt; to get the latest stable release.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-other-repositories" class="anchor" aria-hidden="true" href="#other-repositories"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other repositories&lt;/h2&gt;
&lt;p&gt;For other versions of our browser, please see:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;iOS - &lt;a href="https://github.com/brave/brave-ios"&gt;brave/brave-ios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Android - &lt;a href="https://github.com/brave/browser-android-tabs"&gt;brave/browser-android-tabs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://community.brave.com/" rel="nofollow"&gt;Join the Q&amp;amp;A community&lt;/a&gt; if you'd like to get more involved with Brave. You can &lt;a href="https://community.brave.com/c/support-and-troubleshooting" rel="nofollow"&gt;ask for help&lt;/a&gt;,
&lt;a href="https://community.brave.com/c/brave-feature-requests" rel="nofollow"&gt;discuss features you'd like to see&lt;/a&gt;, and a lot more. We'd love to have your help so that we can continue improving Brave.&lt;/p&gt;
&lt;p&gt;Help us translate Brave to your language by submitting translations at &lt;a href="https://www.transifex.com/brave/brave/" rel="nofollow"&gt;https://www.transifex.com/brave/brave/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Follow &lt;a href="https://twitter.com/brave" rel="nofollow"&gt;@brave&lt;/a&gt; on Twitter for important news and announcements.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>brave</author><guid isPermaLink="false">https://github.com/brave/brave-browser</guid><pubDate>Tue, 19 Nov 2019 00:11:00 GMT</pubDate></item><item><title>goldbergyoni/nodebestpractices #12 in All Languages, This week</title><link>https://github.com/goldbergyoni/nodebestpractices</link><description>&lt;p&gt;&lt;i&gt;:white_check_mark: The largest Node.js best practices list (November 2019)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-nodejs-best-practices" class="anchor" aria-hidden="true" href="#nodejs-best-practices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Node.js Best Practices&lt;/h1&gt;
&lt;h1 align="center"&gt;&lt;a id="user-content---" class="anchor" aria-hidden="true" href="#--"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="assets/images/banner-2.jpg"&gt;&lt;img src="assets/images/banner-2.jpg" alt="Node.js Best Practices" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;br&gt;
&lt;div align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/02ea898a10ab234faffada0b737a2b34f769c438/68747470733a2f2f696d672e736869656c64732e696f2f62616467652fe29a992532304974656d253230636f756e742532302d2532303835253230426573742532305072616374696365732d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/02ea898a10ab234faffada0b737a2b34f769c438/68747470733a2f2f696d672e736869656c64732e696f2f62616467652fe29a992532304974656d253230636f756e742532302d2532303835253230426573742532305072616374696365732d626c75652e737667" alt="85 items" data-canonical-src="https://img.shields.io/badge/⚙%20Item%20count%20-%2085%20Best%20Practices-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/3094093aaeb4fdf53639898e57d107b4ba686a19/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539332538352532304c6173742532307570646174652532302d2532304e6f76656d6265722532303132253230323031392d677265656e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/3094093aaeb4fdf53639898e57d107b4ba686a19/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539332538352532304c6173742532307570646174652532302d2532304e6f76656d6265722532303132253230323031392d677265656e2e737667" alt="Last update: Oct 12, 2019" data-canonical-src="https://img.shields.io/badge/%F0%9F%93%85%20Last%20update%20-%20November%2012%202019-green.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e97f04010aeead4f218d480b8630047d0fd6c59d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2025453225394325393425323055706461746564253230466f7225323056657273696f6e2532302d2532304e6f646525323031322e31322e302d627269676874677265656e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/e97f04010aeead4f218d480b8630047d0fd6c59d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2025453225394325393425323055706461746564253230466f7225323056657273696f6e2532302d2532304e6f646525323031322e31322e302d627269676874677265656e2e737667" alt="Updated for Node 12.12.0" data-canonical-src="https://img.shields.io/badge/ %E2%9C%94%20Updated%20For%20Version%20-%20Node%2012.12.0-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;&lt;a href="https://twitter.com/nodepractices/" rel="nofollow"&gt;&lt;img src="/assets/images/twitter-s.png" alt="nodepractices" style="max-width:100%;"&gt;&lt;/a&gt; &lt;strong&gt;Follow us on Twitter!&lt;/strong&gt; &lt;a href="https://twitter.com/nodepractices/" rel="nofollow"&gt;&lt;strong&gt;@nodepractices&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Read in a different language: &lt;a href="/README.chinese.md"&gt;&lt;img src="/assets/flags/CN.png" alt="CN" style="max-width:100%;"&gt;&lt;strong&gt;CN&lt;/strong&gt;&lt;/a&gt;, &lt;a href="/README.brazilian-portuguese.md"&gt;&lt;img src="/assets/flags/BR.png" alt="BR" style="max-width:100%;"&gt;&lt;strong&gt;BR&lt;/strong&gt;&lt;/a&gt;, &lt;a href="/README.russian.md"&gt;&lt;img src="/assets/flags/RU.png" alt="RU" style="max-width:100%;"&gt;&lt;strong&gt;RU&lt;/strong&gt;&lt;/a&gt; &lt;a href="#translations"&gt;(&lt;img src="/assets/flags/ES.png" alt="ES" style="max-width:100%;"&gt;&lt;strong&gt;ES&lt;/strong&gt;, &lt;img src="/assets/flags/FR.png" alt="FR" style="max-width:100%;"&gt;&lt;strong&gt;FR&lt;/strong&gt;, &lt;img src="/assets/flags/HE.png" alt="HE" style="max-width:100%;"&gt;&lt;strong&gt;HE&lt;/strong&gt;, &lt;img src="/assets/flags/KR.png" alt="KR" style="max-width:100%;"&gt;&lt;strong&gt;KR&lt;/strong&gt; and &lt;img src="/assets/flags/TR.png" alt="TR" style="max-width:100%;"&gt;&lt;strong&gt;TR&lt;/strong&gt; in progress!)&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h6&gt;&lt;a id="user-content-built-and-maintained-by-our-steering-committee-and-collaborators" class="anchor" aria-hidden="true" href="#built-and-maintained-by-our-steering-committee-and-collaborators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Built and maintained by our &lt;a href="#steering-committee"&gt;Steering Committee&lt;/a&gt; and &lt;a href="#collaborators"&gt;Collaborators&lt;/a&gt;&lt;/h6&gt;
&lt;h1&gt;&lt;a id="user-content-latest-best-practices-and-news" class="anchor" aria-hidden="true" href="#latest-best-practices-and-news"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Latest Best Practices and News&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; New best practice:&lt;/strong&gt; 7.1: &lt;a href="#7-draft-performance-best-practices"&gt;Don't block the event loop&lt;/a&gt; by Keith Holliday&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="ru" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f7-1f1fa.png"&gt;🇷🇺&lt;/g-emoji&gt; Russian translation:&lt;/strong&gt; The amazing Alex Ivanov has just published a &lt;a href="/README.russian.md"&gt;Russian translation&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;We seek typescript contributors:&lt;/strong&gt; want to help contributing TypeScript examples? please approach by opening an issue&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-welcome-3-things-you-ought-to-know-first" class="anchor" aria-hidden="true" href="#welcome-3-things-you-ought-to-know-first"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Welcome! 3 Things You Ought To Know First&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;1. You are, in fact, reading dozens of the best Node.js articles -&lt;/strong&gt; this repository is a summary and curation of the top-ranked content on Node.js best practices, as well as content written here by collaborators&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. It is the largest compilation, and it is growing every week -&lt;/strong&gt; currently, more than 80 best practices, style guides, and architectural tips are presented. New issues and pull requests are created every day to keep this live book updated. We'd love to see you contributing here, whether that is fixing code mistakes, helping with translations, or suggesting brilliant new ideas. See our &lt;a href="/.operations/writing-guidelines.md"&gt;writing guidelines here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. Most best practices have additional info -&lt;/strong&gt; most bullets include a &lt;strong&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt;Read More&lt;/strong&gt; link that expands on the practice with code examples, quotes from selected blogs and more information&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#1-project-structure-practices"&gt;Project Structure Practices (5)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2-error-handling-practices"&gt;Error Handling Practices (11) &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3-code-style-practices"&gt;Code Style Practices (12) &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4-testing-and-overall-quality-practices"&gt;Testing And Overall Quality Practices (12) &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#5-going-to-production-practices"&gt;Going To Production Practices (18) &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#6-security-best-practices"&gt;Security Practices (25)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#7-draft-performance-best-practices"&gt;Performance Practices (2) (Work In Progress️ &lt;g-emoji class="g-emoji" alias="writing_hand" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/270d.png"&gt;✍️&lt;/g-emoji&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-1-project-structure-practices" class="anchor" aria-hidden="true" href="#1-project-structure-practices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;1. Project Structure Practices&lt;/code&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content--11-structure-your-solution-by-components" class="anchor" aria-hidden="true" href="#-11-structure-your-solution-by-components"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 1.1 Structure your solution by components&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The worst large applications pitfall is maintaining a huge code base with hundreds of dependencies - such a monolith slows down developers as they try to incorporate new features. Instead, partition your code into components, each gets its own folder or a dedicated codebase, and ensure that each unit is kept small and simple. Visit 'Read More' below to see examples of correct project structure&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; When developers who code new features struggle to realize the impact of their change and fear to break other dependent components - deployments become slower and riskier. It's also considered harder to scale-out when all the business units are not separated&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/projectstructre/breakintcomponents.md"&gt;&lt;strong&gt;Read More: structure by components&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--12-layer-your-components-keep-express-within-its-boundaries" class="anchor" aria-hidden="true" href="#-12-layer-your-components-keep-express-within-its-boundaries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 1.2 Layer your components, keep Express within its boundaries&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Each component should contain 'layers' - a dedicated object for the web, logic, and data access code. This not only draws a clean separation of concerns but also significantly eases mocking and testing the system. Though this is a very common pattern, API developers tend to mix layers by passing the web layer objects (Express req, res) to business logic and data layers - this makes your application dependent on and accessible by Express only&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; App that mixes web objects with other layers cannot be accessed by testing code, CRON jobs, and other non-Express callers&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/projectstructre/createlayers.md"&gt;&lt;strong&gt;Read More: layer your app&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--13-wrap-common-utilities-as-npm-packages" class="anchor" aria-hidden="true" href="#-13-wrap-common-utilities-as-npm-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 1.3 Wrap common utilities as npm packages&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; In a large app that constitutes a large code base, cross-cutting-concern utilities like logger, encryption and alike, should be wrapped by your own code and exposed as private npm packages. This allows sharing them among multiple code bases and projects&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You'll have to invent your own deployment and dependency wheel&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/projectstructre/wraputilities.md"&gt;&lt;strong&gt;Read More: Structure by feature&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--14-separate-express-app-and-server" class="anchor" aria-hidden="true" href="#-14-separate-express-app-and-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 1.4 Separate Express 'app' and 'server'&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid the nasty habit of defining the entire &lt;a href="https://expressjs.com/" rel="nofollow"&gt;Express&lt;/a&gt; app in a single huge file - separate your 'Express' definition to at least two files: the API declaration (app.js) and the networking concerns (WWW). For even better structure, locate your API declaration within components&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your API will be accessible for testing via HTTP calls only (slower and much harder to generate coverage reports). It probably won't be a big pleasure to maintain hundreds of lines of code in a single file&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/projectstructre/separateexpress.md"&gt;&lt;strong&gt;Read More: separate Express 'app' and 'server'&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--15-use-environment-aware-secure-and-hierarchical-config" class="anchor" aria-hidden="true" href="#-15-use-environment-aware-secure-and-hierarchical-config"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 1.5 Use environment aware, secure and hierarchical config&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; A perfect and flawless configuration setup should ensure (a) keys can be read from file AND from environment variable (b) secrets are kept outside committed code (c) config is hierarchical for easier findability. There are a few packages that can help tick most of those boxes like &lt;a href="https://www.npmjs.com/package/rc" rel="nofollow"&gt;rc&lt;/a&gt;, &lt;a href="https://www.npmjs.com/package/nconf" rel="nofollow"&gt;nconf&lt;/a&gt; and &lt;a href="https://www.npmjs.com/package/config" rel="nofollow"&gt;config&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Failing to satisfy any of the config requirements will simply bog down the development or devops team. Probably both&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/projectstructre/configguide.md"&gt;&lt;strong&gt;Read More: configuration best practices&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p align="right"&gt;&lt;a href="#table-of-contents"&gt;⬆ Return to top&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-2-error-handling-practices" class="anchor" aria-hidden="true" href="#2-error-handling-practices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;2. Error Handling Practices&lt;/code&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content--21-use-async-await-or-promises-for-async-error-handling" class="anchor" aria-hidden="true" href="#-21-use-async-await-or-promises-for-async-error-handling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 2.1 Use Async-Await or promises for async error handling&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Handling async errors in callback style is probably the fastest way to hell (a.k.a the pyramid of doom). The best gift you can give to your code is using a reputable promise library or async-await instead which enables a much more compact and familiar code syntax like try-catch&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Node.js callback style, function(err, response), is a promising way to un-maintainable code due to the mix of error handling with casual code, excessive nesting, and awkward coding patterns&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/errorhandling/asyncerrorhandling.md"&gt;&lt;strong&gt;Read More: avoiding callbacks&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--22-use-only-the-built-in-error-object" class="anchor" aria-hidden="true" href="#-22-use-only-the-built-in-error-object"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 2.2 Use only the built-in Error object&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Many throw errors as a string or as some custom type – this complicates the error handling logic and the interoperability between modules. Whether you reject a promise, throw an exception or emit an error – using only the built-in Error object will increase uniformity and prevent loss of information&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; When invoking some component, being uncertain which type of errors come in return – it makes proper error handling much harder. Even worse, using custom types to describe errors might lead to loss of critical error information like the stack trace!&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/errorhandling/useonlythebuiltinerror.md"&gt;&lt;strong&gt;Read More: using the built-in error object&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--23-distinguish-operational-vs-programmer-errors" class="anchor" aria-hidden="true" href="#-23-distinguish-operational-vs-programmer-errors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 2.3 Distinguish operational vs programmer errors&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Operational errors (e.g. API received an invalid input) refer to known cases where the error impact is fully understood and can be handled thoughtfully. On the other hand, programmer error (e.g. trying to read undefined variable) refers to unknown code failures that dictate to gracefully restart the application&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You may always restart the application when an error appears, but why let ~5000 online users down because of a minor, predicted, operational error? the opposite is also not ideal – keeping the application up when an unknown issue (programmer error) occurred might lead to an unpredicted behavior. Differentiating the two allows acting tactfully and applying a balanced approach based on the given context&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/errorhandling/operationalvsprogrammererror.md"&gt;&lt;strong&gt;Read More: operational vs programmer error&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--24-handle-errors-centrally-not-within-an-express-middleware" class="anchor" aria-hidden="true" href="#-24-handle-errors-centrally-not-within-an-express-middleware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 2.4 Handle errors centrally, not within an Express middleware&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Error handling logic such as mail to admin and logging should be encapsulated in a dedicated and centralized object that all endpoints (e.g. Express middleware, cron jobs, unit-testing) call when an error comes in&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Not handling errors within a single place will lead to code duplication and probably to improperly handled errors&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/errorhandling/centralizedhandling.md"&gt;&lt;strong&gt;Read More: handling errors in a centralized place&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--25-document-api-errors-using-swagger-or-graphql" class="anchor" aria-hidden="true" href="#-25-document-api-errors-using-swagger-or-graphql"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 2.5 Document API errors using Swagger or GraphQL&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Let your API callers know which errors might come in return so they can handle these thoughtfully without crashing. For RESTful APIs, this is usually done with documentation frameworks like Swagger. If you're using GraphQL, you can utilize your schema and comments as well.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An API client might decide to crash and restart only because it received back an error it couldn’t understand. Note: the caller of your API might be you (very typical in a microservice environment)&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/errorhandling/documentingusingswagger.md"&gt;&lt;strong&gt;Read More: documenting API errors in Swagger or GraphQL&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--26-exit-the-process-gracefully-when-a-stranger-comes-to-town" class="anchor" aria-hidden="true" href="#-26-exit-the-process-gracefully-when-a-stranger-comes-to-town"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 2.6 Exit the process gracefully when a stranger comes to town&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When an unknown error occurs (a developer error, see best practice 2.3) - there is uncertainty about the application healthiness. A common practice suggests restarting the process carefully using a process management tool like &lt;a href="https://www.npmjs.com/package/forever" rel="nofollow"&gt;Forever&lt;/a&gt; or &lt;a href="http://pm2.keymetrics.io/" rel="nofollow"&gt;PM2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; When an unfamiliar exception occurs, some object might be in a faulty state (e.g. an event emitter which is used globally and not firing events anymore due to some internal failure) and all future requests might fail or behave crazily&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/errorhandling/shuttingtheprocess.md"&gt;&lt;strong&gt;Read More: shutting the process&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--27-use-a-mature-logger-to-increase-error-visibility" class="anchor" aria-hidden="true" href="#-27-use-a-mature-logger-to-increase-error-visibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 2.7 Use a mature logger to increase error visibility&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; A set of mature logging tools like &lt;a href="https://www.npmjs.com/package/winston" rel="nofollow"&gt;Winston&lt;/a&gt;, &lt;a href="https://github.com/trentm/node-bunyan"&gt;Bunyan&lt;/a&gt;, &lt;a href="http://stritti.github.io/log4js/" rel="nofollow"&gt;Log4js&lt;/a&gt; or &lt;a href="https://github.com/pinojs/pino"&gt;Pino&lt;/a&gt;, will speed-up error discovery and understanding. So forget about console.log&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Skimming through console.logs or manually through messy text file without querying tools or a decent log viewer might keep you busy at work until late&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/errorhandling/usematurelogger.md"&gt;&lt;strong&gt;Read More: using a mature logger&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--28-test-error-flows-using-your-favorite-test-framework" class="anchor" aria-hidden="true" href="#-28-test-error-flows-using-your-favorite-test-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 2.8 Test error flows using your favorite test framework&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Whether professional automated QA or plain manual developer testing – Ensure that your code not only satisfies positive scenarios but also handles and returns the right errors. Testing frameworks like Mocha &amp;amp; Chai can handle this easily (see code examples within the "Gist popup")&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Without testing, whether automatically or manually, you can’t rely on your code to return the right errors. Without meaningful errors – there’s no error handling&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/errorhandling/testingerrorflows.md"&gt;&lt;strong&gt;Read More: testing error flows&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--29-discover-errors-and-downtime-using-apm-products" class="anchor" aria-hidden="true" href="#-29-discover-errors-and-downtime-using-apm-products"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 2.9 Discover errors and downtime using APM products&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Monitoring and performance products (a.k.a APM) proactively gauge your codebase or API so they can automagically highlight errors, crashes and slow parts that you were missing&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You might spend great effort on measuring API performance and downtimes, probably you’ll never be aware which are your slowest code parts under real-world scenario and how these affect the UX&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/errorhandling/apmproducts.md"&gt;&lt;strong&gt;Read More: using APM products&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--210-catch-unhandled-promise-rejections" class="anchor" aria-hidden="true" href="#-210-catch-unhandled-promise-rejections"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 2.10 Catch unhandled promise rejections&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Any exception thrown within a promise will get swallowed and discarded unless a developer didn’t forget to explicitly handle. Even if your code is subscribed to &lt;code&gt;process.uncaughtException&lt;/code&gt;! Overcome this by registering to the event &lt;code&gt;process.unhandledRejection&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your errors will get swallowed and leave no trace. Nothing to worry about&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/errorhandling/catchunhandledpromiserejection.md"&gt;&lt;strong&gt;Read More: catching unhandled promise rejection&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--211-fail-fast-validate-arguments-using-a-dedicated-library" class="anchor" aria-hidden="true" href="#-211-fail-fast-validate-arguments-using-a-dedicated-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 2.11 Fail fast, validate arguments using a dedicated library&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; This should be part of your Express best practices – Assert API input to avoid nasty bugs that are much harder to track later. The validation code is usually tedious unless you are using a very cool helper library like Joi&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Consider this – your function expects a numeric argument “Discount” which the caller forgets to pass, later on, your code checks if Discount!=0 (amount of allowed discount is greater than zero), then it will allow the user to enjoy a discount. OMG, what a nasty bug. Can you see it?&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/errorhandling/failfast.md"&gt;&lt;strong&gt;Read More: failing fast&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p align="right"&gt;&lt;a href="#table-of-contents"&gt;⬆ Return to top&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-3-code-style-practices" class="anchor" aria-hidden="true" href="#3-code-style-practices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;3. Code Style Practices&lt;/code&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content--31-use-eslint" class="anchor" aria-hidden="true" href="#-31-use-eslint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 3.1 Use ESLint&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; &lt;a href="https://eslint.org" rel="nofollow"&gt;ESLint&lt;/a&gt; is the de-facto standard for checking possible code errors and fixing code style, not only to identify nitty-gritty spacing issues but also to detect serious code anti-patterns like developers throwing errors without classification. Though ESLint can automatically fix code styles, other tools like &lt;a href="https://www.npmjs.com/package/prettier" rel="nofollow"&gt;prettier&lt;/a&gt; and &lt;a href="https://www.npmjs.com/package/js-beautify" rel="nofollow"&gt;beautify&lt;/a&gt; are more powerful in formatting the fix and work in conjunction with ESLint&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Developers will focus on tedious spacing and line-width concerns and time might be wasted overthinking the project's code style&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/codestylepractices/eslint_prettier.md"&gt;&lt;strong&gt;Read More: Using ESLint and Prettier&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--32-nodejs-specific-plugins" class="anchor" aria-hidden="true" href="#-32-nodejs-specific-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 3.2 Node.js specific plugins&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; On top of ESLint standard rules that cover vanilla JavaScript, add Node.js specific plugins like &lt;a href="https://www.npmjs.com/package/eslint-plugin-node" rel="nofollow"&gt;eslint-plugin-node&lt;/a&gt;, &lt;a href="https://www.npmjs.com/package/eslint-plugin-mocha" rel="nofollow"&gt;eslint-plugin-mocha&lt;/a&gt; and &lt;a href="https://www.npmjs.com/package/eslint-plugin-security" rel="nofollow"&gt;eslint-plugin-node-security&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Many faulty Node.js code patterns might escape under the radar. For example, developers might require(variableAsPath) files with a variable given as path which allows attackers to execute any JS script. Node.js linters can detect such patterns and complain early&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--33-start-a-codeblocks-curly-braces-on-the-same-line" class="anchor" aria-hidden="true" href="#-33-start-a-codeblocks-curly-braces-on-the-same-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 3.3 Start a Codeblock's Curly Braces on the Same Line&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The opening curly braces of a code block should be on the same line as the opening statement&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-code-example" class="anchor" aria-hidden="true" href="#code-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Example&lt;/h3&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do&lt;/span&gt;
&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;someFunction&lt;/span&gt;() {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; code block&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Avoid&lt;/span&gt;
&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;someFunction&lt;/span&gt;()
{
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; code block&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Deferring from this best practice might lead to unexpected results, as seen in the StackOverflow thread below:&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="https://stackoverflow.com/questions/3641519/why-does-a-results-vary-based-on-curly-brace-placement" rel="nofollow"&gt;&lt;strong&gt;Read more:&lt;/strong&gt; "Why do results vary based on curly brace placement?" (StackOverflow)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--34-separate-your-statements-properly" class="anchor" aria-hidden="true" href="#-34-separate-your-statements-properly"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 3.4 Separate your statements properly&lt;/h2&gt;
&lt;p&gt;No matter if you use semicolons or not to separate your statements, knowing the common pitfalls of improper linebreaks or automatic semicolon insertion, will help you to eliminate regular syntax errors.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use ESLint to gain awareness about separation concerns. &lt;a href="https://prettier.io/" rel="nofollow"&gt;Prettier&lt;/a&gt; or &lt;a href="https://standardjs.com/" rel="nofollow"&gt;Standardjs&lt;/a&gt; can automatically resolve these issues.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; As seen in the previous section, JavaScript's interpreter automatically adds a semicolon at the end of a statement if there isn't one, or considers a statement as not ended where it should, which might lead to some undesired results. You can use assignments and avoid using immediate invoked function expressions to prevent most of unexpected errors.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-code-example-1" class="anchor" aria-hidden="true" href="#code-example-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code example&lt;/h3&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do&lt;/span&gt;
&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;doThing&lt;/span&gt;() {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
}

&lt;span class="pl-en"&gt;doThing&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do&lt;/span&gt;

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;items&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;]
&lt;span class="pl-smi"&gt;items&lt;/span&gt;.&lt;span class="pl-c1"&gt;forEach&lt;/span&gt;(&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-smi"&gt;log&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Avoid — throws exception&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;m&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Map&lt;/span&gt;()
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;a&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;]
[&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;m&lt;/span&gt;.&lt;span class="pl-c1"&gt;values&lt;/span&gt;()].&lt;span class="pl-c1"&gt;forEach&lt;/span&gt;(&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-smi"&gt;log&lt;/span&gt;)
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; [&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-smi"&gt;m&lt;/span&gt;.&lt;span class="pl-c1"&gt;values&lt;/span&gt;()].&lt;span class="pl-c1"&gt;forEach&lt;/span&gt;(&lt;span class="pl-en"&gt;console&lt;/span&gt;.&lt;span class="pl-smi"&gt;log&lt;/span&gt;)
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;  &lt;span class="pl-k"&gt;^^^&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;SyntaxError&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; Unexpected token &lt;span class="pl-k"&gt;...&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Avoid — throws exception&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;count&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; it tries to run 2(), but 2 is not a function&lt;/span&gt;
(&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;doSomething&lt;/span&gt;() {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; do something amazing&lt;/span&gt;
}())
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; put a semicolon before the immediate invoked function, after the const definition, save the return value of the anonymous function to a variable or avoid IIFEs alltogether&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="https://eslint.org/docs/rules/semi" rel="nofollow"&gt;&lt;strong&gt;Read more:&lt;/strong&gt; "Semi ESLint rule"&lt;/a&gt;
&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="https://eslint.org/docs/rules/no-unexpected-multiline" rel="nofollow"&gt;&lt;strong&gt;Read more:&lt;/strong&gt; "No unexpected multiline ESLint rule"&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--35-name-your-functions" class="anchor" aria-hidden="true" href="#-35-name-your-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 3.5 Name your functions&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Name all functions, including closures and callbacks. Avoid anonymous functions. This is especially useful when profiling a node app. Naming all functions will allow you to easily understand what you're looking at when checking a memory snapshot&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Debugging production issues using a core dump (memory snapshot) might become challenging as you notice significant memory consumption from anonymous functions&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--36-use-naming-conventions-for-variables-constants-functions-and-classes" class="anchor" aria-hidden="true" href="#-36-use-naming-conventions-for-variables-constants-functions-and-classes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 3.6 Use naming conventions for variables, constants, functions and classes&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use &lt;strong&gt;&lt;em&gt;lowerCamelCase&lt;/em&gt;&lt;/strong&gt; when naming constants, variables and functions and &lt;strong&gt;&lt;em&gt;UpperCamelCase&lt;/em&gt;&lt;/strong&gt; (capital first letter as well) when naming classes. This will help you to easily distinguish between plain variables/functions, and classes that require instantiation. Use descriptive names, but try to keep them short&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Javascript is the only language in the world which allows invoking a constructor ("Class") directly without instantiating it first. Consequently, Classes and function-constructors are differentiated by starting with UpperCamelCase&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-36-code-example" class="anchor" aria-hidden="true" href="#36-code-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3.6 Code Example&lt;/h3&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; for class name we use UpperCamelCase&lt;/span&gt;
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;SomeClassExample&lt;/span&gt; {}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; for const names we use the const keyword and lowerCamelCase&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;config&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
  key&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;value&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
};

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; for variables and functions names we use lowerCamelCase&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; someVariableExample &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;value&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;doSomething&lt;/span&gt;() {}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--37-prefer-const-over-let-ditch-the-var" class="anchor" aria-hidden="true" href="#-37-prefer-const-over-let-ditch-the-var"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 3.7 Prefer const over let. Ditch the var&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Using &lt;code&gt;const&lt;/code&gt; means that once a variable is assigned, it cannot be reassigned. Preferring &lt;code&gt;const&lt;/code&gt; will help you to not be tempted to use the same variable for different uses, and make your code clearer. If a variable needs to be reassigned, in a for loop, for example, use &lt;code&gt;let&lt;/code&gt; to declare it. Another important aspect of &lt;code&gt;let&lt;/code&gt; is that a variable declared using it is only available in the block scope in which it was defined. &lt;code&gt;var&lt;/code&gt; is function scoped, not block scoped, and &lt;a href="https://hackernoon.com/why-you-shouldnt-use-var-anymore-f109a58b9b70" rel="nofollow"&gt;shouldn't be used in ES6&lt;/a&gt; now that you have &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; at your disposal&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Debugging becomes way more cumbersome when following a variable that frequently changes&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="https://medium.com/javascript-scene/javascript-es6-var-let-or-const-ba58b8dcde75" rel="nofollow"&gt;&lt;strong&gt;Read more: JavaScript ES6+: var, let, or const?&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--38-require-modules-first-not-inside-functions" class="anchor" aria-hidden="true" href="#-38-require-modules-first-not-inside-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 3.8 Require modules first, not inside functions&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Require modules at the beginning of each file, before and outside of any functions. This simple best practice will not only help you easily and quickly tell the dependencies of a file right at the top but also avoids a couple of potential problems&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Requires are run synchronously by Node.js. If they are called from within a function, it may block other requests from being handled at a more critical time. Also, if a required module or any of its own dependencies throw an error and crash the server, it is best to find out about it as soon as possible, which might not be the case if that module is required from within a function&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--39-require-modules-by-folders-opposed-to-the-files-directly" class="anchor" aria-hidden="true" href="#-39-require-modules-by-folders-opposed-to-the-files-directly"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 3.9 Require modules by folders, opposed to the files directly&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When developing a module/library in a folder, place an index.js file that exposes the module's internals so every consumer will pass through it. This serves as an 'interface' to your module and eases future changes without breaking the contract&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Changing the internal structure of files or the signature may break the interface with clients&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-39-code-example" class="anchor" aria-hidden="true" href="#39-code-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3.9 Code example&lt;/h3&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do&lt;/span&gt;
&lt;span class="pl-c1"&gt;module&lt;/span&gt;.&lt;span class="pl-smi"&gt;exports&lt;/span&gt;.&lt;span class="pl-smi"&gt;SMSProvider&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./SMSProvider&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-c1"&gt;module&lt;/span&gt;.&lt;span class="pl-smi"&gt;exports&lt;/span&gt;.&lt;span class="pl-smi"&gt;SMSNumberResolver&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./SMSNumberResolver&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Avoid&lt;/span&gt;
&lt;span class="pl-c1"&gt;module&lt;/span&gt;.&lt;span class="pl-smi"&gt;exports&lt;/span&gt;.&lt;span class="pl-smi"&gt;SMSProvider&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./SMSProvider/SMSProvider.js&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-c1"&gt;module&lt;/span&gt;.&lt;span class="pl-smi"&gt;exports&lt;/span&gt;.&lt;span class="pl-smi"&gt;SMSNumberResolver&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./SMSNumberResolver/SMSNumberResolver.js&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--310-use-the--operator" class="anchor" aria-hidden="true" href="#-310-use-the--operator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 3.10 Use the &lt;code&gt;===&lt;/code&gt; operator&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Prefer the strict equality operator &lt;code&gt;===&lt;/code&gt; over the weaker abstract equality operator &lt;code&gt;==&lt;/code&gt;. &lt;code&gt;==&lt;/code&gt; will compare two variables after converting them to a common type. There is no type conversion in &lt;code&gt;===&lt;/code&gt;, and both variables must be of the same type to be equal&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Unequal variables might return true when compared with the &lt;code&gt;==&lt;/code&gt; operator&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-310-code-example" class="anchor" aria-hidden="true" href="#310-code-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3.10 Code example&lt;/h3&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;           &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;             &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;

&lt;span class="pl-c1"&gt;false&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;false&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-c1"&gt;false&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;

&lt;span class="pl-c1"&gt;false&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;undefined&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-c1"&gt;false&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;null&lt;/span&gt;       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-c1"&gt;null&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;undefined&lt;/span&gt;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;

&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-cce"&gt;\t\r\n&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All statements above will return false if used with &lt;code&gt;===&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--311-use-async-await-avoid-callbacks" class="anchor" aria-hidden="true" href="#-311-use-async-await-avoid-callbacks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 3.11 Use Async Await, avoid callbacks&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Node 8 LTS now has full support for Async-await. This is a new way of dealing with asynchronous code which supersedes callbacks and promises. Async-await is non-blocking, and it makes asynchronous code look synchronous. The best gift you can give to your code is using async-await which provides a much more compact and familiar code syntax like try-catch&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Handling async errors in callback style is probably the fastest way to hell - this style forces to check errors all over, deal with awkward code nesting and makes it difficult to reason about the code flow&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt;&lt;a href="https://github.com/yortus/asyncawait"&gt;&lt;strong&gt;Read more:&lt;/strong&gt; Guide to async await 1.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--312-use-arrow-function-expressions-" class="anchor" aria-hidden="true" href="#-312-use-arrow-function-expressions-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 3.12 Use arrow function expressions (=&amp;gt;)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Though it's recommended to use async-await and avoid function parameters when dealing with older APIs that accept promises or callbacks - arrow functions make the code structure more compact and keep the lexical context of the root function (i.e. &lt;code&gt;this&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Longer code (in ES5 functions) is more prone to bugs and cumbersome to read&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="https://medium.com/javascript-scene/familiarity-bias-is-holding-you-back-its-time-to-embrace-arrow-functions-3d37e1a9bb75" rel="nofollow"&gt;&lt;strong&gt;Read more: It’s Time to Embrace Arrow Functions&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p align="right"&gt;&lt;a href="#table-of-contents"&gt;⬆ Return to top&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-4-testing-and-overall-quality-practices" class="anchor" aria-hidden="true" href="#4-testing-and-overall-quality-practices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;4. Testing And Overall Quality Practices&lt;/code&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content--41-at-the-very-least-write-api-component-testing" class="anchor" aria-hidden="true" href="#-41-at-the-very-least-write-api-component-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 4.1 At the very least, write API (component) testing&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Most projects just don't have any automated testing due to short timetables or often the 'testing project' ran out of control and was abandoned. For that reason, prioritize and start with API testing which is the easiest way to write and provides more coverage than unit testing (you may even craft API tests without code using tools like &lt;a href="https://www.getpostman.com/" rel="nofollow"&gt;Postman&lt;/a&gt;. Afterward, should you have more resources and time, continue with advanced test types like unit testing, DB testing, performance testing, etc&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You may spend long days on writing unit tests to find out that you got only 20% system coverage&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--42-include-3-parts-in-each-test-name" class="anchor" aria-hidden="true" href="#-42-include-3-parts-in-each-test-name"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 4.2 Include 3 parts in each test name&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Make the test speak at the requirements level so it's self explanatory also to QA engineers and developers who are not familiar with the code internals. State in the test name what is being tested (unit under test), under what circumstances and what is the expected result&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A deployment just failed, a test named “Add product” failed. Does this tell you what exactly is malfunctioning?&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/testingandquality/3-parts-in-name.md"&gt;&lt;strong&gt;Read More: Include 3 parts in each test name&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--43-structure-tests-by-the-aaa-pattern" class="anchor" aria-hidden="true" href="#-43-structure-tests-by-the-aaa-pattern"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 4.3 Structure tests by the AAA pattern&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Structure your tests with 3 well-separated sections: Arrange, Act &amp;amp; Assert (AAA). The first part includes the test setup, then the execution of the unit under test and finally the assertion phase. Following this structure guarantees that the reader spends no brain CPU on understanding the test plan&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Not only you spend long daily hours on understanding the main code, now also what should have been the simple part of the day (testing) stretches your brain&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/testingandquality/aaa.md"&gt;&lt;strong&gt;Read More: Structure tests by the AAA pattern&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--44-detect-code-issues-with-a-linter" class="anchor" aria-hidden="true" href="#-44-detect-code-issues-with-a-linter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 4.4 Detect code issues with a linter&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use a code linter to check basic quality and detect anti-patterns early. Run it before any test and add it as a pre-commit git-hook to minimize the time needed to review and correct any issue. Also check &lt;a href="#3-code-style-practices"&gt;Section 3&lt;/a&gt; on Code Style Practices&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You may let pass some anti-pattern and possible vulnerable code to your production environment.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--45-avoid-global-test-fixtures-and-seeds-add-data-per-test" class="anchor" aria-hidden="true" href="#-45-avoid-global-test-fixtures-and-seeds-add-data-per-test"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 4.5 Avoid global test fixtures and seeds, add data per-test&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; To prevent tests coupling and easily reason about the test flow, each test should add and act on its own set of DB rows. Whenever a test needs to pull or assume the existence of some DB data - it must explicitly add that data and avoid mutating any other records&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Consider a scenario where deployment is aborted due to failing tests, team is now going to spend precious investigation time that ends in a sad conclusion: the system works well, the tests however interfere with each other and break the build&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/testingandquality/avoid-global-test-fixture.md"&gt;&lt;strong&gt;Read More: Avoid global test fixtures&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--46-constantly-inspect-for-vulnerable-dependencies" class="anchor" aria-hidden="true" href="#-46-constantly-inspect-for-vulnerable-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 4.6 Constantly inspect for vulnerable dependencies&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Even the most reputable dependencies such as Express have known vulnerabilities. This can get easily tamed using community and commercial tools such as &lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="https://docs.npmjs.com/cli/audit" rel="nofollow"&gt;npm audit&lt;/a&gt; and &lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="https://snyk.io" rel="nofollow"&gt;snyk.io&lt;/a&gt; that can be invoked from your CI on every build&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Keeping your code clean from vulnerabilities without dedicated tools will require to constantly follow online publications about new threats. Quite tedious&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--47-tag-your-tests" class="anchor" aria-hidden="true" href="#-47-tag-your-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 4.7 Tag your tests&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Different tests must run on different scenarios: quick smoke, IO-less, tests should run when a developer saves or commits a file, full end-to-end tests usually run when a new pull request is submitted, etc. This can be achieved by tagging tests with keywords like #cold #api #sanity so you can grep with your testing harness and invoke the desired subset. For example, this is how you would invoke only the sanity test group with &lt;a href="https://mochajs.org/" rel="nofollow"&gt;Mocha&lt;/a&gt;: mocha --grep 'sanity'&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Running all the tests, including tests that perform dozens of DB queries, any time a developer makes a small change can be extremely slow and keeps developers away from running tests&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--48-check-your-test-coverage-it-helps-to-identify-wrong-test-patterns" class="anchor" aria-hidden="true" href="#-48-check-your-test-coverage-it-helps-to-identify-wrong-test-patterns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 4.8 Check your test coverage, it helps to identify wrong test patterns&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Code coverage tools like &lt;a href="https://github.com/istanbuljs/istanbuljs"&gt;Istanbul&lt;/a&gt;/&lt;a href="https://github.com/istanbuljs/nyc"&gt;NYC&lt;/a&gt; are great for 3 reasons: it comes for free (no effort is required to benefit this reports), it helps to identify a decrease in testing coverage, and last but not least it highlights testing mismatches: by looking at colored code coverage reports you may notice, for example, code areas that are never tested like catch clauses (meaning that tests only invoke the happy paths and not how the app behaves on errors). Set it to fail builds if the coverage falls under a certain threshold&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; There won't be any automated metric telling you when a large portion of your code is not covered by testing&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--49-inspect-for-outdated-packages" class="anchor" aria-hidden="true" href="#-49-inspect-for-outdated-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 4.9 Inspect for outdated packages&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Use your preferred tool (e.g. 'npm outdated' or &lt;a href="https://www.npmjs.com/package/npm-check-updates" rel="nofollow"&gt;npm-check-updates&lt;/a&gt; to detect installed packages which are outdated, inject this check into your CI pipeline and even make a build fail in a severe scenario. For example, a severe scenario might be when an installed package is 5 patch commits behind (e.g. local version is 1.3.1 and repository version is 1.3.8) or it is tagged as deprecated by its author - kill the build and prevent deploying this version&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your production will run packages that have been explicitly tagged by their author as risky&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--410-use-production-like-env-for-e2e-testing" class="anchor" aria-hidden="true" href="#-410-use-production-like-env-for-e2e-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 4.10 Use production-like env for e2e testing&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; End to end (e2e) testing which includes live data used to be the weakest link of the CI process as it depends on multiple heavy services like DB. Use an environment which is as closed to your real production as possible like a-continue&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Without docker-compose teams must maintain a testing DB for each testing environment including developers' machines, keep all those DBs in sync so test results won't vary across environments&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--411-refactor-regularly-using-static-analysis-tools" class="anchor" aria-hidden="true" href="#-411-refactor-regularly-using-static-analysis-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 4.11 Refactor regularly using static analysis tools&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Using static analysis tools helps by giving objective ways to improve code quality and keeps your code maintainable. You can add static analysis tools to your CI build to fail when it finds code smells. Its main selling points over plain linting are the ability to inspect quality in the context of multiple files (e.g. detect duplications), perform advanced analysis (e.g. code complexity) and follow the history and progress of code issues. Two examples of tools you can use are &lt;a href="https://www.sonarqube.org/" rel="nofollow"&gt;Sonarqube&lt;/a&gt; (2,600+ &lt;a href="https://github.com/SonarSource/sonarqube"&gt;stars&lt;/a&gt;) and &lt;a href="https://codeclimate.com/" rel="nofollow"&gt;Code Climate&lt;/a&gt; (1,500+ &lt;a href="https://github.com/codeclimate/codeclimate"&gt;stars&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; With poor code quality, bugs and performance will always be an issue that no shiny new library or state of the art features can fix&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/testingandquality/refactoring.md"&gt;&lt;strong&gt;Read More: Refactoring!&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--412-carefully-choose-your-ci-platform-jenkins-vs-circleci-vs-travis-vs-rest-of-the-world" class="anchor" aria-hidden="true" href="#-412-carefully-choose-your-ci-platform-jenkins-vs-circleci-vs-travis-vs-rest-of-the-world"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 4.12 Carefully choose your CI platform (Jenkins vs CircleCI vs Travis vs Rest of the world)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Your continuous integration platform (CICD) will host all the quality tools (e.g test, lint) so it should come with a vibrant ecosystem of plugins. &lt;a href="https://jenkins.io/" rel="nofollow"&gt;Jenkins&lt;/a&gt; used to be the default for many projects as it has the biggest community along with a very powerful platform at the price of complex setup that demands a steep learning curve. Nowadays, it has become much easier to set up a CI solution using SaaS tools like &lt;a href="https://circleci.com" rel="nofollow"&gt;CircleCI&lt;/a&gt; and others. These tools allow crafting a flexible CI pipeline without the burden of managing the whole infrastructure. Eventually, it's a trade-off between robustness and speed - choose your side carefully&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Choosing some niche vendor might get you blocked once you need some advanced customization. On the other hand, going with Jenkins might burn precious time on infrastructure setup&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/testingandquality/citools.md"&gt;&lt;strong&gt;Read More: Choosing CI platform&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p align="right"&gt;&lt;a href="#table-of-contents"&gt;⬆ Return to top&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-5-going-to-production-practices" class="anchor" aria-hidden="true" href="#5-going-to-production-practices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;5. Going To Production Practices&lt;/code&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content--51-monitoring" class="anchor" aria-hidden="true" href="#-51-monitoring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 5.1. Monitoring&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Monitoring is a game of finding out issues before customers do – obviously this should be assigned unprecedented importance. The market is overwhelmed with offers thus consider starting with defining the basic metrics you must follow (my suggestions inside), then go over additional fancy features and choose the solution that ticks all boxes. Click ‘The Gist’ below for an overview of the solutions&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Failure === disappointed customers. Simple&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/production/monitoring.md"&gt;&lt;strong&gt;Read More: Monitoring!&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--52-increase-transparency-using-smart-logging" class="anchor" aria-hidden="true" href="#-52-increase-transparency-using-smart-logging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 5.2. Increase transparency using smart logging&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Logs can be a dumb warehouse of debug statements or the enabler of a beautiful dashboard that tells the story of your app. Plan your logging platform from day 1: how logs are collected, stored and analyzed to ensure that the desired information (e.g. error rate, following an entire transaction through services and servers, etc) can really be extracted&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You end up with a black box that is hard to reason about, then you start re-writing all logging statements to add additional information&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/production/smartlogging.md"&gt;&lt;strong&gt;Read More: Increase transparency using smart logging&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--53-delegate-anything-possible-eg-gzip-ssl-to-a-reverse-proxy" class="anchor" aria-hidden="true" href="#-53-delegate-anything-possible-eg-gzip-ssl-to-a-reverse-proxy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 5.3. Delegate anything possible (e.g. gzip, SSL) to a reverse proxy&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Node is awfully bad at doing CPU intensive tasks like gzipping, SSL termination, etc. You should use ‘real’ middleware services like nginx, HAproxy or cloud vendor services instead&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your poor single thread will stay busy doing infrastructural tasks instead of dealing with your application core and performance will degrade accordingly&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/production/delegatetoproxy.md"&gt;&lt;strong&gt;Read More: Delegate anything possible (e.g. gzip, SSL) to a reverse proxy&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--54-lock-dependencies" class="anchor" aria-hidden="true" href="#-54-lock-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 5.4. Lock dependencies&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Your code must be identical across all environments, but amazingly npm lets dependencies drift across environments by default – when you install packages at various environments it tries to fetch packages’ latest patch version. Overcome this by using npm config files, .npmrc, that tell each environment to save the exact (not the latest) version of each package. Alternatively, for finer grained control use &lt;code&gt;npm shrinkwrap&lt;/code&gt;. *Update: as of NPM5, dependencies are locked by default. The new package manager in town, Yarn, also got us covered by default&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; QA will thoroughly test the code and approve a version that will behave differently in production. Even worse, different servers in the same production cluster might run different code&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/production/lockdependencies.md"&gt;&lt;strong&gt;Read More: Lock dependencies&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--55-guard-process-uptime-using-the-right-tool" class="anchor" aria-hidden="true" href="#-55-guard-process-uptime-using-the-right-tool"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 5.5. Guard process uptime using the right tool&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The process must go on and get restarted upon failures. For simple scenarios, process management tools like PM2 might be enough but in today's ‘dockerized’ world, cluster management tools should be considered as well&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Running dozens of instances without a clear strategy and too many tools together (cluster management, docker, PM2) might lead to DevOps chaos&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/production/guardprocess.md"&gt;&lt;strong&gt;Read More: Guard process uptime using the right tool&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--56-utilize-all-cpu-cores" class="anchor" aria-hidden="true" href="#-56-utilize-all-cpu-cores"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 5.6. Utilize all CPU cores&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; At its basic form, a Node app runs on a single CPU core while all others are left idling. It’s your duty to replicate the Node process and utilize all CPUs – For small-medium apps you may use Node Cluster or PM2. For a larger app consider replicating the process using some Docker cluster (e.g. K8S, ECS) or deployment scripts that are based on Linux init system (e.g. systemd)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your app will likely utilize only 25% of its available resources(!) or even less. Note that a typical server has 4 CPU cores or more, naive deployment of Node.js utilizes only 1 (even using PaaS services like AWS beanstalk!)&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/production/utilizecpu.md"&gt;&lt;strong&gt;Read More: Utilize all CPU cores&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--57-create-a-maintenance-endpoint" class="anchor" aria-hidden="true" href="#-57-create-a-maintenance-endpoint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 5.7. Create a ‘maintenance endpoint’&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Expose a set of system-related information, like memory usage and REPL, etc in a secured API. Although it’s highly recommended to rely on standard and battle-tests tools, some valuable information and operations are easier done using code&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You’ll find that you’re performing many “diagnostic deploys” – shipping code to production only to extract some information for diagnostic purposes&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/production/createmaintenanceendpoint.md"&gt;&lt;strong&gt;Read More: Create a ‘maintenance endpoint’&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--58-discover-errors-and-downtime-using-apm-products" class="anchor" aria-hidden="true" href="#-58-discover-errors-and-downtime-using-apm-products"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 5.8. Discover errors and downtime using APM products&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Application monitoring and performance products (a.k.a APM) proactively gauge codebase and API so they can auto-magically go beyond traditional monitoring and measure the overall user-experience across services and tiers. For example, some APM products can highlight a transaction that loads too slow on the end-users side while suggesting the root cause&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You might spend great effort on measuring API performance and downtimes, probably you’ll never be aware which is your slowest code parts under real-world scenario and how these affect the UX&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/production/apmproducts.md"&gt;&lt;strong&gt;Read More: Discover errors and downtime using APM products&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--59-make-your-code-production-ready" class="anchor" aria-hidden="true" href="#-59-make-your-code-production-ready"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 5.9. Make your code production-ready&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Code with the end in mind, plan for production from day 1. This sounds a bit vague so I’ve compiled a few development tips that are closely related to production maintenance (click Gist below)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A world champion IT/DevOps guy won’t save a system that is badly written&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/production/productioncode.md"&gt;&lt;strong&gt;Read More: Make your code production-ready&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--510-measure-and-guard-the-memory-usage" class="anchor" aria-hidden="true" href="#-510-measure-and-guard-the-memory-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 5.10. Measure and guard the memory usage&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Node.js has controversial relationships with memory: the v8 engine has soft limits on memory usage (1.4GB) and there are known paths to leak memory in Node’s code – thus watching Node’s process memory is a must. In small apps, you may gauge memory periodically using shell commands but in medium-large apps consider baking your memory watch into a robust monitoring system&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your process memory might leak a hundred megabytes a day like how it happened at &lt;a href="https://www.joyent.com/blog/walmart-node-js-memory-leak" rel="nofollow"&gt;Walmart&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/production/measurememory.md"&gt;&lt;strong&gt;Read More: Measure and guard the memory usage&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--511-get-your-frontend-assets-out-of-node" class="anchor" aria-hidden="true" href="#-511-get-your-frontend-assets-out-of-node"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 5.11. Get your frontend assets out of Node&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Serve frontend content using dedicated middleware (nginx, S3, CDN) because Node performance really gets hurt when dealing with many static files due to its single-threaded model&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your single Node thread will be busy streaming hundreds of html/images/angular/react files instead of allocating all its resources for the task it was born for – serving dynamic content&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/production/frontendout.md"&gt;&lt;strong&gt;Read More: Get your frontend assets out of Node&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--512-be-stateless-kill-your-servers-almost-every-day" class="anchor" aria-hidden="true" href="#-512-be-stateless-kill-your-servers-almost-every-day"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 5.12. Be stateless, kill your servers almost every day&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Store any type of data (e.g. user sessions, cache, uploaded files) within external data stores. Consider ‘killing’ your servers periodically or use ‘serverless’ platform (e.g. AWS Lambda) that explicitly enforces a stateless behavior&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Failure at a given server will result in application downtime instead of just killing a faulty machine. Moreover, scaling-out elasticity will get more challenging due to the reliance on a specific server&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/production/bestateless.md"&gt;&lt;strong&gt;Read More: Be stateless, kill your Servers almost every day&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--513-use-tools-that-automatically-detect-vulnerabilities" class="anchor" aria-hidden="true" href="#-513-use-tools-that-automatically-detect-vulnerabilities"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 5.13. Use tools that automatically detect vulnerabilities&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Even the most reputable dependencies such as Express have known vulnerabilities (from time to time) that can put a system at risk. This can be easily tamed using community and commercial tools that constantly check for vulnerabilities and warn (locally or at GitHub), some can even patch them immediately&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Keeping your code clean from vulnerabilities without dedicated tools will require you to constantly follow online publications about new threats. Quite tedious&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/production/detectvulnerabilities.md"&gt;&lt;strong&gt;Read More: Use tools that automatically detect vulnerabilities&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--514-assign-a-transaction-id-to-each-log-statement" class="anchor" aria-hidden="true" href="#-514-assign-a-transaction-id-to-each-log-statement"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 5.14. Assign a transaction id to each log statement&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Assign the same identifier, transaction-id: {some value}, to each log entry within a single request. Then when inspecting errors in logs, easily conclude what happened before and after. Unfortunately, this is not easy to achieve in Node due to its async nature, see code examples inside&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Looking at a production error log without the context – what happened before – makes it much harder and slower to reason about the issue&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/production/assigntransactionid.md"&gt;&lt;strong&gt;Read More: Assign ‘TransactionId’ to each log statement&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--515-set-node_envproduction" class="anchor" aria-hidden="true" href="#-515-set-node_envproduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 5.15. Set NODE_ENV=production&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Set the environment variable NODE_ENV to ‘production’ or ‘development’ to flag whether production optimizations should get activated – many npm packages determine the current environment and optimize their code for production&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Omitting this simple property might greatly degrade performance. For example, when using Express for server-side rendering omitting &lt;code&gt;NODE_ENV&lt;/code&gt; makes it slower by a factor of three!&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/production/setnodeenv.md"&gt;&lt;strong&gt;Read More: Set NODE_ENV=production&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--516-design-automated-atomic-and-zero-downtime-deployments" class="anchor" aria-hidden="true" href="#-516-design-automated-atomic-and-zero-downtime-deployments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 5.16. Design automated, atomic and zero-downtime deployments&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Research shows that teams who perform many deployments lower the probability of severe production issues. Fast and automated deployments that don’t require risky manual steps and service downtime significantly improve the deployment process. You should probably achieve this using Docker combined with CI tools as they became the industry standard for streamlined deployment&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Long deployments -&amp;gt; production downtime &amp;amp; human-related error -&amp;gt; team unconfident in making deployment -&amp;gt; fewer deployments and features&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--517-use-an-lts-release-of-nodejs" class="anchor" aria-hidden="true" href="#-517-use-an-lts-release-of-nodejs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 5.17. Use an LTS release of Node.js&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Ensure you are using an LTS version of Node.js to receive critical bug fixes, security updates and performance improvements&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Newly discovered bugs or vulnerabilities could be used to exploit an application running in production, and your application may become unsupported by various modules and harder to maintain&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/production/LTSrelease.md"&gt;&lt;strong&gt;Read More: Use an LTS release of Node.js&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--518-dont-route-logs-within-the-app" class="anchor" aria-hidden="true" href="#-518-dont-route-logs-within-the-app"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 5.18. Don't route logs within the app&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Log destinations should not be hard-coded by developers within the application code, but instead should be defined by the execution environment the application runs in. Developers should write logs to &lt;code&gt;stdout&lt;/code&gt; using a logger utility and then let the execution environment (container, server, etc.) pipe the &lt;code&gt;stdout&lt;/code&gt; stream to the appropriate destination (i.e. Splunk, Graylog, ElasticSearch, etc.).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Application handling log routing === hard to scale, loss of logs, poor separation of concerns&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/production/logrouting.md"&gt;&lt;strong&gt;Read More: Log Routing&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p align="right"&gt;&lt;a href="#table-of-contents"&gt;⬆ Return to top&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-6-security-best-practices" class="anchor" aria-hidden="true" href="#6-security-best-practices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;6. Security Best Practices&lt;/code&gt;&lt;/h1&gt;
&lt;div align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/9c5ae85b481f0b1943229448e248775f460c69f0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4f57415350253230546872656174732d546f7025323031302d677265656e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/9c5ae85b481f0b1943229448e248775f460c69f0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4f57415350253230546872656174732d546f7025323031302d677265656e2e737667" alt="54 items" data-canonical-src="https://img.shields.io/badge/OWASP%20Threats-Top%2010-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content--61-embrace-linter-security-rules" class="anchor" aria-hidden="true" href="#-61-embrace-linter-security-rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 6.1. Embrace linter security rules&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Top_10-2017_A1-Injection" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a00c1bdee85d66ade5d38014b3986f89d363351d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041313a496e6a656374696f6e2532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e7c91cc20b8042017cc99be9e2598c6a993a4c74/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d2532305853532532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20XSS%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Make use of security-related linter plugins such as &lt;a href="https://github.com/nodesecurity/eslint-plugin-security"&gt;eslint-plugin-security&lt;/a&gt; to catch security vulnerabilities and issues as early as possible, preferably while they're being coded. This can help catching security weaknesses like using eval, invoking a child process or importing a module with a string literal (e.g. user input). Click 'Read more' below to see code examples that will get caught by a security linter&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; What could have been a straightforward security weakness during development becomes a major issue in production. Also, the project may not follow consistent code security practices, leading to vulnerabilities being introduced, or sensitive secrets committed into remote repositories&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/security/lintrules.md"&gt;&lt;strong&gt;Read More: Lint rules&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--62-limit-concurrent-requests-using-a-middleware" class="anchor" aria-hidden="true" href="#-62-limit-concurrent-requests-using-a-middleware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 6.2. Limit concurrent requests using a middleware&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Denial_of_Service" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a0bf89e93750bff1438a83393007f5f9521961f4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323044444f532532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20DDOS%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; DOS attacks are very popular and relatively easy to conduct. Implement rate limiting using an external service such as cloud load balancers, cloud firewalls, nginx, &lt;a href="https://www.npmjs.com/package/rate-limiter-flexible" rel="nofollow"&gt;rate-limiter-flexible&lt;/a&gt; package, or (for smaller and less critical apps) a rate-limiting middleware (e.g. &lt;a href="https://www.npmjs.com/package/express-rate-limit" rel="nofollow"&gt;express-rate-limit&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An application could be subject to an attack resulting in a denial of service where real users receive a degraded or unavailable service.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/security/limitrequests.md"&gt;&lt;strong&gt;Read More: Implement rate limiting&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--63-extract-secrets-from-config-files-or-use-packages-to-encrypt-them" class="anchor" aria-hidden="true" href="#-63-extract-secrets-from-config-files-or-use-packages-to-encrypt-them"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 6.3 Extract secrets from config files or use packages to encrypt them&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f398de18c8cc2528ec3d6c787660cd93dbf7716b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041363a53656375726974792532304d6973636f6e66696775726174696f6e2532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.owasp.org/index.php/Top_10-2017_A3-Sensitive_Data_Exposure" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b4915b7525725eebf3fea1c4219d27a63c852dbb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041333a53656e736974697665253230446174612532304578706f737572652532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A3:Sensitive%20Data%20Exposure%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Never store plain-text secrets in configuration files or source code. Instead, make use of secret-management systems like Vault products, Kubernetes/Docker Secrets, or using environment variables. As a last resort, secrets stored in source control must be encrypted and managed (rolling keys, expiring, auditing, etc). Make use of pre-commit/push hooks to prevent committing secrets accidentally&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Source control, even for private repositories, can mistakenly be made public, at which point all secrets are exposed. Access to source control for an external party will inadvertently provide access to related systems (databases, apis, services, etc).&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/security/secretmanagement.md"&gt;&lt;strong&gt;Read More: Secret management&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--64-prevent-query-injection-vulnerabilities-with-ormodm-libraries" class="anchor" aria-hidden="true" href="#-64-prevent-query-injection-vulnerabilities-with-ormodm-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 6.4. Prevent query injection vulnerabilities with ORM/ODM libraries&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Top_10-2017_A1-Injection" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a00c1bdee85d66ade5d38014b3986f89d363351d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041313a496e6a656374696f6e2532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; To prevent SQL/NoSQL injection and other malicious attacks, always make use of an ORM/ODM or a database library that escapes data or supports named or indexed parameterized queries, and takes care of validating user input for expected types. Never just use JavaScript template strings or string concatenation to inject values into queries as this opens your application to a wide spectrum of vulnerabilities. All the reputable Node.js data access libraries (e.g. &lt;a href="https://github.com/sequelize/sequelize"&gt;Sequelize&lt;/a&gt;, &lt;a href="https://github.com/tgriesser/knex"&gt;Knex&lt;/a&gt;, &lt;a href="https://github.com/Automattic/mongoose"&gt;mongoose&lt;/a&gt;) have built-in protection against injection attacks.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Unvalidated or unsanitized user input could lead to operator injection when working with MongoDB for NoSQL, and not using a proper sanitization system or ORM will easily allow SQL injection attacks, creating a giant vulnerability.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/security/ormodmusage.md"&gt;&lt;strong&gt;Read More: Query injection prevention using ORM/ODM libraries&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--65-collection-of-generic-security-best-practices" class="anchor" aria-hidden="true" href="#-65-collection-of-generic-security-best-practices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 6.5. Collection of generic security best practices&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; This is a collection of security advice that is not related directly to Node.js - the Node implementation is not much different than any other language. Click read more to skim through.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/security/commonsecuritybestpractices.md"&gt;&lt;strong&gt;Read More: Common security best practices&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--66-adjust-the-http-response-headers-for-enhanced-security" class="anchor" aria-hidden="true" href="#-66-adjust-the-http-response-headers-for-enhanced-security"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 6.6. Adjust the HTTP response headers for enhanced security&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f398de18c8cc2528ec3d6c787660cd93dbf7716b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041363a53656375726974792532304d6973636f6e66696775726174696f6e2532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Your application should be using secure headers to prevent attackers from using common attacks like cross-site scripting (XSS), clickjacking and other malicious attacks. These can be configured easily using modules like &lt;a href="https://www.npmjs.com/package/helmet" rel="nofollow"&gt;helmet&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Attackers could perform direct attacks on your application's users, leading to huge security vulnerabilities&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/security/secureheaders.md"&gt;&lt;strong&gt;Read More: Using secure headers in your application&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--67-constantly-and-automatically-inspect-for-vulnerable-dependencies" class="anchor" aria-hidden="true" href="#-67-constantly-and-automatically-inspect-for-vulnerable-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 6.7. Constantly and automatically inspect for vulnerable dependencies&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Top_10-2017_A9-Using_Components_with_Known_Vulnerabilities" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a45194498f012f1071a913e41a7f78fb3aebe5a8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041393a4b6e6f776e25323056756c6e65726162696c69746965732532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A9:Known%20Vulnerabilities%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; With the npm ecosystem it is common to have many dependencies for a project. Dependencies should always be kept in check as new vulnerabilities are found. Use tools like &lt;a href="https://docs.npmjs.com/cli/audit" rel="nofollow"&gt;npm audit&lt;/a&gt; or &lt;a href="https://snyk.io/" rel="nofollow"&gt;snyk&lt;/a&gt; to track, monitor and patch vulnerable dependencies. Integrate these tools with your CI setup so you catch a vulnerable dependency before it makes it to production.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An attacker could detect your web framework and attack all its known vulnerabilities.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/security/dependencysecurity.md"&gt;&lt;strong&gt;Read More: Dependency security&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--68-avoid-using-the-nodejs-crypto-library-for-handling-passwords-use-bcrypt" class="anchor" aria-hidden="true" href="#-68-avoid-using-the-nodejs-crypto-library-for-handling-passwords-use-bcrypt"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 6.8. Avoid using the Node.js crypto library for handling passwords, use Bcrypt&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Top_10-2017_A2-Broken_Authentication" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e62100fe8c4336e501dd372253a1a803e3010b96/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041393a42726f6b656e25323041757468656e7469636174696f6e2532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A9:Broken%20Authentication%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Passwords or secrets (API keys) should be stored using a secure hash + salt function like &lt;code&gt;bcrypt&lt;/code&gt;, that should be a preferred choice over its JavaScript implementation due to performance and security reasons.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Passwords or secrets that are persisted without using a secure function are vulnerable to brute forcing and dictionary attacks that will lead to their disclosure eventually.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/security/bcryptpasswords.md"&gt;&lt;strong&gt;Read More: Use Bcrypt&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--69-escape-html-js-and-css-output" class="anchor" aria-hidden="true" href="#-69-escape-html-js-and-css-output"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 6.9. Escape HTML, JS and CSS output&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2fd8ac116dc65edaeca9ec061ec7b4c6322e1a82/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041373a5853532532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7:XSS%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Untrusted data that is sent down to the browser might get executed instead of just being displayed, this is commonly referred as a cross-site-scripting (XSS) attack. Mitigate this by using dedicated libraries that explicitly mark the data as pure content that should never get executed (i.e. encoding, escaping)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An attacker might store malicious JavaScript code in your DB which will then be sent as-is to the poor clients&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/security/escape-output.md"&gt;&lt;strong&gt;Read More: Escape output&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--610-validate-incoming-json-schemas" class="anchor" aria-hidden="true" href="#-610-validate-incoming-json-schemas"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 6.10. Validate incoming JSON schemas&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cc01922f5b5cd443c9a708b9acd58c5bee7b3a4f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041373a205853532532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7: XSS%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4fd29ee344123f656ce79a7e33e1dd67e928e933/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041383a496e73656375726564253230446573657269616c697a6174696f6e2532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A8:Insecured%20Deserialization%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Validate the incoming requests' body payload and ensure it meets expectations, fail fast if it doesn't. To avoid tedious validation coding within each route you may use lightweight JSON-based validation schemas such as &lt;a href="https://www.npmjs.com/package/jsonschema" rel="nofollow"&gt;jsonschema&lt;/a&gt; or &lt;a href="https://www.npmjs.com/package/joi" rel="nofollow"&gt;joi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your generosity and permissive approach greatly increases the attack surface and encourages the attacker to try out many inputs until they find some combination to crash the application&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/security/validation.md"&gt;&lt;strong&gt;Read More: Validate incoming JSON schemas&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--611-support-blacklisting-jwts" class="anchor" aria-hidden="true" href="#-611-support-blacklisting-jwts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 6.11. Support blacklisting JWTs&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Top_10-2017_A2-Broken_Authentication" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e62100fe8c4336e501dd372253a1a803e3010b96/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041393a42726f6b656e25323041757468656e7469636174696f6e2532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A9:Broken%20Authentication%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When using JSON Web Tokens (for example, with &lt;a href="https://github.com/jaredhanson/passport"&gt;Passport.js&lt;/a&gt;), by default there's no mechanism to revoke access from issued tokens. Once you discover some malicious user activity, there's no way to stop them from accessing the system as long as they hold a valid token. Mitigate this by implementing a blacklist of untrusted tokens that are validated on each request.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Expired, or misplaced tokens could be used maliciously by a third party to access an application and impersonate the owner of the token.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/security/expirejwt.md"&gt;&lt;strong&gt;Read More: Blacklist JSON Web Tokens&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--612-prevent-brute-force-attacks-against-authorization" class="anchor" aria-hidden="true" href="#-612-prevent-brute-force-attacks-against-authorization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 6.12. Prevent brute-force attacks against authorization&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Top_10-2017_A2-Broken_Authentication" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e62100fe8c4336e501dd372253a1a803e3010b96/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041393a42726f6b656e25323041757468656e7469636174696f6e2532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A9:Broken%20Authentication%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; A simple and powerful technique is to limit authorization attempts using two metrics:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The first is number of consecutive failed attempts by the same user unique ID/name and IP address.&lt;/li&gt;
&lt;li&gt;The second is number of failed attempts from an IP address over some long period of time. For example, block an IP address if it makes 100 failed attempts in one day.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An attacker can issue unlimited automated password attempts to gain access to privileged accounts on an application&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/security/login-rate-limit.md"&gt;&lt;strong&gt;Read More: Login rate limiting&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--613-run-nodejs-as-non-root-user" class="anchor" aria-hidden="true" href="#-613-run-nodejs-as-non-root-user"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 6.13. Run Node.js as non-root user&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Top_10-2017_A5-Broken_Access_Control" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5f0d6d625c6ad6328afba0f72a61edec6a0eab8c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041353a42726f6b656e253230416363657373253230416363657373253230436f6e74726f6c2d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A5:Broken%20Access%20Access%20Control-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; There is a common scenario where Node.js runs as a root user with unlimited permissions. For example, this is the default behaviour in Docker containers. It's recommended to create a non-root user and either bake it into the Docker image (examples given below) or run the process on this user's behalf by invoking the container with the flag "-u username"&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; An attacker who manages to run a script on the server gets unlimited power over the local machine (e.g. change iptable and re-route traffic to his server)&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/security/non-root-user.md"&gt;&lt;strong&gt;Read More: Run Node.js as non-root user&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--614-limit-payload-size-using-a-reverse-proxy-or-a-middleware" class="anchor" aria-hidden="true" href="#-614-limit-payload-size-using-a-reverse-proxy-or-a-middleware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 6.14. Limit payload size using a reverse-proxy or a middleware&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4fd29ee344123f656ce79a7e33e1dd67e928e933/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041383a496e73656375726564253230446573657269616c697a6174696f6e2532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A8:Insecured%20Deserialization%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.owasp.org/index.php/Top_10-2017_A1-Injection" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a0bf89e93750bff1438a83393007f5f9521961f4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323044444f532532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20DDOS%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The bigger the body payload is, the harder your single thread works in processing it. This is an opportunity for attackers to bring servers to their knees without tremendous amount of requests (DOS/DDOS attacks). Mitigate this limiting the body size of incoming requests on the edge (e.g. firewall, ELB) or by configuring &lt;a href="https://github.com/expressjs/body-parser"&gt;express body parser&lt;/a&gt; to accept only small-size payloads&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your application will have to deal with large requests, unable to process the other important work it has to accomplish, leading to performance implications and vulnerability towards DOS attacks&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/security/requestpayloadsizelimit.md"&gt;&lt;strong&gt;Read More: Limit payload size&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--615-avoid-javascript-eval-statements" class="anchor" aria-hidden="true" href="#-615-avoid-javascript-eval-statements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 6.15. Avoid JavaScript eval statements&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2fd8ac116dc65edaeca9ec061ec7b4c6322e1a82/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041373a5853532532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7:XSS%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.owasp.org/index.php/Top_10-2017_A1-Injection" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a00c1bdee85d66ade5d38014b3986f89d363351d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041313a496e6a656374696f6e2532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.owasp.org/index.php/Top_10-2017_A4-XML_External_Entities_(XXE)" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7f7efd6a8399ef6026b7c9e9ca7745d49a3fc6a3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041343a45787465726e616c253230456e7469746965732532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A4:External%20Entities%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; &lt;code&gt;eval&lt;/code&gt; is evil as it allows executing custom JavaScript code during run time. This is not just a performance concern but also an important security concern due to malicious JavaScript code that may be sourced from user input. Another language feature that should be avoided is &lt;code&gt;new Function&lt;/code&gt; constructor. &lt;code&gt;setTimeout&lt;/code&gt; and &lt;code&gt;setInterval&lt;/code&gt; should never be passed dynamic JavaScript code either.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Malicious JavaScript code finds a way into text passed into &lt;code&gt;eval&lt;/code&gt; or other real-time evaluating JavaScript language functions, and will gain complete access to JavaScript permissions on the page. This vulnerability is often manifested as an XSS attack.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/security/avoideval.md"&gt;&lt;strong&gt;Read More: Avoid JavaScript eval statements&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--616-prevent-evil-regex-from-overloading-your-single-thread-execution" class="anchor" aria-hidden="true" href="#-616-prevent-evil-regex-from-overloading-your-single-thread-execution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 6.16. Prevent evil RegEx from overloading your single thread execution&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Denial_of_Service" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a0bf89e93750bff1438a83393007f5f9521961f4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323044444f532532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20DDOS%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Regular Expressions, while being handy, pose a real threat to JavaScript applications at large, and the Node.js platform in particular. A user input for text to match might require an outstanding amount of CPU cycles to process. RegEx processing might be inefficient to an extent that a single request that validates 10 words can block the entire event loop for 6 seconds and set the CPU on &lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;🔥&lt;/g-emoji&gt;. For that reason, prefer third-party validation packages like &lt;a href="https://github.com/chriso/validator.js"&gt;validator.js&lt;/a&gt; instead of writing your own Regex patterns, or make use of &lt;a href="https://github.com/substack/safe-regex"&gt;safe-regex&lt;/a&gt; to detect vulnerable regex patterns&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Poorly written regexes could be susceptible to Regular Expression DoS attacks that will block the event loop completely. For example, the popular &lt;code&gt;moment&lt;/code&gt; package was found vulnerable with malicious RegEx usage in November of 2017&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/security/regex.md"&gt;&lt;strong&gt;Read More: Prevent malicious RegEx&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--617-avoid-module-loading-using-a-variable" class="anchor" aria-hidden="true" href="#-617-avoid-module-loading-using-a-variable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 6.17. Avoid module loading using a variable&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2fd8ac116dc65edaeca9ec061ec7b4c6322e1a82/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041373a5853532532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7:XSS%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.owasp.org/index.php/Top_10-2017_A1-Injection" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a00c1bdee85d66ade5d38014b3986f89d363351d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041313a496e6a656374696f6e2532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.owasp.org/index.php/Top_10-2017_A4-XML_External_Entities_(XXE)" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7f7efd6a8399ef6026b7c9e9ca7745d49a3fc6a3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041343a45787465726e616c253230456e7469746965732532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A4:External%20Entities%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid requiring/importing another file with a path that was given as parameter due to the concern that it could have originated from user input. This rule can be extended for accessing files in general (i.e. &lt;code&gt;fs.readFile()&lt;/code&gt;) or other sensitive resource access with dynamic variables originating from user input. &lt;a href="https://www.npmjs.com/package/eslint-plugin-security" rel="nofollow"&gt;Eslint-plugin-security&lt;/a&gt; linter can catch such patterns and warn early enough&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Malicious user input could find its way to a parameter that is used to require tampered files, for example, a previously uploaded file on the filesystem, or access already existing system files.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/security/safemoduleloading.md"&gt;&lt;strong&gt;Read More: Safe module loading&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--618-run-unsafe-code-in-a-sandbox" class="anchor" aria-hidden="true" href="#-618-run-unsafe-code-in-a-sandbox"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 6.18. Run unsafe code in a sandbox&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2fd8ac116dc65edaeca9ec061ec7b4c6322e1a82/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041373a5853532532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7:XSS%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.owasp.org/index.php/Top_10-2017_A1-Injection" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a00c1bdee85d66ade5d38014b3986f89d363351d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041313a496e6a656374696f6e2532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.owasp.org/index.php/Top_10-2017_A4-XML_External_Entities_(XXE)" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7f7efd6a8399ef6026b7c9e9ca7745d49a3fc6a3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041343a45787465726e616c253230456e7469746965732532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A4:External%20Entities%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; When tasked to run external code that is given at run-time (e.g. plugin), use any sort of 'sandbox' execution environment that isolates and guards the main code against the plugin. This can be achieved using a dedicated process (e.g. &lt;code&gt;cluster.fork()&lt;/code&gt;), serverless environment or dedicated npm packages that act as a sandbox&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; A plugin can attack through an endless variety of options like infinite loops, memory overloading, and access to sensitive process environment variables&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/security/sandbox.md"&gt;&lt;strong&gt;Read More: Run unsafe code in a sandbox&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--619-take-extra-care-when-working-with-child-processes" class="anchor" aria-hidden="true" href="#-619-take-extra-care-when-working-with-child-processes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 6.19. Take extra care when working with child processes&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2fd8ac116dc65edaeca9ec061ec7b4c6322e1a82/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041373a5853532532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A7:XSS%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.owasp.org/index.php/Top_10-2017_A1-Injection" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a00c1bdee85d66ade5d38014b3986f89d363351d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041313a496e6a656374696f6e2532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.owasp.org/index.php/Top_10-2017_A4-XML_External_Entities_(XXE)" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7f7efd6a8399ef6026b7c9e9ca7745d49a3fc6a3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041343a45787465726e616c253230456e7469746965732532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A4:External%20Entities%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid using child processes when possible and validate and sanitize input to mitigate shell injection attacks if you still have to. Prefer using &lt;code&gt;child_process.execFile&lt;/code&gt; which by definition will only execute a single command with a set of attributes and will not allow shell parameter expansion.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Naive use of child processes could result in remote command execution or shell injection attacks due to malicious user input passed to an unsanitized system command.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/security/childprocesses.md"&gt;&lt;strong&gt;Read More: Be cautious when working with child processes&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--620-hide-error-details-from-clients" class="anchor" aria-hidden="true" href="#-620-hide-error-details-from-clients"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 6.20. Hide error details from clients&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f398de18c8cc2528ec3d6c787660cd93dbf7716b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041363a53656375726974792532304d6973636f6e66696775726174696f6e2532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; An integrated express error handler hides the error details by default. However, great are the chances that you implement your own error handling logic with custom Error objects (considered by many as a best practice). If you do so, ensure not to return the entire Error object to the client, which might contain some sensitive application details&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Sensitive application details such as server file paths, third party modules in use, and other internal workflows of the application which could be exploited by an attacker, could be leaked from information found in a stack trace&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/security/hideerrors.md"&gt;&lt;strong&gt;Read More: Hide error details from client&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--621-configure-2fa-for-npm-or-yarn" class="anchor" aria-hidden="true" href="#-621-configure-2fa-for-npm-or-yarn"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 6.21. Configure 2FA for npm or Yarn&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f398de18c8cc2528ec3d6c787660cd93dbf7716b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041363a53656375726974792532304d6973636f6e66696775726174696f6e2532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Any step in the development chain should be protected with MFA (multi-factor authentication), npm/Yarn are a sweet opportunity for attackers who can get their hands on some developer's password. Using developer credentials, attackers can inject malicious code into libraries that are widely installed across projects and services. Maybe even across the web if published in public. Enabling 2-factor-authentication in npm leaves almost zero chances for attackers to alter your package code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; &lt;a href="https://medium.com/@oprearocks/eslint-backdoor-what-it-is-and-how-to-fix-the-issue-221f58f1a8c8" rel="nofollow"&gt;Have you heard about the eslint developer who's password was hijacked?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--622-modify-session-middleware-settings" class="anchor" aria-hidden="true" href="#-622-modify-session-middleware-settings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 6.22. Modify session middleware settings&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f398de18c8cc2528ec3d6c787660cd93dbf7716b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041363a53656375726974792532304d6973636f6e66696775726174696f6e2532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Each web framework and technology has its known weaknesses - telling an attacker which web framework we use is a great help for them. Using the default settings for session middlewares can expose your app to module- and framework-specific hijacking attacks in a similar way to the &lt;code&gt;X-Powered-By&lt;/code&gt; header. Try hiding anything that identifies and reveals your tech stack (E.g. Node.js, express)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Cookies could be sent over insecure connections, and an attacker might use session identification to identify the underlying framework of the web application, as well as module-specific vulnerabilities&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/security/sessions.md"&gt;&lt;strong&gt;Read More: Cookie and session security&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--623-avoid-dos-attacks-by-explicitly-setting-when-a-process-should-crash" class="anchor" aria-hidden="true" href="#-623-avoid-dos-attacks-by-explicitly-setting-when-a-process-should-crash"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 6.23. Avoid DOS attacks by explicitly setting when a process should crash&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Denial_of_Service" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a0bf89e93750bff1438a83393007f5f9521961f4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323044444f532532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20DDOS%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; The Node process will crash when errors are not handled. Many best practices even recommend to exit even though an error was caught and got handled. Express, for example, will crash on any asynchronous error - unless you wrap routes with a catch clause. This opens a very sweet attack spot for attackers who recognize what input makes the process crash and repeatedly send the same request. There's no instant remedy for this but a few techniques can mitigate the pain: Alert with critical severity anytime a process crashes due to an unhandled error, validate the input and avoid crashing the process due to invalid user input, wrap all routes with a catch and consider not to crash when an error originated within a request (as opposed to what happens globally)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; This is just an educated guess: given many Node.js applications, if we try passing an empty JSON body to all POST requests - a handful of applications will crash. At that point, we can just repeat sending the same request to take down the applications with ease&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--624-prevent-unsafe-redirects" class="anchor" aria-hidden="true" href="#-624-prevent-unsafe-redirects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 6.24. Prevent unsafe redirects&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Top_10-2017_A1-Injection" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a00c1bdee85d66ade5d38014b3986f89d363351d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041313a496e6a656374696f6e2532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A1:Injection%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Redirects that do not validate user input can enable attackers to launch phishing scams, steal user credentials, and perform other malicious actions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; If an attacker discovers that you are not validating external, user-supplied input, they may exploit this vulnerability by posting specially-crafted links on forums, social media, and other public places to get users to click it.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/security/saferedirects.md"&gt;&lt;strong&gt;Read More: Prevent unsafe redirects&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--625-avoid-publishing-secrets-to-the-npm-registry" class="anchor" aria-hidden="true" href="#-625-avoid-publishing-secrets-to-the-npm-registry"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 6.25. Avoid publishing secrets to the npm registry&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Top_10-2017_A6-Security_Misconfiguration" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f398de18c8cc2528ec3d6c787660cd93dbf7716b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545322539432539342532304f57415350253230546872656174732532302d25323041363a53656375726974792532304d6973636f6e66696775726174696f6e2532302d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/%E2%9C%94%20OWASP%20Threats%20-%20A6:Security%20Misconfiguration%20-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Precautions should be taken to avoid the risk of accidentally publishing secrets to public npm registries. An &lt;code&gt;.npmignore&lt;/code&gt; file can be used to blacklist specific files or folders, or the &lt;code&gt;files&lt;/code&gt; array in &lt;code&gt;package.json&lt;/code&gt; can act as a whitelist.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; Your project's API keys, passwords or other secrets are open to be abused by anyone who comes across them, which may result in financial loss, impersonation, and other risks.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/security/avoid_publishing_secrets.md"&gt;&lt;strong&gt;Read More: Avoid publishing secrets&lt;/strong&gt;&lt;/a&gt;
&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p align="right"&gt;&lt;a href="#table-of-contents"&gt;⬆ Return to top&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-7-draft-performance-best-practices" class="anchor" aria-hidden="true" href="#7-draft-performance-best-practices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;7. Draft: Performance Best Practices&lt;/code&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-our-contributors-are-working-on-this-section-would-you-like-to-join" class="anchor" aria-hidden="true" href="#our-contributors-are-working-on-this-section-would-you-like-to-join"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Our contributors are working on this section. &lt;a href="https://github.com/i0natan/nodebestpractices/issues/256"&gt;Would you like to join?&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--71-dont-block-the-event-loop" class="anchor" aria-hidden="true" href="#-71-dont-block-the-event-loop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 7.1. Don't block the event loop&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; Avoid CPU intensive tasks as they will block the mostly single-threaded Event Loop and offload those to a dedicated thread, process or even a different technology based on the context.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; As the Event Loop is blocked, Node.js will be unable to handle other request thus causing delays for concurrent users. &lt;strong&gt;3000 users are waiting for a response, the content is ready to be served, but one single request blocks the server from dispatching the results back&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/performance/block-loop.md"&gt;&lt;strong&gt;Read More: Do not block the event loop&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--72-prefer-native-js-methods-over-user-land-utils-like-lodash" class="anchor" aria-hidden="true" href="#-72-prefer-native-js-methods-over-user-land-utils-like-lodash"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/checkbox-small-blue.png"&gt;&lt;img src="assets/images/checkbox-small-blue.png" alt="✔" style="max-width:100%;"&gt;&lt;/a&gt; 7.2. Prefer native JS methods over user-land utils like Lodash&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; It's often more penalising to use utility libraries like &lt;code&gt;lodash&lt;/code&gt; and &lt;code&gt;underscore&lt;/code&gt; over native methods as it leads to unneeded dependencies and slower performance.
Bear in mind that with the introduction of the new V8 engine alongside the new ES standards, native methods were improved in such a way that it's now about 50% more performant than utility libraries.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Otherwise:&lt;/strong&gt; You'll have to maintain less performant projects where you could have simply used what was &lt;strong&gt;already&lt;/strong&gt; available or dealt with a few more lines in exchange of a few more files.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; &lt;a href="/sections/performance/nativeoverutil.md"&gt;&lt;strong&gt;Read More: Native over user land utils&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-milestones" class="anchor" aria-hidden="true" href="#milestones"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Milestones&lt;/h1&gt;
&lt;p&gt;To maintain this guide and keep it up to date, we are constantly updating and improving the guidelines and best practices with the help of the community. You can follow our &lt;a href="https://github.com/i0natan/nodebestpractices/milestones"&gt;milestones&lt;/a&gt; and join the working groups if you want to contribute to this project&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-translations" class="anchor" aria-hidden="true" href="#translations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Translations&lt;/h2&gt;
&lt;p&gt;All translations are contributed by the community. We will be happy to get any help with either completed, ongoing or new translations!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-completed-translations" class="anchor" aria-hidden="true" href="#completed-translations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Completed translations&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/assets/flags/BR.png"&gt;&lt;img src="/assets/flags/BR.png" alt="BR" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="./README.brazilian-portuguese.md"&gt;Brazilian Portuguese&lt;/a&gt; - Courtesy of &lt;a href="https://github.com/marcelosdm"&gt;Marcelo Melo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/assets/flags/CN.png"&gt;&lt;img src="/assets/flags/CN.png" alt="CN" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="./README.chinese.md"&gt;Chinese&lt;/a&gt; - Courtesy of &lt;a href="https://github.com/mattjin"&gt;Matt Jin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/assets/flags/RU.png"&gt;&lt;img src="/assets/flags/RU.png" alt="RU" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="./README.russian.md"&gt;Russian&lt;/a&gt; - Courtesy of &lt;a href="https://github.com/contributorpw"&gt;Alex Ivanov&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-translations-in-progress" class="anchor" aria-hidden="true" href="#translations-in-progress"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Translations in progress&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/assets/flags/FR.png"&gt;&lt;img src="/assets/flags/FR.png" alt="FR" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/gaspaonrocks/nodebestpractices/blob/french-translation/README.french.md"&gt;French&lt;/a&gt; (&lt;a href="https://github.com/i0natan/nodebestpractices/issues/129"&gt;Discussion&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/assets/flags/HE.png"&gt;&lt;img src="/assets/flags/HE.png" alt="HE" style="max-width:100%;"&gt;&lt;/a&gt; Hebrew (&lt;a href="https://github.com/i0natan/nodebestpractices/issues/156"&gt;Discussion&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/assets/flags/KR.png"&gt;&lt;img src="/assets/flags/KR.png" alt="KR" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="README.korean.md"&gt;Korean&lt;/a&gt; - Courtesy of &lt;a href="https://github.com/uronly14me"&gt;Sangbeom Han&lt;/a&gt; (&lt;a href="https://github.com/i0natan/nodebestpractices/issues/94"&gt;Discussion&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/assets/flags/ES.png"&gt;&lt;img src="/assets/flags/ES.png" alt="ES" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/i0natan/nodebestpractices/blob/spanish-translation/README.spanish.md"&gt;Spanish&lt;/a&gt; (&lt;a href="https://github.com/i0natan/nodebestpractices/issues/95"&gt;Discussion&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/assets/flags/TR.png"&gt;&lt;img src="/assets/flags/TR.png" alt="TR" style="max-width:100%;"&gt;&lt;/a&gt; Turkish (&lt;a href="https://github.com/i0natan/nodebestpractices/issues/139"&gt;Discussion&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-steering-committee" class="anchor" aria-hidden="true" href="#steering-committee"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Steering Committee&lt;/h2&gt;
&lt;p&gt;Meet the steering committee members - the people who work together to provide guidance and future direction to the project. In addition, each member of the committee leads a project tracked under our &lt;a href="https://github.com/i0natan/nodebestpractices/projects"&gt;Github projects&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/members/yoni.png"&gt;&lt;img align="left" width="100" height="100" src="assets/images/members/yoni.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/i0natan"&gt;Yoni Goldberg&lt;/a&gt;
&lt;a href="https://twitter.com/goldbergyoni" rel="nofollow"&gt;&lt;img src="assets/images/twitter-s.png" width="16" height="16" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://goldbergyoni.com" rel="nofollow"&gt;&lt;img src="assets/images/www.png" width="16" height="16" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Independent Node.js consultant who works with customers in USA, Europe, and Israel on building large scale scalable Node applications. Many of the best practices above were first published at &lt;a href="https://goldbergyoni.com" rel="nofollow"&gt;goldbergyoni.com&lt;/a&gt;. Reach Yoni at @goldbergyoni or &lt;a href="mailto:me@goldbergyoni.com"&gt;me@goldbergyoni.com&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/members/bruno.png"&gt;&lt;img align="left" width="100" height="100" src="assets/images/members/bruno.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/BrunoScheufler"&gt;Bruno Scheufler&lt;/a&gt;
&lt;a href="https://brunoscheufler.com/" rel="nofollow"&gt;&lt;img src="assets/images/www.png" width="16" height="16" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;💻&lt;/g-emoji&gt; full-stack web engineer, Node.js &amp;amp; GraphQL enthusiast&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/members/kyle.png"&gt;&lt;img align="left" width="100" height="100" src="assets/images/members/kyle.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/js-kyle"&gt;Kyle Martin&lt;/a&gt;
&lt;a href="https://twitter.com/kylemartin_93" rel="nofollow"&gt;&lt;img src="assets/images/twitter-s.png" width="16" height="16" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.linkedin.com/in/kylemartinnz" rel="nofollow"&gt;&lt;img src="assets/images/linkedin.png" width="16" height="16" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Full Stack Developer &amp;amp; Site Reliability Engineer based in New Zealand, interested in web application security, and architecting and building Node.js applications to perform at global scale.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/images/members/sagir.png"&gt;&lt;img align="left" width="100" height="100" src="assets/images/members/sagir.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/sagirk"&gt;Sagir Khan&lt;/a&gt;
&lt;a href="https://twitter.com/sagir_k" rel="nofollow"&gt;&lt;img src="assets/images/twitter-s.png" width="16" height="16" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://sagirk.com" rel="nofollow"&gt;&lt;img src="assets/images/www.png" width="16" height="16" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://linkedin.com/in/sagirk" rel="nofollow"&gt;&lt;img src="assets/images/linkedin.png" width="16" height="16" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Deep specialist in JavaScript and its ecosystem — React, Node.js, MongoDB, pretty much anything that involves using JavaScript/JSON in any layer of the system — building products using the web platform for the world’s most recognized brands. Individual Member of the Node.js Foundation, collaborating on the Community Committee's Website Redesign Initiative.&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-collaborators" class="anchor" aria-hidden="true" href="#collaborators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Collaborators&lt;/h2&gt;
&lt;p&gt;Thank you to all our collaborators! &lt;g-emoji class="g-emoji" alias="pray" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png"&gt;🙏&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;Our collaborators are members who are contributing to the repository on a regular basis, through suggesting new best practices, triaging issues, reviewing pull requests and more. If you are interested in helping us guide thousands of people to craft better Node.js applications, please read our &lt;a href="/.operations/CONTRIBUTING.md"&gt;contributor guidelines&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="tada" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png"&gt;🎉&lt;/g-emoji&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;&lt;a href="https://github.com/idori"&gt;&lt;img src="assets/images/members/ido.png" width="75" height="75" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th align="center"&gt;&lt;a href="https://github.com/TheHollidayInn"&gt;&lt;img src="assets/images/members/keith.png" width="75" height="75" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="https://github.com/idori"&gt;Ido Richter (Founder)&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://github.com/TheHollidayInn"&gt;Keith Holliday&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-past-collaborators" class="anchor" aria-hidden="true" href="#past-collaborators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Past collaborators&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;&lt;a href="https://github.com/refack"&gt;&lt;img src="assets/images/members/refael.png" width="50" height="50" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="https://github.com/refack"&gt;Refael Ackermann&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-thank-you-notes" class="anchor" aria-hidden="true" href="#thank-you-notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thank You Notes&lt;/h2&gt;
&lt;p&gt;We appreciate any contribution, from a single word fix to a new best practice. View our contributors and &lt;a href="CONTRIBUTORS.md"&gt;contributing documentation here!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>goldbergyoni</author><guid isPermaLink="false">https://github.com/goldbergyoni/nodebestpractices</guid><pubDate>Tue, 19 Nov 2019 00:12:00 GMT</pubDate></item><item><title>didi/DoraemonKit #13 in All Languages, This week</title><link>https://github.com/didi/DoraemonKit</link><description>&lt;p&gt;&lt;i&gt;简称 "DoKit" 。一款功能齐全的客户端（ iOS 、Android、微信小程序 ）研发助手，你值得拥有。&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;div align="center"&gt;    
 &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c08221555cad56fd31962d74f7ebe7698cf32488/68747470733a2f2f6a617665722e6f73732d636e2d7368616e676861692e616c6979756e63732e636f6d2f646f7261656d6f6e2f6769746875622f446f7261656d6f6e4b69745f6769746875622e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/c08221555cad56fd31962d74f7ebe7698cf32488/68747470733a2f2f6a617665722e6f73732d636e2d7368616e676861692e616c6979756e63732e636f6d2f646f7261656d6f6e2f6769746875622f446f7261656d6f6e4b69745f6769746875622e706e67" width="150" height="150" alt="DoraemonKit" align="left" data-canonical-src="https://javer.oss-cn-shanghai.aliyuncs.com/doraemon/github/DoraemonKit_github.png" style="max-width:100%;"&gt;&lt;/a&gt;
 &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/fef441b667ef7d0b0816b7caebf7a14dee8685d2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f646964692f446f7261656d6f6e4b69742e737667"&gt;&lt;img src="https://camo.githubusercontent.com/fef441b667ef7d0b0816b7caebf7a14dee8685d2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f646964692f446f7261656d6f6e4b69742e737667" align="left" data-canonical-src="https://img.shields.io/github/license/didi/DoraemonKit.svg" style="max-width:100%;"&gt;&lt;/a&gt;
 &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/f92c2e79f3dab912cd22dd6c197d9d3b602272ee/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f416e64726f69642d322e302e312d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/f92c2e79f3dab912cd22dd6c197d9d3b602272ee/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f416e64726f69642d322e302e312d626c75652e737667" align="left" data-canonical-src="https://img.shields.io/badge/Android-2.0.1-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
 &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/13e8ce0e76d4b725e297f55d1bb6a8bb34ad6063/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f694f532d322e302e302d79656c6c6f772e737667"&gt;&lt;img src="https://camo.githubusercontent.com/13e8ce0e76d4b725e297f55d1bb6a8bb34ad6063/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f694f532d322e302e302d79656c6c6f772e737667" align="left" data-canonical-src="https://img.shields.io/badge/iOS-2.0.0-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt;
 &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/16d11318face77068db5ee9a56883a8b05db9cf1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d696e696170702d302e302e312d7265642e737667"&gt;&lt;img src="https://camo.githubusercontent.com/16d11318face77068db5ee9a56883a8b05db9cf1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d696e696170702d302e302e312d7265642e737667" align="left" data-canonical-src="https://img.shields.io/badge/miniapp-0.0.1-red.svg" style="max-width:100%;"&gt;&lt;/a&gt;
 &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d4e0f63e9613ee474a7dfdc23c240b9795712c96/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/d4e0f63e9613ee474a7dfdc23c240b9795712c96/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e737667" align="left" data-canonical-src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;DoraemonKit&lt;/strong&gt; /'dɔ:ra:'emɔn/，简称&lt;code&gt;DoKit&lt;/code&gt;，中文名 &lt;code&gt;哆啦A梦&lt;/code&gt;，意味着能够像哆啦A梦一样提供给他的主人各种各样的工具。Just Do Kit&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="README_EN.md"&gt;English Introduction&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-开发背景" class="anchor" aria-hidden="true" href="#开发背景"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;开发背景&lt;/h2&gt;
&lt;p&gt;每一个稍微有点规模的 App，总会自带一些线下的测试功能代码，比如环境切换功能、帧率查看功能等等，这些功能的切换入口往往放在各式各样的入口中，比如一些特殊的手势，双击 statusBar，双击某一个功能区块，或者新建一个 keyWindow 始终至于 App 最上方等等，而且每一个 App 里面的线下附带功能模块很多是相似的，比如帧率查看、内存和 CPU 监控等等，但是现在基本上都是每个 App 都是自己实现了一份，经历了以上的问题之后，DoraemonKit 就有了它存在的意义。&lt;/p&gt;
&lt;p&gt;DoraemonKit 是一个功能集合面板，能够让每一个 App 快速接入一些常用的或者你没有实现的一些辅助开发工具、测试效率工具、视觉辅助工具，而且能够完美在 Doraemon 面板中接入你已经实现的与业务紧密耦合的一些非通有的辅助工具，功能强大，接入方便，便于扩展。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;简单总结&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、DoraemonKit 能够快速让你的业务测试代码能够在这里统一管理，统一收口；&lt;br&gt;
2、DoraemonKit 内置很多常用的工具，避免重复实现，一次接入，你将会拥有强大的工具集合。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-效果演示" class="anchor" aria-hidden="true" href="#效果演示"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;效果演示&lt;/h2&gt;
&lt;div align="center"&gt;    
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/3b9f263845347f50630f803f8fd3d5f815cad122/68747470733a2f2f6a617665722e6f73732d636e2d7368616e676861692e616c6979756e63732e636f6d2f323031392f6769746875622f646f6b6974322e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/3b9f263845347f50630f803f8fd3d5f815cad122/68747470733a2f2f6a617665722e6f73732d636e2d7368616e676861692e616c6979756e63732e636f6d2f323031392f6769746875622f646f6b6974322e706e67" width="300" height="780" alt="DoKit 首页效果演示" align="center" data-canonical-src="https://javer.oss-cn-shanghai.aliyuncs.com/2019/github/dokit2.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-功能模块" class="anchor" aria-hidden="true" href="#功能模块"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;功能模块&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-一常用工具" class="anchor" aria-hidden="true" href="#一常用工具"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;一、常用工具&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;【App 信息查看】&lt;/strong&gt; 快速查看手机信息，App 信息，权限信息的渠道，避免去手机设置查找或者查看项目源代码的麻烦；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【沙盒浏览】&lt;/strong&gt; App 内部文件浏览的功能，支持删除和预览, 并且能通过 AirDrop 或者其他分享方式上传到 PC 中，进行更加细致的操作；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【MockGPS】&lt;/strong&gt; App 能定位到全国各地，支持地图地位和手动输入经纬度；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【H5任意门】&lt;/strong&gt; 开发测试同学可以快速输入 H5 页面地址，查看该页面效果；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Crash查看】&lt;/strong&gt; 方便本地打印出出现 Crash 的堆栈；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【子线程UI】&lt;/strong&gt; 快速定位哪一些 UI 操作在非主线程中进行渲染，避免不必要的问题；（iOS独有）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【清除本地数据】&lt;/strong&gt; 一键删除沙盒中所有数据；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【NSLog】&lt;/strong&gt; 把所有 NSLog 信息打印到UI界面，避免没有开发证书无法调式的尴尬；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Lumberjack】&lt;/strong&gt; 每一条 CocoaLumberjack 的日志信息，都在在 App 的界面中显示出来，再也不需要导出日志这么麻烦;（iOS独有）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【DBView】&lt;/strong&gt; 通过网页方便快捷的操作应用内数据库，让数据库的调试变得非常优雅;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【模拟弱网】&lt;/strong&gt; 限制网速，模拟弱网环境下App的运行情况。（android独有）&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-二性能检测" class="anchor" aria-hidden="true" href="#二性能检测"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;二、性能检测&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;【帧率】&lt;/strong&gt; App 帧率信息提供波形图查看功能，让帧率监控的趋势更加明显；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【CPU】&lt;/strong&gt; App CPU 使用率信息提供波形图查看功能，让 CPU 监控的趋势更加形象；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【内存】&lt;/strong&gt; App 内存使用量信息提供波形图查看功能，让内存监控的趋势更加鲜明；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【流量】&lt;/strong&gt; 拦截 App 内部流量信息，提供波形图展示、流量概要展示、流量列表展示、流量筛选、流量详情，对流量信息统一拦截，成为我们 App 中自带的 “Charles”；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【卡顿】&lt;/strong&gt; 锁定 App 出现卡顿的时刻，打印出对应的代码调用堆栈；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【大图检测】&lt;/strong&gt; 通过流量监测，找出所有的大小超标的图片，避免下载大图造成的流量浪费和渲染大图带来的CPU消耗。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【自定义】&lt;/strong&gt; 可以选择你要监控的选项，包括 FPS、CPU、内存、流量。监控完毕之后，把数据保存到本地，按照页面进行维度进行分析；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【启动耗时】&lt;/strong&gt; 无侵入的统计出App启动过程的总共耗时；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【UI层级检查】&lt;/strong&gt; 检查出每一个页面中层级最深的元素；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【函数耗时】&lt;/strong&gt; 从函数级别分析app性能瓶颈；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【Load】&lt;/strong&gt; 找出所有的Load方法，并给出耗时分析；（iOS独有）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【内存泄漏】&lt;/strong&gt; 找出App中所有的内存泄漏的问题。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-三视觉工具" class="anchor" aria-hidden="true" href="#三视觉工具"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;三、视觉工具&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;【颜色吸管】&lt;/strong&gt; 方便设计师 UI 捉虫的时候，查看每一个组件的颜色值是否设置正确；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【组件检查】&lt;/strong&gt; 可以抓取任意一个UI控件，查看它们的详细信息，包括控件名称、控件位置、背景色、字体颜色、字体大小；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【对齐标尺】&lt;/strong&gt; 参考 Android 系统自带测试工具，能够实时捕获屏幕坐标，并且可以查看组件是否对齐；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【元素边框线】&lt;/strong&gt; 绘制出每一个 UI 组件的边框，对于组件布局有一定的参考意义。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-四weex专项工具cml专项工具" class="anchor" aria-hidden="true" href="#四weex专项工具cml专项工具"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;四、Weex专项工具（CML专项工具）&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;【console日志查看】&lt;/strong&gt; 方便在端上查看每一个Weex文件中的console日志，提供分级和搜索功能；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【storage缓存查看】&lt;/strong&gt; 将Weex中的storage模块的本地缓存数据可视化展示；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【容器信息】&lt;/strong&gt; 查看每一个打开的Weex页面的基本信息和性能数据；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;【DevTool】&lt;/strong&gt; 快速开启Weex DevTool的扫码入口。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;tips ： 如果使用我们滴滴优秀的开源跨端方案 &lt;a href="https://github.com/didi/chameleon"&gt;chameleon&lt;/a&gt; 也可以集成该工具集合&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-五支持自定义的业务工具集成到面板中" class="anchor" aria-hidden="true" href="#五支持自定义的业务工具集成到面板中"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;五、支持自定义的业务工具集成到面板中&lt;/h3&gt;
&lt;p&gt;统一维护和管理所有的测试模块，详见接入手册&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-六微信小程序专项工具" class="anchor" aria-hidden="true" href="#六微信小程序专项工具"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;六、微信小程序专项工具&lt;/h3&gt;
&lt;p&gt;详见 &lt;a href="https://github.com/didi/DoraemonKit/tree/master/miniapp"&gt;Doraemon mini program debugger&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-接入文档" class="anchor" aria-hidden="true" href="#接入文档"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;接入文档&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Doc/iOS_cn_guide.md"&gt;iOS 接入文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Doc/android_cn_guide.md"&gt;Android 接入文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/didi/DoraemonKit/blob/master/miniapp/README.md"&gt;微信小程序 接入文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-相关文档" class="anchor" aria-hidden="true" href="#相关文档"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;相关文档&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.jianshu.com/p/00763123dbc4" rel="nofollow"&gt;iOS 研发助手 DoraemonKit 技术实现（一）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jianshu.com/p/4091870ca3f0" rel="nofollow"&gt;iOS 研发助手 DoraemonKit 技术实现（二）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://juejin.im/post/5d76184ce51d4561d106cc65" rel="nofollow"&gt;DoKit支持iOS本地crash查看功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://juejin.im/post/5c4dcfe8518825261e1f2978" rel="nofollow"&gt;开源组件 DoraemonKit 之 Android 版本技术实现（一）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://juejin.im/post/5c73db105188256ec63f13bb" rel="nofollow"&gt;开源组件 DoraemonKit 之 Android 版本技术实现（二）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://juejin.im/post/5d70bc3051882571ed61e407" rel="nofollow"&gt;DoKit支持Activity启动耗时统计方案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://juejin.im/post/5d9bf252518825095c3c5e32" rel="nofollow"&gt;DoKit 微信小程序SDK对外发布&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-更新日志" class="anchor" aria-hidden="true" href="#更新日志"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;更新日志&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Doc/iOS-ReleaseNotes.md"&gt;iOS-ReleaseNotes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Doc/android-ReleaseNotes.md"&gt;Android-ReleaseNotes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Doc/miniapp-ReleaseNotes.md"&gt;微信小程序-ReleaseNotes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-qq-交流群" class="anchor" aria-hidden="true" href="#qq-交流群"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;QQ 交流群&lt;/h2&gt;
&lt;div align="center"&gt;    
 &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/8caa3aa9ac0da0323d650c52228984aaedfb868b/68747470733a2f2f6a617665722e6f73732d636e2d7368616e676861692e616c6979756e63732e636f6d2f646f7261656d6f6e2f6769746875622f446f7261656d6f6e4b697451512e6a706567"&gt;&lt;img src="https://camo.githubusercontent.com/8caa3aa9ac0da0323d650c52228984aaedfb868b/68747470733a2f2f6a617665722e6f73732d636e2d7368616e676861692e616c6979756e63732e636f6d2f646f7261656d6f6e2f6769746875622f446f7261656d6f6e4b697451512e6a706567" width="160" height="200" alt="QQ 交流群" align="left" data-canonical-src="https://javer.oss-cn-shanghai.aliyuncs.com/doraemon/github/DoraemonKitQQ.jpeg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-项目成员" class="anchor" aria-hidden="true" href="#项目成员"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;项目成员&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-发起者--负责人" class="anchor" aria-hidden="true" href="#发起者--负责人"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;发起者 / 负责人&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/yixiangboy"&gt;yixiangboy&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-内部核心成员" class="anchor" aria-hidden="true" href="#内部核心成员"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;内部核心成员&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/LinJZong"&gt;LinJZong&lt;/a&gt; 、
&lt;a href="https://github.com/wanglikun7342"&gt;wanglikun7342&lt;/a&gt; 、
&lt;a href="https://github.com/jtsky"&gt;jtsky&lt;/a&gt; 、
&lt;a href="https://github.com/wenquanlebao"&gt;wenquanlebao&lt;/a&gt; 、
&lt;a href="https://github.com/hiXgb"&gt;hiXgb&lt;/a&gt; 、
&lt;a href="https://github.com/Chinnko"&gt;Chinnko&lt;/a&gt; 、
&lt;a href="https://github.com/y644938647"&gt;y644938647&lt;/a&gt; 、
&lt;a href="https://github.com/goolong"&gt;goolong&lt;/a&gt; 、
&lt;a href="https://github.com/miracle9312"&gt;miracle9312&lt;/a&gt; 、
&lt;a href="https://github.com/lwhsgz123"&gt;lwhsgz123&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-外部贡献者" class="anchor" aria-hidden="true" href="#外部贡献者"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;外部贡献者&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/huakucha"&gt;huakucha&lt;/a&gt; 、
&lt;a href="https://github.com/HuginChen"&gt;HuginChen&lt;/a&gt; 、
&lt;a href="https://github.com/feng562925462"&gt;feng562925462&lt;/a&gt; 、
&lt;a href="https://github.com/azhon"&gt;azhon&lt;/a&gt; 、
&lt;a href="https://github.com/rex26"&gt;rex26&lt;/a&gt; 、
&lt;a href="https://github.com/csc-EricWu"&gt;csc-EricWu&lt;/a&gt; 、
&lt;a href="https://github.com/dengyuhan"&gt;dengyuhan&lt;/a&gt; 、
&lt;a href="https://github.com/0xd-cc"&gt;0xd-cc&lt;/a&gt; 、
&lt;a href="https://github.com/k373379320"&gt;k373379320&lt;/a&gt; 、
&lt;a href="https://github.com/fabcz"&gt;fabcz&lt;/a&gt; 、
&lt;a href="https://github.com/y500"&gt;y500&lt;/a&gt; 、
&lt;a href="https://github.com/Knight-ZXW"&gt;Knight-ZXW&lt;/a&gt; 、
&lt;a href="https://github.com/boai"&gt;boai&lt;/a&gt; 、
&lt;a href="https://github.com/klone1127"&gt;klone1127&lt;/a&gt; 、
&lt;a href="https://github.com/DeveloperLY"&gt;DeveloperLY&lt;/a&gt; 、
&lt;a href="https://github.com/sagdragon"&gt;sagdragon&lt;/a&gt; 、
&lt;a href="https://github.com/ccworld1000"&gt;ccworld1000&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如何成为外部贡献者？ 提交有意义的PR，并被采纳。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-协议" class="anchor" aria-hidden="true" href="#协议"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;协议&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/dd78a86f08266a3e3592626a796f746a5daaabea/68747470733a2f2f6c7563656e652e6170616368652e6f72672f696d616765732f6d616e746c652d706f7765722e706e67"&gt;&lt;img alt="Apache-2.0 license" src="https://camo.githubusercontent.com/dd78a86f08266a3e3592626a796f746a5daaabea/68747470733a2f2f6c7563656e652e6170616368652e6f72672f696d616765732f6d616e746c652d706f7765722e706e67" width="128" data-canonical-src="https://lucene.apache.org/images/mantle-power.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DoraemonKit 基于 Apache-2.0 协议进行分发和使用，更多信息参见 &lt;a href="LICENSE"&gt;协议文件&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-使用提醒" class="anchor" aria-hidden="true" href="#使用提醒"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;使用提醒&lt;/h2&gt;
&lt;p&gt;为了统计本开源软件的外部使用情况，我们会上传用户app的相关信息，包括appName、bundleId。
这些信息我们收集绝不用于任何恶意用途。&lt;/p&gt;
&lt;p&gt;iOS上传代码详见DoraemonStatisticsUtil类中的实现&lt;/p&gt;
&lt;p&gt;Andoid上传代码详见DoraemonStatisticsUtil类中的实现&lt;/p&gt;
&lt;p&gt;敬请各位用户知晓。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-友情链接" class="anchor" aria-hidden="true" href="#友情链接"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;友情链接&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;我们部门的另外一款开源工具，一个终端侧AI集成运行时环境 &lt;a href="https://github.com/didi/AoE"&gt;AoE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;我们部门的技术公众号（普惠出行产品技术公众号），欢迎关注&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/caf4a92c2b3bbbe4f4cc6b8dd7b7f8a0b614f5ee/68747470733a2f2f6a617665722e6f73732d636e2d7368616e676861692e616c6979756e63732e636f6d2f323031392f6769746875622f7068677a682e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/caf4a92c2b3bbbe4f4cc6b8dd7b7f8a0b614f5ee/68747470733a2f2f6a617665722e6f73732d636e2d7368616e676861692e616c6979756e63732e636f6d2f323031392f6769746875622f7068677a682e6a7067" alt="https://javer.oss-cn-shanghai.aliyuncs.com/2019/github/phgzh.jpg" data-canonical-src="https://javer.oss-cn-shanghai.aliyuncs.com/2019/github/phgzh.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>didi</author><guid isPermaLink="false">https://github.com/didi/DoraemonKit</guid><pubDate>Tue, 19 Nov 2019 00:13:00 GMT</pubDate></item><item><title>fchollet/ARC #14 in All Languages, This week</title><link>https://github.com/fchollet/ARC</link><description>&lt;p&gt;&lt;i&gt;The Abstraction and Reasoning Corpus&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-the-abstraction-and-reasoning-corpus-arc" class="anchor" aria-hidden="true" href="#the-abstraction-and-reasoning-corpus-arc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Abstraction and Reasoning Corpus (ARC)&lt;/h1&gt;
&lt;p&gt;This repository contains the ARC task data, as well as a browser-based interface for humans to try their hand at solving the tasks manually.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;"ARC can be seen as a general artificial intelligence benchmark, as a program synthesis benchmark, or as a psychometric intelligence test. It is targeted at both humans and artificially intelligent systems that aim at emulating a human-like form of general fluid intelligence."&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A complete description of the dataset, its goals, and its underlying logic, can be found in: &lt;a href="https://arxiv.org/abs/1911.01547" rel="nofollow"&gt;The Measure of Intelligence&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As a reminder, a test-taker is said to solve a task when, upon seeing the task for the first time, they are able to produce the correct output grid for &lt;em&gt;all&lt;/em&gt; test inputs in the task (this includes picking the dimensions of the output grid). For each test input, the test-taker is allowed 3 trials (this holds for all test-takers, either humans or AI).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-task-file-format" class="anchor" aria-hidden="true" href="#task-file-format"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Task file format&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;data&lt;/code&gt; directory contains two subdirectories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;data/training&lt;/code&gt;: contains the task files for training (400 tasks). Use these to prototype your algorithm or to train your algorithm to acquire ARC-relevant cognitive priors.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data/evaluation&lt;/code&gt;: contains the task files for evaluation (400 tasks). Use these to evaluate your final algorithm. To ensure fair evaluation results, do not leak information from the evaluation set into your algorithm (e.g. by looking at the evaluation tasks yourself during development, or by repeatedly modifying an algorithm while using its evaluation score as feedback).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The tasks are stored in JSON format. Each task JSON file contains a dictionary with two fields:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;"train"&lt;/code&gt;: demonstration input/output pairs. It is a list of "pairs" (typically 3 pairs).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;"test"&lt;/code&gt;: test input/output pairs. It is a list of "pairs" (typically 1 pair).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A "pair" is a dictionary with two fields:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;"input"&lt;/code&gt;: the input "grid" for the pair.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;"output"&lt;/code&gt;: the output "grid" for the pair.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A "grid" is a rectangular matrix (list of lists) of integers between 0 and 9 (inclusive). The smallest possible grid size is 1x1 and the largest is 30x30.&lt;/p&gt;
&lt;p&gt;When looking at a task, a test-taker has access to inputs &amp;amp; outputs of the demonstration pairs, plus the input(s) of the test pair(s). The goal is to construct the output grid(s) corresponding to the test input grid(s), using 3 trials for each test input. "Constructing the output grid" involves picking the height and width of the output grid, then filling each cell in the grid with a symbol (integer between 0 and 9, which are visualized as colors). Only &lt;em&gt;exact&lt;/em&gt; solutions (all cells match the expected answer) can be said to be correct.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage-of-the-testing-interface" class="anchor" aria-hidden="true" href="#usage-of-the-testing-interface"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage of the testing interface&lt;/h2&gt;
&lt;p&gt;The testing interface is located at &lt;code&gt;apps/testing_interface.html&lt;/code&gt;. Open it in a web browser (Chrome recommended). It will prompt you to select a task JSON file.&lt;/p&gt;
&lt;p&gt;After loading a task, you will enter the test space, which looks like this:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e09efad05e838b24ac2b98bcd75c1e67be811262/68747470733a2f2f6172632d62656e63686d61726b2e73332e616d617a6f6e6177732e636f6d2f666967732f6172635f746573745f73706163652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e09efad05e838b24ac2b98bcd75c1e67be811262/68747470733a2f2f6172632d62656e63686d61726b2e73332e616d617a6f6e6177732e636f6d2f666967732f6172635f746573745f73706163652e706e67" alt="test space" data-canonical-src="https://arc-benchmark.s3.amazonaws.com/figs/arc_test_space.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;On the left, you will see the input/output pairs demonstrating the nature of the task. In the middle, you will see the current test input grid. On the right, you will see the controls you can use to construct the corresponding output grid.&lt;/p&gt;
&lt;p&gt;You have access to the following tools:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-grid-controls" class="anchor" aria-hidden="true" href="#grid-controls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Grid controls&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Resize: input a grid size (e.g. "10x20" or "4x4") and click "Resize". This preserves existing grid content (in the top left corner).&lt;/li&gt;
&lt;li&gt;Copy from input: copy the input grid to the output grid. This is useful for tasks where the output consists of some modification of the input.&lt;/li&gt;
&lt;li&gt;Reset grid: fill the grid with 0s.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-symbol-controls" class="anchor" aria-hidden="true" href="#symbol-controls"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Symbol controls&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Edit: select a color (symbol) from the color picking bar, then click on a cell to set its color.&lt;/li&gt;
&lt;li&gt;Select: click and drag on either the output grid or the input grid to select cells.
&lt;ul&gt;
&lt;li&gt;After selecting cells on the output grid, you can select a color from the color picking to set the color of the selected cells. This is useful to draw solid rectangles or lines.&lt;/li&gt;
&lt;li&gt;After selecting cells on either the input grid or the output grid, you can press C to copy their content. After copying, you can select a cell on the output grid and press "V" to paste the copied content. You should select the cell in the top left corner of the zone you want to paste into.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Floodfill: click on a cell from the output grid to color all connected cells to the selected color. "Connected cells" are contiguous cells with the same color.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-answer-validation" class="anchor" aria-hidden="true" href="#answer-validation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Answer validation&lt;/h3&gt;
&lt;p&gt;When your output grid is ready, click the green "Submit!" button to check your answer. We do not enforce the 3-trials rule.&lt;/p&gt;
&lt;p&gt;After you've obtained the correct answer for the current test input grid, you can switch to the next test input grid for the task using the "Next test input" button (if there is any available; most tasks only have one test input).&lt;/p&gt;
&lt;p&gt;When you're done with a task, use the "load task" button to open a new task.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>fchollet</author><guid isPermaLink="false">https://github.com/fchollet/ARC</guid><pubDate>Tue, 19 Nov 2019 00:14:00 GMT</pubDate></item><item><title>tokio-rs/tokio #15 in All Languages, This week</title><link>https://github.com/tokio-rs/tokio</link><description>&lt;p&gt;&lt;i&gt;A runtime for writing reliable asynchronous applications with Rust. Provides I/O, networking, scheduling, timers, ...&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-tokio" class="anchor" aria-hidden="true" href="#tokio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tokio&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Tokio's &lt;a href="https://github.com/tokio-rs/tokio"&gt;&lt;code&gt;master&lt;/code&gt;&lt;/a&gt; is currently undergoing heavy development. This branch and the alpha releases will see API breaking changes and there are currently significant performance regressions that still need to be fixed before the final release. Use the &lt;a href="https://github.com/tokio-rs/tokio/tree/v0.1.x"&gt;&lt;code&gt;v0.1.x&lt;/code&gt;&lt;/a&gt; branch for stable releases.&lt;/p&gt;
&lt;p&gt;A runtime for writing reliable, asynchronous, and slim applications with
the Rust programming language. It is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Fast&lt;/strong&gt;: Tokio's zero-cost abstractions give you bare-metal
performance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Reliable&lt;/strong&gt;: Tokio leverages Rust's ownership, type system, and
concurrency model to reduce bugs and ensure thread safety.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Scalable&lt;/strong&gt;: Tokio has a minimal footprint, and handles backpressure
and cancellation naturally.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://crates.io/crates/tokio" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ecb27ee556c89bb2a79b02da275d1feebb2599d9/68747470733a2f2f696d672e736869656c64732e696f2f6372617465732f762f746f6b696f2e737667" alt="Crates.io" data-canonical-src="https://img.shields.io/crates/v/tokio.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/890acbdcb87868b382af9a4b1fac507b9659d9bf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667" alt="MIT licensed" data-canonical-src="https://img.shields.io/badge/license-MIT-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dev.azure.com/tokio-rs/Tokio/_build/latest?definitionId=1&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/138f37478f0e6081de6d0979086986c29f3c5749/68747470733a2f2f6465762e617a7572652e636f6d2f746f6b696f2d72732f546f6b696f2f5f617069732f6275696c642f7374617475732f746f6b696f2d72732e746f6b696f3f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/tokio-rs/Tokio/_apis/build/status/tokio-rs.tokio?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/tokio-rs/tokio" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/331e6ebd4bdc7a0babb7018f592be44b644cd625/68747470733a2f2f696d672e736869656c64732e696f2f6769747465722f726f6f6d2f746f6b696f2d72732f746f6b696f2e737667" alt="Gitter chat" data-canonical-src="https://img.shields.io/gitter/room/tokio-rs/tokio.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://tokio.rs" rel="nofollow"&gt;Website&lt;/a&gt; |
&lt;a href="https://tokio.rs/docs/" rel="nofollow"&gt;Guides&lt;/a&gt; |
&lt;a href="https://docs.rs/tokio/latest/tokio" rel="nofollow"&gt;API Docs&lt;/a&gt; |
&lt;a href="https://gitter.im/tokio-rs/tokio" rel="nofollow"&gt;Chat&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;Tokio is an event-driven, non-blocking I/O platform for writing
asynchronous applications with the Rust programming language. At a high
level, it provides a few major components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A multithreaded, work-stealing based task &lt;a href="https://docs.rs/tokio/latest/tokio/runtime/index.html" rel="nofollow"&gt;scheduler&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;A reactor backed by the operating system's event queue (epoll, kqueue,
IOCP, etc...).&lt;/li&gt;
&lt;li&gt;Asynchronous &lt;a href="https://docs.rs/tokio/latest/tokio/net/index.html" rel="nofollow"&gt;TCP and UDP&lt;/a&gt; sockets.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These components provide the runtime components necessary for building
an asynchronous application.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h2&gt;
&lt;p&gt;A basic TCP echo server with Tokio:&lt;/p&gt;
&lt;div class="highlight highlight-source-rust"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;use&lt;/span&gt; tokio&lt;span class="pl-k"&gt;::&lt;/span&gt;net&lt;span class="pl-k"&gt;::&lt;/span&gt;TcpListener;
&lt;span class="pl-k"&gt;use&lt;/span&gt; tokio&lt;span class="pl-k"&gt;::&lt;/span&gt;prelude&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;;
&lt;span class="pl-k"&gt;use&lt;/span&gt; std&lt;span class="pl-k"&gt;::&lt;/span&gt;net&lt;span class="pl-k"&gt;::&lt;/span&gt;SocketAddr;

#[tokio::main]
&lt;span class="pl-k"&gt;async&lt;/span&gt; &lt;span class="pl-k"&gt;fn&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() -&amp;gt; &lt;span class="pl-k"&gt;Result&lt;/span&gt;&amp;lt;(), &lt;span class="pl-k"&gt;Box&lt;/span&gt;&amp;lt;&lt;span class="pl-k"&gt;dyn&lt;/span&gt; std::error::Error&amp;gt;&amp;gt; {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; addr &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;"127.0.0.1:8080"&lt;/span&gt;.&lt;span class="pl-en"&gt;parse&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;&amp;lt;SocketAddr&amp;gt;()?;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-k"&gt;mut&lt;/span&gt; listener &lt;span class="pl-k"&gt;=&lt;/span&gt; TcpListener&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-en"&gt;bind&lt;/span&gt;(&lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt;addr).&lt;span class="pl-k"&gt;await&lt;/span&gt;?;

    &lt;span class="pl-k"&gt;loop&lt;/span&gt; {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; (&lt;span class="pl-k"&gt;mut&lt;/span&gt; socket, _) &lt;span class="pl-k"&gt;=&lt;/span&gt; listener.&lt;span class="pl-en"&gt;accept&lt;/span&gt;().&lt;span class="pl-k"&gt;await&lt;/span&gt;?;

        tokio&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-en"&gt;spawn&lt;/span&gt;(&lt;span class="pl-k"&gt;async&lt;/span&gt; &lt;span class="pl-k"&gt;move&lt;/span&gt; {
            &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-k"&gt;mut&lt;/span&gt; buf &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;0&lt;/span&gt;; &lt;span class="pl-c1"&gt;1024&lt;/span&gt;];

            &lt;span class="pl-c"&gt;// In a loop, read data from the socket and write the data back.&lt;/span&gt;
            &lt;span class="pl-k"&gt;loop&lt;/span&gt; {
                &lt;span class="pl-k"&gt;let&lt;/span&gt; n &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;match&lt;/span&gt; socket.&lt;span class="pl-en"&gt;read&lt;/span&gt;(&lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt;&lt;span class="pl-k"&gt;mut&lt;/span&gt; buf).&lt;span class="pl-k"&gt;await&lt;/span&gt; {
                    &lt;span class="pl-c"&gt;// socket closed&lt;/span&gt;
                    &lt;span class="pl-c1"&gt;Ok&lt;/span&gt;(n) &lt;span class="pl-k"&gt;if&lt;/span&gt; n &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt;,
                    &lt;span class="pl-c1"&gt;Ok&lt;/span&gt;(n) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; n,
                    &lt;span class="pl-c1"&gt;Err&lt;/span&gt;(e) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; {
                        &lt;span class="pl-c1"&gt;println!&lt;/span&gt;(&lt;span class="pl-s"&gt;"failed to read from socket; err = {:?}"&lt;/span&gt;, e);
                        &lt;span class="pl-k"&gt;return&lt;/span&gt;;
                    }
                };

                &lt;span class="pl-c"&gt;// Write the data back&lt;/span&gt;
                &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;Err&lt;/span&gt;(e) &lt;span class="pl-k"&gt;=&lt;/span&gt; socket.&lt;span class="pl-en"&gt;write_all&lt;/span&gt;(&lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt;buf[&lt;span class="pl-c1"&gt;0&lt;/span&gt;..n]).&lt;span class="pl-k"&gt;await&lt;/span&gt; {
                    &lt;span class="pl-c1"&gt;println!&lt;/span&gt;(&lt;span class="pl-s"&gt;"failed to write to socket; err = {:?}"&lt;/span&gt;, e);
                    &lt;span class="pl-k"&gt;return&lt;/span&gt;;
                }
            }
        });
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;More examples can be found &lt;a href="examples"&gt;here&lt;/a&gt;. Note that the &lt;code&gt;master&lt;/code&gt; branch
is currently being updated to use &lt;code&gt;async&lt;/code&gt; / &lt;code&gt;await&lt;/code&gt;.  The examples are
not fully ported. Examples for stable Tokio can be found
&lt;a href="https://github.com/tokio-rs/tokio/tree/v0.1.x/tokio/examples"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help&lt;/h2&gt;
&lt;p&gt;First, see if the answer to your question can be found in the &lt;a href="https://tokio.rs/docs/" rel="nofollow"&gt;Guides&lt;/a&gt; or the
&lt;a href="https://docs.rs/tokio/latest/tokio" rel="nofollow"&gt;API documentation&lt;/a&gt;. If the answer is not there, there is an active community in
the &lt;a href="https://gitter.im/tokio-rs/tokio" rel="nofollow"&gt;Tokio Gitter channel&lt;/a&gt;. We would be happy to try to answer your
question.  Last, if that doesn't work, try opening an &lt;a href="https://github.com/tokio-rs/tokio/issues/new"&gt;issue&lt;/a&gt; with the question.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="balloon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f388.png"&gt;🎈&lt;/g-emoji&gt; Thanks for your help improving the project! We are so happy to have
you! We have a &lt;a href="CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt; to help you get involved in the Tokio
project.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-related-projects" class="anchor" aria-hidden="true" href="#related-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related Projects&lt;/h2&gt;
&lt;p&gt;In addition to the crates in this repository, the Tokio project also maintains
several other libraries, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/tokio-rs/tracing"&gt;&lt;code&gt;tracing&lt;/code&gt;&lt;/a&gt; (formerly &lt;code&gt;tokio-trace&lt;/code&gt;): A framework for application-level
tracing and async-aware diagnostics.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/tokio-rs/mio"&gt;&lt;code&gt;mio&lt;/code&gt;&lt;/a&gt;: A low-level, cross-platform abstraction over OS I/O APIs that powers
&lt;code&gt;tokio&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/tokio-rs/bytes"&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;: Utilities for working with bytes, including efficient byte buffers.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-supported-rust-versions" class="anchor" aria-hidden="true" href="#supported-rust-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Rust Versions&lt;/h2&gt;
&lt;p&gt;Tokio is built against the latest stable, nightly, and beta Rust releases. The
minimum version supported is the stable release from three months before the
current stable release version. For example, if the latest stable Rust is 1.29,
the minimum version supported is 1.26. The current Tokio version is not
guaranteed to build on Rust versions earlier than the minimum supported version.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;This project is licensed under the &lt;a href="LICENSE"&gt;MIT license&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-contribution" class="anchor" aria-hidden="true" href="#contribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution&lt;/h3&gt;
&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted
for inclusion in Tokio by you, shall be licensed as MIT, without any additional
terms or conditions.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>tokio-rs</author><guid isPermaLink="false">https://github.com/tokio-rs/tokio</guid><pubDate>Tue, 19 Nov 2019 00:15:00 GMT</pubDate></item><item><title>ProtonMail/ios-mail #16 in All Languages, This week</title><link>https://github.com/ProtonMail/ios-mail</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-ios-mail" class="anchor" aria-hidden="true" href="#ios-mail"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iOS-mail&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;iOS-mail — ProtonMail iOS client app&lt;/p&gt;
&lt;p&gt;The app is intended for all users of the ProtonMail service. Whether they are paid or free, they can compose and read emails, manage folders and labels, manage some account settings and create a new account. The app supports iOS 10-13.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;The code and data files in this distribution are licensed under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. See &lt;a href="https://www.gnu.org/licenses/" rel="nofollow"&gt;https://www.gnu.org/licenses/&lt;/a&gt; for a copy of this license.&lt;/p&gt;
&lt;p&gt;See &lt;a href="LICENSE"&gt;LICENSE&lt;/a&gt; file&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#Introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#License"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Architecture"&gt;Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Dependencies"&gt;Dependencies&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#Internal"&gt;Internal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Third-Party"&gt;Third Party&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#Content-Explanation"&gt;Content Explanation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#setup"&gt;Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#live-version"&gt;Live version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Articles"&gt;Articles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#our-team"&gt;Our Team&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#todo"&gt;TODO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;a id="user-content-architecture" class="anchor" aria-hidden="true" href="#architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Architecture&lt;/h2&gt;
&lt;p&gt;&lt;a href="mvvmc.png"&gt;MVVM-C&lt;/a&gt; with services. Model-View-ViewModel architecture, plus the Coordinator pattern.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-internal" class="anchor" aria-hidden="true" href="#internal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Internal&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ProtonMail/gopenpgp"&gt;gopenpgp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ProtonMail/cpp-openpgp"&gt;OpenPGP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ProtonMail/cpp-openpgp"&gt;VCard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ProtonMail/go-srp"&gt;go-srp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-third-party" class="anchor" aria-hidden="true" href="#third-party"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Third Party&lt;/h3&gt;
&lt;p&gt;&lt;a href="Acknowledgements.md"&gt;Acknowledgements&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-content-explanation" class="anchor" aria-hidden="true" href="#content-explanation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Content Explanation&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="OpenPGP/README.md"&gt;OpenPGP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="ProtonMail/Keymaker/README.md"&gt;Keymaker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="ProtonMail/ProtonMail/README.md"&gt;ProtonMail&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="ProtonMail/ProtonMailCommon/README.md"&gt;ProtonMailCommon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="ProtonMail/Push/README.md"&gt;Push&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="ProtonMail/PushService/README.md"&gt;PushService&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="ProtonMail/Share/README.md"&gt;Share&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="ProtonMail/Siri/README.md"&gt;Siri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Scripts/README.md"&gt;Scripts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="ProtonMail/README.md#Trust-Model"&gt;Trust Model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="ProtonMail/README.md#Local-Data"&gt;Local Data Protection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Have macOS up to date and install Xcode 11.1&lt;/li&gt;
&lt;li&gt;We use xUnique (ver 4.1.4) in order to prevent merge conflicts in the ProtonMail.xcodeproj file. Each shared scheme has a post-build action, and builds will fail on machines with no xUnique installed. Please follow xUnique's &lt;a href="https://github.com/truebit/xUnique"&gt;installation instructions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DOMPurify&lt;/code&gt;(@b06b6b2ac8) and Cocoapods are pre-downloaded. We are using git submodules for tracking DOMPurifier, so after cloning you have to run &lt;code&gt;git submodule init&lt;/code&gt; and &lt;code&gt;git submodule update&lt;/code&gt; to fetch it. Theory here: &lt;a href="https://git-scm.com/book/en/v2/Git-Tools-Submodules" rel="nofollow"&gt;https://git-scm.com/book/en/v2/Git-Tools-Submodules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Open &lt;code&gt;ProtonMail/ProtonMail.xcworkspace&lt;/code&gt; and click the run button&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-live-version" class="anchor" aria-hidden="true" href="#live-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Live version&lt;/h2&gt;
&lt;p&gt;Current live version 1.11.13&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Changelog.md"&gt;Changelogs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apps.apple.com/app/protonmail-encrypted-email/id979659905" rel="nofollow"&gt;Apple Store&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-articles" class="anchor" aria-hidden="true" href="#articles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Articles&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://protonmail.com/blog/ios-open-source" rel="nofollow"&gt;Open sourcing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://protonmail.com/blog/ios-security-model" rel="nofollow"&gt;Security model&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-our-team" class="anchor" aria-hidden="true" href="#our-team"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Our Team&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/zhj4478"&gt;Feng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abjurato"&gt;Anatoly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/henrybear327"&gt;Henry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emnproton"&gt;Emil&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TODO&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; UI redesign&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; multiple user support&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; share frameworks&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ProtonMail</author><guid isPermaLink="false">https://github.com/ProtonMail/ios-mail</guid><pubDate>Tue, 19 Nov 2019 00:16:00 GMT</pubDate></item><item><title>unknwon/the-way-to-go_ZH_CN #17 in All Languages, This week</title><link>https://github.com/unknwon/the-way-to-go_ZH_CN</link><description>&lt;p&gt;&lt;i&gt;《The Way to Go》中文译本，中文正式名《Go 入门指南》&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-go入门指南" class="anchor" aria-hidden="true" href="#go入门指南"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;《Go入门指南》&lt;/h1&gt;
&lt;p&gt;在接触 Go 语言之后，对这门编程语言非常着迷，期间也陆陆续续开始一些帮助国内编程爱好者了解和发展 Go 语言的工作，比如开始录制视频教程&lt;a href="https://github.com/Unknwon/go-fundamental-programming"&gt;《Go编程基础》&lt;/a&gt;。但由于目前国内并没有比较好的 Go 语言书籍，而国外的优秀书籍因为英文的缘故在一定程度上也为不少 Go 语言爱好者带来了一些学习上的困扰，不仅为了加快扩散 Go 爱好者的国内群体，本人在完成阅读这本名叫 《The Way to Go》 之后，决定每天抽出一点时间来进行翻译的工作，并且以开源的形式免费分享给有需要的 Go 语言爱好者。&lt;/p&gt;
&lt;p&gt;尽管该书对目前 Go 语言版本来说有小部分内容相对过时，但是为当下不可多得的好书，相关内容已获得作者同意根据当前 Go 语言版本进行修改而不作出特别声明。&lt;/p&gt;
&lt;p&gt;该翻译版本已获得原作者（Ivo Balbaert）本人授权，并表示支持开源事业的发展！&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-翻译进度" class="anchor" aria-hidden="true" href="#翻译进度"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;翻译进度&lt;/h2&gt;
&lt;p&gt;18.11 &lt;a href="eBook/18.11.md"&gt;出于性能考虑的最佳实践和建议&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-支持本书" class="anchor" aria-hidden="true" href="#支持本书"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;支持本书&lt;/h2&gt;
&lt;p&gt;如果你喜欢本书 《Go入门指南》，你可以参与到本书的翻译或纠正工作中来，具体请联系【无闻 E-mail：u#gogs.io】，一同完善本书并帮助壮大 Go 语言在国内的学习群体，给大家提供更好的学习资源。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-交流社区" class="anchor" aria-hidden="true" href="#交流社区"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;交流社区&lt;/h2&gt;
&lt;p&gt;参见 &lt;a href="https://github.com/Unknwon/go-study-index"&gt;Go 语言学习资料与社区索引&lt;/a&gt;。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-新人守则" class="anchor" aria-hidden="true" href="#新人守则"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;新人守则&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2012 年 3 月 28 日以前的博文中的内容基本过时，不要再看&lt;/li&gt;
&lt;li&gt;符合等式 &lt;em&gt;&lt;strong&gt;百度+思考+失败+翻墙+谷歌+尝试=解决&lt;/strong&gt;&lt;/em&gt; 的问题最好不要发问&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-致谢" class="anchor" aria-hidden="true" href="#致谢"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;致谢&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;本书原作者：Ivo Balbaert&lt;/li&gt;
&lt;li&gt;参与翻译人员：
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/zhanming"&gt;@zhanming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;themorecolor&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/everyx"&gt;@everyx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chidouhu"&gt;@chidouhu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/spawnris"&gt;@spawnris&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/domainname"&gt;@domainname&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/leisore"&gt;@leisore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dake"&gt;@dake&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/glight2000"&gt;@glight2000&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/songleo"&gt;@songleo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marjune163"&gt;@marjune163&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-授权许可" class="anchor" aria-hidden="true" href="#授权许可"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;授权许可&lt;/h2&gt;
&lt;p&gt;除特别声明外，本书中的内容使用 &lt;a href="http://creativecommons.org/licenses/by-sa/3.0/" rel="nofollow"&gt;CC BY-SA 3.0 License&lt;/a&gt;（创作共用 署名-相同方式共享3.0 许可协议）授权，代码遵循 &lt;a href="https://github.com/astaxie/build-web-application-with-golang/blob/master/LICENSE.md"&gt;BSD 3-Clause License&lt;/a&gt;（3 项条款的 BSD 许可协议）。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-开始阅读" class="anchor" aria-hidden="true" href="#开始阅读"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;开始阅读&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;您可以选择以下方式阅读本书：
&lt;ul&gt;
&lt;li&gt;&lt;a href="./eBook/preface.md"&gt;GitHub在线&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;想读书的人，不会找不到 &lt;a href="eBook/directory.md"&gt;目录&lt;/a&gt; :)&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>unknwon</author><guid isPermaLink="false">https://github.com/unknwon/the-way-to-go_ZH_CN</guid><pubDate>Tue, 19 Nov 2019 00:17:00 GMT</pubDate></item><item><title>hyperledger/fabric #18 in All Languages, This week</title><link>https://github.com/hyperledger/fabric</link><description>&lt;p&gt;&lt;i&gt;Read-only mirror of https://gerrit.hyperledger.org/r/#/admin/projects/fabric&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-hyperledger-fabric-" class="anchor" aria-hidden="true" href="#hyperledger-fabric-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hyperledger Fabric &lt;a href="https://chat.hyperledger.org/channel/fabric" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cd9f240a9f58a7fc970b834a2659c22597ca9628/68747470733a2f2f6f70656e2e726f636b65742e636861742f696d616765732f6a6f696e2d636861742e737667" alt="join the chat" data-canonical-src="https://open.rocket.chat/images/join-chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-x86_64/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9d88961bb28d87be85432262580314bda36ad0ca/68747470733a2f2f6a656e6b696e732e68797065726c65646765722e6f72672f6275696c645374617475732f69636f6e3f6a6f623d6661627269632d6d657267652d7838365f3634" alt="Build Status" data-canonical-src="https://jenkins.hyperledger.org/buildStatus/icon?job=fabric-merge-x86_64" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bestpractices.coreinfrastructure.org/projects/955" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c2a57c9134c3efb88e5dd27ef8dcee466468c03a/68747470733a2f2f626573747072616374696365732e636f7265696e6672617374727563747572652e6f72672f70726f6a656374732f3935352f6261646765" alt="CII Best Practices" data-canonical-src="https://bestpractices.coreinfrastructure.org/projects/955/badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://goreportcard.com/report/github.com/hyperledger/fabric" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/544131744ea963cf576cd580b2db35135f9f9d5a/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f68797065726c65646765722f666162726963" alt="Go Report Card" data-canonical-src="https://goreportcard.com/badge/github.com/hyperledger/fabric" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://godoc.org/github.com/hyperledger/fabric" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5fa808c0ec44196b79dde560f4024ec21d054934/68747470733a2f2f676f646f632e6f72672f6769746875622e636f6d2f68797065726c65646765722f6661627269633f7374617475732e737667" alt="GoDoc" data-canonical-src="https://godoc.org/github.com/hyperledger/fabric?status.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://hyperledger-fabric.readthedocs.io/en/master/?badge=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/54e752e60f79828621f2e88e474c9c86c4219d99/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f68797065726c65646765722d6661627269632f62616467652f3f76657273696f6e3d6d6173746572" alt="Documentation Status" data-canonical-src="https://readthedocs.org/projects/hyperledger-fabric/badge/?version=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This is a &lt;strong&gt;read-only mirror&lt;/strong&gt; of the formal &lt;a href="https://gerrit.hyperledger.org/r/#/admin/projects/fabric" rel="nofollow"&gt;Gerrit&lt;/a&gt; repository,
where active development is ongoing. Issue tracking is handled in &lt;a href="https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=10104" rel="nofollow"&gt;Jira&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This project is an &lt;em&gt;Active&lt;/em&gt; Hyperledger project. For more information on the history of this project see the &lt;a href="https://wiki.hyperledger.org/display/fabric" rel="nofollow"&gt;Fabric wiki page&lt;/a&gt;. Information on what &lt;em&gt;Active&lt;/em&gt; entails can be found in
the &lt;a href="https://wiki.hyperledger.org/display/HYP/Project+Lifecycle" rel="nofollow"&gt;Hyperledger Project Lifecycle document&lt;/a&gt;.
Hyperledger Fabric is a platform for distributed ledger solutions, underpinned
by a modular architecture delivering high degrees of confidentiality,
resiliency, flexibility and scalability. It is designed to support pluggable
implementations of different components, and accommodate the complexity and
intricacies that exist across the economic ecosystem.&lt;/p&gt;
&lt;p&gt;Hyperledger Fabric delivers a uniquely elastic and extensible architecture,
distinguishing it from alternative blockchain solutions. Planning for the
future of enterprise blockchain requires building on top of a fully-vetted,
open source architecture; Hyperledger Fabric is your starting point.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-releases" class="anchor" aria-hidden="true" href="#releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Releases&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v2.0.0-alpha"&gt;v2.0.0-alpha - April 9, 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v1.4.3"&gt;v1.4.3 - August 26, 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v1.4.2"&gt;v1.4.2 - July 17, 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v1.4.1"&gt;v1.4.1 - April 11, 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v1.4.1-rc1"&gt;v1.4.1-rc1 - March 29, 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v1.4.0"&gt;v1.4.0 - January 9, 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v1.4.0-rc2"&gt;v1.4.0-rc2 - December 20, 2018&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v1.4.0-rc1"&gt;v1.4.0-rc1 - December 10, 2018&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v1.3.0"&gt;v1.3.0 - October 10, 2018&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v1.3.0-rc1"&gt;v1.3.0-rc1 - September 24, 2018&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v1.2.0"&gt;v1.2.0 - July 3, 2018&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v1.2.0-rc1"&gt;v1.2.0-rc1 - June 22, 2018&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v1.1.0"&gt;v1.1.0 - March 15, 2018&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v1.1.0-rc1"&gt;v1.1.0-rc1 - March 1, 2018&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v1.1.0-alpha"&gt;v1.1.0-alpha - January 25, 2018&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v1.0.5"&gt;v1.0.5 - December 6, 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v1.1.0-preview"&gt;v1.1.0-preview - November 1, 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v1.0.4"&gt;v1.0.4 - October 31, 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v1.0.3"&gt;v1.0.3 - October 3, 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v1.0.2"&gt;v1.0.2 - September 10, 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v1.0.1"&gt;v1.0.1 - August 10, 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v1.0.0"&gt;v1.0.0 - July 11, 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v1.0.0-rc1"&gt;v1.0.0-rc1 - June 23, 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v1.0.0-beta"&gt;v1.0.0-beta - June 8, 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v1.0.0-alpha2"&gt;v1.0.0-alpha2 - May 14, 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v1.0.0-alpha"&gt;v1.0.0-alpha - March 16, 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v0.6.0-preview"&gt;v0.6.1-preview - October 15, 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/releases/tag/v0.6.0-preview"&gt;v0.6.0-preview - September 16, 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-release-roadmap" class="anchor" aria-hidden="true" href="#release-roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Release Roadmap&lt;/h2&gt;
&lt;p&gt;Please visit the &lt;a href="https://wiki.hyperledger.org/display/fabric/Hyperledger+Fabric+Roadmap" rel="nofollow"&gt;Hyperledger Fabric wiki&lt;/a&gt; for our release roadmap. We plan on a quarterly release cadence following the v1.1.0 release, delivering on a scoped set of themes and select features. Unless specified otherwise, all releases will be upgradable from the prior minor release.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation-getting-started-and-developer-guides" class="anchor" aria-hidden="true" href="#documentation-getting-started-and-developer-guides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation, Getting Started and Developer Guides&lt;/h2&gt;
&lt;p&gt;Please visit our
online documentation for
information on getting started using and developing with the fabric, SDK and chaincode:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hyperledger-fabric.readthedocs.io/en/release-1.4/" rel="nofollow"&gt;v1.4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hyperledger-fabric.readthedocs.io/en/release-1.3/" rel="nofollow"&gt;v1.3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hyperledger-fabric.readthedocs.io/en/release-1.2/" rel="nofollow"&gt;v1.2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hyperledger-fabric.readthedocs.io/en/release-1.1/" rel="nofollow"&gt;v1.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hyperledger-fabric.readthedocs.io/en/release-1.0/" rel="nofollow"&gt;v1.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hyperledger-fabric.readthedocs.io/en/master/" rel="nofollow"&gt;master branch (development)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's recommended for first-time users to begin by going through the Getting Started section of the documentation in order to gain familiarity with the Hyperledger Fabric components and the basic transaction flow.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;We welcome contributions to the Hyperledger Fabric project in many forms.
There’s always plenty to do! Check &lt;a href="http://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html" rel="nofollow"&gt;the documentation on how to contribute to this project&lt;/a&gt;
for the full details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h2&gt;
&lt;p&gt;Check &lt;a href="testingInfo.rst"&gt;the documentation&lt;/a&gt; for information on the testing structure that the project follows.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.hyperledger.org/community" rel="nofollow"&gt;Hyperledger Community&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://lists.hyperledger.org/" rel="nofollow"&gt;Hyperledger mailing lists and archives&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://chat.hyperledger.org/channel/fabric" rel="nofollow"&gt;Hyperledger Chat&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jira.hyperledger.org/secure/Dashboard.jspa?selectPageId=10104" rel="nofollow"&gt;Hyperledger Fabric Issue Tracking (JIRA)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://wiki.hyperledger.org/display/Fabric" rel="nofollow"&gt;Hyperledger Fabric Wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://wiki.hyperledger.org/" rel="nofollow"&gt;Hyperledger Wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://wiki.hyperledger.org/display/HYP/Hyperledger+Code+of+Conduct" rel="nofollow"&gt;Hyperledger Code of Conduct&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://wiki.hyperledger.org/display/HYP/Calendar+of+Public+Meetings" rel="nofollow"&gt;Community Calendar&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license-" class="anchor" aria-hidden="true" href="#license-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License &lt;a name="user-content-license"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Hyperledger Project source code files are made available under the Apache License, Version 2.0 (Apache-2.0), located in the &lt;a href="LICENSE"&gt;LICENSE&lt;/a&gt; file. Hyperledger Project documentation files are made available under the Creative Commons Attribution 4.0 International License (CC-BY-4.0), available at &lt;a href="http://creativecommons.org/licenses/by/4.0/" rel="nofollow"&gt;http://creativecommons.org/licenses/by/4.0/&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>hyperledger</author><guid isPermaLink="false">https://github.com/hyperledger/fabric</guid><pubDate>Tue, 19 Nov 2019 00:18:00 GMT</pubDate></item><item><title>openai/gpt-2 #19 in All Languages, This week</title><link>https://github.com/openai/gpt-2</link><description>&lt;p&gt;&lt;i&gt;Code for the paper "Language Models are Unsupervised Multitask Learners"&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;strong&gt;Status:&lt;/strong&gt; Archive (code is provided as-is, no updates expected)&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-gpt-2" class="anchor" aria-hidden="true" href="#gpt-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;gpt-2&lt;/h1&gt;
&lt;p&gt;Code and models from the paper &lt;a href="https://d4mucfpksywv.cloudfront.net/better-language-models/language-models.pdf" rel="nofollow"&gt;"Language Models are Unsupervised Multitask Learners"&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can read about GPT-2 and its staged release in our &lt;a href="https://blog.openai.com/better-language-models/" rel="nofollow"&gt;original blog post&lt;/a&gt;, &lt;a href="https://openai.com/blog/gpt-2-6-month-follow-up/" rel="nofollow"&gt;6 month follow-up post&lt;/a&gt;, and &lt;a href="https://www.openai.com/blog/gpt-2-1-5b-release/" rel="nofollow"&gt;final post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We have also &lt;a href="https://github.com/openai/gpt-2-output-dataset"&gt;released a dataset&lt;/a&gt; for researchers to study their behaviors.&lt;/p&gt;
&lt;p&gt;&lt;sup&gt;*&lt;/sup&gt; &lt;em&gt;Note that our original parameter counts were wrong due to an error (in our previous blog posts and paper).  Thus you may have seen small referred to as 117M and medium referred to as 345M.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;This repository is meant to be a starting point for researchers and engineers to experiment with GPT-2.&lt;/p&gt;
&lt;p&gt;For basic information, see our &lt;a href="./model_card.md"&gt;model card&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-some-caveats" class="anchor" aria-hidden="true" href="#some-caveats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Some caveats&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;GPT-2 models' robustness and worst case behaviors are not well-understood.  As with any machine-learned model, carefully evaluate GPT-2 for your use case, especially if used without fine-tuning or in safety-critical applications where reliability is important.&lt;/li&gt;
&lt;li&gt;The dataset our GPT-2 models were trained on contains many texts with &lt;a href="https://twitter.com/TomerUllman/status/1101485289720242177" rel="nofollow"&gt;biases&lt;/a&gt; and factual inaccuracies, and thus GPT-2 models are likely to be biased and inaccurate as well.&lt;/li&gt;
&lt;li&gt;To avoid having samples mistaken as human-written, we recommend clearly labeling samples as synthetic before wide dissemination.  Our models are often incoherent or inaccurate in subtle ways, which takes more than a quick read for a human to notice.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-work-with-us" class="anchor" aria-hidden="true" href="#work-with-us"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Work with us&lt;/h3&gt;
&lt;p&gt;Please &lt;a href="mailto:languagequestions@openai.com"&gt;let us know&lt;/a&gt; if you’re doing interesting research with or working on applications of GPT-2!  We’re especially interested in hearing from and potentially working with those who are studying&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Potential malicious use cases and defenses against them (e.g. the detectability of synthetic text)&lt;/li&gt;
&lt;li&gt;The extent of problematic content (e.g. bias) being baked into the models and effective mitigations&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;p&gt;See &lt;a href="./DEVELOPERS.md"&gt;DEVELOPERS.md&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;p&gt;See &lt;a href="./CONTRIBUTORS.md"&gt;CONTRIBUTORS.md&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citation&lt;/h2&gt;
&lt;p&gt;Please use the following bibtex entry:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@article{radford2019language,
  title={Language Models are Unsupervised Multitask Learners},
  author={Radford, Alec and Wu, Jeff and Child, Rewon and Luan, David and Amodei, Dario and Sutskever, Ilya},
  year={2019}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-future-work" class="anchor" aria-hidden="true" href="#future-work"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Future work&lt;/h2&gt;
&lt;p&gt;We may release code for evaluating the models on various benchmarks.&lt;/p&gt;
&lt;p&gt;We are still considering release of the larger models.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="./LICENSE"&gt;MIT&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>openai</author><guid isPermaLink="false">https://github.com/openai/gpt-2</guid><pubDate>Tue, 19 Nov 2019 00:19:00 GMT</pubDate></item><item><title>abhat222/Data-Science--Cheat-Sheet #20 in All Languages, This week</title><link>https://github.com/abhat222/Data-Science--Cheat-Sheet</link><description>&lt;p&gt;&lt;i&gt;Cheat Sheets&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="Center"&gt;
Created by &lt;a href="https://github.com/abhat222"&gt;&lt;strong&gt;Asif Bhat&lt;/strong&gt;&lt;/a&gt;
&lt;/p&gt;
 &lt;p align="Center"&gt;
 LinkedIn &lt;a href="https://www.linkedin.com/in/asif-bhat/" rel="nofollow"&gt;&lt;strong&gt;Asif Bhat&lt;/strong&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-data-science-cheatsheets" class="anchor" aria-hidden="true" href="#data-science-cheatsheets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Science Cheatsheets&lt;/h1&gt;
&lt;p&gt;List of Data Science Cheatsheets :&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Artificial%20Intelligence/README.md"&gt;Artificial Intelligence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Big%20Data/README.md"&gt;Big Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Data%20Engineering/README.md"&gt;Data Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Data%20Mining/README.md"&gt;Data Mining&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Data%20Science/README.md"&gt;Data Science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Data%20Visualization/README.md"&gt;Data Visualization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Data%20Warehouse/README.md"&gt;Data Warehouse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Deep%20Learning/README.md"&gt;Deep Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="DevOps/README.md"&gt;DevOps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Docker%20&amp;amp;%20Kubernetes/README.md"&gt;Docker &amp;amp; Kubernetes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Excel/README.md"&gt;Excel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Git/README.md"&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Images//README.md"&gt;Images&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Interview%20Questions/README.md"&gt;Interview Questions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Linux/README.md"&gt;Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/abhat222/Data-Science--Cheat-Sheet#machine-learning"&gt;Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Mathematics/README.md"&gt;Mathematics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Matlab/README.md"&gt;Matlab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="NLP/README.md"&gt;NLP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Numpy/README.md"&gt;Numpy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Ordinary%20Differential%20Equations/README.md"&gt;Ordinary Differential Equations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Pandas/README.md"&gt;Pandas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Probability/README.md"&gt;Probability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Python/README.md"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Scala/README.md"&gt;Scala&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="SQL/README.md"&gt;SQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Statistics/README.md"&gt;Statistics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-python" class="anchor" aria-hidden="true" href="#python"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Python&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/abhat222/Data-Science--Cheat-Sheet/blob/master/Python/Python_cheatsheet.pdf"&gt;&lt;img src="https://github.com/abhat222/Data-Science--Cheat-Sheet/raw/master/Images/python_cheatsheet.PNG?" alt="Illustration" width="415px" style="max-width:100%;"&gt;      &lt;/a&gt;&lt;a href="https://github.com/abhat222/Data-Science--Cheat-Sheet/blob/master/Python/spaCy.pdf"&gt;&lt;img src="https://github.com/abhat222/Data-Science--Cheat-Sheet/raw/master/Images/SpaCy.PNG?" alt="Illustration" width="415px" style="max-width:100%;"&gt;&lt;/a&gt;                                   &lt;b&gt;Python Cheat Sheet&lt;/b&gt;                                                                  &lt;b&gt;Spacy Cheat Sheet&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/b&gt;&lt;/p&gt;&lt;b&gt;&lt;b&gt;
&lt;p&gt;&lt;a href="https://github.com/abhat222/Data-Science--Cheat-Sheet/blob/master/Pandas/pandas_cheat_sheet.pdf"&gt;&lt;img src="https://github.com/abhat222/Data-Science--Cheat-Sheet/raw/master/Images/DA_Pandas.PNG?" alt="Illustration" height="320px" width="415px" style="max-width:100%;"&gt;      &lt;/a&gt;&lt;a href="https://github.com/abhat222/Data-Science--Cheat-Sheet/blob/master/Pandas/Reading%20and%20Writing%20data%20with%20PANDAS.pdf"&gt;&lt;img src="https://github.com/abhat222/Data-Science--Cheat-Sheet/raw/master/Images/RW_Panda.PNG?" alt="Illustration" width="415px" height="320px" style="max-width:100%;"&gt;&lt;/a&gt;                                   &lt;b&gt;Data Analysis with Pandas&lt;b&gt;                                              &lt;b&gt;Pandas (Reading and Writing Data)&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/b&gt;&lt;/b&gt;&lt;/b&gt;&lt;/p&gt;&lt;b&gt;&lt;b&gt;&lt;b&gt;
&lt;p&gt;&lt;a href="https://github.com/abhat222/Data-Science--Cheat-Sheet/blob/master/Python/python-cheatsheets-ds.pdf"&gt;&lt;img src="https://github.com/abhat222/Data-Science--Cheat-Sheet/raw/master/Images/PythonForDS.PNG?" alt="Illustration" height="300px" width="415px" style="max-width:100%;"&gt;      &lt;/a&gt;&lt;a href="https://github.com/abhat222/Data-Science--Cheat-Sheet/blob/master/Numpy/100_numpy_exercises.pdf"&gt;&lt;img src="https://github.com/abhat222/Data-Science--Cheat-Sheet/raw/master/Images/101_numpy_exercises.jpg?" alt="Illustration" width="415px" height="300px" style="max-width:100%;"&gt;&lt;/a&gt;                                   &lt;b&gt;Python for Data Science&lt;b&gt;                                                                  &lt;b&gt;100 Numpy Exercises&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/b&gt;&lt;/b&gt;&lt;/b&gt;&lt;/p&gt;&lt;b&gt;&lt;b&gt;&lt;b&gt;
&lt;p&gt;&lt;a href="https://github.com/abhat222/Data-Science--Cheat-Sheet/blob/master/Python/Python%20for%20Data%20Analysis.pdf"&gt;&lt;img src="https://github.com/abhat222/Data-Science--Cheat-Sheet/raw/master/Images/pythonforDA.PNG?" alt="Illustration" height="300px" width="415px" style="max-width:100%;"&gt;      &lt;/a&gt;&lt;a href="https://github.com/abhat222/Data-Science--Cheat-Sheet/blob/master/Pandas/pandas-10min.pdf"&gt;&lt;img src="https://github.com/abhat222/Data-Science--Cheat-Sheet/raw/master/Images/Pandas_10mins.PNG?" alt="Illustration" width="415px" height="300px" style="max-width:100%;"&gt;&lt;/a&gt;                             &lt;b&gt;Python for Data Analysis&lt;b&gt;                                                              &lt;b&gt;10 Minutes to Pandas&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/b&gt;&lt;/b&gt;&lt;/b&gt;&lt;/p&gt;&lt;b&gt;&lt;b&gt;&lt;b&gt;
&lt;h1&gt;&lt;a id="user-content-r-language" class="anchor" aria-hidden="true" href="#r-language"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;R Language&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/abhat222/Data-Science--Cheat-Sheet/blob/master/R%20Cheat%20Sheet/R%20Cheat%20Sheets.pdf"&gt;&lt;img src="https://github.com/abhat222/Data-Science--Cheat-Sheet/raw/master/Images/R_cheatsheet.PNG?" alt="Illustration" height="300px" width="415px" style="max-width:100%;"&gt;      &lt;/a&gt;&lt;a href="https://github.com/abhat222/Data-Science--Cheat-Sheet/blob/master/R%20Cheat%20Sheet/R%20Programming%20Cheat%20Sheet.pdf"&gt;&lt;img src="https://github.com/abhat222/Data-Science--Cheat-Sheet/raw/master/Images/R.PNG?" alt="Illustration" width="415px" height="300px" style="max-width:100%;"&gt;&lt;/a&gt;                                    &lt;b&gt;R Cheat Sheet&lt;b&gt;                                                                     &lt;b&gt;R (Basics &amp;amp; Advanced)&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/b&gt;&lt;/b&gt;&lt;/b&gt;&lt;/p&gt;&lt;b&gt;&lt;b&gt;&lt;b&gt;
&lt;h1&gt;&lt;a id="user-content-machine-learning" class="anchor" aria-hidden="true" href="#machine-learning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Machine Learning&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-deep-learning" class="anchor" aria-hidden="true" href="#deep-learning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deep Learning&lt;/h1&gt;
&lt;/b&gt;&lt;/b&gt;&lt;/b&gt;&lt;/b&gt;&lt;/b&gt;&lt;/b&gt;&lt;/b&gt;&lt;/b&gt;&lt;/b&gt;&lt;/b&gt;&lt;/b&gt;&lt;/b&gt;&lt;/b&gt;&lt;/b&gt;&lt;/article&gt;&lt;/div&gt;</description><author>abhat222</author><guid isPermaLink="false">https://github.com/abhat222/Data-Science--Cheat-Sheet</guid><pubDate>Tue, 19 Nov 2019 00:20:00 GMT</pubDate></item><item><title>google/iosched #21 in All Languages, This week</title><link>https://github.com/google/iosched</link><description>&lt;p&gt;&lt;i&gt;The Google I/O 2019 Android App&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-google-io-android-app" class="anchor" aria-hidden="true" href="#google-io-android-app"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Google I/O Android App&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/google/iosched" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5fe71d9bb955da44b5d59adb09bc400e8e0b25b2/68747470733a2f2f7472617669732d63692e6f72672f676f6f676c652f696f73636865642e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/google/iosched.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Google I/O is a developer conference held each year with three days of deep
technical content featuring technical sessions and hundreds of demonstrations
from developers showcasing their technologies.&lt;/p&gt;
&lt;p&gt;This project is the Android app for the conference.&lt;/p&gt;
&lt;p&gt;For a simpler fork of the app, check out the &lt;a href="https://github.com/google/iosched/tree/adssched"&gt;Android Dev Summit App in the adssched branch&lt;/a&gt;. In this variant some features are removed, such as reservations and the map screen, and Instant App support is added.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h1&gt;
&lt;p&gt;The app displays a list of conference events - sessions, office hours, app
reviews, codelabs, etc. - and allows the user to filter these events by event
types and by topics (Android, Firebase, etc.). Users can see details about
events, and they can star events that interest them. Conference attendees can
reserve events to guarantee a seat.&lt;/p&gt;
&lt;p&gt;Other features include a Map of the venue, informational pages to
guide attendees during the conference in Info, and time-relevant information
during the conference in Home.&lt;/p&gt;
&lt;div&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="schedule.png"&gt;&lt;img align="center" src="schedule.png" alt="Schedule screenshot" height="640" width="320" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-development-environment" class="anchor" aria-hidden="true" href="#development-environment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development Environment&lt;/h1&gt;
&lt;p&gt;The app is written entirely in Kotlin and uses the Gradle build system.&lt;/p&gt;
&lt;p&gt;To build the app, use the &lt;code&gt;gradlew build&lt;/code&gt; command or use "Import Project" in
Android Studio. A canary or stable version &amp;gt;= 3.4 of Android Studio is
required and may be downloaded
&lt;a href="https://developer.android.com/studio/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-architecture" class="anchor" aria-hidden="true" href="#architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Architecture&lt;/h1&gt;
&lt;p&gt;The 2019 version of the app is built on top of the last year's app. The
architecture is built around
&lt;a href="https://developer.android.com/topic/libraries/architecture/" rel="nofollow"&gt;Android Architecture Components&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We followed the recommendations laid out in the
&lt;a href="https://developer.android.com/jetpack/docs/guide" rel="nofollow"&gt;Guide to App Architecture&lt;/a&gt;
when deciding on the architecture for the app. We kept logic away from
Activities and Fragments and moved it to
&lt;a href="https://developer.android.com/topic/libraries/architecture/viewmodel" rel="nofollow"&gt;ViewModel&lt;/a&gt;s.
We observed data using
&lt;a href="https://developer.android.com/topic/libraries/architecture/livedata" rel="nofollow"&gt;LiveData&lt;/a&gt;
and used the &lt;a href="https://developer.android.com/topic/libraries/data-binding/" rel="nofollow"&gt;Data Binding Library&lt;/a&gt;
to bind UI components in layouts to the app's data sources.&lt;/p&gt;
&lt;p&gt;We used a Repository layer for handling data operations. IOSched's data comes
from a few different sources -  user data is stored in
&lt;a href="https://firebase.google.com/docs/firestore/" rel="nofollow"&gt;Cloud Firestore&lt;/a&gt;
(either remotely or in
a local cache for offline use), user preferences and settings are stored in
SharedPreferences, conference data is stored remotely and is fetched and stored
in memory for the app to use, etc. - and the repository modules
are responsible for handling all data operations and abstracting the data sources
from the rest of the app (we liked using Firestore, but if we wanted to swap it
out for a different data source in the future, our architecture allows us to do
so in a clean way).&lt;/p&gt;
&lt;p&gt;We implemented a lightweight domain layer, which sits between the data layer
and the presentation layer, and handles discrete pieces of business logic off
the UI thread. See the &lt;code&gt;.\*UseCase.kt&lt;/code&gt; files under &lt;code&gt;shared/domain&lt;/code&gt; for
&lt;a href="https://github.com/google/iosched/search?q=UseCase&amp;amp;unscoped_q=UseCase"&gt;examples&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We used &lt;a href="https://developer.android.com/guide/navigation" rel="nofollow"&gt;Navigation component&lt;/a&gt;
to simplify into a single Activity app.&lt;/p&gt;
&lt;p&gt;We used &lt;a href="https://developer.android.com/jetpack/androidx/releases/room" rel="nofollow"&gt;Room&lt;/a&gt;
for Full Text Search using &lt;a href="https://developer.android.com/reference/androidx/room/Fts4" rel="nofollow"&gt;Fts4&lt;/a&gt;
to search for a session, speaker, or codelab.&lt;/p&gt;
&lt;p&gt;We used &lt;a href="https://github.com/google/dagger"&gt;Dagger2&lt;/a&gt; for dependency injection
and we heavily relied on
&lt;a href="https://google.github.io/dagger/android.html" rel="nofollow"&gt;dagger-android&lt;/a&gt; to abstract away
boiler-plate code.&lt;/p&gt;
&lt;p&gt;We used &lt;a href="https://developer.android.com/training/testing/espresso/" rel="nofollow"&gt;Espresso&lt;/a&gt;
for basic instrumentation tests and JUnit and
&lt;a href="https://github.com/mockito/mockito"&gt;Mockito&lt;/a&gt; for unit testing.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-firebase" class="anchor" aria-hidden="true" href="#firebase"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Firebase&lt;/h2&gt;
&lt;p&gt;The app makes considerable use of the following Firebase components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://firebase.google.com/docs/firestore/" rel="nofollow"&gt;Cloud Firestore&lt;/a&gt; is our source
for all user data (events starred or reserved by a user). Firestore gave us
automatic sync  and also seamlessly managed offline functionality
for us.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://firebase.google.com/docs/functions/" rel="nofollow"&gt;Firebase Cloud Functions&lt;/a&gt;
allowed us to run backend code. The reservations feature heavily depended on Cloud
Functions working in conjuction with Firestore.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://firebase.google.com/docs/cloud-messaging/concept-options" rel="nofollow"&gt;Firebase Cloud Messaging&lt;/a&gt;
let us inform the app about changes to conference data on our server.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://firebase.google.com/docs/remote-config/" rel="nofollow"&gt;Remote Config&lt;/a&gt; helped us
manage in-app constants.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-kotlin" class="anchor" aria-hidden="true" href="#kotlin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Kotlin&lt;/h2&gt;
&lt;p&gt;We made an early decision to rewrite the app from scratch to bring it in line
with our thinking about modern Android architecture. Using Kotlin for the
rewrite was an easy choice: we liked Kotlin's expressive, concise, and
powerful syntax; we found that Kotlin's support for safety features for
nullability and immutability made our code more resilient; and we leveraged the
enhanced functionality provided by
&lt;a href="https://developer.android.com/kotlin/ktx" rel="nofollow"&gt;Android Ktx extensions&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-copyright" class="anchor" aria-hidden="true" href="#copyright"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;Copyright 2014 Google Inc. All rights reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>google</author><guid isPermaLink="false">https://github.com/google/iosched</guid><pubDate>Tue, 19 Nov 2019 00:21:00 GMT</pubDate></item><item><title>donnemartin/system-design-primer #22 in All Languages, This week</title><link>https://github.com/donnemartin/system-design-primer</link><description>&lt;p&gt;&lt;i&gt;Learn how to design large-scale systems. Prep for the system design interview.  Includes Anki flashcards.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;em&gt;&lt;a href="README.md"&gt;English&lt;/a&gt; ∙ &lt;a href="README-ja.md"&gt;日本語&lt;/a&gt; ∙ &lt;a href="README-zh-Hans.md"&gt;简体中文&lt;/a&gt; ∙ &lt;a href="README-zh-TW.md"&gt;繁體中文&lt;/a&gt; | &lt;a href="https://github.com/donnemartin/system-design-primer/issues/170"&gt;العَرَبِيَّة‎&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/220"&gt;বাংলা&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/40"&gt;Português do Brasil&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/186"&gt;Deutsch&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/130"&gt;ελληνικά&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/272"&gt;עברית&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/104"&gt;Italiano&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/102"&gt;韓國語&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/110"&gt;فارسی&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/68"&gt;Polski&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/87"&gt;русский язык&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/136"&gt;Español&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/187"&gt;ภาษาไทย&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/39"&gt;Türkçe&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/127"&gt;tiếng Việt&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/250"&gt;Français&lt;/a&gt; | &lt;a href="https://github.com/donnemartin/system-design-primer/issues/28"&gt;Add Translation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-the-system-design-primer" class="anchor" aria-hidden="true" href="#the-system-design-primer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The System Design Primer&lt;/h1&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e45e39c36eebcc4c66e1aecd4e4145112d8e88e3/687474703a2f2f692e696d6775722e636f6d2f6a6a3341354e382e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e45e39c36eebcc4c66e1aecd4e4145112d8e88e3/687474703a2f2f692e696d6775722e636f6d2f6a6a3341354e382e706e67" data-canonical-src="http://i.imgur.com/jj3A5N8.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-motivation" class="anchor" aria-hidden="true" href="#motivation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Motivation&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Learn how to design large-scale systems.&lt;/p&gt;
&lt;p&gt;Prep for the system design interview.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-learn-how-to-design-large-scale-systems" class="anchor" aria-hidden="true" href="#learn-how-to-design-large-scale-systems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn how to design large-scale systems&lt;/h3&gt;
&lt;p&gt;Learning how to design scalable systems will help you become a better engineer.&lt;/p&gt;
&lt;p&gt;System design is a broad topic.  There is a &lt;strong&gt;vast amount of resources scattered throughout the web&lt;/strong&gt; on system design principles.&lt;/p&gt;
&lt;p&gt;This repo is an &lt;strong&gt;organized collection&lt;/strong&gt; of resources to help you learn how to build systems at scale.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-learn-from-the-open-source-community" class="anchor" aria-hidden="true" href="#learn-from-the-open-source-community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn from the open source community&lt;/h3&gt;
&lt;p&gt;This is a continually updated, open source project.&lt;/p&gt;
&lt;p&gt;&lt;a href="#contributing"&gt;Contributions&lt;/a&gt; are welcome!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-prep-for-the-system-design-interview" class="anchor" aria-hidden="true" href="#prep-for-the-system-design-interview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prep for the system design interview&lt;/h3&gt;
&lt;p&gt;In addition to coding interviews, system design is a &lt;strong&gt;required component&lt;/strong&gt; of the &lt;strong&gt;technical interview process&lt;/strong&gt; at many tech companies.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Practice common system design interview questions&lt;/strong&gt; and &lt;strong&gt;compare&lt;/strong&gt; your results with &lt;strong&gt;sample solutions&lt;/strong&gt;: discussions, code, and diagrams.&lt;/p&gt;
&lt;p&gt;Additional topics for interview prep:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#study-guide"&gt;Study guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-to-approach-a-system-design-interview-question"&gt;How to approach a system design interview question&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#system-design-interview-questions-with-solutions"&gt;System design interview questions, &lt;strong&gt;with solutions&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#object-oriented-design-interview-questions-with-solutions"&gt;Object-oriented design interview questions, &lt;strong&gt;with solutions&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#additional-system-design-interview-questions"&gt;Additional system design interview questions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-anki-flashcards" class="anchor" aria-hidden="true" href="#anki-flashcards"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Anki flashcards&lt;/h2&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/75b5cf737556050871218226ea211256f19f3a40/687474703a2f2f692e696d6775722e636f6d2f7a6443416b42332e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/75b5cf737556050871218226ea211256f19f3a40/687474703a2f2f692e696d6775722e636f6d2f7a6443416b42332e706e67" data-canonical-src="http://i.imgur.com/zdCAkB3.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
&lt;/p&gt;
&lt;p&gt;The provided &lt;a href="https://apps.ankiweb.net/" rel="nofollow"&gt;Anki flashcard decks&lt;/a&gt; use spaced repetition to help you retain key system design concepts.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design.apkg"&gt;System design deck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design%20Exercises.apkg"&gt;System design exercises deck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/OO%20Design.apkg"&gt;Object oriented design exercises deck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Great for use while on-the-go.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-coding-resource-interactive-coding-challenges" class="anchor" aria-hidden="true" href="#coding-resource-interactive-coding-challenges"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Coding Resource: Interactive Coding Challenges&lt;/h3&gt;
&lt;p&gt;Looking for resources to help you prep for the &lt;a href="https://github.com/donnemartin/interactive-coding-challenges"&gt;&lt;strong&gt;Coding Interview&lt;/strong&gt;&lt;/a&gt;?&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/473700c20356af5875155f24d3a26b57ae940bdc/687474703a2f2f692e696d6775722e636f6d2f6234597441454e2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/473700c20356af5875155f24d3a26b57ae940bdc/687474703a2f2f692e696d6775722e636f6d2f6234597441454e2e706e67" data-canonical-src="http://i.imgur.com/b4YtAEN.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
&lt;/p&gt;
&lt;p&gt;Check out the sister repo &lt;a href="https://github.com/donnemartin/interactive-coding-challenges"&gt;&lt;strong&gt;Interactive Coding Challenges&lt;/strong&gt;&lt;/a&gt;, which contains an additional Anki deck:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/donnemartin/interactive-coding-challenges/tree/master/anki_cards/Coding.apkg"&gt;Coding deck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Learn from the community.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Feel free to submit pull requests to help:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fix errors&lt;/li&gt;
&lt;li&gt;Improve sections&lt;/li&gt;
&lt;li&gt;Add new sections&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/donnemartin/system-design-primer/issues/28"&gt;Translate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Content that needs some polishing is placed &lt;a href="#under-development"&gt;under development&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Review the &lt;a href="CONTRIBUTING.md"&gt;Contributing Guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-index-of-system-design-topics" class="anchor" aria-hidden="true" href="#index-of-system-design-topics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Index of system design topics&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Summaries of various system design topics, including pros and cons.  &lt;strong&gt;Everything is a trade-off&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Each section contains links to more in-depth resources.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/14f76dab28dfbfa12ea6b02c6bd0ec726fc17306/687474703a2f2f692e696d6775722e636f6d2f6a7255424146372e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/14f76dab28dfbfa12ea6b02c6bd0ec726fc17306/687474703a2f2f692e696d6775722e636f6d2f6a7255424146372e706e67" data-canonical-src="http://i.imgur.com/jrUBAF7.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#system-design-topics-start-here"&gt;System design topics: start here&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#step-1-review-the-scalability-video-lecture"&gt;Step 1: Review the scalability video lecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#step-2-review-the-scalability-article"&gt;Step 2: Review the scalability article&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#next-steps"&gt;Next steps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#performance-vs-scalability"&gt;Performance vs scalability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#latency-vs-throughput"&gt;Latency vs throughput&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#availability-vs-consistency"&gt;Availability vs consistency&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#cap-theorem"&gt;CAP theorem&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#cp---consistency-and-partition-tolerance"&gt;CP - consistency and partition tolerance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ap---availability-and-partition-tolerance"&gt;AP - availability and partition tolerance&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#consistency-patterns"&gt;Consistency patterns&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#weak-consistency"&gt;Weak consistency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#eventual-consistency"&gt;Eventual consistency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#strong-consistency"&gt;Strong consistency&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#availability-patterns"&gt;Availability patterns&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#fail-over"&gt;Fail-over&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#replication"&gt;Replication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#availability-in-numbers"&gt;Availability in numbers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#domain-name-system"&gt;Domain name system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#content-delivery-network"&gt;Content delivery network&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#push-cdns"&gt;Push CDNs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pull-cdns"&gt;Pull CDNs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#load-balancer"&gt;Load balancer&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#active-passive"&gt;Active-passive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#active-active"&gt;Active-active&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#layer-4-load-balancing"&gt;Layer 4 load balancing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#layer-7-load-balancing"&gt;Layer 7 load balancing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#horizontal-scaling"&gt;Horizontal scaling&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#reverse-proxy-web-server"&gt;Reverse proxy (web server)&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#load-balancer-vs-reverse-proxy"&gt;Load balancer vs reverse proxy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#application-layer"&gt;Application layer&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#microservices"&gt;Microservices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#service-discovery"&gt;Service discovery&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#database"&gt;Database&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#relational-database-management-system-rdbms"&gt;Relational database management system (RDBMS)&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#master-slave-replication"&gt;Master-slave replication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#master-master-replication"&gt;Master-master replication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#federation"&gt;Federation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sharding"&gt;Sharding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#denormalization"&gt;Denormalization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sql-tuning"&gt;SQL tuning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#nosql"&gt;NoSQL&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#key-value-store"&gt;Key-value store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#document-store"&gt;Document store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#wide-column-store"&gt;Wide column store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#graph-database"&gt;Graph Database&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#sql-or-nosql"&gt;SQL or NoSQL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#cache"&gt;Cache&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#client-caching"&gt;Client caching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cdn-caching"&gt;CDN caching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#web-server-caching"&gt;Web server caching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-caching"&gt;Database caching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#application-caching"&gt;Application caching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#caching-at-the-database-query-level"&gt;Caching at the database query level&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#caching-at-the-object-level"&gt;Caching at the object level&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#when-to-update-the-cache"&gt;When to update the cache&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#cache-aside"&gt;Cache-aside&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#write-through"&gt;Write-through&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#write-behind-write-back"&gt;Write-behind (write-back)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#refresh-ahead"&gt;Refresh-ahead&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#asynchronism"&gt;Asynchronism&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#message-queues"&gt;Message queues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#task-queues"&gt;Task queues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#back-pressure"&gt;Back pressure&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#communication"&gt;Communication&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#transmission-control-protocol-tcp"&gt;Transmission control protocol (TCP)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#user-datagram-protocol-udp"&gt;User datagram protocol (UDP)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#remote-procedure-call-rpc"&gt;Remote procedure call (RPC)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#representational-state-transfer-rest"&gt;Representational state transfer (REST)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#security"&gt;Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#appendix"&gt;Appendix&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#powers-of-two-table"&gt;Powers of two table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#latency-numbers-every-programmer-should-know"&gt;Latency numbers every programmer should know&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#additional-system-design-interview-questions"&gt;Additional system design interview questions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#real-world-architectures"&gt;Real world architectures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#company-architectures"&gt;Company architectures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#company-engineering-blogs"&gt;Company engineering blogs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#under-development"&gt;Under development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#credits"&gt;Credits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contact-info"&gt;Contact info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-study-guide" class="anchor" aria-hidden="true" href="#study-guide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Study guide&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Suggested topics to review based on your interview timeline (short, medium, long).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/eb92600aa3bb1314b33edd0204da8428d4d3a493/687474703a2f2f692e696d6775722e636f6d2f4f66566c6c65782e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/eb92600aa3bb1314b33edd0204da8428d4d3a493/687474703a2f2f692e696d6775722e636f6d2f4f66566c6c65782e706e67" alt="Imgur" data-canonical-src="http://i.imgur.com/OfVllex.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: For interviews, do I need to know everything here?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A: No, you don't need to know everything here to prepare for the interview&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;What you are asked in an interview depends on variables such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How much experience you have&lt;/li&gt;
&lt;li&gt;What your technical background is&lt;/li&gt;
&lt;li&gt;What positions you are interviewing for&lt;/li&gt;
&lt;li&gt;Which companies you are interviewing with&lt;/li&gt;
&lt;li&gt;Luck&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More experienced candidates are generally expected to know more about system design.  Architects or team leads might be expected to know more than individual contributors.  Top tech companies are likely to have one or more design interview rounds.&lt;/p&gt;
&lt;p&gt;Start broad and go deeper in a few areas.  It helps to know a little about various key system design topics.  Adjust the following guide based on your timeline, experience, what positions you are interviewing for, and which companies you are interviewing with.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Short timeline&lt;/strong&gt; - Aim for &lt;strong&gt;breadth&lt;/strong&gt; with system design topics.  Practice by solving &lt;strong&gt;some&lt;/strong&gt; interview questions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Medium timeline&lt;/strong&gt; - Aim for &lt;strong&gt;breadth&lt;/strong&gt; and &lt;strong&gt;some depth&lt;/strong&gt; with system design topics.  Practice by solving &lt;strong&gt;many&lt;/strong&gt; interview questions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Long timeline&lt;/strong&gt; - Aim for &lt;strong&gt;breadth&lt;/strong&gt; and &lt;strong&gt;more depth&lt;/strong&gt; with system design topics.  Practice by solving &lt;strong&gt;most&lt;/strong&gt; interview questions.&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Short&lt;/th&gt;
&lt;th&gt;Medium&lt;/th&gt;
&lt;th&gt;Long&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Read through the &lt;a href="#index-of-system-design-topics"&gt;System design topics&lt;/a&gt; to get a broad understanding of how systems work&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Read through a few articles in the &lt;a href="#company-engineering-blogs"&gt;Company engineering blogs&lt;/a&gt; for the companies you are interviewing with&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Read through a few &lt;a href="#real-world-architectures"&gt;Real world architectures&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Review &lt;a href="#how-to-approach-a-system-design-interview-question"&gt;How to approach a system design interview question&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Work through &lt;a href="#system-design-interview-questions-with-solutions"&gt;System design interview questions with solutions&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Some&lt;/td&gt;
&lt;td&gt;Many&lt;/td&gt;
&lt;td&gt;Most&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Work through &lt;a href="#object-oriented-design-interview-questions-with-solutions"&gt;Object-oriented design interview questions with solutions&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Some&lt;/td&gt;
&lt;td&gt;Many&lt;/td&gt;
&lt;td&gt;Most&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Review &lt;a href="#additional-system-design-interview-questions"&gt;Additional system design interview questions&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Some&lt;/td&gt;
&lt;td&gt;Many&lt;/td&gt;
&lt;td&gt;Most&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-approach-a-system-design-interview-question" class="anchor" aria-hidden="true" href="#how-to-approach-a-system-design-interview-question"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to approach a system design interview question&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;How to tackle a system design interview question.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The system design interview is an &lt;strong&gt;open-ended conversation&lt;/strong&gt;.  You are expected to lead it.&lt;/p&gt;
&lt;p&gt;You can use the following steps to guide the discussion.  To help solidify this process, work through the &lt;a href="#system-design-interview-questions-with-solutions"&gt;System design interview questions with solutions&lt;/a&gt; section using the following steps.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-step-1-outline-use-cases-constraints-and-assumptions" class="anchor" aria-hidden="true" href="#step-1-outline-use-cases-constraints-and-assumptions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 1: Outline use cases, constraints, and assumptions&lt;/h3&gt;
&lt;p&gt;Gather requirements and scope the problem.  Ask questions to clarify use cases and constraints.  Discuss assumptions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Who is going to use it?&lt;/li&gt;
&lt;li&gt;How are they going to use it?&lt;/li&gt;
&lt;li&gt;How many users are there?&lt;/li&gt;
&lt;li&gt;What does the system do?&lt;/li&gt;
&lt;li&gt;What are the inputs and outputs of the system?&lt;/li&gt;
&lt;li&gt;How much data do we expect to handle?&lt;/li&gt;
&lt;li&gt;How many requests per second do we expect?&lt;/li&gt;
&lt;li&gt;What is the expected read to write ratio?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-step-2-create-a-high-level-design" class="anchor" aria-hidden="true" href="#step-2-create-a-high-level-design"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 2: Create a high level design&lt;/h3&gt;
&lt;p&gt;Outline a high level design with all important components.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sketch the main components and connections&lt;/li&gt;
&lt;li&gt;Justify your ideas&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-step-3-design-core-components" class="anchor" aria-hidden="true" href="#step-3-design-core-components"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 3: Design core components&lt;/h3&gt;
&lt;p&gt;Dive into details for each core component.  For example, if you were asked to &lt;a href="solutions/system_design/pastebin/README.md"&gt;design a url shortening service&lt;/a&gt;, discuss:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Generating and storing a hash of the full url
&lt;ul&gt;
&lt;li&gt;&lt;a href="solutions/system_design/pastebin/README.md"&gt;MD5&lt;/a&gt; and &lt;a href="solutions/system_design/pastebin/README.md"&gt;Base62&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hash collisions&lt;/li&gt;
&lt;li&gt;SQL or NoSQL&lt;/li&gt;
&lt;li&gt;Database schema&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Translating a hashed url to the full url
&lt;ul&gt;
&lt;li&gt;Database lookup&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;API and object-oriented design&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-step-4-scale-the-design" class="anchor" aria-hidden="true" href="#step-4-scale-the-design"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 4: Scale the design&lt;/h3&gt;
&lt;p&gt;Identify and address bottlenecks, given the constraints.  For example, do you need the following to address scalability issues?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Load balancer&lt;/li&gt;
&lt;li&gt;Horizontal scaling&lt;/li&gt;
&lt;li&gt;Caching&lt;/li&gt;
&lt;li&gt;Database sharding&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Discuss potential solutions and trade-offs.  Everything is a trade-off.  Address bottlenecks using &lt;a href="#index-of-system-design-topics"&gt;principles of scalable system design&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-back-of-the-envelope-calculations" class="anchor" aria-hidden="true" href="#back-of-the-envelope-calculations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Back-of-the-envelope calculations&lt;/h3&gt;
&lt;p&gt;You might be asked to do some estimates by hand.  Refer to the &lt;a href="#appendix"&gt;Appendix&lt;/a&gt; for the following resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://highscalability.com/blog/2011/1/26/google-pro-tip-use-back-of-the-envelope-calculations-to-choo.html" rel="nofollow"&gt;Use back of the envelope calculations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#powers-of-two-table"&gt;Powers of two table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#latency-numbers-every-programmer-should-know"&gt;Latency numbers every programmer should know&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sources-and-further-reading" class="anchor" aria-hidden="true" href="#sources-and-further-reading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h3&gt;
&lt;p&gt;Check out the following links to get a better idea of what to expect:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.palantir.com/2011/10/how-to-rock-a-systems-design-interview/" rel="nofollow"&gt;How to ace a systems design interview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.hiredintech.com/system-design" rel="nofollow"&gt;The system design interview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ZgdS0EUmn70" rel="nofollow"&gt;Intro to Architecture and Systems Design Interviews&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-system-design-interview-questions-with-solutions" class="anchor" aria-hidden="true" href="#system-design-interview-questions-with-solutions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System design interview questions with solutions&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Common system design interview questions with sample discussions, code, and diagrams.&lt;/p&gt;
&lt;p&gt;Solutions linked to content in the &lt;code&gt;solutions/&lt;/code&gt; folder.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Question&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Design Pastebin.com (or Bit.ly)&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/system_design/pastebin/README.md"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design the Twitter timeline and search (or Facebook feed and search)&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/system_design/twitter/README.md"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a web crawler&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/system_design/web_crawler/README.md"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design Mint.com&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/system_design/mint/README.md"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design the data structures for a social network&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/system_design/social_graph/README.md"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a key-value store for a search engine&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/system_design/query_cache/README.md"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design Amazon's sales ranking by category feature&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/system_design/sales_rank/README.md"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a system that scales to millions of users on AWS&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/system_design/scaling_aws/README.md"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Add a system design question&lt;/td&gt;
&lt;td&gt;&lt;a href="#contributing"&gt;Contribute&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-design-pastebincom-or-bitly" class="anchor" aria-hidden="true" href="#design-pastebincom-or-bitly"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design Pastebin.com (or Bit.ly)&lt;/h3&gt;
&lt;p&gt;&lt;a href="solutions/system_design/pastebin/README.md"&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/4aee2d26ebedc20e7fa07a2c30780e332fa29f2c/687474703a2f2f692e696d6775722e636f6d2f346564584730542e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/4aee2d26ebedc20e7fa07a2c30780e332fa29f2c/687474703a2f2f692e696d6775722e636f6d2f346564584730542e706e67" alt="Imgur" data-canonical-src="http://i.imgur.com/4edXG0T.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-design-the-twitter-timeline-and-search-or-facebook-feed-and-search" class="anchor" aria-hidden="true" href="#design-the-twitter-timeline-and-search-or-facebook-feed-and-search"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design the Twitter timeline and search (or Facebook feed and search)&lt;/h3&gt;
&lt;p&gt;&lt;a href="solutions/system_design/twitter/README.md"&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/14f76dab28dfbfa12ea6b02c6bd0ec726fc17306/687474703a2f2f692e696d6775722e636f6d2f6a7255424146372e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/14f76dab28dfbfa12ea6b02c6bd0ec726fc17306/687474703a2f2f692e696d6775722e636f6d2f6a7255424146372e706e67" alt="Imgur" data-canonical-src="http://i.imgur.com/jrUBAF7.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-design-a-web-crawler" class="anchor" aria-hidden="true" href="#design-a-web-crawler"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design a web crawler&lt;/h3&gt;
&lt;p&gt;&lt;a href="solutions/system_design/web_crawler/README.md"&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ba21a95852d1cf7bb64c8c4622a79d1d5a20d344/687474703a2f2f692e696d6775722e636f6d2f625778507451412e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/ba21a95852d1cf7bb64c8c4622a79d1d5a20d344/687474703a2f2f692e696d6775722e636f6d2f625778507451412e706e67" alt="Imgur" data-canonical-src="http://i.imgur.com/bWxPtQA.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-design-mintcom" class="anchor" aria-hidden="true" href="#design-mintcom"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design Mint.com&lt;/h3&gt;
&lt;p&gt;&lt;a href="solutions/system_design/mint/README.md"&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/12fea5f9324f74189a9cd983b02239c68615b67e/687474703a2f2f692e696d6775722e636f6d2f563571353776552e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/12fea5f9324f74189a9cd983b02239c68615b67e/687474703a2f2f692e696d6775722e636f6d2f563571353776552e706e67" alt="Imgur" data-canonical-src="http://i.imgur.com/V5q57vU.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-design-the-data-structures-for-a-social-network" class="anchor" aria-hidden="true" href="#design-the-data-structures-for-a-social-network"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design the data structures for a social network&lt;/h3&gt;
&lt;p&gt;&lt;a href="solutions/system_design/social_graph/README.md"&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/16d78e51c2e2949e23122f4c26afe5886f82a96f/687474703a2f2f692e696d6775722e636f6d2f636443763567372e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/16d78e51c2e2949e23122f4c26afe5886f82a96f/687474703a2f2f692e696d6775722e636f6d2f636443763567372e706e67" alt="Imgur" data-canonical-src="http://i.imgur.com/cdCv5g7.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-design-a-key-value-store-for-a-search-engine" class="anchor" aria-hidden="true" href="#design-a-key-value-store-for-a-search-engine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design a key-value store for a search engine&lt;/h3&gt;
&lt;p&gt;&lt;a href="solutions/system_design/query_cache/README.md"&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b6439861687b9a0fc62d0149a364082643ebaf86/687474703a2f2f692e696d6775722e636f6d2f346a39396d68652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/b6439861687b9a0fc62d0149a364082643ebaf86/687474703a2f2f692e696d6775722e636f6d2f346a39396d68652e706e67" alt="Imgur" data-canonical-src="http://i.imgur.com/4j99mhe.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-design-amazons-sales-ranking-by-category-feature" class="anchor" aria-hidden="true" href="#design-amazons-sales-ranking-by-category-feature"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design Amazon's sales ranking by category feature&lt;/h3&gt;
&lt;p&gt;&lt;a href="solutions/system_design/sales_rank/README.md"&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a56f5600f7ae29dc0c2e436b8e4e4b55c44d6894/687474703a2f2f692e696d6775722e636f6d2f4d7a45785030362e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/a56f5600f7ae29dc0c2e436b8e4e4b55c44d6894/687474703a2f2f692e696d6775722e636f6d2f4d7a45785030362e706e67" alt="Imgur" data-canonical-src="http://i.imgur.com/MzExP06.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-design-a-system-that-scales-to-millions-of-users-on-aws" class="anchor" aria-hidden="true" href="#design-a-system-that-scales-to-millions-of-users-on-aws"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design a system that scales to millions of users on AWS&lt;/h3&gt;
&lt;p&gt;&lt;a href="solutions/system_design/scaling_aws/README.md"&gt;View exercise and solution&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e45e39c36eebcc4c66e1aecd4e4145112d8e88e3/687474703a2f2f692e696d6775722e636f6d2f6a6a3341354e382e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e45e39c36eebcc4c66e1aecd4e4145112d8e88e3/687474703a2f2f692e696d6775722e636f6d2f6a6a3341354e382e706e67" alt="Imgur" data-canonical-src="http://i.imgur.com/jj3A5N8.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-object-oriented-design-interview-questions-with-solutions" class="anchor" aria-hidden="true" href="#object-oriented-design-interview-questions-with-solutions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Object-oriented design interview questions with solutions&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Common object-oriented design interview questions with sample discussions, code, and diagrams.&lt;/p&gt;
&lt;p&gt;Solutions linked to content in the &lt;code&gt;solutions/&lt;/code&gt; folder.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: This section is under development&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Question&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Design a hash map&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/object_oriented_design/hash_table/hash_map.ipynb"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a least recently used cache&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/object_oriented_design/lru_cache/lru_cache.ipynb"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a call center&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/object_oriented_design/call_center/call_center.ipynb"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a deck of cards&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/object_oriented_design/deck_of_cards/deck_of_cards.ipynb"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a parking lot&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/object_oriented_design/parking_lot/parking_lot.ipynb"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a chat server&lt;/td&gt;
&lt;td&gt;&lt;a href="solutions/object_oriented_design/online_chat/online_chat.ipynb"&gt;Solution&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a circular array&lt;/td&gt;
&lt;td&gt;&lt;a href="#contributing"&gt;Contribute&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Add an object-oriented design question&lt;/td&gt;
&lt;td&gt;&lt;a href="#contributing"&gt;Contribute&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-system-design-topics-start-here" class="anchor" aria-hidden="true" href="#system-design-topics-start-here"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System design topics: start here&lt;/h2&gt;
&lt;p&gt;New to system design?&lt;/p&gt;
&lt;p&gt;First, you'll need a basic understanding of common principles, learning about what they are, how they are used, and their pros and cons.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-step-1-review-the-scalability-video-lecture" class="anchor" aria-hidden="true" href="#step-1-review-the-scalability-video-lecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 1: Review the scalability video lecture&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=-W9F__D3oY4" rel="nofollow"&gt;Scalability Lecture at Harvard&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Topics covered:
&lt;ul&gt;
&lt;li&gt;Vertical scaling&lt;/li&gt;
&lt;li&gt;Horizontal scaling&lt;/li&gt;
&lt;li&gt;Caching&lt;/li&gt;
&lt;li&gt;Load balancing&lt;/li&gt;
&lt;li&gt;Database replication&lt;/li&gt;
&lt;li&gt;Database partitioning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-step-2-review-the-scalability-article" class="anchor" aria-hidden="true" href="#step-2-review-the-scalability-article"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 2: Review the scalability article&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.lecloud.net/tagged/scalability/chrono" rel="nofollow"&gt;Scalability&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Topics covered:
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones" rel="nofollow"&gt;Clones&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database" rel="nofollow"&gt;Databases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache" rel="nofollow"&gt;Caches&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.lecloud.net/post/9699762917/scalability-for-dummies-part-4-asynchronism" rel="nofollow"&gt;Asynchronism&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-next-steps" class="anchor" aria-hidden="true" href="#next-steps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Next steps&lt;/h3&gt;
&lt;p&gt;Next, we'll look at high-level trade-offs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt; vs &lt;strong&gt;scalability&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Latency&lt;/strong&gt; vs &lt;strong&gt;throughput&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Availability&lt;/strong&gt; vs &lt;strong&gt;consistency&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Keep in mind that &lt;strong&gt;everything is a trade-off&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Then we'll dive into more specific topics such as DNS, CDNs, and load balancers.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-performance-vs-scalability" class="anchor" aria-hidden="true" href="#performance-vs-scalability"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance vs scalability&lt;/h2&gt;
&lt;p&gt;A service is &lt;strong&gt;scalable&lt;/strong&gt; if it results in increased &lt;strong&gt;performance&lt;/strong&gt; in a manner proportional to resources added. Generally, increasing performance means serving more units of work, but it can also be to handle larger units of work, such as when datasets grow.&lt;sup&gt;&lt;a href="http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html" rel="nofollow"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Another way to look at performance vs scalability:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you have a &lt;strong&gt;performance&lt;/strong&gt; problem, your system is slow for a single user.&lt;/li&gt;
&lt;li&gt;If you have a &lt;strong&gt;scalability&lt;/strong&gt; problem, your system is fast for a single user but slow under heavy load.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sources-and-further-reading-1" class="anchor" aria-hidden="true" href="#sources-and-further-reading-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html" rel="nofollow"&gt;A word on scalability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/jboner/scalability-availability-stability-patterns/" rel="nofollow"&gt;Scalability, availability, stability, patterns&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-latency-vs-throughput" class="anchor" aria-hidden="true" href="#latency-vs-throughput"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Latency vs throughput&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Latency&lt;/strong&gt; is the time to perform some action or to produce some result.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Throughput&lt;/strong&gt; is the number of such actions or results per unit of time.&lt;/p&gt;
&lt;p&gt;Generally, you should aim for &lt;strong&gt;maximal throughput&lt;/strong&gt; with &lt;strong&gt;acceptable latency&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sources-and-further-reading-2" class="anchor" aria-hidden="true" href="#sources-and-further-reading-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://community.cadence.com/cadence_blogs_8/b/sd/archive/2010/09/13/understanding-latency-vs-throughput" rel="nofollow"&gt;Understanding latency vs throughput&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-availability-vs-consistency" class="anchor" aria-hidden="true" href="#availability-vs-consistency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Availability vs consistency&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cap-theorem" class="anchor" aria-hidden="true" href="#cap-theorem"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CAP theorem&lt;/h3&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/13719354da7dcd34cd79ff5f8b6306a67bc18261/687474703a2f2f692e696d6775722e636f6d2f62674c4d4932752e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/13719354da7dcd34cd79ff5f8b6306a67bc18261/687474703a2f2f692e696d6775722e636f6d2f62674c4d4932752e706e67" data-canonical-src="http://i.imgur.com/bgLMI2u.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://robertgreiner.com/2014/08/cap-theorem-revisited" rel="nofollow"&gt;Source: CAP theorem revisited&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;In a distributed computer system, you can only support two of the following guarantees:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Consistency&lt;/strong&gt; - Every read receives the most recent write or an error&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Availability&lt;/strong&gt; - Every request receives a response, without guarantee that it contains the most recent version of the information&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Partition Tolerance&lt;/strong&gt; - The system continues to operate despite arbitrary partitioning due to network failures&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Networks aren't reliable, so you'll need to support partition tolerance.  You'll need to make a software tradeoff between consistency and availability.&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-cp---consistency-and-partition-tolerance" class="anchor" aria-hidden="true" href="#cp---consistency-and-partition-tolerance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CP - consistency and partition tolerance&lt;/h4&gt;
&lt;p&gt;Waiting for a response from the partitioned node might result in a timeout error.  CP is a good choice if your business needs require atomic reads and writes.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-ap---availability-and-partition-tolerance" class="anchor" aria-hidden="true" href="#ap---availability-and-partition-tolerance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AP - availability and partition tolerance&lt;/h4&gt;
&lt;p&gt;Responses return the most recent version of the data available on a node, which might not be the latest.  Writes might take some time to propagate when the partition is resolved.&lt;/p&gt;
&lt;p&gt;AP is a good choice if the business needs allow for &lt;a href="#eventual-consistency"&gt;eventual consistency&lt;/a&gt; or when the system needs to continue working despite external errors.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sources-and-further-reading-3" class="anchor" aria-hidden="true" href="#sources-and-further-reading-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://robertgreiner.com/2014/08/cap-theorem-revisited/" rel="nofollow"&gt;CAP theorem revisited&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ksat.me/a-plain-english-introduction-to-cap-theorem/" rel="nofollow"&gt;A plain english introduction to CAP theorem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/henryr/cap-faq"&gt;CAP FAQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-consistency-patterns" class="anchor" aria-hidden="true" href="#consistency-patterns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Consistency patterns&lt;/h2&gt;
&lt;p&gt;With multiple copies of the same data, we are faced with options on how to synchronize them so clients have a consistent view of the data.  Recall the definition of consistency from the &lt;a href="#cap-theorem"&gt;CAP theorem&lt;/a&gt; - Every read receives the most recent write or an error.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-weak-consistency" class="anchor" aria-hidden="true" href="#weak-consistency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Weak consistency&lt;/h3&gt;
&lt;p&gt;After a write, reads may or may not see it.  A best effort approach is taken.&lt;/p&gt;
&lt;p&gt;This approach is seen in systems such as memcached.  Weak consistency works well in real time use cases such as VoIP, video chat, and realtime multiplayer games.  For example, if you are on a phone call and lose reception for a few seconds, when you regain connection you do not hear what was spoken during connection loss.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-eventual-consistency" class="anchor" aria-hidden="true" href="#eventual-consistency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Eventual consistency&lt;/h3&gt;
&lt;p&gt;After a write, reads will eventually see it (typically within milliseconds).  Data is replicated asynchronously.&lt;/p&gt;
&lt;p&gt;This approach is seen in systems such as DNS and email.  Eventual consistency works well in highly available systems.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-strong-consistency" class="anchor" aria-hidden="true" href="#strong-consistency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Strong consistency&lt;/h3&gt;
&lt;p&gt;After a write, reads will see it.  Data is replicated synchronously.&lt;/p&gt;
&lt;p&gt;This approach is seen in file systems and RDBMSes.  Strong consistency works well in systems that need transactions.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sources-and-further-reading-4" class="anchor" aria-hidden="true" href="#sources-and-further-reading-4"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://snarfed.org/transactions_across_datacenters_io.html" rel="nofollow"&gt;Transactions across data centers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-availability-patterns" class="anchor" aria-hidden="true" href="#availability-patterns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Availability patterns&lt;/h2&gt;
&lt;p&gt;There are two main patterns to support high availability: &lt;strong&gt;fail-over&lt;/strong&gt; and &lt;strong&gt;replication&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-fail-over" class="anchor" aria-hidden="true" href="#fail-over"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fail-over&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-active-passive" class="anchor" aria-hidden="true" href="#active-passive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Active-passive&lt;/h4&gt;
&lt;p&gt;With active-passive fail-over, heartbeats are sent between the active and the passive server on standby.  If the heartbeat is interrupted, the passive server takes over the active's IP address and resumes service.&lt;/p&gt;
&lt;p&gt;The length of downtime is determined by whether the passive server is already running in 'hot' standby or whether it needs to start up from 'cold' standby.  Only the active server handles traffic.&lt;/p&gt;
&lt;p&gt;Active-passive failover can also be referred to as master-slave failover.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-active-active" class="anchor" aria-hidden="true" href="#active-active"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Active-active&lt;/h4&gt;
&lt;p&gt;In active-active, both servers are managing traffic, spreading the load between them.&lt;/p&gt;
&lt;p&gt;If the servers are public-facing, the DNS would need to know about the public IPs of both servers.  If the servers are internal-facing, application logic would need to know about both servers.&lt;/p&gt;
&lt;p&gt;Active-active failover can also be referred to as master-master failover.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-disadvantages-failover" class="anchor" aria-hidden="true" href="#disadvantages-failover"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): failover&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Fail-over adds more hardware and additional complexity.&lt;/li&gt;
&lt;li&gt;There is a potential for loss of data if the active system fails before any newly written data can be replicated to the passive.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-replication" class="anchor" aria-hidden="true" href="#replication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Replication&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-master-slave-and-master-master" class="anchor" aria-hidden="true" href="#master-slave-and-master-master"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Master-slave and master-master&lt;/h4&gt;
&lt;p&gt;This topic is further discussed in the &lt;a href="#database"&gt;Database&lt;/a&gt; section:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#master-slave-replication"&gt;Master-slave replication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#master-master-replication"&gt;Master-master replication&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-availability-in-numbers" class="anchor" aria-hidden="true" href="#availability-in-numbers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Availability in numbers&lt;/h3&gt;
&lt;p&gt;Availability is often quantified by uptime (or downtime) as a percentage of time the service is available.  Availability is generally measured in number of 9s--a service with 99.99% availability is described as having four 9s.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-999-availability---three-9s" class="anchor" aria-hidden="true" href="#999-availability---three-9s"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;99.9% availability - three 9s&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Duration&lt;/th&gt;
&lt;th&gt;Acceptable downtime&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Downtime per year&lt;/td&gt;
&lt;td&gt;8h 45min 57s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Downtime per month&lt;/td&gt;
&lt;td&gt;43m 49.7s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Downtime per week&lt;/td&gt;
&lt;td&gt;10m 4.8s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Downtime per day&lt;/td&gt;
&lt;td&gt;1m 26.4s&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-9999-availability---four-9s" class="anchor" aria-hidden="true" href="#9999-availability---four-9s"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;99.99% availability - four 9s&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Duration&lt;/th&gt;
&lt;th&gt;Acceptable downtime&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Downtime per year&lt;/td&gt;
&lt;td&gt;52min 35.7s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Downtime per month&lt;/td&gt;
&lt;td&gt;4m 23s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Downtime per week&lt;/td&gt;
&lt;td&gt;1m 5s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Downtime per day&lt;/td&gt;
&lt;td&gt;8.6s&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-availability-in-parallel-vs-in-sequence" class="anchor" aria-hidden="true" href="#availability-in-parallel-vs-in-sequence"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Availability in parallel vs in sequence&lt;/h4&gt;
&lt;p&gt;If a service consists of multiple components prone to failure, the service's overall availability depends on whether the components are in sequence or in parallel.&lt;/p&gt;
&lt;h6&gt;&lt;a id="user-content-in-sequence" class="anchor" aria-hidden="true" href="#in-sequence"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;In sequence&lt;/h6&gt;
&lt;p&gt;Overall availability decreases when two components with availability &amp;lt; 100% are in sequence:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Availability (Total) = Availability (Foo) * Availability (Bar)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If both &lt;code&gt;Foo&lt;/code&gt; and &lt;code&gt;Bar&lt;/code&gt; each had 99.9% availability, their total availability in sequence would be 99.8%.&lt;/p&gt;
&lt;h6&gt;&lt;a id="user-content-in-parallel" class="anchor" aria-hidden="true" href="#in-parallel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;In parallel&lt;/h6&gt;
&lt;p&gt;Overall availability increases when two components with availability &amp;lt; 100% are in parallel:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Availability (Total) = 1 - (1 - Availability (Foo)) * (1 - Availability (Bar))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If both &lt;code&gt;Foo&lt;/code&gt; and &lt;code&gt;Bar&lt;/code&gt; each had 99.9% availability, their total availability in parallel would be 99.9999%.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-domain-name-system" class="anchor" aria-hidden="true" href="#domain-name-system"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Domain name system&lt;/h2&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/fae27d1291ed38dd120595d692eacd2505cd3a9c/687474703a2f2f692e696d6775722e636f6d2f494f794c6a34692e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/fae27d1291ed38dd120595d692eacd2505cd3a9c/687474703a2f2f692e696d6775722e636f6d2f494f794c6a34692e6a7067" data-canonical-src="http://i.imgur.com/IOyLj4i.jpg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://www.slideshare.net/srikrupa5/dns-security-presentation-issa" rel="nofollow"&gt;Source: DNS security presentation&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;A Domain Name System (DNS) translates a domain name such as &lt;a href="http://www.example.com" rel="nofollow"&gt;www.example.com&lt;/a&gt; to an IP address.&lt;/p&gt;
&lt;p&gt;DNS is hierarchical, with a few authoritative servers at the top level.  Your router or ISP provides information about which DNS server(s) to contact when doing a lookup.  Lower level DNS servers cache mappings, which could become stale due to DNS propagation delays.  DNS results can also be cached by your browser or OS for a certain period of time, determined by the &lt;a href="https://en.wikipedia.org/wiki/Time_to_live" rel="nofollow"&gt;time to live (TTL)&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;NS record (name server)&lt;/strong&gt; - Specifies the DNS servers for your domain/subdomain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MX record (mail exchange)&lt;/strong&gt; - Specifies the mail servers for accepting messages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;A record (address)&lt;/strong&gt; - Points a name to an IP address.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CNAME (canonical)&lt;/strong&gt; - Points a name to another name or &lt;code&gt;CNAME&lt;/code&gt; (example.com to &lt;a href="http://www.example.com" rel="nofollow"&gt;www.example.com&lt;/a&gt;) or to an &lt;code&gt;A&lt;/code&gt; record.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Services such as &lt;a href="https://www.cloudflare.com/dns/" rel="nofollow"&gt;CloudFlare&lt;/a&gt; and &lt;a href="https://aws.amazon.com/route53/" rel="nofollow"&gt;Route 53&lt;/a&gt; provide managed DNS services.  Some DNS services can route traffic through various methods:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://g33kinfo.com/info/archives/2657" rel="nofollow"&gt;Weighted round robin&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Prevent traffic from going to servers under maintenance&lt;/li&gt;
&lt;li&gt;Balance between varying cluster sizes&lt;/li&gt;
&lt;li&gt;A/B testing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Latency-based&lt;/li&gt;
&lt;li&gt;Geolocation-based&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-disadvantages-dns" class="anchor" aria-hidden="true" href="#disadvantages-dns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): DNS&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Accessing a DNS server introduces a slight delay, although mitigated by caching described above.&lt;/li&gt;
&lt;li&gt;DNS server management could be complex and is generally managed by &lt;a href="http://superuser.com/questions/472695/who-controls-the-dns-servers/472729" rel="nofollow"&gt;governments, ISPs, and large companies&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;DNS services have recently come under &lt;a href="http://dyn.com/blog/dyn-analysis-summary-of-friday-october-21-attack/" rel="nofollow"&gt;DDoS attack&lt;/a&gt;, preventing users from accessing websites such as Twitter without knowing Twitter's IP address(es).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sources-and-further-reading-5" class="anchor" aria-hidden="true" href="#sources-and-further-reading-5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://technet.microsoft.com/en-us/library/dd197427(v=ws.10).aspx" rel="nofollow"&gt;DNS architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Domain_Name_System" rel="nofollow"&gt;Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://support.dnsimple.com/categories/dns/" rel="nofollow"&gt;DNS articles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-content-delivery-network" class="anchor" aria-hidden="true" href="#content-delivery-network"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Content delivery network&lt;/h2&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/853a8603651149c686bf3c504769fc594ff08849/687474703a2f2f692e696d6775722e636f6d2f683954417547492e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/853a8603651149c686bf3c504769fc594ff08849/687474703a2f2f692e696d6775722e636f6d2f683954417547492e6a7067" data-canonical-src="http://i.imgur.com/h9TAuGI.jpg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="https://www.creative-artworks.eu/why-use-a-content-delivery-network-cdn/" rel="nofollow"&gt;Source: Why use a CDN&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;A content delivery network (CDN) is a globally distributed network of proxy servers, serving content from locations closer to the user.  Generally, static files such as HTML/CSS/JS, photos, and videos are served from CDN, although some CDNs such as Amazon's CloudFront support dynamic content.  The site's DNS resolution will tell clients which server to contact.&lt;/p&gt;
&lt;p&gt;Serving content from CDNs can significantly improve performance in two ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Users receive content at data centers close to them&lt;/li&gt;
&lt;li&gt;Your servers do not have to serve requests that the CDN fulfills&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-push-cdns" class="anchor" aria-hidden="true" href="#push-cdns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Push CDNs&lt;/h3&gt;
&lt;p&gt;Push CDNs receive new content whenever changes occur on your server.  You take full responsibility for providing content, uploading directly to the CDN and rewriting URLs to point to the CDN.  You can configure when content expires and when it is updated.  Content is uploaded only when it is new or changed, minimizing traffic, but maximizing storage.&lt;/p&gt;
&lt;p&gt;Sites with a small amount of traffic or sites with content that isn't often updated work well with push CDNs.  Content is placed on the CDNs once, instead of being re-pulled at regular intervals.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pull-cdns" class="anchor" aria-hidden="true" href="#pull-cdns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pull CDNs&lt;/h3&gt;
&lt;p&gt;Pull CDNs grab new content from your server when the first user requests the content.  You leave the content on your server and rewrite URLs to point to the CDN.  This results in a slower request until the content is cached on the CDN.&lt;/p&gt;
&lt;p&gt;A &lt;a href="https://en.wikipedia.org/wiki/Time_to_live" rel="nofollow"&gt;time-to-live (TTL)&lt;/a&gt; determines how long content is cached.  Pull CDNs minimize storage space on the CDN, but can create redundant traffic if files expire and are pulled before they have actually changed.&lt;/p&gt;
&lt;p&gt;Sites with heavy traffic work well with pull CDNs, as traffic is spread out more evenly with only recently-requested content remaining on the CDN.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-disadvantages-cdn" class="anchor" aria-hidden="true" href="#disadvantages-cdn"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): CDN&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;CDN costs could be significant depending on traffic, although this should be weighed with additional costs you would incur not using a CDN.&lt;/li&gt;
&lt;li&gt;Content might be stale if it is updated before the TTL expires it.&lt;/li&gt;
&lt;li&gt;CDNs require changing URLs for static content to point to the CDN.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sources-and-further-reading-6" class="anchor" aria-hidden="true" href="#sources-and-further-reading-6"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://figshare.com/articles/Globally_distributed_content_delivery/6605972" rel="nofollow"&gt;Globally distributed content delivery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.travelblogadvice.com/technical/the-differences-between-push-and-pull-cdns/" rel="nofollow"&gt;The differences between push and pull CDNs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Content_delivery_network" rel="nofollow"&gt;Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-load-balancer" class="anchor" aria-hidden="true" href="#load-balancer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Load balancer&lt;/h2&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/21caea3d7f67f451630012f657ae59a56709365c/687474703a2f2f692e696d6775722e636f6d2f6838316e39694b2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/21caea3d7f67f451630012f657ae59a56709365c/687474703a2f2f692e696d6775722e636f6d2f6838316e39694b2e706e67" data-canonical-src="http://i.imgur.com/h81n9iK.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html" rel="nofollow"&gt;Source: Scalable system design patterns&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;Load balancers distribute incoming client requests to computing resources such as application servers and databases.  In each case, the load balancer returns the response from the computing resource to the appropriate client.  Load balancers are effective at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Preventing requests from going to unhealthy servers&lt;/li&gt;
&lt;li&gt;Preventing overloading resources&lt;/li&gt;
&lt;li&gt;Helping eliminate single points of failure&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Load balancers can be implemented with hardware (expensive) or with software such as HAProxy.&lt;/p&gt;
&lt;p&gt;Additional benefits include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SSL termination&lt;/strong&gt; - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations
&lt;ul&gt;
&lt;li&gt;Removes the need to install &lt;a href="https://en.wikipedia.org/wiki/X.509" rel="nofollow"&gt;X.509 certificates&lt;/a&gt; on each server&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Session persistence&lt;/strong&gt; - Issue cookies and route a specific client's requests to same instance if the web apps do not keep track of sessions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To protect against failures, it's common to set up multiple load balancers, either in &lt;a href="#active-passive"&gt;active-passive&lt;/a&gt; or &lt;a href="#active-active"&gt;active-active&lt;/a&gt; mode.&lt;/p&gt;
&lt;p&gt;Load balancers can route traffic based on various metrics, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Random&lt;/li&gt;
&lt;li&gt;Least loaded&lt;/li&gt;
&lt;li&gt;Session/cookies&lt;/li&gt;
&lt;li&gt;&lt;a href="http://g33kinfo.com/info/archives/2657" rel="nofollow"&gt;Round robin or weighted round robin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#layer-4-load-balancing"&gt;Layer 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#layer-7-load-balancing"&gt;Layer 7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-layer-4-load-balancing" class="anchor" aria-hidden="true" href="#layer-4-load-balancing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Layer 4 load balancing&lt;/h3&gt;
&lt;p&gt;Layer 4 load balancers look at info at the &lt;a href="#communication"&gt;transport layer&lt;/a&gt; to decide how to distribute requests.  Generally, this involves the source, destination IP addresses, and ports in the header, but not the contents of the packet.  Layer 4 load balancers forward network packets to and from the upstream server, performing &lt;a href="https://www.nginx.com/resources/glossary/layer-4-load-balancing/" rel="nofollow"&gt;Network Address Translation (NAT)&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-layer-7-load-balancing" class="anchor" aria-hidden="true" href="#layer-7-load-balancing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Layer 7 load balancing&lt;/h3&gt;
&lt;p&gt;Layer 7 load balancers look at the &lt;a href="#communication"&gt;application layer&lt;/a&gt; to decide how to distribute requests.  This can involve contents of the header, message, and cookies.  Layer 7 load balancers terminates network traffic, reads the message, makes a load-balancing decision, then opens a connection to the selected server.  For example, a layer 7 load balancer can direct video traffic to servers that host videos while directing more sensitive user billing traffic to security-hardened servers.&lt;/p&gt;
&lt;p&gt;At the cost of flexibility, layer 4 load balancing requires less time and computing resources than Layer 7, although the performance impact can be minimal on modern commodity hardware.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-horizontal-scaling" class="anchor" aria-hidden="true" href="#horizontal-scaling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Horizontal scaling&lt;/h3&gt;
&lt;p&gt;Load balancers can also help with horizontal scaling, improving performance and availability.  Scaling out using commodity machines is more cost efficient and results in higher availability than scaling up a single server on more expensive hardware, called &lt;strong&gt;Vertical Scaling&lt;/strong&gt;.  It is also easier to hire for talent working on commodity hardware than it is for specialized enterprise systems.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-disadvantages-horizontal-scaling" class="anchor" aria-hidden="true" href="#disadvantages-horizontal-scaling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): horizontal scaling&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Scaling horizontally introduces complexity and involves cloning servers
&lt;ul&gt;
&lt;li&gt;Servers should be stateless: they should not contain any user-related data like sessions or profile pictures&lt;/li&gt;
&lt;li&gt;Sessions can be stored in a centralized data store such as a &lt;a href="#database"&gt;database&lt;/a&gt; (SQL, NoSQL) or a persistent &lt;a href="#cache"&gt;cache&lt;/a&gt; (Redis, Memcached)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Downstream servers such as caches and databases need to handle more simultaneous connections as upstream servers scale out&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-disadvantages-load-balancer" class="anchor" aria-hidden="true" href="#disadvantages-load-balancer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): load balancer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The load balancer can become a performance bottleneck if it does not have enough resources or if it is not configured properly.&lt;/li&gt;
&lt;li&gt;Introducing a load balancer to help eliminate single points of failure results in increased complexity.&lt;/li&gt;
&lt;li&gt;A single load balancer is a single point of failure, configuring multiple load balancers further increases complexity.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sources-and-further-reading-7" class="anchor" aria-hidden="true" href="#sources-and-further-reading-7"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/" rel="nofollow"&gt;NGINX architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.haproxy.org/download/1.2/doc/architecture.txt" rel="nofollow"&gt;HAProxy architecture guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones" rel="nofollow"&gt;Scalability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Load_balancing_(computing)" rel="nofollow"&gt;Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nginx.com/resources/glossary/layer-4-load-balancing/" rel="nofollow"&gt;Layer 4 load balancing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nginx.com/resources/glossary/layer-7-load-balancing/" rel="nofollow"&gt;Layer 7 load balancing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html" rel="nofollow"&gt;ELB listener config&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-reverse-proxy-web-server" class="anchor" aria-hidden="true" href="#reverse-proxy-web-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reverse proxy (web server)&lt;/h2&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e88216d0999853426f72b28e41223f43977d22b7/687474703a2f2f692e696d6775722e636f6d2f6e3431417a66662e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e88216d0999853426f72b28e41223f43977d22b7/687474703a2f2f692e696d6775722e636f6d2f6e3431417a66662e706e67" data-canonical-src="http://i.imgur.com/n41Azff.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="https://upload.wikimedia.org/wikipedia/commons/6/67/Reverse_proxy_h2g2bob.svg" rel="nofollow"&gt;Source: Wikipedia&lt;/a&gt;&lt;/i&gt;
  &lt;br&gt;
&lt;/p&gt;
&lt;p&gt;A reverse proxy is a web server that centralizes internal services and provides unified interfaces to the public.  Requests from clients are forwarded to a server that can fulfill it before the reverse proxy returns the server's response to the client.&lt;/p&gt;
&lt;p&gt;Additional benefits include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Increased security&lt;/strong&gt; - Hide information about backend servers, blacklist IPs, limit number of connections per client&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Increased scalability and flexibility&lt;/strong&gt; - Clients only see the reverse proxy's IP, allowing you to scale servers or change their configuration&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SSL termination&lt;/strong&gt; - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations
&lt;ul&gt;
&lt;li&gt;Removes the need to install &lt;a href="https://en.wikipedia.org/wiki/X.509" rel="nofollow"&gt;X.509 certificates&lt;/a&gt; on each server&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Compression&lt;/strong&gt; - Compress server responses&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Caching&lt;/strong&gt; - Return the response for cached requests&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Static content&lt;/strong&gt; - Serve static content directly
&lt;ul&gt;
&lt;li&gt;HTML/CSS/JS&lt;/li&gt;
&lt;li&gt;Photos&lt;/li&gt;
&lt;li&gt;Videos&lt;/li&gt;
&lt;li&gt;Etc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-load-balancer-vs-reverse-proxy" class="anchor" aria-hidden="true" href="#load-balancer-vs-reverse-proxy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Load balancer vs reverse proxy&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Deploying a load balancer is useful when you have multiple servers.  Often, load balancers  route traffic to a set of servers serving the same function.&lt;/li&gt;
&lt;li&gt;Reverse proxies can be useful even with just one web server or application server, opening up the benefits described in the previous section.&lt;/li&gt;
&lt;li&gt;Solutions such as NGINX and HAProxy can support both layer 7 reverse proxying and load balancing.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-disadvantages-reverse-proxy" class="anchor" aria-hidden="true" href="#disadvantages-reverse-proxy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): reverse proxy&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Introducing a reverse proxy results in increased complexity.&lt;/li&gt;
&lt;li&gt;A single reverse proxy is a single point of failure, configuring multiple reverse proxies (ie a &lt;a href="https://en.wikipedia.org/wiki/Failover" rel="nofollow"&gt;failover&lt;/a&gt;) further increases complexity.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sources-and-further-reading-8" class="anchor" aria-hidden="true" href="#sources-and-further-reading-8"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.nginx.com/resources/glossary/reverse-proxy-vs-load-balancer/" rel="nofollow"&gt;Reverse proxy vs load balancer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/" rel="nofollow"&gt;NGINX architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.haproxy.org/download/1.2/doc/architecture.txt" rel="nofollow"&gt;HAProxy architecture guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Reverse_proxy" rel="nofollow"&gt;Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-application-layer" class="anchor" aria-hidden="true" href="#application-layer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Application layer&lt;/h2&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/feeb549c5b6e94f65c613635f7166dc26e0c7de7/687474703a2f2f692e696d6775722e636f6d2f7942355359776d2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/feeb549c5b6e94f65c613635f7166dc26e0c7de7/687474703a2f2f692e696d6775722e636f6d2f7942355359776d2e706e67" data-canonical-src="http://i.imgur.com/yB5SYwm.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer" rel="nofollow"&gt;Source: Intro to architecting systems for scale&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;Separating out the web layer from the application layer (also known as platform layer) allows you to scale and configure both layers independently.  Adding a new API results in adding application servers without necessarily adding additional web servers.  The &lt;strong&gt;single responsibility principle&lt;/strong&gt; advocates for small and autonomous services that work together.  Small teams with small services can plan more aggressively for rapid growth.&lt;/p&gt;
&lt;p&gt;Workers in the application layer also help enable &lt;a href="#asynchronism"&gt;asynchronism&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-microservices" class="anchor" aria-hidden="true" href="#microservices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Microservices&lt;/h3&gt;
&lt;p&gt;Related to this discussion are &lt;a href="https://en.wikipedia.org/wiki/Microservices" rel="nofollow"&gt;microservices&lt;/a&gt;, which can be described as a suite of independently deployable, small, modular services.  Each service runs a unique process and communicates through a well-defined, lightweight mechanism to serve a business goal. &lt;sup&gt;&lt;a href="https://smartbear.com/learn/api-design/what-are-microservices" rel="nofollow"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Pinterest, for example, could have the following microservices: user profile, follower, feed, search, photo upload, etc.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-service-discovery" class="anchor" aria-hidden="true" href="#service-discovery"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Service Discovery&lt;/h3&gt;
&lt;p&gt;Systems such as &lt;a href="https://www.consul.io/docs/index.html" rel="nofollow"&gt;Consul&lt;/a&gt;, &lt;a href="https://coreos.com/etcd/docs/latest" rel="nofollow"&gt;Etcd&lt;/a&gt;, and &lt;a href="http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper" rel="nofollow"&gt;Zookeeper&lt;/a&gt; can help services find each other by keeping track of registered names, addresses, and ports.  &lt;a href="https://www.consul.io/intro/getting-started/checks.html" rel="nofollow"&gt;Health checks&lt;/a&gt; help verify service integrity and are often done using an &lt;a href="#hypertext-transfer-protocol-http"&gt;HTTP&lt;/a&gt; endpoint.  Both Consul and Etcd have a built in &lt;a href="#key-value-store"&gt;key-value store&lt;/a&gt; that can be useful for storing config values and other shared data.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-disadvantages-application-layer" class="anchor" aria-hidden="true" href="#disadvantages-application-layer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): application layer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Adding an application layer with loosely coupled services requires a different approach from an architectural, operations, and process viewpoint (vs a monolithic system).&lt;/li&gt;
&lt;li&gt;Microservices can add complexity in terms of deployments and operations.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sources-and-further-reading-9" class="anchor" aria-hidden="true" href="#sources-and-further-reading-9"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://lethain.com/introduction-to-architecting-systems-for-scale" rel="nofollow"&gt;Intro to architecting systems for scale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview" rel="nofollow"&gt;Crack the system design interview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Service-oriented_architecture" rel="nofollow"&gt;Service oriented architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper" rel="nofollow"&gt;Introduction to Zookeeper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloudncode.wordpress.com/2016/07/22/msa-getting-started/" rel="nofollow"&gt;Here's what you need to know about building microservices&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-database" class="anchor" aria-hidden="true" href="#database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database&lt;/h2&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/15a7553727e6da98d0de5e9ca3792f6d2b5e92d4/687474703a2f2f692e696d6775722e636f6d2f586b6d3543587a2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/15a7553727e6da98d0de5e9ca3792f6d2b5e92d4/687474703a2f2f692e696d6775722e636f6d2f586b6d3543587a2e706e67" data-canonical-src="http://i.imgur.com/Xkm5CXz.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="https://www.youtube.com/watch?v=w95murBkYmU" rel="nofollow"&gt;Source: Scaling up to your first 10 million users&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-relational-database-management-system-rdbms" class="anchor" aria-hidden="true" href="#relational-database-management-system-rdbms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Relational database management system (RDBMS)&lt;/h3&gt;
&lt;p&gt;A relational database like SQL is a collection of data items organized in tables.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ACID&lt;/strong&gt; is a set of properties of relational database &lt;a href="https://en.wikipedia.org/wiki/Database_transaction" rel="nofollow"&gt;transactions&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Atomicity&lt;/strong&gt; - Each transaction is all or nothing&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Consistency&lt;/strong&gt; - Any transaction will bring the database from one valid state to another&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Isolation&lt;/strong&gt; - Executing transactions concurrently has the same results as if the transactions were executed serially&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Durability&lt;/strong&gt; - Once a transaction has been committed, it will remain so&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are many techniques to scale a relational database: &lt;strong&gt;master-slave replication&lt;/strong&gt;, &lt;strong&gt;master-master replication&lt;/strong&gt;, &lt;strong&gt;federation&lt;/strong&gt;, &lt;strong&gt;sharding&lt;/strong&gt;, &lt;strong&gt;denormalization&lt;/strong&gt;, and &lt;strong&gt;SQL tuning&lt;/strong&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-master-slave-replication" class="anchor" aria-hidden="true" href="#master-slave-replication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Master-slave replication&lt;/h4&gt;
&lt;p&gt;The master serves reads and writes, replicating writes to one or more slaves, which serve only reads.  Slaves can also replicate to additional slaves in a tree-like fashion.  If the master goes offline, the system can continue to operate in read-only mode until a slave is promoted to a master or a new master is provisioned.&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6a097809b9690236258747d969b1d3e0d93bb8ca/687474703a2f2f692e696d6775722e636f6d2f4339696f47746e2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/6a097809b9690236258747d969b1d3e0d93bb8ca/687474703a2f2f692e696d6775722e636f6d2f4339696f47746e2e706e67" data-canonical-src="http://i.imgur.com/C9ioGtn.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://www.slideshare.net/jboner/scalability-availability-stability-patterns/" rel="nofollow"&gt;Source: Scalability, availability, stability, patterns&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-disadvantages-master-slave-replication" class="anchor" aria-hidden="true" href="#disadvantages-master-slave-replication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): master-slave replication&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Additional logic is needed to promote a slave to a master.&lt;/li&gt;
&lt;li&gt;See &lt;a href="#disadvantages-replication"&gt;Disadvantage(s): replication&lt;/a&gt; for points related to &lt;strong&gt;both&lt;/strong&gt; master-slave and master-master.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-master-master-replication" class="anchor" aria-hidden="true" href="#master-master-replication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Master-master replication&lt;/h4&gt;
&lt;p&gt;Both masters serve reads and writes and coordinate with each other on writes.  If either master goes down, the system can continue to operate with both reads and writes.&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/5862604b102ee97d85f86f89edda44bde85a5b7f/687474703a2f2f692e696d6775722e636f6d2f6b7241484c47672e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/5862604b102ee97d85f86f89edda44bde85a5b7f/687474703a2f2f692e696d6775722e636f6d2f6b7241484c47672e706e67" data-canonical-src="http://i.imgur.com/krAHLGg.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://www.slideshare.net/jboner/scalability-availability-stability-patterns/" rel="nofollow"&gt;Source: Scalability, availability, stability, patterns&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-disadvantages-master-master-replication" class="anchor" aria-hidden="true" href="#disadvantages-master-master-replication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): master-master replication&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;You'll need a load balancer or you'll need to make changes to your application logic to determine where to write.&lt;/li&gt;
&lt;li&gt;Most master-master systems are either loosely consistent (violating ACID) or have increased write latency due to synchronization.&lt;/li&gt;
&lt;li&gt;Conflict resolution comes more into play as more write nodes are added and as latency increases.&lt;/li&gt;
&lt;li&gt;See &lt;a href="#disadvantages-replication"&gt;Disadvantage(s): replication&lt;/a&gt; for points related to &lt;strong&gt;both&lt;/strong&gt; master-slave and master-master.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-disadvantages-replication" class="anchor" aria-hidden="true" href="#disadvantages-replication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): replication&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;There is a potential for loss of data if the master fails before any newly written data can be replicated to other nodes.&lt;/li&gt;
&lt;li&gt;Writes are replayed to the read replicas.  If there are a lot of writes, the read replicas can get bogged down with replaying writes and can't do as many reads.&lt;/li&gt;
&lt;li&gt;The more read slaves, the more you have to replicate, which leads to greater replication lag.&lt;/li&gt;
&lt;li&gt;On some systems, writing to the master can spawn multiple threads to write in parallel, whereas read replicas only support writing sequentially with a single thread.&lt;/li&gt;
&lt;li&gt;Replication adds more hardware and additional complexity.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-sources-and-further-reading-replication" class="anchor" aria-hidden="true" href="#sources-and-further-reading-replication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: replication&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/jboner/scalability-availability-stability-patterns/" rel="nofollow"&gt;Scalability, availability, stability, patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Multi-master_replication" rel="nofollow"&gt;Multi-master replication&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-federation" class="anchor" aria-hidden="true" href="#federation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Federation&lt;/h4&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6eb6570a8b6b4e1d52e3d7cc07e7959ea5dac75f/687474703a2f2f692e696d6775722e636f6d2f553371563333652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/6eb6570a8b6b4e1d52e3d7cc07e7959ea5dac75f/687474703a2f2f692e696d6775722e636f6d2f553371563333652e706e67" data-canonical-src="http://i.imgur.com/U3qV33e.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="https://www.youtube.com/watch?v=w95murBkYmU" rel="nofollow"&gt;Source: Scaling up to your first 10 million users&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;Federation (or functional partitioning) splits up databases by function.  For example, instead of a single, monolithic database, you could have three databases: &lt;strong&gt;forums&lt;/strong&gt;, &lt;strong&gt;users&lt;/strong&gt;, and &lt;strong&gt;products&lt;/strong&gt;, resulting in less read and write traffic to each database and therefore less replication lag.  Smaller databases result in more data that can fit in memory, which in turn results in more cache hits due to improved cache locality.  With no single central master serializing writes you can write in parallel, increasing throughput.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-disadvantages-federation" class="anchor" aria-hidden="true" href="#disadvantages-federation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): federation&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Federation is not effective if your schema requires huge functions or tables.&lt;/li&gt;
&lt;li&gt;You'll need to update your application logic to determine which database to read and write.&lt;/li&gt;
&lt;li&gt;Joining data from two databases is more complex with a &lt;a href="http://stackoverflow.com/questions/5145637/querying-data-by-joining-two-tables-in-two-database-on-different-servers" rel="nofollow"&gt;server link&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Federation adds more hardware and additional complexity.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-sources-and-further-reading-federation" class="anchor" aria-hidden="true" href="#sources-and-further-reading-federation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: federation&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=w95murBkYmU" rel="nofollow"&gt;Scaling up to your first 10 million users&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-sharding" class="anchor" aria-hidden="true" href="#sharding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sharding&lt;/h4&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1df78be67b749171569a0e11a51aa76b3b678d4f/687474703a2f2f692e696d6775722e636f6d2f775538783549642e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/1df78be67b749171569a0e11a51aa76b3b678d4f/687474703a2f2f692e696d6775722e636f6d2f775538783549642e706e67" data-canonical-src="http://i.imgur.com/wU8x5Id.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://www.slideshare.net/jboner/scalability-availability-stability-patterns/" rel="nofollow"&gt;Source: Scalability, availability, stability, patterns&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;Sharding distributes data across different databases such that each database can only manage a subset of the data.  Taking a users database as an example, as the number of users increases, more shards are added to the cluster.&lt;/p&gt;
&lt;p&gt;Similar to the advantages of &lt;a href="#federation"&gt;federation&lt;/a&gt;, sharding results in less read and write traffic, less replication, and more cache hits.  Index size is also reduced, which generally improves performance with faster queries.  If one shard goes down, the other shards are still operational, although you'll want to add some form of replication to avoid data loss.  Like federation, there is no single central master serializing writes, allowing you to write in parallel with increased throughput.&lt;/p&gt;
&lt;p&gt;Common ways to shard a table of users is either through the user's last name initial or the user's geographic location.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-disadvantages-sharding" class="anchor" aria-hidden="true" href="#disadvantages-sharding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): sharding&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;You'll need to update your application logic to work with shards, which could result in complex SQL queries.&lt;/li&gt;
&lt;li&gt;Data distribution can become lopsided in a shard.  For example, a set of power users on a shard could result in increased load to that shard compared to others.
&lt;ul&gt;
&lt;li&gt;Rebalancing adds additional complexity.  A sharding function based on &lt;a href="http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html" rel="nofollow"&gt;consistent hashing&lt;/a&gt; can reduce the amount of transferred data.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Joining data from multiple shards is more complex.&lt;/li&gt;
&lt;li&gt;Sharding adds more hardware and additional complexity.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-sources-and-further-reading-sharding" class="anchor" aria-hidden="true" href="#sources-and-further-reading-sharding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: sharding&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://highscalability.com/blog/2009/8/6/an-unorthodox-approach-to-database-design-the-coming-of-the.html" rel="nofollow"&gt;The coming of the shard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Shard_(database_architecture)" rel="nofollow"&gt;Shard database architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html" rel="nofollow"&gt;Consistent hashing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-denormalization" class="anchor" aria-hidden="true" href="#denormalization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Denormalization&lt;/h4&gt;
&lt;p&gt;Denormalization attempts to improve read performance at the expense of some write performance.  Redundant copies of the data are written in multiple tables to avoid expensive joins.  Some RDBMS such as &lt;a href="https://en.wikipedia.org/wiki/PostgreSQL" rel="nofollow"&gt;PostgreSQL&lt;/a&gt; and Oracle support &lt;a href="https://en.wikipedia.org/wiki/Materialized_view" rel="nofollow"&gt;materialized views&lt;/a&gt; which handle the work of storing redundant information and keeping redundant copies consistent.&lt;/p&gt;
&lt;p&gt;Once data becomes distributed with techniques such as &lt;a href="#federation"&gt;federation&lt;/a&gt; and &lt;a href="#sharding"&gt;sharding&lt;/a&gt;, managing joins across data centers further increases complexity.  Denormalization might circumvent the need for such complex joins.&lt;/p&gt;
&lt;p&gt;In most systems, reads can heavily outnumber writes 100:1 or even 1000:1.  A read resulting in a complex database join can be very expensive, spending a significant amount of time on disk operations.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-disadvantages-denormalization" class="anchor" aria-hidden="true" href="#disadvantages-denormalization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): denormalization&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Data is duplicated.&lt;/li&gt;
&lt;li&gt;Constraints can help redundant copies of information stay in sync, which increases complexity of the database design.&lt;/li&gt;
&lt;li&gt;A denormalized database under heavy write load might perform worse than its normalized counterpart.&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content-sources-and-further-reading-denormalization" class="anchor" aria-hidden="true" href="#sources-and-further-reading-denormalization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: denormalization&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Denormalization" rel="nofollow"&gt;Denormalization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-sql-tuning" class="anchor" aria-hidden="true" href="#sql-tuning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL tuning&lt;/h4&gt;
&lt;p&gt;SQL tuning is a broad topic and many &lt;a href="https://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&amp;amp;field-keywords=sql+tuning" rel="nofollow"&gt;books&lt;/a&gt; have been written as reference.&lt;/p&gt;
&lt;p&gt;It's important to &lt;strong&gt;benchmark&lt;/strong&gt; and &lt;strong&gt;profile&lt;/strong&gt; to simulate and uncover bottlenecks.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Benchmark&lt;/strong&gt; - Simulate high-load situations with tools such as &lt;a href="http://httpd.apache.org/docs/2.2/programs/ab.html" rel="nofollow"&gt;ab&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Profile&lt;/strong&gt; - Enable tools such as the &lt;a href="http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html" rel="nofollow"&gt;slow query log&lt;/a&gt; to help track performance issues.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Benchmarking and profiling might point you to the following optimizations.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-tighten-up-the-schema" class="anchor" aria-hidden="true" href="#tighten-up-the-schema"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tighten up the schema&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;MySQL dumps to disk in contiguous blocks for fast access.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;CHAR&lt;/code&gt; instead of &lt;code&gt;VARCHAR&lt;/code&gt; for fixed-length fields.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CHAR&lt;/code&gt; effectively allows for fast, random access, whereas with &lt;code&gt;VARCHAR&lt;/code&gt;, you must find the end of a string before moving onto the next one.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;TEXT&lt;/code&gt; for large blocks of text such as blog posts.  &lt;code&gt;TEXT&lt;/code&gt; also allows for boolean searches.  Using a &lt;code&gt;TEXT&lt;/code&gt; field results in storing a pointer on disk that is used to locate the text block.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;INT&lt;/code&gt; for larger numbers up to 2^32 or 4 billion.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;DECIMAL&lt;/code&gt; for currency to avoid floating point representation errors.&lt;/li&gt;
&lt;li&gt;Avoid storing large &lt;code&gt;BLOBS&lt;/code&gt;, store the location of where to get the object instead.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;VARCHAR(255)&lt;/code&gt; is the largest number of characters that can be counted in an 8 bit number, often maximizing the use of a byte in some RDBMS.&lt;/li&gt;
&lt;li&gt;Set the &lt;code&gt;NOT NULL&lt;/code&gt; constraint where applicable to &lt;a href="http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search" rel="nofollow"&gt;improve search performance&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-use-good-indices" class="anchor" aria-hidden="true" href="#use-good-indices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use good indices&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Columns that you are querying (&lt;code&gt;SELECT&lt;/code&gt;, &lt;code&gt;GROUP BY&lt;/code&gt;, &lt;code&gt;ORDER BY&lt;/code&gt;, &lt;code&gt;JOIN&lt;/code&gt;) could be faster with indices.&lt;/li&gt;
&lt;li&gt;Indices are usually represented as self-balancing &lt;a href="https://en.wikipedia.org/wiki/B-tree" rel="nofollow"&gt;B-tree&lt;/a&gt; that keeps data sorted and allows searches, sequential access, insertions, and deletions in logarithmic time.&lt;/li&gt;
&lt;li&gt;Placing an index can keep the data in memory, requiring more space.&lt;/li&gt;
&lt;li&gt;Writes could also be slower since the index also needs to be updated.&lt;/li&gt;
&lt;li&gt;When loading large amounts of data, it might be faster to disable indices, load the data, then rebuild the indices.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-avoid-expensive-joins" class="anchor" aria-hidden="true" href="#avoid-expensive-joins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Avoid expensive joins&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#denormalization"&gt;Denormalize&lt;/a&gt; where performance demands it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-partition-tables" class="anchor" aria-hidden="true" href="#partition-tables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Partition tables&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Break up a table by putting hot spots in a separate table to help keep it in memory.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-tune-the-query-cache" class="anchor" aria-hidden="true" href="#tune-the-query-cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tune the query cache&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;In some cases, the &lt;a href="https://dev.mysql.com/doc/refman/5.7/en/query-cache.html" rel="nofollow"&gt;query cache&lt;/a&gt; could lead to &lt;a href="https://www.percona.com/blog/2016/10/12/mysql-5-7-performance-tuning-immediately-after-installation/" rel="nofollow"&gt;performance issues&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-sources-and-further-reading-sql-tuning" class="anchor" aria-hidden="true" href="#sources-and-further-reading-sql-tuning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: SQL tuning&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://aiddroid.com/10-tips-optimizing-mysql-queries-dont-suck/" rel="nofollow"&gt;Tips for optimizing MySQL queries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/1217466/is-there-a-good-reason-i-see-varchar255-used-so-often-as-opposed-to-another-l" rel="nofollow"&gt;Is there a good reason i see VARCHAR(255) used so often?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search" rel="nofollow"&gt;How do null values affect performance?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html" rel="nofollow"&gt;Slow query log&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-nosql" class="anchor" aria-hidden="true" href="#nosql"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NoSQL&lt;/h3&gt;
&lt;p&gt;NoSQL is a collection of data items represented in a &lt;strong&gt;key-value store&lt;/strong&gt;, &lt;strong&gt;document store&lt;/strong&gt;, &lt;strong&gt;wide column store&lt;/strong&gt;, or a &lt;strong&gt;graph database&lt;/strong&gt;.  Data is denormalized, and joins are generally done in the application code.  Most NoSQL stores lack true ACID transactions and favor &lt;a href="#eventual-consistency"&gt;eventual consistency&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;BASE&lt;/strong&gt; is often used to describe the properties of NoSQL databases.  In comparison with the &lt;a href="#cap-theorem"&gt;CAP Theorem&lt;/a&gt;, BASE chooses availability over consistency.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Basically available&lt;/strong&gt; - the system guarantees availability.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Soft state&lt;/strong&gt; - the state of the system may change over time, even without input.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Eventual consistency&lt;/strong&gt; - the system will become consistent over a period of time, given that the system doesn't receive input during that period.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition to choosing between &lt;a href="#sql-or-nosql"&gt;SQL or NoSQL&lt;/a&gt;, it is helpful to understand which type of NoSQL database best fits your use case(s).  We'll review &lt;strong&gt;key-value stores&lt;/strong&gt;, &lt;strong&gt;document stores&lt;/strong&gt;, &lt;strong&gt;wide column stores&lt;/strong&gt;, and &lt;strong&gt;graph databases&lt;/strong&gt; in the next section.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-key-value-store" class="anchor" aria-hidden="true" href="#key-value-store"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Key-value store&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Abstraction: hash table&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A key-value store generally allows for O(1) reads and writes and is often backed by memory or SSD.  Data stores can maintain keys in &lt;a href="https://en.wikipedia.org/wiki/Lexicographical_order" rel="nofollow"&gt;lexicographic order&lt;/a&gt;, allowing efficient retrieval of key ranges.  Key-value stores can allow for storing of metadata with a value.&lt;/p&gt;
&lt;p&gt;Key-value stores provide high performance and are often used for simple data models or for rapidly-changing data, such as an in-memory cache layer.  Since they offer only a limited set of operations, complexity is shifted to the application layer if additional operations are needed.&lt;/p&gt;
&lt;p&gt;A key-value store is the basis for more complex systems such as a document store, and in some cases, a graph database.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-sources-and-further-reading-key-value-store" class="anchor" aria-hidden="true" href="#sources-and-further-reading-key-value-store"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: key-value store&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Key-value_database" rel="nofollow"&gt;Key-value database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/4056093/what-are-the-disadvantages-of-using-a-key-value-table-over-nullable-columns-or" rel="nofollow"&gt;Disadvantages of key-value stores&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://qnimate.com/overview-of-redis-architecture/" rel="nofollow"&gt;Redis architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.adayinthelifeof.nl/2011/02/06/memcache-internals/" rel="nofollow"&gt;Memcached architecture&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-document-store" class="anchor" aria-hidden="true" href="#document-store"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Document store&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Abstraction: key-value store with documents stored as values&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A document store is centered around documents (XML, JSON, binary, etc), where a document stores all information for a given object.  Document stores provide APIs or a query language to query based on the internal structure of the document itself.  &lt;em&gt;Note, many key-value stores include features for working with a value's metadata, blurring the lines between these two storage types.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Based on the underlying implementation, documents are organized by collections, tags, metadata, or directories.  Although documents can be organized or grouped together, documents may have fields that are completely different from each other.&lt;/p&gt;
&lt;p&gt;Some document stores like &lt;a href="https://www.mongodb.com/mongodb-architecture" rel="nofollow"&gt;MongoDB&lt;/a&gt; and &lt;a href="https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/" rel="nofollow"&gt;CouchDB&lt;/a&gt; also provide a SQL-like language to perform complex queries.  &lt;a href="http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf" rel="nofollow"&gt;DynamoDB&lt;/a&gt; supports both key-values and documents.&lt;/p&gt;
&lt;p&gt;Document stores provide high flexibility and are often used for working with occasionally changing data.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-sources-and-further-reading-document-store" class="anchor" aria-hidden="true" href="#sources-and-further-reading-document-store"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: document store&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Document-oriented_database" rel="nofollow"&gt;Document-oriented database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mongodb.com/mongodb-architecture" rel="nofollow"&gt;MongoDB architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/" rel="nofollow"&gt;CouchDB architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.elastic.co/blog/found-elasticsearch-from-the-bottom-up" rel="nofollow"&gt;Elasticsearch architecture&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-wide-column-store" class="anchor" aria-hidden="true" href="#wide-column-store"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Wide column store&lt;/h4&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/823668b07b4bff50574e934273c9244e4e5017d6/687474703a2f2f692e696d6775722e636f6d2f6e3136694f476b2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/823668b07b4bff50574e934273c9244e4e5017d6/687474703a2f2f692e696d6775722e636f6d2f6e3136694f476b2e706e67" data-canonical-src="http://i.imgur.com/n16iOGk.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html" rel="nofollow"&gt;Source: SQL &amp;amp; NoSQL, a brief history&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Abstraction: nested map &lt;code&gt;ColumnFamily&amp;lt;RowKey, Columns&amp;lt;ColKey, Value, Timestamp&amp;gt;&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A wide column store's basic unit of data is a column (name/value pair).  A column can be grouped in column families (analogous to a SQL table).  Super column families further group column families.  You can access each column independently with a row key, and columns with the same row key form a row.  Each value contains a timestamp for versioning and for conflict resolution.&lt;/p&gt;
&lt;p&gt;Google introduced &lt;a href="http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf" rel="nofollow"&gt;Bigtable&lt;/a&gt; as the first wide column store, which influenced the open-source &lt;a href="https://www.mapr.com/blog/in-depth-look-hbase-architecture" rel="nofollow"&gt;HBase&lt;/a&gt; often-used in the Hadoop ecosystem, and &lt;a href="http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html" rel="nofollow"&gt;Cassandra&lt;/a&gt; from Facebook.  Stores such as BigTable, HBase, and Cassandra maintain keys in lexicographic order, allowing efficient retrieval of selective key ranges.&lt;/p&gt;
&lt;p&gt;Wide column stores offer high availability and high scalability.  They are often used for very large data sets.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-sources-and-further-reading-wide-column-store" class="anchor" aria-hidden="true" href="#sources-and-further-reading-wide-column-store"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: wide column store&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html" rel="nofollow"&gt;SQL &amp;amp; NoSQL, a brief history&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf" rel="nofollow"&gt;Bigtable architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mapr.com/blog/in-depth-look-hbase-architecture" rel="nofollow"&gt;HBase architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html" rel="nofollow"&gt;Cassandra architecture&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-graph-database" class="anchor" aria-hidden="true" href="#graph-database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Graph database&lt;/h4&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/bf6508b65e98a7210d9861515833afa0d9434436/687474703a2f2f692e696d6775722e636f6d2f664e636c3635672e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/bf6508b65e98a7210d9861515833afa0d9434436/687474703a2f2f692e696d6775722e636f6d2f664e636c3635672e706e67" data-canonical-src="http://i.imgur.com/fNcl65g.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="https://en.wikipedia.org/wiki/File:GraphDatabase_PropertyGraph.png" rel="nofollow"&gt;Source: Graph database&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Abstraction: graph&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In a graph database, each node is a record and each arc is a relationship between two nodes.  Graph databases are optimized to represent complex relationships with many foreign keys or many-to-many relationships.&lt;/p&gt;
&lt;p&gt;Graphs databases offer high performance for data models with complex relationships, such as a social network.  They are relatively new and are not yet widely-used; it might be more difficult to find development tools and resources.  Many graphs can only be accessed with &lt;a href="#representational-state-transfer-rest"&gt;REST APIs&lt;/a&gt;.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-sources-and-further-reading-graph" class="anchor" aria-hidden="true" href="#sources-and-further-reading-graph"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: graph&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Graph_database" rel="nofollow"&gt;Graph database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://neo4j.com/" rel="nofollow"&gt;Neo4j&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.twitter.com/2010/introducing-flockdb" rel="nofollow"&gt;FlockDB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-sources-and-further-reading-nosql" class="anchor" aria-hidden="true" href="#sources-and-further-reading-nosql"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: NoSQL&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/3342497/explanation-of-base-terminology" rel="nofollow"&gt;Explanation of base terminology&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/baqend-blog/nosql-databases-a-survey-and-decision-guidance-ea7823a822d#.wskogqenq" rel="nofollow"&gt;NoSQL databases a survey and decision guidance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database" rel="nofollow"&gt;Scalability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qI_g07C_Q5I" rel="nofollow"&gt;Introduction to NoSQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://horicky.blogspot.com/2009/11/nosql-patterns.html" rel="nofollow"&gt;NoSQL patterns&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sql-or-nosql" class="anchor" aria-hidden="true" href="#sql-or-nosql"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL or NoSQL&lt;/h3&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a6e2e844765c9d5382d9c9b64ef7693977981646/687474703a2f2f692e696d6775722e636f6d2f775847714735662e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/a6e2e844765c9d5382d9c9b64ef7693977981646/687474703a2f2f692e696d6775722e636f6d2f775847714735662e706e67" data-canonical-src="http://i.imgur.com/wXGqG5f.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="https://www.infoq.com/articles/Transition-RDBMS-NoSQL/" rel="nofollow"&gt;Source: Transitioning from RDBMS to NoSQL&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;Reasons for &lt;strong&gt;SQL&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Structured data&lt;/li&gt;
&lt;li&gt;Strict schema&lt;/li&gt;
&lt;li&gt;Relational data&lt;/li&gt;
&lt;li&gt;Need for complex joins&lt;/li&gt;
&lt;li&gt;Transactions&lt;/li&gt;
&lt;li&gt;Clear patterns for scaling&lt;/li&gt;
&lt;li&gt;More established: developers, community, code, tools, etc&lt;/li&gt;
&lt;li&gt;Lookups by index are very fast&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Reasons for &lt;strong&gt;NoSQL&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Semi-structured data&lt;/li&gt;
&lt;li&gt;Dynamic or flexible schema&lt;/li&gt;
&lt;li&gt;Non-relational data&lt;/li&gt;
&lt;li&gt;No need for complex joins&lt;/li&gt;
&lt;li&gt;Store many TB (or PB) of data&lt;/li&gt;
&lt;li&gt;Very data intensive workload&lt;/li&gt;
&lt;li&gt;Very high throughput for IOPS&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sample data well-suited for NoSQL:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Rapid ingest of clickstream and log data&lt;/li&gt;
&lt;li&gt;Leaderboard or scoring data&lt;/li&gt;
&lt;li&gt;Temporary data, such as a shopping cart&lt;/li&gt;
&lt;li&gt;Frequently accessed ('hot') tables&lt;/li&gt;
&lt;li&gt;Metadata/lookup tables&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-sources-and-further-reading-sql-or-nosql" class="anchor" aria-hidden="true" href="#sources-and-further-reading-sql-or-nosql"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: SQL or NoSQL&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=w95murBkYmU" rel="nofollow"&gt;Scaling up to your first 10 million users&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sitepoint.com/sql-vs-nosql-differences/" rel="nofollow"&gt;SQL vs NoSQL differences&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-cache" class="anchor" aria-hidden="true" href="#cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cache&lt;/h2&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/7acedde6aa7853baf2eb4a53f88e2595ebe43756/687474703a2f2f692e696d6775722e636f6d2f51367a32344c612e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/7acedde6aa7853baf2eb4a53f88e2595ebe43756/687474703a2f2f692e696d6775722e636f6d2f51367a32344c612e706e67" data-canonical-src="http://i.imgur.com/Q6z24La.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html" rel="nofollow"&gt;Source: Scalable system design patterns&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;Caching improves page load times and can reduce the load on your servers and databases.  In this model, the dispatcher will first lookup if the request has been made before and try to find the previous result to return, in order to save the actual execution.&lt;/p&gt;
&lt;p&gt;Databases often benefit from a uniform distribution of reads and writes across its partitions.  Popular items can skew the distribution, causing bottlenecks.  Putting a cache in front of a database can help absorb uneven loads and spikes in traffic.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-client-caching" class="anchor" aria-hidden="true" href="#client-caching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Client caching&lt;/h3&gt;
&lt;p&gt;Caches can be located on the client side (OS or browser), &lt;a href="#reverse-proxy-web-server"&gt;server side&lt;/a&gt;, or in a distinct cache layer.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cdn-caching" class="anchor" aria-hidden="true" href="#cdn-caching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CDN caching&lt;/h3&gt;
&lt;p&gt;&lt;a href="#content-delivery-network"&gt;CDNs&lt;/a&gt; are considered a type of cache.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-web-server-caching" class="anchor" aria-hidden="true" href="#web-server-caching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Web server caching&lt;/h3&gt;
&lt;p&gt;&lt;a href="#reverse-proxy-web-server"&gt;Reverse proxies&lt;/a&gt; and caches such as &lt;a href="https://www.varnish-cache.org/" rel="nofollow"&gt;Varnish&lt;/a&gt; can serve static and dynamic content directly.  Web servers can also cache requests, returning responses without having to contact application servers.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-database-caching" class="anchor" aria-hidden="true" href="#database-caching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database caching&lt;/h3&gt;
&lt;p&gt;Your database usually includes some level of caching in a default configuration, optimized for a generic use case.  Tweaking these settings for specific usage patterns can further boost performance.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-application-caching" class="anchor" aria-hidden="true" href="#application-caching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Application caching&lt;/h3&gt;
&lt;p&gt;In-memory caches such as Memcached and Redis are key-value stores between your application and your data storage.  Since the data is held in RAM, it is much faster than typical databases where data is stored on disk.  RAM is more limited than disk, so &lt;a href="https://en.wikipedia.org/wiki/Cache_algorithms" rel="nofollow"&gt;cache invalidation&lt;/a&gt; algorithms such as &lt;a href="https://en.wikipedia.org/wiki/Cache_algorithms#Least_Recently_Used" rel="nofollow"&gt;least recently used (LRU)&lt;/a&gt; can help invalidate 'cold' entries and keep 'hot' data in RAM.&lt;/p&gt;
&lt;p&gt;Redis has the following additional features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Persistence option&lt;/li&gt;
&lt;li&gt;Built-in data structures such as sorted sets and lists&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are multiple levels you can cache that fall into two general categories: &lt;strong&gt;database queries&lt;/strong&gt; and &lt;strong&gt;objects&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Row level&lt;/li&gt;
&lt;li&gt;Query-level&lt;/li&gt;
&lt;li&gt;Fully-formed serializable objects&lt;/li&gt;
&lt;li&gt;Fully-rendered HTML&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Generally, you should try to avoid file-based caching, as it makes cloning and auto-scaling more difficult.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-caching-at-the-database-query-level" class="anchor" aria-hidden="true" href="#caching-at-the-database-query-level"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caching at the database query level&lt;/h3&gt;
&lt;p&gt;Whenever you query the database, hash the query as a key and store the result to the cache.  This approach suffers from expiration issues:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hard to delete a cached result with complex queries&lt;/li&gt;
&lt;li&gt;If one piece of data changes such as a table cell, you need to delete all cached queries that might include the changed cell&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-caching-at-the-object-level" class="anchor" aria-hidden="true" href="#caching-at-the-object-level"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caching at the object level&lt;/h3&gt;
&lt;p&gt;See your data as an object, similar to what you do with your application code.  Have your application assemble the dataset from the database into a class instance or a data structure(s):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Remove the object from cache if its underlying data has changed&lt;/li&gt;
&lt;li&gt;Allows for asynchronous processing: workers assemble objects by consuming the latest cached object&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Suggestions of what to cache:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;User sessions&lt;/li&gt;
&lt;li&gt;Fully rendered web pages&lt;/li&gt;
&lt;li&gt;Activity streams&lt;/li&gt;
&lt;li&gt;User graph data&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-when-to-update-the-cache" class="anchor" aria-hidden="true" href="#when-to-update-the-cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;When to update the cache&lt;/h3&gt;
&lt;p&gt;Since you can only store a limited amount of data in cache, you'll need to determine which cache update strategy works best for your use case.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-cache-aside" class="anchor" aria-hidden="true" href="#cache-aside"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cache-aside&lt;/h4&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/7f5934e49a678b67f65e5ed53134bc258b007ebb/687474703a2f2f692e696d6775722e636f6d2f4f4e6a4f52716b2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/7f5934e49a678b67f65e5ed53134bc258b007ebb/687474703a2f2f692e696d6775722e636f6d2f4f4e6a4f52716b2e706e67" data-canonical-src="http://i.imgur.com/ONjORqk.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast" rel="nofollow"&gt;Source: From cache to in-memory data grid&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;The application is responsible for reading and writing from storage.  The cache does not interact with storage directly.  The application does the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Look for entry in cache, resulting in a cache miss&lt;/li&gt;
&lt;li&gt;Load entry from the database&lt;/li&gt;
&lt;li&gt;Add entry to cache&lt;/li&gt;
&lt;li&gt;Return entry&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;get_user&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;user_id&lt;/span&gt;):
    user &lt;span class="pl-k"&gt;=&lt;/span&gt; cache.get(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user.&lt;span class="pl-c1"&gt;{0}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, user_id)
    &lt;span class="pl-k"&gt;if&lt;/span&gt; user &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;:
        user &lt;span class="pl-k"&gt;=&lt;/span&gt; db.query(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM users WHERE user_id = &lt;span class="pl-c1"&gt;{0}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, user_id)
        &lt;span class="pl-k"&gt;if&lt;/span&gt; user &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;:
            key &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user.&lt;span class="pl-c1"&gt;{0}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;.format(user_id)
            cache.set(key, json.dumps(user))
    &lt;span class="pl-k"&gt;return&lt;/span&gt; user&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://memcached.org/" rel="nofollow"&gt;Memcached&lt;/a&gt; is generally used in this manner.&lt;/p&gt;
&lt;p&gt;Subsequent reads of data added to cache are fast.  Cache-aside is also referred to as lazy loading.  Only requested data is cached, which avoids filling up the cache with data that isn't requested.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-disadvantages-cache-aside" class="anchor" aria-hidden="true" href="#disadvantages-cache-aside"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): cache-aside&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Each cache miss results in three trips, which can cause a noticeable delay.&lt;/li&gt;
&lt;li&gt;Data can become stale if it is updated in the database.  This issue is mitigated by setting a time-to-live (TTL) which forces an update of the cache entry, or by using write-through.&lt;/li&gt;
&lt;li&gt;When a node fails, it is replaced by a new, empty node, increasing latency.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-write-through" class="anchor" aria-hidden="true" href="#write-through"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Write-through&lt;/h4&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/56b870f4d199335ccdbc98b989ef6511ed14f0e2/687474703a2f2f692e696d6775722e636f6d2f3076426330684e2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/56b870f4d199335ccdbc98b989ef6511ed14f0e2/687474703a2f2f692e696d6775722e636f6d2f3076426330684e2e706e67" data-canonical-src="http://i.imgur.com/0vBc0hN.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://www.slideshare.net/jboner/scalability-availability-stability-patterns/" rel="nofollow"&gt;Source: Scalability, availability, stability, patterns&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;The application uses the cache as the main data store, reading and writing data to it, while the cache is responsible for reading and writing to the database:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Application adds/updates entry in cache&lt;/li&gt;
&lt;li&gt;Cache synchronously writes entry to data store&lt;/li&gt;
&lt;li&gt;Return&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Application code:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;set_user(&lt;span class="pl-c1"&gt;12345&lt;/span&gt;, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Cache code:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;set_user&lt;/span&gt;(&lt;span class="pl-smi"&gt;user_id&lt;/span&gt;, &lt;span class="pl-smi"&gt;values&lt;/span&gt;):
    user &lt;span class="pl-k"&gt;=&lt;/span&gt; db.query(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE Users WHERE id = &lt;span class="pl-c1"&gt;{0}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, user_id, values)
    cache.set(user_id, user)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Write-through is a slow overall operation due to the write operation, but subsequent reads of just written data are fast.  Users are generally more tolerant of latency when updating data than reading data.  Data in the cache is not stale.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-disadvantages-write-through" class="anchor" aria-hidden="true" href="#disadvantages-write-through"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): write through&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;When a new node is created due to failure or scaling, the new node will not cache entries until the entry is updated in the database.  Cache-aside in conjunction with write through can mitigate this issue.&lt;/li&gt;
&lt;li&gt;Most data written might never be read, which can be minimized with a TTL.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-write-behind-write-back" class="anchor" aria-hidden="true" href="#write-behind-write-back"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Write-behind (write-back)&lt;/h4&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/8aa9f1a2f050c1422898bb5e82f1f01773334e22/687474703a2f2f692e696d6775722e636f6d2f72675372766a472e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/8aa9f1a2f050c1422898bb5e82f1f01773334e22/687474703a2f2f692e696d6775722e636f6d2f72675372766a472e706e67" data-canonical-src="http://i.imgur.com/rgSrvjG.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://www.slideshare.net/jboner/scalability-availability-stability-patterns/" rel="nofollow"&gt;Source: Scalability, availability, stability, patterns&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;In write-behind, the application does the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add/update entry in cache&lt;/li&gt;
&lt;li&gt;Asynchronously write entry to the data store, improving write performance&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-disadvantages-write-behind" class="anchor" aria-hidden="true" href="#disadvantages-write-behind"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): write-behind&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;There could be data loss if the cache goes down prior to its contents hitting the data store.&lt;/li&gt;
&lt;li&gt;It is more complex to implement write-behind than it is to implement cache-aside or write-through.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-refresh-ahead" class="anchor" aria-hidden="true" href="#refresh-ahead"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Refresh-ahead&lt;/h4&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/49dcb54307763b4f56d61a4a1369826e2e7d52e4/687474703a2f2f692e696d6775722e636f6d2f6b78746a7167452e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/49dcb54307763b4f56d61a4a1369826e2e7d52e4/687474703a2f2f692e696d6775722e636f6d2f6b78746a7167452e706e67" data-canonical-src="http://i.imgur.com/kxtjqgE.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast" rel="nofollow"&gt;Source: From cache to in-memory data grid&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;You can configure the cache to automatically refresh any recently accessed cache entry prior to its expiration.&lt;/p&gt;
&lt;p&gt;Refresh-ahead can result in reduced latency vs read-through if the cache can accurately predict which items are likely to be needed in the future.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-disadvantages-refresh-ahead" class="anchor" aria-hidden="true" href="#disadvantages-refresh-ahead"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): refresh-ahead&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Not accurately predicting which items are likely to be needed in the future can result in reduced performance than without refresh-ahead.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-disadvantages-cache" class="anchor" aria-hidden="true" href="#disadvantages-cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): cache&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Need to maintain consistency between caches and the source of truth such as the database through &lt;a href="https://en.wikipedia.org/wiki/Cache_algorithms" rel="nofollow"&gt;cache invalidation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Cache invalidation is a difficult problem, there is additional complexity associated with when to update the cache.&lt;/li&gt;
&lt;li&gt;Need to make application changes such as adding Redis or memcached.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sources-and-further-reading-10" class="anchor" aria-hidden="true" href="#sources-and-further-reading-10"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast" rel="nofollow"&gt;From cache to in-memory data grid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html" rel="nofollow"&gt;Scalable system design patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://lethain.com/introduction-to-architecting-systems-for-scale/" rel="nofollow"&gt;Introduction to architecting systems for scale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/jboner/scalability-availability-stability-patterns/" rel="nofollow"&gt;Scalability, availability, stability, patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache" rel="nofollow"&gt;Scalability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Strategies.html" rel="nofollow"&gt;AWS ElastiCache strategies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Cache_(computing)" rel="nofollow"&gt;Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-asynchronism" class="anchor" aria-hidden="true" href="#asynchronism"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Asynchronism&lt;/h2&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c01ec137453216bbc188e3a8f16da39ec9131234/687474703a2f2f692e696d6775722e636f6d2f353447597353782e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/c01ec137453216bbc188e3a8f16da39ec9131234/687474703a2f2f692e696d6775722e636f6d2f353447597353782e706e67" data-canonical-src="http://i.imgur.com/54GYsSx.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer" rel="nofollow"&gt;Source: Intro to architecting systems for scale&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;Asynchronous workflows help reduce request times for expensive operations that would otherwise be performed in-line.  They can also help by doing time-consuming work in advance, such as periodic aggregation of data.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-message-queues" class="anchor" aria-hidden="true" href="#message-queues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Message queues&lt;/h3&gt;
&lt;p&gt;Message queues receive, hold, and deliver messages.  If an operation is too slow to perform inline, you can use a message queue with the following workflow:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An application publishes a job to the queue, then notifies the user of job status&lt;/li&gt;
&lt;li&gt;A worker picks up the job from the queue, processes it, then signals the job is complete&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The user is not blocked and the job is processed in the background.  During this time, the client might optionally do a small amount of processing to make it seem like the task has completed.  For example, if posting a tweet, the tweet could be instantly posted to your timeline, but it could take some time before your tweet is actually delivered to all of your followers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://redis.io/" rel="nofollow"&gt;Redis&lt;/a&gt;&lt;/strong&gt; is useful as a simple message broker but messages can be lost.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.rabbitmq.com/" rel="nofollow"&gt;RabbitMQ&lt;/a&gt;&lt;/strong&gt; is popular but requires you to adapt to the 'AMQP' protocol and manage your own nodes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://aws.amazon.com/sqs/" rel="nofollow"&gt;Amazon SQS&lt;/a&gt;&lt;/strong&gt; is hosted but can have high latency and has the possibility of messages being delivered twice.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-task-queues" class="anchor" aria-hidden="true" href="#task-queues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Task queues&lt;/h3&gt;
&lt;p&gt;Tasks queues receive tasks and their related data, runs them, then delivers their results.  They can support scheduling and can be used to run computationally-intensive jobs in the background.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Celery&lt;/strong&gt; has support for scheduling and primarily has python support.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-back-pressure" class="anchor" aria-hidden="true" href="#back-pressure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Back pressure&lt;/h3&gt;
&lt;p&gt;If queues start to grow significantly, the queue size can become larger than memory, resulting in cache misses, disk reads, and even slower performance.  &lt;a href="http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html" rel="nofollow"&gt;Back pressure&lt;/a&gt; can help by limiting the queue size, thereby maintaining a high throughput rate and good response times for jobs already in the queue.  Once the queue fills up, clients get a server busy or HTTP 503 status code to try again later.  Clients can retry the request at a later time, perhaps with &lt;a href="https://en.wikipedia.org/wiki/Exponential_backoff" rel="nofollow"&gt;exponential backoff&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-disadvantages-asynchronism" class="anchor" aria-hidden="true" href="#disadvantages-asynchronism"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): asynchronism&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Use cases such as inexpensive calculations and realtime workflows might be better suited for synchronous operations, as introducing queues can add delays and complexity.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sources-and-further-reading-11" class="anchor" aria-hidden="true" href="#sources-and-further-reading-11"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=1KRYH75wgy4" rel="nofollow"&gt;It's all a numbers game&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html" rel="nofollow"&gt;Applying back pressure when overloaded&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Little%27s_law" rel="nofollow"&gt;Little's law&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.quora.com/What-is-the-difference-between-a-message-queue-and-a-task-queue-Why-would-a-task-queue-require-a-message-broker-like-RabbitMQ-Redis-Celery-or-IronMQ-to-function" rel="nofollow"&gt;What is the difference between a message queue and a task queue?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-communication" class="anchor" aria-hidden="true" href="#communication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Communication&lt;/h2&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1d761d5688d28ce1fb12a0f1c8191bca96eece4c/687474703a2f2f692e696d6775722e636f6d2f354b656f6351732e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/1d761d5688d28ce1fb12a0f1c8191bca96eece4c/687474703a2f2f692e696d6775722e636f6d2f354b656f6351732e6a7067" data-canonical-src="http://i.imgur.com/5KeocQs.jpg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://www.escotal.com/osilayer.html" rel="nofollow"&gt;Source: OSI 7 layer model&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hypertext-transfer-protocol-http" class="anchor" aria-hidden="true" href="#hypertext-transfer-protocol-http"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hypertext transfer protocol (HTTP)&lt;/h3&gt;
&lt;p&gt;HTTP is a method for encoding and transporting data between a client and a server.  It is a request/response protocol: clients issue requests and servers issue responses with relevant content and completion status info about the request.  HTTP is self-contained, allowing requests and responses to flow through many intermediate routers and servers that perform load balancing, caching, encryption, and compression.&lt;/p&gt;
&lt;p&gt;A basic HTTP request consists of a verb (method) and a resource (endpoint).  Below are common HTTP verbs:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Verb&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Idempotent*&lt;/th&gt;
&lt;th&gt;Safe&lt;/th&gt;
&lt;th&gt;Cacheable&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;Reads a resource&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;Creates a resource or trigger a process that handles data&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;Yes if response contains freshness info&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PUT&lt;/td&gt;
&lt;td&gt;Creates or replace a resource&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PATCH&lt;/td&gt;
&lt;td&gt;Partially updates a resource&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;Yes if response contains freshness info&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DELETE&lt;/td&gt;
&lt;td&gt;Deletes a resource&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;*Can be called many times without different outcomes.&lt;/p&gt;
&lt;p&gt;HTTP is an application layer protocol relying on lower-level protocols such as &lt;strong&gt;TCP&lt;/strong&gt; and &lt;strong&gt;UDP&lt;/strong&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-sources-and-further-reading-http" class="anchor" aria-hidden="true" href="#sources-and-further-reading-http"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: HTTP&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.nginx.com/resources/glossary/http/" rel="nofollow"&gt;What is HTTP?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.quora.com/What-is-the-difference-between-HTTP-protocol-and-TCP-protocol" rel="nofollow"&gt;Difference between HTTP and TCP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://laracasts.com/discuss/channels/general-discussion/whats-the-differences-between-put-and-patch?page=1" rel="nofollow"&gt;Difference between PUT and PATCH&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-transmission-control-protocol-tcp" class="anchor" aria-hidden="true" href="#transmission-control-protocol-tcp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transmission control protocol (TCP)&lt;/h3&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/821620cf6aa83566f4def561e754e5991480ca8d/687474703a2f2f692e696d6775722e636f6d2f4a6441736476472e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/821620cf6aa83566f4def561e754e5991480ca8d/687474703a2f2f692e696d6775722e636f6d2f4a6441736476472e6a7067" data-canonical-src="http://i.imgur.com/JdAsdvG.jpg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/" rel="nofollow"&gt;Source: How to make a multiplayer game&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;TCP is a connection-oriented protocol over an &lt;a href="https://en.wikipedia.org/wiki/Internet_Protocol" rel="nofollow"&gt;IP network&lt;/a&gt;.  Connection is established and terminated using a &lt;a href="https://en.wikipedia.org/wiki/Handshaking" rel="nofollow"&gt;handshake&lt;/a&gt;.  All packets sent are guaranteed to reach the destination in the original order and without corruption through:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sequence numbers and &lt;a href="https://en.wikipedia.org/wiki/Transmission_Control_Protocol#Checksum_computation" rel="nofollow"&gt;checksum fields&lt;/a&gt; for each packet&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Acknowledgement_(data_networks)" rel="nofollow"&gt;Acknowledgement&lt;/a&gt; packets and automatic retransmission&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If the sender does not receive a correct response, it will resend the packets.  If there are multiple timeouts, the connection is dropped.  TCP also implements &lt;a href="https://en.wikipedia.org/wiki/Flow_control_(data)" rel="nofollow"&gt;flow control&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Network_congestion#Congestion_control" rel="nofollow"&gt;congestion control&lt;/a&gt;.  These guarantees cause delays and generally result in less efficient transmission than UDP.&lt;/p&gt;
&lt;p&gt;To ensure high throughput, web servers can keep a large number of TCP connections open, resulting in high memory usage.  It can be expensive to have a large number of open connections between web server threads and say, a &lt;a href="https://memcached.org/" rel="nofollow"&gt;memcached&lt;/a&gt; server.  &lt;a href="https://en.wikipedia.org/wiki/Connection_pool" rel="nofollow"&gt;Connection pooling&lt;/a&gt; can help in addition to switching to UDP where applicable.&lt;/p&gt;
&lt;p&gt;TCP is useful for applications that require high reliability but are less time critical.  Some examples include web servers, database info, SMTP, FTP, and SSH.&lt;/p&gt;
&lt;p&gt;Use TCP over UDP when:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You need all of the data to arrive intact&lt;/li&gt;
&lt;li&gt;You want to automatically make a best estimate use of the network throughput&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-user-datagram-protocol-udp" class="anchor" aria-hidden="true" href="#user-datagram-protocol-udp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;User datagram protocol (UDP)&lt;/h3&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/47eb14c0a2dff2166f8781a6ce8c7f33d4c33da8/687474703a2f2f692e696d6775722e636f6d2f797a44724a74412e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/47eb14c0a2dff2166f8781a6ce8c7f33d4c33da8/687474703a2f2f692e696d6775722e636f6d2f797a44724a74412e6a7067" data-canonical-src="http://i.imgur.com/yzDrJtA.jpg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/" rel="nofollow"&gt;Source: How to make a multiplayer game&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;UDP is connectionless.  Datagrams (analogous to packets) are guaranteed only at the datagram level.  Datagrams might reach their destination out of order or not at all.  UDP does not support congestion control.  Without the guarantees that TCP support, UDP is generally more efficient.&lt;/p&gt;
&lt;p&gt;UDP can broadcast, sending datagrams to all devices on the subnet.  This is useful with &lt;a href="https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol" rel="nofollow"&gt;DHCP&lt;/a&gt; because the client has not yet received an IP address, thus preventing a way for TCP to stream without the IP address.&lt;/p&gt;
&lt;p&gt;UDP is less reliable but works well in real time use cases such as VoIP, video chat, streaming, and realtime multiplayer games.&lt;/p&gt;
&lt;p&gt;Use UDP over TCP when:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You need the lowest latency&lt;/li&gt;
&lt;li&gt;Late data is worse than loss of data&lt;/li&gt;
&lt;li&gt;You want to implement your own error correction&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-sources-and-further-reading-tcp-and-udp" class="anchor" aria-hidden="true" href="#sources-and-further-reading-tcp-and-udp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: TCP and UDP&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://gafferongames.com/networking-for-game-programmers/udp-vs-tcp/" rel="nofollow"&gt;Networking for game programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cyberciti.biz/faq/key-differences-between-tcp-and-udp-protocols/" rel="nofollow"&gt;Key differences between TCP and UDP protocols&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/5970383/difference-between-tcp-and-udp" rel="nofollow"&gt;Difference between TCP and UDP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Transmission_Control_Protocol" rel="nofollow"&gt;Transmission control protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/User_Datagram_Protocol" rel="nofollow"&gt;User datagram protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cs.bu.edu/~jappavoo/jappavoo.github.com/451/papers/memcache-fb.pdf" rel="nofollow"&gt;Scaling memcache at Facebook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-remote-procedure-call-rpc" class="anchor" aria-hidden="true" href="#remote-procedure-call-rpc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Remote procedure call (RPC)&lt;/h3&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1a3d7771c0b0a7816d0533fffeb6eeeb442d9945/687474703a2f2f692e696d6775722e636f6d2f6946344d6b62352e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/1a3d7771c0b0a7816d0533fffeb6eeeb442d9945/687474703a2f2f692e696d6775722e636f6d2f6946344d6b62352e706e67" data-canonical-src="http://i.imgur.com/iF4Mkb5.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview" rel="nofollow"&gt;Source: Crack the system design interview&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;In an RPC, a client causes a procedure to execute on a different address space, usually a remote server.  The procedure is coded as if it were a local procedure call, abstracting away the details of how to communicate with the server from the client program.  Remote calls are usually slower and less reliable than local calls so it is helpful to distinguish RPC calls from local calls.  Popular RPC frameworks include &lt;a href="https://developers.google.com/protocol-buffers/" rel="nofollow"&gt;Protobuf&lt;/a&gt;, &lt;a href="https://thrift.apache.org/" rel="nofollow"&gt;Thrift&lt;/a&gt;, and &lt;a href="https://avro.apache.org/docs/current/" rel="nofollow"&gt;Avro&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;RPC is a request-response protocol:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Client program&lt;/strong&gt; - Calls the client stub procedure.  The parameters are pushed onto the stack like a local procedure call.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Client stub procedure&lt;/strong&gt; - Marshals (packs) procedure id and arguments into a request message.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Client communication module&lt;/strong&gt; - OS sends the message from the client to the server.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Server communication module&lt;/strong&gt; - OS passes the incoming packets to the server stub procedure.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Server stub procedure&lt;/strong&gt; -  Unmarshalls the results, calls the server procedure matching the procedure id and passes the given arguments.&lt;/li&gt;
&lt;li&gt;The server response repeats the steps above in reverse order.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sample RPC calls:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;GET /someoperation?data=anId

POST /anotheroperation
{
  "data":"anId";
  "anotherdata": "another value"
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;RPC is focused on exposing behaviors.  RPCs are often used for performance reasons with internal communications, as you can hand-craft native calls to better fit your use cases.&lt;/p&gt;
&lt;p&gt;Choose a native library (aka SDK) when:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You know your target platform.&lt;/li&gt;
&lt;li&gt;You want to control how your "logic" is accessed.&lt;/li&gt;
&lt;li&gt;You want to control how error control happens off your library.&lt;/li&gt;
&lt;li&gt;Performance and end user experience is your primary concern.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;HTTP APIs following &lt;strong&gt;REST&lt;/strong&gt; tend to be used more often for public APIs.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-disadvantages-rpc" class="anchor" aria-hidden="true" href="#disadvantages-rpc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): RPC&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;RPC clients become tightly coupled to the service implementation.&lt;/li&gt;
&lt;li&gt;A new API must be defined for every new operation or use case.&lt;/li&gt;
&lt;li&gt;It can be difficult to debug RPC.&lt;/li&gt;
&lt;li&gt;You might not be able to leverage existing technologies out of the box.  For example, it might require additional effort to ensure &lt;a href="http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/" rel="nofollow"&gt;RPC calls are properly cached&lt;/a&gt; on caching servers such as &lt;a href="http://www.squid-cache.org/" rel="nofollow"&gt;Squid&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-representational-state-transfer-rest" class="anchor" aria-hidden="true" href="#representational-state-transfer-rest"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Representational state transfer (REST)&lt;/h3&gt;
&lt;p&gt;REST is an architectural style enforcing a client/server model where the client acts on a set of resources managed by the server.  The server provides a representation of resources and actions that can either manipulate or get a new representation of resources.  All communication must be stateless and cacheable.&lt;/p&gt;
&lt;p&gt;There are four qualities of a RESTful interface:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Identify resources (URI in HTTP)&lt;/strong&gt; - use the same URI regardless of any operation.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Change with representations (Verbs in HTTP)&lt;/strong&gt; - use verbs, headers, and body.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Self-descriptive error message (status response in HTTP)&lt;/strong&gt; - Use status codes, don't reinvent the wheel.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://restcookbook.com/Basics/hateoas/" rel="nofollow"&gt;HATEOAS&lt;/a&gt; (HTML interface for HTTP)&lt;/strong&gt; - your web service should be fully accessible in a browser.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sample REST calls:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;GET /someresources/anId

PUT /someresources/anId
{"anotherdata": "another value"}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;REST is focused on exposing data.  It minimizes the coupling between client/server and is often used for public HTTP APIs.  REST uses a more generic and uniform method of exposing resources through URIs, &lt;a href="https://github.com/for-GET/know-your-http-well/blob/master/headers.md"&gt;representation through headers&lt;/a&gt;, and actions through verbs such as GET, POST, PUT, DELETE, and PATCH.  Being stateless, REST is great for horizontal scaling and partitioning.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-disadvantages-rest" class="anchor" aria-hidden="true" href="#disadvantages-rest"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantage(s): REST&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;With REST being focused on exposing data, it might not be a good fit if resources are not naturally organized or accessed in a simple hierarchy.  For example, returning all updated records from the past hour matching a particular set of events is not easily expressed as a path.  With REST, it is likely to be implemented with a combination of URI path, query parameters, and possibly the request body.&lt;/li&gt;
&lt;li&gt;REST typically relies on a few verbs (GET, POST, PUT, DELETE, and PATCH) which sometimes doesn't fit your use case.  For example, moving expired documents to the archive folder might not cleanly fit within these verbs.&lt;/li&gt;
&lt;li&gt;Fetching complicated resources with nested hierarchies requires multiple round trips between the client and server to render single views, e.g. fetching content of a blog entry and the comments on that entry. For mobile applications operating in variable network conditions, these multiple roundtrips are highly undesirable.&lt;/li&gt;
&lt;li&gt;Over time, more fields might be added to an API response and older clients will receive all new data fields, even those that they do not need, as a result, it bloats the payload size and leads to larger latencies.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-rpc-and-rest-calls-comparison" class="anchor" aria-hidden="true" href="#rpc-and-rest-calls-comparison"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RPC and REST calls comparison&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operation&lt;/th&gt;
&lt;th&gt;RPC&lt;/th&gt;
&lt;th&gt;REST&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Signup&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /signup&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /persons&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Resign&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /resign&lt;br&gt;{&lt;br&gt;"personid": "1234"&lt;br&gt;}&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;DELETE&lt;/strong&gt; /persons/1234&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Read a person&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;GET&lt;/strong&gt; /readPerson?personid=1234&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;GET&lt;/strong&gt; /persons/1234&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Read a person’s items list&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;GET&lt;/strong&gt; /readUsersItemsList?personid=1234&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;GET&lt;/strong&gt; /persons/1234/items&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Add an item to a person’s items&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /addItemToUsersItemsList&lt;br&gt;{&lt;br&gt;"personid": "1234";&lt;br&gt;"itemid": "456"&lt;br&gt;}&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /persons/1234/items&lt;br&gt;{&lt;br&gt;"itemid": "456"&lt;br&gt;}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Update an item&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /modifyItem&lt;br&gt;{&lt;br&gt;"itemid": "456";&lt;br&gt;"key": "value"&lt;br&gt;}&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;PUT&lt;/strong&gt; /items/456&lt;br&gt;{&lt;br&gt;"key": "value"&lt;br&gt;}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Delete an item&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;POST&lt;/strong&gt; /removeItem&lt;br&gt;{&lt;br&gt;"itemid": "456"&lt;br&gt;}&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;DELETE&lt;/strong&gt; /items/456&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p align="center"&gt;
  &lt;i&gt;&lt;a href="https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/" rel="nofollow"&gt;Source: Do you really know why you prefer REST over RPC&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-sources-and-further-reading-rest-and-rpc" class="anchor" aria-hidden="true" href="#sources-and-further-reading-rest-and-rpc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading: REST and RPC&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/" rel="nofollow"&gt;Do you really know why you prefer REST over RPC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://programmers.stackexchange.com/a/181186" rel="nofollow"&gt;When are RPC-ish approaches more appropriate than REST?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/15056878/rest-vs-json-rpc" rel="nofollow"&gt;REST vs JSON-RPC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/" rel="nofollow"&gt;Debunking the myths of RPC and REST&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.quora.com/What-are-the-drawbacks-of-using-RESTful-APIs" rel="nofollow"&gt;What are the drawbacks of using REST&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview" rel="nofollow"&gt;Crack the system design interview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.facebook.com/posts/1468950976659943/" rel="nofollow"&gt;Thrift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://arstechnica.com/civis/viewtopic.php?t=1190508" rel="nofollow"&gt;Why REST for internal use and not RPC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-security" class="anchor" aria-hidden="true" href="#security"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security&lt;/h2&gt;
&lt;p&gt;This section could use some updates.  Consider &lt;a href="#contributing"&gt;contributing&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Security is a broad topic.  Unless you have considerable experience, a security background, or are applying for a position that requires knowledge of security, you probably won't need to know more than the basics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Encrypt in transit and at rest.&lt;/li&gt;
&lt;li&gt;Sanitize all user inputs or any input parameters exposed to user to prevent &lt;a href="https://en.wikipedia.org/wiki/Cross-site_scripting" rel="nofollow"&gt;XSS&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/SQL_injection" rel="nofollow"&gt;SQL injection&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Use parameterized queries to prevent SQL injection.&lt;/li&gt;
&lt;li&gt;Use the principle of &lt;a href="https://en.wikipedia.org/wiki/Principle_of_least_privilege" rel="nofollow"&gt;least privilege&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sources-and-further-reading-12" class="anchor" aria-hidden="true" href="#sources-and-further-reading-12"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/shieldfy/API-Security-Checklist"&gt;API security checklist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FallibleInc/security-guide-for-developers"&gt;Security guide for developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.owasp.org/index.php/OWASP_Top_Ten_Cheat_Sheet" rel="nofollow"&gt;OWASP top ten&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-appendix" class="anchor" aria-hidden="true" href="#appendix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Appendix&lt;/h2&gt;
&lt;p&gt;You'll sometimes be asked to do 'back-of-the-envelope' estimates.  For example, you might need to determine how long it will take to generate 100 image thumbnails from disk or how much memory a data structure will take.  The &lt;strong&gt;Powers of two table&lt;/strong&gt; and &lt;strong&gt;Latency numbers every programmer should know&lt;/strong&gt; are handy references.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-powers-of-two-table" class="anchor" aria-hidden="true" href="#powers-of-two-table"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Powers of two table&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Power           Exact Value         Approx Value        Bytes
---------------------------------------------------------------
7                             128
8                             256
10                           1024   1 thousand           1 KB
16                         65,536                       64 KB
20                      1,048,576   1 million            1 MB
30                  1,073,741,824   1 billion            1 GB
32                  4,294,967,296                        4 GB
40              1,099,511,627,776   1 trillion           1 TB
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-sources-and-further-reading-13" class="anchor" aria-hidden="true" href="#sources-and-further-reading-13"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Power_of_two" rel="nofollow"&gt;Powers of two&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-latency-numbers-every-programmer-should-know" class="anchor" aria-hidden="true" href="#latency-numbers-every-programmer-should-know"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Latency numbers every programmer should know&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Latency Comparison Numbers
--------------------------
L1 cache reference                           0.5 ns
Branch mispredict                            5   ns
L2 cache reference                           7   ns                      14x L1 cache
Mutex lock/unlock                           25   ns
Main memory reference                      100   ns                      20x L2 cache, 200x L1 cache
Compress 1K bytes with Zippy            10,000   ns       10 us
Send 1 KB bytes over 1 Gbps network     10,000   ns       10 us
Read 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSD
Read 1 MB sequentially from memory     250,000   ns      250 us
Round trip within same datacenter      500,000   ns      500 us
Read 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memory
Disk seek                           10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip
Read 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSD
Read 1 MB sequentially from disk    30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSD
Send packet CA-&amp;gt;Netherlands-&amp;gt;CA    150,000,000   ns  150,000 us  150 ms

Notes
-----
1 ns = 10^-9 seconds
1 us = 10^-6 seconds = 1,000 ns
1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Handy metrics based on numbers above:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read sequentially from disk at 30 MB/s&lt;/li&gt;
&lt;li&gt;Read sequentially from 1 Gbps Ethernet at 100 MB/s&lt;/li&gt;
&lt;li&gt;Read sequentially from SSD at 1 GB/s&lt;/li&gt;
&lt;li&gt;Read sequentially from main memory at 4 GB/s&lt;/li&gt;
&lt;li&gt;6-7 world-wide round trips per second&lt;/li&gt;
&lt;li&gt;2,000 round trips per second within a data center&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-latency-numbers-visualized" class="anchor" aria-hidden="true" href="#latency-numbers-visualized"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Latency numbers visualized&lt;/h4&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/77f72259e1eb58596b564d1ad823af1853bc60a3/687474703a2f2f692e696d6775722e636f6d2f6b307431652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/77f72259e1eb58596b564d1ad823af1853bc60a3/687474703a2f2f692e696d6775722e636f6d2f6b307431652e706e67" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-sources-and-further-reading-14" class="anchor" aria-hidden="true" href="#sources-and-further-reading-14"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/jboner/2841832"&gt;Latency numbers every programmer should know - 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/hellerbarde/2843375"&gt;Latency numbers every programmer should know - 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cs.cornell.edu/projects/ladis2009/talks/dean-keynote-ladis2009.pdf" rel="nofollow"&gt;Designs, lessons, and advice from building large distributed systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://static.googleusercontent.com/media/research.google.com/en//people/jeff/stanford-295-talk.pdf" rel="nofollow"&gt;Software Engineering Advice from Building Large-Scale Distributed Systems&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-additional-system-design-interview-questions" class="anchor" aria-hidden="true" href="#additional-system-design-interview-questions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional system design interview questions&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Common system design interview questions, with links to resources on how to solve each.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Question&lt;/th&gt;
&lt;th&gt;Reference(s)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Design a file sync service like Dropbox&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=PE4gwstWhmc" rel="nofollow"&gt;youtube.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a search engine like Google&lt;/td&gt;
&lt;td&gt;&lt;a href="http://queue.acm.org/detail.cfm?id=988407" rel="nofollow"&gt;queue.acm.org&lt;/a&gt;&lt;br&gt;&lt;a href="http://programmers.stackexchange.com/questions/38324/interview-question-how-would-you-implement-google-search" rel="nofollow"&gt;stackexchange.com&lt;/a&gt;&lt;br&gt;&lt;a href="http://www.ardendertat.com/2012/01/11/implementing-search-engines/" rel="nofollow"&gt;ardendertat.com&lt;/a&gt;&lt;br&gt;&lt;a href="http://infolab.stanford.edu/~backrub/google.html" rel="nofollow"&gt;stanford.edu&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a scalable web crawler like Google&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.quora.com/How-can-I-build-a-web-crawler-from-scratch" rel="nofollow"&gt;quora.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design Google docs&lt;/td&gt;
&lt;td&gt;&lt;a href="https://code.google.com/p/google-mobwrite/" rel="nofollow"&gt;code.google.com&lt;/a&gt;&lt;br&gt;&lt;a href="https://neil.fraser.name/writing/sync/" rel="nofollow"&gt;neil.fraser.name&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a key-value store like Redis&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.slideshare.net/dvirsky/introduction-to-redis" rel="nofollow"&gt;slideshare.net&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a cache system like Memcached&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.slideshare.net/oemebamo/introduction-to-memcached" rel="nofollow"&gt;slideshare.net&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a recommendation system like Amazon's&lt;/td&gt;
&lt;td&gt;&lt;a href="https://web.archive.org/web/20170406065247/http://tech.hulu.com/blog/2011/09/19/recommendation-system.html" rel="nofollow"&gt;hulu.com&lt;/a&gt;&lt;br&gt;&lt;a href="http://ijcai13.org/files/tutorial_slides/td3.pdf" rel="nofollow"&gt;ijcai13.org&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a tinyurl system like Bitly&lt;/td&gt;
&lt;td&gt;&lt;a href="http://n00tc0d3r.blogspot.com/" rel="nofollow"&gt;n00tc0d3r.blogspot.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a chat app like WhatsApp&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html" rel="nofollow"&gt;highscalability.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a picture sharing system like Instagram&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/flickr-architecture" rel="nofollow"&gt;highscalability.com&lt;/a&gt;&lt;br&gt;&lt;a href="http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html" rel="nofollow"&gt;highscalability.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design the Facebook news feed function&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.quora.com/What-are-best-practices-for-building-something-like-a-News-Feed" rel="nofollow"&gt;quora.com&lt;/a&gt;&lt;br&gt;&lt;a href="http://www.quora.com/Activity-Streams/What-are-the-scaling-issues-to-keep-in-mind-while-developing-a-social-network-feed" rel="nofollow"&gt;quora.com&lt;/a&gt;&lt;br&gt;&lt;a href="http://www.slideshare.net/danmckinley/etsy-activity-feeds-architecture" rel="nofollow"&gt;slideshare.net&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design the Facebook timeline function&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.facebook.com/note.php?note_id=10150468255628920" rel="nofollow"&gt;facebook.com&lt;/a&gt;&lt;br&gt;&lt;a href="http://highscalability.com/blog/2012/1/23/facebook-timeline-brought-to-you-by-the-power-of-denormaliza.html" rel="nofollow"&gt;highscalability.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design the Facebook chat function&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.erlang-factory.com/upload/presentations/31/EugeneLetuchy-ErlangatFacebook.pdf" rel="nofollow"&gt;erlang-factory.com&lt;/a&gt;&lt;br&gt;&lt;a href="https://www.facebook.com/note.php?note_id=14218138919&amp;amp;id=9445547199&amp;amp;index=0" rel="nofollow"&gt;facebook.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a graph search function like Facebook's&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.facebook.com/notes/facebook-engineering/under-the-hood-building-out-the-infrastructure-for-graph-search/10151347573598920" rel="nofollow"&gt;facebook.com&lt;/a&gt;&lt;br&gt;&lt;a href="https://www.facebook.com/notes/facebook-engineering/under-the-hood-indexing-and-ranking-in-graph-search/10151361720763920" rel="nofollow"&gt;facebook.com&lt;/a&gt;&lt;br&gt;&lt;a href="https://www.facebook.com/notes/facebook-engineering/under-the-hood-the-natural-language-interface-of-graph-search/10151432733048920" rel="nofollow"&gt;facebook.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a content delivery network like CloudFlare&lt;/td&gt;
&lt;td&gt;&lt;a href="https://figshare.com/articles/Globally_distributed_content_delivery/6605972" rel="nofollow"&gt;figshare.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a trending topic system like Twitter's&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.michael-noll.com/blog/2013/01/18/implementing-real-time-trending-topics-in-storm/" rel="nofollow"&gt;michael-noll.com&lt;/a&gt;&lt;br&gt;&lt;a href="http://snikolov.wordpress.com/2012/11/14/early-detection-of-twitter-trends/" rel="nofollow"&gt;snikolov .wordpress.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a random ID generation system&lt;/td&gt;
&lt;td&gt;&lt;a href="https://blog.twitter.com/2010/announcing-snowflake" rel="nofollow"&gt;blog.twitter.com&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/twitter/snowflake/"&gt;github.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Return the top k requests during a time interval&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.cs.ucsb.edu/sites/cs.ucsb.edu/files/docs/reports/2005-23.pdf" rel="nofollow"&gt;cs.ucsb.edu&lt;/a&gt;&lt;br&gt;&lt;a href="http://davis.wpi.edu/xmdv/docs/EDBT11-diyang.pdf" rel="nofollow"&gt;wpi.edu&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a system that serves data from multiple data centers&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2009/8/24/how-google-serves-data-from-multiple-datacenters.html" rel="nofollow"&gt;highscalability.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design an online multiplayer card game&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.indieflashblog.com/how-to-create-an-asynchronous-multiplayer-game.html" rel="nofollow"&gt;indieflashblog.com&lt;/a&gt;&lt;br&gt;&lt;a href="http://buildnewgames.com/real-time-multiplayer/" rel="nofollow"&gt;buildnewgames.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design a garbage collection system&lt;/td&gt;
&lt;td&gt;&lt;a href="http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/" rel="nofollow"&gt;stuffwithstuff.com&lt;/a&gt;&lt;br&gt;&lt;a href="http://courses.cs.washington.edu/courses/csep521/07wi/prj/rick.pdf" rel="nofollow"&gt;washington.edu&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Design an API rate limiter&lt;/td&gt;
&lt;td&gt;&lt;a href="https://stripe.com/blog/rate-limiters" rel="nofollow"&gt;https://stripe.com/blog/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Add a system design question&lt;/td&gt;
&lt;td&gt;&lt;a href="#contributing"&gt;Contribute&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-real-world-architectures" class="anchor" aria-hidden="true" href="#real-world-architectures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Real world architectures&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Articles on how real world systems are designed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b7c71be73fb466344c2d773178ae74e3fbb1dcc6/687474703a2f2f692e696d6775722e636f6d2f5463556f3266772e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/b7c71be73fb466344c2d773178ae74e3fbb1dcc6/687474703a2f2f692e696d6775722e636f6d2f5463556f3266772e706e67" data-canonical-src="http://i.imgur.com/TcUo2fw.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;
  &lt;i&gt;&lt;a href="https://www.infoq.com/presentations/Twitter-Timeline-Scalability" rel="nofollow"&gt;Source: Twitter timelines at scale&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Don't focus on nitty gritty details for the following articles, instead:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Identify shared principles, common technologies, and patterns within these articles&lt;/li&gt;
&lt;li&gt;Study what problems are solved by each component, where it works, where it doesn't&lt;/li&gt;
&lt;li&gt;Review the lessons learned&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;System&lt;/th&gt;
&lt;th&gt;Reference(s)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Data processing&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;MapReduce&lt;/strong&gt; - Distributed data processing from Google&lt;/td&gt;
&lt;td&gt;&lt;a href="http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/mapreduce-osdi04.pdf" rel="nofollow"&gt;research.google.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data processing&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Spark&lt;/strong&gt; - Distributed data processing from Databricks&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.slideshare.net/AGrishchenko/apache-spark-architecture" rel="nofollow"&gt;slideshare.net&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data processing&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Storm&lt;/strong&gt; - Distributed data processing from Twitter&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.slideshare.net/previa/storm-16094009" rel="nofollow"&gt;slideshare.net&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data store&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Bigtable&lt;/strong&gt; - Distributed column-oriented database from Google&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf" rel="nofollow"&gt;harvard.edu&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data store&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;HBase&lt;/strong&gt; - Open source implementation of Bigtable&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.slideshare.net/alexbaranau/intro-to-hbase" rel="nofollow"&gt;slideshare.net&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data store&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Cassandra&lt;/strong&gt; - Distributed column-oriented database from Facebook&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.slideshare.net/planetcassandra/cassandra-introduction-features-30103666" rel="nofollow"&gt;slideshare.net&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data store&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;DynamoDB&lt;/strong&gt; - Document-oriented database from Amazon&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf" rel="nofollow"&gt;harvard.edu&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data store&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;MongoDB&lt;/strong&gt; - Document-oriented database&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.slideshare.net/mdirolf/introduction-to-mongodb" rel="nofollow"&gt;slideshare.net&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data store&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Spanner&lt;/strong&gt; - Globally-distributed database from Google&lt;/td&gt;
&lt;td&gt;&lt;a href="http://research.google.com/archive/spanner-osdi2012.pdf" rel="nofollow"&gt;research.google.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data store&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Memcached&lt;/strong&gt; - Distributed memory caching system&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.slideshare.net/oemebamo/introduction-to-memcached" rel="nofollow"&gt;slideshare.net&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data store&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Redis&lt;/strong&gt; - Distributed memory caching system with persistence and value types&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.slideshare.net/dvirsky/introduction-to-redis" rel="nofollow"&gt;slideshare.net&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;File system&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Google File System (GFS)&lt;/strong&gt; - Distributed file system&lt;/td&gt;
&lt;td&gt;&lt;a href="http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/gfs-sosp2003.pdf" rel="nofollow"&gt;research.google.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;File system&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Hadoop File System (HDFS)&lt;/strong&gt; - Open source implementation of GFS&lt;/td&gt;
&lt;td&gt;&lt;a href="http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html" rel="nofollow"&gt;apache.org&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Misc&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Chubby&lt;/strong&gt; - Lock service for loosely-coupled distributed systems from Google&lt;/td&gt;
&lt;td&gt;&lt;a href="http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en/us/archive/chubby-osdi06.pdf" rel="nofollow"&gt;research.google.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Misc&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Dapper&lt;/strong&gt; - Distributed systems tracing infrastructure&lt;/td&gt;
&lt;td&gt;&lt;a href="http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/36356.pdf" rel="nofollow"&gt;research.google.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Misc&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Kafka&lt;/strong&gt; - Pub/sub message queue from LinkedIn&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.slideshare.net/mumrah/kafka-talk-tri-hug" rel="nofollow"&gt;slideshare.net&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Misc&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Zookeeper&lt;/strong&gt; - Centralized infrastructure and services enabling synchronization&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper" rel="nofollow"&gt;slideshare.net&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Add an architecture&lt;/td&gt;
&lt;td&gt;&lt;a href="#contributing"&gt;Contribute&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-company-architectures" class="anchor" aria-hidden="true" href="#company-architectures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Company architectures&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Company&lt;/th&gt;
&lt;th&gt;Reference(s)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Amazon&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/amazon-architecture" rel="nofollow"&gt;Amazon architecture&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cinchcast&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2012/7/16/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html" rel="nofollow"&gt;Producing 1,500 hours of audio every day&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DataSift&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2011/11/29/datasift-architecture-realtime-datamining-at-120000-tweets-p.html" rel="nofollow"&gt;Realtime datamining At 120,000 tweets per second&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DropBox&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=PE4gwstWhmc" rel="nofollow"&gt;How we've scaled Dropbox&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ESPN&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html" rel="nofollow"&gt;Operating At 100,000 duh nuh nuhs per second&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Google&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/google-architecture" rel="nofollow"&gt;Google architecture&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Instagram&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html" rel="nofollow"&gt;14 million users, terabytes of photos&lt;/a&gt;&lt;br&gt;&lt;a href="http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances" rel="nofollow"&gt;What powers Instagram&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Justin.tv&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html" rel="nofollow"&gt;Justin.Tv's live video broadcasting architecture&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Facebook&lt;/td&gt;
&lt;td&gt;&lt;a href="https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/key-value/fb-memcached-nsdi-2013.pdf" rel="nofollow"&gt;Scaling memcached at Facebook&lt;/a&gt;&lt;br&gt;&lt;a href="https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/data-store/tao-facebook-distributed-datastore-atc-2013.pdf" rel="nofollow"&gt;TAO: Facebook’s distributed data store for the social graph&lt;/a&gt;&lt;br&gt;&lt;a href="https://www.usenix.org/legacy/event/osdi10/tech/full_papers/Beaver.pdf" rel="nofollow"&gt;Facebook’s photo storage&lt;/a&gt;&lt;br&gt;&lt;a href="http://highscalability.com/blog/2016/6/27/how-facebook-live-streams-to-800000-simultaneous-viewers.html" rel="nofollow"&gt;How Facebook Live Streams To 800,000 Simultaneous Viewers&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Flickr&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/flickr-architecture" rel="nofollow"&gt;Flickr architecture&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mailbox&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2013/6/18/scaling-mailbox-from-0-to-one-million-users-in-6-weeks-and-1.html" rel="nofollow"&gt;From 0 to one million users in 6 weeks&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Netflix&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2015/11/9/a-360-degree-view-of-the-entire-netflix-stack.html" rel="nofollow"&gt;A 360 Degree View Of The Entire Netflix Stack&lt;/a&gt;&lt;br&gt;&lt;a href="http://highscalability.com/blog/2017/12/11/netflix-what-happens-when-you-press-play.html" rel="nofollow"&gt;Netflix: What Happens When You Press Play?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Pinterest&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2013/4/15/scaling-pinterest-from-0-to-10s-of-billions-of-page-views-a.html" rel="nofollow"&gt;From 0 To 10s of billions of page views a month&lt;/a&gt;&lt;br&gt;&lt;a href="http://highscalability.com/blog/2012/5/21/pinterest-architecture-update-18-million-visitors-10x-growth.html" rel="nofollow"&gt;18 million visitors, 10x growth, 12 employees&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Playfish&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2010/9/21/playfishs-social-gaming-architecture-50-million-monthly-user.html" rel="nofollow"&gt;50 million monthly users and growing&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PlentyOfFish&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/plentyoffish-architecture" rel="nofollow"&gt;PlentyOfFish architecture&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Salesforce&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html" rel="nofollow"&gt;How they handle 1.3 billion transactions a day&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Stack Overflow&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2009/8/5/stack-overflow-architecture.html" rel="nofollow"&gt;Stack Overflow architecture&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TripAdvisor&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2011/6/27/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html" rel="nofollow"&gt;40M visitors, 200M dynamic page views, 30TB data&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Tumblr&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2012/2/13/tumblr-architecture-15-billion-page-views-a-month-and-harder.html" rel="nofollow"&gt;15 billion page views a month&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Twitter&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/scaling-twitter-making-twitter-10000-percent-faster" rel="nofollow"&gt;Making Twitter 10000 percent faster&lt;/a&gt;&lt;br&gt;&lt;a href="http://highscalability.com/blog/2011/12/19/how-twitter-stores-250-million-tweets-a-day-using-mysql.html" rel="nofollow"&gt;Storing 250 million tweets a day using MySQL&lt;/a&gt;&lt;br&gt;&lt;a href="http://highscalability.com/blog/2013/7/8/the-architecture-twitter-uses-to-deal-with-150m-active-users.html" rel="nofollow"&gt;150M active users, 300K QPS, a 22 MB/S firehose&lt;/a&gt;&lt;br&gt;&lt;a href="https://www.infoq.com/presentations/Twitter-Timeline-Scalability" rel="nofollow"&gt;Timelines at scale&lt;/a&gt;&lt;br&gt;&lt;a href="https://www.youtube.com/watch?v=5cKTP36HVgI" rel="nofollow"&gt;Big and small data at Twitter&lt;/a&gt;&lt;br&gt;&lt;a href="https://www.youtube.com/watch?v=z8LU0Cj6BOU" rel="nofollow"&gt;Operations at Twitter: scaling beyond 100 million users&lt;/a&gt;&lt;br&gt;&lt;a href="http://highscalability.com/blog/2016/4/20/how-twitter-handles-3000-images-per-second.html" rel="nofollow"&gt;How Twitter Handles 3,000 Images Per Second&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Uber&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2015/9/14/how-uber-scales-their-real-time-market-platform.html" rel="nofollow"&gt;How Uber scales their real-time market platform&lt;/a&gt;&lt;br&gt;&lt;a href="http://highscalability.com/blog/2016/10/12/lessons-learned-from-scaling-uber-to-2000-engineers-1000-ser.html" rel="nofollow"&gt;Lessons Learned From Scaling Uber To 2000 Engineers, 1000 Services, And 8000 Git Repositories&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WhatsApp&lt;/td&gt;
&lt;td&gt;&lt;a href="http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html" rel="nofollow"&gt;The WhatsApp architecture Facebook bought for $19 billion&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;YouTube&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=w5WVu624fY8" rel="nofollow"&gt;YouTube scalability&lt;/a&gt;&lt;br&gt;&lt;a href="http://highscalability.com/youtube-architecture" rel="nofollow"&gt;YouTube architecture&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-company-engineering-blogs" class="anchor" aria-hidden="true" href="#company-engineering-blogs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Company engineering blogs&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Architectures for companies you are interviewing with.&lt;/p&gt;
&lt;p&gt;Questions you encounter might be from the same domain.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nerds.airbnb.com/" rel="nofollow"&gt;Airbnb Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.atlassian.com/blog/" rel="nofollow"&gt;Atlassian Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/blogs/aws/" rel="nofollow"&gt;AWS Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://word.bitly.com/" rel="nofollow"&gt;Bitly Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.box.com/blog/category/engineering" rel="nofollow"&gt;Box Blogs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.cloudera.com/" rel="nofollow"&gt;Cloudera Developer Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tech.dropbox.com/" rel="nofollow"&gt;Dropbox Tech Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://engineering.quora.com/" rel="nofollow"&gt;Engineering at Quora&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.ebaytechblog.com/" rel="nofollow"&gt;Ebay Tech Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.evernote.com/tech/" rel="nofollow"&gt;Evernote Tech Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://codeascraft.com/" rel="nofollow"&gt;Etsy Code as Craft&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/Engineering" rel="nofollow"&gt;Facebook Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://code.flickr.net/" rel="nofollow"&gt;Flickr Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://engineering.foursquare.com/" rel="nofollow"&gt;Foursquare Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://githubengineering.com/" rel="nofollow"&gt;GitHub Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://googleresearch.blogspot.com/" rel="nofollow"&gt;Google Research Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://engineering.groupon.com/" rel="nofollow"&gt;Groupon Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://engineering.heroku.com/" rel="nofollow"&gt;Heroku Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://product.hubspot.com/blog/topic/engineering" rel="nofollow"&gt;Hubspot Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://highscalability.com/" rel="nofollow"&gt;High Scalability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://instagram-engineering.tumblr.com/" rel="nofollow"&gt;Instagram Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://software.intel.com/en-us/blogs/" rel="nofollow"&gt;Intel Software Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blogs.janestreet.com/category/ocaml/" rel="nofollow"&gt;Jane Street Tech Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://engineering.linkedin.com/blog" rel="nofollow"&gt;LinkedIn Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://engineering.microsoft.com/" rel="nofollow"&gt;Microsoft Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blogs.msdn.microsoft.com/pythonengineering/" rel="nofollow"&gt;Microsoft Python Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://techblog.netflix.com/" rel="nofollow"&gt;Netflix Tech Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devblog.paypal.com/category/engineering/" rel="nofollow"&gt;Paypal Developer Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@Pinterest_Engineering" rel="nofollow"&gt;Pinterest Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://engineering.quora.com/" rel="nofollow"&gt;Quora Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.redditblog.com/" rel="nofollow"&gt;Reddit Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.salesforce.com/blogs/engineering/" rel="nofollow"&gt;Salesforce Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://slack.engineering/" rel="nofollow"&gt;Slack Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://labs.spotify.com/" rel="nofollow"&gt;Spotify Labs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.twilio.com/engineering" rel="nofollow"&gt;Twilio Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.twitter.com/engineering/" rel="nofollow"&gt;Twitter Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://eng.uber.com/" rel="nofollow"&gt;Uber Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://yahooeng.tumblr.com/" rel="nofollow"&gt;Yahoo Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://engineeringblog.yelp.com/" rel="nofollow"&gt;Yelp Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.zynga.com/blogs/engineering" rel="nofollow"&gt;Zynga Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-sources-and-further-reading-15" class="anchor" aria-hidden="true" href="#sources-and-further-reading-15"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source(s) and further reading&lt;/h4&gt;
&lt;p&gt;Looking to add a blog?  To avoid duplicating work, consider adding your company blog to the following repo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kilimchoi/engineering-blogs"&gt;kilimchoi/engineering-blogs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-under-development" class="anchor" aria-hidden="true" href="#under-development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Under development&lt;/h2&gt;
&lt;p&gt;Interested in adding a section or helping complete one in-progress?  &lt;a href="#contributing"&gt;Contribute&lt;/a&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Distributed computing with MapReduce&lt;/li&gt;
&lt;li&gt;Consistent hashing&lt;/li&gt;
&lt;li&gt;Scatter gather&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contribute&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;Credits and sources are provided throughout this repo.&lt;/p&gt;
&lt;p&gt;Special thanks to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.hiredintech.com/system-design/the-system-design-process/" rel="nofollow"&gt;Hired in tech&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/dp/0984782850/" rel="nofollow"&gt;Cracking the coding interview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://highscalability.com/" rel="nofollow"&gt;High scalability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/checkcheckzz/system-design-interview"&gt;checkcheckzz/system-design-interview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shashank88/system_design"&gt;shashank88/system_design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mmcgrana/services-engineering"&gt;mmcgrana/services-engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/vasanthk/485d1c25737e8e72759f"&gt;System design cheat sheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dancres.github.io/Pages/" rel="nofollow"&gt;A distributed systems reading list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview" rel="nofollow"&gt;Cracking the system design interview&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contact-info" class="anchor" aria-hidden="true" href="#contact-info"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact info&lt;/h2&gt;
&lt;p&gt;Feel free to contact me to discuss any issues, questions, or comments.&lt;/p&gt;
&lt;p&gt;My contact info can be found on my &lt;a href="https://github.com/donnemartin"&gt;GitHub page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;I am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Copyright 2017 Donne Martin

Creative Commons Attribution 4.0 International License (CC BY 4.0)

http://creativecommons.org/licenses/by/4.0/
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>donnemartin</author><guid isPermaLink="false">https://github.com/donnemartin/system-design-primer</guid><pubDate>Tue, 19 Nov 2019 00:22:00 GMT</pubDate></item><item><title>foxlet/macOS-Simple-KVM #23 in All Languages, This week</title><link>https://github.com/foxlet/macOS-Simple-KVM</link><description>&lt;p&gt;&lt;i&gt;Tools to set up a quick macOS VM in QEMU, accelerated by KVM.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-macos-simple-kvm" class="anchor" aria-hidden="true" href="#macos-simple-kvm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macOS-Simple-KVM&lt;/h1&gt;
&lt;p&gt;Documentation to set up a simple macOS VM in QEMU, accelerated by KVM.&lt;/p&gt;
&lt;p&gt;By &lt;a href="https://twitter.com/foxletfox" rel="nofollow"&gt;@FoxletFox&lt;/a&gt;, and the help of many others. Find this useful? You can donate &lt;a href="https://commerce.coinbase.com/checkout/96dc5777-0abf-437d-a9b5-a78ae2c4c227" rel="nofollow"&gt;on Coinbase&lt;/a&gt; or &lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=QFXXKKAB2B9MA&amp;amp;item_name=macOS-Simple-KVM" rel="nofollow"&gt;Paypal!&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;New to macOS and KVM? Check &lt;a href="docs/FAQs.md"&gt;the FAQs.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;You'll need a Linux system with &lt;code&gt;qemu&lt;/code&gt; (3.1 or later), &lt;code&gt;python3&lt;/code&gt;, &lt;code&gt;pip&lt;/code&gt; and the KVM modules enabled. A Mac is &lt;strong&gt;not&lt;/strong&gt; required. Some examples for different distributions:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install qemu-system qemu-utils python3 python3-pip  # for Ubuntu, Debian, Mint, and PopOS.
sudo pacman -S qemu python python-pip            # for Arch.
sudo xbps-install -Su qemu python3 python3-pip   # for Void Linux.
sudo zypper in qemu-tools qemu-kvm qemu-x86 qemu-audio-pa python3-pip  # for openSUSE Tumbleweed
sudo dnf install qemu qemu-img python3 python3-pip # for Fedora
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-step-1" class="anchor" aria-hidden="true" href="#step-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 1&lt;/h2&gt;
&lt;p&gt;Run &lt;code&gt;jumpstart.sh&lt;/code&gt; to download installation media for macOS (internet required). The default installation uses Catalina, but you can choose which version to get by adding either &lt;code&gt;--high-sierra&lt;/code&gt;, &lt;code&gt;--mojave&lt;/code&gt;, or &lt;code&gt;--catalina&lt;/code&gt;. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./jumpstart.sh --mojave
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: You can skip this if you already have &lt;code&gt;BaseSystem.img&lt;/code&gt; downloaded. If you have &lt;code&gt;BaseSystem.dmg&lt;/code&gt;, you will need to convert it with the &lt;code&gt;dmg2img&lt;/code&gt; tool.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-step-2" class="anchor" aria-hidden="true" href="#step-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 2&lt;/h2&gt;
&lt;p&gt;Create an empty hard disk using &lt;code&gt;qemu-img&lt;/code&gt;, changing the name and size to preference:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;qemu-img create -f qcow2 MyDisk.qcow2 64G
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and add it to the end of &lt;code&gt;basic.sh&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    -drive id=SystemDisk,if=none,file=MyDisk.qcow2 \
    -device ide-hd,bus=sata.4,drive=SystemDisk \
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: If you're running on a headless system (such as on Cloud providers), you will need &lt;code&gt;-nographic&lt;/code&gt; and &lt;code&gt;-vnc :0 -k en-us&lt;/code&gt; for VNC support.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Then run &lt;code&gt;basic.sh&lt;/code&gt; to start the machine and install macOS. Remember to partition in Disk Utility first!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-step-2a-virtual-machine-manager" class="anchor" aria-hidden="true" href="#step-2a-virtual-machine-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 2a (Virtual Machine Manager)&lt;/h2&gt;
&lt;p&gt;If instead of QEMU, you'd like to import the setup into Virt-Manager for further configuration, just run &lt;code&gt;sudo ./make.sh --add&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-step-2b-headless-systems" class="anchor" aria-hidden="true" href="#step-2b-headless-systems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 2b (Headless Systems)&lt;/h2&gt;
&lt;p&gt;If you're using a cloud-based/headless system, you can use &lt;code&gt;headless.sh&lt;/code&gt; to set up a quick VNC instance. Settings are defined through variables as seen in the following example. VNC will start on port &lt;code&gt;5900&lt;/code&gt; by default.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;HEADLESS=1 MEM=1G CPUS=2 SYSTEM_DISK=MyDisk.qcow2 ./headless.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-step-3" class="anchor" aria-hidden="true" href="#step-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Step 3&lt;/h2&gt;
&lt;p&gt;You're done!&lt;/p&gt;
&lt;p&gt;To fine-tune the system and improve performance, look in the &lt;code&gt;docs&lt;/code&gt; folder for more information on &lt;a href="docs/guide-performance.md"&gt;adding memory&lt;/a&gt;, setting up &lt;a href="docs/guide-networking.md"&gt;bridged networking&lt;/a&gt;, adding &lt;a href="docs/guide-passthrough.md"&gt;passthrough hardware (for GPUs)&lt;/a&gt;, tweaking &lt;a href="docs/guide-screen-resolution.md"&gt;screen resolution&lt;/a&gt;, and enabling sound features.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>foxlet</author><guid isPermaLink="false">https://github.com/foxlet/macOS-Simple-KVM</guid><pubDate>Tue, 19 Nov 2019 00:23:00 GMT</pubDate></item><item><title>apple/swift-numerics #24 in All Languages, This week</title><link>https://github.com/apple/swift-numerics</link><description>&lt;p&gt;&lt;i&gt;Numerical APIs for Swift&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-swift-numerics" class="anchor" aria-hidden="true" href="#swift-numerics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Numerics&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Swift Numerics provides a set of modules that support numerical computing in Swift.
These modules fall broadly into two categories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;API that is too specialized to go into the standard library, but which is sufficiently general to be centralized in a single common package.&lt;/li&gt;
&lt;li&gt;API that is under active development toward possible future inclusion in the standard library.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There is some overlap between these two categories, and API that begins in the first category may migrate to the second as it matures and new uses are discovered.&lt;/p&gt;
&lt;p&gt;Swift Numerics modules are fine-grained; if you need support for Complex numbers, you can import the Complex module without pulling in everything else in the library as well:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Complex&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; z &lt;span class="pl-k"&gt;=&lt;/span&gt; Complex&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Double&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;.&lt;span class="pl-smi"&gt;i&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, there is also a top-level &lt;code&gt;Numerics&lt;/code&gt; module that simply re-exports the complete public interface of swift-numerics:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Numerics&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; All swift-numerics API is now available&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Swift Numerics modules have minimal dependencies on other projects.
The current modules assume only the availability of the Swift and C standard libraries and the runtime support provided by compiler-rt.
Future expansion may assume the availability of other standard interfaces such as &lt;a href="https://en.wikipedia.org/wiki/Basic_Linear_Algebra_Subprograms" rel="nofollow"&gt;BLAS (Basic Linear Algebra Subprograms)&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/LAPACK" rel="nofollow"&gt;LAPACK (Linear Algebra Package)&lt;/a&gt;, but modules with more specialized dependencies (or dependencies that are not available on all platforms supported by Swift) belong in a separate package.&lt;/p&gt;
&lt;p&gt;Because we intend to make it possible to adopt Swift Numerics modules in the standard library at some future point, Swift Numerics uses the same license and contribution guidelines as the Swift project.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-process" class="anchor" aria-hidden="true" href="#process"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Process&lt;/h2&gt;
&lt;p&gt;Swift Numerics is a standalone library separate from the core Swift project.
In practice, it will act as a staging ground for some APIs that may eventually be incorporated into the Swift Standard Library, and when that happens such changes will be proposed to the Swift Standard Library using the established evolution process of the Swift project.&lt;/p&gt;
&lt;p&gt;Swift Numerics uses GitHub issues to track bugs and features. We use pull requests for development.&lt;/p&gt;
&lt;p&gt;To propose a new module:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Raise an issue with the [new module] tag.&lt;/li&gt;
&lt;li&gt;Raise a PR with an implementation sketch.&lt;/li&gt;
&lt;li&gt;Once you have some consensus, ask an admin to create a feature branch against which PRs can be raised.&lt;/li&gt;
&lt;li&gt;When the design has stabilized and is functional enough to be useful, raise a PR to merge the new module to master.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To propose a new feature for an existing module:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Raise an issue with the [enhancement] tag.&lt;/li&gt;
&lt;li&gt;Raise a PR with your implementation, and discuss the implementation there.&lt;/li&gt;
&lt;li&gt;Once there is a consensus that the new feature is desirable and the design is suitable, it can be merged.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To fix a bug, or make smaller improvements:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Raise a PR with your change. Be sure to add test coverage for whatever changes you are making.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Questions about how to use Swift Numerics modules, or issues that are not clearly bugs can be discussed in the &lt;a href="https://forums.swift.org/c/related-projects/swift-numerics" rel="nofollow"&gt;"Swift Numerics" section of the Swift forums.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-modules" class="anchor" aria-hidden="true" href="#modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modules&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="Sources/Real/README.md"&gt;Real&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Sources/Complex/README.md"&gt;Complex&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-future-expansion" class="anchor" aria-hidden="true" href="#future-expansion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Future expansion&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/apple/swift-numerics/issues/3"&gt;Approximate Equality&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apple/swift-numerics/issues/4"&gt;Large Fixed-Width Integers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apple/swift-numerics/issues/5"&gt;Arbitrary-Precision Integers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apple/swift-numerics/issues/6"&gt;Shaped Arrays&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apple/swift-numerics/issues/7"&gt;Decimal Floating-point&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apple/swift-numerics/issues/8"&gt;Float16&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>apple</author><guid isPermaLink="false">https://github.com/apple/swift-numerics</guid><pubDate>Tue, 19 Nov 2019 00:24:00 GMT</pubDate></item><item><title>laurent22/joplin #25 in All Languages, This week</title><link>https://github.com/laurent22/joplin</link><description>&lt;p&gt;&lt;i&gt;Joplin - a note taking and to-do application with synchronization capabilities for Windows, macOS, Linux, Android and iOS. Forum: https://discourse.joplinapp.org/&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-joplin" class="anchor" aria-hidden="true" href="#joplin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Joplin&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=E8JMYD2LQ8MMA&amp;amp;lc=GB&amp;amp;item_name=Joplin+Development&amp;amp;currency_code=EUR&amp;amp;bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/142909c516789466a83357895d7525f17a2fead4/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f6261646765732f446f6e6174652d50617950616c2d677265656e2e737667" alt="Donate" data-canonical-src="https://joplinapp.org/images/badges/Donate-PayPal-green.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.patreon.com/joplin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a56312c33e135ff13b3230808afa86762f4c7327/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f6261646765732f50617472656f6e2d42616467652e737667" alt="Become a patron" data-canonical-src="https://joplinapp.org/images/badges/Patreon-Badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Joplin is a free, open source note taking and to-do application, which can handle a large number of notes organised into notebooks. The notes are searchable, can be copied, tagged and modified either from the applications directly or from your own text editor. The notes are in &lt;a href="#markdown"&gt;Markdown format&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Notes exported from Evernote via .enex files &lt;a href="#importing"&gt;can be imported&lt;/a&gt; into Joplin, including the formatted content (which is converted to Markdown), resources (images, attachments, etc.) and complete metadata (geolocation, updated time, created time, etc.). Plain Markdown files can also be imported.&lt;/p&gt;
&lt;p&gt;The notes can be &lt;a href="#synchronisation"&gt;synchronised&lt;/a&gt; with various cloud services including &lt;a href="https://nextcloud.com/" rel="nofollow"&gt;Nextcloud&lt;/a&gt;, Dropbox, OneDrive, WebDAV or the file system (for example with a network directory). When synchronising the notes, notebooks, tags and other metadata are saved to plain text files which can be easily inspected, backed up and moved around.&lt;/p&gt;
&lt;p&gt;The application is available for Windows, Linux, macOS, Android and iOS (the terminal app also works on FreeBSD). A &lt;a href="https://github.com/laurent22/joplin/blob/master/readme/clipper.md"&gt;Web Clipper&lt;/a&gt;, to save web pages and screenshots from your browser, is also available for &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/joplin-web-clipper/" rel="nofollow"&gt;Firefox&lt;/a&gt; and &lt;a href="https://chrome.google.com/webstore/detail/joplin-web-clipper/alofnhikmmkdbbbgpnglcpdollgjjfek?hl=en-GB" rel="nofollow"&gt;Chrome&lt;/a&gt;.&lt;/p&gt;
&lt;div&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/4f4603c9de2d8d9f6051628fbb5d91183046a471/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f416c6c436c69656e74732e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/4f4603c9de2d8d9f6051628fbb5d91183046a471/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f416c6c436c69656e74732e6a7067" data-canonical-src="https://joplinapp.org/images/AllClients.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;Three types of applications are available: for the &lt;strong&gt;desktop&lt;/strong&gt; (Windows, macOS and Linux), for &lt;strong&gt;mobile&lt;/strong&gt; (Android and iOS) and for &lt;strong&gt;terminal&lt;/strong&gt; (Windows, macOS, Linux and FreeBSD). All applications have similar user interfaces and can synchronise with each other.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-desktop-applications" class="anchor" aria-hidden="true" href="#desktop-applications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Desktop applications&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operating System&lt;/th&gt;
&lt;th&gt;Download&lt;/th&gt;
&lt;th&gt;Alternative&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Windows (32 and 64-bit)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/releases/download/v1.0.174/Joplin-Setup-1.0.174.exe"&gt;&lt;img alt="Get it on Windows" width="134px" src="https://camo.githubusercontent.com/feef906ffaebc642bd4cb2468d8d54b7c5b6ce70/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f426164676557696e646f77732e706e67" data-canonical-src="https://joplinapp.org/images/BadgeWindows.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Or get the &lt;a href="https://github.com/laurent22/joplin/releases/download/v1.0.174/JoplinPortable.exe"&gt;Portable version&lt;/a&gt;&lt;br&gt;&lt;br&gt;The &lt;a href="https://en.wikipedia.org/wiki/Portable_application" rel="nofollow"&gt;portable application&lt;/a&gt; allows installing the software on a portable device such as a USB key. Simply copy the file JoplinPortable.exe in any directory on that USB key ; the application will then create a directory called "JoplinProfile" next to the executable file.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;macOS&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/releases/download/v1.0.174/Joplin-1.0.174.dmg"&gt;&lt;img alt="Get it on macOS" width="134px" src="https://camo.githubusercontent.com/d271dc0a5772ceeb267ca0babdfac05dcb07ace3/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f42616467654d61634f532e706e67" data-canonical-src="https://joplinapp.org/images/BadgeMacOS.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;You can also use Homebrew: &lt;code&gt;brew cask install joplin&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Linux&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/releases/download/v1.0.174/Joplin-1.0.174-x86_64.AppImage"&gt;&lt;img alt="Get it on Linux" width="134px" src="https://camo.githubusercontent.com/158ef9ed5a608db45f351eb98d6b0682b7885ff0/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f42616467654c696e75782e706e67" data-canonical-src="https://joplinapp.org/images/BadgeLinux.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;An Arch Linux package &lt;a href="#terminal-application"&gt;is also available&lt;/a&gt;.&lt;br&gt;&lt;br&gt;If it works with your distribution (it has been tested on Ubuntu, Fedora, Gnome and Mint), the recommended way is to use this script as it will handle the desktop icon too:&lt;br&gt;&lt;br&gt; &lt;code&gt;wget -O - https://raw.githubusercontent.com/laurent22/joplin/master/Joplin_install_and_update.sh | bash&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-mobile-applications" class="anchor" aria-hidden="true" href="#mobile-applications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mobile applications&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operating System&lt;/th&gt;
&lt;th&gt;Download&lt;/th&gt;
&lt;th&gt;Alt. Download&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Android&lt;/td&gt;
&lt;td&gt;&lt;a href="https://play.google.com/store/apps/details?id=net.cozic.joplin&amp;amp;utm_source=GitHub&amp;amp;utm_campaign=README&amp;amp;pcampaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1" rel="nofollow"&gt;&lt;img alt="Get it on Google Play" height="40px" src="https://camo.githubusercontent.com/f0115fd53bfc95ea265d0dad17ea50a9f9a8a65a/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f4261646765416e64726f69642e706e67" data-canonical-src="https://joplinapp.org/images/BadgeAndroid.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;or download the APK file: &lt;a href="https://github.com/laurent22/joplin-android/releases/download/android-v1.0.310/joplin-v1.0.310.apk"&gt;64-bit&lt;/a&gt; &lt;a href="https://github.com/laurent22/joplin-android/releases/download/android-v1.0.310/joplin-v1.0.310-32bit.apk"&gt;32-bit&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iOS&lt;/td&gt;
&lt;td&gt;&lt;a href="https://itunes.apple.com/us/app/joplin/id1315599797" rel="nofollow"&gt;&lt;img alt="Get it on the App Store" height="40px" src="https://camo.githubusercontent.com/c8a45b6ee42170158b58a7ae738cf2a66b83c8d2/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f4261646765494f532e706e67" data-canonical-src="https://joplinapp.org/images/BadgeIOS.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-terminal-application" class="anchor" aria-hidden="true" href="#terminal-application"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Terminal application&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operating system&lt;/th&gt;
&lt;th&gt;Method&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;macOS&lt;/td&gt;
&lt;td&gt;&lt;code&gt;brew install joplin&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Linux or Windows (via &lt;a href="https://msdn.microsoft.com/en-us/commandline/wsl/faq?f=255&amp;amp;MSPPError=-2147217396" rel="nofollow"&gt;WSL&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Important:&lt;/strong&gt; First, &lt;a href="https://nodejs.org/en/download/package-manager/" rel="nofollow"&gt;install Node 8+&lt;/a&gt;.&lt;br&gt;&lt;br&gt;&lt;code&gt;NPM_CONFIG_PREFIX=~/.joplin-bin npm install -g joplin&lt;/code&gt;&lt;br&gt;&lt;code&gt;sudo ln -s ~/.joplin-bin/bin/joplin /usr/bin/joplin&lt;/code&gt;&lt;br&gt;&lt;br&gt;By default, the application binary will be installed under &lt;code&gt;~/.joplin-bin&lt;/code&gt;. You may change this directory if needed. Alternatively, if your npm permissions are setup as described &lt;a href="https://docs.npmjs.com/getting-started/fixing-npm-permissions#option-2-change-npms-default-directory-to-another-directory" rel="nofollow"&gt;here&lt;/a&gt; (Option 2) then simply running &lt;code&gt;npm -g install joplin&lt;/code&gt; would work.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Arch Linux&lt;/td&gt;
&lt;td&gt;An Arch Linux package is available &lt;a href="https://aur.archlinux.org/packages/joplin/" rel="nofollow"&gt;here&lt;/a&gt;. To install it, use an AUR wrapper such as yay: &lt;code&gt;yay -S joplin&lt;/code&gt;. Both the CLI tool (type &lt;code&gt;joplin&lt;/code&gt;) and desktop app (type &lt;code&gt;joplin-desktop&lt;/code&gt;) are packaged. You can also install a compiled version with the &lt;a href="https://wiki.archlinux.org/index.php/Unofficial_user_repositories#chaotic-aur" rel="nofollow"&gt;chaotic-aur&lt;/a&gt; repository. For support, please go to the &lt;a href="https://github.com/masterkorp/joplin-pkgbuild"&gt;GitHub repo&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;To start it, type &lt;code&gt;joplin&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For usage information, please refer to the full &lt;a href="https://joplinapp.org/terminal/" rel="nofollow"&gt;Joplin Terminal Application Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-web-clipper" class="anchor" aria-hidden="true" href="#web-clipper"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Web Clipper&lt;/h2&gt;
&lt;p&gt;The Web Clipper is a browser extension that allows you to save web pages and screenshots from your browser. For more information on how to install and use it, see the &lt;a href="https://github.com/laurent22/joplin/blob/master/readme/clipper.md"&gt;Web Clipper Help Page&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Applications&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/readme/desktop.md"&gt;Desktop application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/readme/mobile.md"&gt;Mobile applications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/readme/terminal.md"&gt;Terminal application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/readme/clipper.md"&gt;Web Clipper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://discourse.joplinapp.org" rel="nofollow"&gt;Joplin Forum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/readme/markdown.md"&gt;Markdown Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/readme/e2ee.md"&gt;How to enable end-to-end encryption&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/readme/spec.md"&gt;End-to-end encryption spec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/readme/debugging.md"&gt;How to enable debug mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/readme/api.md"&gt;API documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/readme/faq.md"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;About&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/readme/changelog.md"&gt;Changelog (Desktop App)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/readme/changelog_cli.md"&gt;Changelog (CLI App)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/readme/stats.md"&gt;Stats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/readme/donate.md"&gt;Donate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Desktop, mobile and terminal applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/readme/clipper.md"&gt;Web Clipper&lt;/a&gt; for Firefox and Chrome.&lt;/li&gt;
&lt;li&gt;End To End Encryption (E2EE)&lt;/li&gt;
&lt;li&gt;Note history (revisions)&lt;/li&gt;
&lt;li&gt;Synchronisation with various services, including NextCloud, Dropbox, WebDAV and OneDrive.&lt;/li&gt;
&lt;li&gt;Import Enex files (Evernote export format) and Markdown files.&lt;/li&gt;
&lt;li&gt;Export JEX files (Joplin Export format) and raw files.&lt;/li&gt;
&lt;li&gt;Support notes, to-dos, tags and notebooks.&lt;/li&gt;
&lt;li&gt;Goto Anything feature.&lt;/li&gt;
&lt;li&gt;Sort notes by multiple criteria - title, updated time, etc.&lt;/li&gt;
&lt;li&gt;Support for alarms (notifications) in mobile and desktop applications.&lt;/li&gt;
&lt;li&gt;Offline first, so the entire data is always available on the device even without an internet connection.&lt;/li&gt;
&lt;li&gt;Markdown notes, which are rendered with images and formatting in the desktop and mobile applications. Support for extra features such as math notation and checkboxes.&lt;/li&gt;
&lt;li&gt;File attachment support - images are displayed, and other files are linked and can be opened in the relevant application.&lt;/li&gt;
&lt;li&gt;Search functionality.&lt;/li&gt;
&lt;li&gt;Geo-location support.&lt;/li&gt;
&lt;li&gt;Supports multiple languages&lt;/li&gt;
&lt;li&gt;External editor support - open notes in your favorite external editor with one click in Joplin.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-importing" class="anchor" aria-hidden="true" href="#importing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Importing&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-importing-from-evernote" class="anchor" aria-hidden="true" href="#importing-from-evernote"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Importing from Evernote&lt;/h2&gt;
&lt;p&gt;Joplin was designed as a replacement for Evernote and so can import complete Evernote notebooks, as well as notes, tags, resources (attached files) and note metadata (such as author, geo-location, etc.) via ENEX files. In terms of data, the only two things that might slightly differ are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Recognition data - Evernote images, in particular scanned (or photographed) documents have &lt;a href="https://en.wikipedia.org/wiki/Optical_character_recognition" rel="nofollow"&gt;recognition data&lt;/a&gt; associated with them. It is the text that Evernote has been able to recognise in the document. This data is not preserved when the note are imported into Joplin. However, should it become supported in the search tool or other parts of Joplin, it should be possible to regenerate this recognition data since the actual image would still be available.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Colour, font sizes and faces - Evernote text is stored as HTML and this is converted to Markdown during the import process. For notes that are mostly plain text or with basic formatting (bold, italic, bullet points, links, etc.) this is a lossless conversion, and the note, once rendered back to HTML should be very similar. Tables are also imported and converted to Markdown tables. For very complex notes, some formatting data might be lost - in particular colours, font sizes and font faces will not be imported. The text itself however is always imported in full regardless of formatting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To import Evernote data, first export your Evernote notebooks to ENEX files as described &lt;a href="https://help.evernote.com/hc/en-us/articles/209005557-How-to-back-up-export-and-restore-import-notes-and-notebooks" rel="nofollow"&gt;here&lt;/a&gt;. Then follow these steps:&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt;, open File &amp;gt; Import &amp;gt; ENEX and select your file. The notes will be imported into a new separate notebook. If needed they can then be moved to a different notebook, or the notebook can be renamed, etc.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;terminal application&lt;/strong&gt;, in &lt;a href="https://github.com/laurent22/joplin/blob/master/readme/terminal.md#command-line-mode"&gt;command-line mode&lt;/a&gt;, type &lt;code&gt;import /path/to/file.enex&lt;/code&gt;. This will import the notes into a new notebook named after the filename.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-importing-from-markdown-files" class="anchor" aria-hidden="true" href="#importing-from-markdown-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Importing from Markdown files&lt;/h2&gt;
&lt;p&gt;Joplin can import notes from plain Markdown file. You can either import a complete directory of Markdown files or individual files.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt;, open File &amp;gt; Import &amp;gt; MD and select your Markdown file or directory.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;terminal application&lt;/strong&gt;, in &lt;a href="https://github.com/laurent22/joplin/blob/master/readme/terminal.md#command-line-mode"&gt;command-line mode&lt;/a&gt;, type &lt;code&gt;import --format md /path/to/file.md&lt;/code&gt; or &lt;code&gt;import --format md /path/to/directory/&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-importing-from-other-applications" class="anchor" aria-hidden="true" href="#importing-from-other-applications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Importing from other applications&lt;/h2&gt;
&lt;p&gt;In general the way to import notes from any application into Joplin is to convert the notes to ENEX files (Evernote format) and to import these ENEX files into Joplin using the method above. Most note-taking applications support ENEX files so it should be relatively straightforward. For help about specific applications, see below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Standard Notes: Please see &lt;a href="https://programadorwebvalencia.com/migrate-notes-from-standard-notes-to-joplin/" rel="nofollow"&gt;this tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tomboy Notes: Export the notes to ENEX files &lt;a href="https://askubuntu.com/questions/243691/how-can-i-export-my-tomboy-notes-into-evernote/608551" rel="nofollow"&gt;as described here&lt;/a&gt; for example, and import these ENEX files into Joplin.&lt;/li&gt;
&lt;li&gt;OneNote: First &lt;a href="https://discussion.evernote.com/topic/107736-is-there-a-way-to-import-from-onenote-into-evernote-on-the-mac/" rel="nofollow"&gt;import the notes from OneNote into Evernote&lt;/a&gt;. Then export the ENEX file from Evernote and import it into Joplin.&lt;/li&gt;
&lt;li&gt;NixNote: Synchronise with Evernote, then export the ENEX files and import them into Joplin. More info &lt;a href="https://discourse.joplinapp.org/t/import-from-nixnote/183/3" rel="nofollow"&gt;in this thread&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-exporting" class="anchor" aria-hidden="true" href="#exporting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exporting&lt;/h1&gt;
&lt;p&gt;Joplin can export to the JEX format (Joplin Export file), which is a tar file that can contain multiple notes, notebooks, etc. This is a lossless format in that all the notes, but also metadata such as geo-location, updated time, tags, etc. are preserved. This format is convenient for backup purposes and can be re-imported into Joplin. A "raw" format is also available. This is the same as the JEX format except that the data is saved to a directory and each item represented by a single file.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-synchronisation" class="anchor" aria-hidden="true" href="#synchronisation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Synchronisation&lt;/h1&gt;
&lt;p&gt;One of the goals of Joplin was to avoid being tied to any particular company or service, whether it is Evernote, Google or Microsoft. As such the synchronisation is designed without any hard dependency to any particular service. Most of the synchronisation process is done at an abstract level and access to external services, such as Nextcloud or Dropbox, is done via lightweight drivers. It is easy to support new services by creating simple drivers that provide a filesystem-like interface, i.e. the ability to read, write, delete and list items. It is also simple to switch from one service to another or to even sync to multiple services at once. Each note, notebook, tags, as well as the relation between items is transmitted as plain text files during synchronisation, which means the data can also be moved to a different application, can be easily backed up, inspected, etc.&lt;/p&gt;
&lt;p&gt;Currently, synchronisation is possible with Nextcloud, Dropbox (by default), OneDrive or the local filesystem. To setup synchronisation please follow the instructions below. After that, the application will synchronise in the background whenever it is running, or you can click on "Synchronise" to start a synchronisation manually.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-nextcloud-synchronisation" class="anchor" aria-hidden="true" href="#nextcloud-synchronisation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nextcloud synchronisation&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1c4deb06bfb00bee82ba7e5795653e5db99490ce/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f6e657874636c6f75642d6c6f676f2d6261636b67726f756e642e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/1c4deb06bfb00bee82ba7e5795653e5db99490ce/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f6e657874636c6f75642d6c6f676f2d6261636b67726f756e642e706e67" width="100" align="left" data-canonical-src="https://joplinapp.org/images/nextcloud-logo-background.png" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://nextcloud.com/" rel="nofollow"&gt;Nextcloud&lt;/a&gt; is a self-hosted, private cloud solution. It can store documents, images and videos but also calendars, passwords and countless other things and can sync them to your laptop or phone. As you can host your own Nextcloud server, you own both the data on your device and infrastructure used for synchronisation. As such it is a good fit for Joplin. The platform is also well supported and with a strong community, so it is likely to be around for a while - since it's open source anyway, it is not a service that can be closed, it can exist on a server for as long as one chooses.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt; or &lt;strong&gt;mobile application&lt;/strong&gt;, go to the config screen and select Nextcloud as the synchronisation target. Then input the WebDAV URL (to get it, click on Settings in the bottom left corner of the page, in Nextcloud), this is normally &lt;code&gt;https://example.com/nextcloud/remote.php/webdav/Joplin&lt;/code&gt; (&lt;strong&gt;make sure to create the "Joplin" directory in Nextcloud&lt;/strong&gt;), and set the username and password. If it does not work, please &lt;a href="https://github.com/laurent22/joplin/issues/61#issuecomment-373282608"&gt;see this explanation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;terminal application&lt;/strong&gt;, you will need to set the &lt;code&gt;sync.target&lt;/code&gt; config variable and all the &lt;code&gt;sync.5.path&lt;/code&gt;, &lt;code&gt;sync.5.username&lt;/code&gt; and &lt;code&gt;sync.5.password&lt;/code&gt; config variables to, respectively the Nextcloud WebDAV URL, your username and your password. This can be done from the command line mode using:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:config sync.5.path https://example.com/nextcloud/remote.php/webdav/Joplin
:config sync.5.username YOUR_USERNAME
:config sync.5.password YOUR_PASSWORD
:config sync.target 5
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If synchronisation does not work, please consult the logs in the app profile directory - it is often due to a misconfigured URL or password. The log should indicate what the exact issue is.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dropbox-synchronisation" class="anchor" aria-hidden="true" href="#dropbox-synchronisation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dropbox synchronisation&lt;/h2&gt;
&lt;p&gt;When syncing with Dropbox, Joplin creates a sub-directory in Dropbox, in &lt;code&gt;/Apps/Joplin&lt;/code&gt; and read/write the notes and notebooks from it. The application does not have access to anything outside this directory.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt; or &lt;strong&gt;mobile application&lt;/strong&gt;, select "Dropbox" as the synchronisation target in the config screen (it is selected by default). Then, to initiate the synchronisation process, click on the "Synchronise" button in the sidebar and follow the instructions.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;terminal application&lt;/strong&gt;, to initiate the synchronisation process, type &lt;code&gt;:sync&lt;/code&gt;. You will be asked to follow a link to authorise the application. It is possible to also synchronise outside of the user interface by typing &lt;code&gt;joplin sync&lt;/code&gt; from the terminal. This can be used to setup a cron script to synchronise at regular interval. For example, this would do it every 30 minutes:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*/30 * * * * /path/to/joplin sync
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-webdav-synchronisation" class="anchor" aria-hidden="true" href="#webdav-synchronisation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WebDAV synchronisation&lt;/h2&gt;
&lt;p&gt;Select the "WebDAV" synchronisation target and follow the same instructions as for Nextcloud above.&lt;/p&gt;
&lt;p&gt;WebDAV-compatible services that are known to work with Joplin:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://httpd.apache.org/docs/current/mod/mod_dav.html" rel="nofollow"&gt;Apache WebDAV Module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.box.com/" rel="nofollow"&gt;Box.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.drivehq.com" rel="nofollow"&gt;DriveHQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fastmail.com/" rel="nofollow"&gt;Fastmail&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.strato.fr/stockage-en-ligne/" rel="nofollow"&gt;HiDrive&lt;/a&gt; from Strato. &lt;a href="https://github.com/laurent22/joplin/issues/309"&gt;Setup help&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nginx.org/en/docs/http/ngx_http_dav_module.html" rel="nofollow"&gt;Nginx WebDAV Module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nextcloud.com/" rel="nofollow"&gt;NextCloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://owncloud.org/" rel="nofollow"&gt;OwnCloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seafile.com/" rel="nofollow"&gt;Seafile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.transip.nl/stack/" rel="nofollow"&gt;Stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.schimera.com/products/webdav-nav-server/" rel="nofollow"&gt;WebDAV Nav&lt;/a&gt;, a macOS server.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.zimbra.com/" rel="nofollow"&gt;Zimbra&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-onedrive-synchronisation" class="anchor" aria-hidden="true" href="#onedrive-synchronisation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OneDrive synchronisation&lt;/h2&gt;
&lt;p&gt;When syncing with OneDrive, Joplin creates a sub-directory in OneDrive, in /Apps/Joplin and read/write the notes and notebooks from it. The application does not have access to anything outside this directory.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt; or &lt;strong&gt;mobile application&lt;/strong&gt;, select "OneDrive" as the synchronisation target in the config screen. Then, to initiate the synchronisation process, click on the "Synchronise" button in the sidebar and follow the instructions.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;terminal application&lt;/strong&gt;, to initiate the synchronisation process, type &lt;code&gt;:sync&lt;/code&gt;. You will be asked to follow a link to authorise the application (simply input your Microsoft credentials - you do not need to register with OneDrive).&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-encryption" class="anchor" aria-hidden="true" href="#encryption"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Encryption&lt;/h1&gt;
&lt;p&gt;Joplin supports end-to-end encryption (E2EE) on all the applications. E2EE is a system where only the owner of the notes, notebooks, tags or resources can read them. It prevents potential eavesdroppers - including telecom providers, internet providers, and even the developers of Joplin from being able to access the data. Please see the &lt;a href="https://github.com/laurent22/joplin/blob/master/readme/e2ee.md"&gt;End-To-End Encryption Tutorial&lt;/a&gt; for more information about this feature and how to enable it.&lt;/p&gt;
&lt;p&gt;For a more technical description, mostly relevant for development or to review the method being used, please see the &lt;a href="https://github.com/laurent22/joplin/blob/master/readme/spec.md"&gt;Encryption specification&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-note-history" class="anchor" aria-hidden="true" href="#note-history"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Note history&lt;/h1&gt;
&lt;p&gt;The Joplin applications automatically save previous versions of your notes at regular intervals. These versions are synced across devices and can be viewed from the desktop application. To do so, click on the "Information" button on a note, then click on "Previous version of this note". From this screen you can view the previous versions of the note as well as restore any of them.&lt;/p&gt;
&lt;p&gt;This feature can be disabled from the "Note history" section in the settings, and it is also possible to change for how long the history of a note is saved.&lt;/p&gt;
&lt;p&gt;More information about this feature in the &lt;a href="https://www.patreon.com/posts/note-history-now-27083082" rel="nofollow"&gt;announcement post&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-external-text-editor" class="anchor" aria-hidden="true" href="#external-text-editor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;External text editor&lt;/h1&gt;
&lt;p&gt;Joplin notes can be opened and edited using an external editor of your choice. It can be a simple text editor like Notepad++ or Sublime Text or an actual Markdown editor like Typora. In that case, images will also be displayed within the editor. To open the note in an external editor, click on the icon in the toolbar or press Ctrl+E (or Cmd+E). Your default text editor will be used to open the note. If needed, you can also specify the editor directly in the General Options, under "Text editor command".&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-attachments" class="anchor" aria-hidden="true" href="#attachments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Attachments&lt;/h1&gt;
&lt;p&gt;Any kind of file can be attached to a note. In Markdown, links to these files are represented as a simple ID to the attachment. In the note viewer, these files, if they are images, will be displayed or, if they are other files (PDF, text files, etc.) they will be displayed as links. Clicking on this link will open the file in the default application.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt;, files can be attached either by clicking the "Attach file" icon in the editor or via drag and drop. If you prefer to create a link to a local file instead, hold the ALT key while performing the drag and drop operation.
If the OS-clipboard contains an image you can directly paste it in the editor via Ctrl+V.&lt;/p&gt;
&lt;p&gt;Resources that are not attached to any note will be automatically deleted after 10 days (see &lt;a href="https://github.com/laurent22/joplin/issues/154#issuecomment-356582366"&gt;rationale&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Resources larger than 10 MB are not currently supported on mobile. They will crash the application when synchronising so it is recommended not to attach such resources at the moment. The issue is being looked at.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-downloading-attachments" class="anchor" aria-hidden="true" href="#downloading-attachments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Downloading attachments&lt;/h2&gt;
&lt;p&gt;The way the attachments are downloaded during synchronisation can be customised in the Configuration screen, under "Attachment download behaviour". The default option ("Always") is to download all the attachments, all the time, so that the data is available even when the device is offline. There is also the option to download the attachments manually (option "Manual"), by clicking on it, or automatically (Option "Auto"), in which case the attachments are downloaded only when a note is opened. These options should help saving disk space and network bandwidth, especially on mobile.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-notifications" class="anchor" aria-hidden="true" href="#notifications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notifications&lt;/h1&gt;
&lt;p&gt;In the desktop and mobile apps, an alarm can be associated with any to-do. It will be triggered at the given time by displaying a notification. How the notification will be displayed depends on the operating system since each has a different way to handle this. Please see below for the requirements for the desktop applications:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &amp;gt;= 8. Make sure the Action Center is enabled on Windows. Task bar balloon for Windows &amp;lt; 8. Growl as fallback. Growl takes precedence over Windows balloons.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &amp;gt;= 10.8 or Growl if earlier.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;code&gt;notify-osd&lt;/code&gt; or &lt;code&gt;libnotify-bin&lt;/code&gt; installed (Ubuntu should have this by default). Growl otherwise&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href="https://github.com/mikaelbr/node-notifier/blob/master/DECISION_FLOW.md"&gt;documentation and flow chart for reporter choice&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;On mobile, the alarms will be displayed using the built-in notification system.&lt;/p&gt;
&lt;p&gt;If for any reason the notifications do not work, please &lt;a href="https://github.com/laurent22/joplin/issues"&gt;open an issue&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-sub-notebooks" class="anchor" aria-hidden="true" href="#sub-notebooks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sub-notebooks&lt;/h1&gt;
&lt;p&gt;Sub-notebooks allow organising multiple notebooks into a tree of notebooks. For example it can be used to regroup all the notebooks related to work, to family or to a particular project under a parent notebook.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/544fee7231c8a7a168ea423d8e4b7ffa7c11023b/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f5375624e6f7465626f6f6b732e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/544fee7231c8a7a168ea423d8e4b7ffa7c11023b/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f5375624e6f7465626f6f6b732e706e67" alt="" data-canonical-src="https://joplinapp.org/images/SubNotebooks.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt;, to create a subnotebook, drag and drop it onto another notebook. To move it back to the root, drag and drop it on the "Notebooks" header. Currently only the desktop app can be used to organise the notebooks.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;mobile application&lt;/strong&gt; supports displaying and collapsing/expanding the tree of notebooks, however it does not currently support moving the subnotebooks to different notebooks.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;terminal app&lt;/strong&gt; supports displaying the tree of subnotebooks but it does not support collapsing/expanding them or moving the subnotebooks around.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-markdown" class="anchor" aria-hidden="true" href="#markdown"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Markdown&lt;/h1&gt;
&lt;p&gt;Joplin uses and renders a Github-flavoured Markdown with a few variations and additions. In particular it adds math formula support, interactive checkboxes and support for note links. Joplin also supports Markdown plugins which allow enabling and disabling various advanced Markdown features. Have a look at the &lt;a href="https://github.com/laurent22/joplin/blob/master/readme/markdown.md"&gt;Markdown Guide&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-custom-css" class="anchor" aria-hidden="true" href="#custom-css"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom CSS&lt;/h1&gt;
&lt;p&gt;Rendered markdown can be customized by placing a userstyle file in the profile directory &lt;code&gt;~/.config/joplin-desktop/userstyle.css&lt;/code&gt; (This path might be different on your device - check at the top of the Config screen for the exact path). This file supports standard CSS syntax. Joplin &lt;em&gt;&lt;strong&gt;must&lt;/strong&gt;&lt;/em&gt; be restarted for the new css to be applied, please ensure that Joplin is not closing to the tray, but is actually exiting. Note that this file is used for both displaying the notes and printing the notes. Be aware how the CSS may look printed (for example, printing white text over a black background is usually not wanted).&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-note-templates" class="anchor" aria-hidden="true" href="#note-templates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Note templates&lt;/h1&gt;
&lt;p&gt;In the &lt;strong&gt;desktop app&lt;/strong&gt;, templates can be used to create new notes or to insert into existing ones by creating a &lt;code&gt;templates&lt;/code&gt; folder in Joplin's config folder and placing Markdown template files into it. For example creating the file &lt;code&gt;hours.md&lt;/code&gt; in the &lt;code&gt;templates&lt;/code&gt; directory with the contents:&lt;/p&gt;
&lt;div class="highlight highlight-source-gfm"&gt;&lt;pre&gt;Date: {{date}}
Hours:
Details:&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Templates can then be inserted from the menu (File-&amp;gt;Templates).&lt;/p&gt;
&lt;p&gt;The currently supported template variables are:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Variable&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;{{date}}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Today's date formatted based on the settings format&lt;/td&gt;
&lt;td&gt;2019-01-01&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;{{time}}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Current time formatted based on the settings format&lt;/td&gt;
&lt;td&gt;13:00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;{{datetime}}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Current date and time formatted based on the settings format&lt;/td&gt;
&lt;td&gt;01/01/19 1:00 PM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;{{#custom_datetime}}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Current date and/or time formatted based on a supplied string (using &lt;a href="https://momentjs.com/" rel="nofollow"&gt;moment.js&lt;/a&gt; formatting)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{{#custom_datetime}}M d{{/custom_datetime}}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-searching" class="anchor" aria-hidden="true" href="#searching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Searching&lt;/h1&gt;
&lt;p&gt;Joplin implements the SQLite Full Text Search (FTS4) extension. It means the content of all the notes is indexed in real time and search queries return results very fast. Both &lt;a href="https://www.sqlite.org/fts3.html#simple_fts_queries" rel="nofollow"&gt;Simple FTS Queries&lt;/a&gt; and &lt;a href="https://www.sqlite.org/fts3.html#full_text_index_queries" rel="nofollow"&gt;Full-Text Index Queries&lt;/a&gt; are supported. See below for the list of supported queries:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Search type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Single word&lt;/td&gt;
&lt;td&gt;Returns all the notes that contain this term.&lt;/td&gt;
&lt;td&gt;For example, searching for &lt;code&gt;cat&lt;/code&gt; will return all the notes that contain this exact word. Note: it will not return the notes that contain the substring - thus, for "cat", notes that contain "cataclysmic" or "prevaricate" will &lt;strong&gt;not&lt;/strong&gt; be returned.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Multiples words&lt;/td&gt;
&lt;td&gt;Returns all the notes that contain &lt;strong&gt;all&lt;/strong&gt; these words, but not necessarily next to each other.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dog cat&lt;/code&gt; - will return any notes that contain the words "dog" and "cat" anywhere in the note, no necessarily in that order nor next to each other. It will &lt;strong&gt;not&lt;/strong&gt; return results that contain "dog" or "cat" only.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Phrase query&lt;/td&gt;
&lt;td&gt;Add double quotes to return the notes that contain exactly this phrase.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;"shopping list"&lt;/code&gt; - will return the notes that contain these &lt;strong&gt;exact terms&lt;/strong&gt; next to each other and in this order. It will &lt;strong&gt;not&lt;/strong&gt; return for example a note that contains "going shopping with my list".&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Prefix&lt;/td&gt;
&lt;td&gt;Add a wildcard to return all the notes that contain a term with a specified prefix.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;swim*&lt;/code&gt; - will return all the notes that contain eg. "swim", but also "swimming", "swimsuit", etc. IMPORTANT: The wildcard &lt;strong&gt;can only be at the end&lt;/strong&gt; - it will be ignored at the beginning of a word (eg. &lt;code&gt;*swim&lt;/code&gt;) and will be treated as a literal asterisk in the middle of a word (eg. &lt;code&gt;ast*rix&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Field restricted&lt;/td&gt;
&lt;td&gt;Add either &lt;code&gt;title:&lt;/code&gt; or &lt;code&gt;body:&lt;/code&gt; before a note to restrict your search to just the title, or just the body.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;title:shopping&lt;/code&gt;, &lt;code&gt;body:egg&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Notes are sorted by "relevance". Currently it means the notes that contain the requested terms the most times are on top. For queries with multiple terms, it also matters how close to each other the terms are. This is a bit experimental so if you notice a search query that returns unexpected results, please report it in the forum, providing as many details as possible to replicate the issue.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-goto-anything" class="anchor" aria-hidden="true" href="#goto-anything"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Goto Anything&lt;/h1&gt;
&lt;p&gt;In the desktop application, press Ctrl+G or Cmd+G and type the title of a note to jump directly to it. You can also type &lt;code&gt;#&lt;/code&gt; followed by a tag or &lt;code&gt;@&lt;/code&gt; followed by a notebook title.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-donations" class="anchor" aria-hidden="true" href="#donations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Donations&lt;/h1&gt;
&lt;p&gt;Donations to Joplin support the development of the project. Developing quality applications mostly takes time, but there are also some expenses, such as digital certificates to sign the applications, app store fees, hosting, etc. Most of all, your donation will make it possible to keep up the current development standard.&lt;/p&gt;
&lt;p&gt;Please see the &lt;a href="https://github.com/laurent22/joplin/blob/master/readme/donate.md"&gt;donation page&lt;/a&gt; for information on how to support the development of Joplin.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;For general discussion about Joplin, user support, software development questions, and to discuss new features, go to the &lt;a href="https://discourse.joplinapp.org/" rel="nofollow"&gt;Joplin Forum&lt;/a&gt;. It is possible to login with your GitHub account.&lt;/li&gt;
&lt;li&gt;Also see here for information about &lt;a href="https://discourse.joplinapp.org/c/news" rel="nofollow"&gt;the latest releases and general news&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For bug reports and feature requests, go to the &lt;a href="https://github.com/laurent22/joplin/issues"&gt;GitHub Issue Tracker&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The latest news are posted &lt;a href="https://www.patreon.com/joplin" rel="nofollow"&gt;on the Patreon page&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;You can also follow us on &lt;a href="https://mastodon.social/@joplinapp" rel="nofollow"&gt;the Mastodon feed&lt;/a&gt; or &lt;a href="https://twitter.com/joplinapp" rel="nofollow"&gt;the Twitter feed&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;You can join the live community on &lt;a href="https://discordapp.com/invite/d2HMPwE" rel="nofollow"&gt;the JoplinApp discord server&lt;/a&gt; to get help with Joplin or to discuss anything Joplin related.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;Please see the guide for information on how to contribute to the development of Joplin: &lt;a href="https://github.com/laurent22/joplin/blob/master/CONTRIBUTING.md"&gt;https://github.com/laurent22/joplin/blob/master/CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-localisation" class="anchor" aria-hidden="true" href="#localisation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Localisation&lt;/h1&gt;
&lt;p&gt;Joplin is currently available in the languages below. If you would like to contribute a &lt;strong&gt;new translation&lt;/strong&gt;, it is quite straightforward, please follow these steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://poedit.net/" rel="nofollow"&gt;Download Poedit&lt;/a&gt;, the translation editor, and install it.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/laurent22/joplin/master/CliClient/locales/joplin.pot" rel="nofollow"&gt;Download the file to be translated&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;In Poedit, open this .pot file, go into the Catalog menu and click Configuration. Change "Country" and "Language" to your own country and language.&lt;/li&gt;
&lt;li&gt;From then you can translate the file. Once it is done, please either &lt;a href="https://github.com/laurent22/joplin/pulls"&gt;open a pull request&lt;/a&gt; or send the file to &lt;a href="https://raw.githubusercontent.com/laurent22/joplin/master/Assets/AdresseTranslation.png" rel="nofollow"&gt;this address&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This translation will apply to the three applications - desktop, mobile and terminal.&lt;/p&gt;
&lt;p&gt;To &lt;strong&gt;update a translation&lt;/strong&gt;, follow the same steps as above but instead of getting the .pot file, get the .po file for your language from the table below.&lt;/p&gt;
&lt;p&gt;Current translations:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt; &lt;/th&gt;
&lt;th&gt;Language&lt;/th&gt;
&lt;th&gt;Po File&lt;/th&gt;
&lt;th&gt;Last translator&lt;/th&gt;
&lt;th&gt;Percent done&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0aa0f648f4bf429b1713ac1fbde113b838a56931/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f617261626c65616775652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/0aa0f648f4bf429b1713ac1fbde113b838a56931/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f617261626c65616775652e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/arableague.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Arabic&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/ar.po"&gt;ar&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;عبد الناصر سعيد (&lt;a href="mailto:as@althobaity.com"&gt;as@althobaity.com&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;78%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/9a119eb70fae23cf55cda6127619496ff4541066/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f65732f6261737175655f636f756e7472792e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/9a119eb70fae23cf55cda6127619496ff4541066/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f65732f6261737175655f636f756e7472792e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/es/basque_country.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Basque&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/eu.po"&gt;eu&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="mailto:juan.abasolo@ehu.eus"&gt;juan.abasolo@ehu.eus&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;44%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a11b069fc682aebba4e2cd22a882cf944eb0112b/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f62612e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/a11b069fc682aebba4e2cd22a882cf944eb0112b/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f62612e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/ba.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Bosnian&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/bs_BA.po"&gt;bs_BA&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Derviš T. (&lt;a href="mailto:dervis.t@pm.me"&gt;dervis.t@pm.me&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;97%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0eb50f9e3871fef39b8cdf1348d12ce02a4de0e5/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f62672e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/0eb50f9e3871fef39b8cdf1348d12ce02a4de0e5/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f62672e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/bg.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Bulgarian&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/bg_BG.po"&gt;bg_BG&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;86%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/9cda0567a09fda634eb2a0a13d409c1b090d7ce0/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f65732f636174616c6f6e69612e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/9cda0567a09fda634eb2a0a13d409c1b090d7ce0/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f65732f636174616c6f6e69612e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/es/catalonia.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Catalan&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/ca.po"&gt;ca&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;jmontane, 2019&lt;/td&gt;
&lt;td&gt;68%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/7cb5f1c1af5740500d317e6ad1e6b1d54700b62f/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f68722e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/7cb5f1c1af5740500d317e6ad1e6b1d54700b62f/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f68722e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/hr.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Croatian&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/hr_HR.po"&gt;hr_HR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Hrvoje Mandić (&lt;a href="mailto:trbuhom@net.hr"&gt;trbuhom@net.hr&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;36%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/4a48c14bb8debe8d0d79df991e4906012f1670f3/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f637a2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/4a48c14bb8debe8d0d79df991e4906012f1670f3/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f637a2e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/cz.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Czech&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/cs_CZ.po"&gt;cs_CZ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Lukas Helebrandt (&lt;a href="mailto:lukas@aiya.cz"&gt;lukas@aiya.cz&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;100%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e5338ad6d63f4117cbba477e80a81678ffe050ff/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f646b2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e5338ad6d63f4117cbba477e80a81678ffe050ff/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f646b2e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/dk.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Dansk&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/da_DK.po"&gt;da_DK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Morten Juhl-Johansen Zölde-Fejér (mjjzf@syntaktisk.&lt;/td&gt;
&lt;td&gt;96%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e26d44610e940717301085e3f860dfc87d57ec92/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f64652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e26d44610e940717301085e3f860dfc87d57ec92/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f64652e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/de.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Deutsch&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/de_DE.po"&gt;de_DE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Michael Sonntag (&lt;a href="mailto:ms@editorei.de"&gt;ms@editorei.de&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;100%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/560560f716ecf18641a693507e52d75a9cb66a03/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f67622e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/560560f716ecf18641a693507e52d75a9cb66a03/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f67622e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/gb.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;English (UK)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/en_GB.po"&gt;en_GB&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;100%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/142eb02e9eafce3cd039ba1e3aecfdd9b6f064f0/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f75732e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/142eb02e9eafce3cd039ba1e3aecfdd9b6f064f0/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f75732e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/us.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;English (US)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/en_US.po"&gt;en_US&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;100%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/fa7bcee8b914c770c92d819d9cf8093c4fbf7b23/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f65732e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/fa7bcee8b914c770c92d819d9cf8093c4fbf7b23/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f65732e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/es.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Español&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/es_ES.po"&gt;es_ES&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Andros Fenollosa (&lt;a href="mailto:andros@fenollosa.email"&gt;andros@fenollosa.email&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;94%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/674bc3d817e4188127020e26569e4213fac81a19/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f6573706572616e746f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/674bc3d817e4188127020e26569e4213fac81a19/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f6573706572616e746f2e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/esperanto.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Esperanto&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/eo.po"&gt;eo&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Marton Paulo (&lt;a href="mailto:martonpss@gmail.com"&gt;martonpss@gmail.com&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;50%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/430f5788ffa6b7492b86a58d92249ff0349bdcb8/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f66722e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/430f5788ffa6b7492b86a58d92249ff0349bdcb8/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f66722e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/fr.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Français&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/fr_FR.po"&gt;fr_FR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Laurent Cozic&lt;/td&gt;
&lt;td&gt;100%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/9f3712ce6592f9dc306c3c162dbe6c00cbb9e13b/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f65732f67616c696369612e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/9f3712ce6592f9dc306c3c162dbe6c00cbb9e13b/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f65732f67616c696369612e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/es/galicia.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Galician&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/gl_ES.po"&gt;gl_ES&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Marcos Lans (&lt;a href="mailto:marcoslansgarza@gmail.com"&gt;marcoslansgarza@gmail.com&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;56%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/40e91cbed4674a6537ce6f712ae2068bc0277df2/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f69742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/40e91cbed4674a6537ce6f712ae2068bc0277df2/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f69742e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/it.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Italiano&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/it_IT.po"&gt;it_IT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;94%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a5caa6528839fbe087cfe2747e18803f400a33c4/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f62652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/a5caa6528839fbe087cfe2747e18803f400a33c4/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f62652e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/be.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Nederlands&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/nl_BE.po"&gt;nl_BE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;44%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0f9a28eb904c759d7213e1b955a26d0d18a283a2/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f6e6c2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/0f9a28eb904c759d7213e1b955a26d0d18a283a2/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f6e6c2e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/nl.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Nederlands&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/nl_NL.po"&gt;nl_NL&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Robert (&lt;a href="mailto:metbril@outlook.com"&gt;metbril@outlook.com&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;94%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d25cefd0982bdce2eef5c287a5ed0c88a7d40442/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f6e6f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/d25cefd0982bdce2eef5c287a5ed0c88a7d40442/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f6e6f2e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/no.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Norwegian&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/nb_NO.po"&gt;nb_NO&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mats Estensen (&lt;a href="mailto:code@mxe.no"&gt;code@mxe.no&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;94%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/cba31a62f16e5f8a4f13438cdfb536eea1ce9ab5/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f69722e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/cba31a62f16e5f8a4f13438cdfb536eea1ce9ab5/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f69722e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/ir.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Persian&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/fa.po"&gt;fa&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mehrad Mahmoudian (&lt;a href="mailto:mehrad@mahmoudian.me"&gt;mehrad@mahmoudian.me&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;42%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b18acaf7ce8029259fd8a428e3802bba91ce8efd/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f706c2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/b18acaf7ce8029259fd8a428e3802bba91ce8efd/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f706c2e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/pl.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Polski&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/pl_PL.po"&gt;pl_PL&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;85%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/3e57114e37fd30429fe1e7c53ad34201ac1ad938/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f62722e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/3e57114e37fd30429fe1e7c53ad34201ac1ad938/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f62722e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/br.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Português (Brasil)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/pt_BR.po"&gt;pt_BR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Marton Paulo (&lt;a href="mailto:martonpss@gmail.com"&gt;martonpss@gmail.com&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;98%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/f113818716b8f21aa230d0d70e8fd21ea270bd45/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f726f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/f113818716b8f21aa230d0d70e8fd21ea270bd45/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f726f2e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/ro.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Română&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/ro.po"&gt;ro&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;44%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/de5479776b215ff854f1a74f272a46af6ba3ef1d/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f73692e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/de5479776b215ff854f1a74f272a46af6ba3ef1d/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f73692e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/si.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Slovenian&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/sl_SI.po"&gt;sl_SI&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;55%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/283f85b19f1679a39b54944885ded8244de702d4/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f73652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/283f85b19f1679a39b54944885ded8244de702d4/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f73652e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/se.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Svenska&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/sv.po"&gt;sv&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Jonatan Nyberg (&lt;a href="mailto:jonatan@autistici.org"&gt;jonatan@autistici.org&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;76%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/eb26dfd62061af0d94dff29c08e456e51963b323/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f74722e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/eb26dfd62061af0d94dff29c08e456e51963b323/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f74722e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/tr.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Türkçe&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/tr_TR.po"&gt;tr_TR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Zorbey Doğangüneş (&lt;a href="mailto:zorbeyd@gmail.com"&gt;zorbeyd@gmail.com&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;74%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/faadfc4154bb47fd556652e857d984f7fdb37c81/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f67722e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/faadfc4154bb47fd556652e857d984f7fdb37c81/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f67722e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/gr.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Ελληνικά&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/el_GR.po"&gt;el_GR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Harris Arvanitis (&lt;a href="mailto:xaris@tuta.io"&gt;xaris@tuta.io&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;99%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e39d58d4cee25c24892083a5d553f34ccd9a91e7/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f72752e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e39d58d4cee25c24892083a5d553f34ccd9a91e7/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f72752e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/ru.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Русский&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/ru_RU.po"&gt;ru_RU&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Artyom Karlov (&lt;a href="mailto:artyom.karlov@gmail.com"&gt;artyom.karlov@gmail.com&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;92%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/45a567fa360783f973af0bbb6cd56029281c6779/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f72732e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/45a567fa360783f973af0bbb6cd56029281c6779/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f72732e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/rs.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;српски језик&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/sr_RS.po"&gt;sr_RS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;85%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d9a094995db4437b563aca3b2a41e4d007cf35a4/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f636e2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/d9a094995db4437b563aca3b2a41e4d007cf35a4/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f636e2e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/cn.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;中文 (简体)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/zh_CN.po"&gt;zh_CN&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;92%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/f778956ebf5b91b122883e9d3b1034b1ef644110/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f74772e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/f778956ebf5b91b122883e9d3b1034b1ef644110/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f74772e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/tw.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;中文 (繁體)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/zh_TW.po"&gt;zh_TW&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;penguinsam (&lt;a href="mailto:samliu@gmail.com"&gt;samliu@gmail.com&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;68%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1673bc1b376dd4109fb7b3daeec7cc67625d229f/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f6a702e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/1673bc1b376dd4109fb7b3daeec7cc67625d229f/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f6a702e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/jp.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;日本語&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/ja_JP.po"&gt;ja_JP&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;genneko (&lt;a href="mailto:genneko217@gmail.com"&gt;genneko217@gmail.com&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;99%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/2cae282ef95abf2f0cf9eb4dc4f2eeb7aaecf4a4/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f6b722e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/2cae282ef95abf2f0cf9eb4dc4f2eeb7aaecf4a4/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f666c6167732f636f756e7472792d3478332f6b722e706e67" alt="" data-canonical-src="https://joplinapp.org/images/flags/country-4x3/kr.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;한국말&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/laurent22/joplin/blob/master/CliClient/locales/ko.po"&gt;ko&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;97%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h1&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h1&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;&lt;/th&gt;
&lt;th align="center"&gt;&lt;/th&gt;
&lt;th align="center"&gt;&lt;/th&gt;
&lt;th align="center"&gt;&lt;/th&gt;
&lt;th align="center"&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/1285584?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/1285584?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/laurent22"&gt;laurent22&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/223439?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/223439?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/tessus"&gt;tessus&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/2179547?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/2179547?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/CalebJohn"&gt;CalebJohn&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/4553672?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/4553672?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/tanrax"&gt;tanrax&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/8701534?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/8701534?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/rtmkrlv"&gt;rtmkrlv&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/10997189?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/10997189?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/fmrtn"&gt;fmrtn&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/16101778?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/16101778?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/gabcoh"&gt;gabcoh&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/1685517?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/1685517?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/Abijeet"&gt;Abijeet&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/10927304?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/10927304?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/matsest"&gt;matsest&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/6319051?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/6319051?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/abonte"&gt;abonte&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/208212?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/208212?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/foxmask"&gt;foxmask&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/6557454?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/6557454?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/innocuo"&gt;innocuo&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/4237724?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/4237724?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/alexdevero"&gt;alexdevero&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/6979755?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/6979755?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/devonzuegel"&gt;devonzuegel&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/5365582?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/5365582?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/marcosvega91"&gt;marcosvega91&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/37639389?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/37639389?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/petrz12"&gt;petrz12&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/3194829?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/3194829?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/moltenform"&gt;moltenform&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/5199995?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/5199995?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/zuphilip"&gt;zuphilip&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/1904967?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/1904967?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/readingsnail"&gt;readingsnail&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/31567272?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/31567272?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/0ndrey"&gt;0ndrey&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/559346?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/559346?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/metbril"&gt;metbril&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/6734573?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/6734573?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/stweil"&gt;stweil&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/937861?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/937861?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/archont00"&gt;archont00&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/32770029?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/32770029?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/bradmcl"&gt;bradmcl&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/29672555?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/29672555?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/genneko"&gt;genneko&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/22592201?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/22592201?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/tfinnberg"&gt;tfinnberg&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/102242?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/102242?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/nathanleiby"&gt;nathanleiby&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/226708?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/226708?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/RaphaelKimmig"&gt;RaphaelKimmig&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/17768566?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/17768566?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/RenatoXSR"&gt;RenatoXSR&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/36303913?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/36303913?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/sensor-freak"&gt;sensor-freak&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/4245227?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/4245227?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/zblesk"&gt;zblesk&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/560571?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/560571?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/chrisb86"&gt;chrisb86&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/2733783?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/2733783?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/JOJ0"&gt;JOJ0&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/339645?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/339645?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/jmontane"&gt;jmontane&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/4168339?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/4168339?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/solariz"&gt;solariz&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/390889?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/390889?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/mmahmoudian"&gt;mmahmoudian&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/25288?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/25288?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/maicki"&gt;maicki&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/2136373?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/2136373?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/mjjzf"&gt;mjjzf&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/4497566?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/4497566?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/rccavalcanti"&gt;rccavalcanti&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/27608187?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/27608187?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/rt-oliveira"&gt;rt-oliveira&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/2486806?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/2486806?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/sebastienjust"&gt;sebastienjust&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/1540054?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/1540054?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/ShaneKilkelly"&gt;ShaneKilkelly&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/4079047?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/4079047?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/Zorbeyd"&gt;Zorbeyd&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/35413451?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/35413451?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/chenlhlinux"&gt;chenlhlinux&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/17399340?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/17399340?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/pf-siedler"&gt;pf-siedler&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/17232523?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/17232523?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/ruuti"&gt;ruuti&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/23638148?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/23638148?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/s1nceri7y"&gt;s1nceri7y&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/7471938?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/7471938?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/ShuiHuo"&gt;ShuiHuo&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/11596277?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/11596277?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/ikunya"&gt;ikunya&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/3660978?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/3660978?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/alanfortlink"&gt;alanfortlink&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/4408379?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/4408379?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/lex111"&gt;lex111&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/498326?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/498326?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/Shaxine"&gt;Shaxine&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/7034200?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/7034200?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/bimlas"&gt;bimlas&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/105843?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/105843?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/chaifeng"&gt;chaifeng&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/549349?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/549349?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/charles-e"&gt;charles-e&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/1686759?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/1686759?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/chrmoritz"&gt;chrmoritz&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/28535750?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/28535750?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/NeverMendel"&gt;NeverMendel&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/10371667?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/10371667?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/domgoodwin"&gt;domgoodwin&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/5131923?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/5131923?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/donbowman"&gt;donbowman&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/47756?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/47756?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/dflock"&gt;dflock&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/1962738?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/1962738?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/einverne"&gt;einverne&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/628474?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/628474?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/Atalanttore"&gt;Atalanttore&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/16492558?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/16492558?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/eodeluga"&gt;eodeluga&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/1714374?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/1714374?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/FleischKarussel"&gt;FleischKarussel&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/6190183?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/6190183?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/gmag11"&gt;gmag11&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/2257024?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/2257024?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/gusbemacbe"&gt;gusbemacbe&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/18524580?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/18524580?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/Fvbor"&gt;Fvbor&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/22606250?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/22606250?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/bennetthanna"&gt;bennetthanna&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/3379379?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/3379379?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/sczhg"&gt;sczhg&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/1716229?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/1716229?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/Vistaus"&gt;Vistaus&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/1533624?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/1533624?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/IrvinDominin"&gt;IrvinDominin&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/19985741?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/19985741?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/JRaiden16"&gt;JRaiden16&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/11466782?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/11466782?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/jacobherrington"&gt;jacobherrington&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/4995433?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/4995433?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/jaredcrowe"&gt;jaredcrowe&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/163555?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/163555?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/JoelRSimpson"&gt;JoelRSimpson&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/23194385?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/23194385?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/jony0008"&gt;jony0008&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/6048003?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/6048003?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/joybinchen"&gt;joybinchen&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/1560189?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/1560189?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/y-usuzumi"&gt;y-usuzumi&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/1660460?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/1660460?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/xuhcc"&gt;xuhcc&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/7824233?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/7824233?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/kklas"&gt;kklas&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/2599210?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/2599210?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/lboullo0"&gt;lboullo0&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/1562062?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/1562062?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/dbinary"&gt;dbinary&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/5699725?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/5699725?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/mvonmaltitz"&gt;mvonmaltitz&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/5788516?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/5788516?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/Marmo"&gt;Marmo&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/12831489?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/12831489?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/mgroth0"&gt;mgroth0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/21796?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/21796?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/silentmatt"&gt;silentmatt&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/51273874?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/51273874?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/MichipX"&gt;MichipX&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/53177864?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/53177864?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/MrTraduttore"&gt;MrTraduttore&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/9076687?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/9076687?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/NJannasch"&gt;NJannasch&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/12369770?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/12369770?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/Ouvill"&gt;Ouvill&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/43815417?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/43815417?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/shorty2380"&gt;shorty2380&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/6306608?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/6306608?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/Diadlo"&gt;Diadlo&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/8766773?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/8766773?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/Cogitri"&gt;Cogitri&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/17312341?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/17312341?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/reinhart1010"&gt;reinhart1010&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/744655?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/744655?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/ruzaq"&gt;ruzaq&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/19328605?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/19328605?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/SamuelBlickle"&gt;SamuelBlickle&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/9937486?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/9937486?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/SFoskitt"&gt;SFoskitt&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/1782292?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/1782292?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/SubodhDahal"&gt;SubodhDahal&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/505011?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/505011?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/kcrt"&gt;kcrt&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/538584?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/538584?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/xissy"&gt;xissy&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/466122?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/466122?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/Tekki"&gt;Tekki&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/8731922?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/8731922?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/tbroadley"&gt;tbroadley&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/114300?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/114300?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/Kriechi"&gt;Kriechi&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/3457339?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/3457339?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/tkilaker"&gt;tkilaker&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/4201229?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/4201229?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/tcyrus"&gt;tcyrus&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/834914?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/834914?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/tobias-grasse"&gt;tobias-grasse&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/6691273?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/6691273?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/strobeltobias"&gt;strobeltobias&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/70296?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/70296?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/tbergeron"&gt;tbergeron&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/6104498?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/6104498?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/MyTheValentinus"&gt;MyTheValentinus&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/3985557?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/3985557?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/XarisA"&gt;XarisA&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/11031696?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/11031696?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/ymitsos"&gt;ymitsos&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/5077221?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/5077221?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/axq"&gt;axq&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/28493662?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/28493662?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/cdorin93"&gt;cdorin93&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/30935096?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/30935096?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/cybertramp"&gt;cybertramp&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/9694906?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/9694906?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/delta-emil"&gt;delta-emil&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/926263?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/926263?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/doc75"&gt;doc75&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/2903013?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/2903013?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/ebayer"&gt;ebayer&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/18619090?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/18619090?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/exponentactivity"&gt;exponentactivity&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/47755037?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/47755037?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/fabianski7"&gt;fabianski7&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/14201321?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/14201321?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/rasperepodvipodvert"&gt;rasperepodvipodvert&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/11388094?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/11388094?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/hydrandt"&gt;hydrandt&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/4140247?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/4140247?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/luzpaz"&gt;luzpaz&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/36965591?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/36965591?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/daehruoydeef"&gt;daehruoydeef&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/42961947?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/42961947?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/pensierocrea"&gt;pensierocrea&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/10206967?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/10206967?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/rhtenhove"&gt;rhtenhove&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars3.githubusercontent.com/u/14062932?v=4"&gt;&lt;img width="50" src="https://avatars3.githubusercontent.com/u/14062932?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/simonsan"&gt;simonsan&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars2.githubusercontent.com/u/5004545?v=4"&gt;&lt;img width="50" src="https://avatars2.githubusercontent.com/u/5004545?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/stellarpower"&gt;stellarpower&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/12995773?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/12995773?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/sumomo-99"&gt;sumomo-99&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/10956653?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/10956653?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/tcassaert"&gt;tcassaert&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/2216902?v=4"&gt;&lt;img width="50" src="https://avatars0.githubusercontent.com/u/2216902?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/xcffl"&gt;xcffl&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars1.githubusercontent.com/u/1308646?v=4"&gt;&lt;img width="50" src="https://avatars1.githubusercontent.com/u/1308646?v=4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://api.github.com/users/zhangmx"&gt;zhangmx&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h1&gt;&lt;a id="user-content-known-bugs" class="anchor" aria-hidden="true" href="#known-bugs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Known bugs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Resources larger than 10 MB are not currently supported on mobile. They will crash the application so it is recommended not to attach such resources at the moment. The issue is being looked at.&lt;/li&gt;
&lt;li&gt;Non-alphabetical characters such as Chinese or Arabic might create glitches in the terminal on Windows. This is a limitation of the current Windows console.&lt;/li&gt;
&lt;li&gt;It is only possible to upload files of up to 4MB to OneDrive due to a limitation of &lt;a href="https://docs.microsoft.com/en-gb/onedrive/developer/rest-api/api/driveitem_put_content" rel="nofollow"&gt;the API&lt;/a&gt; being currently used. There is currently no plan to support OneDrive "large file" API.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;MIT License&lt;/p&gt;
&lt;p&gt;Copyright (c) 2016-2019 Laurent Cozic&lt;/p&gt;
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt;
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt;
&lt;p&gt;THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>laurent22</author><guid isPermaLink="false">https://github.com/laurent22/joplin</guid><pubDate>Tue, 19 Nov 2019 00:25:00 GMT</pubDate></item></channel></rss>