<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Vim script, This week</title><link>https://github.com/trending/vim-script?since=weekly</link><description>The top repositories on GitHub for vim-script, measured weekly</description><pubDate>Tue, 28 Jan 2020 01:13:01 GMT</pubDate><lastBuildDate>Tue, 28 Jan 2020 01:13:01 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>vim/vim #1 in Vim script, This week</title><link>https://github.com/vim/vim</link><description>&lt;p&gt;&lt;i&gt;The official Vim repository&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/vim/vim/blob/master/runtime/vimlogo.gif"&gt;&lt;img src="https://github.com/vim/vim/raw/master/runtime/vimlogo.gif" alt="Vim Logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/vim/vim" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b172ab47c4e06b7aec3d7515531738d49045ee3a/68747470733a2f2f7472617669732d63692e6f72672f76696d2f76696d2e7376673f6272616e63683d6d6173746572" alt="Travis Build Status" data-canonical-src="https://travis-ci.org/vim/vim.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/chrisbra/vim" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8aa55437d90d2b14ccd5f4470dd8075706e36f05/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6f32716874326b6a6d3032736767686b3f7376673d74727565" alt="Appveyor Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/o2qht2kjm02sgghk?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cirrus-ci.com/github/vim/vim" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aa5c521ba20405cdaec3cd8e301c4a444e8dbbc7/68747470733a2f2f6170692e6369727275732d63692e636f6d2f6769746875622f76696d2f76696d2e737667" alt="Cirrus Build Status" data-canonical-src="https://api.cirrus-ci.com/github/vim/vim.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/vim/vim?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e7ecfd0a2c2ff695591f7f7329e4d45ab25ae57b/68747470733a2f2f636f6465636f762e696f2f67682f76696d2f76696d2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://codecov.io/gh/vim/vim/coverage.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://scan.coverity.com/projects/vim" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9db67b0c72e670d9417825f9699c91349de926fd/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f3234312f62616467652e737667" alt="Coverity Scan" data-canonical-src="https://scan.coverity.com/projects/241/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://lgtm.com/projects/g/vim/vim/context:cpp" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5394c26426edce405ef1623fb0cf98e645928e96/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f6370702f672f76696d2f76696d2e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138" alt="Language Grade: C/C++" data-canonical-src="https://img.shields.io/lgtm/grade/cpp/g/vim/vim.svg?logo=lgtm&amp;amp;logoWidth=18" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://buildd.debian.org/vim" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c20c37835029e703f2d74fb6afb2d82d16e91825/68747470733a2f2f6261646765732e64656269616e2e6e65742f6261646765732f64656269616e2f74657374696e672f76696d2f76657273696f6e2e737667" alt="Debian CI" data-canonical-src="https://badges.debian.net/badges/debian/testing/vim/version.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://repology.org/metapackage/vim" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a0ea0ab9e756490dd2fe4bf44a74f73a750617f9/68747470733a2f2f7265706f6c6f67792e6f72672f62616467652f74696e792d7265706f732f76696d2e737667" alt="Packages" data-canonical-src="https://repology.org/badge/tiny-repos/vim.svg" style="max-width:100%;"&gt;&lt;/a&gt;
For translations of this README see the end.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-vim" class="anchor" aria-hidden="true" href="#what-is-vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is Vim?&lt;/h2&gt;
&lt;p&gt;Vim is a greatly improved version of the good old UNIX editor Vi.  Many new
features have been added: multi-level undo, syntax highlighting, command line
history, on-line help, spell checking, filename completion, block operations,
script language, etc.  There is also a Graphical User Interface (GUI)
available.  Still, Vi compatibility is maintained, those who have Vi "in the
fingers" will feel at home.  See &lt;code&gt;runtime/doc/vi_diff.txt&lt;/code&gt; for differences with
Vi.&lt;/p&gt;
&lt;p&gt;This editor is very useful for editing programs and other plain text files.
All commands are given with normal keyboard characters, so those who can type
with ten fingers can work very fast.  Additionally, function keys can be
mapped to commands by the user, and the mouse can be used.&lt;/p&gt;
&lt;p&gt;Vim runs under MS-Windows (XP, Vista, 7, 8, 10), macOS, VMS and almost all
flavours of UNIX.  Porting to other systems should not be very difficult.
Older versions of Vim run on MS-DOS, MS-Windows 95/98/Me/NT/2000, Amiga DOS,
Atari MiNT, BeOS, RISC OS and OS/2.  These are no longer maintained.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-distribution" class="anchor" aria-hidden="true" href="#distribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Distribution&lt;/h2&gt;
&lt;p&gt;You can often use your favorite package manager to install Vim.  On Mac and
Linux a small version of Vim is pre-installed, you still need to install Vim
if you want more features.&lt;/p&gt;
&lt;p&gt;There are separate distributions for Unix, PC, Amiga and some other systems.
This &lt;code&gt;README.md&lt;/code&gt; file comes with the runtime archive.  It includes the
documentation, syntax files and other files that are used at runtime.  To run
Vim you must get either one of the binary archives or a source archive.
Which one you need depends on the system you want to run it on and whether you
want or must compile it yourself.  Check &lt;a href="http://www.vim.org/download.php" rel="nofollow"&gt;http://www.vim.org/download.php&lt;/a&gt; for
an overview of currently available distributions.&lt;/p&gt;
&lt;p&gt;Some popular places to get the latest Vim:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Check out the git repository from &lt;a href="https://github.com/vim/vim"&gt;github&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Get the source code as an &lt;a href="https://github.com/vim/vim/releases"&gt;archive&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Get a Windows executable from the
&lt;a href="https://github.com/vim/vim-win32-installer/releases"&gt;vim-win32-installer&lt;/a&gt; repository.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-compiling" class="anchor" aria-hidden="true" href="#compiling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling&lt;/h2&gt;
&lt;p&gt;If you obtained a binary distribution you don't need to compile Vim.  If you
obtained a source distribution, all the stuff for compiling Vim is in the
&lt;code&gt;src&lt;/code&gt; directory.  See &lt;code&gt;src/INSTALL&lt;/code&gt; for instructions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;See one of these files for system-specific instructions.  Either in the
READMEdir directory (in the repository) or the top directory (if you unpack an
archive):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;README_ami.txt		Amiga
README_unix.txt		Unix
README_dos.txt		MS-DOS and MS-Windows
README_mac.txt		Macintosh
README_vms.txt		VMS
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There are other &lt;code&gt;README_*.txt&lt;/code&gt; files, depending on the distribution you used.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;The Vim tutor is a one hour training course for beginners.  Often it can be
started as &lt;code&gt;vimtutor&lt;/code&gt;.  See &lt;code&gt;:help tutor&lt;/code&gt; for more information.&lt;/p&gt;
&lt;p&gt;The best is to use &lt;code&gt;:help&lt;/code&gt; in Vim.  If you don't have an executable yet, read
&lt;code&gt;runtime/doc/help.txt&lt;/code&gt;.  It contains pointers to the other documentation
files.  The User Manual reads like a book and is recommended to learn to use
Vim.  See &lt;code&gt;:help user-manual&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-copying" class="anchor" aria-hidden="true" href="#copying"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copying&lt;/h2&gt;
&lt;p&gt;Vim is Charityware.  You can use and copy it as much as you like, but you are
encouraged to make a donation to help orphans in Uganda.  Please read the file
&lt;code&gt;runtime/doc/uganda.txt&lt;/code&gt; for details (do &lt;code&gt;:help uganda&lt;/code&gt; inside Vim).&lt;/p&gt;
&lt;p&gt;Summary of the license: There are no restrictions on using or distributing an
unmodified copy of Vim.  Parts of Vim may also be distributed, but the license
text must always be included.  For modified versions a few restrictions apply.
The license is GPL compatible, you may compile Vim with GPL libraries and
distribute it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sponsoring" class="anchor" aria-hidden="true" href="#sponsoring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsoring&lt;/h2&gt;
&lt;p&gt;Fixing bugs and adding new features takes a lot of time and effort.  To show
your appreciation for the work and motivate Bram and others to continue
working on Vim please send a donation.&lt;/p&gt;
&lt;p&gt;Since Bram is back to a paid job the money will now be used to help children
in Uganda.  See &lt;code&gt;runtime/doc/uganda.txt&lt;/code&gt;.  But at the same time donations
increase Bram's motivation to keep working on Vim!&lt;/p&gt;
&lt;p&gt;For the most recent information about sponsoring look on the Vim web site:
&lt;a href="http://www.vim.org/sponsor/" rel="nofollow"&gt;http://www.vim.org/sponsor/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;If you would like to help making Vim better, see the &lt;a href="https://github.com/vim/vim/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; file.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-information" class="anchor" aria-hidden="true" href="#information"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Information&lt;/h2&gt;
&lt;p&gt;The latest news about Vim can be found on the Vim home page:
&lt;a href="http://www.vim.org/" rel="nofollow"&gt;http://www.vim.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you have problems, have a look at the Vim documentation or tips:
&lt;a href="http://www.vim.org/docs.php" rel="nofollow"&gt;http://www.vim.org/docs.php&lt;/a&gt;
&lt;a href="http://vim.wikia.com/wiki/Vim_Tips_Wiki" rel="nofollow"&gt;http://vim.wikia.com/wiki/Vim_Tips_Wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you still have problems or any other questions, use one of the mailing
lists to discuss them with Vim users and developers:
&lt;a href="http://www.vim.org/maillist.php" rel="nofollow"&gt;http://www.vim.org/maillist.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If nothing else works, report bugs directly:
Bram Moolenaar &lt;a href="mailto:Bram@vim.org"&gt;Bram@vim.org&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-main-author" class="anchor" aria-hidden="true" href="#main-author"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Main author&lt;/h2&gt;
&lt;p&gt;Send any other comments, patches, flowers and suggestions to:
Bram Moolenaar &lt;a href="mailto:Bram@vim.org"&gt;Bram@vim.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is &lt;code&gt;README.md&lt;/code&gt; for version 8.2 of Vim: Vi IMproved.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-translations-of-this-readme" class="anchor" aria-hidden="true" href="#translations-of-this-readme"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Translations of this README&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/cjw1359/opensource/blob/master/Vim/README_ko.md"&gt;Korean&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>vim</author><guid isPermaLink="false">https://github.com/vim/vim</guid><pubDate>Tue, 28 Jan 2020 00:01:00 GMT</pubDate></item><item><title>junegunn/vim-plug #2 in Vim script, This week</title><link>https://github.com/junegunn/vim-plug</link><description>&lt;p&gt;&lt;i&gt;:hibiscus: Minimalist Vim Plugin Manager&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.png"&gt;&lt;img src="https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.png" height="75" alt="vim-plug" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://travis-ci.org/junegunn/vim-plug" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8eb12d9521d9a2d8694d8cecd167589c72163050/68747470733a2f2f7472617669732d63692e6f72672f6a756e6567756e6e2f76696d2d706c75672e7376673f6272616e63683d6d6173746572" alt="travis-ci" data-canonical-src="https://travis-ci.org/junegunn/vim-plug.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;A minimalist Vim plugin manager.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/junegunn/i/master/vim-plug/installer.gif"&gt;&lt;img src="https://raw.githubusercontent.com/junegunn/i/master/vim-plug/installer.gif" height="450" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pros" class="anchor" aria-hidden="true" href="#pros"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pros.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Easier to setup: Single file. No boilerplate code required.&lt;/li&gt;
&lt;li&gt;Easier to use: Concise, intuitive syntax&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/i/master/vim-plug/40-in-4.gif" rel="nofollow"&gt;Super-fast&lt;/a&gt; parallel installation/update
(with any of &lt;code&gt;+job&lt;/code&gt;, &lt;code&gt;+python&lt;/code&gt;, &lt;code&gt;+python3&lt;/code&gt;, &lt;code&gt;+ruby&lt;/code&gt;, or &lt;a href="http://neovim.org/" rel="nofollow"&gt;Neovim&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Creates shallow clones to minimize disk space usage and download time&lt;/li&gt;
&lt;li&gt;On-demand loading for &lt;a href="https://github.com/junegunn/vim-startuptime-benchmark#result"&gt;faster startup time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Can review and rollback updates&lt;/li&gt;
&lt;li&gt;Branch/tag/commit support&lt;/li&gt;
&lt;li&gt;Post-update hooks&lt;/li&gt;
&lt;li&gt;Support for externally managed plugins&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim" rel="nofollow"&gt;Download plug.vim&lt;/a&gt;
and put it in the "autoload" directory.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-vim" class="anchor" aria-hidden="true" href="#vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vim&lt;/h4&gt;
&lt;h6&gt;&lt;a id="user-content-unix" class="anchor" aria-hidden="true" href="#unix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unix&lt;/h6&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;curl -fLo &lt;span class="pl-k"&gt;~&lt;/span&gt;/.vim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can automate the process by putting the command in your Vim configuration
file as suggested &lt;a href="https://github.com/junegunn/vim-plug/wiki/tips#automatic-installation"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;&lt;a id="user-content-windows-powershell" class="anchor" aria-hidden="true" href="#windows-powershell"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows (PowerShell)&lt;/h6&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;md ~\vimfiles\autoload
&lt;span class="pl-smi"&gt;$uri&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
(&lt;span class="pl-c1"&gt;New-Object&lt;/span&gt; Net.WebClient).DownloadFile(
  &lt;span class="pl-smi"&gt;$uri&lt;/span&gt;&lt;span class="pl-k"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;$ExecutionContext&lt;span class="pl-smi"&gt;.SessionState.Path.GetUnresolvedProviderPathFromPSPath&lt;/span&gt;&lt;/span&gt;(
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~\vimfiles\autoload\plug.vim&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  )
)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-neovim" class="anchor" aria-hidden="true" href="#neovim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Neovim&lt;/h4&gt;
&lt;h6&gt;&lt;a id="user-content-unix-1" class="anchor" aria-hidden="true" href="#unix-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unix&lt;/h6&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;curl -fLo &lt;span class="pl-k"&gt;~&lt;/span&gt;/.local/share/nvim/site/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;&lt;a id="user-content-windows-powershell-1" class="anchor" aria-hidden="true" href="#windows-powershell-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows (PowerShell)&lt;/h6&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;md ~\AppData\Local\nvim\autoload
&lt;span class="pl-smi"&gt;$uri&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
(&lt;span class="pl-c1"&gt;New-Object&lt;/span&gt; Net.WebClient).DownloadFile(
  &lt;span class="pl-smi"&gt;$uri&lt;/span&gt;&lt;span class="pl-k"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;$ExecutionContext&lt;span class="pl-smi"&gt;.SessionState.Path.GetUnresolvedProviderPathFromPSPath&lt;/span&gt;&lt;/span&gt;(
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~\AppData\Local\nvim\autoload\plug.vim&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  )
)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;See &lt;a href="https://github.com/junegunn/vim-plug/wiki/tutorial"&gt;tutorial&lt;/a&gt; page to learn the basics of vim-plug&lt;/li&gt;
&lt;li&gt;See &lt;a href="https://github.com/junegunn/vim-plug/wiki/tips"&gt;tips&lt;/a&gt; and &lt;a href="https://github.com/junegunn/vim-plug/wiki/faq"&gt;FAQ&lt;/a&gt; pages for common problems and questions&lt;/li&gt;
&lt;li&gt;See &lt;a href="https://github.com/junegunn/vim-plug/wiki/requirements"&gt;requirements&lt;/a&gt; page for debugging information &amp;amp; tested configurations&lt;/li&gt;
&lt;li&gt;Create an &lt;a href="https://github.com/junegunn/vim-plug/issues/new"&gt;issue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h3&gt;
&lt;p&gt;Add a vim-plug section to your &lt;code&gt;~/.vimrc&lt;/code&gt; (or &lt;code&gt;stdpath('config') . '/init.vim'&lt;/code&gt; for Neovim)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Begin the section with &lt;code&gt;call plug#begin()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;List the plugins with &lt;code&gt;Plug&lt;/code&gt; commands&lt;/li&gt;
&lt;li&gt;&lt;code&gt;call plug#end()&lt;/code&gt; to update &lt;code&gt;&amp;amp;runtimepath&lt;/code&gt; and initialize plugin system
&lt;ul&gt;
&lt;li&gt;Automatically executes &lt;code&gt;filetype plugin indent on&lt;/code&gt; and &lt;code&gt;syntax enable&lt;/code&gt;.
You can revert the settings after the call. e.g. &lt;code&gt;filetype indent off&lt;/code&gt;, &lt;code&gt;syntax off&lt;/code&gt;, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h4&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Specify a directory for plugins&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; - For Neovim: stdpath('data') . '/plugged'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; - Avoid using standard Vim directory names like 'plugin'&lt;/span&gt;
&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;plug#begin&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~/.vim/plugged&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Make sure you use single quotes&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Shorthand notation; fetches https://github.com/junegunn/vim-easy-align&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;junegunn/vim-easy-align&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Any valid git URL is allowed&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://github.com/junegunn/vim-github-dashboard.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Multiple Plug commands can be written in a single line using | separators&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SirVer/ultisnips&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; | Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;honza/vim-snippets&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; On-demand loading&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;scrooloose/nerdtree&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;on&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;:  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;NERDTreeToggle&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;tpope/vim-fireplace&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;for&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;clojure&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Using a non-master branch&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rdnetto/YCM-Generator&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;branch&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;stable&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Using a tagged release; wildcard allowed (requires git 1.9.2 or above)&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fatih/vim-go&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;tag&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Plugin options&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nsf/gocode&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;tag&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;v.20150303&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rtp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;vim&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Plugin outside ~/.vim/plugged with post-update hook&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;junegunn/fzf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;dir&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~/.fzf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;do&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./install --all&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Unmanaged plugin (manually installed and updated)&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~/my-prototype-plugin&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Initialize plugin system&lt;/span&gt;
&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;plug#end&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reload .vimrc and &lt;code&gt;:PlugInstall&lt;/code&gt; to install plugins.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-commands" class="anchor" aria-hidden="true" href="#commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commands&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PlugInstall [name ...] [#threads]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Install plugins&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PlugUpdate [name ...] [#threads]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Install or update plugins&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PlugClean[!]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Remove unlisted plugins (bang version will clean without prompt)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PlugUpgrade&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Upgrade vim-plug itself&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PlugStatus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Check the status of plugins&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PlugDiff&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Examine changes from the previous update and the pending changes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;PlugSnapshot[!] [output path]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Generate script for restoring the current snapshot of the plugins&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-plug-options" class="anchor" aria-hidden="true" href="#plug-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Plug&lt;/code&gt; options&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;branch&lt;/code&gt;/&lt;code&gt;tag&lt;/code&gt;/&lt;code&gt;commit&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Branch/tag/commit of the repository to use&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rtp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Subdirectory that contains Vim plugin&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dir&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Custom directory for the plugin&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;as&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Use different name for the plugin&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;do&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Post-update hook (string or funcref)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;on&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;On-demand loading: Commands or &lt;code&gt;&amp;lt;Plug&amp;gt;&lt;/code&gt;-mappings&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;for&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;On-demand loading: File types&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;frozen&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Do not update unless explicitly specified&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-global-options" class="anchor" aria-hidden="true" href="#global-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Global options&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Flag&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;g:plug_threads&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;Default number of threads to use&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;g:plug_timeout&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;60&lt;/td&gt;
&lt;td&gt;Time limit of each task in seconds (&lt;em&gt;Ruby &amp;amp; Python&lt;/em&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;g:plug_retries&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Number of retries in case of timeout (&lt;em&gt;Ruby &amp;amp; Python&lt;/em&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;g:plug_shallow&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Use shallow clone&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;g:plug_window&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vertical topleft new&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Command to open plug window&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;g:plug_pwindow&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;above 12new&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Command to open preview window in &lt;code&gt;PlugDiff&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;g:plug_url_format&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;https://git::@github.com/%s.git&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;printf&lt;/code&gt; format to build repo URL (Only applies to the subsequent &lt;code&gt;Plug&lt;/code&gt; commands)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-keybindings" class="anchor" aria-hidden="true" href="#keybindings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keybindings&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;D&lt;/code&gt; - &lt;code&gt;PlugDiff&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;S&lt;/code&gt; - &lt;code&gt;PlugStatus&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;R&lt;/code&gt; - Retry failed update or installation tasks&lt;/li&gt;
&lt;li&gt;&lt;code&gt;U&lt;/code&gt; - Update plugins in the selected range&lt;/li&gt;
&lt;li&gt;&lt;code&gt;q&lt;/code&gt; - Close the window&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:PlugStatus&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;L&lt;/code&gt; - Load plugin&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:PlugDiff&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;X&lt;/code&gt; - Revert the update&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-example-a-small-sensible-vim-configuration" class="anchor" aria-hidden="true" href="#example-a-small-sensible-vim-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example: A small &lt;a href="https://github.com/tpope/vim-sensible"&gt;sensible&lt;/a&gt; Vim configuration&lt;/h3&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;plug#begin&lt;/span&gt;()
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;tpope/vim-sensible&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;plug#end&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-on-demand-loading-of-plugins" class="anchor" aria-hidden="true" href="#on-demand-loading-of-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;On-demand loading of plugins&lt;/h3&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; NERD tree will be loaded on the first invocation of NERDTreeToggle command&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;scrooloose/nerdtree&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;on&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;NERDTreeToggle&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Multiple commands&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;junegunn/vim-github-dashboard&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;on&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GHDashboard&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GHActivity&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Loaded when clojure file is opened&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;tpope/vim-fireplace&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;for&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;clojure&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Multiple file types&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;kovisoft/paredit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;for&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;clojure&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;scheme&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; On-demand loading on both conditions&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;junegunn/vader.vim&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,  { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;on&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Vader&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;for&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;vader&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Code to execute when the plugin is lazily loaded on demand&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;junegunn/goyo.vim&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;for&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;markdown&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-c1"&gt;User&lt;/span&gt; goyo.&lt;span class="pl-c1"&gt;vim&lt;/span&gt; &lt;span class="pl-c1"&gt;echom&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Goyo is now loaded!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;for&lt;/code&gt; option is generally not needed as most plugins for specific file types
usually don't have too much code in &lt;code&gt;plugin&lt;/code&gt; directory. You might want to
examine the output of &lt;code&gt;vim --startuptime&lt;/code&gt; before applying the option.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-post-update-hooks" class="anchor" aria-hidden="true" href="#post-update-hooks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Post-update hooks&lt;/h3&gt;
&lt;p&gt;There are some plugins that require extra steps after installation or update.
In that case, use &lt;code&gt;do&lt;/code&gt; option to describe the task to be performed.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Shougo/vimproc.vim&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;do&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;make&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ycm-core/YouCompleteMe&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;do&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./install.py&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the value starts with &lt;code&gt;:&lt;/code&gt;, it will be recognized as a Vim command.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fatih/vim-go&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;do&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:GoInstallBinaries&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you need more control, you can pass a reference to a Vim function that
takes a single argument.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;BuildYCM&lt;/span&gt;(info)
&lt;span class="pl-c"&gt;  &lt;span class="pl-c"&gt;"&lt;/span&gt; info is a dictionary with 3 fields&lt;/span&gt;
&lt;span class="pl-c"&gt;  &lt;span class="pl-c"&gt;"&lt;/span&gt; - name:   name of the plugin&lt;/span&gt;
&lt;span class="pl-c"&gt;  &lt;span class="pl-c"&gt;"&lt;/span&gt; - status: 'installed', 'updated', or 'unchanged'&lt;/span&gt;
&lt;span class="pl-c"&gt;  &lt;span class="pl-c"&gt;"&lt;/span&gt; - force:  set on PlugInstall! or PlugUpdate!&lt;/span&gt;
  &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;a:&lt;/span&gt;info&lt;/span&gt;.status &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;installed&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;a:&lt;/span&gt;info&lt;/span&gt;.force
    &lt;span class="pl-k"&gt;!&lt;/span&gt;./install.&lt;span class="pl-c1"&gt;py&lt;/span&gt;
  &lt;span class="pl-k"&gt;endif&lt;/span&gt;
&lt;span class="pl-k"&gt;endfunction&lt;/span&gt;

Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ycm-core/YouCompleteMe&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;do&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;BuildYCM&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Both forms of post-update hook are executed inside the directory of the plugin
and only run when the repository has changed, but you can force it to run
unconditionally with the bang-versions of the commands: &lt;code&gt;PlugInstall!&lt;/code&gt; and
&lt;code&gt;PlugUpdate!&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Make sure to escape BARs and double-quotes when you write &lt;code&gt;do&lt;/code&gt; option inline
as they are mistakenly recognized as command separator or the start of the
trailing comment.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;junegunn/fzf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;do&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;yes \| ./install&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But you can avoid the escaping if you extract the inline specification using a
variable (or any Vimscript expression) as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;fzf_install&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;yes | ./install&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;junegunn/fzf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;do&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;fzf_install&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-pluginstall-and-plugupdate" class="anchor" aria-hidden="true" href="#pluginstall-and-plugupdate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;PlugInstall!&lt;/code&gt; and &lt;code&gt;PlugUpdate!&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The installer takes the following steps when installing/updating a plugin:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;git clone&lt;/code&gt; or &lt;code&gt;git fetch&lt;/code&gt; from its origin&lt;/li&gt;
&lt;li&gt;Check out branch, tag, or commit and optionally &lt;code&gt;git merge&lt;/code&gt; remote branch&lt;/li&gt;
&lt;li&gt;If the plugin was updated (or installed for the first time)
&lt;ol&gt;
&lt;li&gt;Update submodules&lt;/li&gt;
&lt;li&gt;Execute post-update hooks&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The commands with &lt;code&gt;!&lt;/code&gt; suffix ensure that all steps are run unconditionally.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-articles" class="anchor" aria-hidden="true" href="#articles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Articles&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://junegunn.kr/2013/09/writing-my-own-vim-plugin-manager" rel="nofollow"&gt;Writing my own Vim plugin manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://junegunn.kr/2014/07/vim-plugins-and-startup-time" rel="nofollow"&gt;Vim plugins and startup time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;a href="http://junegunn.kr/2013/09/thoughts-on-vim-plugin-dependency" rel="nofollow"&gt;Thoughts on Vim plugin dependency&lt;/a&gt;&lt;/del&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Support for Plugfile has been removed since 0.5.0&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-collaborators" class="anchor" aria-hidden="true" href="#collaborators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Collaborators&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/janlazo"&gt;Jan Edmund Lazo&lt;/a&gt; - Windows support&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/starcraftman"&gt;Jeremy Pallats&lt;/a&gt; - Python installer&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h3&gt;
&lt;p&gt;MIT&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>junegunn</author><guid isPermaLink="false">https://github.com/junegunn/vim-plug</guid><pubDate>Tue, 28 Jan 2020 00:02:00 GMT</pubDate></item><item><title>junegunn/fzf.vim #3 in Vim script, This week</title><link>https://github.com/junegunn/fzf.vim</link><description>&lt;p&gt;&lt;i&gt;fzf :heart: vim&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-fzf-heart-vim" class="anchor" aria-hidden="true" href="#fzf-heart-vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;fzf &lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; vim&lt;/h1&gt;
&lt;p&gt;Things you can do with &lt;a href="https://github.com/junegunn/fzf"&gt;fzf&lt;/a&gt; and Vim.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-rationale" class="anchor" aria-hidden="true" href="#rationale"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rationale&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/junegunn/fzf"&gt;fzf&lt;/a&gt; in itself is not a Vim plugin, and the official repository only
provides the &lt;a href="https://github.com/junegunn/fzf/blob/master/README-VIM.md#fzfrun"&gt;basic wrapper function&lt;/a&gt; for Vim and it's up to the users to
write their own Vim commands with it. However, I've learned that many users of
fzf are not familiar with Vimscript and are looking for the "default"
implementation of the features they can find in the alternative Vim plugins.&lt;/p&gt;
&lt;p&gt;This repository is a bundle of fzf-based commands and mappings extracted from
my &lt;a href="https://github.com/junegunn/dotfiles/blob/master/vimrc"&gt;.vimrc&lt;/a&gt; to address such needs. They are &lt;em&gt;not&lt;/em&gt; designed to be
flexible or configurable, and there's no guarantee of backward-compatibility.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-why-you-should-use-fzf-on-vim" class="anchor" aria-hidden="true" href="#why-you-should-use-fzf-on-vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why you should use fzf on Vim&lt;/h2&gt;
&lt;p&gt;Because you can and you love fzf.&lt;/p&gt;
&lt;p&gt;fzf runs asynchronously and can be orders of magnitude faster than similar Vim
plugins. However, the benefit may not be noticeable if the size of the input
is small, which is the case for many of the commands provided here.
Nevertheless I wrote them anyway since it's really easy to implement custom
selector with fzf.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;fzf.vim depends on the basic Vim plugin of &lt;a href="https://github.com/junegunn/fzf"&gt;the main fzf
repository&lt;/a&gt;, which means you need to &lt;strong&gt;set up both "fzf" and
"fzf.vim" on Vim&lt;/strong&gt;. To learn more about fzf/Vim integration, see
&lt;a href="https://github.com/junegunn/fzf/blob/master/README-VIM.md"&gt;README-VIM&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-vim-plug" class="anchor" aria-hidden="true" href="#using-vim-plug"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using &lt;a href="https://github.com/junegunn/vim-plug"&gt;vim-plug&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If you already installed fzf using &lt;a href="https://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt;, the following
should suffice:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/usr/local/opt/fzf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;junegunn/fzf.vim&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But if you want to install fzf as well using vim-plug:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;junegunn/fzf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;dir&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~/.fzf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;do&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./install --all&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;junegunn/fzf.vim&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dir&lt;/code&gt; and &lt;code&gt;do&lt;/code&gt; options are not mandatory&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;./install --bin&lt;/code&gt; instead if you don't need fzf outside of Vim&lt;/li&gt;
&lt;li&gt;Make sure to use Vim 7.4 or above&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-commands" class="anchor" aria-hidden="true" href="#commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commands&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;List&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:Files [PATH]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Files (similar to &lt;code&gt;:FZF&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:GFiles [OPTS]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Git files (&lt;code&gt;git ls-files&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:GFiles?&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Git files (&lt;code&gt;git status&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:Buffers&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Open buffers&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:Colors&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Color schemes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:Ag [PATTERN]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/ggreer/the_silver_searcher"&gt;ag&lt;/a&gt; search result (&lt;code&gt;ALT-A&lt;/code&gt; to select all, &lt;code&gt;ALT-D&lt;/code&gt; to deselect all)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:Rg [PATTERN]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/BurntSushi/ripgrep"&gt;rg&lt;/a&gt; search result (&lt;code&gt;ALT-A&lt;/code&gt; to select all, &lt;code&gt;ALT-D&lt;/code&gt; to deselect all)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:Lines [QUERY]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Lines in loaded buffers&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:BLines [QUERY]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Lines in the current buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:Tags [QUERY]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tags in the project (&lt;code&gt;ctags -R&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:BTags [QUERY]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Tags in the current buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:Marks&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Marks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:Windows&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:Locate PATTERN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;locate&lt;/code&gt; command output&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:History&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;v:oldfiles&lt;/code&gt; and open buffers&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:History:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Command history&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:History/&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Search history&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:Snippets&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Snippets (&lt;a href="https://github.com/SirVer/ultisnips"&gt;UltiSnips&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:Commits&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Git commits (requires &lt;a href="https://github.com/tpope/vim-fugitive"&gt;fugitive.vim&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:BCommits&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Git commits for the current buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:Commands&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Commands&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:Maps&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Normal mode mappings&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:Helptags&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Help tags &lt;sup id="user-content-a1"&gt;&lt;a href="#helptags"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:Filetypes&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;File types&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;Most commands support &lt;code&gt;CTRL-T&lt;/code&gt; / &lt;code&gt;CTRL-X&lt;/code&gt; / &lt;code&gt;CTRL-V&lt;/code&gt; key
bindings to open in a new tab, a new split, or in a new vertical split&lt;/li&gt;
&lt;li&gt;Bang-versions of the commands (e.g. &lt;code&gt;Ag!&lt;/code&gt;) will open fzf in fullscreen&lt;/li&gt;
&lt;li&gt;You can set &lt;code&gt;g:fzf_command_prefix&lt;/code&gt; to give the same prefix to the commands
&lt;ul&gt;
&lt;li&gt;e.g. &lt;code&gt;let g:fzf_command_prefix = 'Fzf'&lt;/code&gt; and you have &lt;code&gt;FzfFiles&lt;/code&gt;, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;a name="user-content-helptags"&gt;1&lt;/a&gt;: &lt;code&gt;Helptags&lt;/code&gt; will shadow the command of the same name
from &lt;a href="https://github.com/tpope/vim-pathogen"&gt;pathogen&lt;/a&gt;. But its functionality is still available via &lt;code&gt;call pathogen#helptags()&lt;/code&gt;. &lt;a href="#a1"&gt;↩&lt;/a&gt;)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-customization" class="anchor" aria-hidden="true" href="#customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customization&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-global-options" class="anchor" aria-hidden="true" href="#global-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Global options&lt;/h3&gt;
&lt;p&gt;Every command in fzf.vim internally calls &lt;code&gt;fzf#wrap&lt;/code&gt; function of the main
repository which supports a set of global option variables. So please read
through &lt;a href="https://github.com/junegunn/fzf/blob/master/README-VIM.md"&gt;README-VIM&lt;/a&gt; to learn more about them.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-command-local-options" class="anchor" aria-hidden="true" href="#command-local-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command-local options&lt;/h3&gt;
&lt;p&gt;A few commands in fzf.vim can be customized with global option variables shown
below.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; [Buffers] Jump to the existing window if possible&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;fzf_buffers_jump&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; [[B]Commits] Customize the options used by 'git log':&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;fzf_commits_log_options&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--graph --color=always --format="%C(auto)%h%d %s %C(black)%C(bold)%cr"&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; [Tags] Command to generate tags file&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;fzf_tags_command&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ctags -R&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; [Commands] --expect expression for directly executing the command&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;fzf_commands_expect&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;alt-enter,ctrl-x&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-advanced-customization" class="anchor" aria-hidden="true" href="#advanced-customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced customization&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-vim-functions" class="anchor" aria-hidden="true" href="#vim-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vim functions&lt;/h4&gt;
&lt;p&gt;Each command in fzf.vim is backed by a Vim function. You can override
a command or define a variation of it by calling its corresponding function.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Vim function&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Files&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;fzf#vim#files(dir, [spec dict], [fullscreen bool])&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;GFiles&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;fzf#vim#gitfiles(git_options, [spec dict], [fullscreen bool])&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;GFiles?&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;fzf#vim#gitfiles('?', [spec dict], [fullscreen bool])&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Buffers&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;fzf#vim#buffers([spec dict], [fullscreen bool])&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Colors&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;fzf#vim#colors([spec dict], [fullscreen bool])&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Rg&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;fzf#vim#grep(command, [has_column bool], [spec dict], [fullscreen bool])&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;...&lt;/td&gt;
&lt;td&gt;...&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;(We can see that the last two optional arguments of each function are
identical. They are directly passed to &lt;code&gt;fzf#wrap&lt;/code&gt; function. If you haven't
read &lt;a href="https://github.com/junegunn/fzf/blob/master/README-VIM.md"&gt;README-VIM&lt;/a&gt; already, please read it before proceeding.)&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-example-customizing-files-command" class="anchor" aria-hidden="true" href="#example-customizing-files-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example: Customizing &lt;code&gt;Files&lt;/code&gt; command&lt;/h4&gt;
&lt;p&gt;This is the default definition of &lt;code&gt;Files&lt;/code&gt; command:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;command&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;bang&lt;/span&gt; -&lt;span class="pl-en"&gt;nargs&lt;/span&gt;=? -&lt;span class="pl-en"&gt;complete&lt;/span&gt;=&lt;span class="pl-c1"&gt;dir&lt;/span&gt; Files &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;fzf#vim#files&lt;/span&gt;(&lt;span class="pl-c1"&gt;&amp;lt;q-args&amp;gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;&amp;lt;bang&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's say you want to a variation of it called &lt;code&gt;ProjectFiles&lt;/code&gt; that only
searches inside &lt;code&gt;~/projects&lt;/code&gt; directory. Then you can do it like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;command&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;bang&lt;/span&gt; ProjectFiles &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;fzf#vim#files&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~/projects&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;&amp;lt;bang&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or, if you want to override the command with different fzf options, just pass
a custom spec to the function.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;command&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;bang&lt;/span&gt; -&lt;span class="pl-en"&gt;nargs&lt;/span&gt;=? -&lt;span class="pl-en"&gt;complete&lt;/span&gt;=&lt;span class="pl-c1"&gt;dir&lt;/span&gt; Files
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;fzf#vim#files&lt;/span&gt;(&lt;span class="pl-c1"&gt;&amp;lt;q-args&amp;gt;&lt;/span&gt;, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;options&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--layout=reverse&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--info=inline&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]}, &lt;span class="pl-c1"&gt;&amp;lt;bang&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Want a preview window?&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;command&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;bang&lt;/span&gt; -&lt;span class="pl-en"&gt;nargs&lt;/span&gt;=? -&lt;span class="pl-en"&gt;complete&lt;/span&gt;=&lt;span class="pl-c1"&gt;dir&lt;/span&gt; Files
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;fzf#vim#files&lt;/span&gt;(&lt;span class="pl-c1"&gt;&amp;lt;q-args&amp;gt;&lt;/span&gt;, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;options&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--layout=reverse&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--info=inline&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--preview&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cat {}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]}, &lt;span class="pl-c1"&gt;&amp;lt;bang&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It kind of works, but you probably want a nicer previewer program than &lt;code&gt;cat&lt;/code&gt;.
fzf.vim ships &lt;a href="bin/preview.sh"&gt;a versatile preview script&lt;/a&gt; you can readily
use. It internally executes &lt;a href="https://github.com/sharkdp/bat"&gt;bat&lt;/a&gt; for syntax
highlighting, so make sure to install it.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;command&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;bang&lt;/span&gt; -&lt;span class="pl-en"&gt;nargs&lt;/span&gt;=? -&lt;span class="pl-en"&gt;complete&lt;/span&gt;=&lt;span class="pl-c1"&gt;dir&lt;/span&gt; Files
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;fzf#vim#files&lt;/span&gt;(&lt;span class="pl-c1"&gt;&amp;lt;q-args&amp;gt;&lt;/span&gt;, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;options&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--layout=reverse&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--info=inline&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--preview&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~/.vim/plugged/fzf.vim/bin/preview.sh {}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]}, &lt;span class="pl-c1"&gt;&amp;lt;bang&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, it's not ideal to hard-code the path to the script which can be
different in different circumstances. So in order to make it easier to set up
the previewer, fzf.vim provides &lt;code&gt;fzf#vim#with_preview&lt;/code&gt; helper function.
Similarly to &lt;code&gt;fzf#wrap&lt;/code&gt;, it takes a spec dictionary and returns a copy of it
with additional preview options.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;command&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;bang&lt;/span&gt; -&lt;span class="pl-en"&gt;nargs&lt;/span&gt;=? -&lt;span class="pl-en"&gt;complete&lt;/span&gt;=&lt;span class="pl-c1"&gt;dir&lt;/span&gt; Files
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;fzf#vim#files&lt;/span&gt;(&lt;span class="pl-c1"&gt;&amp;lt;q-args&amp;gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;fzf#vim#with_preview&lt;/span&gt;({&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;options&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--layout=reverse&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--info=inline&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]}), &lt;span class="pl-c1"&gt;&amp;lt;bang&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can just omit the spec argument if you only want the previewer.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;command&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;bang&lt;/span&gt; -&lt;span class="pl-en"&gt;nargs&lt;/span&gt;=? -&lt;span class="pl-en"&gt;complete&lt;/span&gt;=&lt;span class="pl-c1"&gt;dir&lt;/span&gt; Files
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;fzf#vim#files&lt;/span&gt;(&lt;span class="pl-c1"&gt;&amp;lt;q-args&amp;gt;&lt;/span&gt;, &lt;span class="pl-en"&gt;fzf#vim#with_preview&lt;/span&gt;(), &lt;span class="pl-c1"&gt;&amp;lt;bang&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-example-git-grep-wrapper" class="anchor" aria-hidden="true" href="#example-git-grep-wrapper"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example: &lt;code&gt;git grep&lt;/code&gt; wrapper&lt;/h4&gt;
&lt;p&gt;The following example implements &lt;code&gt;GGrep&lt;/code&gt; command that works similarly to
predefined &lt;code&gt;Ag&lt;/code&gt; or &lt;code&gt;Rg&lt;/code&gt; using &lt;code&gt;fzf#vim#grep&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The second argument to &lt;code&gt;fzf#vim#grep&lt;/code&gt; is 0 (false), because &lt;code&gt;git grep&lt;/code&gt; does
not print column numbers.&lt;/li&gt;
&lt;li&gt;We set the base directory to git root by setting &lt;code&gt;dir&lt;/code&gt; attribute in spec
dictionary.&lt;/li&gt;
&lt;li&gt;&lt;a href="bin/preview.sh"&gt;The preview script&lt;/a&gt; supports &lt;code&gt;grep&lt;/code&gt; format
(&lt;code&gt;FILE_PATH:LINE_NO:...&lt;/code&gt;), so we can just wrap the spec with
&lt;code&gt;fzf#vim#with_preview&lt;/code&gt; as before to enable previewer.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;command&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;bang&lt;/span&gt; -&lt;span class="pl-en"&gt;nargs&lt;/span&gt;=&lt;span class="pl-k"&gt;*&lt;/span&gt; GGrep
  &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;fzf#vim#grep&lt;/span&gt;(
  &lt;span class="pl-cce"&gt;\ &lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;git grep --line-number &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-en"&gt;shellescape&lt;/span&gt;(&lt;span class="pl-c1"&gt;&amp;lt;q-args&amp;gt;&lt;/span&gt;), &lt;span class="pl-c1"&gt;0&lt;/span&gt;,
  &lt;span class="pl-cce"&gt;\ &lt;/span&gt;  &lt;span class="pl-en"&gt;fzf#vim#with_preview&lt;/span&gt;({&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;dir&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-en"&gt;systemlist&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;git rev-parse --show-toplevel&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]}), &lt;span class="pl-c1"&gt;&amp;lt;bang&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-example-rg-command-with-preview-window" class="anchor" aria-hidden="true" href="#example-rg-command-with-preview-window"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example: &lt;code&gt;Rg&lt;/code&gt; command with preview window&lt;/h4&gt;
&lt;p&gt;You can see the definition of &lt;code&gt;Rg&lt;/code&gt; command with &lt;code&gt;:command Rg&lt;/code&gt;. With the
information, you can redefine it with the preview window enabled. In this
case, we're only interested in setting up the preview window, so we will omit
the spec argument to &lt;code&gt;fzf#vim#preview&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;command&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;bang&lt;/span&gt; -&lt;span class="pl-en"&gt;nargs&lt;/span&gt;=&lt;span class="pl-k"&gt;*&lt;/span&gt; Rg
  &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;fzf#vim#grep&lt;/span&gt;(
  &lt;span class="pl-cce"&gt;\ &lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rg --column --line-number --no-heading --color=always --smart-case &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-en"&gt;shellescape&lt;/span&gt;(&lt;span class="pl-c1"&gt;&amp;lt;q-args&amp;gt;&lt;/span&gt;), &lt;span class="pl-c1"&gt;1&lt;/span&gt;,
  &lt;span class="pl-cce"&gt;\ &lt;/span&gt;  &lt;span class="pl-en"&gt;fzf#vim#with_preview&lt;/span&gt;(), &lt;span class="pl-c1"&gt;&amp;lt;bang&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-example-advanced-ripgrep-integration" class="anchor" aria-hidden="true" href="#example-advanced-ripgrep-integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example: Advanced ripgrep integration&lt;/h4&gt;
&lt;p&gt;In the default implementation of &lt;code&gt;Rg&lt;/code&gt;, ripgrep process starts only once with
the initial query (e.g. &lt;code&gt;:Rg foo&lt;/code&gt;) and fzf filters the output of the process.&lt;/p&gt;
&lt;p&gt;This is okay in most cases because fzf is quite performant even with millions
of lines, but we can make fzf completely delegate its search responsibliity to
ripgrep process by making it restart ripgrep whenever the query string is
updated. In this scenario, fzf becomes a simple selector interface rather than
a "fuzzy finder".&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We will name the new command all-uppercase &lt;code&gt;RG&lt;/code&gt; so we can still access the
default version.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--bind 'change:reload:rg ... {q}'&lt;/code&gt; will make fzf restart ripgrep process
whenever the query string, denoted by &lt;code&gt;{q}&lt;/code&gt;, is changed.&lt;/li&gt;
&lt;li&gt;With &lt;code&gt;--phony&lt;/code&gt; option, fzf will no longer perform search. The query string
you type on fzf prompt is only used for restarting ripgrep process.&lt;/li&gt;
&lt;li&gt;Also note that we enabled previewer with &lt;code&gt;fzf#vim#with_preview&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;RipgrepFzf&lt;/span&gt;(query, fullscreen)
  &lt;span class="pl-k"&gt;let&lt;/span&gt; command_fmt &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rg --column --line-number --no-heading --color=always --smart-case %s || true&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;let&lt;/span&gt; initial_command &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;printf&lt;/span&gt;(command_fmt, &lt;span class="pl-en"&gt;shellescape&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;a:&lt;/span&gt;query&lt;/span&gt;))
  &lt;span class="pl-k"&gt;let&lt;/span&gt; reload_command &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;printf&lt;/span&gt;(command_fmt, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{q}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;let&lt;/span&gt; spec &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;options&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--phony&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--query&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;a:&lt;/span&gt;query&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--bind&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;change:reload:&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.reload_command]}
  &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;fzf#vim#grep&lt;/span&gt;(initial_command, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-en"&gt;fzf#vim#with_preview&lt;/span&gt;(spec), &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;a:&lt;/span&gt;fullscreen&lt;/span&gt;)
&lt;span class="pl-k"&gt;endfunction&lt;/span&gt;

&lt;span class="pl-c1"&gt;command&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; -&lt;span class="pl-en"&gt;nargs&lt;/span&gt;=&lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;bang&lt;/span&gt; RG &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;RipgrepFzf&lt;/span&gt;(&lt;span class="pl-c1"&gt;&amp;lt;q-args&amp;gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;&amp;lt;bang&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-mappings" class="anchor" aria-hidden="true" href="#mappings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mappings&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Mapping&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;plug&amp;gt;(fzf-maps-n)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Normal mode mappings&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;plug&amp;gt;(fzf-maps-i)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Insert mode mappings&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;plug&amp;gt;(fzf-maps-x)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Visual mode mappings&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;plug&amp;gt;(fzf-maps-o)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Operator-pending mappings&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;plug&amp;gt;(fzf-complete-word)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;cat /usr/share/dict/words&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;plug&amp;gt;(fzf-complete-path)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Path completion using &lt;code&gt;find&lt;/code&gt; (file + dir)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;plug&amp;gt;(fzf-complete-file)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;File completion using &lt;code&gt;find&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;plug&amp;gt;(fzf-complete-file-ag)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;File completion using &lt;code&gt;ag&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;plug&amp;gt;(fzf-complete-line)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Line completion (all open buffers)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;plug&amp;gt;(fzf-complete-buffer-line)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Line completion (current buffer only)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h3&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Mapping selecting mappings&lt;/span&gt;
&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&amp;lt;tab&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;plug&amp;gt;&lt;/span&gt;(fzf&lt;span class="pl-k"&gt;-&lt;/span&gt;maps&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;n&lt;/span&gt;)
&lt;span class="pl-c1"&gt;xmap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&amp;lt;tab&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;plug&amp;gt;&lt;/span&gt;(fzf&lt;span class="pl-k"&gt;-&lt;/span&gt;maps&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;x&lt;/span&gt;)
&lt;span class="pl-c1"&gt;omap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;leader&amp;gt;&amp;lt;tab&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;plug&amp;gt;&lt;/span&gt;(fzf&lt;span class="pl-k"&gt;-&lt;/span&gt;maps&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;o&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Insert mode completion&lt;/span&gt;
&lt;span class="pl-c1"&gt;imap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-k&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;plug&amp;gt;&lt;/span&gt;(fzf&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;complete&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;word)
&lt;span class="pl-c1"&gt;imap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-f&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;plug&amp;gt;&lt;/span&gt;(fzf&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;complete&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;path&lt;/span&gt;)
&lt;span class="pl-c1"&gt;imap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-j&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;plug&amp;gt;&lt;/span&gt;(fzf&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;complete&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;file&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;ag)
&lt;span class="pl-c1"&gt;imap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-l&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;plug&amp;gt;&lt;/span&gt;(fzf&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;complete&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;line&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Advanced customization using Vim function&lt;/span&gt;
&lt;span class="pl-c1"&gt;inoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;expr&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-k&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fzf#vim#complete#word&lt;/span&gt;({&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;left&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;15%&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-completion-helper" class="anchor" aria-hidden="true" href="#completion-helper"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Completion helper&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;fzf#vim#complete&lt;/code&gt; is a helper function for creating custom fuzzy completion
using fzf. If the first parameter is a command string or a Vim list, it will
be used as the source.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Replace the default dictionary completion with fzf-based fuzzy completion&lt;/span&gt;
&lt;span class="pl-c1"&gt;inoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;expr&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-k&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fzf#vim#complete&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cat /usr/share/dict/words&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For advanced uses, you can pass an options dictionary to the function. The set
of options is pretty much identical to that for &lt;code&gt;fzf#run&lt;/code&gt; only with the
following exceptions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;reducer&lt;/code&gt; (funcref)
&lt;ul&gt;
&lt;li&gt;Reducer transforms the output lines of fzf into a single string value&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;prefix&lt;/code&gt; (string or funcref; default: &lt;code&gt;\k*$&lt;/code&gt;)
&lt;ul&gt;
&lt;li&gt;Regular expression pattern to extract the completion prefix&lt;/li&gt;
&lt;li&gt;Or a function to extract completion prefix&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Both &lt;code&gt;source&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; can be given as funcrefs that take the
completion prefix as the argument and return the final value&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sink&lt;/code&gt; or &lt;code&gt;sink*&lt;/code&gt; are ignored&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Global line completion (not just open buffers. ripgrep required.)&lt;/span&gt;
&lt;span class="pl-c1"&gt;inoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;expr&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-l&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fzf#vim#complete&lt;/span&gt;(&lt;span class="pl-en"&gt;fzf#wrap&lt;/span&gt;({
  &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;prefix&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;^.*$&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;source&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rg -n ^ --color always&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;options&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--ansi --delimiter : --nth 3..&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;reducer&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: { &lt;span class="pl-c1"&gt;lines&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&amp;gt; &lt;span class="pl-en"&gt;join&lt;/span&gt;(&lt;span class="pl-en"&gt;split&lt;/span&gt;(&lt;span class="pl-c1"&gt;lines&lt;/span&gt;[&lt;span class="pl-c1"&gt;0&lt;/span&gt;], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:\zs&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)[&lt;span class="pl-c1"&gt;2&lt;/span&gt;:], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) }}))&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-reducer-example" class="anchor" aria-hidden="true" href="#reducer-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reducer example&lt;/h4&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;&lt;span class="pl-k"&gt;s:&lt;/span&gt;make_sentence&lt;/span&gt;(&lt;span class="pl-c1"&gt;lines&lt;/span&gt;)
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;substitute&lt;/span&gt;(&lt;span class="pl-en"&gt;join&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;a:&lt;/span&gt;lines&lt;/span&gt;), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;^.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\=toupper(submatch(0))&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;endfunction&lt;/span&gt;

&lt;span class="pl-c1"&gt;inoremap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;expr&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;c-x&amp;gt;&amp;lt;c-s&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;fzf#vim#complete&lt;/span&gt;({
  &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;source&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;:  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cat /usr/share/dict/words&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;reducer&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;sid&amp;gt;make_sentence&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;),
  &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;options&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--multi --reverse --margin 15%,0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;left&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;:    &lt;span class="pl-c1"&gt;20&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-status-line-of-terminal-buffer" class="anchor" aria-hidden="true" href="#status-line-of-terminal-buffer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status line of terminal buffer&lt;/h2&gt;
&lt;p&gt;When fzf starts in a terminal buffer (see &lt;a href="https://github.com/junegunn/fzf/blob/master/README-VIM.md#fzf-inside-terminal-buffer"&gt;fzf/README-VIM.md&lt;/a&gt;), you
may want to customize the statusline of the containing buffer.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-hide-statusline" class="anchor" aria-hidden="true" href="#hide-statusline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hide statusline&lt;/h3&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-c1"&gt;FileType&lt;/span&gt; fzf &lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;laststatus&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-c1"&gt;noshowmode&lt;/span&gt; &lt;span class="pl-c1"&gt;noruler&lt;/span&gt;
  &lt;span class="pl-cce"&gt;\|&lt;/span&gt; &lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;BufLeave&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;buffer&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;laststatus&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-c1"&gt;showmode&lt;/span&gt; &lt;span class="pl-c1"&gt;ruler&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-custom-statusline" class="anchor" aria-hidden="true" href="#custom-statusline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom statusline&lt;/h3&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;&lt;span class="pl-k"&gt;s:&lt;/span&gt;fzf_statusline&lt;/span&gt;()
&lt;span class="pl-c"&gt;  &lt;span class="pl-c"&gt;"&lt;/span&gt; Override statusline as you like&lt;/span&gt;
  &lt;span class="pl-c1"&gt;highlight&lt;/span&gt; fzf1 ctermfg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;161&lt;/span&gt; ctermbg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;251&lt;/span&gt;
  &lt;span class="pl-c1"&gt;highlight&lt;/span&gt; fzf2 ctermfg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;23&lt;/span&gt; ctermbg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;251&lt;/span&gt;
  &lt;span class="pl-c1"&gt;highlight&lt;/span&gt; fzf3 ctermfg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;237&lt;/span&gt; ctermbg&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;251&lt;/span&gt;
  &lt;span class="pl-c1"&gt;setlocal&lt;/span&gt; &lt;span class="pl-c1"&gt;statusline&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-k"&gt;%&lt;/span&gt;#fzf1#&lt;span class="pl-cce"&gt;\ &lt;/span&gt;&amp;gt;&lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-k"&gt;%&lt;/span&gt;#fzf2#fz&lt;span class="pl-k"&gt;%&lt;/span&gt;#fzf3#&lt;span class="pl-c1"&gt;f&lt;/span&gt;
&lt;span class="pl-k"&gt;endfunction&lt;/span&gt;

&lt;span class="pl-c1"&gt;autocmd&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-c1"&gt;User&lt;/span&gt; FzfStatusLine &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;SID&amp;gt;&lt;/span&gt;&lt;span class="pl-en"&gt;fzf_statusline&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;MIT&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>junegunn</author><guid isPermaLink="false">https://github.com/junegunn/fzf.vim</guid><pubDate>Tue, 28 Jan 2020 00:03:00 GMT</pubDate></item><item><title>rafi/awesome-vim-colorschemes #4 in Vim script, This week</title><link>https://github.com/rafi/awesome-vim-colorschemes</link><description>&lt;p&gt;&lt;i&gt;Collection of awesome color schemes for Neo/vim, merged for quick use.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-awesome-vim-color-schemes" class="anchor" aria-hidden="true" href="#awesome-vim-color-schemes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Awesome Vim Color Schemes&lt;/h1&gt;
&lt;p&gt;Collection of awesome color schemes for Vim, merged for quick use.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Use your favorite package-manager to install, and enjoy!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-color-schemes" class="anchor" aria-hidden="true" href="#color-schemes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Color Schemes&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Scheme&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th align="center"&gt;Terminal&lt;/th&gt;
&lt;th align="center"&gt;GUI&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/andreasvc/vim-256noir"&gt;256noir&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Dark minimal colors, to avoid distraction&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/jdsimcoe/abstract.vim"&gt;abstract&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Dark theme based on Abstract app&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/danilo-augusto/vim-afterglow"&gt;afterglow&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Adaptation from Sublime Text&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/AlessandroYorba/Alduin"&gt;alduin&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Dark rustic colors&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/gilgigilgil/anderson.vim"&gt;anderson&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Dark vim colorscheme based on colors from Wes Anderson films&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/zacanger/angr.vim"&gt;angr&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Pleasant, mild, dark theme&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/ayu-theme/ayu-vim"&gt;ayu-vim&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Simple, bright and elegant theme&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/romainl/Apprentice"&gt;Apprentice&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Dark, low-contrast colorscheme&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/Badacadabra/vim-archery"&gt;Archery&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Vim colorscheme inspired by Arch Linux colors&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/gregsexton/Atom"&gt;Atom&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Designed to be very readable in both light and dark environments&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/nightsense/carbonized"&gt;carbonized&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Inspired by the Carbon keycap set&lt;/td&gt;
&lt;td align="center"&gt;✓ (16)&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/challenger-deep-theme/vim"&gt;challenger-deep&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;FlatColor colorscheme&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/tyrannicaltoucan/vim-deep-space"&gt;deep-space&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Intergalactic friendly color scheme based off Hybrid&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/ajmwagar/vim-deus"&gt;deus&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;For the late night coder&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/dracula/vim"&gt;dracula&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Dark theme&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/chase/focuspoint-vim"&gt;focuspoint&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Maintain color coordination and important keyword focus&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/romainl/flattened"&gt;flattened&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Solarized, without the bullshit&lt;/td&gt;
&lt;td align="center"&gt;✓ (16)&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/endel/vim-github-colorscheme"&gt;github&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Based on Github's syntax highlighting&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/whatyouhide/vim-gotham"&gt;gotham&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Very dark vim colorscheme&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/morhetz/gruvbox"&gt;gruvbox&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Retro groove color scheme&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/yorickpeterse/happy_hacking.vim"&gt;happy hacking&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Fairly small set of colors instead of throwing rainbows at your face&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cocopon/iceberg.vim"&gt;Iceberg&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Dark blue color scheme&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/NLKNguyen/papercolor-theme"&gt;papercolor&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Light and Dark color schemes inspired by Google's Material Design&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/keith/parsec.vim"&gt;parsec&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Color scheme for people tired of solarized&lt;/td&gt;
&lt;td align="center"&gt;✓ (16)&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/scheakur/vim-scheakur"&gt;scheakur&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A light/dark colorscheme&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/w0ng/vim-hybrid"&gt;hybrid&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A dark colour scheme for Vim and gVim&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/kristijanhusak/vim-hybrid-material"&gt;hybrid-material&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Material color scheme based on w0ng/vim-hybrid&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/nanotech/jellybeans.vim"&gt;jellybeans&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Colorful, dark color scheme&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/wimstefan/Lightning"&gt;lightning&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Light vim colorscheme based on Apprentice&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cseelus/vim-colors-lucid"&gt;lucid&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Vivid highlights and friendly, clear colors&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/jonathanfilip/vim-lucius"&gt;lucius&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Lucius color scheme&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/mkarmona/materialbox"&gt;materialbox&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Light and dark material palette inspired based on Gruvbox&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/christophermca/meta5"&gt;meta5&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Dark colorscheme, inspired by Tron&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/dikiaap/minimalist"&gt;minimalist&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Darker version of material theme inspired by Sublime Text&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/tomasr/molokai"&gt;molokai&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Molokai color scheme&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/fmoralesc/molokayo"&gt;molokayo&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Very tweaked molokai based theme&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/arcticicestudio/nord-vim"&gt;nord&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;An arctic, north-bluish clean and elegant theme&lt;/td&gt;
&lt;td align="center"&gt;✓ (16)&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/mhartington/oceanic-next"&gt;oceanicnext&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Oceanic Next theme&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/rakr/vim-one"&gt;one&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Adaptation of one-light and one-dark&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/joshdick/onedark.vim"&gt;onedark&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Inspired by Atom's One Dark syntax theme&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/fcpg/vim-orbital"&gt;orbital&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Dark blue base16 theme&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/owickstrom/vim-colors-paramount"&gt;paramount&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Minimal colorscheme that only puts emphasis on the paramount&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/sts10/vim-pink-moon"&gt;pink-moon&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Dark pastel theme&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/kyoz/purify"&gt;purify&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Clean &amp;amp; vibrant color schemes for Vim, Terminals...&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/vim-scripts/pyte"&gt;pyte&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Clean, light (nearly white) theme&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/rakr/vim-colors-rakr"&gt;rakr&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Flat colorscheme light and dark variant&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/vim-scripts/rdark-terminal2.vim"&gt;rdark-terminal2&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Modified rdark-terminal to enhance visibility&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/junegunn/seoul256.vim"&gt;seoul256&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Low-contrast color scheme based on Seoul Colors&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/AlessandroYorba/Sierra"&gt;sierra&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Dark vintage colors&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/lifepillar/vim-solarized8"&gt;solarized8&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Optimized Solarized colorschemes&lt;/td&gt;
&lt;td align="center"&gt;✓ (16)&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/liuchengxu/space-vim-dark"&gt;space-vim-dark&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Dark magenta colors&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/jacoborus/tender.vim"&gt;tender&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;24bit colorscheme for Vim&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/marcopaganini/termschool-vim-theme"&gt;termschool&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Based on the "codeschool" theme, with lots of tweaks&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/vim-scripts/twilight256.vim"&gt;twilight256&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Imitates the Twilight theme for TextMate&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/rakr/vim-two-firewatch"&gt;two-firewatch&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A blend between duotone light and firewatch (for atom)&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/vim-scripts/wombat256.vim"&gt;wombat256&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Wombat for 256 color xterms&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;td align="center"&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-other-collections" class="anchor" aria-hidden="true" href="#other-collections"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Collections&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rainglow/vim"&gt;&lt;code&gt;rainglow/vim&lt;/code&gt;&lt;/a&gt; - 320+ color themes for VIM&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nightsense/vimspectr"&gt;&lt;code&gt;nightsense/vimspectr&lt;/code&gt;&lt;/a&gt; - Assemble your own Vim theme (choose base hue + saturation curve)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chriskempson/base16-vim"&gt;&lt;code&gt;chriskempson/base16-vim&lt;/code&gt;&lt;/a&gt; - Syntax highlighting for hackers&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mswift42/vim-themes"&gt;&lt;code&gt;mswift42/vim-themes&lt;/code&gt;&lt;/a&gt; - Some emacs themes ported to Vim&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mkarmona/colorsbox"&gt;&lt;code&gt;mkarmona/colorsbox&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>rafi</author><guid isPermaLink="false">https://github.com/rafi/awesome-vim-colorschemes</guid><pubDate>Tue, 28 Jan 2020 00:04:00 GMT</pubDate></item><item><title>preservim/nerdtree #5 in Vim script, This week</title><link>https://github.com/preservim/nerdtree</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;p&gt;No README was found for this project.&lt;/p&gt;</description><author>preservim</author><guid isPermaLink="false">https://github.com/preservim/nerdtree</guid><pubDate>Tue, 28 Jan 2020 00:05:00 GMT</pubDate></item><item><title>fatih/vim-go #6 in Vim script, This week</title><link>https://github.com/fatih/vim-go</link><description>&lt;p&gt;&lt;i&gt;Go development plugin for Vim&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-vim-go-" class="anchor" aria-hidden="true" href="#vim-go-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;vim-go &lt;a href="https://travis-ci.org/fatih/vim-go" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/439ea3a95ba73ab9ef9e4c560159ee272ce10b5c/687474703a2f2f696d672e736869656c64732e696f2f7472617669732f66617469682f76696d2d676f2e7376673f7374796c653d666c61742d737175617265" alt="Build Status" data-canonical-src="http://img.shields.io/travis/fatih/vim-go.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="assets/vim-go.png"&gt;&lt;img src="assets/vim-go.png" alt="Vim-go logo" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;This plugin adds Go language support for Vim, with the following main features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Compile your package with &lt;code&gt;:GoBuild&lt;/code&gt;, install it with &lt;code&gt;:GoInstall&lt;/code&gt; or test it
with &lt;code&gt;:GoTest&lt;/code&gt;. Run a single test with &lt;code&gt;:GoTestFunc&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Quickly execute your current file(s) with &lt;code&gt;:GoRun&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Improved syntax highlighting and folding.&lt;/li&gt;
&lt;li&gt;Debug programs with integrated &lt;code&gt;delve&lt;/code&gt; support with &lt;code&gt;:GoDebugStart&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Completion support via &lt;code&gt;gocode&lt;/code&gt; and &lt;code&gt;gopls&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gofmt&lt;/code&gt; or &lt;code&gt;goimports&lt;/code&gt; on save keeps the cursor position and undo history.&lt;/li&gt;
&lt;li&gt;Go to symbol/declaration with &lt;code&gt;:GoDef&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Look up documentation with &lt;code&gt;:GoDoc&lt;/code&gt; or &lt;code&gt;:GoDocBrowser&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Easily import packages via &lt;code&gt;:GoImport&lt;/code&gt;, remove them via &lt;code&gt;:GoDrop&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Precise type-safe renaming of identifiers with &lt;code&gt;:GoRename&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;See which code is covered by tests with &lt;code&gt;:GoCoverage&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Add or remove tags on struct fields with &lt;code&gt;:GoAddTags&lt;/code&gt; and &lt;code&gt;:GoRemoveTags&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Call &lt;code&gt;gometalinter&lt;/code&gt; with &lt;code&gt;:GoMetaLinter&lt;/code&gt; to invoke all possible linters
(&lt;code&gt;golint&lt;/code&gt;, &lt;code&gt;vet&lt;/code&gt;, &lt;code&gt;errcheck&lt;/code&gt;, &lt;code&gt;deadcode&lt;/code&gt;, etc.) and put the result in the
quickfix or location list.&lt;/li&gt;
&lt;li&gt;Lint your code with &lt;code&gt;:GoLint&lt;/code&gt;, run your code through &lt;code&gt;:GoVet&lt;/code&gt; to catch static
errors, or make sure errors are checked with &lt;code&gt;:GoErrCheck&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Advanced source analysis tools utilizing &lt;code&gt;guru&lt;/code&gt;, such as &lt;code&gt;:GoImplements&lt;/code&gt;,
&lt;code&gt;:GoCallees&lt;/code&gt;, and &lt;code&gt;:GoReferrers&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;... and many more! Please see &lt;a href="doc/vim-go.txt"&gt;doc/vim-go.txt&lt;/a&gt; for more
information.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;p&gt;vim-go requires at least Vim 8.0.1453 or Neovim 0.3.1.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/fatih/vim-go/releases/latest"&gt;&lt;strong&gt;latest stable release&lt;/strong&gt;&lt;/a&gt; is the
recommended version to use. If you choose to use the master branch instead,
please do so with caution; it is a &lt;em&gt;development&lt;/em&gt; branch.&lt;/p&gt;
&lt;p&gt;vim-go follows the standard runtime path structure. Below are some helper lines
for popular package managers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://vimhelp.appspot.com/repeat.txt.html#packages" rel="nofollow"&gt;Vim 8 packages&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git clone https://github.com/fatih/vim-go.git ~/.vim/pack/plugins/start/vim-go&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tpope/vim-pathogen"&gt;Pathogen&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git clone https://github.com/fatih/vim-go.git ~/.vim/bundle/vim-go&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/junegunn/vim-plug"&gt;vim-plug&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/VundleVim/Vundle.vim"&gt;Vundle&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Plugin 'fatih/vim-go'&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You will also need to install all the necessary binaries. vim-go makes it easy
to install all of them by providing a command, &lt;code&gt;:GoInstallBinaries&lt;/code&gt;, which will
&lt;code&gt;go get&lt;/code&gt; all the required binaries.&lt;/p&gt;
&lt;p&gt;Check out the Install section in &lt;a href="doc/vim-go.txt"&gt;the documentation&lt;/a&gt; for more
detailed instructions (&lt;code&gt;:help go-install&lt;/code&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;The full documentation can be found at &lt;a href="doc/vim-go.txt"&gt;doc/vim-go.txt&lt;/a&gt;. You can
display it from within Vim with &lt;code&gt;:help vim-go&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Depending on your installation method, you may have to generate the plugin's
&lt;a href="http://vimhelp.appspot.com/helphelp.txt.html#%3Ahelptags" rel="nofollow"&gt;&lt;code&gt;help tags&lt;/code&gt;&lt;/a&gt;
manually (e.g. &lt;code&gt;:helptags ALL&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;We also have an &lt;a href="https://github.com/fatih/vim-go/wiki"&gt;official vim-go tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-faq-and-troubleshooting" class="anchor" aria-hidden="true" href="#faq-and-troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ and troubleshooting&lt;/h2&gt;
&lt;p&gt;The FAQ and troubleshooting tips are in the documentation and can be quickly
accessed using &lt;code&gt;:help go-troubleshooting&lt;/code&gt;. If you believe you've found a bug or
shortcoming in vim-go that is neither addressed by help nor in &lt;a href="https://github.com/fatih/vim-go/issues"&gt;existing
issues&lt;/a&gt;, please open an issue with
clear reproduction steps. &lt;code&gt;:GoReportGitHubIssue&lt;/code&gt; can be used pre-populate a lot
of the information needed when creating a new issue.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;The BSD 3-Clause License - see &lt;a href="LICENSE"&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt; for more details&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>fatih</author><guid isPermaLink="false">https://github.com/fatih/vim-go</guid><pubDate>Tue, 28 Jan 2020 00:06:00 GMT</pubDate></item><item><title>tpope/vim-surround #7 in Vim script, This week</title><link>https://github.com/tpope/vim-surround</link><description>&lt;p&gt;&lt;i&gt;surround.vim: quoting/parenthesizing made simple&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="markdown" data-path="README.markdown"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-surroundvim" class="anchor" aria-hidden="true" href="#surroundvim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;surround.vim&lt;/h1&gt;
&lt;p&gt;Surround.vim is all about "surroundings": parentheses, brackets, quotes,
XML tags, and more.  The plugin provides mappings to easily delete,
change and add such surroundings in pairs.&lt;/p&gt;
&lt;p&gt;It's easiest to explain with examples.  Press &lt;code&gt;cs"'&lt;/code&gt; inside&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;"Hello world!"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to change it to&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;'Hello world!'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now press &lt;code&gt;cs'&amp;lt;q&amp;gt;&lt;/code&gt; to change it to&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;q&amp;gt;Hello world!&amp;lt;/q&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To go full circle, press &lt;code&gt;cst"&lt;/code&gt; to get&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;"Hello world!"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To remove the delimiters entirely, press &lt;code&gt;ds"&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Hello world!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now with the cursor on "Hello", press &lt;code&gt;ysiw]&lt;/code&gt; (&lt;code&gt;iw&lt;/code&gt; is a text object).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Hello] world!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let's make that braces and add some space (use &lt;code&gt;}&lt;/code&gt; instead of &lt;code&gt;{&lt;/code&gt; for no
space): &lt;code&gt;cs]{&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{ Hello } world!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now wrap the entire line in parentheses with &lt;code&gt;yssb&lt;/code&gt; or &lt;code&gt;yss)&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;({ Hello } world!)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Revert to the original text: &lt;code&gt;ds{ds)&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Hello world!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Emphasize hello: &lt;code&gt;ysiw&amp;lt;em&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;em&amp;gt;Hello&amp;lt;/em&amp;gt; world!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, let's try out visual mode. Press a capital V (for linewise
visual mode) followed by &lt;code&gt;S&amp;lt;p class="important"&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p class="important"&amp;gt;
  &amp;lt;em&amp;gt;Hello&amp;lt;/em&amp;gt; world!
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This plugin is very powerful for HTML and XML editing, a niche which
currently seems underfilled in Vim land.  (As opposed to HTML/XML
&lt;em&gt;inserting&lt;/em&gt;, for which many plugins are available).  Adding, changing,
and removing pairs of tags simultaneously is a breeze.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;.&lt;/code&gt; command will work with &lt;code&gt;ds&lt;/code&gt;, &lt;code&gt;cs&lt;/code&gt;, and &lt;code&gt;yss&lt;/code&gt; if you install
&lt;a href="https://github.com/tpope/vim-repeat"&gt;repeat.vim&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Install using your favorite package manager, or use Vim's built-in package
support:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir -p ~/.vim/pack/tpope/start
cd ~/.vim/pack/tpope/start
git clone https://tpope.io/vim/surround.git
vim -u NONE -c "helptags surround/doc" -c q
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;See the contribution guidelines for
&lt;a href="https://github.com/tpope/vim-pathogen#readme"&gt;pathogen.vim&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-self-promotion" class="anchor" aria-hidden="true" href="#self-promotion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Self-Promotion&lt;/h2&gt;
&lt;p&gt;Like surround.vim?  Star the repository on
&lt;a href="https://github.com/tpope/vim-surround"&gt;GitHub&lt;/a&gt; and vote for it on
&lt;a href="https://www.vim.org/scripts/script.php?script_id=1697" rel="nofollow"&gt;vim.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Love surround.vim?  Follow &lt;a href="http://tpo.pe/" rel="nofollow"&gt;tpope&lt;/a&gt; on
&lt;a href="https://github.com/tpope"&gt;GitHub&lt;/a&gt; and
&lt;a href="http://twitter.com/tpope" rel="nofollow"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright (c) Tim Pope.  Distributed under the same terms as Vim itself.
See &lt;code&gt;:help license&lt;/code&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>tpope</author><guid isPermaLink="false">https://github.com/tpope/vim-surround</guid><pubDate>Tue, 28 Jan 2020 00:07:00 GMT</pubDate></item><item><title>neovim/neovim #8 in Vim script, This week</title><link>https://github.com/neovim/neovim</link><description>&lt;p&gt;&lt;i&gt;Vim-fork focused on extensibility and usability&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://neovim.io" rel="nofollow"&gt;&lt;img src="https://raw.githubusercontent.com/neovim/neovim.github.io/master/logos/neovim-logo-300x87.png" alt="Neovim" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://neovim.io/doc" rel="nofollow"&gt;Documentation&lt;/a&gt; |
&lt;a href="https://gitter.im/neovim/neovim" rel="nofollow"&gt;Chat&lt;/a&gt; |
&lt;a href="https://twitter.com/Neovim" rel="nofollow"&gt;Twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/neovim/neovim" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4ae883a40da36ec54b61cdc90a202be7d479938b/68747470733a2f2f7472617669732d63692e6f72672f6e656f76696d2f6e656f76696d2e7376673f6272616e63683d6d6173746572" alt="Travis build status" data-canonical-src="https://travis-ci.org/neovim/neovim.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/neovim/neovim/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/765b8f2fa3c9d35e5b9a2b1eec022664c3ded03c/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f757264716a72696b35753532316661632f6272616e63682f6d61737465723f7376673d74727565" alt="AppVeyor build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/urdqjrik5u521fac/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/neovim/neovim" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d164c547ae645eb6c337136499cdc8d970412dbc/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f6e656f76696d2f6e656f76696d2e737667" alt="Codecov coverage" data-canonical-src="https://img.shields.io/codecov/c/github/neovim/neovim.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://scan.coverity.com/projects/2227" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/298688ea36ec02e81c1652a28a9bc73d3f8077d8/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f323232372f62616467652e737667" alt="Coverity Scan analysis" data-canonical-src="https://scan.coverity.com/projects/2227/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://neovim.io/doc/reports/clang" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5d95f05d82c2324906e4a2fb9c965e169ec94f55/68747470733a2f2f6e656f76696d2e696f2f646f632f7265706f7274732f636c616e672f62616467652e737667" alt="Clang analysis" data-canonical-src="https://neovim.io/doc/reports/clang/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://neovim.io/doc/reports/pvs/PVS-studio.html.d" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d38e422483d49e5668f5eacd1a1bd0de9650122d/68747470733a2f2f6e656f76696d2e696f2f646f632f7265706f7274732f7076732f62616467652e737667" alt="PVS-Studio analysis" data-canonical-src="https://neovim.io/doc/reports/pvs/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://repology.org/metapackage/neovim" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/85f2d3c291cba0d6d9aee65a54ffe7a90843dbd9/68747470733a2f2f7265706f6c6f67792e6f72672f62616467652f74696e792d7265706f732f6e656f76696d2e737667" alt="Packages" data-canonical-src="https://repology.org/badge/tiny-repos/neovim.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://buildd.debian.org/neovim" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/54185923c78bfbe8a3323b0d175585f89923b341/68747470733a2f2f6261646765732e64656269616e2e6e65742f6261646765732f64656269616e2f74657374696e672f6e656f76696d2f76657273696f6e2e737667" alt="Debian CI" data-canonical-src="https://badges.debian.net/badges/debian/testing/neovim/version.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/neovim/neovim/releases/"&gt;&lt;img src="https://camo.githubusercontent.com/1030ce55cd509e8acadde31d00775e8be3de1f16/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6e656f76696d2f6e656f76696d2f746f74616c2e7376673f6d61784167653d32353932303031" alt="Downloads" data-canonical-src="https://img.shields.io/github/downloads/neovim/neovim/total.svg?maxAge=2592001" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://snapcraft.io/nvim" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f49c292c314555be104f34039679ad94e4337ae7/68747470733a2f2f736e617063726166742e696f2f2f6e76696d2f62616467652e737667" alt="nvim" data-canonical-src="https://snapcraft.io//nvim/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Neovim is a project that seeks to aggressively refactor Vim in order to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Simplify maintenance and encourage &lt;a href="CONTRIBUTING.md"&gt;contributions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Split the work between multiple developers&lt;/li&gt;
&lt;li&gt;Enable &lt;a href="https://github.com/neovim/neovim/wiki/Related-projects#gui"&gt;advanced UIs&lt;/a&gt; without modifications to the core&lt;/li&gt;
&lt;li&gt;Maximize &lt;a href="https://github.com/neovim/neovim/wiki/Plugin-UI-architecture"&gt;extensibility&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the &lt;a href="https://github.com/neovim/neovim/wiki/Introduction"&gt;Introduction&lt;/a&gt; wiki page and &lt;a href="https://neovim.io/roadmap/" rel="nofollow"&gt;Roadmap&lt;/a&gt;
for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Modern &lt;a href="https://github.com/neovim/neovim/wiki/Related-projects#gui"&gt;GUIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/neovim/neovim/wiki/Related-projects#api-clients"&gt;API access&lt;/a&gt;
from any language including C/C++, C#, Clojure, D, Elixir, Go, Haskell, Java,
JavaScript/Node.js, Julia, Lisp, Lua, Perl, Python, Racket, Ruby, Rust&lt;/li&gt;
&lt;li&gt;Embedded, scriptable &lt;a href="https://neovim.io/doc/user/nvim_terminal_emulator.html" rel="nofollow"&gt;terminal emulator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Asynchronous &lt;a href="https://github.com/neovim/neovim/pull/2247"&gt;job control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/neovim/neovim/pull/2506"&gt;Shared data (shada)&lt;/a&gt; among multiple editor instances&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/neovim/neovim/pull/3470"&gt;XDG base directories&lt;/a&gt; support&lt;/li&gt;
&lt;li&gt;Compatible with most Vim plugins, including Ruby and Python plugins&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href="https://neovim.io/doc/user/vim_diff.html#nvim-features" rel="nofollow"&gt;&lt;code&gt;:help nvim-features&lt;/code&gt;&lt;/a&gt; for the full list!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install-from-package" class="anchor" aria-hidden="true" href="#install-from-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install from package&lt;/h2&gt;
&lt;p&gt;Pre-built packages for Windows, macOS, and Linux are found on the
&lt;a href="https://github.com/neovim/neovim/releases/"&gt;Releases&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/neovim/neovim/wiki/Installing-Neovim#install-from-package"&gt;Managed packages&lt;/a&gt; are in Homebrew, &lt;a href="https://packages.debian.org/testing/neovim" rel="nofollow"&gt;Debian&lt;/a&gt;, &lt;a href="http://packages.ubuntu.com/search?keywords=neovim" rel="nofollow"&gt;Ubuntu&lt;/a&gt;, &lt;a href="https://apps.fedoraproject.org/packages/neovim" rel="nofollow"&gt;Fedora&lt;/a&gt;, &lt;a href="https://www.archlinux.org/packages/?q=neovim" rel="nofollow"&gt;Arch Linux&lt;/a&gt;,
&lt;a href="https://packages.gentoo.org/packages/app-editors/neovim" rel="nofollow"&gt;Gentoo&lt;/a&gt;, and more!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install-from-source" class="anchor" aria-hidden="true" href="#install-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install from source&lt;/h2&gt;
&lt;p&gt;The build is CMake-based, but a Makefile is provided as a convenience.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make CMAKE_BUILD_TYPE=RelWithDebInfo
sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To install to a non-default location:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make CMAKE_INSTALL_PREFIX=/full/path/
make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To skip bundled (&lt;code&gt;third-party/*&lt;/code&gt;) dependencies:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install the dependencies using a package manager.
&lt;pre&gt;&lt;code&gt;sudo apt install gperf luajit luarocks libuv1-dev libluajit-5.1-dev libunibilium-dev libmsgpack-dev libtermkey-dev libvterm-dev libutf8proc-dev
sudo luarocks build mpack
sudo luarocks build lpeg
sudo luarocks build inspect
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Build with &lt;code&gt;USE_BUNDLED=OFF&lt;/code&gt;:
&lt;pre&gt;&lt;code&gt;make CMAKE_BUILD_TYPE=RelWithDebInfo USE_BUNDLED=OFF
sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To inspect the build, these CMake features are useful:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cmake --build build --target help&lt;/code&gt; lists all build targets.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;build/CMakeCache.txt&lt;/code&gt; (or &lt;code&gt;cmake -LAH build/&lt;/code&gt;) contains the resolved values of all CMake variables.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;build/compile_commands.json&lt;/code&gt; shows the full compiler invocations for each translation unit.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the &lt;a href="https://github.com/neovim/neovim/wiki/Building-Neovim"&gt;Building Neovim&lt;/a&gt; wiki page for details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-transitioning-from-vim" class="anchor" aria-hidden="true" href="#transitioning-from-vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transitioning from Vim&lt;/h2&gt;
&lt;p&gt;See &lt;a href="https://neovim.io/doc/user/nvim.html#nvim-from-vim" rel="nofollow"&gt;&lt;code&gt;:help nvim-from-vim&lt;/code&gt;&lt;/a&gt; for instructions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-project-layout" class="anchor" aria-hidden="true" href="#project-layout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project layout&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;├─ ci/              build automation
├─ cmake/           build scripts
├─ runtime/         user plugins/docs
├─ src/nvim/        application source code (see src/nvim/README.md)
│  ├─ api/          API subsystem
│  ├─ eval/         VimL subsystem
│  ├─ event/        event-loop subsystem
│  ├─ generators/   code generation (pre-compilation)
│  ├─ lib/          generic data structures
│  ├─ lua/          Lua subsystem
│  ├─ msgpack_rpc/  RPC subsystem
│  ├─ os/           low-level platform code
│  └─ tui/          built-in UI
├─ third-party/     CMake subproject to build dependencies
└─ test/            tests (see test/README.md)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Neovim contributions since &lt;a href="https://github.com/neovim/neovim/commit/b17d9691a24099c9210289f16afb1a498a89d803"&gt;b17d96&lt;/a&gt; are licensed under the
Apache 2.0 license, except for contributions copied from Vim (identified by the
&lt;code&gt;vim-patch&lt;/code&gt; token). See LICENSE for details.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Vim is Charityware.  You can use and copy it as much as you like, but you are
encouraged to make a donation for needy children in Uganda.  Please see the
kcc section of the vim docs or visit the ICCF web site, available at these URLs:

        http://iccf-holland.org/
        http://www.vim.org/iccf/
        http://www.iccf.nl/

You can also sponsor the development of Vim.  Vim sponsors can vote for
features.  The money goes to Uganda anyway.
&lt;/code&gt;&lt;/pre&gt;

&lt;/article&gt;&lt;/div&gt;</description><author>neovim</author><guid isPermaLink="false">https://github.com/neovim/neovim</guid><pubDate>Tue, 28 Jan 2020 00:08:00 GMT</pubDate></item><item><title>ryanoasis/vim-devicons #9 in Vim script, This week</title><link>https://github.com/ryanoasis/vim-devicons</link><description>&lt;p&gt;&lt;i&gt;Adds file type icons to Vim plugins such as: NERDTree, vim-airline, CtrlP, unite, Denite, lightline, vim-startify and many more&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1 align="center"&gt;&lt;a id="user-content---" class="anchor" aria-hidden="true" href="#--"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/wiki/ryanoasis/vim-devicons/screenshots/v0.10.x/branding-logo-3.svg?sanitize=true"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/ryanoasis/vim-devicons/screenshots/v0.10.x/branding-logo-3.svg?sanitize=true" alt="VimDevIcons - Add Icons to Your Plugins" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;div align="center"&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/330d6e8687d8e07682f2373dacefd27b50863809/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f7279616e6f617369732f76696d2d64657669636f6e732e7376673f7374796c653d666f722d7468652d6261646765"&gt;&lt;img src="https://camo.githubusercontent.com/330d6e8687d8e07682f2373dacefd27b50863809/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f7279616e6f617369732f76696d2d64657669636f6e732e7376673f7374796c653d666f722d7468652d6261646765" alt="version" data-canonical-src="https://img.shields.io/github/release/ryanoasis/vim-devicons.svg?style=for-the-badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/325d5d8ea5585d3591f3a2258268da38a160efd1/68747470733a2f2f696d672e736869656c64732e696f2f6769747465722f726f6f6d2f6e776a732f6e772e6a732e7376673f7374796c653d666f722d7468652d6261646765"&gt;&lt;img src="https://camo.githubusercontent.com/325d5d8ea5585d3591f3a2258268da38a160efd1/68747470733a2f2f696d672e736869656c64732e696f2f6769747465722f726f6f6d2f6e776a732f6e772e6a732e7376673f7374796c653d666f722d7468652d6261646765" alt="chat on gitter" data-canonical-src="https://img.shields.io/gitter/room/nwjs/nw.js.svg?style=for-the-badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/da43ed1cc43c927683e9657363e784d545b6a252/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532306f662d636f6e647563742d6666363962342e7376673f7374796c653d666f722d7468652d6261646765"&gt;&lt;img src="https://camo.githubusercontent.com/da43ed1cc43c927683e9657363e784d545b6a252/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532306f662d636f6e647563742d6666363962342e7376673f7374796c653d666f722d7468652d6261646765" alt="code of conduct" data-canonical-src="https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=for-the-badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/96e40c13c6c39d67d9395e995c89c1bdd96b555c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e5355684555674141414341414141416743414d414141424570497247414141435746424d56455858576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b6f32466557434141414141585253546c4d41514f62595a674141414146695330644541496746485567414141414a6345685a637741414932384141434e76415458384225324673414141414864456c4e5251666842514d424d434c41665638354141414169306c455156513479324e67494259737a6b506d4a63354f525a45394467454a714e786d6d505325324234334141346835423554497762443525324248466e6f4b436f585953424d4249573743463065417843686f504d3441525848423447435a45494b4b413848253246436f5745314c41774942664256703677514131445068567a4d4a4d63796767435675717847492532464c685759365a3651504b6f4b37486d486b447744777859433867774d645344707258697a3650486a705178554267434c4466493747584e68356741414141424a52553545726b4a676767253344253344"&gt;&lt;img src="https://camo.githubusercontent.com/96e40c13c6c39d67d9395e995c89c1bdd96b555c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d64617461253341696d616765253246706e672533426261736536342532436956424f5277304b47676f414141414e5355684555674141414341414141416743414d414141424570497247414141435746424d56455858576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b7258576b6f32466557434141414141585253546c4d41514f62595a674141414146695330644541496746485567414141414a6345685a637741414932384141434e76415458384225324673414141414864456c4e5251666842514d424d434c41665638354141414169306c455156513479324e67494259737a6b506d4a63354f525a45394467454a714e786d6d505325324234334141346835423554497762443525324248466e6f4b436f585953424d4249573743463065417843686f504d3441525848423447435a45494b4b413848253246436f5745314c41774942664256703677514131445068567a4d4a4d63796767435675717847492532464c685759365a3651504b6f4b37486d486b447744777859433867774d645344707258697a3650486a705178554267434c4466493747584e68356741414141424a52553545726b4a676767253344253344" alt="prs welcome" data-canonical-src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=for-the-badge&amp;amp;logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAMAAABEpIrGAAACWFBMVEXXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWkrXWko2FeWCAAAAAXRSTlMAQObYZgAAAAFiS0dEAIgFHUgAAAAJcEhZcwAAI28AACNvATX8B%2FsAAAAHdElNRQfhBQMBMCLAfV85AAAAi0lEQVQ4y2NgIBYszkPmJc5ORZE9DgEJqNxmmPS%2B43AA4h5B5TIwbD5%2BHFnoKCoXYSBMBIW7CF0eAxChoPM4ARXHB4GCZEIKKA8H%2FCoWE1LAwIBfBVp6wQA1DPhVzMJMcyggCVuqxGI%2FLhWY6Z6QPKoK7HmHkDwDwxYC8gwMdSDprXiz6PHjpQxUBgCLDfI7GXNh5gAAAABJRU5ErkJggg%3D%3D" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Supports plugins such as &lt;a href="https://github.com/scrooloose/nerdtree"&gt;NERDTree&lt;/a&gt;, &lt;a href="https://github.com/vim-airline/vim-airline"&gt;vim-airline&lt;/a&gt;, &lt;a href="https://github.com/ctrlpvim/ctrlp.vim"&gt;CtrlP&lt;/a&gt;, &lt;a href="https://github.com/powerline/powerline"&gt;powerline&lt;/a&gt;, &lt;a href="https://github.com/Shougo/denite.nvim"&gt;denite&lt;/a&gt;, &lt;a href="https://github.com/Shougo/unite.vim"&gt;unite&lt;/a&gt;, &lt;a href="https://github.com/itchyny/lightline.vim"&gt;lightline.vim&lt;/a&gt;, &lt;a href="https://github.com/mhinz/vim-startify"&gt;vim-startify&lt;/a&gt;, &lt;a href="https://github.com/Shougo/vimfiler.vim"&gt;vimfiler&lt;/a&gt;, &lt;a href="https://github.com/bagrat/vim-buffet"&gt;vim-buffet&lt;/a&gt; and &lt;a href="https://github.com/tpope/vim-flagship"&gt;flagship&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 align="center"&gt;&lt;a id="user-content----1" class="anchor" aria-hidden="true" href="#---1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/ryanoasis/vim-devicons/wiki/screenshots/v0.10.x/overall-screenshot.png"&gt;&lt;img src="https://github.com/ryanoasis/vim-devicons/wiki/screenshots/v0.10.x/overall-screenshot.png" alt="vim-devicons overall screenshot" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;See &lt;a href="https://github.com/ryanoasis/vim-devicons/wiki/screenshots"&gt;Screenshots&lt;/a&gt; for more.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Adds filetype glyphs (icons) to various vim plugins.&lt;/li&gt;
&lt;li&gt;Customizable and extendable glyphs settings.&lt;/li&gt;
&lt;li&gt;Supports a wide range of file type extensions.&lt;/li&gt;
&lt;li&gt;Supports popular full filenames, like &lt;code&gt;.gitignore&lt;/code&gt;, &lt;code&gt;node_modules&lt;/code&gt;, &lt;code&gt;.vimrc&lt;/code&gt;, and many more.&lt;/li&gt;
&lt;li&gt;Supports byte order marker (BOM).&lt;/li&gt;
&lt;li&gt;Works with patched fonts, especially &lt;a href="https://github.com/ryanoasis/nerd-fonts"&gt;Nerd Fonts&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;See &lt;a href="https://github.com/ryanoasis/vim-devicons/wiki/Detailed-Features"&gt;Detailed Features&lt;/a&gt; for more.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;See &lt;a href="https://github.com/ryanoasis/vim-devicons/wiki/Extra-Configuration"&gt;Configuration&lt;/a&gt; for a list of configuration and customization options.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install a &lt;a href="https://github.com/ryanoasis/nerd-fonts#font-installation"&gt;Nerd Font compatible font&lt;/a&gt; or &lt;a href="https://github.com/ryanoasis/nerd-fonts#font-patcher"&gt;patch your own&lt;/a&gt;. Then set your terminal font (or &lt;code&gt;guifont&lt;/code&gt; if you are using GUI version of Vim).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install the Vim plugin with your favorite plugin manager, e.g. &lt;a href="https://github.com/junegunn/vim-plug"&gt;vim-plug&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ryanoasis/vim-devicons&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Always load the vim-devicons as the very last one.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure Vim&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;encoding&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;UTF&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;No need to set explicitly under Neovim: always uses UTF-8 as the default encoding.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;See &lt;a href="https://github.com/ryanoasis/vim-devicons/wiki/Installation"&gt;Installation&lt;/a&gt; for detailed setup instructions&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Use &lt;code&gt;:help devicons&lt;/code&gt; for further configuration.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-developers" class="anchor" aria-hidden="true" href="#developers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developers&lt;/h2&gt;
&lt;p&gt;See &lt;a href="DEVELOPER.md"&gt;DEVELOPER&lt;/a&gt; for how to use the API.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;p&gt;See &lt;a href="https://github.com/ryanoasis/vim-devicons/wiki/FAQ-&amp;amp;-Troubleshooting"&gt;FAQ&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This project has adopted a Code of Conduct that we expect project participants to adhere to. Check out &lt;a href="CODE_OF_CONDUCT.md"&gt;code of conduct&lt;/a&gt; for further details.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-contributing-guide" class="anchor" aria-hidden="true" href="#contributing-guide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Read our &lt;a href="CONTRIBUTING.md"&gt;contributing&lt;/a&gt; guide to learn about how to send pull requests, creating issues properly.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-promotion" class="anchor" aria-hidden="true" href="#promotion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Promotion&lt;/h3&gt;
&lt;p&gt;You can help us by simply giving a star or voting on vim.org. It will ensure continued development going forward.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Star this repository &lt;a href="https://github.com/ryanoasis/vim-devicons"&gt;on GitHub&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Vote for it &lt;a href="http://www.vim.org/scripts/script.php?script_id=5114" rel="nofollow"&gt;on vim.org&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgments" class="anchor" aria-hidden="true" href="#acknowledgments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgments&lt;/h2&gt;
&lt;p&gt;Thanks goes to these people for inspiration and helping with sending PRs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vim-airline/vim-airline"&gt;vim-airline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scrooloose/nerdtree"&gt;nerdtree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Xuyuanp/nerdtree-git-plugin"&gt;nerdtree-git-plugin&lt;/a&gt; by &lt;a href="https://github.com/Xuyuanp"&gt;@Xuyuanp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://atom.io/themes/seti-ui" rel="nofollow"&gt;seti-ui&lt;/a&gt; by &lt;a href="https://github.com/jesseweed"&gt;@jesseweed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://vorillaz.github.io/devicons" rel="nofollow"&gt;devicons&lt;/a&gt; by &lt;a href="https://github.com/vorillaz"&gt;@vorillaz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/benatespina/development.svg.icons"&gt;development.svg.icons&lt;/a&gt; by &lt;a href="https://github.com/benatespina"&gt;@benatespina&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://learnvimscriptthehardway.stevelosh.com/" rel="nofollow"&gt;Learn Vimscript the Hard Way&lt;/a&gt; book by &lt;a href="http://stevelosh.com/" rel="nofollow"&gt;Steve Losh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;All &lt;a href="https://github.com/ryanoasis/vim-devicons/graphs/contributors"&gt;contributors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="LICENSE"&gt;MIT&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ryanoasis</author><guid isPermaLink="false">https://github.com/ryanoasis/vim-devicons</guid><pubDate>Tue, 28 Jan 2020 00:09:00 GMT</pubDate></item><item><title>tpope/vim-commentary #10 in Vim script, This week</title><link>https://github.com/tpope/vim-commentary</link><description>&lt;p&gt;&lt;i&gt;commentary.vim: comment stuff out&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="markdown" data-path="README.markdown"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-commentaryvim" class="anchor" aria-hidden="true" href="#commentaryvim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;commentary.vim&lt;/h1&gt;
&lt;p&gt;Comment stuff out.  Use &lt;code&gt;gcc&lt;/code&gt; to comment out a line (takes a count),
&lt;code&gt;gc&lt;/code&gt; to comment out the target of a motion (for example, &lt;code&gt;gcap&lt;/code&gt; to
comment out a paragraph), &lt;code&gt;gc&lt;/code&gt; in visual mode to comment out the selection,
and &lt;code&gt;gc&lt;/code&gt; in operator pending mode to target a comment.  You can also use
it as a command, either with a range like &lt;code&gt;:7,17Commentary&lt;/code&gt;, or as part of a
&lt;code&gt;:global&lt;/code&gt; invocation like with &lt;code&gt;:g/TODO/Commentary&lt;/code&gt;. That's it.&lt;/p&gt;
&lt;p&gt;I wrote this because 5 years after Vim added support for mapping an
operator, I still couldn't find a commenting plugin that leveraged that
feature (I overlooked
&lt;a href="https://github.com/tomtom/tcomment_vim"&gt;tcomment.vim&lt;/a&gt;).  Striving for
minimalism, it weighs in at under 100 lines of code.&lt;/p&gt;
&lt;p&gt;Oh, and it uncomments, too.  The above maps actually toggle, and &lt;code&gt;gcgc&lt;/code&gt;
uncomments a set of adjacent commented lines.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Install using your favorite package manager, or use Vim's built-in package
support:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir -p ~/.vim/pack/tpope/start
cd ~/.vim/pack/tpope/start
git clone https://tpope.io/vim/commentary.git
vim -u NONE -c "helptags commentary/doc" -c q
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;My favorite file type isn't supported!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Relax!  You just have to adjust &lt;code&gt;'commentstring'&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;autocmd FileType apache setlocal commentstring=#\ %s
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-self-promotion" class="anchor" aria-hidden="true" href="#self-promotion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Self-Promotion&lt;/h2&gt;
&lt;p&gt;Like commentary.vim? Follow the repository on
&lt;a href="https://github.com/tpope/vim-commentary"&gt;GitHub&lt;/a&gt; and vote for it on
&lt;a href="http://www.vim.org/scripts/script.php?script_id=3695" rel="nofollow"&gt;vim.org&lt;/a&gt;.  And if
you're feeling especially charitable, follow &lt;a href="http://tpo.pe/" rel="nofollow"&gt;tpope&lt;/a&gt; on
&lt;a href="http://twitter.com/tpope" rel="nofollow"&gt;Twitter&lt;/a&gt; and
&lt;a href="https://github.com/tpope"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright (c) Tim Pope.  Distributed under the same terms as Vim itself.
See &lt;code&gt;:help license&lt;/code&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>tpope</author><guid isPermaLink="false">https://github.com/tpope/vim-commentary</guid><pubDate>Tue, 28 Jan 2020 00:10:00 GMT</pubDate></item><item><title>dense-analysis/ale #11 in Vim script, This week</title><link>https://github.com/dense-analysis/ale</link><description>&lt;p&gt;&lt;i&gt;Check syntax in Vim asynchronously and fix files, with Language Server Protocol (LSP) support&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-asynchronous-lint-engine---" class="anchor" aria-hidden="true" href="#asynchronous-lint-engine---"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Asynchronous Lint Engine &lt;a href="https://travis-ci.com/dense-analysis/ale" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f3dc746a1d838f3d1c0c3e372f13ed412b09c6fb/68747470733a2f2f7472617669732d63692e636f6d2f64656e73652d616e616c797369732f616c652e7376673f6272616e63683d6d6173746572" alt="Travis CI Build Status" data-canonical-src="https://travis-ci.com/dense-analysis/ale.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://ci.appveyor.com/project/dense-analysis/ale" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/00dd0dbedcf5279dfe726312b8136c63387566d4/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f7230656631787538786a6d696b3538642f6272616e63682f6d61737465723f7376673d74727565" alt="AppVeyor Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/r0ef1xu8xjmik58d/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://gitter.im/vim-ale/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/181fb2eac0b6fcf4abcc774a00a118f4400f5f13/68747470733a2f2f6261646765732e6769747465722e696d2f76696d2d616c652f4c6f6262792e737667" alt="Join the chat at https://gitter.im/vim-ale/Lobby" data-canonical-src="https://badges.gitter.im/vim-ale/Lobby.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/3518142/59195920-2c339500-8b85-11e9-9c22-f6b7f69637b8.jpg"&gt;&lt;img src="https://user-images.githubusercontent.com/3518142/59195920-2c339500-8b85-11e9-9c22-f6b7f69637b8.jpg" alt="ALE Logo by Mark Grealish - https://www.bhalash.com/" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ALE (Asynchronous Lint Engine) is a plugin providing linting (syntax checking
and semantic errors) in NeoVim 0.2.0+ and Vim 8 while you edit your text files,
and acts as a Vim &lt;a href="https://langserver.org/" rel="nofollow"&gt;Language Server Protocol&lt;/a&gt; client.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/3518142/59195938-3a81b100-8b85-11e9-8e8d-6a601b1db908.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/3518142/59195938-3a81b100-8b85-11e9-8e8d-6a601b1db908.gif" alt="A linting example with the darkspectrum color scheme in GVim." title="A linting example with the darkspectrum color scheme in GVim." style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ALE makes use of NeoVim and Vim 8 job control functions and timers to
run linters on the contents of text buffers and return errors as
text is changed in Vim. This allows for displaying warnings and
errors in files being edited in Vim before files have been saved
back to a filesystem.&lt;/p&gt;
&lt;p&gt;In other words, this plugin allows you to lint while you type.&lt;/p&gt;
&lt;p&gt;ALE offers support for fixing code with command line tools in a non-blocking
manner with the &lt;code&gt;:ALEFix&lt;/code&gt; feature, supporting tools in many languages, like
&lt;code&gt;prettier&lt;/code&gt;, &lt;code&gt;eslint&lt;/code&gt;, &lt;code&gt;autopep8&lt;/code&gt;, and more.&lt;/p&gt;
&lt;p&gt;ALE acts as a "language client" to support a variety of Language Server Protocol
features, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Diagnostics (via Language Server Protocol linters)&lt;/li&gt;
&lt;li&gt;Go To Definition (&lt;code&gt;:ALEGoToDefinition&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Completion (Built in completion support, or with Deoplete)&lt;/li&gt;
&lt;li&gt;Finding references (&lt;code&gt;:ALEFindReferences&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Hover information (&lt;code&gt;:ALEHover&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Symbol search (&lt;code&gt;:ALESymbolSearch&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you don't care about Language Server Protocol, ALE won't load any of the code
for working with it unless needed. One of ALE's general missions is that you
won't pay for the features that you don't use.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Help Wanted:&lt;/strong&gt; If you would like to help maintain this plugin by managing the
many issues and pull requests that are submitted, please send the author an
email at &lt;a href="mailto:dev@w0rp.com?subject=Helping%20with%20ALE"&gt;dev@w0rp.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you enjoy this plugin, feel free to contribute or check out the author's
other content at &lt;a href="https://w0rp.com" rel="nofollow"&gt;w0rp.com&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#supported-languages"&gt;Supported Languages and Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#usage-linting"&gt;Linting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage-fixing"&gt;Fixing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage-completion"&gt;Completion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage-go-to-definition"&gt;Go To Definition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage-find-references"&gt;Find References&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage-hover"&gt;Hovering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage-symbol-search"&gt;Symbol Search&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#standard-installation"&gt;Installation with Vim package management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation-with-pathogen"&gt;Installation with Pathogen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation-with-vundle"&gt;Installation with Vundle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation-with-vim-plug"&gt;Installation with Vim-Plug&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq"&gt;FAQ&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#faq-disable-linters"&gt;How do I disable particular linters?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq-keep-signs"&gt;How can I keep the sign gutter open?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq-change-signs"&gt;How can I change the signs ALE uses?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq-change-highlights"&gt;How can I change or disable the highlights ALE uses?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq-statusline"&gt;How can I show errors or warnings in my statusline?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq-lightline"&gt;How can I show errors or warnings in my lightline?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq-echo-format"&gt;How can I change the format for echo messages?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq-autocmd"&gt;How can I execute some code when ALE starts or stops linting?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq-navigation"&gt;How can I navigate between errors quickly?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq-lint-on-save"&gt;How can I run linters only when I save files?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq-quickfix"&gt;How can I use the quickfix list instead of the loclist?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq-jsx-stylelint-eslint"&gt;How can I check JSX files with both stylelint and eslint?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq-vue-eslint"&gt;How can I check Vue files with ESLint?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq-my-battery-is-sad"&gt;Will this plugin eat all of my laptop battery power?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq-c-configuration"&gt;How can I configure my C or C++ project?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq-buffer-configuration"&gt;How can I configure ALE differently for different buffers?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq-list-window-height"&gt;How can I configure the height of the list in which ALE displays errors?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq-get-info"&gt;How can I see what ALE has configured for the current file?&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a name="user-content-supported-languages"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-1-supported-languages-and-tools" class="anchor" aria-hidden="true" href="#1-supported-languages-and-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. Supported Languages and Tools&lt;/h2&gt;
&lt;p&gt;ALE supports a wide variety of languages and tools. See the
&lt;a href="supported-tools.md"&gt;full list&lt;/a&gt; in the
&lt;a href="supported-tools.md"&gt;Supported Languages and Tools&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-usage"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-2-usage" class="anchor" aria-hidden="true" href="#2-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. Usage&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-usage-linting"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-2i-linting" class="anchor" aria-hidden="true" href="#2i-linting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2.i Linting&lt;/h3&gt;
&lt;p&gt;Once this plugin is installed, while editing your files in supported
languages and tools which have been correctly installed,
this plugin will send the contents of your text buffers to a variety of
programs for checking the syntax and semantics of your programs. By default,
linters will be re-run in the background to check your syntax when you open
new buffers or as you make edits to your files.&lt;/p&gt;
&lt;p&gt;The behaviour of linting can be configured with a variety of options,
documented in &lt;a href="doc/ale.txt"&gt;the Vim help file&lt;/a&gt;. For more information on the
options ALE offers, consult &lt;code&gt;:help ale-options&lt;/code&gt; for global options and &lt;code&gt;:help ale-integration-options&lt;/code&gt; for options specified to particular linters.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-usage-fixing"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-2ii-fixing" class="anchor" aria-hidden="true" href="#2ii-fixing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2.ii Fixing&lt;/h3&gt;
&lt;p&gt;ALE can fix files with the &lt;code&gt;ALEFix&lt;/code&gt; command. Functions need to be configured
either in each buffer with a &lt;code&gt;b:ale_fixers&lt;/code&gt;, or globally with &lt;code&gt;g:ale_fixers&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The recommended way to configure fixers is to define a List in an ftplugin file.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; In ~/.vim/ftplugin/javascript.vim, or somewhere similar.&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Fix files with prettier, and then ESLint.&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;b:&lt;/span&gt;ale_fixers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;prettier&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;eslint&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Equivalent to the above.&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;b:&lt;/span&gt;ale_fixers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;javascript&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;prettier&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;eslint&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also configure your fixers from vimrc using &lt;code&gt;g:ale_fixers&lt;/code&gt;, before or
after ALE has been loaded.&lt;/p&gt;
&lt;p&gt;A &lt;code&gt;*&lt;/code&gt; in place of the filetype will apply a List of fixers to all files which
do not match some filetype in the Dictionary.&lt;/p&gt;
&lt;p&gt;Note that using a plain List for &lt;code&gt;g:ale_fixers&lt;/code&gt; is not supported.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; In ~/.vim/vimrc, or somewhere similar.&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_fixers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
&lt;span class="pl-cce"&gt;\ &lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;remove_trailing_lines&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;trim_whitespace&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;],
&lt;span class="pl-cce"&gt;\ &lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;javascript&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;eslint&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;],
&lt;span class="pl-cce"&gt;\}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want to automatically fix files when you save them, you need to turn
a setting on in vimrc.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Set this variable to 1 to fix files when you save them.&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_fix_on_save&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;:ALEFixSuggest&lt;/code&gt; command will suggest some supported tools for fixing code.
Both &lt;code&gt;g:ale_fixers&lt;/code&gt; and &lt;code&gt;b:ale_fixers&lt;/code&gt; can also accept functions, including
lambda functions, as fixers, for fixing files with custom tools.&lt;/p&gt;
&lt;p&gt;See &lt;code&gt;:help ale-fix&lt;/code&gt; for complete information on how to fix files with ALE.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-usage-completion"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-2iii-completion" class="anchor" aria-hidden="true" href="#2iii-completion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2.iii Completion&lt;/h3&gt;
&lt;p&gt;ALE offers some support for completion via hijacking of omnicompletion while you
type. All of ALE's completion information must come from Language Server
Protocol linters, or from &lt;code&gt;tsserver&lt;/code&gt; for TypeScript.&lt;/p&gt;
&lt;p&gt;ALE integrates with &lt;a href="https://github.com/Shougo/deoplete.nvim"&gt;Deoplete&lt;/a&gt; as a
completion source, named &lt;code&gt;'ale'&lt;/code&gt;. You can configure Deoplete to only use ALE as
the source of completion information, or mix it with other sources.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Use ALE and also some plugin 'foobar' as completion sources for all code.&lt;/span&gt;
&lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;deoplete#custom#option&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;sources&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, {
&lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;_&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ale&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foobar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;],
&lt;span class="pl-cce"&gt;\}&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ALE also offers its own automatic completion support, which does not require any
other plugins, and can be enabled by changing a setting before ALE is loaded.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Enable completion where available.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; This setting must be set before ALE is loaded.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; You should not turn this setting on if you wish to use ALE as a completion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; source for other completion plugins, like Deoplete.&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_completion_enabled&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ALE provides an omni-completion function you can use for triggering
completion manually with &lt;code&gt;&amp;lt;C-x&amp;gt;&amp;lt;C-o&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;omnifunc&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;ale#completion#OmniFunc&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When working with TypeScript files, ALE supports automatic imports from
external modules. This behavior is disabled by default and can be enabled by
setting:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_completion_tsserver_autoimport&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;code&gt;:help ale-completion&lt;/code&gt; for more information.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-usage-go-to-definition"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-2iv-go-to-definition" class="anchor" aria-hidden="true" href="#2iv-go-to-definition"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2.iv Go To Definition&lt;/h3&gt;
&lt;p&gt;ALE supports jumping to the definition of words under your cursor with the
&lt;code&gt;:ALEGoToDefinition&lt;/code&gt; command using any enabled Language Server Protocol linters
and &lt;code&gt;tsserver&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;code&gt;:help ale-go-to-definition&lt;/code&gt; for more information.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-usage-find-references"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-2v-find-references" class="anchor" aria-hidden="true" href="#2v-find-references"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2.v Find References&lt;/h3&gt;
&lt;p&gt;ALE supports finding references for words under your cursor with the
&lt;code&gt;:ALEFindReferences&lt;/code&gt; command using any enabled Language Server Protocol linters
and &lt;code&gt;tsserver&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;code&gt;:help ale-find-references&lt;/code&gt; for more information.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-usage-hover"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-2vi-hovering" class="anchor" aria-hidden="true" href="#2vi-hovering"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2.vi Hovering&lt;/h3&gt;
&lt;p&gt;ALE supports "hover" information for printing brief information about symbols at
the cursor taken from Language Server Protocol linters and &lt;code&gt;tsserver&lt;/code&gt; with the
&lt;code&gt;ALEHover&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;The information can be displayed in a &lt;code&gt;balloon&lt;/code&gt; tooltip in Vim or GVim by
hovering your mouse over symbols. Mouse hovering is enabled by default in GVim,
and needs to be configured for Vim 8.1+ in terminals.&lt;/p&gt;
&lt;p&gt;See &lt;code&gt;:help ale-hover&lt;/code&gt; for more information.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-usage-symbol-search"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-2vii-symbol-search" class="anchor" aria-hidden="true" href="#2vii-symbol-search"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2.vii Symbol Search&lt;/h3&gt;
&lt;p&gt;ALE supports searching for workspace symbols via Language Server Protocol
linters with the &lt;code&gt;ALESymbolSearch&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;Search queries can be performed to find functions, types, and more which are
similar to a given query string.&lt;/p&gt;
&lt;p&gt;See &lt;code&gt;:help ale-symbol-search&lt;/code&gt; for more information.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-installation"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-3-installation" class="anchor" aria-hidden="true" href="#3-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. Installation&lt;/h2&gt;
&lt;p&gt;To install this plugin, you should use one of the following methods.
For Windows users, replace usage of the Unix &lt;code&gt;~/.vim&lt;/code&gt; directory with
&lt;code&gt;%USERPROFILE%\vimfiles&lt;/code&gt;, or another directory if you have configured
Vim differently. On Windows, your &lt;code&gt;~/.vimrc&lt;/code&gt; file will be similarly
stored in &lt;code&gt;%USERPROFILE%\_vimrc&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-standard-installation"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-3i-installation-with-vim-package-management" class="anchor" aria-hidden="true" href="#3i-installation-with-vim-package-management"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3.i. Installation with Vim package management&lt;/h3&gt;
&lt;p&gt;In Vim 8 and NeoVim, you can install plugins easily without needing to use
any other tools. Simply clone the plugin into your &lt;code&gt;pack&lt;/code&gt; directory.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-vim-8-on-unix" class="anchor" aria-hidden="true" href="#vim-8-on-unix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vim 8 on Unix&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mkdir -p &lt;span class="pl-k"&gt;~&lt;/span&gt;/.vim/pack/git-plugins/start
git clone --depth 1 https://github.com/dense-analysis/ale.git &lt;span class="pl-k"&gt;~&lt;/span&gt;/.vim/pack/git-plugins/start/ale&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-neovim-on-unix" class="anchor" aria-hidden="true" href="#neovim-on-unix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NeoVim on Unix&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mkdir -p &lt;span class="pl-k"&gt;~&lt;/span&gt;/.local/share/nvim/site/pack/git-plugins/start
git clone --depth 1 https://github.com/dense-analysis/ale.git &lt;span class="pl-k"&gt;~&lt;/span&gt;/.local/share/nvim/site/pack/git-plugins/start/ale&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-vim-8-on-windows" class="anchor" aria-hidden="true" href="#vim-8-on-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vim 8 on Windows&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Run these commands in the "Git for Windows" Bash terminal&lt;/span&gt;
mkdir -p &lt;span class="pl-k"&gt;~&lt;/span&gt;/vimfiles/pack/git-plugins/start
git clone --depth 1 https://github.com/dense-analysis/ale.git &lt;span class="pl-k"&gt;~&lt;/span&gt;/vimfiles/pack/git-plugins/start/ale&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-generating-vim-help-files" class="anchor" aria-hidden="true" href="#generating-vim-help-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generating Vim help files&lt;/h4&gt;
&lt;p&gt;You can add the following line to your vimrc files to generate documentation
tags automatically, if you don't have something similar already, so you can use
the &lt;code&gt;:help&lt;/code&gt; command to consult ALE's online documentation:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Put these lines at the very end of your vimrc file.&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Load all plugins now.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Plugins need to be added to runtimepath before helptags can be generated.&lt;/span&gt;
&lt;span class="pl-c1"&gt;packloadall&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Load all of the helptags now, after plugins have been loaded.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; All messages and errors will be ignored.&lt;/span&gt;
&lt;span class="pl-c1"&gt;silent&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-c1"&gt;helptags&lt;/span&gt; &lt;span class="pl-c1"&gt;ALL&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a name="user-content-installation-with-pathogen"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-3ii-installation-with-pathogen" class="anchor" aria-hidden="true" href="#3ii-installation-with-pathogen"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3.ii. Installation with Pathogen&lt;/h3&gt;
&lt;p&gt;To install this module with &lt;a href="https://github.com/tpope/vim-pathogen"&gt;Pathogen&lt;/a&gt;,
you should clone this repository to your bundle directory, and ensure
you have the line &lt;code&gt;execute pathogen#infect()&lt;/code&gt; in your &lt;code&gt;~/.vimrc&lt;/code&gt; file.
You can run the following commands in your terminal to do so:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.vim/bundle
git clone https://github.com/dense-analysis/ale.git&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a name="user-content-installation-with-vundle"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-3iii-installation-with-vundle" class="anchor" aria-hidden="true" href="#3iii-installation-with-vundle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3.iii. Installation with Vundle&lt;/h3&gt;
&lt;p&gt;You can install this plugin using &lt;a href="https://github.com/VundleVim/Vundle.vim"&gt;Vundle&lt;/a&gt;
by using the path on GitHub for this repository.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Plugin&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;dense-analysis/ale&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the Vundle documentation for more information.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-installation-with-vim-plug"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-3iiii-installation-with-vim-plug" class="anchor" aria-hidden="true" href="#3iiii-installation-with-vim-plug"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3.iiii. Installation with Vim-Plug&lt;/h3&gt;
&lt;p&gt;You can install this plugin using &lt;a href="https://github.com/junegunn/vim-plug"&gt;Vim-Plug&lt;/a&gt;
by adding the GitHub path for this repository to your &lt;code&gt;~/.vimrc&lt;/code&gt;
and running &lt;code&gt;:PlugInstall&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;Plug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;dense-analysis/ale&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a name="user-content-contributing"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-4-contributing" class="anchor" aria-hidden="true" href="#4-contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4. Contributing&lt;/h2&gt;
&lt;p&gt;If you would like to see support for more languages and tools, please
&lt;a href="https://github.com/dense-analysis/ale/issues"&gt;create an issue&lt;/a&gt;
or &lt;a href="https://github.com/dense-analysis/ale/pulls"&gt;create a pull request&lt;/a&gt;.
If your tool can read from stdin or you have code to suggest which is good,
support can be happily added for it.&lt;/p&gt;
&lt;p&gt;If you are interested in the general direction of the project, check out the
&lt;a href="https://github.com/dense-analysis/ale/wiki"&gt;wiki home page&lt;/a&gt;. The wiki includes
a Roadmap for the future, and more.&lt;/p&gt;
&lt;p&gt;If you'd liked to discuss the project more directly, check out the &lt;code&gt;#vim-ale&lt;/code&gt; channel
on Freenode. Web chat is available &lt;a href="https://webchat.freenode.net/?channels=vim-ale" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-faq"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-5-faq" class="anchor" aria-hidden="true" href="#5-faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5. FAQ&lt;/h2&gt;
&lt;p&gt;&lt;a name="user-content-faq-disable-linters"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-5i-how-do-i-disable-particular-linters" class="anchor" aria-hidden="true" href="#5i-how-do-i-disable-particular-linters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5.i. How do I disable particular linters?&lt;/h3&gt;
&lt;p&gt;By default, all available tools for all supported languages will be run. If you
want to only select a subset of the tools, you can define &lt;code&gt;b:ale_linters&lt;/code&gt; for a
single buffer, or &lt;code&gt;g:ale_linters&lt;/code&gt; globally.&lt;/p&gt;
&lt;p&gt;The recommended way to configure linters is to define a List in an ftplugin
file.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; In ~/.vim/ftplugin/javascript.vim, or somewhere similar.&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Enable ESLint only for JavaScript.&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;b:&lt;/span&gt;ale_linters&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;eslint&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Equivalent to the above.&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;b:&lt;/span&gt;ale_linters&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;javascript&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;eslint&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also declare which linters you want to run in your vimrc file, before or
after ALE has been loaded.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; In ~/.vim/vimrc, or somewhere similar.&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_linters&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
&lt;span class="pl-cce"&gt;\ &lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;javascript&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;eslint&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;],
&lt;span class="pl-cce"&gt;\}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For all languages unspecified in the dictionary, all possible linters will
be run for those languages, just as when the dictionary is not defined.
Running many linters should not typically obstruct editing in Vim,
as they will all be executed in separate processes simultaneously.&lt;/p&gt;
&lt;p&gt;If you don't want ALE to run anything other than what you've explicitly asked
for, you can set &lt;code&gt;g:ale_linters_explicit&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Only run linters named in ale_linters settings.&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_linters_explicit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This plugin will look for linters in the &lt;a href="ale_linters"&gt;&lt;code&gt;ale_linters&lt;/code&gt;&lt;/a&gt; directory.
Each directory within corresponds to a particular filetype in Vim, and each file
in each directory corresponds to the name of a particular linter.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-faq-keep-signs"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-5ii-how-can-i-keep-the-sign-gutter-open" class="anchor" aria-hidden="true" href="#5ii-how-can-i-keep-the-sign-gutter-open"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5.ii. How can I keep the sign gutter open?&lt;/h3&gt;
&lt;p&gt;You can keep the sign gutter open at all times by setting the
&lt;code&gt;g:ale_sign_column_always&lt;/code&gt; to 1&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_sign_column_always&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a name="user-content-faq-change-signs"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-5iii-how-can-i-change-the-signs-ale-uses" class="anchor" aria-hidden="true" href="#5iii-how-can-i-change-the-signs-ale-uses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5.iii. How can I change the signs ALE uses?&lt;/h3&gt;
&lt;p&gt;Use these options to specify what text should be used for signs:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_sign_error&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;gt;&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_sign_warning&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ALE sets some background colors automatically for warnings and errors
in the sign gutter, with the names &lt;code&gt;ALEErrorSign&lt;/code&gt; and &lt;code&gt;ALEWarningSign&lt;/code&gt;.
These colors can be customised, or even removed completely:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;highlight&lt;/span&gt; &lt;span class="pl-c1"&gt;clear&lt;/span&gt; ALEErrorSign
&lt;span class="pl-c1"&gt;highlight&lt;/span&gt; &lt;span class="pl-c1"&gt;clear&lt;/span&gt; ALEWarningSign&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a name="user-content-faq-change-highlights"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-5iv-how-can-i-change-or-disable-the-highlights-ale-uses" class="anchor" aria-hidden="true" href="#5iv-how-can-i-change-or-disable-the-highlights-ale-uses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5.iv. How can I change or disable the highlights ALE uses?&lt;/h3&gt;
&lt;p&gt;ALE's highlights problems with highlight groups which link to &lt;code&gt;SpellBad&lt;/code&gt;,
&lt;code&gt;SpellCap&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, and &lt;code&gt;todo&lt;/code&gt; groups by default. The characters that are
highlighted depend on the linters being used, and the information provided to
ALE.&lt;/p&gt;
&lt;p&gt;Highlighting can be disabled completely by setting &lt;code&gt;g:ale_set_highlights&lt;/code&gt; to
&lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Set this in your vimrc file to disabling highlighting&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_set_highlights&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can control all of the highlights ALE uses, say if you are using a different
color scheme which produces ugly highlights. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;highlight&lt;/span&gt; ALEWarning ctermbg&lt;span class="pl-k"&gt;=&lt;/span&gt;DarkMagenta&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;code&gt;:help ale-highlights&lt;/code&gt; for more information.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-faq-statusline"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-5v-how-can-i-show-errors-or-warnings-in-my-statusline" class="anchor" aria-hidden="true" href="#5v-how-can-i-show-errors-or-warnings-in-my-statusline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5.v. How can I show errors or warnings in my statusline?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/vim-airline/vim-airline"&gt;vim-airline&lt;/a&gt; integrates with ALE
for displaying error information in the status bar. If you want to see the
status for ALE in a nice format, it is recommended to use vim-airline with ALE.
The airline extension can be enabled by adding the following to your vimrc:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Set this. Airline will handle the rest.&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;airline&lt;/span&gt;#extensions#ale#enabled &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you don't want to use vim-airline, you can implement your own statusline
function without adding any other plugins. ALE provides some functions to
assist in this endeavour, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ale#statusline#Count&lt;/code&gt;: Which returns the number of problems found by ALE
for a specified buffer.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ale#statusline#FirstProblem&lt;/code&gt;: Which returns a dictionary containing the
full loclist details of the first problem of a specified type found by ALE
in a buffer. (e.g. The first style warning in the current buffer.)
This can be useful for displaying more detailed information such as the
line number of the first problem in a file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Say you want to display all errors as one figure, and all non-errors as another
figure. You can do the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-en"&gt;LinterStatus&lt;/span&gt;() &lt;span class="pl-k"&gt;abort&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;l:&lt;/span&gt;counts&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;ale#statusline#Count&lt;/span&gt;(&lt;span class="pl-en"&gt;bufnr&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;))

    &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;l:&lt;/span&gt;all_errors&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;l:&lt;/span&gt;counts&lt;/span&gt;.&lt;span class="pl-c1"&gt;error&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;l:&lt;/span&gt;counts&lt;/span&gt;.style_error
    &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;l:&lt;/span&gt;all_non_errors&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;l:&lt;/span&gt;counts&lt;/span&gt;.total &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;l:&lt;/span&gt;all_errors&lt;/span&gt;

    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;l:&lt;/span&gt;counts&lt;/span&gt;.total &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; ? &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;OK&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; : &lt;span class="pl-en"&gt;printf&lt;/span&gt;(
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;%dW %dE&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;  all_non_errors,
    &lt;span class="pl-cce"&gt;\ &lt;/span&gt;  all_errors
    &lt;span class="pl-cce"&gt;\)&lt;/span&gt;
&lt;span class="pl-k"&gt;endfunction&lt;/span&gt;

&lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;statusline&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-k"&gt;%&lt;/span&gt;{&lt;span class="pl-en"&gt;LinterStatus&lt;/span&gt;()}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;code&gt;:help ale#statusline#Count()&lt;/code&gt; or &lt;code&gt;:help ale#statusline#FirstProblem()&lt;/code&gt;
for more information.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-faq-lightline"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-5vi-how-can-i-show-errors-or-warnings-in-my-lightline" class="anchor" aria-hidden="true" href="#5vi-how-can-i-show-errors-or-warnings-in-my-lightline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5.vi. How can I show errors or warnings in my lightline?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/itchyny/lightline.vim"&gt;lightline&lt;/a&gt; does not have built-in
support for ALE, nevertheless there is a plugin that adds this functionality: &lt;a href="https://github.com/maximbaz/lightline-ale"&gt;maximbaz/lightline-ale&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For more information, check out the sources of that plugin, &lt;code&gt;:help ale#statusline#Count()&lt;/code&gt; and &lt;a href="https://github.com/itchyny/lightline.vim#advanced-configuration"&gt;lightline documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-faq-echo-format"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-5vii-how-can-i-change-the-format-for-echo-messages" class="anchor" aria-hidden="true" href="#5vii-how-can-i-change-the-format-for-echo-messages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5.vii. How can I change the format for echo messages?&lt;/h3&gt;
&lt;p&gt;There are 3 global options that allow customizing the echoed message.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;g:ale_echo_msg_format&lt;/code&gt; where:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%s&lt;/code&gt; is the error message itself&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%...code...%&lt;/code&gt; is an optional error code, and most characters can be
written between the &lt;code&gt;%&lt;/code&gt; characters.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%linter%&lt;/code&gt; is the linter name&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%severity%&lt;/code&gt; is the severity type&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;g:ale_echo_msg_error_str&lt;/code&gt; is the string used for error severity.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;g:ale_echo_msg_warning_str&lt;/code&gt; is the string used for warning severity.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So for example this:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_echo_msg_error_str&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;E&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_echo_msg_warning_str&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;W&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_echo_msg_format&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;[%linter%] %s [%severity%]&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Will give you:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/3518142/59195927-348bd000-8b85-11e9-88b6-508a094f1548.png"&gt;&lt;img src="https://user-images.githubusercontent.com/3518142/59195927-348bd000-8b85-11e9-88b6-508a094f1548.png" alt="Echoed message" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;See &lt;code&gt;:help g:ale_echo_msg_format&lt;/code&gt; for more information.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-faq-autocmd"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-5viii-how-can-i-execute-some-code-when-ale-starts-or-stops-linting" class="anchor" aria-hidden="true" href="#5viii-how-can-i-execute-some-code-when-ale-starts-or-stops-linting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5.viii. How can I execute some code when ALE starts or stops linting?&lt;/h3&gt;
&lt;p&gt;ALE runs its own &lt;a href="http://vimdoc.sourceforge.net/htmldoc/autocmd.html" rel="nofollow"&gt;autocmd&lt;/a&gt;
events when a lint or fix cycle are started and stopped. There is also an event
that runs when a linter job has been successfully started. These events can be
used to call arbitrary functions during these respective parts of the ALE's
operation.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;augroup&lt;/span&gt; &lt;span class="pl-en"&gt;YourGroup&lt;/span&gt;
    &lt;span class="pl-c1"&gt;autocmd&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt;
    &lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;User&lt;/span&gt; ALELintPre    &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;YourFunction&lt;/span&gt;()
    &lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;User&lt;/span&gt; ALELintPost   &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;YourFunction&lt;/span&gt;()

    &lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;User&lt;/span&gt; ALEJobStarted &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;YourFunction&lt;/span&gt;()

    &lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;User&lt;/span&gt; ALEFixPre     &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;YourFunction&lt;/span&gt;()
    &lt;span class="pl-c1"&gt;autocmd&lt;/span&gt; &lt;span class="pl-c1"&gt;User&lt;/span&gt; ALEFixPost    &lt;span class="pl-c1"&gt;call&lt;/span&gt; &lt;span class="pl-en"&gt;YourFunction&lt;/span&gt;()
&lt;span class="pl-k"&gt;augroup&lt;/span&gt; &lt;span class="pl-k"&gt;END&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a name="user-content-faq-navigation"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-5ix-how-can-i-navigate-between-errors-quickly" class="anchor" aria-hidden="true" href="#5ix-how-can-i-navigate-between-errors-quickly"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5.ix. How can I navigate between errors quickly?&lt;/h3&gt;
&lt;p&gt;ALE offers some commands with &lt;code&gt;&amp;lt;Plug&amp;gt;&lt;/code&gt; keybinds for moving between warnings and
errors quickly. You can map the keys Ctrl+j and Ctrl+k to moving between errors
for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;silent&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;C-k&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(ale_previous_wrap)
&lt;span class="pl-c1"&gt;nmap&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;silent&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;C-j&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;lt;Plug&amp;gt;&lt;/span&gt;(ale_next_wrap)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more information, consult the online documentation with
&lt;code&gt;:help ale-navigation-commands&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-faq-lint-on-save"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-5x-how-can-i-run-linters-only-when-i-save-files" class="anchor" aria-hidden="true" href="#5x-how-can-i-run-linters-only-when-i-save-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5.x. How can I run linters only when I save files?&lt;/h3&gt;
&lt;p&gt;ALE offers an option &lt;code&gt;g:ale_lint_on_save&lt;/code&gt; for enabling running the linters
when files are saved. This option is enabled by default. If you only
wish to run linters when files are saved, you can turn the other
options off.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Write this in your vimrc file&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_lint_on_text_changed&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;never&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_lint_on_insert_leave&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; You can disable this option too&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; if you don't want linters to run on opening a file&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_lint_on_enter&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If for whatever reason you don't wish to run linters again when you save
files, you can set &lt;code&gt;g:ale_lint_on_save&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-faq-quickfix"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-5xi-how-can-i-use-the-quickfix-list-instead-of-the-loclist" class="anchor" aria-hidden="true" href="#5xi-how-can-i-use-the-quickfix-list-instead-of-the-loclist"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5.xi. How can I use the quickfix list instead of the loclist?&lt;/h3&gt;
&lt;p&gt;The quickfix list can be enabled by turning the &lt;code&gt;g:ale_set_quickfix&lt;/code&gt;
option on. If you wish to also disable the loclist, you can disable
the &lt;code&gt;g:ale_set_loclist&lt;/code&gt; option.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Write this in your vimrc file&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_set_loclist&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_set_quickfix&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you wish to show Vim windows for the loclist or quickfix items
when a file contains warnings or errors, &lt;code&gt;g:ale_open_list&lt;/code&gt; can be
set to &lt;code&gt;1&lt;/code&gt;. &lt;code&gt;g:ale_keep_list_window_open&lt;/code&gt; can be set to &lt;code&gt;1&lt;/code&gt;
if you wish to keep the window open even after errors disappear.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_open_list&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Set this if you want to.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; This can be useful if you are combining ALE with&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; some other plugin which sets quickfix errors, etc.&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_keep_list_window_open&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also set &lt;code&gt;let g:ale_list_vertical = 1&lt;/code&gt; to open the windows vertically
instead of the default horizontally.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-faq-jsx-stylelint-eslint"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-5xii-how-can-i-check-jsx-files-with-both-stylelint-and-eslint" class="anchor" aria-hidden="true" href="#5xii-how-can-i-check-jsx-files-with-both-stylelint-and-eslint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5.xii. How can I check JSX files with both stylelint and eslint?&lt;/h3&gt;
&lt;p&gt;If you configure ALE options correctly in your vimrc file, and install
the right tools, you can check JSX files with stylelint and eslint.&lt;/p&gt;
&lt;p&gt;First, install eslint and install stylelint with
&lt;a href="https://github.com/styled-components/stylelint-processor-styled-components"&gt;stylelint-processor-styled-components&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Supposing you have installed both tools correctly, configure your .jsx files so
&lt;code&gt;jsx&lt;/code&gt; is included in the filetype. You can use an &lt;code&gt;autocmd&lt;/code&gt; for this.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;augroup&lt;/span&gt; &lt;span class="pl-en"&gt;FiletypeGroup&lt;/span&gt;
    &lt;span class="pl-c1"&gt;autocmd&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt;
    &lt;span class="pl-c1"&gt;au&lt;/span&gt; &lt;span class="pl-c1"&gt;BufNewFile&lt;/span&gt;,&lt;span class="pl-c1"&gt;BufRead&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;.jsx &lt;span class="pl-c1"&gt;set&lt;/span&gt; &lt;span class="pl-c1"&gt;filetype&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;javascript.jsx
&lt;span class="pl-k"&gt;augroup&lt;/span&gt; &lt;span class="pl-k"&gt;END&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Supposing the filetype has been set correctly, you can set the following
options in a jsx.vim ftplugin file.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; In ~/.vim/ftplugin/jsx.vim, or somewhere similar.&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;b:&lt;/span&gt;ale_linter_aliases&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;css&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;javascript&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;b:&lt;/span&gt;ale_linters&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;stylelint&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;eslint&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or if you want, you can configure the linters from your vimrc file.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; In ~/.vim/vimrc, or somewhere similar.&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_linter_aliases&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;jsx&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;css&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;javascript&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]}
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_linters&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;jsx&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;stylelint&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;eslint&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ALE will alias the &lt;code&gt;jsx&lt;/code&gt; filetype so it uses the &lt;code&gt;css&lt;/code&gt; filetype linters, and
use the original Array of selected linters for &lt;code&gt;jsx&lt;/code&gt; from the &lt;code&gt;g:ale_linters&lt;/code&gt;
object. All available linters will be used for the filetype &lt;code&gt;javascript&lt;/code&gt;, and
no linter will be run twice for the same file.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-faq-vue-eslint"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-5xiii-how-can-i-check-vue-files-with-eslint" class="anchor" aria-hidden="true" href="#5xiii-how-can-i-check-vue-files-with-eslint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5.xiii. How can I check Vue files with ESLint?&lt;/h3&gt;
&lt;p&gt;To check Vue files with ESLint, your ESLint project configuration file must be
configured to use the &lt;a href="https://github.com/vuejs/eslint-plugin-vue"&gt;Vue plugin&lt;/a&gt;.
After that, you need to configure ALE so it will run the JavaScript ESLint
linter on your files. The settings you need are similar to the settings needed
for checking JSX code with both stylelint and ESLint, in the previous section.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; In ~/.vim/ftplugin/vue.vim, or somewhere similar.&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Run both javascript and vue linters for vue files.&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;b:&lt;/span&gt;ale_linter_aliases&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;javascript&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;vue&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Select the eslint and vls linters.&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;b:&lt;/span&gt;ale_linters&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;eslint&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;vls&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run &lt;code&gt;:ALEInfo&lt;/code&gt; to see which linters are available after telling ALE to run
JavaScript linters on Vue files. Not all linters support checking Vue files.&lt;/p&gt;
&lt;p&gt;If you don't want to configure your linters in ftplugin files for some reason,
you can configure them from your vimrc file instead.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; In ~/.vim/vimrc, or somewhere similar.&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_linter_aliases&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;vue&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;vue&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;javascript&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]}
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_linters&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;vue&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;eslint&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;vls&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a name="user-content-faq-my-battery-is-sad"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-5xiv-will-this-plugin-eat-all-of-my-laptop-battery-power" class="anchor" aria-hidden="true" href="#5xiv-will-this-plugin-eat-all-of-my-laptop-battery-power"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5.xiv. Will this plugin eat all of my laptop battery power?&lt;/h3&gt;
&lt;p&gt;ALE takes advantage of the power of various tools to check your code. This of
course means that CPU time will be used to continuously check your code. If you
are concerned about the CPU time ALE will spend, which will of course imply
some cost to battery life, you can adjust your settings to make your CPU do
less work.&lt;/p&gt;
&lt;p&gt;First, consider increasing the delay before which ALE will run any linters
while you type. ALE uses a timeout which is cancelled and reset every time you
type, and this delay can be increased so linters are run less often. See
&lt;code&gt;:help g:ale_lint_delay&lt;/code&gt; for more information.&lt;/p&gt;
&lt;p&gt;If you don't wish to run linters while you type, you can disable that behaviour.
Set &lt;code&gt;g:ale_lint_on_text_changed&lt;/code&gt; to &lt;code&gt;never&lt;/code&gt;. You won't get as frequent error
checking, but ALE shouldn't block your ability to edit a document after you save
a file, so the asynchronous nature of the plugin will still be an advantage.&lt;/p&gt;
&lt;p&gt;If you are still concerned, you can turn the automatic linting off altogether,
including the option &lt;code&gt;g:ale_lint_on_enter&lt;/code&gt;, and you can run ALE manually with
&lt;code&gt;:ALELint&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-faq-c-configuration"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-5xv-how-can-i-configure-my-c-or-c-project" class="anchor" aria-hidden="true" href="#5xv-how-can-i-configure-my-c-or-c-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5.xv. How can I configure my C or C++ project?&lt;/h3&gt;
&lt;p&gt;The structure of C and C++ projects varies wildly from project to project, with
many different build tools being used for building them, and many different
formats for project configuration files. ALE can run compilers easily, but
ALE cannot easily detect which compiler flags to use.&lt;/p&gt;
&lt;p&gt;Some tools and build configurations can generate
&lt;a href="https://clang.llvm.org/docs/JSONCompilationDatabase.html" rel="nofollow"&gt;compile_commands.json&lt;/a&gt;
files. The &lt;code&gt;cppcheck&lt;/code&gt;, &lt;code&gt;clangcheck&lt;/code&gt;, &lt;code&gt;clangtidy&lt;/code&gt; and &lt;code&gt;cquery&lt;/code&gt; linters can read
these files for automatically determining the appropriate compiler flags to
use.&lt;/p&gt;
&lt;p&gt;For linting with compilers like &lt;code&gt;gcc&lt;/code&gt; and &lt;code&gt;clang&lt;/code&gt;, and with other tools, you
will need to tell ALE which compiler flags to use yourself. You can use
different options for different projects with the &lt;code&gt;g:ale_pattern_options&lt;/code&gt;
setting.  Consult the documentation for that setting for more information.
&lt;code&gt;b:ale_linters&lt;/code&gt; can be used to select which tools you want to run, say if you
want to use only &lt;code&gt;gcc&lt;/code&gt; for one project, and only &lt;code&gt;clang&lt;/code&gt; for another.&lt;/p&gt;
&lt;p&gt;You may also configure buffer-local settings for linters with project-specific
vimrc files. &lt;a href="https://github.com/LucHermitte/local_vimrc"&gt;local_vimrc&lt;/a&gt; can be
used for executing local vimrc files which can be shared in your project.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-faq-buffer-configuration"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-5xvi-how-can-i-configure-ale-differently-for-different-buffers" class="anchor" aria-hidden="true" href="#5xvi-how-can-i-configure-ale-differently-for-different-buffers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5.xvi. How can I configure ALE differently for different buffers?&lt;/h3&gt;
&lt;p&gt;ALE offers various ways to configure which linters or fixers are run, and
other settings. For the majority of ALE's settings, they can either be
configured globally with a &lt;code&gt;g:&lt;/code&gt; variable prefix, or for a specific buffer
with a &lt;code&gt;b:&lt;/code&gt; variable prefix. For example, you can configure a Python ftplugin
file like so.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; In ~/.vim/ftplugin/python.vim&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Check Python files with flake8 and pylint.&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;b:&lt;/span&gt;ale_linters&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;flake8&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;pylint&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Fix Python files with autopep8 and yapf.&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;b:&lt;/span&gt;ale_fixers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;autopep8&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;yapf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Disable warnings about trailing whitespace for Python files.&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;b:&lt;/span&gt;ale_warn_about_trailing_whitespace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For configuring files based on regular expression patterns matched against the
absolute path to a file, you can use &lt;code&gt;g:ale_pattern_options&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Do not lint or fix minified files.&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_pattern_options&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
&lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\.min\.js$&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ale_linters&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ale_fixers&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: []},
&lt;span class="pl-cce"&gt;\ &lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\.min\.css$&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ale_linters&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: [], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ale_fixers&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: []},
&lt;span class="pl-cce"&gt;\}&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; If you configure g:ale_pattern_options outside of vimrc, you need this.&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_pattern_options_enabled&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Buffer-local variables for settings always override the global settings.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-faq-list-window-height"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-5xvii-how-can-i-configure-the-height-of-the-list-in-which-ale-displays-errors" class="anchor" aria-hidden="true" href="#5xvii-how-can-i-configure-the-height-of-the-list-in-which-ale-displays-errors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5.xvii. How can I configure the height of the list in which ALE displays errors?&lt;/h3&gt;
&lt;p&gt;To set a default height for the error list, use the &lt;code&gt;g:ale_list_window_size&lt;/code&gt; variable.&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;"&lt;/span&gt; Show 5 lines of errors (default: 10)&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-smi"&gt;&lt;span class="pl-k"&gt;g:&lt;/span&gt;ale_list_window_size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a name="user-content-faq-get-info"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-5xviii-how-can-i-see-what-ale-has-configured-for-the-current-file" class="anchor" aria-hidden="true" href="#5xviii-how-can-i-see-what-ale-has-configured-for-the-current-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5.xviii. How can I see what ALE has configured for the current file?&lt;/h3&gt;
&lt;p&gt;Run the following to see what is currently configured:&lt;/p&gt;
&lt;div class="highlight highlight-source-viml"&gt;&lt;pre&gt;:ALEInfo&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>dense-analysis</author><guid isPermaLink="false">https://github.com/dense-analysis/ale</guid><pubDate>Tue, 28 Jan 2020 00:11:00 GMT</pubDate></item></channel></rss>