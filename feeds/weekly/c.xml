<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: C, This week</title><link>https://github.com/trending/c?since=weekly</link><description>The top repositories on GitHub for c, measured weekly</description><pubDate>Sun, 10 Nov 2019 01:07:35 GMT</pubDate><lastBuildDate>Sun, 10 Nov 2019 01:07:35 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>jwchoi384/Gaussian_YOLOv3 #1 in C, This week</title><link>https://github.com/jwchoi384/Gaussian_YOLOv3</link><description>&lt;p&gt;&lt;i&gt;Gaussian YOLOv3: An Accurate and Fast Object Detector Using Localization Uncertainty for Autonomous Driving (ICCV, 2019)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-gaussian-yolov3-an-accurate-and-fast-object-detector-using-localization-uncertainty-for-autonomous-driving" class="anchor" aria-hidden="true" href="#gaussian-yolov3-an-accurate-and-fast-object-detector-using-localization-uncertainty-for-autonomous-driving"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gaussian YOLOv3: An Accurate and Fast Object Detector Using Localization Uncertainty for Autonomous Driving&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/jwchoi384/Gaussian_YOLOv3"&gt;Gaussian YOLOv3 implementation&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This repository contains the code for our &lt;strong&gt;ICCV 2019&lt;/strong&gt; &lt;a href="http://openaccess.thecvf.com/content_ICCV_2019/html/Choi_Gaussian_YOLOv3_An_Accurate_and_Fast_Object_Detector_Using_Localization_ICCV_2019_paper.html" rel="nofollow"&gt;Paper&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The proposed algorithm is implemented based on the &lt;a href="https://github.com/pjreddie/darknet"&gt;YOLOv3 official code&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/56669525/67075282-d2dc1200-f1c5-11e9-8af9-9f874e89197d.png"&gt;&lt;img src="https://user-images.githubusercontent.com/56669525/67075282-d2dc1200-f1c5-11e9-8af9-9f874e89197d.png" width="100%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The provided example weight file ("&lt;a href="https://drive.google.com/open?id=1Eutnens-3z6o4LYe0PZXJ1VYNwcZ6-2Y" rel="nofollow"&gt;Gaussian_yolov3_BDD.weights&lt;/a&gt;") is not the weight file used in the paper, but newly trained weight for release code validation. Because this weight file is more accurate than the weight used in the paper, we provide this file in the repository.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-poster" class="anchor" aria-hidden="true" href="#poster"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Poster&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/56669525/67777222-c64c9900-faa4-11e9-861d-4ea3b36db986.PNG"&gt;&lt;img src="https://user-images.githubusercontent.com/56669525/67777222-c64c9900-faa4-11e9-861d-4ea3b36db986.PNG" width="100%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citation&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;@InProceedings{Choi_2019_ICCV,
author = {Choi, Jiwoong and Chun, Dayoung and Kim, Hyun and Lee, Hyuk-Jae},
title = {Gaussian YOLOv3: An Accurate and Fast Object Detector Using Localization Uncertainty for Autonomous Driving},
booktitle = {The IEEE International Conference on Computer Vision (ICCV)},
month = {October},
year = {2019}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;The code was tested on&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Ubuntu 16.04, NVIDIA GTX 1080 Ti with CUDA 8.0 and cuDNNv7, OpenCV 3.4.0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Ubuntu 16.04, NVIDIA Titan Xp with CUDA 9.0 and cuDNNv7, OpenCV 3.3.0&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup&lt;/h2&gt;
&lt;p&gt;Please see the YOLOv3 website instructions &lt;a href="https://pjreddie.com/darknet/yolo/" rel="nofollow"&gt;setup&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dataset" class="anchor" aria-hidden="true" href="#dataset"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dataset&lt;/h2&gt;
&lt;p&gt;We tested our algorithm using Berkeley deep drive (BDD) dataset.&lt;/p&gt;
&lt;p&gt;If you want to use BDD dataset, please see &lt;a href="https://bdd-data.berkeley.edu/" rel="nofollow"&gt;BDD website&lt;/a&gt; and download the dataset.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-training" class="anchor" aria-hidden="true" href="#training"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Training&lt;/h2&gt;
&lt;p&gt;For training, you must make image list file (&lt;em&gt;e.g.,&lt;/em&gt; "train_bdd_list.txt") and ground-truth data. Please see these websites: &lt;a href="https://pjreddie.com/darknet/yolo/" rel="nofollow"&gt;YOLOv3&lt;/a&gt;, &lt;a href="https://timebutt.github.io/static/how-to-train-yolov2-to-detect-custom-objects/" rel="nofollow"&gt;How to train YOLO&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;List files ("train_bdd_list.txt", "val_bdd_list.txt", "test_bdd_list.txt") in the repository are an example. You must modify the directory of the file name in the list to match the path where the dataset is located on your computer.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Download pre-trained weights &lt;a href="http://pjreddie.com/media/files/darknet53.conv.74" rel="nofollow"&gt;darknet53.conv.74&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Download the code&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;git clone https&lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;github.com/jwchoi384/Gaussian_YOLOv3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;cd Gaussian_YOLOv3&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Compile the code&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;make&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Set batch=64 and subdivisions=16 in the cfg file.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We used 4 gpus in our experiment. If your computer runs out of GPU memory when training, please increase subdivision size in the cfg file.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Start training by using the command line&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;./&lt;/span&gt;darknet detector train cfg&lt;span class="pl-k"&gt;/&lt;/span&gt;BDD.&lt;span class="pl-smi"&gt;data&lt;/span&gt; cfg&lt;span class="pl-k"&gt;/&lt;/span&gt;Gaussian_yolov3_BDD.&lt;span class="pl-smi"&gt;cfg&lt;/span&gt; darknet53.&lt;span class="pl-smi"&gt;conv&lt;/span&gt;.74&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want to use multiple gpus,&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;./&lt;/span&gt;darknet detector train cfg&lt;span class="pl-k"&gt;/&lt;/span&gt;BDD.&lt;span class="pl-smi"&gt;data&lt;/span&gt; cfg&lt;span class="pl-k"&gt;/&lt;/span&gt;Gaussian_yolov3_BDD.&lt;span class="pl-smi"&gt;cfg&lt;/span&gt; darknet53.&lt;span class="pl-smi"&gt;conv&lt;/span&gt;.74 &lt;span class="pl-k"&gt;-&lt;/span&gt;gpus &lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-inference" class="anchor" aria-hidden="true" href="#inference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inference&lt;/h2&gt;
&lt;p&gt;Download the Gaussian_YOLOv3 example weight file. &lt;a href="https://drive.google.com/open?id=1Eutnens-3z6o4LYe0PZXJ1VYNwcZ6-2Y" rel="nofollow"&gt;Gaussian_yolov3_BDD.weights&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Set batch=1 and subdivisions=1 in the cfg file.&lt;/p&gt;
&lt;p&gt;Run the following commands.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;make&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./darknet detector test cfg/BDD.data cfg/Gaussian_yolov3_BDD.cfg Gaussian_yolov3_BDD.weights data/example.jpg&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You can see the result:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/56669525/67030475-7091fb80-f14a-11e9-8eeb-e71a8f3b4ee2.jpg"&gt;&lt;img src="https://user-images.githubusercontent.com/56669525/67030475-7091fb80-f14a-11e9-8eeb-e71a8f3b4ee2.jpg" width="80%" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-evaluation" class="anchor" aria-hidden="true" href="#evaluation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Evaluation&lt;/h2&gt;
&lt;p&gt;Download the Gaussian_YOLOv3 example weight file. &lt;a href="https://drive.google.com/open?id=1Eutnens-3z6o4LYe0PZXJ1VYNwcZ6-2Y" rel="nofollow"&gt;Gaussian_yolov3_BDD.weights&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For evaluation, you MUST change the batch and subdivision size in cfg file.
Like this: &lt;code&gt;batch = 1, subdivision = 1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Run the following commands. You can get a detection speed of more than 42 FPS.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;make&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;./darknet detector valid cfg/BDD.data cfg/Gaussian_yolov3_BDD.cfg Gaussian_yolov3_BDD.weights&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;cd bdd_evaluation/&lt;/code&gt; (We got this code from &lt;a href="https://github.com/ucbdrive/bdd-data"&gt;https://github.com/ucbdrive/bdd-data&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;python evaluate.py det gt_bdd_val.json ../results/bdd_results.json&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You will get:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;AP : 9.45 (bike)
AP : 40.28 (bus)
AP : 40.56 (car)
AP : 8.66 (motor)
AP : 16.85 (person)
AP : 10.59 (rider)
AP : 7.91 (traffic light)
AP : 23.15 (traffic sign)
AP : 0.00 (train)
AP : 40.28 (truck)
[9.448295420802772, 40.28022967768842, 40.562338308273596, 8.658317480713093, 16.85103955706777, 10.588396343004272, 7.914563796458698, 23.147189144825003, 0.0, 40.27786994583501] 

9.45 40.28 40.56 8.66 16.85 10.59 7.91 23.15 0.00 40.28

mAP 19.77 (512 x 512 input resolution)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want to get the mAP for BDD test set,&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;make&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Change the list file in cfg file ("val_bdd_list.txt" --&amp;gt; "test_bdd_list.txt" in "cfg/BDD.data")&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./darknet detector valid cfg/BDD.data cfg/Gaussian_yolov3_BDD.cfg Gaussian_yolov3_BDD.weights&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Upload result file ("results/bdd_results.json") on BDD evaluation server&lt;/code&gt; &lt;a href="https://bdd-data.berkeley.edu/portal.html" rel="nofollow"&gt;Link&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;On the BDD test set, we got 19.2 mAP (512 x 512 input resolution).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h2&gt;
&lt;p&gt;For questions about our paper or code, please contact Jiwoong Choi.&lt;/p&gt;
&lt;p&gt;&lt;a href="mailto:jwchoi384@gmail.com"&gt;jwchoi384@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jwchoi384</author><guid isPermaLink="false">https://github.com/jwchoi384/Gaussian_YOLOv3</guid><pubDate>Sun, 10 Nov 2019 00:01:00 GMT</pubDate></item><item><title>torvalds/linux #2 in C, This week</title><link>https://github.com/torvalds/linux</link><description>&lt;p&gt;&lt;i&gt;Linux kernel source tree&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body " data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;Linux kernel
============

There are several guides for kernel developers and users. These guides can
be rendered in a number of formats, like HTML and PDF. Please read
Documentation/admin-guide/README.rst first.

In order to build the documentation, use ``make htmldocs`` or
``make pdfdocs``.  The formatted documentation can also be read online at:

    &lt;a href="https://www.kernel.org/doc/html/latest/" rel="nofollow"&gt;https://www.kernel.org/doc/html/latest/&lt;/a&gt;

There are various text files in the Documentation/ subdirectory,
several of them using the Restructured Text markup notation.

Please read the Documentation/process/changes.rst file, as it contains the
requirements for building and running the kernel, and information about
the problems which may result by upgrading your kernel.
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>torvalds</author><guid isPermaLink="false">https://github.com/torvalds/linux</guid><pubDate>Sun, 10 Nov 2019 00:02:00 GMT</pubDate></item><item><title>openssh/openssh-portable #3 in C, This week</title><link>https://github.com/openssh/openssh-portable</link><description>&lt;p&gt;&lt;i&gt;Portable OpenSSH&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-portable-openssh" class="anchor" aria-hidden="true" href="#portable-openssh"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Portable OpenSSH&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:openssh" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7644d70d9e341a7d67407b326782689005600db0/68747470733a2f2f6f73732d66757a7a2d6275696c642d6c6f67732e73746f726167652e676f6f676c65617069732e636f6d2f6261646765732f6f70656e7373682e737667" alt="Fuzzing Status" data-canonical-src="https://oss-fuzz-build-logs.storage.googleapis.com/badges/openssh.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;OpenSSH is a complete implementation of the SSH protocol (version 2) for secure remote login, command execution and file transfer. It includes a client &lt;code&gt;ssh&lt;/code&gt; and server &lt;code&gt;sshd&lt;/code&gt;, file transfer utilities &lt;code&gt;scp&lt;/code&gt; and &lt;code&gt;sftp&lt;/code&gt; as well as tools for key generation (&lt;code&gt;ssh-keygen&lt;/code&gt;), run-time key storage (&lt;code&gt;ssh-agent&lt;/code&gt;) and a number of supporting programs.&lt;/p&gt;
&lt;p&gt;This is a port of OpenBSD's &lt;a href="https://openssh.com" rel="nofollow"&gt;OpenSSH&lt;/a&gt; to most Unix-like operating systems, including Linux, OS X and Cygwin. Portable OpenSSH polyfills OpenBSD APIs that are not available elsewhere, adds sshd sandboxing for more operating systems and includes support for OS-native authentication and auditing (e.g. using PAM).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;The official documentation for OpenSSH are the man pages for each tool:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://man.openbsd.org/ssh.1" rel="nofollow"&gt;ssh(1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://man.openbsd.org/sshd.8" rel="nofollow"&gt;sshd(8)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://man.openbsd.org/ssh-keygen.1" rel="nofollow"&gt;ssh-keygen(1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://man.openbsd.org/ssh-agent.1" rel="nofollow"&gt;ssh-agent(1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://man.openbsd.org/scp.1" rel="nofollow"&gt;scp(1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://man.openbsd.org/sftp.1" rel="nofollow"&gt;sftp(1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://man.openbsd.org/ssh-keyscan.8" rel="nofollow"&gt;ssh-keyscan(8)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://man.openbsd.org/sftp-server.8" rel="nofollow"&gt;sftp-server(8)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-stable-releases" class="anchor" aria-hidden="true" href="#stable-releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Stable Releases&lt;/h2&gt;
&lt;p&gt;Stable release tarballs are available from a number of &lt;a href="https://www.openssh.com/portable.html#downloads" rel="nofollow"&gt;download mirrors&lt;/a&gt;. We recommend the use of a stable release for most users. Please read the &lt;a href="https://www.openssh.com/releasenotes.html" rel="nofollow"&gt;release notes&lt;/a&gt; for details of recent changes and potential incompatibilities.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-portable-openssh" class="anchor" aria-hidden="true" href="#building-portable-openssh"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Portable OpenSSH&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h3&gt;
&lt;p&gt;Portable OpenSSH is built using autoconf and make. It requires a working C compiler, standard library and headers, as well as &lt;a href="https://www.zlib.net/" rel="nofollow"&gt;zlib&lt;/a&gt; and &lt;code&gt;libcrypto&lt;/code&gt; from either &lt;a href="https://www.libressl.org/" rel="nofollow"&gt;LibreSSL&lt;/a&gt; or &lt;a href="https://www.openssl.org" rel="nofollow"&gt;OpenSSL&lt;/a&gt; to build. Certain platforms and build-time options may require additional dependencies.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-a-release" class="anchor" aria-hidden="true" href="#building-a-release"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building a release&lt;/h3&gt;
&lt;p&gt;Releases include a pre-built copy of the &lt;code&gt;configure&lt;/code&gt; script and may be built using:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tar zxvf openssh-X.Y.tar.gz
cd openssh
./configure # [options]
make &amp;amp;&amp;amp; make tests
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See the &lt;a href="#build-time-customisation"&gt;Build-time Customisation&lt;/a&gt; section below for configure options. If you plan on installing OpenSSH to your system, then you will usually want to specify destination paths.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-from-git" class="anchor" aria-hidden="true" href="#building-from-git"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building from git&lt;/h3&gt;
&lt;p&gt;If building from git, you'll need &lt;a href="https://www.gnu.org/software/autoconf/" rel="nofollow"&gt;autoconf&lt;/a&gt; installed to build the &lt;code&gt;configure&lt;/code&gt; script. The following commands will check out and build portable OpenSSH from git:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/openssh/openssh-portable # or https://anongit.mindrot.org/openssh.git
cd openssh-portable
autoreconf
./configure
make &amp;amp;&amp;amp; make tests
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-build-time-customisation" class="anchor" aria-hidden="true" href="#build-time-customisation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build-time Customisation&lt;/h3&gt;
&lt;p&gt;There are many build-time customisation options available. All Autoconf destination path flags (e.g. &lt;code&gt;--prefix&lt;/code&gt;) are supported (and are usually required if you want to install OpenSSH).&lt;/p&gt;
&lt;p&gt;For a full list of available flags, run &lt;code&gt;configure --help&lt;/code&gt; but a few of the more frequently-used ones are described below. Some of these flags will require additional libraries and/or headers be installed.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Flag&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--with-pam&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Enable &lt;a href="https://en.wikipedia.org/wiki/Pluggable_authentication_module" rel="nofollow"&gt;PAM&lt;/a&gt; support. &lt;a href="https://www.openpam.org/" rel="nofollow"&gt;OpenPAM&lt;/a&gt;, &lt;a href="http://www.linux-pam.org/" rel="nofollow"&gt;Linux PAM&lt;/a&gt; and Solaris PAM are supported.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--with-libedit&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Enable &lt;a href="https://www.thrysoee.dk/editline/" rel="nofollow"&gt;libedit&lt;/a&gt; support for sftp.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--with-kerberos5&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Enable Kerberos/GSSAPI support. Both &lt;a href="https://www.h5l.org/" rel="nofollow"&gt;Heimdal&lt;/a&gt; and &lt;a href="https://web.mit.edu/kerberos/" rel="nofollow"&gt;MIT&lt;/a&gt; Kerberos implementations are supported.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--with-selinux&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Enable &lt;a href="https://en.wikipedia.org/wiki/Security-Enhanced_Linux" rel="nofollow"&gt;SELinux&lt;/a&gt; support.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;p&gt;Portable OpenSSH development is discussed on the &lt;a href="https://lists.mindrot.org/mailman/listinfo/openssh-unix-dev" rel="nofollow"&gt;openssh-unix-dev mailing list&lt;/a&gt; (&lt;a href="https://marc.info/?l=openssh-unix-dev" rel="nofollow"&gt;archive mirror&lt;/a&gt;). Bugs and feature requests are tracked on our &lt;a href="https://bugzilla.mindrot.org/" rel="nofollow"&gt;Bugzilla&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reporting-bugs" class="anchor" aria-hidden="true" href="#reporting-bugs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting bugs&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Non-security&lt;/em&gt; bugs may be reported to the developers via &lt;a href="https://bugzilla.mindrot.org/" rel="nofollow"&gt;Bugzilla&lt;/a&gt; or via the mailing list above. Security bugs should be reported to &lt;a href="mailto:openssh.openssh.com"&gt;openssh@openssh.com&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>openssh</author><guid isPermaLink="false">https://github.com/openssh/openssh-portable</guid><pubDate>Sun, 10 Nov 2019 00:03:00 GMT</pubDate></item><item><title>micropython/micropython #4 in C, This week</title><link>https://github.com/micropython/micropython</link><description>&lt;p&gt;&lt;i&gt;MicroPython - a lean and efficient Python implementation for microcontrollers and constrained systems&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/micropython/micropython" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5134d05f6dd511adb7fc9847532e8a7b4704a04e/68747470733a2f2f7472617669732d63692e6f72672f6d6963726f707974686f6e2f6d6963726f707974686f6e2e706e673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/micropython/micropython.png?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/r/micropython/micropython?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/58ea07629a38b6fe6fc115ddb82bfc39f1f5a665/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6d6963726f707974686f6e2f6d6963726f707974686f6e2f62616467652e706e673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/micropython/micropython/badge.png?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-the-micropython-project" class="anchor" aria-hidden="true" href="#the-micropython-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The MicroPython project&lt;/h1&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/micropython/micropython/master/logo/upython-with-micro.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/micropython/micropython/master/logo/upython-with-micro.jpg" alt="MicroPython Logo" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;This is the MicroPython project, which aims to put an implementation
of Python 3.x on microcontrollers and small embedded systems.
You can find the official website at &lt;a href="http://www.micropython.org" rel="nofollow"&gt;micropython.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;WARNING: this project is in beta stage and is subject to changes of the
code-base, including project-wide name changes and API changes.&lt;/p&gt;
&lt;p&gt;MicroPython implements the entire Python 3.4 syntax (including exceptions,
&lt;code&gt;with&lt;/code&gt;, &lt;code&gt;yield from&lt;/code&gt;, etc., and additionally &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; keywords from
Python 3.5). The following core datatypes are provided: &lt;code&gt;str&lt;/code&gt; (including
basic Unicode support), &lt;code&gt;bytes&lt;/code&gt;, &lt;code&gt;bytearray&lt;/code&gt;, &lt;code&gt;tuple&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;dict&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;,
&lt;code&gt;frozenset&lt;/code&gt;, &lt;code&gt;array.array&lt;/code&gt;, &lt;code&gt;collections.namedtuple&lt;/code&gt;, classes and instances.
Builtin modules include &lt;code&gt;sys&lt;/code&gt;, &lt;code&gt;time&lt;/code&gt;, and &lt;code&gt;struct&lt;/code&gt;, etc. Select ports have
support for &lt;code&gt;_thread&lt;/code&gt; module (multithreading). Note that only a subset of
Python 3 functionality is implemented for the data types and modules.&lt;/p&gt;
&lt;p&gt;MicroPython can execute scripts in textual source form or from precompiled
bytecode, in both cases either from an on-device filesystem or "frozen" into
the MicroPython executable.&lt;/p&gt;
&lt;p&gt;See the repository &lt;a href="http://github.com/micropython/pyboard"&gt;http://github.com/micropython/pyboard&lt;/a&gt; for the MicroPython
board (PyBoard), the officially supported reference electronic circuit board.&lt;/p&gt;
&lt;p&gt;Major components in this repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;py/ -- the core Python implementation, including compiler, runtime, and
core library.&lt;/li&gt;
&lt;li&gt;mpy-cross/ -- the MicroPython cross-compiler which is used to turn scripts
into precompiled bytecode.&lt;/li&gt;
&lt;li&gt;ports/unix/ -- a version of MicroPython that runs on Unix.&lt;/li&gt;
&lt;li&gt;ports/stm32/ -- a version of MicroPython that runs on the PyBoard and similar
STM32 boards (using ST's Cube HAL drivers).&lt;/li&gt;
&lt;li&gt;ports/minimal/ -- a minimal MicroPython port. Start with this if you want
to port MicroPython to another microcontroller.&lt;/li&gt;
&lt;li&gt;tests/ -- test framework and test scripts.&lt;/li&gt;
&lt;li&gt;docs/ -- user documentation in Sphinx reStructuredText format. Rendered
HTML documentation is available at &lt;a href="http://docs.micropython.org" rel="nofollow"&gt;http://docs.micropython.org&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additional components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ports/bare-arm/ -- a bare minimum version of MicroPython for ARM MCUs. Used
mostly to control code size.&lt;/li&gt;
&lt;li&gt;ports/teensy/ -- a version of MicroPython that runs on the Teensy 3.1
(preliminary but functional).&lt;/li&gt;
&lt;li&gt;ports/pic16bit/ -- a version of MicroPython for 16-bit PIC microcontrollers.&lt;/li&gt;
&lt;li&gt;ports/cc3200/ -- a version of MicroPython that runs on the CC3200 from TI.&lt;/li&gt;
&lt;li&gt;ports/esp8266/ -- a version of MicroPython that runs on Espressif's ESP8266 SoC.&lt;/li&gt;
&lt;li&gt;ports/esp32/ -- a version of MicroPython that runs on Espressif's ESP32 SoC.&lt;/li&gt;
&lt;li&gt;ports/nrf/ -- a version of MicroPython that runs on Nordic's nRF51 and nRF52 MCUs.&lt;/li&gt;
&lt;li&gt;extmod/ -- additional (non-core) modules implemented in C.&lt;/li&gt;
&lt;li&gt;tools/ -- various tools, including the pyboard.py module.&lt;/li&gt;
&lt;li&gt;examples/ -- a few example Python scripts.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The subdirectories above may include READMEs with additional info.&lt;/p&gt;
&lt;p&gt;"make" is used to build the components, or "gmake" on BSD-based systems.
You will also need bash, gcc, and Python 3.3+ available as the command &lt;code&gt;python3&lt;/code&gt;
(if your system only has Python 2.7 then invoke make with the additional option
&lt;code&gt;PYTHON=python2&lt;/code&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-micropython-cross-compiler-mpy-cross" class="anchor" aria-hidden="true" href="#the-micropython-cross-compiler-mpy-cross"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The MicroPython cross-compiler, mpy-cross&lt;/h2&gt;
&lt;p&gt;Most ports require the MicroPython cross-compiler to be built first.  This
program, called mpy-cross, is used to pre-compile Python scripts to .mpy
files which can then be included (frozen) into the firmware/executable for
a port.  To build mpy-cross use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd mpy-cross
$ make
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-the-unix-version" class="anchor" aria-hidden="true" href="#the-unix-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Unix version&lt;/h2&gt;
&lt;p&gt;The "unix" port requires a standard Unix environment with gcc and GNU make.
x86 and x64 architectures are supported (i.e. x86 32- and 64-bit), as well
as ARM and MIPS. Making full-featured port to another architecture requires
writing some assembly code for the exception handling and garbage collection.
Alternatively, fallback implementation based on setjmp/longjmp can be used.&lt;/p&gt;
&lt;p&gt;To build (see section below for required dependencies):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd ports/unix
$ make submodules
$ make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then to give it a try:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./micropython
&amp;gt;&amp;gt;&amp;gt; list(5 * x + y for x in range(10) for y in [4, 2, 1])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Use &lt;code&gt;CTRL-D&lt;/code&gt; (i.e. EOF) to exit the shell.
Learn about command-line options (in particular, how to increase heap size
which may be needed for larger applications):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./micropython --help
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run complete testsuite:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make test
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Unix version comes with a builtin package manager called upip, e.g.:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./micropython -m upip install micropython-pystone
$ ./micropython -m pystone
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Browse available modules on
&lt;a href="https://pypi.python.org/pypi?%3Aaction=search&amp;amp;term=micropython" rel="nofollow"&gt;PyPI&lt;/a&gt;.
Standard library modules come from
&lt;a href="https://github.com/micropython/micropython-lib"&gt;micropython-lib&lt;/a&gt; project.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-external-dependencies" class="anchor" aria-hidden="true" href="#external-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;External dependencies&lt;/h2&gt;
&lt;p&gt;Building MicroPython ports may require some dependencies installed.&lt;/p&gt;
&lt;p&gt;For Unix port, &lt;code&gt;libffi&lt;/code&gt; library and &lt;code&gt;pkg-config&lt;/code&gt; tool are required. On
Debian/Ubuntu/Mint derivative Linux distros, install &lt;code&gt;build-essential&lt;/code&gt;
(includes toolchain and make), &lt;code&gt;libffi-dev&lt;/code&gt;, and &lt;code&gt;pkg-config&lt;/code&gt; packages.&lt;/p&gt;
&lt;p&gt;Other dependencies can be built together with MicroPython. This may
be required to enable extra features or capabilities, and in recent
versions of MicroPython, these may be enabled by default. To build
these additional dependencies, in the port directory you're
interested in (e.g. &lt;code&gt;ports/unix/&lt;/code&gt;) first execute:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make submodules
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will fetch all the relevant git submodules (sub repositories) that
the port needs.  Use the same command to get the latest versions of
submodules as they are updated from time to time. After that execute:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make deplibs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will build all available dependencies (regardless whether they
are used or not). If you intend to build MicroPython with additional
options (like cross-compiling), the same set of options should be passed
to &lt;code&gt;make deplibs&lt;/code&gt;. To actually enable/disable use of dependencies, edit
&lt;code&gt;ports/unix/mpconfigport.mk&lt;/code&gt; file, which has inline descriptions of the options.
For example, to build SSL module (required for &lt;code&gt;upip&lt;/code&gt; tool described above,
and so enabled by dfeault), &lt;code&gt;MICROPY_PY_USSL&lt;/code&gt; should be set to 1.&lt;/p&gt;
&lt;p&gt;For some ports, building required dependences is transparent, and happens
automatically.  But they still need to be fetched with the &lt;code&gt;make submodules&lt;/code&gt;
command.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-stm32-version" class="anchor" aria-hidden="true" href="#the-stm32-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The STM32 version&lt;/h2&gt;
&lt;p&gt;The "stm32" port requires an ARM compiler, arm-none-eabi-gcc, and associated
bin-utils.  For those using Arch Linux, you need arm-none-eabi-binutils,
arm-none-eabi-gcc and arm-none-eabi-newlib packages.  Otherwise, try here:
&lt;a href="https://launchpad.net/gcc-arm-embedded" rel="nofollow"&gt;https://launchpad.net/gcc-arm-embedded&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To build:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd ports/stm32
$ make submodules
$ make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You then need to get your board into DFU mode.  On the pyboard, connect the
3V3 pin to the P1/DFU pin with a wire (on PYBv1.0 they are next to each other
on the bottom left of the board, second row from the bottom).&lt;/p&gt;
&lt;p&gt;Then to flash the code via USB DFU to your device:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make deploy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will use the included &lt;code&gt;tools/pydfu.py&lt;/code&gt; script.  If flashing the firmware
does not work it may be because you don't have the correct permissions, and
need to use &lt;code&gt;sudo make deploy&lt;/code&gt;.
See the README.md file in the ports/stm32/ directory for further details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;MicroPython is an open-source project and welcomes contributions. To be
productive, please be sure to follow the
&lt;a href="https://github.com/micropython/micropython/wiki/ContributorGuidelines"&gt;Contributors' Guidelines&lt;/a&gt;
and the &lt;a href="https://github.com/micropython/micropython/blob/master/CODECONVENTIONS.md"&gt;Code Conventions&lt;/a&gt;.
Note that MicroPython is licenced under the MIT license, and all contributions
should follow this license.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>micropython</author><guid isPermaLink="false">https://github.com/micropython/micropython</guid><pubDate>Sun, 10 Nov 2019 00:04:00 GMT</pubDate></item><item><title>git/git #5 in C, This week</title><link>https://github.com/git/git</link><description>&lt;p&gt;&lt;i&gt;Git Source Code Mirror - This is a publish-only repository and all pull requests are ignored. Please follow Documentation/SubmittingPatches procedure for any of your improvements.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://dev.azure.com/git/git/_build/latest?definitionId=11" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/254dd63d83b7a6d1406ce05d85b385b4d140801b/68747470733a2f2f6465762e617a7572652e636f6d2f6769742f6769742f5f617069732f6275696c642f7374617475732f6769742e676974" alt="Build Status" data-canonical-src="https://dev.azure.com/git/git/_apis/build/status/git.git" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-git---fast-scalable-distributed-revision-control-system" class="anchor" aria-hidden="true" href="#git---fast-scalable-distributed-revision-control-system"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Git - fast, scalable, distributed revision control system&lt;/h1&gt;
&lt;p&gt;Git is a fast, scalable, distributed revision control system with an
unusually rich command set that provides both high-level operations
and full access to internals.&lt;/p&gt;
&lt;p&gt;Git is an Open Source project covered by the GNU General Public
License version 2 (some parts of it are under different licenses,
compatible with the GPLv2). It was originally written by Linus
Torvalds with help of a group of hackers around the net.&lt;/p&gt;
&lt;p&gt;Please read the file &lt;a href="INSTALL"&gt;INSTALL&lt;/a&gt; for installation instructions.&lt;/p&gt;
&lt;p&gt;Many Git online resources are accessible from &lt;a href="https://git-scm.com/" rel="nofollow"&gt;https://git-scm.com/&lt;/a&gt;
including full documentation and Git related tools.&lt;/p&gt;
&lt;p&gt;See &lt;a href="Documentation/gittutorial.txt"&gt;Documentation/gittutorial.txt&lt;/a&gt; to get started, then see
&lt;a href="Documentation/giteveryday.txt"&gt;Documentation/giteveryday.txt&lt;/a&gt; for a useful minimum set of commands, and
&lt;code&gt;Documentation/git-&amp;lt;commandname&amp;gt;.txt&lt;/code&gt; for documentation of each command.
If git has been correctly installed, then the tutorial can also be
read with &lt;code&gt;man gittutorial&lt;/code&gt; or &lt;code&gt;git help tutorial&lt;/code&gt;, and the
documentation of each command with &lt;code&gt;man git-&amp;lt;commandname&amp;gt;&lt;/code&gt; or &lt;code&gt;git help &amp;lt;commandname&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;CVS users may also want to read &lt;a href="Documentation/gitcvs-migration.txt"&gt;Documentation/gitcvs-migration.txt&lt;/a&gt;
(&lt;code&gt;man gitcvs-migration&lt;/code&gt; or &lt;code&gt;git help cvs-migration&lt;/code&gt; if git is
installed).&lt;/p&gt;
&lt;p&gt;The user discussion and development of Git take place on the Git
mailing list -- everyone is welcome to post bug reports, feature
requests, comments and patches to &lt;a href="mailto:git@vger.kernel.org"&gt;git@vger.kernel.org&lt;/a&gt; (read
&lt;a href="Documentation/SubmittingPatches"&gt;Documentation/SubmittingPatches&lt;/a&gt; for instructions on patch submission).
To subscribe to the list, send an email with just "subscribe git" in
the body to &lt;a href="mailto:majordomo@vger.kernel.org"&gt;majordomo@vger.kernel.org&lt;/a&gt;. The mailing list archives are
available at &lt;a href="https://public-inbox.org/git/" rel="nofollow"&gt;https://public-inbox.org/git/&lt;/a&gt;,
&lt;a href="http://marc.info/?l=git" rel="nofollow"&gt;http://marc.info/?l=git&lt;/a&gt; and other archival sites.&lt;/p&gt;
&lt;p&gt;Issues which are security relevant should be disclosed privately to
the Git Security mailing list &lt;a href="mailto:git-security@googlegroups.com"&gt;git-security@googlegroups.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The maintainer frequently sends the "What's cooking" reports that
list the current status of various development topics to the mailing
list.  The discussion following them give a good reference for
project status, development direction and remaining tasks.&lt;/p&gt;
&lt;p&gt;The name "git" was given by Linus Torvalds when he wrote the very
first version. He described the tool as "the stupid content tracker"
and the name as (depending on your mood):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;random three-letter combination that is pronounceable, and not
actually used by any common UNIX command.  The fact that it is a
mispronunciation of "get" may or may not be relevant.&lt;/li&gt;
&lt;li&gt;stupid. contemptible and despicable. simple. Take your pick from the
dictionary of slang.&lt;/li&gt;
&lt;li&gt;"global information tracker": you're in a good mood, and it actually
works for you. Angels sing, and a light suddenly fills the room.&lt;/li&gt;
&lt;li&gt;"goddamn idiotic truckload of sh*t": when it breaks&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>git</author><guid isPermaLink="false">https://github.com/git/git</guid><pubDate>Sun, 10 Nov 2019 00:05:00 GMT</pubDate></item><item><title>qemu/qemu #6 in C, This week</title><link>https://github.com/qemu/qemu</link><description>&lt;p&gt;&lt;i&gt;Official QEMU mirror. Please see http://wiki.qemu.org/Contribute/SubmitAPatch for how to submit changes to QEMU. Pull Requests are ignored. Please only use release tarballs from the QEMU website.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body rst" data-path="README.rst"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-qemu-readme" class="anchor" aria-hidden="true" href="#qemu-readme"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;QEMU README&lt;/h1&gt;
&lt;p&gt;QEMU is a generic and open source machine &amp;amp; userspace emulator and
virtualizer.&lt;/p&gt;
&lt;p&gt;QEMU is capable of emulating a complete machine in software without any
need for hardware virtualization support. By using dynamic translation,
it achieves very good performance. QEMU can also integrate with the Xen
and KVM hypervisors to provide emulated hardware while allowing the
hypervisor to manage the CPU. With hypervisor support, QEMU can achieve
near native performance for CPUs. When QEMU emulates CPUs directly it is
capable of running operating systems made for one machine (e.g. an ARMv7
board) on a different machine (e.g. an x86_64 PC board).&lt;/p&gt;
&lt;p&gt;QEMU is also capable of providing userspace API virtualization for Linux
and BSD kernel interfaces. This allows binaries compiled against one
architecture ABI (e.g. the Linux PPC64 ABI) to be run on a host using a
different architecture ABI (e.g. the Linux x86_64 ABI). This does not
involve any hardware emulation, simply CPU and syscall emulation.&lt;/p&gt;
&lt;p&gt;QEMU aims to fit into a variety of use cases. It can be invoked directly
by users wishing to have full control over its behaviour and settings.
It also aims to facilitate integration into higher level management
layers, by providing a stable command line interface and monitor API.
It is commonly invoked indirectly via the libvirt library when using
open source applications such as oVirt, OpenStack and virt-manager.&lt;/p&gt;
&lt;p&gt;QEMU as a whole is released under the GNU General Public License,
version 2. For full licensing details, consult the LICENSE file.&lt;/p&gt;
&lt;a name="user-content-building"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;QEMU is multi-platform software intended to be buildable on all modern
Linux platforms, OS-X, Win32 (via the Mingw64 toolchain) and a variety
of other UNIX targets. The simple steps to build QEMU are:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mkdir build
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; build
../configure
make&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Additional information can also be found online via the QEMU website:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qemu.org/Hosts/Linux" rel="nofollow"&gt;https://qemu.org/Hosts/Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qemu.org/Hosts/Mac" rel="nofollow"&gt;https://qemu.org/Hosts/Mac&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qemu.org/Hosts/W32" rel="nofollow"&gt;https://qemu.org/Hosts/W32&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;a name="user-content-submitting-patches"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-submitting-patches" class="anchor" aria-hidden="true" href="#submitting-patches"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Submitting patches&lt;/h2&gt;
&lt;p&gt;The QEMU source code is maintained under the GIT version control system.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://git.qemu.org/git/qemu.git&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When submitting patches, one common approach is to use 'git
format-patch' and/or 'git send-email' to format &amp;amp; send the mail to the
&lt;a href="mailto:qemu-devel@nongnu.org"&gt;qemu-devel@nongnu.org&lt;/a&gt; mailing list. All patches submitted must contain
a 'Signed-off-by' line from the author. Patches should follow the
guidelines set out in the CODING_STYLE.rst file.&lt;/p&gt;
&lt;p&gt;Additional information on submitting patches can be found online via
the QEMU website&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qemu.org/Contribute/SubmitAPatch" rel="nofollow"&gt;https://qemu.org/Contribute/SubmitAPatch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qemu.org/Contribute/TrivialPatches" rel="nofollow"&gt;https://qemu.org/Contribute/TrivialPatches&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The QEMU website is also maintained under source control.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://git.qemu.org/git/qemu-web.git&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.qemu.org/2017/02/04/the-new-qemu-website-is-up/" rel="nofollow"&gt;https://www.qemu.org/2017/02/04/the-new-qemu-website-is-up/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A 'git-publish' utility was created to make above process less
cumbersome, and is highly recommended for making regular contributions,
or even just for sending consecutive patch series revisions. It also
requires a working 'git send-email' setup, and by default doesn't
automate everything, so you may want to go through the above steps
manually for once.&lt;/p&gt;
&lt;p&gt;For installation instructions, please go to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/stefanha/git-publish"&gt;https://github.com/stefanha/git-publish&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The workflow with 'git-publish' is:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git checkout master -b my-feature
$ &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; work on new commits, add your 'Signed-off-by' lines to each&lt;/span&gt;
$ git publish&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Your patch series will be sent and tagged as my-feature-v1 if you need to refer
back to it in the future.&lt;/p&gt;
&lt;p&gt;Sending v2:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git checkout my-feature &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; same topic branch&lt;/span&gt;
$ &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; making changes to the commits (using 'git rebase', for example)&lt;/span&gt;
$ git publish&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Your patch series will be sent with 'v2' tag in the subject and the git tip
will be tagged as my-feature-v2.&lt;/p&gt;
&lt;a name="user-content-bug-reporting"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-bug-reporting" class="anchor" aria-hidden="true" href="#bug-reporting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bug reporting&lt;/h2&gt;
&lt;p&gt;The QEMU project uses Launchpad as its primary upstream bug tracker. Bugs
found when running code built from QEMU git or upstream released sources
should be reported via:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bugs.launchpad.net/qemu/" rel="nofollow"&gt;https://bugs.launchpad.net/qemu/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If using QEMU via an operating system vendor pre-built binary package, it
is preferable to report bugs to the vendor's own bug tracker first. If
the bug is also known to affect latest upstream code, it can also be
reported via launchpad.&lt;/p&gt;
&lt;p&gt;For additional information on bug reporting consult:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qemu.org/Contribute/ReportABug" rel="nofollow"&gt;https://qemu.org/Contribute/ReportABug&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;a name="user-content-contact"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h2&gt;
&lt;p&gt;The QEMU community can be contacted in a number of ways, with the two
main methods being email and IRC&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="mailto:qemu-devel@nongnu.org"&gt;mailto:qemu-devel@nongnu.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lists.nongnu.org/mailman/listinfo/qemu-devel" rel="nofollow"&gt;https://lists.nongnu.org/mailman/listinfo/qemu-devel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;#qemu on irc.oftc.net&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Information on additional methods of contacting the community can be
found online via the QEMU website:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qemu.org/Contribute/StartHere" rel="nofollow"&gt;https://qemu.org/Contribute/StartHere&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/article&gt;&lt;/div&gt;</description><author>qemu</author><guid isPermaLink="false">https://github.com/qemu/qemu</guid><pubDate>Sun, 10 Nov 2019 00:06:00 GMT</pubDate></item><item><title>facebook/zstd #7 in C, This week</title><link>https://github.com/facebook/zstd</link><description>&lt;p&gt;&lt;i&gt;Zstandard - Fast real-time compression algorithm&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/facebook/zstd/dev/doc/images/zstd_logo86.png"&gt;&lt;img src="https://raw.githubusercontent.com/facebook/zstd/dev/doc/images/zstd_logo86.png" alt="Zstandard" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Zstandard&lt;/strong&gt;, or &lt;code&gt;zstd&lt;/code&gt; as short version, is a fast lossless compression algorithm,
targeting real-time compression scenarios at zlib-level and better compression ratios.
It's backed by a very fast entropy stage, provided by &lt;a href="https://github.com/Cyan4973/FiniteStateEntropy"&gt;Huff0 and FSE library&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The project is provided as an open-source dual &lt;a href="LICENSE"&gt;BSD&lt;/a&gt; and &lt;a href="COPYING"&gt;GPLv2&lt;/a&gt; licensed &lt;strong&gt;C&lt;/strong&gt; library,
and a command line utility producing and decoding &lt;code&gt;.zst&lt;/code&gt;, &lt;code&gt;.gz&lt;/code&gt;, &lt;code&gt;.xz&lt;/code&gt; and &lt;code&gt;.lz4&lt;/code&gt; files.
Should your project require another programming language,
a list of known ports and bindings is provided on &lt;a href="http://www.zstd.net/#other-languages" rel="nofollow"&gt;Zstandard homepage&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Development branch status:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/facebook/zstd" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9b5d141da23951adb465b2975ee9550048c703b9/68747470733a2f2f7472617669732d63692e6f72672f66616365626f6f6b2f7a7374642e7376673f6272616e63683d646576" alt="Build Status" title="Continuous Integration test suite" data-canonical-src="https://travis-ci.org/facebook/zstd.svg?branch=dev" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/YannCollet/zstd-p0yf0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/24c1b80141c393a1de83716b92268d9dabc02d69/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f78743338776264786a6b356d7262656d2f6272616e63682f6465763f7376673d74727565" alt="Build status" title="Windows test suite" data-canonical-src="https://ci.appveyor.com/api/projects/status/xt38wbdxjk5mrbem/branch/dev?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/facebook/zstd" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/17a2aa1bae71dd23de1e50ce454a985b26f08910/68747470733a2f2f636972636c6563692e636f6d2f67682f66616365626f6f6b2f7a7374642f747265652f6465762e7376673f7374796c653d736869656c64" alt="Build status" title="Short test suite" data-canonical-src="https://circleci.com/gh/facebook/zstd/tree/dev.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cirrus-ci.com/github/facebook/zstd" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ce5aba60b966c76c39b58d4b64aaf8f2dc96c5ed/68747470733a2f2f6170692e6369727275732d63692e636f6d2f6769746875622f66616365626f6f6b2f7a7374642e7376673f6272616e63683d646576" alt="Build status" data-canonical-src="https://api.cirrus-ci.com/github/facebook/zstd.svg?branch=dev" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:zstd" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/43aa9aa52b889d2a708f34c3f799f400e24fad63/68747470733a2f2f6f73732d66757a7a2d6275696c642d6c6f67732e73746f726167652e676f6f676c65617069732e636f6d2f6261646765732f7a7374642e737667" alt="Fuzzing Status" data-canonical-src="https://oss-fuzz-build-logs.storage.googleapis.com/badges/zstd.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-benchmarks" class="anchor" aria-hidden="true" href="#benchmarks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Benchmarks&lt;/h2&gt;
&lt;p&gt;For reference, several fast compression algorithms were tested and compared
on a server running Arch Linux (&lt;code&gt;Linux version 5.0.5-arch1-1&lt;/code&gt;),
with a Core i9-9900K CPU @ 5.0GHz,
using &lt;a href="https://github.com/inikep/lzbench"&gt;lzbench&lt;/a&gt;, an open-source in-memory benchmark by @inikep
compiled with &lt;a href="https://gcc.gnu.org/" rel="nofollow"&gt;gcc&lt;/a&gt; 8.2.1,
on the &lt;a href="http://sun.aei.polsl.pl/~sdeor/index.php?page=silesia" rel="nofollow"&gt;Silesia compression corpus&lt;/a&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Compressor name&lt;/th&gt;
&lt;th&gt;Ratio&lt;/th&gt;
&lt;th&gt;Compression&lt;/th&gt;
&lt;th&gt;Decompress.&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;zstd 1.4.4 -1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.884&lt;/td&gt;
&lt;td&gt;520 MB/s&lt;/td&gt;
&lt;td&gt;1600 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zlib 1.2.11 -1&lt;/td&gt;
&lt;td&gt;2.743&lt;/td&gt;
&lt;td&gt;110 MB/s&lt;/td&gt;
&lt;td&gt;440 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;brotli 1.0.7 -0&lt;/td&gt;
&lt;td&gt;2.701&lt;/td&gt;
&lt;td&gt;430 MB/s&lt;/td&gt;
&lt;td&gt;470 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;quicklz 1.5.0 -1&lt;/td&gt;
&lt;td&gt;2.238&lt;/td&gt;
&lt;td&gt;600 MB/s&lt;/td&gt;
&lt;td&gt;800 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lzo1x 2.09 -1&lt;/td&gt;
&lt;td&gt;2.106&lt;/td&gt;
&lt;td&gt;680 MB/s&lt;/td&gt;
&lt;td&gt;950 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lz4 1.8.3&lt;/td&gt;
&lt;td&gt;2.101&lt;/td&gt;
&lt;td&gt;800 MB/s&lt;/td&gt;
&lt;td&gt;4220 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;snappy 1.1.4&lt;/td&gt;
&lt;td&gt;2.073&lt;/td&gt;
&lt;td&gt;580 MB/s&lt;/td&gt;
&lt;td&gt;2020 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lzf 3.6 -1&lt;/td&gt;
&lt;td&gt;2.077&lt;/td&gt;
&lt;td&gt;440 MB/s&lt;/td&gt;
&lt;td&gt;930 MB/s&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Zstd can also offer stronger compression ratios at the cost of compression speed.
Speed vs Compression trade-off is configurable by small increments.
Decompression speed is preserved and remains roughly the same at all settings,
a property shared by most LZ compression algorithms, such as &lt;a href="http://www.zlib.net/" rel="nofollow"&gt;zlib&lt;/a&gt; or lzma.&lt;/p&gt;
&lt;p&gt;The following tests were run
on a server running Linux Debian (&lt;code&gt;Linux version 4.14.0-3-amd64&lt;/code&gt;)
with a Core i7-6700K CPU @ 4.0GHz,
using &lt;a href="https://github.com/inikep/lzbench"&gt;lzbench&lt;/a&gt;, an open-source in-memory benchmark by @inikep
compiled with &lt;a href="https://gcc.gnu.org/" rel="nofollow"&gt;gcc&lt;/a&gt; 7.3.0,
on the &lt;a href="http://sun.aei.polsl.pl/~sdeor/index.php?page=silesia" rel="nofollow"&gt;Silesia compression corpus&lt;/a&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Compression Speed vs Ratio&lt;/th&gt;
&lt;th&gt;Decompression Speed&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/images/CSpeed2.png"&gt;&lt;img src="doc/images/CSpeed2.png" alt="Compression Speed vs Ratio" title="Compression Speed vs Ratio" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/images/DSpeed3.png"&gt;&lt;img src="doc/images/DSpeed3.png" alt="Decompression Speed" title="Decompression Speed" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;A few other algorithms can produce higher compression ratios at slower speeds, falling outside of the graph.
For a larger picture including slow modes, &lt;a href="doc/images/DCspeed5.png"&gt;click on this link&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-case-for-small-data-compression" class="anchor" aria-hidden="true" href="#the-case-for-small-data-compression"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The case for Small Data compression&lt;/h2&gt;
&lt;p&gt;Previous charts provide results applicable to typical file and stream scenarios (several MB). Small data comes with different perspectives.&lt;/p&gt;
&lt;p&gt;The smaller the amount of data to compress, the more difficult it is to compress. This problem is common to all compression algorithms, and reason is, compression algorithms learn from past data how to compress future data. But at the beginning of a new data set, there is no "past" to build upon.&lt;/p&gt;
&lt;p&gt;To solve this situation, Zstd offers a &lt;strong&gt;training mode&lt;/strong&gt;, which can be used to tune the algorithm for a selected type of data.
Training Zstandard is achieved by providing it with a few samples (one file per sample). The result of this training is stored in a file called "dictionary", which must be loaded before compression and decompression.
Using this dictionary, the compression ratio achievable on small data improves dramatically.&lt;/p&gt;
&lt;p&gt;The following example uses the &lt;code&gt;github-users&lt;/code&gt; &lt;a href="https://github.com/facebook/zstd/releases/tag/v1.1.3"&gt;sample set&lt;/a&gt;, created from &lt;a href="https://developer.github.com/v3/users/#get-all-users"&gt;github public API&lt;/a&gt;.
It consists of roughly 10K records weighing about 1KB each.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Compression Ratio&lt;/th&gt;
&lt;th&gt;Compression Speed&lt;/th&gt;
&lt;th&gt;Decompression Speed&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/images/dict-cr.png"&gt;&lt;img src="doc/images/dict-cr.png" alt="Compression Ratio" title="Compression Ratio" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/images/dict-cs.png"&gt;&lt;img src="doc/images/dict-cs.png" alt="Compression Speed" title="Compression Speed" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/images/dict-ds.png"&gt;&lt;img src="doc/images/dict-ds.png" alt="Decompression Speed" title="Decompression Speed" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;These compression gains are achieved while simultaneously providing &lt;em&gt;faster&lt;/em&gt; compression and decompression speeds.&lt;/p&gt;
&lt;p&gt;Training works if there is some correlation in a family of small data samples. The more data-specific a dictionary is, the more efficient it is (there is no &lt;em&gt;universal dictionary&lt;/em&gt;).
Hence, deploying one dictionary per type of data will provide the greatest benefits.
Dictionary gains are mostly effective in the first few KB. Then, the compression algorithm will gradually use previously decoded content to better compress the rest of the file.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-dictionary-compression-how-to" class="anchor" aria-hidden="true" href="#dictionary-compression-how-to"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dictionary compression How To:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create the dictionary&lt;/p&gt;
&lt;p&gt;&lt;code&gt;zstd --train FullPathToTrainingSet/* -o dictionaryName&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compress with dictionary&lt;/p&gt;
&lt;p&gt;&lt;code&gt;zstd -D dictionaryName FILE&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Decompress with dictionary&lt;/p&gt;
&lt;p&gt;&lt;code&gt;zstd -D dictionaryName --decompress FILE.zst&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-build-instructions" class="anchor" aria-hidden="true" href="#build-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build instructions&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-makefile" class="anchor" aria-hidden="true" href="#makefile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Makefile&lt;/h3&gt;
&lt;p&gt;If your system is compatible with standard &lt;code&gt;make&lt;/code&gt; (or &lt;code&gt;gmake&lt;/code&gt;),
invoking &lt;code&gt;make&lt;/code&gt; in root directory will generate &lt;code&gt;zstd&lt;/code&gt; cli in root directory.&lt;/p&gt;
&lt;p&gt;Other available options include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;make install&lt;/code&gt; : create and install zstd cli, library and man pages&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make check&lt;/code&gt; : create and run &lt;code&gt;zstd&lt;/code&gt;, tests its behavior on local platform&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-cmake" class="anchor" aria-hidden="true" href="#cmake"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;cmake&lt;/h3&gt;
&lt;p&gt;A &lt;code&gt;cmake&lt;/code&gt; project generator is provided within &lt;code&gt;build/cmake&lt;/code&gt;.
It can generate Makefiles or other build scripts
to create &lt;code&gt;zstd&lt;/code&gt; binary, and &lt;code&gt;libzstd&lt;/code&gt; dynamic and static libraries.&lt;/p&gt;
&lt;p&gt;By default, &lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt; is set to &lt;code&gt;Release&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-meson" class="anchor" aria-hidden="true" href="#meson"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Meson&lt;/h3&gt;
&lt;p&gt;A Meson project is provided within &lt;a href="build/meson"&gt;&lt;code&gt;build/meson&lt;/code&gt;&lt;/a&gt;. Follow
build instructions in that directory.&lt;/p&gt;
&lt;p&gt;You can also take a look at &lt;a href=".travis.yml"&gt;&lt;code&gt;.travis.yml&lt;/code&gt;&lt;/a&gt; file for an
example about how Meson is used to build this project.&lt;/p&gt;
&lt;p&gt;Note that default build type is &lt;strong&gt;release&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-visual-studio-windows" class="anchor" aria-hidden="true" href="#visual-studio-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Visual Studio (Windows)&lt;/h3&gt;
&lt;p&gt;Going into &lt;code&gt;build&lt;/code&gt; directory, you will find additional possibilities:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Projects for Visual Studio 2005, 2008 and 2010.
&lt;ul&gt;
&lt;li&gt;VS2010 project is compatible with VS2012, VS2013, VS2015 and VS2017.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Automated build scripts for Visual compiler by &lt;a href="https://github.com/KrzysFR"&gt;@KrzysFR&lt;/a&gt;, in &lt;code&gt;build/VS_scripts&lt;/code&gt;,
which will build &lt;code&gt;zstd&lt;/code&gt; cli and &lt;code&gt;libzstd&lt;/code&gt; library without any need to open Visual Studio solution.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-buck" class="anchor" aria-hidden="true" href="#buck"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Buck&lt;/h3&gt;
&lt;p&gt;You can build the zstd binary via buck by executing: &lt;code&gt;buck build programs:zstd&lt;/code&gt; from the root of the repo.
The output binary will be in &lt;code&gt;buck-out/gen/programs/&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-status" class="anchor" aria-hidden="true" href="#status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status&lt;/h2&gt;
&lt;p&gt;Zstandard is currently deployed within Facebook. It is used continuously to compress large amounts of data in multiple formats and use cases.
Zstandard is considered safe for production environments.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Zstandard is dual-licensed under &lt;a href="LICENSE"&gt;BSD&lt;/a&gt; and &lt;a href="COPYING"&gt;GPLv2&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;The "dev" branch is the one where all contributions are merged before reaching "master".
If you plan to propose a patch, please commit into the "dev" branch, or its own feature branch.
Direct commit to "master" are not permitted.
For more information, please read &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>facebook</author><guid isPermaLink="false">https://github.com/facebook/zstd</guid><pubDate>Sun, 10 Nov 2019 00:07:00 GMT</pubDate></item><item><title>vurtun/nuklear #8 in C, This week</title><link>https://github.com/vurtun/nuklear</link><description>&lt;p&gt;&lt;i&gt;A single-header ANSI C gui library&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="Readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-nuklear" class="anchor" aria-hidden="true" href="#nuklear"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nuklear&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/vurtun/nuklear" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e371dd25dfe791d50cb104097ad159b685d4c56c/68747470733a2f2f7472617669732d63692e6f72672f76757274756e2f6e756b6c6561722e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/vurtun/nuklear.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a minimal state immediate mode graphical user interface toolkit
written in ANSI C and licensed under public domain. It was designed as a simple
embeddable user interface for application and does not have any dependencies,
a default render backend or OS window and input handling but instead provides a very modular
library approach by using simple input state for input and draw
commands describing primitive shapes as output. So instead of providing a
layered library that tries to abstract over a number of platform and
render backends it only focuses on the actual UI.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Immediate mode graphical user interface toolkit&lt;/li&gt;
&lt;li&gt;Single header library&lt;/li&gt;
&lt;li&gt;Written in C89 (ANSI C)&lt;/li&gt;
&lt;li&gt;Small codebase (~18kLOC)&lt;/li&gt;
&lt;li&gt;Focus on portability, efficiency and simplicity&lt;/li&gt;
&lt;li&gt;No dependencies (not even the standard library if not wanted)&lt;/li&gt;
&lt;li&gt;Fully skinnable and customizable&lt;/li&gt;
&lt;li&gt;Low memory footprint with total memory control if needed or wanted&lt;/li&gt;
&lt;li&gt;UTF-8 support&lt;/li&gt;
&lt;li&gt;No global or hidden state&lt;/li&gt;
&lt;li&gt;Customizable library modules (you can compile and use only what you need)&lt;/li&gt;
&lt;li&gt;Optional font baker and vertex buffer output&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cdn.statically.io/gh/vurtun/nuklear/master/doc/nuklear.html" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;This library is self contained in one single header file and can be used either
in header only mode or in implementation mode. The header only mode is used
by default when included and allows including this header in other headers
and does not contain the actual implementation.&lt;/p&gt;
&lt;p&gt;The implementation mode requires to define  the preprocessor macro
&lt;code&gt;NK_IMPLEMENTATION&lt;/code&gt; in &lt;em&gt;one&lt;/em&gt; .c/.cpp file before &lt;code&gt;#include&lt;/code&gt;ing this file, e.g.:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;define&lt;/span&gt; &lt;span class="pl-en"&gt;NK_IMPLEMENTATION&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nuklear.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;IMPORTANT: Every time you include "nuklear.h" you have to define the same optional flags.
This is very important not doing it either leads to compiler errors or even worse stack corruptions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-gallery" class="anchor" aria-hidden="true" href="#gallery"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gallery&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/11761525/ae06f0ca-a0c6-11e5-819d-5610b25f6ef4.gif"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/11761525/ae06f0ca-a0c6-11e5-819d-5610b25f6ef4.gif" alt="screenshot" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/13538240/acd96876-e249-11e5-9547-5ac0b19667a0.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/13538240/acd96876-e249-11e5-9547-5ac0b19667a0.png" alt="screen" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/13538243/b04acd4c-e249-11e5-8fd2-ad7744a5b446.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/13538243/b04acd4c-e249-11e5-8fd2-ad7744a5b446.png" alt="screen2" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/9976995/e81ac04a-5ef7-11e5-872b-acd54fbeee03.gif"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/9976995/e81ac04a-5ef7-11e5-872b-acd54fbeee03.gif" alt="node" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/15991632/76494854-30b8-11e6-9555-a69840d0d50b.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/15991632/76494854-30b8-11e6-9555-a69840d0d50b.png" alt="skinning" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/14902576/339926a8-0d9c-11e6-9fee-a8b73af04473.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/14902576/339926a8-0d9c-11e6-9fee-a8b73af04473.png" alt="gamepad" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h2&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; init gui state &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;struct&lt;/span&gt; nk_context ctx;
&lt;span class="pl-en"&gt;nk_init_fixed&lt;/span&gt;(&amp;amp;ctx, calloc(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, MAX_MEMORY), MAX_MEMORY, &amp;amp;font);

&lt;span class="pl-k"&gt;enum&lt;/span&gt; {EASY, HARD};
&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; op = EASY;
&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;float&lt;/span&gt; value = &lt;span class="pl-c1"&gt;0&lt;/span&gt;.&lt;span class="pl-c1"&gt;6f&lt;/span&gt;;
&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; i =  &lt;span class="pl-c1"&gt;20&lt;/span&gt;;

&lt;span class="pl-k"&gt;if&lt;/span&gt; (nk_begin(&amp;amp;ctx, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Show&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, nk_rect(&lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-c1"&gt;220&lt;/span&gt;, &lt;span class="pl-c1"&gt;220&lt;/span&gt;),
    NK_WINDOW_BORDER|NK_WINDOW_MOVABLE|NK_WINDOW_CLOSABLE)) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; fixed widget pixel width &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;nk_layout_row_static&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-c1"&gt;80&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;);
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;nk_button_label&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;button&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; event handling &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; fixed widget window ratio width &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;nk_layout_row_dynamic&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;);
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;nk_option_label&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;easy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, op == EASY)) op = EASY;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;nk_option_label&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hard&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, op == HARD)) op = HARD;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; custom widget pixel width &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;nk_layout_row_begin&lt;/span&gt;(&amp;amp;ctx, NK_STATIC, &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;);
    {
        &lt;span class="pl-c1"&gt;nk_layout_row_push&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-c1"&gt;50&lt;/span&gt;);
        &lt;span class="pl-c1"&gt;nk_label&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Volume:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, NK_TEXT_LEFT);
        &lt;span class="pl-c1"&gt;nk_layout_row_push&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-c1"&gt;110&lt;/span&gt;);
        &lt;span class="pl-c1"&gt;nk_slider_float&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &amp;amp;value, &lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-c1"&gt;0f&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;.&lt;span class="pl-c1"&gt;1f&lt;/span&gt;);
    }
    &lt;span class="pl-c1"&gt;nk_layout_row_end&lt;/span&gt;(&amp;amp;ctx);
}
&lt;span class="pl-en"&gt;nk_end&lt;/span&gt;(&amp;amp;ctx);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/10187981/584ecd68-675c-11e5-897c-822ef534a876.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/10187981/584ecd68-675c-11e5-897c-822ef534a876.png" alt="example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bindings" class="anchor" aria-hidden="true" href="#bindings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bindings&lt;/h2&gt;
&lt;p&gt;There are a number of nuklear bindings for different languges created by other authors.
I cannot atest for their quality since I am not necessarily proficient in either of these
languages. Furthermore there are no guarantee that all bindings will always be kept up to date:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/glegris/nuklear4j"&gt;Java&lt;/a&gt; by Guillaume Legris&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Timu5/bindbc-nuklear"&gt;D&lt;/a&gt; by Mateusz Muszyński&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/golang-ui/nuklear"&gt;Golang&lt;/a&gt; by &lt;a href="mailto:golang-ui@github.com"&gt;golang-ui@github.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/snuk182/nuklear-rust"&gt;Rust&lt;/a&gt; by &lt;a href="mailto:snuk182@github.com"&gt;snuk182@github.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wasamasa/nuklear"&gt;Chicken&lt;/a&gt; by &lt;a href="mailto:wasamasa@github.com"&gt;wasamasa@github.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zacharycarter/nuklear-nim"&gt;Nim&lt;/a&gt; by &lt;a href="mailto:zacharycarter@github.com"&gt;zacharycarter@github.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Lua
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/keharriso/love-nuklear"&gt;LÖVE-Nuklear&lt;/a&gt; by Kevin Harrison&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stetre/moonnuklear"&gt;MoonNuklear&lt;/a&gt; by Stefano Trettel&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Python
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/billsix/pyNuklear"&gt;pyNuklear&lt;/a&gt; by William Emerison Six (ctypes-based wrapper)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nathanrw/nuklear-cffi"&gt;pynk&lt;/a&gt; by &lt;a href="mailto:nathanrw@github.com"&gt;nathanrw@github.com&lt;/a&gt; (cffi binding)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cartman300/NuklearDotNet"&gt;CSharp/.NET&lt;/a&gt; by &lt;a href="mailto:cartman300@github.com"&gt;cartman300@github.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;Developed by Micha Mettke and every direct or indirect contributor to the GitHub.&lt;/p&gt;
&lt;p&gt;Embeds &lt;code&gt;stb_texedit&lt;/code&gt;, &lt;code&gt;stb_truetype&lt;/code&gt; and &lt;code&gt;stb_rectpack&lt;/code&gt; by Sean Barrett (public domain)
Embeds &lt;code&gt;ProggyClean.ttf&lt;/code&gt; font by Tristan Grimmer (MIT license).&lt;/p&gt;
&lt;p&gt;Big thank you to Omar Cornut (ocornut@github) for his &lt;a href="https://github.com/ocornut/imgui"&gt;imgui&lt;/a&gt; library and
giving me the inspiration for this library, Casey Muratori for handmade hero
and his original immediate mode graphical user interface idea and Sean
Barrett for his amazing single header &lt;a href="https://github.com/nothings/stb"&gt;libraries&lt;/a&gt; which restored my faith
in libraries and brought me to create some of my own. Finally Apoorva Joshi for his singe-header &lt;a href="http://apoorvaj.io/single-header-packer.html" rel="nofollow"&gt;file packer&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;------------------------------------------------------------------------------
This software is available under 2 licenses -- choose whichever you prefer.
------------------------------------------------------------------------------
ALTERNATIVE A - MIT License
Copyright (c) 2017 Micha Mettke
Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
------------------------------------------------------------------------------
ALTERNATIVE B - Public Domain (www.unlicense.org)
This is free and unencumbered software released into the public domain.
Anyone is free to copy, modify, publish, use, compile, sell, or distribute this
software, either in source code form or as a compiled binary, for any purpose,
commercial or non-commercial, and by any means.
In jurisdictions that recognize copyright laws, the author or authors of this
software dedicate any and all copyright interest in the software to the public
domain. We make this dedication for the benefit of the public at large and to
the detriment of our heirs and successors. We intend this dedication to be an
overt act of relinquishment in perpetuity of all present and future rights to
this software under copyright law.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-----------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>vurtun</author><guid isPermaLink="false">https://github.com/vurtun/nuklear</guid><pubDate>Sun, 10 Nov 2019 00:08:00 GMT</pubDate></item><item><title>RT-Thread/rt-thread #9 in C, This week</title><link>https://github.com/RT-Thread/rt-thread</link><description>&lt;p&gt;&lt;i&gt;RT-Thread is an open source IoT operating system from China.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-rt-thread" class="anchor" aria-hidden="true" href="#rt-thread"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RT-Thread&lt;/h1&gt;
&lt;p&gt;&lt;a href="README_zh.md"&gt;中文页&lt;/a&gt; |&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/RT-Thread/rt-thread/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/bf7340772e2813afc7c3d84bbc25ab7f1ff73302/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f52542d5468726561642f72742d7468726561642e737667" alt="GitHub" data-canonical-src="https://img.shields.io/github/license/RT-Thread/rt-thread.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/RT-Thread/rt-thread/releases"&gt;&lt;img src="https://camo.githubusercontent.com/5ed2b92abc84d6f5e5bd629c069b210890faed7c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f52542d5468726561642f72742d7468726561642e737667" alt="GitHub release" data-canonical-src="https://img.shields.io/github/release/RT-Thread/rt-thread.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/RT-Thread/rt-thread" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6bd7b97c0d6f4be7116570dcebba3e8b73b6b883/68747470733a2f2f7472617669732d63692e6f72672f52542d5468726561642f72742d7468726561642e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/RT-Thread/rt-thread.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/RT-Thread/rt-thread?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/RT-Thread/rt-thread/pulls"&gt;&lt;img src="https://camo.githubusercontent.com/5486e8c0f84cd380fbbb299959cb7ba55c51409e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d70722f52542d5468726561642f72742d7468726561642e737667" alt="GitHub pull-requests" data-canonical-src="https://img.shields.io/github/issues-pr/RT-Thread/rt-thread.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/RT-Thread/rt-thread/pulls"&gt;&lt;img src="https://camo.githubusercontent.com/f96261621753dacf526590825b84f87ccb1db0e6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c6174" alt="PRs Welcome" data-canonical-src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;RT-Thread is an open source IoT operating system from China, which has strong scalability: from a tiny kernel running on a tiny core, for example ARM Cortex-M0, or Cortex-M3/4/7, to a rich feature system running on MIPS32, ARM Cortex-A8, ARM Cortex-A9 DualCore etc.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;RT-Thread RTOS like a traditional real-time operating system. The kernel has real-time multi-task scheduling, semaphore, mutex, mail box, message queue, signal etc. However, it has three different things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Device Driver;&lt;/li&gt;
&lt;li&gt;Component;&lt;/li&gt;
&lt;li&gt;Dynamic Module&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The device driver is more like a driver framework, UART, IIC, SPI, SDIO, USB device/host, EMAC, MTD NAND etc. The developer can easily add low level driver and board configuration, then combined with the upper framework, he/she can use lots of features.&lt;/p&gt;
&lt;p&gt;The Component is a software concept upon RT-Thread kernel, for example a shell (finsh/msh shell), virtual file system (FAT, YAFFS, UFFS, ROM/RAM file system etc), TCP/IP protocol stack (lwIP), POSIX (thread) interface etc. One component must be a directory under RT-Thread/Components and one component can be descripted by a SConscript file (then be compiled and linked into the system).&lt;/p&gt;
&lt;p&gt;The Dynamic Module, formerly named as User Applicaion (UA) is a dynamic loaded module or library, it can be compiled standalone without Kernel. Each Dynamic Module has its own object list to manage thread/semaphore/kernel object which was created or initialized inside this UA. More information about UA, please visit another &lt;a href="https://github.com/RT-Thread/rtthread-apps"&gt;git repo&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-board-support-package" class="anchor" aria-hidden="true" href="#board-support-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Board Support Package&lt;/h2&gt;
&lt;p&gt;RT-Thread RTOS can support many architectures:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ARM Cortex-M0&lt;/li&gt;
&lt;li&gt;ARM Cortex-M3/M4/7&lt;/li&gt;
&lt;li&gt;ARM Cortex-R4&lt;/li&gt;
&lt;li&gt;ARM Cortex-A8/A9&lt;/li&gt;
&lt;li&gt;ARM920T/ARM926 etc&lt;/li&gt;
&lt;li&gt;MIPS32&lt;/li&gt;
&lt;li&gt;x86&lt;/li&gt;
&lt;li&gt;Andes&lt;/li&gt;
&lt;li&gt;C-Sky&lt;/li&gt;
&lt;li&gt;RISC-V&lt;/li&gt;
&lt;li&gt;PowerPC&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;RT-Thread is Open Source software under the Apache License 2.0 since RT-Thread v3.1.1. License and copyright information can be found within the code.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/*
 * Copyright (c) 2006-2018, RT-Thread Development Team
 *
 * SPDX-License-Identifier: Apache-2.0
 */
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Since 9th of September 2018, PRs submitted by the community may be merged into the main line only after signing the Contributor License Agreement(CLA).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;RT-Thread RTOS uses &lt;a href="http://www.scons.org" rel="nofollow"&gt;scons&lt;/a&gt; as building system. Therefore, please install scons and Python 2.7 firstly.
So far, the RT-Thread scons building system support the command line compile or generate some IDE's project. There are some option varaibles in the scons building script (rtconfig.py):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CROSS_TOOL&lt;/code&gt; the compiler which you want to use, gcc/keil/iar.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;EXEC_PATH&lt;/code&gt; the path of compiler.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In SConstruct file:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;RTT_ROOT&lt;/code&gt; This variable is the root directory of RT-Thread RTOS. If you build the porting in the bsp directory, you can use the default setting. Also, you can set the root directory in &lt;code&gt;RTT_ROOT&lt;/code&gt; environment variable and not modify SConstruct files.&lt;/p&gt;
&lt;p&gt;When you set these variables correctly, you can use command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;scons
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;under BSP directory to simplely compile RT-Thread RTOS.&lt;/p&gt;
&lt;p&gt;If you want to generate the IDE's project file, you can use command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;scons --target=mdk/mdk4/mdk5/iar/cb -s
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to generate the project file.&lt;/p&gt;
&lt;p&gt;NOTE: RT-Thread scons building system will tailor the system according to your rtconfig.h configuration header file. For example, if you disable the lwIP in the rtconfig.h by commenting the &lt;code&gt;#define RT_USING_LWIP&lt;/code&gt;, the generated project file should have no lwIP related files.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contribution" class="anchor" aria-hidden="true" href="#contribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution&lt;/h2&gt;
&lt;p&gt;Please refer the contributors in the github. Thank all of RT-Thread Developers.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>RT-Thread</author><guid isPermaLink="false">https://github.com/RT-Thread/rt-thread</guid><pubDate>Sun, 10 Nov 2019 00:09:00 GMT</pubDate></item><item><title>ldcsaa/HP-Socket #10 in C, This week</title><link>https://github.com/ldcsaa/HP-Socket</link><description>&lt;p&gt;&lt;i&gt;High Performance TCP/UDP/HTTP Communication Component&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c77b7ec2fb2cad71b531d7384883c40c890e9952/68747470733a2f2f696d616765732e67697465652e636f6d2f75706c6f6164732f696d616765732f323031392f303832302f3131323631365f35623862333762665f38313732302e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/c77b7ec2fb2cad71b531d7384883c40c890e9952/68747470733a2f2f696d616765732e67697465652e636f6d2f75706c6f6164732f696d616765732f323031392f303832302f3131323631365f35623862333762665f38313732302e706e67" alt="HP-Socket" title="HP-Socket" data-canonical-src="https://images.gitee.com/uploads/images/2019/0820/112616_5b8b37bf_81720.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;High Performance Network Framework&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-description" class="anchor" aria-hidden="true" href="#description"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Description&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Server&lt;/strong&gt;&lt;/em&gt; Based on IOCP/EPOLL communication model, combined with technology of memory pool, private heap etc., efficient memory management is implemented to support large scale and high concurrent communication scenarios.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Agent&lt;/strong&gt;&lt;/em&gt; The Agent component is essentially a Multi-Client component that uses the same technical architecture as the Server component. An Agent component object can create and efficiently handle large-scale Socket connections at the same time.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Client&lt;/strong&gt;&lt;/em&gt; Based on Event-Select/POLL communication model, each component object creates a communication thread and manages a Socket connection. Client components are suitable for small-scale client scenarios.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-document" class="anchor" aria-hidden="true" href="#document"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Document&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;HP-Socket Development Guide
&lt;a href="https://github.com/ldcsaa/HP-Socket/tree/master/Doc"&gt;[pdf]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;HP-Socket Class Diagram
&lt;a href="https://github.com/ldcsaa/HP-Socket/tree/master/Doc"&gt;[uml]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;HP-Socket Class Diagram
&lt;a href="https://github.com/ldcsaa/HP-Socket/tree/master/Doc"&gt;[jpg]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;HP-Socket SSL Class Diagram
&lt;a href="https://github.com/ldcsaa/HP-Socket/tree/master/Doc"&gt;[jpg]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;HP-Socket HTTP Class Diagram
&lt;a href="https://github.com/ldcsaa/HP-Socket/tree/master/Doc"&gt;[jpg]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-workflow" class="anchor" aria-hidden="true" href="#workflow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Workflow&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Create listener object&lt;/li&gt;
&lt;li&gt;Create component object (and binding with listener object)&lt;/li&gt;
&lt;li&gt;Start component object&lt;/li&gt;
&lt;li&gt;Connect to dest host (for &lt;em&gt;Agent&lt;/em&gt; Component only)&lt;/li&gt;
&lt;li&gt;process network events (&lt;em&gt;OnConnect/OnReceive/OnClose&lt;/em&gt; etc.)&lt;/li&gt;
&lt;li&gt;Stop component object (optional: component object will be stopped before destroy in step 7)&lt;/li&gt;
&lt;li&gt;Destroy component object&lt;/li&gt;
&lt;li&gt;Destroy listener object&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/15c6a53b12261dc2b3b6cf68ff2ac8a0cd8bbd2e/68747470733a2f2f67697465652e636f6d2f75706c6f6164732f696d616765732f323031372f313231332f3132303630315f63306439353066625f38313732302e6a706567"&gt;&lt;img src="https://camo.githubusercontent.com/15c6a53b12261dc2b3b6cf68ff2ac8a0cd8bbd2e/68747470733a2f2f67697465652e636f6d2f75706c6f6164732f696d616765732f323031372f313231332f3132303630315f63306439353066625f38313732302e6a706567" alt="Agent Workflow" title="HP-Socket Agent Demo" data-canonical-src="https://gitee.com/uploads/images/2017/1213/120601_c0d950fb_81720.jpeg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;C++ Example&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-c++"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;hpsocket/HPSocket.h&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Listener Class &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;CListenerImpl&lt;/span&gt; : &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-en"&gt;CTcpPullServerListener&lt;/span&gt;
{

&lt;span class="pl-k"&gt;public:&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 5. process network events&lt;/span&gt;
	&lt;span class="pl-k"&gt;virtual&lt;/span&gt; EnHandleResult &lt;span class="pl-en"&gt;OnPrepareListen&lt;/span&gt;(ITcpServer* pSender, SOCKET soListen);
	&lt;span class="pl-k"&gt;virtual&lt;/span&gt; EnHandleResult &lt;span class="pl-en"&gt;OnAccept&lt;/span&gt;(ITcpServer* pSender, CONNID dwConnID, UINT_PTR soClient);
	&lt;span class="pl-k"&gt;virtual&lt;/span&gt; EnHandleResult &lt;span class="pl-en"&gt;OnHandShake&lt;/span&gt;(ITcpServer* pSender, CONNID dwConnID);
	&lt;span class="pl-k"&gt;virtual&lt;/span&gt; EnHandleResult &lt;span class="pl-en"&gt;OnReceive&lt;/span&gt;(ITcpServer* pSender, CONNID dwConnID, &lt;span class="pl-k"&gt;int&lt;/span&gt; iLength);
	&lt;span class="pl-k"&gt;virtual&lt;/span&gt; EnHandleResult &lt;span class="pl-en"&gt;OnSend&lt;/span&gt;(ITcpServer* pSender, CONNID dwConnID, &lt;span class="pl-k"&gt;const&lt;/span&gt; BYTE* pData, &lt;span class="pl-k"&gt;int&lt;/span&gt; iLength);
	&lt;span class="pl-k"&gt;virtual&lt;/span&gt; EnHandleResult &lt;span class="pl-en"&gt;OnClose&lt;/span&gt;(ITcpServer* pSender, CONNID dwConnID, EnSocketOperation enOperation, &lt;span class="pl-k"&gt;int&lt;/span&gt; iErrorCode);
	&lt;span class="pl-k"&gt;virtual&lt;/span&gt; EnHandleResult &lt;span class="pl-en"&gt;OnShutdown&lt;/span&gt;(ITcpServer* pSender);
};

&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; argc, &lt;span class="pl-k"&gt;char&lt;/span&gt;* &lt;span class="pl-k"&gt;const&lt;/span&gt; argv[])
{
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1. Create listener object&lt;/span&gt;
	CListenerImpl s_listener;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2. Create component object (and binding with listener object)&lt;/span&gt;
	CTcpPullServerPtr &lt;span class="pl-smi"&gt;s_pserver&lt;/span&gt;(&amp;amp;s_listener);
	
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3. Start component object&lt;/span&gt;
	&lt;span class="pl-k"&gt;if&lt;/span&gt;(!s_pserver-&amp;gt;&lt;span class="pl-c1"&gt;Start&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.0.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;5555&lt;/span&gt;))
		&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;);
	
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; wait for exit &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... ... &lt;/span&gt;
	
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 6. (optional) Stop component object&lt;/span&gt;
	s_pserver-&amp;gt;&lt;span class="pl-c1"&gt;Stop&lt;/span&gt;();

	&lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
	
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 7. Destroy component object automatically&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 8. Destroy listener object automatically&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;C Example&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;hpsocket/HPSocket4C.h&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 5. process network events&lt;/span&gt;
EnHandleResult __HP_CALL &lt;span class="pl-en"&gt;OnConnect&lt;/span&gt;(HP_Agent pSender, HP_CONNID dwConnID);
EnHandleResult __HP_CALL &lt;span class="pl-en"&gt;OnReceive&lt;/span&gt;(HP_Agent pSender, HP_CONNID dwConnID, &lt;span class="pl-k"&gt;int&lt;/span&gt; iLength);
EnHandleResult __HP_CALL &lt;span class="pl-en"&gt;OnSend&lt;/span&gt;(HP_Agent pSender, HP_CONNID dwConnID, &lt;span class="pl-k"&gt;const&lt;/span&gt; BYTE* pData, &lt;span class="pl-k"&gt;int&lt;/span&gt; iLength);
EnHandleResult __HP_CALL &lt;span class="pl-en"&gt;OnClose&lt;/span&gt;(HP_Agent pSender, HP_CONNID dwConnID, En_HP_SocketOperation enOperation, &lt;span class="pl-k"&gt;int&lt;/span&gt; iErrorCode);
EnHandleResult __HP_CALL &lt;span class="pl-en"&gt;OnShutdown&lt;/span&gt;(HP_Agent pSender);

&lt;span class="pl-k"&gt;int&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;(&lt;span class="pl-k"&gt;int&lt;/span&gt; argc, &lt;span class="pl-k"&gt;char&lt;/span&gt;* &lt;span class="pl-k"&gt;const&lt;/span&gt; argv[])
{
	HP_TcpPullAgentListener s_listener;
	HP_TcpPullAgent s_agent;

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1. Create listener object&lt;/span&gt;
	s_listener	= ::&lt;span class="pl-c1"&gt;Create_HP_TcpPullAgentListener&lt;/span&gt;();
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2. Create component object (and binding with listener object)&lt;/span&gt;
	s_agent		= ::&lt;span class="pl-c1"&gt;Create_HP_TcpPullAgent&lt;/span&gt;(s_listener);
	
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Set listener callbacks &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-en"&gt;::HP_Set_FN_Agent_OnConnect&lt;/span&gt;(s_listener, OnConnect);
	&lt;span class="pl-en"&gt;::HP_Set_FN_Agent_OnSend&lt;/span&gt;(s_listener, OnSend);
	&lt;span class="pl-en"&gt;::HP_Set_FN_Agent_OnPullReceive&lt;/span&gt;(s_listener, OnReceive);
	&lt;span class="pl-en"&gt;::HP_Set_FN_Agent_OnClose&lt;/span&gt;(s_listener, OnClose);
	&lt;span class="pl-en"&gt;::HP_Set_FN_Agent_OnShutdown&lt;/span&gt;(s_listener, OnShutdown);
	
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3. Start component object&lt;/span&gt;
	&lt;span class="pl-k"&gt;if&lt;/span&gt;(::&lt;span class="pl-c1"&gt;HP_Agent_HasStarted&lt;/span&gt;(s_agent))
		&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;);
	
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 4. Connect to dest host&lt;/span&gt;
	&lt;span class="pl-en"&gt;::HP_Agent_Connect&lt;/span&gt;(s_agent, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;remote.host.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, REMOTE_PORT_1, nullptr);
	&lt;span class="pl-en"&gt;::HP_Agent_Connect&lt;/span&gt;(s_agent, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;remote.host.2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, REMOTE_PORT_2, nullptr);
	&lt;span class="pl-en"&gt;::HP_Agent_Connect&lt;/span&gt;(s_agent, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;remote.host.3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, REMOTE_PORT_3, nullptr);
	
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; wait for exit &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... ... &lt;/span&gt;
	
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 6. (optional) Stop component object&lt;/span&gt;
	&lt;span class="pl-en"&gt;::HP_Agent_Stop&lt;/span&gt;(s_agent);

	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 7. Destroy component object&lt;/span&gt;
	&lt;span class="pl-en"&gt;::Destroy_HP_TcpPullAgent&lt;/span&gt;(s_agent);
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 8. Destroy listener object&lt;/span&gt;
	&lt;span class="pl-en"&gt;::Destroy_HP_TcpPullAgentListener&lt;/span&gt;(s_listener);
	
	&lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-component-list" class="anchor" aria-hidden="true" href="#component-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Component List&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Basic Components&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/083424bdae1a43543629fb1737102247c2caecc2/68747470733a2f2f696d616765732e67697465652e636f6d2f75706c6f6164732f696d616765732f323031392f303333312f3130323432325f33656563666462375f38313732302e6a706567"&gt;&lt;img src="https://camo.githubusercontent.com/083424bdae1a43543629fb1737102247c2caecc2/68747470733a2f2f696d616765732e67697465652e636f6d2f75706c6f6164732f696d616765732f323031392f303333312f3130323432325f33656563666462375f38313732302e6a706567" alt="Basic Component" title="Basic Component" data-canonical-src="https://images.gitee.com/uploads/images/2019/0331/102422_3eecfdb7_81720.jpeg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;SSL Components&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b2f9ee589647682280705897cbab39e0ba2c077f/68747470733a2f2f67697465652e636f6d2f75706c6f6164732f696d616765732f323031372f313231342f3134333632325f64366331663433365f38313732302e6a706567"&gt;&lt;img src="https://camo.githubusercontent.com/b2f9ee589647682280705897cbab39e0ba2c077f/68747470733a2f2f67697465652e636f6d2f75706c6f6164732f696d616765732f323031372f313231342f3134333632325f64366331663433365f38313732302e6a706567" alt="SSL Component" title="SSL Component" data-canonical-src="https://gitee.com/uploads/images/2017/1214/143622_d6c1f436_81720.jpeg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;HTTP Components&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ebf9a70ab54d2fcf836256b2a1e7b5cc41a9fed6/68747470733a2f2f67697465652e636f6d2f75706c6f6164732f696d616765732f323031372f313231342f3134333634305f30656236663965345f38313732302e6a706567"&gt;&lt;img src="https://camo.githubusercontent.com/ebf9a70ab54d2fcf836256b2a1e7b5cc41a9fed6/68747470733a2f2f67697465652e636f6d2f75706c6f6164732f696d616765732f323031372f313231342f3134333634305f30656236663965345f38313732302e6a706567" alt="HTTP COmponent" title="HTTP Component" data-canonical-src="https://gitee.com/uploads/images/2017/1214/143640_0eb6f9e4_81720.jpeg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reference-projects" class="anchor" aria-hidden="true" href="#reference-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference Projects&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://github.com/jemalloc/jemalloc"&gt;jemalloc&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://github.com/openssl/openssl"&gt;openssl&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://github.com/nodejs/http-parser"&gt;http-parser&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://github.com/madler/zlib"&gt;zlib&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://github.com/skywind3000/kcp"&gt;kcp&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-third-party-extension-projects" class="anchor" aria-hidden="true" href="#third-party-extension-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Third-party Extension Projects&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://gitee.com/xin_chong/HP-Socket-for-macOS" rel="nofollow"&gt;HP-Socket for macOS&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-donation" class="anchor" aria-hidden="true" href="#donation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Donation&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6020e99b37153c64720ba30ec251dc798641b353/68747470733a2f2f696d616765732e67697465652e636f6d2f75706c6f6164732f696d616765732f323031392f303931382f3139303030345f31316563656137635f38313732302e6a706567"&gt;&lt;img src="https://camo.githubusercontent.com/6020e99b37153c64720ba30ec251dc798641b353/68747470733a2f2f696d616765732e67697465652e636f6d2f75706c6f6164732f696d616765732f323031392f303931382f3139303030345f31316563656137635f38313732302e6a706567" alt="Alibaba Pay" title="Alibaba Pay" data-canonical-src="https://images.gitee.com/uploads/images/2019/0918/190004_11ecea7c_81720.jpeg" style="max-width:100%;"&gt;&lt;/a&gt;
    
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d80835e2fd934bc1cffcfb61b242535943298de7/68747470733a2f2f696d616765732e67697465652e636f6d2f75706c6f6164732f696d616765732f323031392f303931382f3139303131355f61316663356562665f38313732302e6a706567"&gt;&lt;img src="https://camo.githubusercontent.com/d80835e2fd934bc1cffcfb61b242535943298de7/68747470733a2f2f696d616765732e67697465652e636f6d2f75706c6f6164732f696d616765732f323031392f303931382f3139303131355f61316663356562665f38313732302e6a706567" alt="Wechat Pay" title="Wechat Pay" data-canonical-src="https://images.gitee.com/uploads/images/2019/0918/190115_a1fc5ebf_81720.jpeg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ldcsaa</author><guid isPermaLink="false">https://github.com/ldcsaa/HP-Socket</guid><pubDate>Sun, 10 Nov 2019 00:10:00 GMT</pubDate></item><item><title>esp8266/Arduino #11 in C, This week</title><link>https://github.com/esp8266/Arduino</link><description>&lt;p&gt;&lt;i&gt;ESP8266 core for Arduino&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-arduino-core-for-esp8266-wifi-chip" class="anchor" aria-hidden="true" href="#arduino-core-for-esp8266-wifi-chip"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Arduino core for ESP8266 WiFi chip&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-quick-links" class="anchor" aria-hidden="true" href="#quick-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arduino-esp8266.readthedocs.io/en/2.6.0/" rel="nofollow"&gt;Latest release documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arduino-esp8266.readthedocs.io/en/latest/" rel="nofollow"&gt;Current "git version" documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arduino-esp8266.readthedocs.io/en/latest/installing.html#using-git-version" rel="nofollow"&gt;Install git version&lt;/a&gt; (&lt;a href="doc/installing.rst#using-git-version"&gt;sources&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-arduino-on-esp8266" class="anchor" aria-hidden="true" href="#arduino-on-esp8266"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Arduino on ESP8266&lt;/h1&gt;
&lt;p&gt;This project brings support for the ESP8266 chip to the Arduino environment. It lets you write sketches, using familiar Arduino functions and libraries, and run them directly on ESP8266, with no external microcontroller required.&lt;/p&gt;
&lt;p&gt;ESP8266 Arduino core comes with libraries to communicate over WiFi using TCP and UDP, set up HTTP, mDNS, SSDP, and DNS servers, do OTA updates, use a file system in flash memory, and work with SD cards, servos, SPI and I2C peripherals.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Installing options:
&lt;ul&gt;
&lt;li&gt;&lt;a href="#installing-with-boards-manager"&gt;Using Boards Manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-git-version"&gt;Using git version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-platformio"&gt;Using PlatformIO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#building-with-make"&gt;Building with make&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#issues-and-support"&gt;Issues and support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license-and-credits"&gt;License and credits&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-installing-with-boards-manager" class="anchor" aria-hidden="true" href="#installing-with-boards-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing with Boards Manager&lt;/h3&gt;
&lt;p&gt;Starting with 1.6.4, Arduino allows installation of third-party platform packages using Boards Manager. We have packages available for Windows, Mac OS, and Linux (32 and 64 bit).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install the current upstream Arduino IDE at the 1.8.7 level or later. The current version is on the &lt;a href="https://www.arduino.cc/en/main/software" rel="nofollow"&gt;Arduino website&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Start Arduino and open the Preferences window.&lt;/li&gt;
&lt;li&gt;Enter &lt;code&gt;https://arduino.esp8266.com/stable/package_esp8266com_index.json&lt;/code&gt; into the &lt;em&gt;Additional Board Manager URLs&lt;/em&gt; field. You can add multiple URLs, separating them with commas.&lt;/li&gt;
&lt;li&gt;Open Boards Manager from Tools &amp;gt; Board menu and install &lt;em&gt;esp8266&lt;/em&gt; platform (and don't forget to select your ESP8266 board from Tools &amp;gt; Board menu after installation).&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-latest-release-" class="anchor" aria-hidden="true" href="#latest-release-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Latest release &lt;a href="https://github.com/esp8266/Arduino/releases/latest/"&gt;&lt;img src="https://camo.githubusercontent.com/27457a237f37ff4856f7cf9daf0ee82d1347ddb5/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f657370383236362f41726475696e6f2e737667" alt="Latest release" data-canonical-src="https://img.shields.io/github/release/esp8266/Arduino.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Boards manager link: &lt;code&gt;https://arduino.esp8266.com/stable/package_esp8266com_index.json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Documentation: &lt;a href="https://arduino-esp8266.readthedocs.io/en/2.6.0/" rel="nofollow"&gt;https://arduino-esp8266.readthedocs.io/en/2.6.0/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-git-version" class="anchor" aria-hidden="true" href="#using-git-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using git version&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/esp8266/Arduino" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0832c7036e70ae03371e34f7e8f23f414f4fc37b/68747470733a2f2f7472617669732d63692e6f72672f657370383236362f41726475696e6f2e737667" alt="Linux build status" data-canonical-src="https://travis-ci.org/esp8266/Arduino.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also known as latest git or master branch.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install the current upstream Arduino IDE at the 1.8 level or later. The current version is on the &lt;a href="https://www.arduino.cc/en/main/software" rel="nofollow"&gt;Arduino website&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Follow the &lt;a href="https://arduino-esp8266.readthedocs.io/en/latest/installing.html#using-git-version" rel="nofollow"&gt;instructions in the documentation&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-using-platformio" class="anchor" aria-hidden="true" href="#using-platformio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using PlatformIO&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://platformio.org?utm_source=github&amp;amp;utm_medium=arduino-esp8266" rel="nofollow"&gt;PlatformIO&lt;/a&gt; is an open source ecosystem for IoT
development with a cross-platform build system, a library manager, and full support
for Espressif (ESP8266) development. It works on the following popular host operating systems: macOS, Windows,
Linux 32/64, and Linux ARM (like Raspberry Pi, BeagleBone, CubieBoard).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.platformio.org/en/latest/what-is-platformio.html?utm_source=github&amp;amp;utm_medium=arduino-esp8266" rel="nofollow"&gt;What is PlatformIO?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://platformio.org/platformio-ide?utm_source=github&amp;amp;utm_medium=arduino-esp8266" rel="nofollow"&gt;PlatformIO IDE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.platformio.org/en/latest/core.html?utm_source=github&amp;amp;utm_medium=arduino-esp8266" rel="nofollow"&gt;PlatformIO Core&lt;/a&gt; (command line tool)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.platformio.org/en/latest/platforms/espressif8266.html?utm_source=github&amp;amp;utm_medium=arduino-esp8266" rel="nofollow"&gt;Advanced usage&lt;/a&gt; -
custom settings, uploading to SPIFFS, Over-the-Air (OTA), staging version&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.platformio.org/en/latest/ide.html?utm_source=github&amp;amp;utm_medium=arduino-esp8266" rel="nofollow"&gt;Integration with Cloud and Standalone IDEs&lt;/a&gt; -
Cloud9, Codeanywhere, Eclipse Che (Codenvy), Atom, CLion, Eclipse, Emacs, NetBeans, Qt Creator, Sublime Text, VIM, Visual Studio, and VSCode&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.platformio.org/en/latest/platforms/espressif8266.html?utm_source=github&amp;amp;utm_medium=arduino-esp8266#examples" rel="nofollow"&gt;Project Examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-building-with-make" class="anchor" aria-hidden="true" href="#building-with-make"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building with make&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/plerup/makeEspArduino"&gt;makeEspArduino&lt;/a&gt; is a generic makefile for any ESP8266 Arduino project.
Using make instead of the Arduino IDE makes it easier to do automated and production builds.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h3&gt;
&lt;p&gt;Documentation for latest development version: &lt;a href="https://arduino-esp8266.readthedocs.io/en/latest/" rel="nofollow"&gt;https://arduino-esp8266.readthedocs.io/en/latest/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-issues-and-support" class="anchor" aria-hidden="true" href="#issues-and-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issues and support&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.esp8266.com/u/arduinoanswers" rel="nofollow"&gt;ESP8266 Community Forum&lt;/a&gt; is a well-established community for questions and answers about Arduino for ESP8266. If you need help, have a "How do I..." type question, have a problem with a 3rd party library not hosted in this repo, or just want to discuss how to approach a problem, please ask there.&lt;/p&gt;
&lt;p&gt;If you find the forum useful, please consider supporting it with a donation. &lt;br&gt;
&lt;a href="https://www.paypal.com/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=4M56YCWV6PX66" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/11b2f47d7b4af17ef3a803f57c37de3ac82ac039/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f70617970616c2d646f6e6174652d79656c6c6f772e737667" alt="Donate" data-canonical-src="https://img.shields.io/badge/paypal-donate-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you encounter an issue which you think is a bug in the ESP8266 Arduino Core or the associated libraries, or if you want to propose an enhancement, you are welcome to submit it here on Github: &lt;a href="https://github.com/esp8266/Arduino/issues"&gt;https://github.com/esp8266/Arduino/issues&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please provide as much context as possible, as well as the information requested in the issue template:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ESP8266 Arduino core version which you are using (you can check it in Boards Manager)&lt;/li&gt;
&lt;li&gt;your sketch code; please wrap it into a code block, see &lt;a href="https://help.github.com/articles/basic-writing-and-formatting-syntax/#quoting-code"&gt;Github markdown manual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;when encountering an issue that happens at run time, attach the serial output. Wrap it into a code block, just like the code.&lt;/li&gt;
&lt;li&gt;for issues that happen at compile time, enable verbose compiler output in the IDE preferences, and attach that output (also inside a code block)&lt;/li&gt;
&lt;li&gt;ESP8266 development board model&lt;/li&gt;
&lt;li&gt;IDE settings (board choice, flash size)&lt;/li&gt;
&lt;li&gt;etc&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h3&gt;
&lt;p&gt;For minor fixes of code and documentation, please go ahead and submit a pull request.  A gentle introduction to the process can be found &lt;a href="https://www.freecodecamp.org/news/a-simple-git-guide-and-cheat-sheet-for-open-source-contributors/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Check out the list of issues that are easy to fix — &lt;a href="https://github.com/esp8266/Arduino/issues?q=is%3Aopen+is%3Aissue+label%3A%22level%3A+easy%22"&gt;easy issues pending&lt;/a&gt;. Working on them is a great way to move the project forward.&lt;/p&gt;
&lt;p&gt;Larger changes (rewriting parts of existing code from scratch, adding new functions to the core, adding new libraries) should generally be discussed by opening an issue first.&lt;/p&gt;
&lt;p&gt;Feature branches with lots of small commits (especially titled "oops", "fix typo", "forgot to add file", etc.) should be squashed before opening a pull request. At the same time, please refrain from putting multiple unrelated changes into a single pull request.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-license-and-credits" class="anchor" aria-hidden="true" href="#license-and-credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License and credits&lt;/h3&gt;
&lt;p&gt;Arduino IDE is developed and maintained by the Arduino team. The IDE is licensed under GPL.&lt;/p&gt;
&lt;p&gt;ESP8266 core includes an xtensa gcc toolchain, which is also under GPL.&lt;/p&gt;
&lt;p&gt;Esptool written by Christian Klippel is licensed under GPLv2, currently maintained by Ivan Grokhotkov: &lt;a href="https://github.com/igrr/esptool-ck"&gt;https://github.com/igrr/esptool-ck&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Espressif SDK included in this build is under Espressif MIT License.&lt;/p&gt;
&lt;p&gt;ESP8266 core files are licensed under LGPL.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/pellepl/spiffs"&gt;SPI Flash File System (SPIFFS)&lt;/a&gt; written by Peter Andersson is used in this project. It is distributed under the MIT license.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rhempel/umm_malloc"&gt;umm_malloc&lt;/a&gt; memory management library written by Ralph Hempel is used in this project. It is distributed under the MIT license.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/plerup/espsoftwareserial"&gt;SoftwareSerial&lt;/a&gt; library and examples written by Peter Lerup. Distributed under LGPL 2.1.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://axtls.sourceforge.net/" rel="nofollow"&gt;axTLS&lt;/a&gt; library written by Cameron Rich, built from &lt;a href="https://github.com/igrr/axtls-8266"&gt;https://github.com/igrr/axtls-8266&lt;/a&gt;, is used in this project. It is distributed under &lt;a href="https://github.com/igrr/axtls-8266/blob/master/LICENSE"&gt;BSD license&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bearssl.org" rel="nofollow"&gt;BearSSL&lt;/a&gt; library written by Thomas Pornin, built from &lt;a href="https://github.com/earlephilhower/bearssl-esp8266"&gt;https://github.com/earlephilhower/bearssl-esp8266&lt;/a&gt;, is used in this project.  It is distributed under the &lt;a href="https://bearssl.org/#legal-details" rel="nofollow"&gt;MIT License&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ARMmbed/littlefs"&gt;LittleFS&lt;/a&gt; library written by ARM Limited and released under the &lt;a href="https://github.com/ARMmbed/littlefs/blob/master/LICENSE.md"&gt;BSD 3-clause license&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>esp8266</author><guid isPermaLink="false">https://github.com/esp8266/Arduino</guid><pubDate>Sun, 10 Nov 2019 00:11:00 GMT</pubDate></item><item><title>espressif/esp-idf #12 in C, This week</title><link>https://github.com/espressif/esp-idf</link><description>&lt;p&gt;&lt;i&gt;Espressif IoT Development Framework. Official development framework for ESP32.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-espressif-iot-development-framework" class="anchor" aria-hidden="true" href="#espressif-iot-development-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Espressif IoT Development Framework&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./README_CN.md"&gt;中文版&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/?badge=latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1af20a2147d12aca36403d0181d88e229da2640f/68747470733a2f2f72656164746865646f63732e636f6d2f70726f6a656374732f6573707265737369662d6573702d6964662f62616467652f3f76657273696f6e3d6c6174657374" alt="Documentation Status" data-canonical-src="https://readthedocs.com/projects/espressif-esp-idf/badge/?version=latest" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ESP-IDF is the official development framework for the &lt;a href="https://espressif.com/en/products/hardware/esp32/overview" rel="nofollow"&gt;ESP32&lt;/a&gt; chip.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-developing-with-esp-idf" class="anchor" aria-hidden="true" href="#developing-with-esp-idf"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developing With ESP-IDF&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-setting-up-esp-idf" class="anchor" aria-hidden="true" href="#setting-up-esp-idf"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting Up ESP-IDF&lt;/h2&gt;
&lt;p&gt;See setup guides for detailed instructions to set up the ESP-IDF:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.espressif.com/projects/esp-idf/en/stable/get-started/" rel="nofollow"&gt;Getting Started Guide for the stable ESP-IDF version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/get-started/" rel="nofollow"&gt;Getting Started Guide for the latest (master branch) ESP-IDF version&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-non-github-forks" class="anchor" aria-hidden="true" href="#non-github-forks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Non-GitHub forks&lt;/h3&gt;
&lt;p&gt;ESP-IDF uses relative locations as its submodules URLs (&lt;a href=".gitmodules"&gt;.gitmodules&lt;/a&gt;). So they link to GitHub.
If ESP-IDF is forked to a Git repository which is not on GitHub, you will need to run the script
&lt;a href="tools/set-submodules-to-github.sh"&gt;tools/set-submodules-to-github.sh&lt;/a&gt; after git clone.
The script sets absolute URLs for all submodules, allowing &lt;code&gt;git submodule update --init --recursive&lt;/code&gt; to complete.
If cloning ESP-IDF from GitHub, this step is not needed.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-finding-a-project" class="anchor" aria-hidden="true" href="#finding-a-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Finding a Project&lt;/h2&gt;
&lt;p&gt;As well as the &lt;a href="https://github.com/espressif/esp-idf-template"&gt;esp-idf-template&lt;/a&gt; project mentioned in Getting Started, ESP-IDF comes with some example projects in the &lt;a href="examples"&gt;examples&lt;/a&gt; directory.&lt;/p&gt;
&lt;p&gt;Once you've found the project you want to work with, change to its directory and you can configure and build it.&lt;/p&gt;
&lt;p&gt;To start your own project based on an example, copy the example project directory outside of the ESP-IDF directory.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-quick-reference" class="anchor" aria-hidden="true" href="#quick-reference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Reference&lt;/h1&gt;
&lt;p&gt;See the Getting Started guide links above for a detailed setup guide. This is a quick reference for common commands when working with ESP-IDF projects:&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-setup-build-environment" class="anchor" aria-hidden="true" href="#setup-build-environment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup Build Environment&lt;/h2&gt;
&lt;p&gt;(See Getting Started guide for a full list of required steps with details.)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install host build dependencies mentioned in Getting Started guide.&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;tools/&lt;/code&gt; directory to the PATH&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;python -m pip install -r requirements.txt&lt;/code&gt; to install Python dependencies&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-configuring-the-project" class="anchor" aria-hidden="true" href="#configuring-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring the Project&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;idf.py menuconfig&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Opens a text-based configuration menu for the project.&lt;/li&gt;
&lt;li&gt;Use up &amp;amp; down arrow keys to navigate the menu.&lt;/li&gt;
&lt;li&gt;Use Enter key to go into a submenu, Escape key to go out or to exit.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;?&lt;/code&gt; to see a help screen. Enter key exits the help screen.&lt;/li&gt;
&lt;li&gt;Use Space key, or &lt;code&gt;Y&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt; keys to enable (Yes) and disable (No) configuration items with checkboxes "&lt;code&gt;[*]&lt;/code&gt;"&lt;/li&gt;
&lt;li&gt;Pressing &lt;code&gt;?&lt;/code&gt; while highlighting a configuration item displays help about that item.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;/&lt;/code&gt; to search the configuration items.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once done configuring, press Escape multiple times to exit and say "Yes" to save the new configuration when prompted.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling-the-project" class="anchor" aria-hidden="true" href="#compiling-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling the Project&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;idf.py build&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;... will compile app, bootloader and generate a partition table based on the config.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-flashing-the-project" class="anchor" aria-hidden="true" href="#flashing-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flashing the Project&lt;/h2&gt;
&lt;p&gt;When the build finishes, it will print a command line to use esptool.py to flash the chip. However you can also do this automatically by running:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;idf.py -p PORT flash&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Replace PORT with the name of your serial port (like &lt;code&gt;COM3&lt;/code&gt; on Windows, &lt;code&gt;/dev/ttyUSB0&lt;/code&gt; on Linux, or &lt;code&gt;/dev/cu.usbserial-X&lt;/code&gt; on MacOS. If the &lt;code&gt;-p&lt;/code&gt; option is left out, &lt;code&gt;idf.py flash&lt;/code&gt; will try to flash the first available serial port.&lt;/p&gt;
&lt;p&gt;This will flash the entire project (app, bootloader and partition table) to a new chip. The settings for serial port flashing can be configured with &lt;code&gt;idf.py menuconfig&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You don't need to run &lt;code&gt;idf.py build&lt;/code&gt; before running &lt;code&gt;idf.py flash&lt;/code&gt;, &lt;code&gt;idf.py flash&lt;/code&gt; will automatically rebuild anything which needs it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-viewing-serial-output" class="anchor" aria-hidden="true" href="#viewing-serial-output"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Viewing Serial Output&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;idf.py monitor&lt;/code&gt; target uses the &lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/get-started/idf-monitor.html" rel="nofollow"&gt;idf_monitor tool&lt;/a&gt; to display serial output from the ESP32. idf_monitor also has a range of features to decode crash output and interact with the device. &lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/get-started/idf-monitor.html" rel="nofollow"&gt;Check the documentation page for details&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Exit the monitor by typing Ctrl-].&lt;/p&gt;
&lt;p&gt;To build, flash and monitor output in one pass, you can run:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;idf.py flash monitor&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling--flashing-only-the-app" class="anchor" aria-hidden="true" href="#compiling--flashing-only-the-app"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling &amp;amp; Flashing Only the App&lt;/h2&gt;
&lt;p&gt;After the initial flash, you may just want to build and flash just your app, not the bootloader and partition table:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;idf.py app&lt;/code&gt; - build just the app.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;idf.py app-flash&lt;/code&gt; - flash just the app.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;idf.py app-flash&lt;/code&gt; will automatically rebuild the app if any source files have changed.&lt;/p&gt;
&lt;p&gt;(In normal development there's no downside to reflashing the bootloader and partition table each time, if they haven't changed.)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-erasing-flash" class="anchor" aria-hidden="true" href="#erasing-flash"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Erasing Flash&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;idf.py flash&lt;/code&gt; target does not erase the entire flash contents. However it is sometimes useful to set the device back to a totally erased state, particularly when making partition table changes or OTA app updates. To erase the entire flash, run &lt;code&gt;idf.py erase_flash&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This can be combined with other targets, ie &lt;code&gt;idf.py -p PORT erase_flash flash&lt;/code&gt; will erase everything and then re-flash the new app, bootloader and partition table.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Documentation for the latest version: &lt;a href="https://docs.espressif.com/projects/esp-idf/" rel="nofollow"&gt;https://docs.espressif.com/projects/esp-idf/&lt;/a&gt;. This documentation is built from the &lt;a href="docs"&gt;docs directory&lt;/a&gt; of this repository.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href="https://esp32.com/" rel="nofollow"&gt;esp32.com forum&lt;/a&gt; is a place to ask questions and find community resources.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/espressif/esp-idf/issues"&gt;Check the Issues section on github&lt;/a&gt; if you find a bug or have a feature request. Please check existing Issues before opening a new one.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you're interested in contributing to ESP-IDF, please check the &lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/contribute/index.html" rel="nofollow"&gt;Contributions Guide&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>espressif</author><guid isPermaLink="false">https://github.com/espressif/esp-idf</guid><pubDate>Sun, 10 Nov 2019 00:12:00 GMT</pubDate></item><item><title>meetecho/janus-gateway #13 in C, This week</title><link>https://github.com/meetecho/janus-gateway</link><description>&lt;p&gt;&lt;i&gt;Janus WebRTC Server&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-janus-webrtc-server" class="anchor" aria-hidden="true" href="#janus-webrtc-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Janus WebRTC Server&lt;/h1&gt;
&lt;p&gt;Janus is an open source, general purpose, WebRTC server designed and developed by &lt;a href="http://www.meetecho.com" rel="nofollow"&gt;Meetecho&lt;/a&gt;. This version of the server is tailored for Linux systems, although it can be compiled for, and installed on, MacOS machines as well. Windows is not supported, but if that's a requirement, Janus is known to work in the "Windows Subsystem for Linux" on Windows 10.&lt;/p&gt;
&lt;p&gt;For some online demos and documentations, make sure you pay the &lt;a href="https://janus.conf.meetecho.com/" rel="nofollow"&gt;project website&lt;/a&gt; a visit!&lt;/p&gt;
&lt;p&gt;To discuss Janus with us and other users, there's a Google Group called &lt;a href="https://groups.google.com/forum/#!forum/meetecho-janus" rel="nofollow"&gt;meetecho-janus&lt;/a&gt; that you can use. If you encounter bugs, though, please submit an issue on &lt;a href="https://github.com/meetecho/janus-gateway/issues"&gt;github&lt;/a&gt; instead.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h2&gt;
&lt;p&gt;To install it, you'll need to satisfy the following dependencies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.digip.org/jansson/" rel="nofollow"&gt;Jansson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hyperrealm.github.io/libconfig/" rel="nofollow"&gt;libconfig&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nice.freedesktop.org/wiki/" rel="nofollow"&gt;libnice&lt;/a&gt; (at least v0.1.15 suggested, master recommended)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.openssl.org/" rel="nofollow"&gt;OpenSSL&lt;/a&gt; (at least v1.0.1e)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cisco/libsrtp"&gt;libsrtp&lt;/a&gt; (at least v1.5 suggested)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sctplab/usrsctp"&gt;usrsctp&lt;/a&gt; (only needed if you are interested in Data Channels)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.gnu.org/software/libmicrohttpd/" rel="nofollow"&gt;libmicrohttpd&lt;/a&gt; (only needed if you are interested in REST support for the Janus API)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://libwebsockets.org/" rel="nofollow"&gt;libwebsockets&lt;/a&gt; (only needed if you are interested in WebSockets support for the Janus API)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cmake.org/" rel="nofollow"&gt;cmake&lt;/a&gt; (only needed if you are interested in WebSockets and/or BoringSSL support, as they make use of it)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alanxz/rabbitmq-c"&gt;rabbitmq-c&lt;/a&gt; (only needed if you are interested in RabbitMQ support for the Janus API or events)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://eclipse.org/paho/clients/c" rel="nofollow"&gt;paho.mqtt.c&lt;/a&gt; (only needed if you are interested in MQTT support for the Janus API or events)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nanomsg.org/" rel="nofollow"&gt;nanomsg&lt;/a&gt; (only needed if you are interested in Nanomsg support for the Janus API)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://curl.haxx.se/libcurl/" rel="nofollow"&gt;libcurl&lt;/a&gt; (only needed if you are interested in the TURN REST API support)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A couple of plugins depend on a few more libraries:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://sofia-sip.sourceforge.net/" rel="nofollow"&gt;Sofia-SIP&lt;/a&gt; (only needed for the SIP plugin)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://opus-codec.org/" rel="nofollow"&gt;libopus&lt;/a&gt; (only needed for the bridge plugin)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://xiph.org/ogg/" rel="nofollow"&gt;libogg&lt;/a&gt; (needed for the voicemail plugin and/or post-processor)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://curl.haxx.se/libcurl/" rel="nofollow"&gt;libcurl&lt;/a&gt; (only needed if you are interested in RTSP support in the Streaming plugin or in the sample Event Handler plugin)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.lua.org/download.html" rel="nofollow"&gt;Lua&lt;/a&gt; (only needed for the Lua plugin)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additionally, you'll need the following libraries and tools:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://library.gnome.org/devel/glib/" rel="nofollow"&gt;GLib&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.freedesktop.org/wiki/Software/pkg-config/" rel="nofollow"&gt;pkg-config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.gnu.org/software/gengetopt/" rel="nofollow"&gt;gengetopt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of those libraries are usually available on most of the most common distributions. Installing these libraries on a recent Fedora, for instance, is very simple:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yum install libmicrohttpd-devel jansson-devel \
   openssl-devel libsrtp-devel sofia-sip-devel glib2-devel \
   opus-devel libogg-devel libcurl-devel pkgconfig gengetopt \
   libconfig-devel libtool autoconf automake
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that you may have to &lt;code&gt;yum install epel-release&lt;/code&gt; as well if you're attempting an installation on a CentOS machine instead.&lt;/p&gt;
&lt;p&gt;On Ubuntu or Debian, it would require something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aptitude install libmicrohttpd-dev libjansson-dev \
	libssl-dev libsrtp-dev libsofia-sip-ua-dev libglib2.0-dev \
	libopus-dev libogg-dev libcurl4-openssl-dev liblua5.3-dev \
	libconfig-dev pkg-config gengetopt libtool automake
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Note:&lt;/em&gt; please notice that libopus may not be available out of the box on Ubuntu or Debian, unless you're using a recent version (e.g., Ubuntu 14.04 LTS). In that case, you'll have to &lt;a href="http://www.opus-codec.org" rel="nofollow"&gt;install it manually&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While &lt;code&gt;libnice&lt;/code&gt; is typically available in most distros as a package, the version available out of the box in Ubuntu is known to cause problems. As such, we always recommend manually compiling and installing the master version of libnice. Installation of libnice master is quite straightforward:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://gitlab.freedesktop.org/libnice/libnice
cd libnice
./autogen.sh
./configure --prefix=/usr
make &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Note:&lt;/em&gt; Make sure you remove the distro version first, or you'll cause conflicts between the installations. In case you want to keep both for some reason, for custom installations of libnice you can also run &lt;code&gt;pkg-config --cflags --libs nice&lt;/code&gt; to make sure Janus can find the right installation. If that fails, you may need to set the &lt;code&gt;PKG_CONFIG_PATH&lt;/code&gt; environment variable prior to compiling Janus, e.g., &lt;code&gt;export PKG_CONFIG_PATH=/path/to/libnice/lib/pkgconfig&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In case you're interested in compiling the sample Event Handler plugin, you'll need to install the development version of libcurl as well (usually &lt;code&gt;libcurl-devel&lt;/code&gt; on Fedora/CentOS, &lt;code&gt;libcurl4-openssl-dev&lt;/code&gt; on Ubuntu/Debian).&lt;/p&gt;
&lt;p&gt;If your distro ships a pre-1.5 version of libsrtp, you'll have to uninstall that version and &lt;a href="https://github.com/cisco/libsrtp/releases"&gt;install 1.5.x, 1.6.x or 2.x manually&lt;/a&gt;. In fact, 1.4.x is known to cause several issues with WebRTC. Installation of version 1.5.4 is quite straightforward:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget https://github.com/cisco/libsrtp/archive/v1.5.4.tar.gz
tar xfv v1.5.4.tar.gz
cd libsrtp-1.5.4
./configure --prefix=/usr --enable-openssl
make shared_library &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The instructions for version 2.x are practically the same. Notice that the following steps are for version 2.2.0, but there may be more recent versions available:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget https://github.com/cisco/libsrtp/archive/v2.2.0.tar.gz
tar xfv v2.2.0.tar.gz
cd libsrtp-2.2.0
./configure --prefix=/usr --enable-openssl
make shared_library &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The Janus configure script autodetects which one you have installed and links to the correct library automatically, choosing 2.x if both are installed. If you want 1.5 or 1.6 to be picked, pass &lt;code&gt;--disable-libsrtp2&lt;/code&gt; when configuring Janus to force it to use the older version instead.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Note:&lt;/em&gt; when installing libsrtp, no matter which version, you may need to pass &lt;code&gt;--libdir=/usr/lib64&lt;/code&gt; to the configure script if you're installing on a x86_64 distribution.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want to make use of BoringSSL instead of OpenSSL (e.g., because you want to take advantage of &lt;code&gt;--enable-dtls-settimeout&lt;/code&gt;), you'll have to manually install it to a specific location. Use the following steps:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://boringssl.googlesource.com/boringssl
cd boringssl
# Don't barf on errors
sed -i s/" -Werror"//g CMakeLists.txt
# Build
mkdir -p build
cd build
cmake -DCMAKE_CXX_FLAGS="-lrt" ..
make
cd ..
# Install
sudo mkdir -p /opt/boringssl
sudo cp -R include /opt/boringssl/
sudo mkdir -p /opt/boringssl/lib
sudo cp build/ssl/libssl.a /opt/boringssl/lib/
sudo cp build/crypto/libcrypto.a /opt/boringssl/lib/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once the library is installed, you'll have to pass an additional &lt;code&gt;--enable-boringssl&lt;/code&gt; flag to the configure script, as by default Janus will be built assuming OpenSSL will be used. By default, Janus expects BoringSSL to be installed in &lt;code&gt;/opt/boringssl&lt;/code&gt; -- if it's installed in another location, pass the path to the configure script as such: &lt;code&gt;--enable-boringssl=/path/to/boringssl&lt;/code&gt; If you were using OpenSSL and want to switch to BoringSSL, make sure you also do a &lt;code&gt;make clean&lt;/code&gt; in the Janus folder before compiling with the new BoringSSL support. If you enabled BoringSSL support and also want Janus to detect and react to DTLS timeouts with faster retransmissions, then pass &lt;code&gt;--enable-dtls-settimeout&lt;/code&gt; to the configure script too.&lt;/p&gt;
&lt;p&gt;For what concerns usrsctp, which is needed for Data Channels support, it is usually not available in repositories, so if you're interested in them (support is optional) you'll have to install it manually. It is a pretty easy and standard process:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/sctplab/usrsctp
cd usrsctp
./bootstrap
./configure --prefix=/usr &amp;amp;&amp;amp; make &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Note:&lt;/em&gt; you may need to pass &lt;code&gt;--libdir=/usr/lib64&lt;/code&gt; to the configure script if you're installing on a x86_64 distribution.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The same applies for libwebsockets, which is needed for the optional WebSockets support. If you're interested in supporting WebSockets to control Janus, as an alternative (or replacement) to the default plain HTTP REST API, you'll have to install it manually:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://libwebsockets.org/repo/libwebsockets
cd libwebsockets
# If you want the stable version of libwebsockets, uncomment the next line
# git checkout v2.4-stable
mkdir build
cd build
# See https://github.com/meetecho/janus-gateway/issues/732 re: LWS_MAX_SMP
cmake -DLWS_MAX_SMP=1 -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_C_FLAGS="-fpic" ..
make &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; if libwebsockets.org is unreachable for any reason, replace the first line with this:&lt;/p&gt;
&lt;p&gt;git clone &lt;a href="https://github.com/warmcat/libwebsockets.git"&gt;https://github.com/warmcat/libwebsockets.git&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The same applies for Eclipse Paho MQTT C client library, which is needed for the optional MQTT support. If you're interested in integrating MQTT channels as an alternative (or replacement) to HTTP and/or WebSockets to control Janus, or as a carrier of Janus Events, you can install the latest version with the following steps:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/eclipse/paho.mqtt.c.git
cd paho.mqtt.c
make &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Note:&lt;/em&gt; you may want to set up a different install path for the library, to achieve that, replace the last command by 'sudo prefix=/usr make install'.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In case you're interested in Nanomsg support, you'll need to install the related C library. It is usually available as an easily installable package in pretty much all repositories. The following is an example on how to install it on Ubuntu:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aptitude install libnanomsg-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, the same can be said for rabbitmq-c as well, which is needed for the optional RabbitMQ support. In fact, several different versions of the library can be found, and the versions usually available in most distribution repositories are not up-do-date with respect to the current state of the development. As such, if you're interested in integrating RabbitMQ queues as an alternative (or replacement) to HTTP and/or WebSockets to control Janus, you can install the latest version with the following steps:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/alanxz/rabbitmq-c
cd rabbitmq-c
git submodule init
git submodule update
mkdir build &amp;amp;&amp;amp; cd build
cmake -DCMAKE_INSTALL_PREFIX=/usr ..
make &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Note:&lt;/em&gt; you may need to pass &lt;code&gt;--libdir=/usr/lib64&lt;/code&gt; to the configure script if you're installing on a x86_64 distribution.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To conclude, should you be interested in building the Janus documentation as well, you'll need some additional tools too:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.doxygen.org" rel="nofollow"&gt;Doxygen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.graphviz.org/" rel="nofollow"&gt;Graphviz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On Fedora:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yum install doxygen graphviz
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On Ubuntu/Debian:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aptitude install doxygen graphviz
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-compile" class="anchor" aria-hidden="true" href="#compile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compile&lt;/h2&gt;
&lt;p&gt;Once you have installed all the dependencies, get the code:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/meetecho/janus-gateway.git
cd janus-gateway
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then just use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sh autogen.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to generate the configure file. After that, configure and compile as usual to start the whole compilation process:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --prefix=/opt/janus
make
make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Since Janus requires configuration files for both the core and its modules in order to work, you'll probably also want to install the default configuration files to use, which you can do this way:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make configs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Remember to only do this once, or otherwise a subsequent &lt;code&gt;make configs&lt;/code&gt; will overwrite any configuration file you may have modified in themeanwhile.&lt;/p&gt;
&lt;p&gt;If you've installed the above libraries but are not interested, for instance, in Data Channels, WebSockets, MQTT and/or RabbitMQ, you can disable them when configuring:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --disable-websockets --disable-data-channels --disable-rabbitmq --disable-mqtt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There are configuration flags for pretty much all external modules and many of the features, so you may want to issue a &lt;code&gt;./configure --help&lt;/code&gt; to dig through the available options. A summary of what's going to be built will always appear after you do a configure, allowing you to double check if what you need and don't need is there.&lt;/p&gt;
&lt;p&gt;If Doxygen and graphviz are available, the process can also build the documentation for you. By default the compilation process will not try to build the documentation, so if you instead prefer to build it, use the &lt;code&gt;--enable-docs&lt;/code&gt; configuration option:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --enable-docs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can also selectively enable/disable other features (e.g., specific plugins you don't care about, or whether or not you want to build the recordings post-processor). Use the --help option when configuring for more info.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-on-macos" class="anchor" aria-hidden="true" href="#building-on-macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building on MacOS&lt;/h3&gt;
&lt;p&gt;While most of the above instructions will work when compiling Janus on MacOS as well, there are a few aspects to highlight when doing that.&lt;/p&gt;
&lt;p&gt;First of all, you can use &lt;code&gt;brew&lt;/code&gt; to install most of the dependencies:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install jansson libnice openssl srtp libusrsctp libmicrohttpd \
	libwebsockets cmake rabbitmq-c sofia-sip opus libogg curl glib \
	libconfig pkg-config gengetopt autoconf automake libtool
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For what concerns libwebsockets, though, make sure that the installed version is higher than &lt;code&gt;2.4.1&lt;/code&gt;, or you might encounter the problems described in &lt;a href="https://groups.google.com/forum/#!topic/meetecho-janus/HsFaEXBz4Cg" rel="nofollow"&gt;this post&lt;/a&gt;. If &lt;code&gt;brew&lt;/code&gt; doesn't provide a more recent version, you'll have to install the library manually.&lt;/p&gt;
&lt;p&gt;Notice that you may need to provide a custom &lt;code&gt;prefix&lt;/code&gt; and &lt;code&gt;PKG_CONFIG_PATH&lt;/code&gt; when configuring Janus as well, e.g.:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --prefix=/usr/local/janus PKG_CONFIG_PATH=/usr/local/opt/openssl/lib/pkgconfig
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Everything else works exactly the same way as on Linux.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configure-and-start" class="anchor" aria-hidden="true" href="#configure-and-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configure and start&lt;/h2&gt;
&lt;p&gt;To start the server, you can use the &lt;code&gt;janus&lt;/code&gt; executable. There are several things you can configure, either in a configuration file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;installdir&amp;gt;/etc/janus/janus.jcfg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or on the command line:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;installdir&amp;gt;/bin/janus --help

janus 0.7.6

Usage: janus [OPTIONS]...

-h, --help                    Print help and exit
-V, --version                 Print version and exit
-b, --daemon                  Launch Janus in background as a daemon
                              (default=off)
-p, --pid-file=path           Open the specified PID file when starting Janus
                              (default=none)
-N, --disable-stdout          Disable stdout based logging  (default=off)
-L, --log-file=path           Log to the specified file (default=stdout only)
-H  --cwd-path                Working directory for Janus daemon process
                              (default=/)
-i, --interface=ipaddress     Interface to use (will be the public IP)
-P, --plugins-folder=path     Plugins folder (default=./plugins)
-C, --config=filename         Configuration file to use
-F, --configs-folder=path     Configuration files folder (default=./conf)
-c, --cert-pem=filename       DTLS certificate
-k, --cert-key=filename       DTLS certificate key
-K, --cert-pwd=text           DTLS certificate key passphrase (if needed)
-S, --stun-server=filename    STUN server(:port) to use, if needed (e.g.,
							  Janus behind NAT, default=none)
-1, --nat-1-1=ip              Public IP to put in all host candidates,
                              assuming a 1:1 NAT is in place (e.g., Amazon
                              EC2 instances, default=none)
-E, --ice-enforce-list=list   Comma-separated list of the only interfaces to
                              use for ICE gathering; partial strings are
                              supported (e.g., eth0 or eno1,wlan0,
                              default=none)
-X, --ice-ignore-list=list    Comma-separated list of interfaces or IP
                              addresses to ignore for ICE gathering;
                              partial strings are supported (e.g.,
                              vmnet8,192.168.0.1,10.0.0.1 or
                              vmnet,192.168., default=vmnet)
-6, --ipv6-candidates         Whether to enable IPv6 candidates or not
                              (experimental)  (default=off)
-l, --libnice-debug           Whether to enable libnice debugging or not
                              (default=off)
-f, --full-trickle            Do full-trickle instead of half-trickle
                              (default=off)
-I, --ice-lite                Whether to enable the ICE Lite mode or not
                              (default=off)
-T, --ice-tcp                 Whether to enable ICE-TCP or not (warning: only
                              works with ICE Lite)
                              (default=off)
-R, --rfc-4588                Whether to enable RFC4588 retransmissions
                              support or not  (default=off)
-q, --max-nack-queue=number   Maximum size of the NACK queue (in ms) per user
                              for retransmissions
-t, --no-media-timer=number   Time (in s) that should pass with no media
                              (audio or video) being received before Janus
                              notifies you about this
-W, --slowlink-threshold=number
                              Number of lost packets (per s) that should
                              trigger a 'slowlink' Janus API event to users
-r, --rtp-port-range=min-max  Port range to use for RTP/RTCP (only available
							  if the installed libnice supports it)
-B, --twcc-period=number      How often (in ms) to send TWCC feedback back to
                              senders, if negotiated (default=1s)
-n, --server-name=name        Public name of this Janus instance
                              (default=MyJanusInstance)
-s, --session-timeout=number  Session timeout value, in seconds (default=60)
-m, --reclaim-session-timeout=number
                              Reclaim session timeout value, in seconds
                              (default=0)
-d, --debug-level=1-7         Debug/logging level (0=disable debugging,
                              7=maximum debug level; default=4)
-D, --debug-timestamps        Enable debug/logging timestamps  (default=off)
-o, --disable-colors          Disable color in the logging  (default=off)
-M, --debug-locks             Enable debugging of locks/mutexes (very
                              verbose!)  (default=off)
-a, --apisecret=randomstring  API secret all requests need to pass in order
                              to be accepted by Janus (useful when wrapping
                              Janus API requests in a server, none by
                              default)
-A, --token-auth              Enable token-based authentication for all
                              requests  (default=off)
-e, --event-handlers          Enable event handlers  (default=off)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Options passed through the command line have the precedence on those specified in the configuration file. To start the server, simply run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;installdir&amp;gt;/bin/janus
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will start the server, and have it look at the configuration file.&lt;/p&gt;
&lt;p&gt;Make sure you have a look at all of the configuration files, to tailor Janus to your specific needs: each configuration file is documented, so it shouldn't be hard to make changes according to your requirements. The repo comes with some defaults (assuming you issues &lt;code&gt;make configs&lt;/code&gt; after installing the server) that tend to make sense for generic deployments, and also includes some sample configurations for all the plugins (e.g., web servers to listen on, conference rooms to create, streaming mountpoints to make available at startup, etc.).&lt;/p&gt;
&lt;p&gt;To test whether it's working correctly, you can use the demos provided with this package in the &lt;code&gt;html&lt;/code&gt; folder: these are exactly the same demos available online on the &lt;a href="http://janus.conf.meetecho.com/" rel="nofollow"&gt;project website&lt;/a&gt;. Just copy the file it contains in a webserver, or use a userspace webserver to serve the files in the &lt;code&gt;html&lt;/code&gt; folder (e.g., with php or python), and open the &lt;code&gt;index.html&lt;/code&gt; page in either Chrome or Firefox. A list of demo pages exploiting the different plugins will be available. Remember to edit the transport/port details in the demo JavaScript files if you changed any transport-related configuration from its defaults. Besides, the demos refer to the pre-configured plugin resources, so if you add some new resources (e.g., a new videoconference) you may have to tweak the demo pages to actually use them.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Janus is thoroughly documented. You can find the current documentation, automatically generated with Doxygen, on the &lt;a href="http://janus.conf.meetecho.com/docs/" rel="nofollow"&gt;project website&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-help-us" class="anchor" aria-hidden="true" href="#help-us"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help us!&lt;/h2&gt;
&lt;p&gt;Any thought, feedback or (hopefully not!) insult is welcome!&lt;/p&gt;
&lt;p&gt;Developed by &lt;a href="https://github.com/meetecho"&gt;@meetecho&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>meetecho</author><guid isPermaLink="false">https://github.com/meetecho/janus-gateway</guid><pubDate>Sun, 10 Nov 2019 00:13:00 GMT</pubDate></item><item><title>espressif/ESP8266_RTOS_SDK #14 in C, This week</title><link>https://github.com/espressif/ESP8266_RTOS_SDK</link><description>&lt;p&gt;&lt;i&gt;Latest ESP8266 SDK based on FreeRTOS, esp-idf style.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-esp8266-rtos-software-development-kit" class="anchor" aria-hidden="true" href="#esp8266-rtos-software-development-kit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ESP8266 RTOS Software Development Kit&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://docs.espressif.com/projects/esp8266-rtos-sdk/en/latest/?badge=latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ea34703df9f92c83aa821154823ad750d743be7c/68747470733a2f2f72656164746865646f63732e636f6d2f70726f6a656374732f6573707265737369662d657370383236362d72746f732d73646b2f62616467652f3f76657273696f6e3d6c6174657374" alt="Documentation Status" data-canonical-src="https://readthedocs.com/projects/espressif-esp8266-rtos-sdk/badge/?version=latest" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content--important-notice-" class="anchor" aria-hidden="true" href="#-important-notice-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;** IMPORTANT NOTICE **&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-about-this-repository" class="anchor" aria-hidden="true" href="#about-this-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About this repository&lt;/h2&gt;
&lt;p&gt;A new branching model is applied to this repository, which consists of a master branch and release branches.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-1-master-branch" class="anchor" aria-hidden="true" href="#1-master-branch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. Master branch&lt;/h3&gt;
&lt;p&gt;The master branch is an integration branch where bug fixes/features are gathered for compiling and functional testing.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-2-release-branch" class="anchor" aria-hidden="true" href="#2-release-branch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. Release branch&lt;/h3&gt;
&lt;p&gt;The release branch is where releases are maintained and hot fixes (with names like &lt;em&gt;release/v2.x.x&lt;/em&gt;) are added.
Please ensure that all your production-related work are tracked with the release branches.&lt;/p&gt;
&lt;p&gt;With this new model, we can push out bug fixes more quickly and achieve simpler maintenance.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-roadmap" class="anchor" aria-hidden="true" href="#roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Roadmap&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;ESP8266_RTOS_SDK&lt;/em&gt;'s framework is quite outdated and different from the current &lt;em&gt;&lt;a href="https://github.com/espressif/esp-idf"&gt;esp-idf&lt;/a&gt;&lt;/em&gt; and we are planning to migrate &lt;em&gt;ESP8266_RTOS_SDK&lt;/em&gt; to &lt;em&gt;esp-idf&lt;/em&gt; eventually after &lt;em&gt;v2.0.0&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;However, we will firstly provide a new version of ESP8266 SDK (&lt;em&gt;ESP8266_RTOS_SDK v3.0&lt;/em&gt;), which shares the same framework with &lt;em&gt;esp-idf&lt;/em&gt; (esp-idf style), as a work-around, because the multi-CPU architecture is not supported by &lt;em&gt;esp-idf&lt;/em&gt; for the time being.&lt;/p&gt;
&lt;p&gt;Actions to be taken for &lt;em&gt;ESP8266_RTOS_SDK v3.0&lt;/em&gt; include the following items:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Modify the framework to esp-idf style&lt;/li&gt;
&lt;li&gt;Restructure some core libraries including Wi-Fi libraries and libmain&lt;/li&gt;
&lt;li&gt;Update some third-party libraries including FreeRTOS, lwIP, mbedTLS, noPoll, libcoap, SPIFFS, cJSON, wolfSSL, etc.&lt;/li&gt;
&lt;li&gt;Update some drivers&lt;/li&gt;
&lt;li&gt;Others&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;a id="user-content-developing-with-the-esp8266_rtos_sdk" class="anchor" aria-hidden="true" href="#developing-with-the-esp8266_rtos_sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developing With the ESP8266_RTOS_SDK&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-get-toolchain" class="anchor" aria-hidden="true" href="#get-toolchain"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Get toolchain&lt;/h2&gt;
&lt;p&gt;v5.2.0&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dl.espressif.com/dl/xtensa-lx106-elf-win32-1.22.0-100-ge567ec7-5.2.0.zip" rel="nofollow"&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dl.espressif.com/dl/xtensa-lx106-elf-macos-1.22.0-100-ge567ec7-5.2.0.tar.gz" rel="nofollow"&gt;Mac&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dl.espressif.com/dl/xtensa-lx106-elf-linux64-1.22.0-100-ge567ec7-5.2.0.tar.gz" rel="nofollow"&gt;Linux(64)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dl.espressif.com/dl/xtensa-lx106-elf-linux32-1.22.0-100-ge567ec7-5.2.0.tar.gz" rel="nofollow"&gt;Linux(32)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are still using old version SDK(&amp;lt; 3.0), please use toolchain v4.8.5, as following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dl.espressif.com/dl/xtensa-lx106-elf-win32-1.22.0-88-gde0bdc1-4.8.5.tar.gz" rel="nofollow"&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dl.espressif.com/dl/xtensa-lx106-elf-osx-1.22.0-88-gde0bdc1-4.8.5.tar.gz" rel="nofollow"&gt;Mac&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dl.espressif.com/dl/xtensa-lx106-elf-linux64-1.22.0-88-gde0bdc1-4.8.5.tar.gz" rel="nofollow"&gt;Linux(64)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dl.espressif.com/dl/xtensa-lx106-elf-linux32-1.22.0-88-gde0bdc1-4.8.5.tar.gz" rel="nofollow"&gt;Linux(32)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-get-esp8266_rtos_sdk" class="anchor" aria-hidden="true" href="#get-esp8266_rtos_sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Get ESP8266_RTOS_SDK&lt;/h2&gt;
&lt;p&gt;Besides the toolchain (that contains programs to compile and build the application), you also need ESP8266 specific API / libraries. They are provided by Espressif in &lt;a href="https://github.com/espressif/ESP8266_RTOS_SDK"&gt;ESP8266_RTOS_SDK&lt;/a&gt; repository. To get it, open terminal, navigate to the directory you want to put ESP8266_RTOS_SDK, and clone it using &lt;code&gt;git clone&lt;/code&gt; command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~/esp
git clone https://github.com/espressif/ESP8266_RTOS_SDK.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ESP8266_RTOS_SDK will be downloaded into &lt;code&gt;~/esp/ESP8266_RTOS_SDK&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-setup-path-to-esp8266_rtos_sdk" class="anchor" aria-hidden="true" href="#setup-path-to-esp8266_rtos_sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup Path to ESP8266_RTOS_SDK&lt;/h2&gt;
&lt;p&gt;The toolchain programs access ESP8266_RTOS_SDK using &lt;code&gt;IDF_PATH&lt;/code&gt; environment variable. This variable should be set up on your PC, otherwise projects will not build. Setting may be done manually, each time PC is restarted. Another option is to set up it permanently by defining &lt;code&gt;IDF_PATH&lt;/code&gt; in user profile.&lt;/p&gt;
&lt;p&gt;For manually, the command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export IDF_PATH=~/esp/ESP8266_RTOS_SDK
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-start-a-project" class="anchor" aria-hidden="true" href="#start-a-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Start a Project&lt;/h2&gt;
&lt;p&gt;Now you are ready to prepare your application for ESP8266. To start off quickly, we can use &lt;code&gt;examples/get-started/hello_world&lt;/code&gt; project from &lt;code&gt;examples&lt;/code&gt; directory in SDK.&lt;/p&gt;
&lt;p&gt;Once you've found the project you want to work with, change to its directory and you can configure and build it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-connect" class="anchor" aria-hidden="true" href="#connect"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Connect&lt;/h2&gt;
&lt;p&gt;You are almost there. To be able to proceed further, connect ESP8266 board to PC, check under what serial port the board is visible and verify if serial communication works. Note the port number, as it will be required in the next step.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configuring-the-project" class="anchor" aria-hidden="true" href="#configuring-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring the Project&lt;/h2&gt;
&lt;p&gt;Being in terminal window, go to directory of &lt;code&gt;hello_world&lt;/code&gt; application by typing &lt;code&gt;cd ~/esp/ESP8266_RTOS_SDK/examples/get-started/hello_world&lt;/code&gt;. Then start project configuration utility &lt;code&gt;menuconfig&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~/esp/ESP8266_RTOS_SDK/examples/get-started/hello_world
make menuconfig
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the menu, navigate to &lt;code&gt;Serial flasher config&lt;/code&gt; &amp;gt; &lt;code&gt;Default serial port&lt;/code&gt; to configure the serial port, where project will be loaded to. Confirm selection by pressing enter, save configuration by selecting &lt;code&gt;&amp;lt; Save &amp;gt;&lt;/code&gt; and then exit application by selecting &lt;code&gt;&amp;lt; Exit &amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note:
On Windows, serial ports have names like COM1. On MacOS, they start with &lt;code&gt;/dev/cu.&lt;/code&gt;. On Linux, they start with &lt;code&gt;/dev/tty&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here are couple of tips on navigation and use of &lt;code&gt;menuconfig&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use up &amp;amp; down arrow keys to navigate the menu.&lt;/li&gt;
&lt;li&gt;Use Enter key to go into a submenu, Escape key to go out or to exit.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;?&lt;/code&gt; to see a help screen. Enter key exits the help screen.&lt;/li&gt;
&lt;li&gt;Use Space key, or &lt;code&gt;Y&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt; keys to enable (Yes) and disable (No) configuration items with checkboxes "&lt;code&gt;[*]&lt;/code&gt;"&lt;/li&gt;
&lt;li&gt;Pressing &lt;code&gt;?&lt;/code&gt; while highlighting a configuration item displays help about that item.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;/&lt;/code&gt; to search the configuration items.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once done configuring, press Escape multiple times to exit and say "Yes" to save the new configuration when prompted.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling-the-project" class="anchor" aria-hidden="true" href="#compiling-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling the Project&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;make all&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;... will compile app based on the config.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-flashing-the-project" class="anchor" aria-hidden="true" href="#flashing-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flashing the Project&lt;/h2&gt;
&lt;p&gt;When &lt;code&gt;make all&lt;/code&gt; finishes, it will print a command line to use esptool.py to flash the chip. However you can also do this from make by running:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make flash&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This will flash the entire project (app, bootloader and init data bin) to a new chip. The settings for serial port flashing can be configured with &lt;code&gt;make menuconfig&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You don't need to run &lt;code&gt;make all&lt;/code&gt; before running &lt;code&gt;make flash&lt;/code&gt;, &lt;code&gt;make flash&lt;/code&gt; will automatically rebuild anything which needs it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-viewing-serial-output" class="anchor" aria-hidden="true" href="#viewing-serial-output"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Viewing Serial Output&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;make monitor&lt;/code&gt; target uses the &lt;a href="https://esp-idf.readthedocs.io/en/latest/get-started/idf-monitor.html" rel="nofollow"&gt;idf_monitor tool&lt;/a&gt; to display serial output from the ESP32. idf_monitor also has a range of features to decode crash output and interact with the device. &lt;a href="https://esp-idf.readthedocs.io/en/latest/get-started/idf-monitor.html" rel="nofollow"&gt;Check the documentation page for details&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Exit the monitor by typing Ctrl-].&lt;/p&gt;
&lt;p&gt;To flash and monitor output in one pass, you can run:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make flash monitor&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling--flashing-just-the-app" class="anchor" aria-hidden="true" href="#compiling--flashing-just-the-app"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling &amp;amp; Flashing Just the App&lt;/h2&gt;
&lt;p&gt;After the initial flash, you may just want to build and flash just your app, not the bootloader and init data bin:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;make app&lt;/code&gt; - build just the app.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make app-flash&lt;/code&gt; - flash just the app.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;make app-flash&lt;/code&gt; will automatically rebuild the app if it needs it.&lt;/p&gt;
&lt;p&gt;(In normal development there's no downside to reflashing the bootloader and init data bin each time, if they haven't changed.)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note:
Recommend to use these 2 commands if you have flashed bootloader and init data bin.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-parallel-builds" class="anchor" aria-hidden="true" href="#parallel-builds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Parallel Builds&lt;/h2&gt;
&lt;p&gt;ESP8266_RTOS_SDK supports compiling multiple files in parallel, so all of the above commands can be run as &lt;code&gt;make -jN&lt;/code&gt; where &lt;code&gt;N&lt;/code&gt; is the number of parallel make processes to run (generally N should be equal to or one more than the number of CPU cores in your system.)&lt;/p&gt;
&lt;p&gt;Multiple make functions can be combined into one. For example: to build the app &amp;amp; bootloader using 5 jobs in parallel, then flash everything, and then display serial output from the ESP32 run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make -j5 app-flash monitor
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-erasing-flash" class="anchor" aria-hidden="true" href="#erasing-flash"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Erasing Flash&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;make flash&lt;/code&gt; target does not erase the entire flash contents. However it is sometimes useful to set the device back to a totally erased state. To erase the entire flash, run &lt;code&gt;make erase_flash&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This can be combined with other targets, ie &lt;code&gt;make erase_flash flash&lt;/code&gt; will erase everything and then re-flash the new app, bootloader and init data bin.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-updating-esp8266_rtos_sdk" class="anchor" aria-hidden="true" href="#updating-esp8266_rtos_sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Updating ESP8266_RTOS_SDK&lt;/h2&gt;
&lt;p&gt;After some time of using ESP8266_RTOS_SDK-IDF, you may want to update it to take advantage of new features or bug fixes. The simplest way to do so is by deleting existing &lt;code&gt;ESP8266_RTOS_SDK&lt;/code&gt; folder and cloning it again.&lt;/p&gt;
&lt;p&gt;Another solution is to update only what has changed. This method is useful if you have a slow connection to GitHub. To do the update run the following commands::&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~/esp/ESP8266_RTOS_SDK
git pull
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;git pull&lt;/code&gt; command is fetching and merging changes from ESP8266_RTOS_SDK repository on GitHub.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>espressif</author><guid isPermaLink="false">https://github.com/espressif/ESP8266_RTOS_SDK</guid><pubDate>Sun, 10 Nov 2019 00:14:00 GMT</pubDate></item><item><title>robertdavidgraham/masscan #15 in C, This week</title><link>https://github.com/robertdavidgraham/masscan</link><description>&lt;p&gt;&lt;i&gt;TCP port scanner, spews SYN packets asynchronously, scanning entire Internet in under 5 minutes.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/robertdavidgraham/masscan.svg" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8bc4e9187fc331ef3f2de95bc8e43f92db64e448/68747470733a2f2f7472617669732d63692e6f72672f726f62657274646176696467726168616d2f6d61737363616e2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/robertdavidgraham/masscan.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-masscan-mass-ip-port-scanner" class="anchor" aria-hidden="true" href="#masscan-mass-ip-port-scanner"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MASSCAN: Mass IP port scanner&lt;/h1&gt;
&lt;p&gt;This is an Internet-scale port scanner. It can scan the entire Internet
in under 6 minutes, transmitting 10 million packets per second,
from a single machine.&lt;/p&gt;
&lt;p&gt;It's input/output is similar to &lt;code&gt;nmap&lt;/code&gt;, the most famous port scanner.
When in doubt, try one of those features.&lt;/p&gt;
&lt;p&gt;Internally, it uses asynchronous tranmissions, similar to port scanners
like  &lt;code&gt;scanrand&lt;/code&gt;, &lt;code&gt;unicornscan&lt;/code&gt;, and &lt;code&gt;ZMap&lt;/code&gt;. It's more flexible, allowing
arbitrary port and address ranges.&lt;/p&gt;
&lt;p&gt;NOTE: masscan uses a its own &lt;strong&gt;custom TCP/IP stack&lt;/strong&gt;. Anything other than
simple port scans may cause conflict with the local TCP/IP stack. This means you
need to either the &lt;code&gt;--src-ip&lt;/code&gt; option to run from a different IP address, or
use &lt;code&gt;--src-port&lt;/code&gt; to configure which source ports masscan uses, then also
configure the internal firewall (like &lt;code&gt;pf&lt;/code&gt; or &lt;code&gt;iptables&lt;/code&gt;) to firewall those ports
from the rest of the operating system.&lt;/p&gt;
&lt;p&gt;This tool is free, but consider contributing money to its developement:
Bitcoin wallet address: 1MASSCANaHUiyTtR3bJ2sLGuMw5kDBaj4T&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h1&gt;
&lt;p&gt;On Debian/Ubuntu, it goes something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo apt-get install git gcc make libpcap-dev
$ git clone https://github.com/robertdavidgraham/masscan
$ cd masscan
$ make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This puts the program in the &lt;code&gt;masscan/bin&lt;/code&gt; subdirectory. You'll have to
manually copy it to something like &lt;code&gt;/usr/local/bin&lt;/code&gt; if you want to
install it elsewhere on the system.&lt;/p&gt;
&lt;p&gt;The source consists of a lot of small files, so building goes a lot faster
by using the multi-threaded build:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make -j
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;While Linux is the primary target platform, the code runs well on many other
systems. Here's some additional build info:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows w/ Visual Studio: use the VS10 project&lt;/li&gt;
&lt;li&gt;Windows w/ MingGW: just type &lt;code&gt;make&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Windows w/ cygwin: won't work&lt;/li&gt;
&lt;li&gt;Mac OS X /w XCode: use the XCode4 project&lt;/li&gt;
&lt;li&gt;Mac OS X /w cmdline: just type &lt;code&gt;make&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;FreeBSD: type &lt;code&gt;gmake&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;other: try just compiling all the files together&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-pf_ring" class="anchor" aria-hidden="true" href="#pf_ring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PF_RING&lt;/h2&gt;
&lt;p&gt;To get beyond 2 million packets/second, you need an Intel 10-gbps Ethernet
adapter and a special driver known as &lt;a href="http://www.ntop.org/products/packet-capture/pf_ring/pf_ring-zc-zero-copy/" rel="nofollow"&gt;"PF_RING ZC" from ntop&lt;/a&gt;. Masscan doesn't need to be rebuilt in order to use PF_RING. To use PF_RING,
you need to build the following components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;libpfring.so&lt;/code&gt; (installed in /usr/lib/libpfring.so)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pf_ring.ko&lt;/code&gt; (their kernel driver)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ixgbe.ko&lt;/code&gt; (their version of the Intel 10-gbps Ethernet driver)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You don't need to build their version of &lt;code&gt;libpcap.so&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When Masscan detects that an adapter is named something like &lt;code&gt;zc:enp1s0&lt;/code&gt; instead
of something like &lt;code&gt;enp1s0&lt;/code&gt;, it'll automatically switch to PF_RING ZC mode.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-regression-testing" class="anchor" aria-hidden="true" href="#regression-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Regression testing&lt;/h2&gt;
&lt;p&gt;The project contains a built-in self-test:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make regress
bin/masscan --regress
selftest: success!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This tests a lot of tricky bits of the code. You should do this after building.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-performance-testing" class="anchor" aria-hidden="true" href="#performance-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance testing&lt;/h2&gt;
&lt;p&gt;To test performance, run something like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ bin/masscan 0.0.0.0/4 -p80 --rate 100000000 --router-mac 66-55-44-33-22-11
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The bogus &lt;code&gt;--router-mac&lt;/code&gt; keeps packets on the local network segments so that
they won't go out to the Internet.&lt;/p&gt;
&lt;p&gt;You can also test in "offline" mode, which is how fast the program runs
without the transmit overhead:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ bin/masscan 0.0.0.0/4 -p80 --rate 100000000 --offline
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This second benchmark shows roughly how fast the program would run if it were
using PF_RING, which has near zero overhead.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h1&gt;
&lt;p&gt;Usage is similar to &lt;code&gt;nmap&lt;/code&gt;. To scan a network segment for some ports:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan -p80,8000-8100 10.0.0.0/8
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scan the 10.x.x.x subnet, all 16 million addresses&lt;/li&gt;
&lt;li&gt;scans port 80 and the range 8000 to 8100, or 102 addresses total&lt;/li&gt;
&lt;li&gt;print output to &lt;code&gt;&amp;lt;stdout&amp;gt;&lt;/code&gt; that can be redirected to a file&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To see the complete list of options, use the &lt;code&gt;--echo&lt;/code&gt; feature. This
dumps the current configuration and exits. This output can be used as input back
into the program:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan -p80,8000-8100 10.0.0.0/8 --echo &amp;gt; xxx.conf
# masscan -c xxx.conf --rate 1000
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-banner-checking" class="anchor" aria-hidden="true" href="#banner-checking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Banner checking&lt;/h2&gt;
&lt;p&gt;Masscan can do more than just detect whether ports are open. It can also
complete the TCP connection and interaction with the application at that
port in order to grab simple "banner" information.&lt;/p&gt;
&lt;p&gt;The problem with this is that masscan contains its own TCP/IP stack
separate from the system you run it on. When the local system receives
a SYN-ACK from the probed target, it responds with a RST packet that kills
the connection before masscan can grab the banner.&lt;/p&gt;
&lt;p&gt;The easiest way to prevent this is to assign masscan a separate IP
address. This would look like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan 10.0.0.0/8 -p80 --banners --source-ip 192.168.1.200
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The address you choose has to be on the local subnet and not otherwise
be used by another system.&lt;/p&gt;
&lt;p&gt;In some cases, such as WiFi, this isn't possible. In those cases, you can
firewall the port that masscan uses. This prevents the local TCP/IP stack
from seeing the packet, but masscan still sees it since it bypasses the
local stack. For Linux, this would look like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# iptables -A INPUT -p tcp --dport 61000 -j DROP
# masscan 10.0.0.0/8 -p80 --banners --source-port 61000
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You probably want to pick ports that don't conflict with ports Linux might otherwise
choose for source-ports. You can see the range Linux uses, and reconfigure
that range, by looking in the file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/proc/sys/net/ipv4/ip_local_port_range
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On the latest version of Kali Linux (2018-August), that range is  32768  to  60999, so
you should choose ports either below 32768 or 61000 and above.&lt;/p&gt;
&lt;p&gt;Setting an &lt;code&gt;iptables&lt;/code&gt; rule only lasts until the next reboot. You need to lookup how to
save the configuration depending upon your distro, such as using &lt;code&gt;iptables-save&lt;/code&gt;
and/or &lt;code&gt;iptables-persistant&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On Mac OS X and BSD, there are similar steps. To find out the ranges to avoid,
use a command like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# sysctl net.inet.ip.portrange.first net.inet.ip.portrange.last
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On FreeBSD and older MacOS, use an &lt;code&gt;ipfw&lt;/code&gt; command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# sudo ipfw add 1 deny tcp from any to any 40000 in
# masscan 10.0.0.0/8 -p80 --banners --source-port 40000
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On newer MacOS and OpenBSD, use the &lt;code&gt;pf&lt;/code&gt; packet-filter utility.
Edit the file &lt;code&gt;/etc/pf.conf&lt;/code&gt; to add a line like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;block in proto tcp from any to any port 40000
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then to enable the firewall, run the command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# pfctrl -E    
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the firewall is already running, then either reboot or reload the rules
with the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# pfctl -f /etc/pf.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Windows doesn't respond with RST packets, so neither of these techniques
are necessary. However, masscan is still designed to work best using its
own IP address, so you should run that way when possible, even when its
not strictly necessary.&lt;/p&gt;
&lt;p&gt;The same thing is needed for other checks, such as the &lt;code&gt;--heartbleed&lt;/code&gt; check,
which is just a form of banner checking.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-scan-the-entire-internet" class="anchor" aria-hidden="true" href="#how-to-scan-the-entire-internet"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to scan the entire Internet&lt;/h2&gt;
&lt;p&gt;While useful for smaller, internal networks, the program is really designed
with the entire Internet in mind. It might look something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan 0.0.0.0/0 -p0-65535
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Scanning the entire Internet is bad. For one thing, parts of the Internet react
badly to being scanned. For another thing, some sites track scans and add you
to a ban list, which will get you firewalled from useful parts of the Internet.
Therefore, you want to exclude a lot of ranges. To blacklist or exclude ranges,
you want to use the following syntax:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan 0.0.0.0/0 -p0-65535 --excludefile exclude.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This just prints the results to the command-line. You probably want them
saved to a file instead. Therefore, you want something like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan 0.0.0.0/0 -p0-65535 -oX scan.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This saves the results in an XML file, allowing you to easily dump the
results in a database or something.&lt;/p&gt;
&lt;p&gt;But, this only goes at the default rate of 100 packets/second, which will
take forever to scan the Internet. You need to speed it up as so:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan 0.0.0.0/0 -p0-65535 --max-rate 100000
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This increases the rate to 100,000 packets/second, which will scan the
entire Internet (minus excludes) in about 10 hours per port (or 655,360 hours
if scanning all ports).&lt;/p&gt;
&lt;p&gt;The thing to notice about this command-line is that these are all &lt;code&gt;nmap&lt;/code&gt;
compatible options. In addition, "invisible" options compatible with &lt;code&gt;nmap&lt;/code&gt;
are also set for you: &lt;code&gt;-sS -Pn -n --randomize-hosts --send-eth&lt;/code&gt;. Likewise,
the format of the XML file is inspired by &lt;code&gt;nmap&lt;/code&gt;. There are, of course, a
lot of differences, because the &lt;em&gt;asynchronous&lt;/em&gt; nature of the program
leads to a fundamentally different approach to the problem.&lt;/p&gt;
&lt;p&gt;The above command-line is a bit cumbersome. Instead of putting everything
on the command-line, it can be stored in a file instead. The above settings
would look like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# My Scan
rate =  100000.00
output-format = xml
output-status = all
output-filename = scan.xml
ports = 0-65535
range = 0.0.0.0-255.255.255.255
excludefile = exclude.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To use this configuration file, use the &lt;code&gt;-c&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan -c myscan.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This also makes things easier when you repeat a scan.&lt;/p&gt;
&lt;p&gt;By default, masscan first loads the configuration file
&lt;code&gt;/etc/masscan/masscan.conf&lt;/code&gt;. Any later configuration parameters override what's
in this default configuration file. That's where I put my "excludefile"
parameter, so that I don't ever forget it. It just works automatically.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-output" class="anchor" aria-hidden="true" href="#getting-output"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting output&lt;/h2&gt;
&lt;p&gt;By default, masscan produces fairly large text files, but it's easy
to convert them into any other format. There are five supported output formats:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;xml:  Just use the parameter &lt;code&gt;-oX &amp;lt;filename&amp;gt;&lt;/code&gt;.
Or, use the parameters &lt;code&gt;--output-format xml&lt;/code&gt; and &lt;code&gt;--output-filename &amp;lt;filename&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;binary: This is the masscan builtin format. It produces much smaller files, so that
when I scan the Internet my disk doesn't fill up. They need to be parsed,
though. The command line option &lt;code&gt;--readscan&lt;/code&gt; will read binary scan files.
Using &lt;code&gt;--readscan&lt;/code&gt; with the &lt;code&gt;-oX&lt;/code&gt; option will produce a XML version of the
results file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;grepable: This is an implementation of the Nmap -oG
output that can be easily parsed by command-line tools. Just use the
parameter &lt;code&gt;-oG &amp;lt;filename&amp;gt;&lt;/code&gt;. Or, use the parameters &lt;code&gt;--output-format grepable&lt;/code&gt; and
&lt;code&gt;--output-filename &amp;lt;filename&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;json: This saves the results in JSON format. Just use the
parameter &lt;code&gt;-oJ &amp;lt;filename&amp;gt;&lt;/code&gt;. Or, use the parameters &lt;code&gt;--output-format json&lt;/code&gt; and
&lt;code&gt;--output-filename &amp;lt;filename&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;list: This is a simple list with one host and port pair
per line. Just use the parameter &lt;code&gt;-oL &amp;lt;filename&amp;gt;&lt;/code&gt;. Or, use the parameters
&lt;code&gt;--output-format list&lt;/code&gt; and &lt;code&gt;--output-filename &amp;lt;filename&amp;gt;&lt;/code&gt;. The format is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;port state&amp;gt; &amp;lt;protocol&amp;gt; &amp;lt;port number&amp;gt; &amp;lt;IP address&amp;gt; &amp;lt;POSIX timestamp&amp;gt;  
open tcp 80 XXX.XXX.XXX.XXX 1390380064
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-comparison-with-nmap" class="anchor" aria-hidden="true" href="#comparison-with-nmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Comparison with Nmap&lt;/h2&gt;
&lt;p&gt;Where reasonable, every effort has been taken to make the program familiar
to &lt;code&gt;nmap&lt;/code&gt; users, even though it's fundamentally different. Two important
differences are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;no default ports to scan, you must specify &lt;code&gt;-p &amp;lt;ports&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;target hosts are IP addresses or simple ranges, not DNS names, nor
the funky subnet ranges &lt;code&gt;nmap&lt;/code&gt; can use (like &lt;code&gt;10.0.0-255.0-255&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can think of &lt;code&gt;masscan&lt;/code&gt; as having the following settings permanently
enabled:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-sS&lt;/code&gt;: this does SYN scan only (currently, will change in the future)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-Pn&lt;/code&gt;: doesn't ping hosts first, which is fundamental to the async operation&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: no DNS resolution happens&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--randomize-hosts&lt;/code&gt;: scan completely randomized&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--send-eth&lt;/code&gt;: sends using raw &lt;code&gt;libpcap&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want a list of additional &lt;code&gt;nmap&lt;/code&gt; compatible settings, use the following
command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan --nmap
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-transmit-rate-important" class="anchor" aria-hidden="true" href="#transmit-rate-important"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transmit rate (IMPORTANT!!)&lt;/h2&gt;
&lt;p&gt;This program spews out packets very fast. On Windows, or from VMs,
it can do 300,000 packets/second. On Linux (no virtualization) it'll
do 1.6 million packets-per-second. That's fast enough to melt most networks.&lt;/p&gt;
&lt;p&gt;Note that it'll only melt your own network. It randomizes the target
IP addresses so that it shouldn't overwhelm any distant network.&lt;/p&gt;
&lt;p&gt;By default, the rate is set to 100 packets/second. To increase the rate to
a million use something like &lt;code&gt;--rate 1000000&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-design" class="anchor" aria-hidden="true" href="#design"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design&lt;/h1&gt;
&lt;p&gt;This section describes the major design issues of the program.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-code-layout" class="anchor" aria-hidden="true" href="#code-layout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Layout&lt;/h2&gt;
&lt;p&gt;The file &lt;code&gt;main.c&lt;/code&gt; contains the &lt;code&gt;main()&lt;/code&gt; function, as you'd expect. It also
contains the &lt;code&gt;transmit_thread()&lt;/code&gt; and &lt;code&gt;receive_thread()&lt;/code&gt; functions. These
functions have been deliberately flattened and heavily commented so that you
can read the design of the program simply by stepping line-by-line through
each of these.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-asynchronous" class="anchor" aria-hidden="true" href="#asynchronous"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Asynchronous&lt;/h2&gt;
&lt;p&gt;This is an &lt;em&gt;asynchronous&lt;/em&gt; design. In other words, it is to &lt;code&gt;nmap&lt;/code&gt; what
the &lt;code&gt;nginx&lt;/code&gt; web-server is to &lt;code&gt;Apache&lt;/code&gt;. It has separate transmit and receive
threads that are largely independent from each other. It's the same sort of
design found in &lt;code&gt;scanrand&lt;/code&gt;, &lt;code&gt;unicornscan&lt;/code&gt;, and &lt;code&gt;ZMap&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Because it's asynchronous, it runs as fast as the underlying packet transmit
allows.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-randomization" class="anchor" aria-hidden="true" href="#randomization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Randomization&lt;/h2&gt;
&lt;p&gt;A key difference between Masscan and other scanners is the way it randomizes
targets.&lt;/p&gt;
&lt;p&gt;The fundamental principle is to have a single index variable that starts at
zero and is incremented by one for every probe. In C code, this is expressed
as:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;for (i = 0; i &amp;lt; range; i++) {
    scan(i);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We have to translate the index into an IP address. Let's say that you want to
scan all "private" IP addresses. That would be the table of ranges like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;192.168.0.0/16
10.0.0.0/8
172.16.0.0/12
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example, the first 64k indexes are appended to 192.168.x.x to form
the target address. Then, the next 16-million are appended to 10.x.x.x.
The remaining indexes in the range are applied to 172.16.x.x.&lt;/p&gt;
&lt;p&gt;In this example, we only have three ranges. When scanning the entire Internet,
we have in practice more than 100 ranges. That's because you have to blacklist
or exclude a lot of sub-ranges. This chops up the desired range into hundreds
of smaller ranges.&lt;/p&gt;
&lt;p&gt;This leads to one of the slowest parts of the code. We transmit 10 million
packets per second, and have to convert an index variable to an IP address
for each and every probe. We solve this by doing a "binary search" in a small
amount of memory. At this packet rate, cache efficiencies start to dominate
over algorithm efficiencies. There are a lot of more efficient techniques in
theory, but they all require so much memory as to be slower in practice.&lt;/p&gt;
&lt;p&gt;We call the function that translates from an index into an IP address
the &lt;code&gt;pick()&lt;/code&gt; function. In use, it looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;for (i = 0; i &amp;lt; range; i++) {
    ip = pick(addresses, i);
    scan(ip);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Masscan supports not only IP address ranges, but also port ranges. This means
we need to pick from the index variable both an IP address and a port. This
is fairly straightforward:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;range = ip_count * port_count;
for (i = 0; i &amp;lt; range; i++) {
    ip   = pick(addresses, i / port_count);
    port = pick(ports,     i % port_count);
    scan(ip, port);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This leads to another expensive part of the code. The division/modulus
instructions are around 90 clock cycles, or 30 nanoseconds, on x86 CPUs. When
transmitting at a rate of 10 million packets/second, we have only
100 nanoseconds per packet. I see no way to optimize this any better. Luckily,
though, two such operations can be executed simultaneously, so doing two
of these as shown above is no more expensive than doing one.&lt;/p&gt;
&lt;p&gt;There are actually some easy optimizations for the above performance problems,
but they all rely upon &lt;code&gt;i++&lt;/code&gt;, the fact that the index variable increases one
by one through the scan. Actually, we need to randomize this variable. We
need to randomize the order of IP addresses that we scan or we'll blast the
heck out of target networks that aren't built for this level of speed. We
need to spread our traffic evenly over the target.&lt;/p&gt;
&lt;p&gt;The way we randomize is simply by encrypting the index variable. By definition,
encryption is random, and creates a 1-to-1 mapping between the original index
variable and the output. This means that while we linearly go through the
range, the output IP addresses are completely random. In code, this looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;range = ip_count * port_count;
for (i = 0; i &amp;lt; range; i++) {
    x = encrypt(i);
    ip   = pick(addresses, x / port_count);
    port = pick(ports,     x % port_count);
    scan(ip, port);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This also has a major cost. Since the range is an unpredictable size instead
of a nice even power of 2, we can't use cheap binary techniques like
AND (&amp;amp;) and XOR (^). Instead, we have to use expensive operations like
MODULUS (%). In my current benchmarks, it's taking 40 nanoseconds to
encrypt the variable.&lt;/p&gt;
&lt;p&gt;This architecture allows for lots of cool features. For example, it supports
"shards". You can setup 5 machines each doing a fifth of the scan, or
&lt;code&gt;range / shard_count&lt;/code&gt;. Shards can be multiple machines, or simply multiple
network adapters on the same machine, or even (if you want) multiple IP
source addresses on the same network adapter.&lt;/p&gt;
&lt;p&gt;Or, you can use a 'seed' or 'key' to the encryption function, so that you get
a different order each time you scan, like &lt;code&gt;x = encrypt(seed, i)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We can also pause the scan by exiting out of the program, and simply
remembering the current value of &lt;code&gt;i&lt;/code&gt;, and restart it later. I do that a lot
during development. I see something going wrong with my Internet scan, so
I hit  to stop the scan, then restart it after I've fixed the bug.&lt;/p&gt;
&lt;p&gt;Another feature is retransmits/retries. Packets sometimes get dropped on the
Internet, so you can send two packets back-to-back. However, something that
drops one packet may drop the immediately following packet. Therefore, you
want to send the copy about 1 second apart. This is simple. We already have
a 'rate' variable, which is the number of packets-per-second rate we are
transmitting at, so the retransmit function is simply to use &lt;code&gt;i + rate&lt;/code&gt;
as the index. One of these days I'm going to do a study of the Internet,
and differentiate "back-to-back", "1 second", "10 second", and "1 minute"
retransmits this way in order to see if there is any difference in what
gets dropped.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-c10-scalability" class="anchor" aria-hidden="true" href="#c10-scalability"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;C10 Scalability&lt;/h2&gt;
&lt;p&gt;The asynchronous technique is known as a solution to the "c10k problem".
Masscan is designed for the next level of scalability, the "C10M problem".&lt;/p&gt;
&lt;p&gt;The C10M solution is to bypass the kernel. There are three primary kernel
bypasses in Masscan:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;custom network driver&lt;/li&gt;
&lt;li&gt;user-mode TCP stack&lt;/li&gt;
&lt;li&gt;user-mode synchronization&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Masscan can use the PF_RING DNA driver. This driver DMAs packets directly
from user-mode memory to the network driver with zero kernel involvement.
That allows software, even with a slow CPU, to transmit packets at the maximum
rate the hardware allows. If you put 8 10-gbps network cards in a computer,
this means it could transmit at 100-million packets/second.&lt;/p&gt;
&lt;p&gt;Masscan has its own built-in TCP stack for grabbing banners from TCP
connections. This means it can easily support 10 million concurrent TCP
connections, assuming of course that the computer has enough memory.&lt;/p&gt;
&lt;p&gt;Masscan has no "mutex". Modern mutexes (aka. futexes) are mostly user-mode,
but they have two problems. The first problem is that they cause cache-lines
to bounce quickly back-and-forth between CPUs. The second is that when there
is contention, they'll do a system call into the kernel, which kills
performance. Mutexes on the fast path of a program severely limits scalability.
Instead, Masscan uses "rings" to synchronize things, such as when the
user-mode TCP stack in the receive thread needs to transmit a packet without
interfering with the transmit thread.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-portability" class="anchor" aria-hidden="true" href="#portability"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Portability&lt;/h2&gt;
&lt;p&gt;The code runs well on Linux, Windows, and Mac OS X. All the important bits are
in standard C (C90). It therefore compiles on Visual Studio with Microsoft's
compiler, the Clang/LLVM compiler on Mac OS X, and GCC on Linux.&lt;/p&gt;
&lt;p&gt;Windows and Macs aren't tuned for packet transmit, and get only about 300,000
packets-per-second, whereas Linux can do 1,500,000 packets/second. That's
probably faster than you want anyway.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-safe-code" class="anchor" aria-hidden="true" href="#safe-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Safe code&lt;/h2&gt;
&lt;p&gt;A bounty is offered for vulnerabilities, see the VULNINFO.md file for more
information.&lt;/p&gt;
&lt;p&gt;This project uses safe functions like &lt;code&gt;strcpy_s()&lt;/code&gt; instead of unsafe functions
like &lt;code&gt;strcpy()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This project has automated unit regression tests (&lt;code&gt;make regress&lt;/code&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compatibility" class="anchor" aria-hidden="true" href="#compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compatibility&lt;/h2&gt;
&lt;p&gt;A lot of effort has gone into making the input/output look like &lt;code&gt;nmap&lt;/code&gt;, which
everyone who does port scans is (or should be) familiar with.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-authors" class="anchor" aria-hidden="true" href="#authors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authors&lt;/h1&gt;
&lt;p&gt;This tool created by Robert Graham:
email: &lt;a href="mailto:robert_david_graham@yahoo.com"&gt;robert_david_graham@yahoo.com&lt;/a&gt;
twitter: @ErrataRob&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>robertdavidgraham</author><guid isPermaLink="false">https://github.com/robertdavidgraham/masscan</guid><pubDate>Sun, 10 Nov 2019 00:15:00 GMT</pubDate></item><item><title>libretro/RetroArch #16 in C, This week</title><link>https://github.com/libretro/RetroArch</link><description>&lt;p&gt;&lt;i&gt;Cross-platform, sophisticated frontend for the libretro API. Licensed GPLv3.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/libretro/RetroArch" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6bdae2ad579a27e2928a006f685f6cb73861c7da/68747470733a2f2f7472617669732d63692e6f72672f6c6962726574726f2f526574726f417263682e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/libretro/RetroArch.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://scan.coverity.com/projects/retroarch" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3060b2ca558a553cfc7d667534f9107ac3a384cf/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f383933362f62616467652e737667" alt="Coverity Scan Build Status" data-canonical-src="https://scan.coverity.com/projects/8936/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-retroarch" class="anchor" aria-hidden="true" href="#retroarch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RetroArch&lt;/h1&gt;
&lt;p&gt;RetroArch is the reference frontend for the libretro API.
Popular examples of implementations for this API includes video game system emulators and game engines as well as
more generalized 3D programs.
These programs are instantiated as dynamic libraries. We refer to these as "libretro cores".&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/aa76b4e604ec30630baad56a52d07e7b1d27af40/687474703a2f2f692e696d6775722e636f6d2f424d52317878722e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/aa76b4e604ec30630baad56a52d07e7b1d27af40/687474703a2f2f692e696d6775722e636f6d2f424d52317878722e706e67" alt="XMB menu driver" title="XMB menu driver" data-canonical-src="http://i.imgur.com/BMR1xxr.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d2a3119fb0d6698aa1203428c2661e27311f4ecc/687474703a2f2f692e696d6775722e636f6d2f58334362424b612e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/d2a3119fb0d6698aa1203428c2661e27311f4ecc/687474703a2f2f692e696d6775722e636f6d2f58334362424b612e706e67" alt="rgui menu driver" title="rgui menu driver" data-canonical-src="http://i.imgur.com/X3CbBKa.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/187549afc1a33ac05d3007a49893d751e0b4a22f/687474703a2f2f692e696d6775722e636f6d2f6f6f71763872772e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/187549afc1a33ac05d3007a49893d751e0b4a22f/687474703a2f2f692e696d6775722e636f6d2f6f6f71763872772e706e67" alt="glui menu driver" title="glui menu driver" data-canonical-src="http://i.imgur.com/ooqv8rw.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-libretro" class="anchor" aria-hidden="true" href="#libretro"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;libretro&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://libretro.com" rel="nofollow"&gt;libretro&lt;/a&gt; is an API that exposes generic audio/video/input callbacks.
A frontend for libretro (such as RetroArch) handles video output, audio output, input and application lifecycle.
A libretro core written in portable C or C++ can run seamlessly on many platforms with very little to no porting effort.&lt;/p&gt;
&lt;p&gt;While RetroArch is the reference frontend for libretro, several other projects have used the libretro
interface to include support for emulators and/or game engines. libretro is completely open and free for anyone to use.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/libretro/RetroArch/blob/master/libretro-common/include/libretro.h"&gt;libretro API header&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-binaries" class="anchor" aria-hidden="true" href="#binaries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Binaries&lt;/h2&gt;
&lt;p&gt;Latest binaries are currently hosted on the &lt;a href="http://buildbot.libretro.com/" rel="nofollow"&gt;buildbot&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h2&gt;
&lt;p&gt;To reach developers, either make an issue here on GitHub, make a thread on the &lt;a href="http://www.libretro.com/forums/" rel="nofollow"&gt;forum&lt;/a&gt;, chat on &lt;a href="https://discord.gg/C4amCeV" rel="nofollow"&gt;discord&lt;/a&gt;, or visit our IRC channel: #retroarch @ irc.freenode.org.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;See our &lt;a href="https://docs.libretro.com/" rel="nofollow"&gt;Documentation Center&lt;/a&gt;. On Unix, man-pages are provided.
More developer-centric stuff is found &lt;a href="https://github.com/libretro/libretro.github.com/wiki/Documentation-devs"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-related-projects" class="anchor" aria-hidden="true" href="#related-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related projects&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Cg/HLSL shaders: &lt;a href="https://github.com/libretro/common-shaders"&gt;common-shaders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;slang shaders: &lt;a href="https://github.com/libretro/slang-shaders"&gt;slang-shaders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GLSL shaders: &lt;a href="https://github.com/libretro/glsl-shaders"&gt;glsl-shaders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Helper scripts to build libretro implementations: &lt;a href="https://github.com/libretro/libretro-super"&gt;libretro-super&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GitHub mirrors of projects, useful for generating diff files: &lt;a href="https://github.com/libretro-mirrors/"&gt;libretro-mirrors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-philosophy" class="anchor" aria-hidden="true" href="#philosophy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Philosophy&lt;/h2&gt;
&lt;p&gt;RetroArch attempts to be small and lean
while still having all the useful core features expected from an emulator.
It is designed to be very portable and features a gamepad-centric and touchscreen UI.
It also has a full-featured command-line interface.&lt;/p&gt;
&lt;p&gt;In some areas, RetroArch goes beyond and emphasizes on not-so-common technical features such as multi-pass shader support,
real-time rewind (Braid-style), video recording (using FFmpeg), run-ahead input latency removal, etc.&lt;/p&gt;
&lt;p&gt;RetroArch also emphasizes being easy to integrate into various launcher frontends.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-platforms" class="anchor" aria-hidden="true" href="#platforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Platforms&lt;/h2&gt;
&lt;p&gt;RetroArch has been ported to the following platforms:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DOS&lt;/li&gt;
&lt;li&gt;Windows&lt;/li&gt;
&lt;li&gt;Linux&lt;/li&gt;
&lt;li&gt;Emscripten (WebAssembly and JavaScript)&lt;/li&gt;
&lt;li&gt;FreeBSD&lt;/li&gt;
&lt;li&gt;NetBSD&lt;/li&gt;
&lt;li&gt;OpenBSD&lt;/li&gt;
&lt;li&gt;Haiku&lt;/li&gt;
&lt;li&gt;Solaris&lt;/li&gt;
&lt;li&gt;macOS (PPC, x86-32 and x86-64)&lt;/li&gt;
&lt;li&gt;PlayStation 3&lt;/li&gt;
&lt;li&gt;PlayStation Portable&lt;/li&gt;
&lt;li&gt;PlayStation Vita&lt;/li&gt;
&lt;li&gt;Original Microsoft Xbox&lt;/li&gt;
&lt;li&gt;Microsoft Xbox 360 (Libxenon/XeXDK)&lt;/li&gt;
&lt;li&gt;Nintendo GameCube&lt;/li&gt;
&lt;li&gt;Nintendo Wii&lt;/li&gt;
&lt;li&gt;Nintendo Wii U&lt;/li&gt;
&lt;li&gt;Nintendo 3DS&lt;/li&gt;
&lt;li&gt;Nintendo Switch&lt;/li&gt;
&lt;li&gt;Nintendo NES/SNES Classic Edition&lt;/li&gt;
&lt;li&gt;Raspberry Pi&lt;/li&gt;
&lt;li&gt;Android&lt;/li&gt;
&lt;li&gt;iOS&lt;/li&gt;
&lt;li&gt;Blackberry&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-dependencies-pc" class="anchor" aria-hidden="true" href="#dependencies-pc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies (PC)&lt;/h2&gt;
&lt;p&gt;There are no true hard dependencies per se.&lt;/p&gt;
&lt;p&gt;On Windows, RetroArch can run with only Win32 as dependency.&lt;/p&gt;
&lt;p&gt;On Linux, there are no true dependencies. For optimal usage, the
following dependencies come as recommended:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GL headers / Vulkan headers&lt;/li&gt;
&lt;li&gt;X11 headers and libs, or EGL/KMS/GBM&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;OSX port of RetroArch requires latest versions of XCode to build.&lt;/p&gt;
&lt;p&gt;RetroArch can utilize these libraries if enabled:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nvidia-cg-toolkit&lt;/li&gt;
&lt;li&gt;libfreetype2 (TTF font rendering on screen)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;RetroArch needs at least one of these audio driver libraries:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ALSA&lt;/li&gt;
&lt;li&gt;OSS&lt;/li&gt;
&lt;li&gt;RoarAudio&lt;/li&gt;
&lt;li&gt;RSound&lt;/li&gt;
&lt;li&gt;OpenAL&lt;/li&gt;
&lt;li&gt;JACK&lt;/li&gt;
&lt;li&gt;SDL&lt;/li&gt;
&lt;li&gt;PulseAudio&lt;/li&gt;
&lt;li&gt;XAudio2 (Win32, Xbox 360)&lt;/li&gt;
&lt;li&gt;DirectSound (Win32, Xbox 1)&lt;/li&gt;
&lt;li&gt;CoreAudio (OSX, iOS)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To run properly, RetroArch requires a libretro implementation present; however, as it's typically loaded
dynamically, it's not required at build time.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dependencies-console-ports-mobile" class="anchor" aria-hidden="true" href="#dependencies-console-ports-mobile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies (Console ports, mobile)&lt;/h2&gt;
&lt;p&gt;Console ports have their own dependencies, but generally do not require
anything other than what the respective SDKs provide.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configuring" class="anchor" aria-hidden="true" href="#configuring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring&lt;/h2&gt;
&lt;p&gt;The default configuration is defined in &lt;code&gt;config.def.h&lt;/code&gt;.
It is not recommended to change this unless you know what you're doing.
These can later be tweaked by using a config file.
A sample configuration file is installed to &lt;code&gt;/etc/retroarch.cfg&lt;/code&gt;. This is the system-wide config file.&lt;/p&gt;
&lt;p&gt;RetroArch will on startup create a config file in &lt;code&gt;$XDG\_CONFIG\_HOME/retroarch/retroarch.cfg&lt;/code&gt; if it does not exist.
Users only need to configure a certain option if the desired value deviates from the value defined in config.def.h.&lt;/p&gt;
&lt;p&gt;To configure joypads, use the built-in menu or the &lt;code&gt;retroarch-joyconfig&lt;/code&gt; command-line tool.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling-and-installing" class="anchor" aria-hidden="true" href="#compiling-and-installing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling and installing&lt;/h2&gt;
&lt;p&gt;Instructions for compiling and installing RetroArch can be found in the &lt;a href="https://docs.libretro.com/" rel="nofollow"&gt;Libretro/RetroArch Documentation Center&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-crt-15khz-resolution-switching" class="anchor" aria-hidden="true" href="#crt-15khz-resolution-switching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CRT 15Khz Resolution Switching&lt;/h2&gt;
&lt;p&gt;CRT SwitchRes will turn on, on the fly. However, you will need to restart RetroArch to disable it. With CRT SwitchRes enable RetroArch will start in 2560 x 480 @ 60.&lt;/p&gt;
&lt;p&gt;If you are running Windows, before enabling the CRT SwitchRes options please make sure you have installed CRTEmudriver and installed some modelines. The minimum modelines for all games to switch correctly are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2560 x 192 @ 60.000000&lt;/li&gt;
&lt;li&gt;2560 x 200 @ 60.000000&lt;/li&gt;
&lt;li&gt;2560 x 240 @ 60.000000&lt;/li&gt;
&lt;li&gt;2560 x 224 @ 60.000000&lt;/li&gt;
&lt;li&gt;2560 x 237 @ 60.000000&lt;/li&gt;
&lt;li&gt;2560 x 256 @ 50.000000&lt;/li&gt;
&lt;li&gt;2560 x 254 @ 55.000000&lt;/li&gt;
&lt;li&gt;2560 x 448 @ 60.000000&lt;/li&gt;
&lt;li&gt;2560 x 480 @ 60.000000&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Install these modelines replacing 2560 with your desired super resolution. The above resolutions are NTSC only so if you would be playing any PAL content please add PAL modelines:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2560 x 192 @ 50.000000&lt;/li&gt;
&lt;li&gt;2560 x 200 @ 50.000000&lt;/li&gt;
&lt;li&gt;2560 x 240 @ 50.000000&lt;/li&gt;
&lt;li&gt;2560 x 224 @ 50.000000&lt;/li&gt;
&lt;li&gt;2560 x 288 @ 50.000000&lt;/li&gt;
&lt;li&gt;2560 x 237 @ 50.000000&lt;/li&gt;
&lt;li&gt;2560 x 254 @ 55.000000&lt;/li&gt;
&lt;li&gt;2560 x 448 @ 50.000000&lt;/li&gt;
&lt;li&gt;2560 x 480 @ 50.000000&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some games will require higher PAL resolutions which should also be installed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2560 x 512 @ 50.000000&lt;/li&gt;
&lt;li&gt;2560 x 576 @ 50.000000&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ideally install all these modelines and everything will work great.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-super-resolutions" class="anchor" aria-hidden="true" href="#super-resolutions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Super Resolutions&lt;/h2&gt;
&lt;p&gt;The default super resolution is 2560. It is displayed just under the CRT switch option, which can be found in video settings. This can be changed within the retroarch.cfg. The only compatible resolutions are 1920, 2560 and 3840. Any other resolutions will be ignored and native switching will be activated.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-native-resolutions" class="anchor" aria-hidden="true" href="#native-resolutions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Native Resolutions&lt;/h2&gt;
&lt;p&gt;If native resolutions are activated you will need a whole new set of modelines:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;256 x 240 @ 50.006977 SNESpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;256 x 448 @ 50.006977 SNESpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;512 x 224 @ 50.006977 SNESpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;512 x 240 @ 50.006977 SNESpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;512 x 448 @ 50.006977 SNESpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;256 x 240 @ 60.098812 SNESntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;256 x 448 @ 60.098812 SNESntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;512 x 240 @ 60.098812 SNESntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;512 x 224 @ 60.098812 SNESntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;512 x 448 @ 60.098812 SNESntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;256 x 192 @ 59.922745 MDntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;256 x 224 @ 59.922745 MDntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;320 x 224 @ 59.922745 MDntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;320 x 240 @ 59.922745 MDntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;320 x 448 @ 59.922745 MDntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;320 x 480 @ 59.922745 MDntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;256 x 192 @ 49.701458 MDpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;256 x 224 @ 49.701458 MDpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;320 x 224 @ 49.701458 MDpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;320 x 240 @ 49.701458 MDpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;320 x 288 @ 49.701458 MDpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;320 x 448 @ 49.701458 MDpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;320 x 480 @ 49.701458 MDpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;320 x 576 @ 49.701458 MDpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;256 x 288 @ 49.701458 MSYSpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;256 x 240 @ 60.098812 NESntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;256 x 240 @ 50.006977 NESpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;640 x 237 @ 60.130001 N64ntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;640 x 240 @ 60.130001 N64ntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;640 x 480 @ 60.130001 N64ntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;640 x 288 @ 50.000000 N64pal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;640 x 480 @ 50.000000 N64pal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;640 x 576 @ 50.000000 N64pal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;256 x 252 @ 49.759998 PSXpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;320 x 252 @ 49.759998 PSXpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;384 x 252 @ 49.759998 PSXpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;640 x 252 @ 49.759998 PSXpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;640 x 540 @ 49.759998 PSXpal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;384 x 240 @ 59.941002 PSXntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;256 x 480 @ 59.941002 PSXntsc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;352 x 240 @ 59.820000 Saturn/SGFX_NTSCp&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;704 x 240 @ 59.820000 SaturnNTSCp&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;352 x 480 @ 59.820000 SaturnNTSCi&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;704 x 480 @ 59.820000 SaturnNTSCi&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;352 x 288 @ 49.701458 SaturnPALp&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;704 x 288 @ 49.701458 SaturnPALp&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;352 x 576 @ 49.701458 SaturnPALi&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;704 x 576 @ 49.701458 SaturnPALi&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;240 x 160 @ 59.730000 GBA&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;320 x 200 @ 60.000000 Doom&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;// Arcade&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;400 x 254 @ 54.706841 MK&lt;/li&gt;
&lt;li&gt;384 x 224 @ 59.637405 CPS1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These modelines are more accurate giving exact hz. However, some games may have unwanted results. This is due to mid-scanline resolution changes on the original hardware. For the best results super resolutions are the way to go.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-crt-resolution-switching--mame" class="anchor" aria-hidden="true" href="#crt-resolution-switching--mame"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CRT resolution switching &amp;amp; MAME&lt;/h2&gt;
&lt;p&gt;Some arcade resolutions can be very different from consumer CRTs. There is resolution detection to ensure MAME games will be displayed in the closest available resolution but drawn at their native resolution within this resolution. Meaning that the MAME game will look just like the original hardware.&lt;/p&gt;
&lt;p&gt;MAME ROMs that run in a vertical aspect like DoDonPachi need to be rotated within MAME before resolution switching and aspect correction will work. Do this before enabling CRT SwitchRes so that RetroArch will run in your desktop resolution. Once you have rotated any games that may need it turn CRT SwitchRes on.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>libretro</author><guid isPermaLink="false">https://github.com/libretro/RetroArch</guid><pubDate>Sun, 10 Nov 2019 00:16:00 GMT</pubDate></item><item><title>signalwire/freeswitch #17 in C, This week</title><link>https://github.com/signalwire/freeswitch</link><description>&lt;p&gt;&lt;i&gt;FreeSWITCH is a Software Defined Telecom Stack enabling the digital transformation from proprietary telecom switches to a versatile software implementation that runs on any commodity hardware. From a Raspberry PI to a multi-core server, FreeSWITCH can unlock the telecommunications potential of any device.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-freeswitch" class="anchor" aria-hidden="true" href="#freeswitch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FreeSWITCH&lt;/h1&gt;
&lt;p&gt;FreeSWITCH is a Software Defined Telecom Stack enabling the digital transformation from proprietary telecom switches to a versatile software implementation that runs on any commodity hardware. From a Raspberry PI to a multi-core server, FreeSWITCH can unlock the telecommunications potential of any device. Combined with our hosted cloud platform, SignalWire, FreeSWITCH can interconnect with the outside world and scale to any size.&lt;/p&gt;
&lt;p&gt;Visit  &lt;a href="https://signalwire.com/" rel="nofollow"&gt;https://signalwire.com&lt;/a&gt;  or &lt;a href="https://github.com/signalwire"&gt;https://github.com/signalwire&lt;/a&gt; for more info.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;FreeSWITCH is available on &lt;a href="https://github.com/signalwire/freeswitch"&gt;Github&lt;/a&gt; in source code format.  You can checkout the development branch and build for many poplular platforms including Linux, Windows, MacOSX and BSD.  There is an issue tracker and pull request system available as part of the repo online.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://freeswitch.com/#getting-started" rel="nofollow"&gt;https://freeswitch.com/#getting-started&lt;/a&gt; for more detailed instructions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-additional-help" class="anchor" aria-hidden="true" href="#additional-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional Help&lt;/h2&gt;
&lt;p&gt;If you need assistance or have an interest in using a commercially supported build, you can contact &lt;a href="mailto:coreteam@freeswitch.com"&gt;coreteam@freeswitch.com&lt;/a&gt; to learn about professional services to support your project.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-voice-over-ip-services---sip--sms---app-integrations" class="anchor" aria-hidden="true" href="#voice-over-ip-services---sip--sms---app-integrations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Voice-over-IP services - SIP / SMS - App Integrations&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://signalwire.com" rel="nofollow"&gt;SignalWire&lt;/a&gt; is the primary sponsor of the FreeSWITCH project and was founded by the original developers of FreeSWITCH. SignalWire provides scalable services to enhance and scale your project such as SMS, SIP, Serverless Application hosting as well as programmable telecom. mod_signalwire which is distributed in this code base allows you to instantly pair with SignalWire and extend your FreeSWITCH.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;The main index for documentation is available at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://freeswitch.org/confluence/" rel="nofollow"&gt;https://freeswitch.org/confluence/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-release-notes" class="anchor" aria-hidden="true" href="#release-notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Release notes:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://freeswitch.org/confluence/display/FREESWITCH/Release+Notes" rel="nofollow"&gt;https://freeswitch.org/confluence/display/FREESWITCH/Release+Notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h3&gt;
&lt;p&gt;Step by step tutorials to install FreeSWITCH from packages or source code are available at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://freeswitch.org/confluence/display/FREESWITCH/Debian+10+Buster" rel="nofollow"&gt;Debian 10 Buster&lt;/a&gt; [&lt;b&gt;Recommended&lt;/b&gt;]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://freeswitch.org/confluence/display/FREESWITCH/Raspberry+Pi" rel="nofollow"&gt;Raspberry Pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://freeswitch.org/confluence/display/FREESWITCH/CentOS+7+and+RHEL+7" rel="nofollow"&gt;CentOS 7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-downloads" class="anchor" aria-hidden="true" href="#downloads"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Downloads&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://files.freeswitch.org/releases/freeswitch/" rel="nofollow"&gt;Tarballs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://files.freeswitch.org/windows/installer/x64/" rel="nofollow"&gt;Windows Installer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://files.freeswitch.org/windows/installer/x64/sounds/" rel="nofollow"&gt;Windows Sound Packages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributions" class="anchor" aria-hidden="true" href="#contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions&lt;/h2&gt;
&lt;p&gt;GitHub pull requests are the recommended way to contribute to the FreeSWITCH source code:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/signalwire/freeswitch/pulls"&gt;https://github.com/signalwire/freeswitch/pulls&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;p&gt;Slack is our chat system where the developers, the FreeSWITCH team, and the most active users are present.
This is the place to get answers faster and chat with other users in real time. All you need to do is enter your email and verify it on the Slack signup page and you are ready to join in the discussion!&lt;/p&gt;
&lt;p&gt;Slack Community:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://signalwire.community/" rel="nofollow"&gt;https://signalwire.community/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mailing list:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://lists.freeswitch.org/mailman/listinfo/freeswitch-users" rel="nofollow"&gt;http://lists.freeswitch.org/mailman/listinfo/freeswitch-users&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Thank you for using FreeSWITCH!&lt;/strong&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>signalwire</author><guid isPermaLink="false">https://github.com/signalwire/freeswitch</guid><pubDate>Sun, 10 Nov 2019 00:17:00 GMT</pubDate></item><item><title>twitter/twemproxy #18 in C, This week</title><link>https://github.com/twitter/twemproxy</link><description>&lt;p&gt;&lt;i&gt;A fast, light-weight proxy for memcached and redis&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-twemproxy-nutcracker-" class="anchor" aria-hidden="true" href="#twemproxy-nutcracker-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;twemproxy (nutcracker) &lt;a href="http://travis-ci.org/twitter/twemproxy" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/eff0a460e8db9805b15291f0f172dce93a9fb685/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f747769747465722f7477656d70726f78792e706e67" alt="Build Status" data-canonical-src="https://secure.travis-ci.org/twitter/twemproxy.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;twemproxy&lt;/strong&gt; (pronounced "two-em-proxy"), aka &lt;strong&gt;nutcracker&lt;/strong&gt; is a fast and lightweight proxy for &lt;a href="http://www.memcached.org/" rel="nofollow"&gt;memcached&lt;/a&gt; and &lt;a href="http://redis.io/" rel="nofollow"&gt;redis&lt;/a&gt; protocol. It was built primarily to reduce the number of connections to the caching servers on the backend. This, together with protocol pipelining and sharding enables you to horizontally scale your distributed caching architecture.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-build" class="anchor" aria-hidden="true" href="#build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build&lt;/h2&gt;
&lt;p&gt;To build twemproxy from &lt;a href="https://drive.google.com/open?id=0B6pVMMV5F5dfMUdJV25abllhUWM&amp;amp;authuser=0" rel="nofollow"&gt;distribution tarball&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./configure
$ make
$ sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To build twemproxy from &lt;a href="https://drive.google.com/open?id=0B6pVMMV5F5dfMUdJV25abllhUWM&amp;amp;authuser=0" rel="nofollow"&gt;distribution tarball&lt;/a&gt; in &lt;em&gt;debug mode&lt;/em&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ CFLAGS="-ggdb3 -O0" ./configure --enable-debug=full
$ make
$ sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To build twemproxy from source with &lt;em&gt;debug logs enabled&lt;/em&gt; and &lt;em&gt;assertions enabled&lt;/em&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone git@github.com:twitter/twemproxy.git
$ cd twemproxy
$ autoreconf -fvi
$ ./configure --enable-debug=full
$ make
$ src/nutcracker -h
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A quick checklist:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use newer version of gcc (older version of gcc has problems)&lt;/li&gt;
&lt;li&gt;Use CFLAGS="-O1" ./configure &amp;amp;&amp;amp; make&lt;/li&gt;
&lt;li&gt;Use CFLAGS="-O3 -fno-strict-aliasing" ./configure &amp;amp;&amp;amp; make&lt;/li&gt;
&lt;li&gt;&lt;code&gt;autoreconf -fvi &amp;amp;&amp;amp; ./configure&lt;/code&gt; needs &lt;code&gt;automake&lt;/code&gt; and &lt;code&gt;libtool&lt;/code&gt; to be installed&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Fast.&lt;/li&gt;
&lt;li&gt;Lightweight.&lt;/li&gt;
&lt;li&gt;Maintains persistent server connections.&lt;/li&gt;
&lt;li&gt;Keeps connection count on the backend caching servers low.&lt;/li&gt;
&lt;li&gt;Enables pipelining of requests and responses.&lt;/li&gt;
&lt;li&gt;Supports proxying to multiple servers.&lt;/li&gt;
&lt;li&gt;Supports multiple server pools simultaneously.&lt;/li&gt;
&lt;li&gt;Shard data automatically across multiple servers.&lt;/li&gt;
&lt;li&gt;Implements the complete &lt;a href="notes/memcache.md"&gt;memcached ascii&lt;/a&gt; and &lt;a href="notes/redis.md"&gt;redis&lt;/a&gt; protocol.&lt;/li&gt;
&lt;li&gt;Easy configuration of server pools through a YAML file.&lt;/li&gt;
&lt;li&gt;Supports multiple hashing modes including consistent hashing and distribution.&lt;/li&gt;
&lt;li&gt;Can be configured to disable nodes on failures.&lt;/li&gt;
&lt;li&gt;Observability via stats exposed on the stats monitoring port.&lt;/li&gt;
&lt;li&gt;Works with Linux, *BSD, OS X and SmartOS (Solaris)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-help" class="anchor" aria-hidden="true" href="#help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Usage: nutcracker [-?hVdDt] [-v verbosity level] [-o output file]
                  [-c conf file] [-s stats port] [-a stats addr]
                  [-i stats interval] [-p pid file] [-m mbuf size]

Options:
  -h, --help             : this help
  -V, --version          : show version and exit
  -t, --test-conf        : test configuration for syntax errors and exit
  -d, --daemonize        : run as a daemon
  -D, --describe-stats   : print stats description and exit
  -v, --verbose=N        : set logging level (default: 5, min: 0, max: 11)
  -o, --output=S         : set logging file (default: stderr)
  -c, --conf-file=S      : set configuration file (default: conf/nutcracker.yml)
  -s, --stats-port=N     : set stats monitoring port (default: 22222)
  -a, --stats-addr=S     : set stats monitoring ip (default: 0.0.0.0)
  -i, --stats-interval=N : set stats aggregation interval in msec (default: 30000 msec)
  -p, --pid-file=S       : set pid file (default: off)
  -m, --mbuf-size=N      : set size of mbuf chunk in bytes (default: 16384 bytes)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-zero-copy" class="anchor" aria-hidden="true" href="#zero-copy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Zero Copy&lt;/h2&gt;
&lt;p&gt;In twemproxy, all the memory for incoming requests and outgoing responses is allocated in mbuf. Mbuf enables zero-copy because the same buffer on which a request was received from the client is used for forwarding it to the server. Similarly the same mbuf on which a response was received from the server is used for forwarding it to the client.&lt;/p&gt;
&lt;p&gt;Furthermore, memory for mbufs is managed using a reuse pool. This means that once mbuf is allocated, it is not deallocated, but just put back into the reuse pool. By default each mbuf chunk is set to 16K bytes in size. There is a trade-off between the mbuf size and number of concurrent connections twemproxy can support. A large mbuf size reduces the number of read syscalls made by twemproxy when reading requests or responses. However, with a large mbuf size, every active connection would use up 16K bytes of buffer which might be an issue when twemproxy is handling large number of concurrent connections from clients. When twemproxy is meant to handle a large number of concurrent client connections, you should set chunk size to a small value like 512 bytes using the -m or --mbuf-size=N argument.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;p&gt;Twemproxy can be configured through a YAML file specified by the -c or --conf-file command-line argument on process start. The configuration file is used to specify the server pools and the servers within each pool that twemproxy manages. The configuration files parses and understands the following keys:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;listen&lt;/strong&gt;: The listening address and port (name:port or ip:port) or an absolute path to sock file (e.g. /var/run/nutcracker.sock) for this server pool.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;client_connections&lt;/strong&gt;: The maximum number of connections allowed from redis clients. Unlimited by default, though OS-imposed limitations will still apply.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hash&lt;/strong&gt;: The name of the hash function. Possible values are:&lt;/li&gt;
&lt;li&gt;one_at_a_time&lt;/li&gt;
&lt;li&gt;md5&lt;/li&gt;
&lt;li&gt;crc16&lt;/li&gt;
&lt;li&gt;crc32 (crc32 implementation compatible with &lt;a href="http://libmemcached.org/" rel="nofollow"&gt;libmemcached&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;crc32a (correct crc32 implementation as per the spec)&lt;/li&gt;
&lt;li&gt;fnv1_64&lt;/li&gt;
&lt;li&gt;fnv1a_64&lt;/li&gt;
&lt;li&gt;fnv1_32&lt;/li&gt;
&lt;li&gt;fnv1a_32&lt;/li&gt;
&lt;li&gt;hsieh&lt;/li&gt;
&lt;li&gt;murmur&lt;/li&gt;
&lt;li&gt;jenkins&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hash_tag&lt;/strong&gt;: A two character string that specifies the part of the key used for hashing. Eg "{}" or "$$". &lt;a href="notes/recommendation.md#hash-tags"&gt;Hash tag&lt;/a&gt; enable mapping different keys to the same server as long as the part of the key within the tag is the same.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;distribution&lt;/strong&gt;: The key distribution mode. Possible values are:&lt;/li&gt;
&lt;li&gt;ketama&lt;/li&gt;
&lt;li&gt;modula&lt;/li&gt;
&lt;li&gt;random&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;timeout&lt;/strong&gt;: The timeout value in msec that we wait for to establish a connection to the server or receive a response from a server. By default, we wait indefinitely.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;backlog&lt;/strong&gt;: The TCP backlog argument. Defaults to 512.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;preconnect&lt;/strong&gt;: A boolean value that controls if twemproxy should preconnect to all the servers in this pool on process start. Defaults to false.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;redis&lt;/strong&gt;: A boolean value that controls if a server pool speaks redis or memcached protocol. Defaults to false.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;redis_auth&lt;/strong&gt;: Authenticate to the Redis server on connect.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;redis_db&lt;/strong&gt;: The DB number to use on the pool servers. Defaults to 0. Note: Twemproxy will always present itself to clients as DB 0.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;server_connections&lt;/strong&gt;: The maximum number of connections that can be opened to each server. By default, we open at most 1 server connection.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;auto_eject_hosts&lt;/strong&gt;: A boolean value that controls if server should be ejected temporarily when it fails consecutively server_failure_limit times. See &lt;a href="notes/recommendation.md#liveness"&gt;liveness recommendations&lt;/a&gt; for information. Defaults to false.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;server_retry_timeout&lt;/strong&gt;: The timeout value in msec to wait for before retrying on a temporarily ejected server, when auto_eject_host is set to true. Defaults to 30000 msec.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;server_failure_limit&lt;/strong&gt;: The number of consecutive failures on a server that would lead to it being temporarily ejected when auto_eject_host is set to true. Defaults to 2.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;servers&lt;/strong&gt;: A list of server address, port and weight (name:port:weight or ip:port:weight) for this server pool.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example, the configuration file in &lt;a href="conf/nutcracker.yml"&gt;conf/nutcracker.yml&lt;/a&gt;, also shown below, configures 5 server pools with names - &lt;em&gt;alpha&lt;/em&gt;, &lt;em&gt;beta&lt;/em&gt;, &lt;em&gt;gamma&lt;/em&gt;, &lt;em&gt;delta&lt;/em&gt; and omega. Clients that intend to send requests to one of the 10 servers in pool delta connect to port 22124 on 127.0.0.1. Clients that intend to send request to one of 2 servers in pool omega connect to unix path /tmp/gamma. Requests sent to pool alpha and omega have no timeout and might require timeout functionality to be implemented on the client side. On the other hand, requests sent to pool beta, gamma and delta timeout after 400 msec, 400 msec and 100 msec respectively when no response is received from the server. Of the 5 server pools, only pools alpha, gamma and delta are configured to use server ejection and hence are resilient to server failures. All the 5 server pools use ketama consistent hashing for key distribution with the key hasher for pools alpha, beta, gamma and delta set to fnv1a_64 while that for pool omega set to hsieh. Also only pool beta uses &lt;a href="notes/recommendation.md#node-names-for-consistent-hashing"&gt;nodes names&lt;/a&gt; for consistent hashing, while pool alpha, gamma, delta and omega use 'host:port:weight' for consistent hashing. Finally, only pool alpha and beta can speak the redis protocol, while pool gamma, delta and omega speak memcached protocol.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alpha:
  listen: 127.0.0.1:22121
  hash: fnv1a_64
  distribution: ketama
  auto_eject_hosts: true
  redis: true
  server_retry_timeout: 2000
  server_failure_limit: 1
  servers:
   - 127.0.0.1:6379:1

beta:
  listen: 127.0.0.1:22122
  hash: fnv1a_64
  hash_tag: "{}"
  distribution: ketama
  auto_eject_hosts: false
  timeout: 400
  redis: true
  servers:
   - 127.0.0.1:6380:1 server1
   - 127.0.0.1:6381:1 server2
   - 127.0.0.1:6382:1 server3
   - 127.0.0.1:6383:1 server4

gamma:
  listen: 127.0.0.1:22123
  hash: fnv1a_64
  distribution: ketama
  timeout: 400
  backlog: 1024
  preconnect: true
  auto_eject_hosts: true
  server_retry_timeout: 2000
  server_failure_limit: 3
  servers:
   - 127.0.0.1:11212:1
   - 127.0.0.1:11213:1

delta:
  listen: 127.0.0.1:22124
  hash: fnv1a_64
  distribution: ketama
  timeout: 100
  auto_eject_hosts: true
  server_retry_timeout: 2000
  server_failure_limit: 1
  servers:
   - 127.0.0.1:11214:1
   - 127.0.0.1:11215:1
   - 127.0.0.1:11216:1
   - 127.0.0.1:11217:1
   - 127.0.0.1:11218:1
   - 127.0.0.1:11219:1
   - 127.0.0.1:11220:1
   - 127.0.0.1:11221:1
   - 127.0.0.1:11222:1
   - 127.0.0.1:11223:1

omega:
  listen: /tmp/gamma 0666
  hash: hsieh
  distribution: ketama
  auto_eject_hosts: false
  servers:
   - 127.0.0.1:11214:100000
   - 127.0.0.1:11215:1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, to make writing a syntactically correct configuration file easier, twemproxy provides a command-line argument -t or --test-conf that can be used to test the YAML configuration file for any syntax error.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-observability" class="anchor" aria-hidden="true" href="#observability"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Observability&lt;/h2&gt;
&lt;p&gt;Observability in twemproxy is through logs and stats.&lt;/p&gt;
&lt;p&gt;Twemproxy exposes stats at the granularity of server pool and servers per pool through the stats monitoring port. The stats are essentially JSON formatted key-value pairs, with the keys corresponding to counter names. By default stats are exposed on port 22222 and aggregated every 30 seconds. Both these values can be configured on program start using the -c or --conf-file and -i or --stats-interval command-line arguments respectively. You can print the description of all stats exported by  using the -D or --describe-stats command-line argument.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ nutcracker --describe-stats

pool stats:
  client_eof          "# eof on client connections"
  client_err          "# errors on client connections"
  client_connections  "# active client connections"
  server_ejects       "# times backend server was ejected"
  forward_error       "# times we encountered a forwarding error"
  fragments           "# fragments created from a multi-vector request"

server stats:
  server_eof          "# eof on server connections"
  server_err          "# errors on server connections"
  server_timedout     "# timeouts on server connections"
  server_connections  "# active server connections"
  requests            "# requests"
  request_bytes       "total request bytes"
  responses           "# responses"
  response_bytes      "total response bytes"
  in_queue            "# requests in incoming queue"
  in_queue_bytes      "current request bytes in incoming queue"
  out_queue           "# requests in outgoing queue"
  out_queue_bytes     "current request bytes in outgoing queue"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Logging in twemproxy is only available when twemproxy is built with logging enabled. By default logs are written to stderr. Twemproxy can also be configured to write logs to a specific file through the -o or --output command-line argument. On a running twemproxy, we can turn log levels up and down by sending it SIGTTIN and SIGTTOU signals respectively and reopen log files by sending it SIGHUP signal.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-pipelining" class="anchor" aria-hidden="true" href="#pipelining"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pipelining&lt;/h2&gt;
&lt;p&gt;Twemproxy enables proxying multiple client connections onto one or few server connections. This architectural setup makes it ideal for pipelining requests and responses and hence saving on the round trip time.&lt;/p&gt;
&lt;p&gt;For example, if twemproxy is proxying three client connections onto a single server and we get requests - 'get key\r\n', 'set key 0 0 3\r\nval\r\n' and 'delete key\r\n' on these three connections respectively, twemproxy would try to batch these requests and send them as a single message onto the server connection as 'get key\r\nset key 0 0 3\r\nval\r\ndelete key\r\n'.&lt;/p&gt;
&lt;p&gt;Pipelining is the reason why twemproxy ends up doing better in terms of throughput even though it introduces an extra hop between the client and server.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-deployment" class="anchor" aria-hidden="true" href="#deployment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deployment&lt;/h2&gt;
&lt;p&gt;If you are deploying twemproxy in production, you might consider reading through the &lt;a href="notes/recommendation.md"&gt;recommendation document&lt;/a&gt; to understand the parameters you could tune in twemproxy to run it efficiently in the production environment.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-packages" class="anchor" aria-hidden="true" href="#packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Packages&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-ubuntu" class="anchor" aria-hidden="true" href="#ubuntu"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ubuntu&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-ppa-stable" class="anchor" aria-hidden="true" href="#ppa-stable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PPA Stable&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://launchpad.net/~twemproxy/+archive/ubuntu/stable" rel="nofollow"&gt;https://launchpad.net/~twemproxy/+archive/ubuntu/stable&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-ppa-daily" class="anchor" aria-hidden="true" href="#ppa-daily"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PPA Daily&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://launchpad.net/~twemproxy/+archive/ubuntu/daily" rel="nofollow"&gt;https://launchpad.net/~twemproxy/+archive/ubuntu/daily&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-utils" class="anchor" aria-hidden="true" href="#utils"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Utils&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bewie/collectd-twemproxy"&gt;collectd-plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eveiga/contrib/tree/nutcracker/plugins/nutcracker"&gt;munin-plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ganglia/gmond_python_modules/tree/master/twemproxy"&gt;twemproxy-ganglia-module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wanelo/nagios-checks/blob/master/check_twemproxy"&gt;nagios checks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wanelo-chef/nad-checks/blob/master/recipes/twemproxy.rb"&gt;circonus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wuakitv/puppet-twemproxy"&gt;puppet module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kontera-technologies/nutcracker-web"&gt;nutcracker-web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Stono/redis-twemproxy-agent"&gt;redis-twemproxy agent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sensu-plugins/sensu-plugins-twemproxy/blob/master/bin/metrics-twemproxy.rb"&gt;sensu-metrics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/idning/redis-mgr"&gt;redis-mgr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/areina/smitty"&gt;smitty for twemproxy failover&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Serekh/beholder"&gt;Beholder, a Python agent for twemproxy failover&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://supermarket.getchef.com/cookbooks/twemproxy" rel="nofollow"&gt;chef cookbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[twemsentinel] (&lt;a href="https://github.com/yak0/twemsentinel"&gt;https://github.com/yak0/twemsentinel&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-companies-using-twemproxy-in-production" class="anchor" aria-hidden="true" href="#companies-using-twemproxy-in-production"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Companies using Twemproxy in Production&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/" rel="nofollow"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wikimedia.org/" rel="nofollow"&gt;Wikimedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pinterest.com/" rel="nofollow"&gt;Pinterest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.snapchat.com/" rel="nofollow"&gt;Snapchat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.flickr.com" rel="nofollow"&gt;Flickr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.yahoo.com" rel="nofollow"&gt;Yahoo!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tumblr.com/" rel="nofollow"&gt;Tumblr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://vine.co/" rel="nofollow"&gt;Vine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.wayfair.com/" rel="nofollow"&gt;Wayfair&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.kiip.me/" rel="nofollow"&gt;Kiip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wuaki.tv/" rel="nofollow"&gt;Wuaki.tv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wanelo.com/" rel="nofollow"&gt;Wanelo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://kontera.com/" rel="nofollow"&gt;Kontera&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.bright.com/" rel="nofollow"&gt;Bright&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.56.com/" rel="nofollow"&gt;56.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://digg.com/" rel="nofollow"&gt;Digg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://advertising.gawker.com/" rel="nofollow"&gt;Gawkermedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://3scale.net" rel="nofollow"&gt;3scale.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.ooyala.com" rel="nofollow"&gt;Ooyala&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://twitch.tv" rel="nofollow"&gt;Twitch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.socrata.com/" rel="nofollow"&gt;Socrata&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hootsuite.com/" rel="nofollow"&gt;Hootsuite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.trivago.com/" rel="nofollow"&gt;Trivago&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.machinezone.com" rel="nofollow"&gt;Machinezone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://path.com" rel="nofollow"&gt;Path&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://engineering.aol.com/" rel="nofollow"&gt;AOL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://soysuper.com/" rel="nofollow"&gt;Soysuper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://vinted.com/" rel="nofollow"&gt;Vinted&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://poshmark.com/" rel="nofollow"&gt;Poshmark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fanduel.com/" rel="nofollow"&gt;FanDuel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://bloomreach.com/" rel="nofollow"&gt;Bloomreach&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hootsuite.com" rel="nofollow"&gt;Hootsuite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tradesy.com/" rel="nofollow"&gt;Tradesy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://uber.com" rel="nofollow"&gt;Uber&lt;/a&gt; (&lt;a href="http://highscalability.com/blog/2015/9/14/how-uber-scales-their-real-time-market-platform.html" rel="nofollow"&gt;details&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://greta.io/" rel="nofollow"&gt;Greta&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-issues-and-support" class="anchor" aria-hidden="true" href="#issues-and-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issues and Support&lt;/h2&gt;
&lt;p&gt;Have a bug or a question? Please create an issue here on GitHub!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/twitter/twemproxy/issues"&gt;https://github.com/twitter/twemproxy/issues&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-committers" class="anchor" aria-hidden="true" href="#committers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Committers&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Manju Rajashekhar (&lt;a href="https://twitter.com/manju" rel="nofollow"&gt;@manju&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Lin Yang (&lt;a href="https://github.com/idning"&gt;@idning&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thank you to all of our &lt;a href="https://github.com/twitter/twemproxy/graphs/contributors"&gt;contributors&lt;/a&gt;!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright 2012 Twitter, Inc.&lt;/p&gt;
&lt;p&gt;Licensed under the Apache License, Version 2.0: &lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>twitter</author><guid isPermaLink="false">https://github.com/twitter/twemproxy</guid><pubDate>Sun, 10 Nov 2019 00:18:00 GMT</pubDate></item><item><title>darktable-org/darktable #19 in C, This week</title><link>https://github.com/darktable-org/darktable</link><description>&lt;p&gt;&lt;i&gt;darktable is an open source photography workflow application and raw developer&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content--darktable--" class="anchor" aria-hidden="true" href="#-darktable--"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://www.darktable.org/" rel="nofollow"&gt;&lt;img src="/data/pixmaps/idbutton.png?raw=true" alt="icon" style="max-width:100%;"&gt;&lt;/a&gt; darktable &lt;a href="https://travis-ci.org/darktable-org/darktable" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f81740e899d54446a0c9b6ea3a9fd365f2a52bf1/68747470733a2f2f7472617669732d63692e6f72672f6461726b7461626c652d6f72672f6461726b7461626c652e7376673f6272616e63683d6d6173746572" alt="build status" data-canonical-src="https://travis-ci.org/darktable-org/darktable.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/470" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a78653624aa25f834011e60ba2f531875b14de70/68747470733a2f2f626573747072616374696365732e636f7265696e6672617374727563747572652e6f72672f70726f6a656374732f3437302f6261646765" alt="CII Best Practices" data-canonical-src="https://bestpractices.coreinfrastructure.org/projects/470/badge" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;darktable is an open source photography workflow application and raw developer. A virtual lighttable and darkroom for photographers. It manages your digital negatives in a database, lets you view them through a zoomable lighttable and enables you to develop raw images and enhance them.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.darktable.org/" title="darktable homepage" rel="nofollow"&gt;https://www.darktable.org/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Write a blog about darktable&lt;/li&gt;
&lt;li&gt;Create a tutorial for darktable&lt;/li&gt;
&lt;li&gt;Help expand the &lt;a href="https://www.darktable.org/redmine/projects/users/wiki" rel="nofollow"&gt;user wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Answer questions on the &lt;a href="https://www.mail-archive.com/darktable-user@lists.darktable.org/" rel="nofollow"&gt;user mailing list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Share your ideas on the &lt;a href="https://www.mail-archive.com/darktable-dev@lists.darktable.org/" rel="nofollow"&gt;developer mailing list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Test &lt;a href="https://www.darktable.org/install/" rel="nofollow"&gt;releases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Review &lt;a href="https://github.com/darktable-org/darktable/pulls"&gt;pull requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Start &lt;a href="https://www.darktable.org/redmine/projects/darktable/wiki/Contributing_code" rel="nofollow"&gt;hacking on darktable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;Note that &lt;a href="https://github.com/darktable-org/rawspeed"&gt;rawspeed&lt;/a&gt; is tracked via a git submodule, so after checking-out the darktable, you need to update/checkout rawspeed,&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git submodule init
git submodule update&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-easy-way" class="anchor" aria-hidden="true" href="#easy-way"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Easy way&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./build.sh --prefix /opt/darktable --build-type Release&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-manual-way" class="anchor" aria-hidden="true" href="#manual-way"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual way&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mkdir build/
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; build/
cmake -DCMAKE_INSTALL_PREFIX=/opt/darktable/ ..
make
sudo make install&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-further-reading" class="anchor" aria-hidden="true" href="#further-reading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Further reading&lt;/h3&gt;
&lt;p&gt;There is a &lt;a href="https://redmine.darktable.org/projects/darktable/wiki/Building_darktable_20" rel="nofollow"&gt;comprehensive list&lt;/a&gt; of build instructions for all the widely used Linux distributions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Check that you have the latest &lt;a href="http://www.gphoto.org/" title="gphoto2 homepage" rel="nofollow"&gt;gphoto2 library&lt;/a&gt; installed in order to support the newest cameras.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-wiki" class="anchor" aria-hidden="true" href="#wiki"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Wiki&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.darktable.org/redmine/projects/users/wiki" title="darktable user wiki" rel="nofollow"&gt;User wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.darktable.org/redmine/projects/darktable/wiki" title="darktable developer wiki" rel="nofollow"&gt;Developer wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-mailing-lists" class="anchor" aria-hidden="true" href="#mailing-lists"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mailing lists&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Users [&lt;a href="mailto:darktable-user+subscribe@lists.darktable.org"&gt;subscribe&lt;/a&gt; | &lt;a href="https://www.mail-archive.com/darktable-user@lists.darktable.org/" rel="nofollow"&gt;archive&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Developer [&lt;a href="mailto:darktable-dev+subscribe@lists.darktable.org"&gt;subscribe&lt;/a&gt; | &lt;a href="https://www.mail-archive.com/darktable-dev@lists.darktable.org/" rel="nofollow"&gt;archive&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;CI (read-only, high traffic!) [&lt;a href="mailto:darktable-ci+subscribe@lists.darktable.org"&gt;subscribe&lt;/a&gt; | &lt;a href="https://www.mail-archive.com/darktable-ci@lists.darktable.org/" rel="nofollow"&gt;archive&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>darktable-org</author><guid isPermaLink="false">https://github.com/darktable-org/darktable</guid><pubDate>Sun, 10 Nov 2019 00:19:00 GMT</pubDate></item><item><title>openwrt/openwrt #20 in C, This week</title><link>https://github.com/openwrt/openwrt</link><description>&lt;p&gt;&lt;i&gt;This repository is a mirror of https://git.openwrt.org/openwrt/openwrt.git It is for reference only and is not active for check-ins or for reporting issues.  We will continue to accept Pull Requests here. They will be merged via staging trees then into openwrt.git. All issues should be reported at: https://bugs.openwrt.org&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body " data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;  _______                     ________        __
 |       |.-----.-----.-----.|  |  |  |.----.|  |_
 |   -   ||  _  |  -__|     ||  |  |  ||   _||   _|
 |_______||   __|_____|__|__||________||__|  |____|
          |__| W I R E L E S S   F R E E D O M
 -----------------------------------------------------

This is the buildsystem for the OpenWrt Linux distribution.

To build your own firmware you need a Linux, BSD or MacOSX system (case
sensitive filesystem required). Cygwin is unsupported because of the lack
of a case sensitive file system.

You need gcc, binutils, bzip2, flex, python3.5+, perl, make, find, grep, diff,
unzip, gawk, getopt, subversion, libz-dev and libc headers installed.

1. Run "./scripts/feeds update -a" to obtain all the latest package definitions
defined in feeds.conf / feeds.conf.default

2. Run "./scripts/feeds install -a" to install symlinks for all obtained
packages into package/feeds/

3. Run "make menuconfig" to select your preferred configuration for the
toolchain, target system &amp;amp; firmware packages.

4. Run "make" to build your firmware. This will download all sources, build
the cross-compile toolchain and then cross-compile the Linux kernel &amp;amp; all
chosen applications for your target system.

Sunshine!
	Your OpenWrt Community
	&lt;a href="http://www.openwrt.org" rel="nofollow"&gt;http://www.openwrt.org&lt;/a&gt;


&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>openwrt</author><guid isPermaLink="false">https://github.com/openwrt/openwrt</guid><pubDate>Sun, 10 Nov 2019 00:20:00 GMT</pubDate></item><item><title>cfenollosa/os-tutorial #21 in C, This week</title><link>https://github.com/cfenollosa/os-tutorial</link><description>&lt;p&gt;&lt;i&gt;How to create an OS from scratch&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-os-tutorial" class="anchor" aria-hidden="true" href="#os-tutorial"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;os-tutorial&lt;/h1&gt;
&lt;p&gt;How to create an OS from scratch!&lt;/p&gt;
&lt;p&gt;I have always wanted to learn how to make an OS from scratch. In college I was taught
how to implement advanced features (pagination, semaphores, memory management, etc)
but:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I never got to start from my own boot sector&lt;/li&gt;
&lt;li&gt;College is hard so I don't remember most of it.&lt;/li&gt;
&lt;li&gt;I'm fed up with people who think that reading an already existing kernel, even if small, is
a good idea to learn operating systems.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Inspired by &lt;a href="http://www.cs.bham.ac.uk/~exr/lectures/opsys/10_11/lectures/os-dev.pdf" rel="nofollow"&gt;this document&lt;/a&gt;
and the &lt;a href="http://wiki.osdev.org/" rel="nofollow"&gt;OSDev wiki&lt;/a&gt;, I'll try to make short step-by-step READMEs and
code samples for anybody to follow. Honestly, this tutorial is basically the first document but
split into smaller pieces and without the theory.&lt;/p&gt;
&lt;p&gt;Updated: more sources: &lt;a href="https://littleosbook.github.io" rel="nofollow"&gt;the little book about OS development&lt;/a&gt;,
&lt;a href="https://web.archive.org/web/20160412174753/http://www.jamesmolloy.co.uk/tutorial_html/index.html" rel="nofollow"&gt;JamesM's kernel development tutorials&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;This course is a code tutorial aimed at people who are comfortable with low level computing. For example,
programmers who have curiosity on how an OS works but don't have the time or willpower to start reading the Linux kernel
top to bottom.&lt;/li&gt;
&lt;li&gt;There is little theory. Yes, this is a feature. Google is your theory lecturer. Once you pass college,
excessive theory is worse than no theory because it makes things seem more difficult than they really are.&lt;/li&gt;
&lt;li&gt;The lessons are tiny and may take 5-15 minutes to complete. Trust me and trust yourself. You can do it!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-use-this-tutorial" class="anchor" aria-hidden="true" href="#how-to-use-this-tutorial"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to use this tutorial&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Start with the first folder and go down in order. They build on previous code, so if
you jump right to folder 05 and don't know why there is a &lt;code&gt;mov ah, 0x0e&lt;/code&gt;, it's because you missed lecture 02.
Really, just go in order. You can always skip stuff you already know.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open the README and read the first line, which details the concepts you should be familiar with
before reading the code. Google concepts you are not familiar with. The second line states the goals for each lesson.
Read them, because they explain why we do what we do. The "why" is as important as the "how".&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Read the rest of the README. It is &lt;strong&gt;very concise&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Optional) Try to write the code files by yourself after reading the README.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Look at the code examples. They are extremely well commented.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Optional) Experiment with them and try to break things. The only way to make sure you understood something is
trying to break it or replicate it with different commands.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;TL;DR: First read the README on each folder, then the code files. If you're brave, try to code them yourself.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-strategy" class="anchor" aria-hidden="true" href="#strategy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Strategy&lt;/h2&gt;
&lt;p&gt;We will want to do many things with our OS:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Boot from scratch, without GRUB - DONE!&lt;/li&gt;
&lt;li&gt;Enter 32-bit mode - DONE&lt;/li&gt;
&lt;li&gt;Jump from Assembly to C - DONE!&lt;/li&gt;
&lt;li&gt;Interrupt handling - DONE!&lt;/li&gt;
&lt;li&gt;Screen output and keyboard input - DONE!&lt;/li&gt;
&lt;li&gt;A tiny, basic &lt;code&gt;libc&lt;/code&gt; which grows to suit our needs - DONE!&lt;/li&gt;
&lt;li&gt;Memory management&lt;/li&gt;
&lt;li&gt;Write a filesystem to store files&lt;/li&gt;
&lt;li&gt;Create a very simple shell&lt;/li&gt;
&lt;li&gt;User mode&lt;/li&gt;
&lt;li&gt;Maybe we will write a simple text editor&lt;/li&gt;
&lt;li&gt;Multiple processes and scheduling&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Probably we will go through them in that order, however it's soon to tell.&lt;/p&gt;
&lt;p&gt;If we feel brave enough:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A BASIC interpreter, like in the 70s!&lt;/li&gt;
&lt;li&gt;A GUI&lt;/li&gt;
&lt;li&gt;Networking&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;This is a personal learning project, and even though it hasn't been updated for a long time, I still have hopes to get into it at some point.&lt;/p&gt;
&lt;p&gt;I'm thankful to all those who have pointed out bugs and submitted pull requests. I will need some time to review everything and I cannot guarantee that at this moment.&lt;/p&gt;
&lt;p&gt;Please feel free to fork this repo. If many of you are interested in continuing the project, let me know and I'll link the "main fork" from here.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>cfenollosa</author><guid isPermaLink="false">https://github.com/cfenollosa/os-tutorial</guid><pubDate>Sun, 10 Nov 2019 00:21:00 GMT</pubDate></item><item><title>microsoft/Windows-driver-samples #22 in C, This week</title><link>https://github.com/microsoft/Windows-driver-samples</link><description>&lt;p&gt;&lt;i&gt;This repo contains driver samples prepared for use with Microsoft Visual Studio and the Windows Driver Kit (WDK). It contains both Universal Windows Driver and desktop-only driver samples.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-driver-samples-for-windows-10" class="anchor" aria-hidden="true" href="#driver-samples-for-windows-10"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Driver samples for Windows 10&lt;/h1&gt;
&lt;p&gt;These are the official Microsoft Windows Driver Kit (WDK) driver code samples for Windows 10. They provide a foundation for Universal Windows driver support of all hardware form factors, from phones to desktop PCs. Use these samples with Visual Studio 2019 and Windows Driver Kit (WDK) 10.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.microsoft.com/windows-hardware/drivers/" rel="nofollow"&gt;Windows Driver Kit documentation&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-windows-10-driver-development" class="anchor" aria-hidden="true" href="#windows-10-driver-development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows 10 driver development&lt;/h2&gt;
&lt;p&gt;Use Visual Studio 2019 and Windows Driver Kit (WDK) 10 to build, test, and deploy your drivers. With Windows 10, the driver development environment is integrated into Visual Studio. To get started, download the driver development kits and tools for Windows 10.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developer.microsoft.com/windows/hardware/windows-driver-kit" rel="nofollow"&gt;Download the WDK, WinDbg, and associated tools&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-windows-driver-kit-wdk" class="anchor" aria-hidden="true" href="#windows-driver-kit-wdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows Driver Kit (WDK)&lt;/h3&gt;
&lt;p&gt;Take a look at the compilation of the new and changed driver-related content for Windows 10. Areas of improvement include camera, print, display, Near Field Communication (NFC), WLAN, Bluetooth, and more.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.microsoft.com/windows-hardware/drivers/what-s-new-in-driver-development" rel="nofollow"&gt;Find out what's new in the WDK&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-universal-windows-drivers" class="anchor" aria-hidden="true" href="#universal-windows-drivers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Universal Windows drivers&lt;/h3&gt;
&lt;p&gt;Write one driver that runs on both Windows 10 for desktop editions and Windows 10 Mobile devices, as well as other Windows 10 editions that share a common set of interfaces.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.microsoft.com/windows-hardware/drivers/develop/getting-started-with-universal-drivers" rel="nofollow"&gt;Getting Started with Universal Windows drivers&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-windows-driver-frameworks" class="anchor" aria-hidden="true" href="#windows-driver-frameworks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows Driver Frameworks&lt;/h3&gt;
&lt;p&gt;The Windows Driver Frameworks (WDF) are a set of libraries that make it simple to write high-quality device drivers.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.microsoft.com/windows-hardware/drivers/wdf/" rel="nofollow"&gt;WDF driver development guide&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-samples" class="anchor" aria-hidden="true" href="#samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Samples&lt;/h3&gt;
&lt;p&gt;Use the samples in this repo to guide your Windows driver development. Whether you're just getting started or porting an older driver to the newest version of Windows, code samples are valuable guides on how to write drivers.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-build-your-first-driver" class="anchor" aria-hidden="true" href="#build-your-first-driver"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build your first driver&lt;/h3&gt;
&lt;p&gt;If you're writing your first driver, use these exercises to get started. Each exercise is independent of the others, so you can do them in any order.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.microsoft.com/windows-hardware/drivers/gettingstarted/writing-a-umdf-driver-based-on-a-template" rel="nofollow"&gt;Write a UMDF driver based on a template&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.microsoft.com/windows-hardware/drivers/gettingstarted/writing-a-very-small-kmdf--driver" rel="nofollow"&gt;Write a KMDF Hello World driver&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.microsoft.com/windows-hardware/drivers/gettingstarted/writing-a-kmdf-driver-based-on-a-template" rel="nofollow"&gt;Write a KMDF driver based on a template&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-microsoft-code-of-conduct" class="anchor" aria-hidden="true" href="#microsoft-code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Microsoft Code of Conduct&lt;/h1&gt;
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>microsoft</author><guid isPermaLink="false">https://github.com/microsoft/Windows-driver-samples</guid><pubDate>Sun, 10 Nov 2019 00:22:00 GMT</pubDate></item><item><title>Tencent/xLua #23 in C, This week</title><link>https://github.com/Tencent/xLua</link><description>&lt;p&gt;&lt;i&gt;xLua is a lua programming solution for  C# ( Unity, .Net, Mono) , it supports android, ios, windows, linux, osx, etc.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/XLua/Doc/xLua.png"&gt;&lt;img src="Assets/XLua/Doc/xLua.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Tencent/xLua/blob/master/LICENSE.TXT"&gt;&lt;img src="https://camo.githubusercontent.com/e0d5267d60ee425acfe1a1f2d6e6d92a465dcd8f/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667" alt="license" data-canonical-src="http://img.shields.io/badge/license-MIT-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Tencent/xLua/releases"&gt;&lt;img src="https://camo.githubusercontent.com/fe099f7f92223cd233050610239fa7411676f4f8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72656c656173652d76322e312e31342d626c75652e737667" alt="release" data-canonical-src="https://img.shields.io/badge/release-v2.1.14-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Tencent/xLua/pulls"&gt;&lt;img src="https://camo.githubusercontent.com/a56a4d6198416d6ce12b4b534a2bf1f4ba4ff2e4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d626c75652e737667" alt="PRs Welcome" data-canonical-src="https://img.shields.io/badge/PRs-welcome-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/Tencent/xLua" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5d7594c06bea789fff98b20e0a46b5021609853d/68747470733a2f2f7472617669732d63692e6f72672f54656e63656e742f784c75612e7376673f6272616e63683d6d6173746572" alt="Build status" data-canonical-src="https://travis-ci.org/Tencent/xLua.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="README_EN.md"&gt;(English Documents Available)&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-c下lua编程支持" class="anchor" aria-hidden="true" href="#c下lua编程支持"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;C#下Lua编程支持&lt;/h2&gt;
&lt;p&gt;xLua为Unity、 .Net、 Mono等C#环境增加Lua脚本编程的能力，借助xLua，这些Lua代码可以方便的和C#相互调用。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-xlua的突破" class="anchor" aria-hidden="true" href="#xlua的突破"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;xLua的突破&lt;/h2&gt;
&lt;p&gt;xLua在功能、性能、易用性都有不少突破，这几方面分别最具代表性的是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以运行时把C#实现（方法，操作符，属性，事件等等）替换成lua实现；&lt;/li&gt;
&lt;li&gt;出色的GC优化，自定义struct，枚举在Lua和C#间传递无C# gc alloc；&lt;/li&gt;
&lt;li&gt;编辑器下无需生成代码，开发更轻量；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更详细的特性、平台支持介绍请看&lt;a href="Assets/XLua/Doc/features.md"&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-安装" class="anchor" aria-hidden="true" href="#安装"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;安装&lt;/h2&gt;
&lt;p&gt;打开zip包，你会看到一个Assets目录，这目录就对应Unity工程的Assets目录，保持这目录结构放到你的Unity工程。&lt;/p&gt;
&lt;p&gt;如果希望安装到其它目录，请看&lt;a href="Assets/XLua/Doc/faq.md"&gt;FAQ&lt;/a&gt;相关介绍。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-文档" class="anchor" aria-hidden="true" href="#文档"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;文档&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Assets/XLua/Doc/faq.md"&gt;常见问题解答&lt;/a&gt;：常见问题都总结在这里，初使用大多数问题都可以在这里找到答案。&lt;/li&gt;
&lt;li&gt;(必看)&lt;a href="Assets/XLua/Doc/XLua%E6%95%99%E7%A8%8B.md"&gt;XLua教程&lt;/a&gt;：教程，其配套代码&lt;a href="Assets/XLua/Tutorial/"&gt;这里&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;(必看)&lt;a href="Assets/XLua/Doc/configure.md"&gt;XLua的配置&lt;/a&gt;：介绍如何配置xLua。&lt;/li&gt;
&lt;li&gt;&lt;a href="Assets/XLua/Doc/hotfix.md"&gt;热补丁操作指南&lt;/a&gt;：介绍如何使用热补丁特性。&lt;/li&gt;
&lt;li&gt;&lt;a href="Assets/XLua/Doc/XLua%E5%A2%9E%E5%8A%A0%E5%88%A0%E9%99%A4%E7%AC%AC%E4%B8%89%E6%96%B9lua%E5%BA%93.md"&gt;XLua增加删除第三方lua库&lt;/a&gt;：如何增删第三方lua扩展库。&lt;/li&gt;
&lt;li&gt;&lt;a href="Assets/XLua/Doc/XLua_API.md"&gt;XLua API&lt;/a&gt;：API文档。&lt;/li&gt;
&lt;li&gt;&lt;a href="Assets/XLua/Doc/custom_generate.md"&gt;生成引擎二次开发指南&lt;/a&gt;：介绍如何做生成引擎的二次开发。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-快速入门" class="anchor" aria-hidden="true" href="#快速入门"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;快速入门&lt;/h2&gt;
&lt;p&gt;一个完整的例子仅需3行代码：&lt;/p&gt;
&lt;p&gt;安装好xLua，建一个MonoBehaviour拖到场景，在Start加入如下代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;XLua&lt;/span&gt;.&lt;span class="pl-smi"&gt;LuaEnv&lt;/span&gt; &lt;span class="pl-smi"&gt;luaenv&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;XLua&lt;/span&gt;.&lt;span class="pl-en"&gt;LuaEnv&lt;/span&gt;();
&lt;span class="pl-smi"&gt;luaenv&lt;/span&gt;.&lt;span class="pl-en"&gt;DoString&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;CS.UnityEngine.Debug.Log('hello world')&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
&lt;span class="pl-smi"&gt;luaenv&lt;/span&gt;.&lt;span class="pl-en"&gt;Dispose&lt;/span&gt;();&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;1、DoString参数为string，可输入任意合法的Lua代码，本示例在lua里调用C#的UnityEngine.Debug.Log打印了个日志。&lt;/p&gt;
&lt;p&gt;2、一个LuaEnv实例对应Lua虚拟机，出于开销的考虑，建议全局唯一。&lt;/p&gt;
&lt;p&gt;C#主动调用lua也很简单，比如要调用lua的系统函数，推荐方式是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;声明&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;[&lt;span class="pl-k"&gt;XLua&lt;/span&gt;.&lt;span class="pl-en"&gt;CSharpCallLua&lt;/span&gt;]
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;delegate&lt;/span&gt; &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-en"&gt;LuaMax&lt;/span&gt;(&lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-k"&gt;double&lt;/span&gt; &lt;span class="pl-smi"&gt;b&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;绑定&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-smi"&gt;max&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;luaenv&lt;/span&gt;.&lt;span class="pl-smi"&gt;Global&lt;/span&gt;.&lt;span class="pl-en"&gt;GetInPath&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;LuaMax&lt;/span&gt;&amp;gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;math.max&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;调用&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-cs"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;Debug&lt;/span&gt;.&lt;span class="pl-en"&gt;Log&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;max:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-en"&gt;max&lt;/span&gt;(&lt;span class="pl-c1"&gt;32&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;建议绑定一次，重复使用。生成了代码的话，调用max是不产生gc alloc的。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-热补丁" class="anchor" aria-hidden="true" href="#热补丁"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;热补丁&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;侵入性小，老项目原有代码不做任何调整就可使用。&lt;/li&gt;
&lt;li&gt;运行时影响小，不打补丁基本和原有程序一样。&lt;/li&gt;
&lt;li&gt;出问题了可以用Lua来打补丁，这时才会走到lua代码逻辑；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="Assets/XLua/Doc/hotfix.md"&gt;这里&lt;/a&gt;是使用指南。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-更多示例" class="anchor" aria-hidden="true" href="#更多示例"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;更多示例&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Assets/XLua/Examples/01_Helloworld/"&gt;01_Helloworld&lt;/a&gt;: 快速入门的例子。&lt;/li&gt;
&lt;li&gt;&lt;a href="Assets/XLua/Examples/02_U3DScripting/"&gt;02_U3DScripting&lt;/a&gt;: 展示怎么用lua来写MonoBehaviour。&lt;/li&gt;
&lt;li&gt;&lt;a href="Assets/XLua/Examples/03_UIEvent/"&gt;03_UIEvent&lt;/a&gt;: 展示怎么用lua来写UI逻辑。&lt;/li&gt;
&lt;li&gt;&lt;a href="Assets/XLua/Examples/04_LuaObjectOrented/"&gt;04_LuaObjectOrented&lt;/a&gt;: 展示lua面向对象和C#的配合。&lt;/li&gt;
&lt;li&gt;&lt;a href="Assets/XLua/Examples/05_NoGc/"&gt;05_NoGc&lt;/a&gt;: 展示怎么去避免值类型的GC。&lt;/li&gt;
&lt;li&gt;&lt;a href="Assets/XLua/Examples/06_Coroutine/"&gt;06_Coroutine&lt;/a&gt;: 展示lua协程怎么和Unity协程相配合。&lt;/li&gt;
&lt;li&gt;&lt;a href="Assets/XLua/Examples/07_AsyncTest/"&gt;07_AsyncTest&lt;/a&gt;: 展示怎么用lua协程来把异步逻辑同步化。&lt;/li&gt;
&lt;li&gt;&lt;a href="Assets/XLua/Examples/08_Hotfix/"&gt;08_Hotfix&lt;/a&gt;: 热补丁的示例（需要开启热补丁特性，如何开启请看&lt;a href="Assets/XLua/Doc/hotfix.md"&gt;指南&lt;/a&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;a href="Assets/XLua/Examples/09_GenericMethod/"&gt;09_GenericMethod&lt;/a&gt;: 泛化函数支持的演示。&lt;/li&gt;
&lt;li&gt;&lt;a href="Assets/XLua/Examples/10_SignatureLoader/"&gt;10_SignatureLoader&lt;/a&gt;: 展示如何读取经数字签名的lua脚本，参见&lt;a href="Assets/XLua/Doc/signature.md"&gt;数字签名&lt;/a&gt;的文档介绍。&lt;/li&gt;
&lt;li&gt;&lt;a href="Assets/XLua/Examples/11_RawObject/"&gt;11_RawObject&lt;/a&gt;: 当C#参数是object时，如何把一个lua number指定以boxing后的int传递过去。&lt;/li&gt;
&lt;li&gt;&lt;a href="Assets/XLua/Examples/12_ReImplementInLua/"&gt;12_ReImplementInLua&lt;/a&gt;: 展示如何将复杂值类型改为lua实现。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-技术支持" class="anchor" aria-hidden="true" href="#技术支持"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;技术支持&lt;/h2&gt;
&lt;p&gt;一群：612705778&lt;/p&gt;
&lt;p&gt;二群：703073338&lt;/p&gt;
&lt;p&gt;入群的问题：有问题该先从哪找答案&lt;/p&gt;
&lt;p&gt;回答：FAQ&lt;/p&gt;
&lt;p&gt;平时也要谨记这答案，90%以上问题都可以在&lt;a href="Assets/XLua/Doc/faq.md"&gt;FAQ&lt;/a&gt;里头找到答案。这些问题就别在群刷屏了。&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Tencent</author><guid isPermaLink="false">https://github.com/Tencent/xLua</guid><pubDate>Sun, 10 Nov 2019 00:23:00 GMT</pubDate></item><item><title>CloverHackyColor/CloverBootloader #24 in C, This week</title><link>https://github.com/CloverHackyColor/CloverBootloader</link><description>&lt;p&gt;&lt;i&gt;Bootloader for macOS, Windows and Linux in UEFI and in legacy mode&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-cloverbootloader" class="anchor" aria-hidden="true" href="#cloverbootloader"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CloverBootloader&lt;/h1&gt;
&lt;p&gt;Bootloader for macOS, Windows and Linux in UEFI and in legacy mode&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>CloverHackyColor</author><guid isPermaLink="false">https://github.com/CloverHackyColor/CloverBootloader</guid><pubDate>Sun, 10 Nov 2019 00:24:00 GMT</pubDate></item><item><title>bingoogolapple/BGAQRCode-Android #25 in C, This week</title><link>https://github.com/bingoogolapple/BGAQRCode-Android</link><description>&lt;p&gt;&lt;i&gt;QRCode 扫描二维码、扫描条形码、相册获取图片后识别、生成带 Logo 二维码、支持微博微信 QQ 二维码扫描样式&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-runningbgaqrcode-androidrunning---" class="anchor" aria-hidden="true" href="#runningbgaqrcode-androidrunning---"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="running_man" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3c3.png"&gt;🏃&lt;/g-emoji&gt;BGAQRCode-Android&lt;g-emoji class="g-emoji" alias="running_man" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3c3.png"&gt;🏃&lt;/g-emoji&gt; &lt;a href="https://bintray.com/bingoogolapple/maven/bga-qrcode-core/_latestVersion" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/d5e21a4916e48f2244db86f26a5b7d97fb1f41af/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f62696e676f6f676f6c6170706c652f6d6176656e2f6267612d7172636f64652d636f72652f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/bingoogolapple/maven/bga-qrcode-core/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-目录" class="anchor" aria-hidden="true" href="#目录"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;目录&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D"&gt;功能介绍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98"&gt;常见问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%95%88%E6%9E%9C%E5%9B%BE%E4%B8%8E%E7%A4%BA%E4%BE%8B-apk"&gt;效果图与示例 apk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gradle-%E4%BE%9D%E8%B5%96"&gt;Gradle 依赖&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%B8%83%E5%B1%80%E6%96%87%E4%BB%B6"&gt;布局文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7%E8%AF%B4%E6%98%8E"&gt;自定义属性说明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E"&gt;接口说明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%85%B3%E4%BA%8E%E6%88%91"&gt;关于我&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-功能介绍" class="anchor" aria-hidden="true" href="#功能介绍"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;功能介绍&lt;/h2&gt;
&lt;p&gt;根据&lt;a href="http://www.iqegg.com" rel="nofollow"&gt;之前公司&lt;/a&gt;的产品需求，参考 &lt;a href="https://github.com/dm77/barcodescanner"&gt;barcodescanner&lt;/a&gt; 改的，希望能帮助到有生成二维码、扫描二维码、识别图片二维码等需求的猿友。修改幅度较大，也就没准备针对 &lt;a href="https://github.com/dm77/barcodescanner"&gt;barcodescanner&lt;/a&gt; 库提交PR。&lt;/p&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; 可定制各式各样的扫描框&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; 可定制全屏扫描或只识别扫描框区域内码&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; 可定制要识别的码的格式（详细用法查看 TestScanActivity 中的 onClick 方法）&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; 可以控制闪光灯，方便夜间使用&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; 可以设置用前置摄像头扫描&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; 可以二指缩放预览&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; 可以监听环境亮度，提示用户打开、关闭闪光灯&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; 识别到比较小的码时自动放大&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; ZXing 生成可自定义颜色、带 logo 的二维码&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; ZXing 生成一维码&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; ZXing 扫描条码、二维码&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; ZXing 识别图库中的条码、二维码图片&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; ZBar 扫描条码、二维码「已解决中文乱码问题」&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; ZBar 识别图库中的条码、二维码图片&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-常见问题" class="anchor" aria-hidden="true" href="#常见问题"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;常见问题&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-1部分手机无法扫描出结果扫描预览界面二维码被压缩" class="anchor" aria-hidden="true" href="#1部分手机无法扫描出结果扫描预览界面二维码被压缩"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.部分手机无法扫描出结果，扫描预览界面二维码被压缩&lt;/h4&gt;
&lt;p&gt;使用的时候将 Toolbar 或者其他 View 盖在 ZBarView 或者 ZXingView 的上面，让 ZBarView 或者 ZXingView 填充屏幕宽高。&lt;a href="https://github.com/bingoogolapple/BGAQRCode-Android/blob/master/zxingdemo/src/main/res/layout/activity_test_scan.xml"&gt;ZXing 布局文件参考&lt;/a&gt; &lt;a href="https://github.com/bingoogolapple/BGAQRCode-Android/blob/master/zbardemo/src/main/res/layout/activity_test_scan.xml"&gt;ZBar 布局文件参考&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-2出现黑屏" class="anchor" aria-hidden="true" href="#2出现黑屏"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2.出现黑屏&lt;/h4&gt;
&lt;p&gt;在自己项目里集成时记得在 onDestroy 方法中调用 mQRCodeView.onDestroy()，在 onStop 方法中调用 mQRCodeView.stopCamera()，否则会出现黑屏。如果没执行前面提到的这两个方法出现黑屏的话，那你就只能加上前面提到的两个方法后，重启手机后重新运行了&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-3gradle-依赖时提示找不到cnbingoogolapplebga-librarynamelatestversion" class="anchor" aria-hidden="true" href="#3gradle-依赖时提示找不到cnbingoogolapplebga-librarynamelatestversion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3.Gradle 依赖时提示找不到cn.bingoogolapple:bga-libraryname:「latestVersion」&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://bintray.com/bingoogolapple/maven/bga-qrcode-core/_latestVersion" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/d5e21a4916e48f2244db86f26a5b7d97fb1f41af/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f62696e676f6f676f6c6170706c652f6d6176656e2f6267612d7172636f64652d636f72652f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/bingoogolapple/maven/bga-qrcode-core/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;「latestVersion」指的是左边这个 Download 徽章后面的「数字」，请自行替换。&lt;em&gt;&lt;strong&gt;请不要再来问我「latestVersion」是什么了&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-效果图与示例-apk" class="anchor" aria-hidden="true" href="#效果图与示例-apk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;效果图与示例 apk&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8949716/17475203/5d788730-5d8c-11e6-836a-61e885e05453.gif"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8949716/17475203/5d788730-5d8c-11e6-836a-61e885e05453.gif" alt="zbar109" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8949716/17475222/76339bd4-5d8c-11e6-934f-96db6917f69b.gif"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8949716/17475222/76339bd4-5d8c-11e6-934f-96db6917f69b.gif" alt="zxingbarcode109" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8949716/17475235/8c03b2be-5d8c-11e6-931d-a50942a8ab75.gif"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8949716/17475235/8c03b2be-5d8c-11e6-931d-a50942a8ab75.gif" alt="zxingdecode109" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8949716/17475249/a551cc06-5d8c-11e6-85dc-4e2e07051cae.gif"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8949716/17475249/a551cc06-5d8c-11e6-85dc-4e2e07051cae.gif" alt="zxingqrcode109" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8949716/17475267/bd9c0a60-5d8c-11e6-8487-c732306debe2.gif"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8949716/17475267/bd9c0a60-5d8c-11e6-8487-c732306debe2.gif" alt="iqegg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;&lt;a href="http://fir.im/ZXingDemo" rel="nofollow"&gt;点击下载 ZXingDemo.apk&lt;/a&gt;或扫描下面的二维码安装&lt;/th&gt;
&lt;th align="center"&gt;&lt;a href="http://fir.im/ZBarDemo" rel="nofollow"&gt;点击下载 ZBarDemo.apk&lt;/a&gt;或扫描下面的二维码安装&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b866ef29f194bca6f8c81f720be33008658af985/687474703a2f2f62676173686172652e62696e676f6f676f6c6170706c652e636e2f7172636f64652f7a78696e6764656d6f61706b2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/b866ef29f194bca6f8c81f720be33008658af985/687474703a2f2f62676173686172652e62696e676f6f676f6c6170706c652e636e2f7172636f64652f7a78696e6764656d6f61706b2e706e67" alt="ZXingDemo apk文件二维码" data-canonical-src="http://bgashare.bingoogolapple.cn/qrcode/zxingdemoapk.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/7a8d5dfbee3deadc3564fe363c6084496285e415/687474703a2f2f62676173686172652e62696e676f6f676f6c6170706c652e636e2f7172636f64652f7a62617264656d6f61706b2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/7a8d5dfbee3deadc3564fe363c6084496285e415/687474703a2f2f62676173686172652e62696e676f6f676f6c6170706c652e636e2f7172636f64652f7a62617264656d6f61706b2e706e67" alt="ZBarDemo apk文件二维码" data-canonical-src="http://bgashare.bingoogolapple.cn/qrcode/zbardemoapk.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-gradle-依赖" class="anchor" aria-hidden="true" href="#gradle-依赖"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradle 依赖&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://bintray.com/bingoogolapple/maven/bga-qrcode-core/_latestVersion" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/d5e21a4916e48f2244db86f26a5b7d97fb1f41af/68747470733a2f2f6170692e62696e747261792e636f6d2f7061636b616765732f62696e676f6f676f6c6170706c652f6d6176656e2f6267612d7172636f64652d636f72652f696d616765732f646f776e6c6f61642e737667" alt="Download" data-canonical-src="https://api.bintray.com/packages/bingoogolapple/maven/bga-qrcode-core/images/download.svg" style="max-width:100%;"&gt; &lt;/a&gt;「latestVersion」指的是左边这个 Download 徽章后面的「数字」，请自行替换。&lt;em&gt;&lt;strong&gt;请不要再来问我「latestVersion」是什么了&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ZXing&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;dependencies {
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cn.bingoogolapple:bga-qrcode-zxing:latestVersion&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;ZBar&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-groovy"&gt;&lt;pre&gt;dependencies {
    implementation &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cn.bingoogolapple:bga-qrcode-zbar:latestVersion&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-布局文件" class="anchor" aria-hidden="true" href="#布局文件"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;布局文件&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;ZXing&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;cn&lt;/span&gt;.bingoogolapple.qrcode.zxing.ZXingView
    &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;id&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;@+id/zxingview&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;style&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;@style/MatchMatch&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;app&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;qrcv_animTime&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1000&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;app&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;qrcv_borderColor&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;@android:color/white&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;app&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;qrcv_borderSize&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1dp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;app&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;qrcv_cornerColor&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;@color/colorPrimaryDark&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;app&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;qrcv_cornerLength&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;20dp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;app&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;qrcv_cornerSize&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3dp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;app&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;qrcv_maskColor&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#33FFFFFF&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;app&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;qrcv_rectWidth&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;200dp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;app&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;qrcv_scanLineColor&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;@color/colorPrimaryDark&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;app&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;qrcv_scanLineSize&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1dp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;app&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;qrcv_topOffset&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;90dp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;ZBar&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-text-xml"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;cn&lt;/span&gt;.bingoogolapple.qrcode.zbar.ZBarView
    &lt;span class="pl-e"&gt;android&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;id&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;@+id/zbarview&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;style&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;@style/MatchMatch&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;app&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;qrcv_animTime&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1000&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;app&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;qrcv_borderColor&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;@android:color/white&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;app&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;qrcv_borderSize&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1dp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;app&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;qrcv_cornerColor&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;@color/colorPrimaryDark&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;app&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;qrcv_cornerLength&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;20dp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;app&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;qrcv_cornerSize&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3dp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;app&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;qrcv_isShowDefaultScanLineDrawable&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;true&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;app&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;qrcv_maskColor&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#33FFFFFF&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;app&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;qrcv_rectWidth&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;200dp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;app&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;qrcv_scanLineColor&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;@color/colorPrimaryDark&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-e"&gt;app&lt;/span&gt;&lt;span class="pl-e"&gt;:&lt;/span&gt;&lt;span class="pl-e"&gt;qrcv_topOffset&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;90dp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; /&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-自定义属性说明" class="anchor" aria-hidden="true" href="#自定义属性说明"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;自定义属性说明&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;属性名&lt;/th&gt;
&lt;th align="left"&gt;说明&lt;/th&gt;
&lt;th align="left"&gt;默认值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_topOffset&lt;/td&gt;
&lt;td align="left"&gt;扫描框距离 toolbar 底部的距离&lt;/td&gt;
&lt;td align="left"&gt;90dp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_cornerSize&lt;/td&gt;
&lt;td align="left"&gt;扫描框边角线的宽度&lt;/td&gt;
&lt;td align="left"&gt;3dp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_cornerLength&lt;/td&gt;
&lt;td align="left"&gt;扫描框边角线的长度&lt;/td&gt;
&lt;td align="left"&gt;20dp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_cornerColor&lt;/td&gt;
&lt;td align="left"&gt;扫描框边角线的颜色&lt;/td&gt;
&lt;td align="left"&gt;@android:color/white&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_cornerDisplayType&lt;/td&gt;
&lt;td align="left"&gt;扫描框边角线显示位置(相对于边框)，默认值为中间&lt;/td&gt;
&lt;td align="left"&gt;center&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_rectWidth&lt;/td&gt;
&lt;td align="left"&gt;扫描框的宽度&lt;/td&gt;
&lt;td align="left"&gt;200dp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_barcodeRectHeight&lt;/td&gt;
&lt;td align="left"&gt;条码扫样式描框的高度&lt;/td&gt;
&lt;td align="left"&gt;140dp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_maskColor&lt;/td&gt;
&lt;td align="left"&gt;除去扫描框，其余部分阴影颜色&lt;/td&gt;
&lt;td align="left"&gt;#33FFFFFF&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_scanLineSize&lt;/td&gt;
&lt;td align="left"&gt;扫描线的宽度&lt;/td&gt;
&lt;td align="left"&gt;1dp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_scanLineColor&lt;/td&gt;
&lt;td align="left"&gt;扫描线的颜色「扫描线和默认的扫描线图片的颜色」&lt;/td&gt;
&lt;td align="left"&gt;@android:color/white&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_scanLineMargin&lt;/td&gt;
&lt;td align="left"&gt;扫描线距离上下或者左右边框的间距&lt;/td&gt;
&lt;td align="left"&gt;0dp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_isShowDefaultScanLineDrawable&lt;/td&gt;
&lt;td align="left"&gt;是否显示默认的图片扫描线「设置该属性后 qrcv_scanLineSize 将失效，可以通过 qrcv_scanLineColor 设置扫描线的颜色，避免让你公司的UI单独给你出特定颜色的扫描线图片」&lt;/td&gt;
&lt;td align="left"&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_customScanLineDrawable&lt;/td&gt;
&lt;td align="left"&gt;扫描线的图片资源「默认的扫描线图片样式不能满足你的需求时使用，设置该属性后 qrcv_isShowDefaultScanLineDrawable、qrcv_scanLineSize、qrcv_scanLineColor 将失效」&lt;/td&gt;
&lt;td align="left"&gt;null&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_borderSize&lt;/td&gt;
&lt;td align="left"&gt;扫描边框的宽度&lt;/td&gt;
&lt;td align="left"&gt;1dp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_borderColor&lt;/td&gt;
&lt;td align="left"&gt;扫描边框的颜色&lt;/td&gt;
&lt;td align="left"&gt;@android:color/white&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_animTime&lt;/td&gt;
&lt;td align="left"&gt;扫描线从顶部移动到底部的动画时间「单位为毫秒」&lt;/td&gt;
&lt;td align="left"&gt;1000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_isCenterVertical（已废弃，如果要垂直居中用 qrcv_verticalBias="0.5"来代替）&lt;/td&gt;
&lt;td align="left"&gt;扫描框是否垂直居中，该属性为true时会忽略 qrcv_topOffset 属性&lt;/td&gt;
&lt;td align="left"&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_verticalBias&lt;/td&gt;
&lt;td align="left"&gt;扫描框中心点在屏幕垂直方向的比例，当设置此值时，会忽略 qrcv_topOffset 属性&lt;/td&gt;
&lt;td align="left"&gt;-1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_toolbarHeight&lt;/td&gt;
&lt;td align="left"&gt;Toolbar 的高度，通过该属性来修正由 Toolbar 导致扫描框在垂直方向上的偏差&lt;/td&gt;
&lt;td align="left"&gt;0dp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_isBarcode&lt;/td&gt;
&lt;td align="left"&gt;扫描框的样式是否为扫条形码样式&lt;/td&gt;
&lt;td align="left"&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_tipText&lt;/td&gt;
&lt;td align="left"&gt;提示文案&lt;/td&gt;
&lt;td align="left"&gt;null&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_tipTextSize&lt;/td&gt;
&lt;td align="left"&gt;提示文案字体大小&lt;/td&gt;
&lt;td align="left"&gt;14sp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_tipTextColor&lt;/td&gt;
&lt;td align="left"&gt;提示文案颜色&lt;/td&gt;
&lt;td align="left"&gt;@android:color/white&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_isTipTextBelowRect&lt;/td&gt;
&lt;td align="left"&gt;提示文案是否在扫描框的底部&lt;/td&gt;
&lt;td align="left"&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_tipTextMargin&lt;/td&gt;
&lt;td align="left"&gt;提示文案与扫描框之间的间距&lt;/td&gt;
&lt;td align="left"&gt;20dp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_isShowTipTextAsSingleLine&lt;/td&gt;
&lt;td align="left"&gt;是否把提示文案作为单行显示&lt;/td&gt;
&lt;td align="left"&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_isShowTipBackground&lt;/td&gt;
&lt;td align="left"&gt;是否显示提示文案的背景&lt;/td&gt;
&lt;td align="left"&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_tipBackgroundColor&lt;/td&gt;
&lt;td align="left"&gt;提示文案的背景色&lt;/td&gt;
&lt;td align="left"&gt;#22000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_isScanLineReverse&lt;/td&gt;
&lt;td align="left"&gt;扫描线是否来回移动&lt;/td&gt;
&lt;td align="left"&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_isShowDefaultGridScanLineDrawable&lt;/td&gt;
&lt;td align="left"&gt;是否显示默认的网格图片扫描线&lt;/td&gt;
&lt;td align="left"&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_customGridScanLineDrawable&lt;/td&gt;
&lt;td align="left"&gt;扫描线的网格图片资源&lt;/td&gt;
&lt;td align="left"&gt;nulll&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_isOnlyDecodeScanBoxArea&lt;/td&gt;
&lt;td align="left"&gt;是否只识别扫描框中的码&lt;/td&gt;
&lt;td align="left"&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_isShowLocationPoint&lt;/td&gt;
&lt;td align="left"&gt;是否显示定位点&lt;/td&gt;
&lt;td align="left"&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;qrcv_isAutoZoom&lt;/td&gt;
&lt;td align="left"&gt;码太小时是否自动缩放&lt;/td&gt;
&lt;td align="left"&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-接口说明" class="anchor" aria-hidden="true" href="#接口说明"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;接口说明&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;QRCodeView&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * ZBarView 设置识别的格式。详细用法请看 zbardemo 的 TestScanActivity 中的 onClick 方法&lt;/span&gt;
&lt;span class="pl-c"&gt; *&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; barcodeType 识别的格式&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; formatList  barcodeType 为 BarcdeType.CUSTOM 时，必须指定该值&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; setType(&lt;span class="pl-smi"&gt;BarcodeType&lt;/span&gt; barcodeType, &lt;span class="pl-k"&gt;List&amp;lt;&lt;span class="pl-smi"&gt;BarcodeFormat&lt;/span&gt;&amp;gt;&lt;/span&gt; formatList)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * ZXingView 设置识别的格式。详细用法请看 zxingdemo TestScanActivity 中的 onClick 方法&lt;/span&gt;
&lt;span class="pl-c"&gt; *&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; barcodeType 识别的格式&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; hintMap     barcodeType 为 BarcodeType.CUSTOM 时，必须指定该值&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; setType(&lt;span class="pl-smi"&gt;BarcodeType&lt;/span&gt; barcodeType, &lt;span class="pl-k"&gt;Map&amp;lt;&lt;span class="pl-smi"&gt;DecodeHintType&lt;/span&gt;, &lt;span class="pl-smi"&gt;Object&lt;/span&gt;&amp;gt;&lt;/span&gt; hintMap)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 设置扫描二维码的代理&lt;/span&gt;
&lt;span class="pl-c"&gt; *&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; delegate 扫描二维码的代理&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; setDelegate(&lt;span class="pl-smi"&gt;Delegate&lt;/span&gt; delegate)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 显示扫描框&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; showScanRect()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 隐藏扫描框&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; hiddenScanRect()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 打开后置摄像头开始预览，但是并未开始识别&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; startCamera()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 打开指定摄像头开始预览，但是并未开始识别&lt;/span&gt;
&lt;span class="pl-c"&gt; *&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; cameraFacing  Camera.CameraInfo.CAMERA_FACING_BACK or Camera.CameraInfo.CAMERA_FACING_FRONT&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; startCamera(&lt;span class="pl-k"&gt;int&lt;/span&gt; cameraFacing)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 关闭摄像头预览，并且隐藏扫描框&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; stopCamera()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 开始识别&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; startSpot()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 停止识别&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; stopSpot()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 停止识别，并且隐藏扫描框&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; stopSpotAndHiddenRect()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 显示扫描框，并开始识别&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; startSpotAndShowRect()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 打开闪光灯&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; openFlashlight()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 关闭散光灯&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; closeFlashlight()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 解析本地图片二维码。返回二维码图片里的内容 或 null&lt;/span&gt;
&lt;span class="pl-c"&gt; *&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; picturePath 要解析的二维码图片本地路径&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; decodeQRCode(&lt;span class="pl-smi"&gt;String&lt;/span&gt; picturePath)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 解析 Bitmap 二维码。返回二维码图片里的内容 或 null&lt;/span&gt;
&lt;span class="pl-c"&gt; *&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; bitmap 要解析的二维码图片&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;void&lt;/span&gt; decodeQRCode(&lt;span class="pl-smi"&gt;Bitmap&lt;/span&gt; bitmap)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;QRCodeView.Delegate   扫描二维码的代理&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 处理扫描结果&lt;/span&gt;
&lt;span class="pl-c"&gt; *&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; result 摄像头扫码时只要回调了该方法 result 就一定有值，不会为 null。解析本地图片或 Bitmap 时 result 可能为 null&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; onScanQRCodeSuccess(&lt;span class="pl-smi"&gt;String&lt;/span&gt; result)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 摄像头环境亮度发生变化&lt;/span&gt;
&lt;span class="pl-c"&gt; *&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; isDark 是否变暗&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; onCameraAmbientBrightnessChanged(&lt;span class="pl-k"&gt;boolean&lt;/span&gt; isDark);

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 处理打开相机出错&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;void&lt;/span&gt; onScanQRCodeOpenCameraError()&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;QRCodeEncoder  创建二维码图片。几个重载方法都是耗时操作，请在子线程中调用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-java"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 同步创建黑色前景色、白色背景色的二维码图片。该方法是耗时操作，请在子线程中调用。&lt;/span&gt;
&lt;span class="pl-c"&gt; *&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; content 要生成的二维码图片内容&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; size    图片宽高，单位为px&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-smi"&gt;Bitmap&lt;/span&gt; syncEncodeQRCode(&lt;span class="pl-smi"&gt;String&lt;/span&gt; content, &lt;span class="pl-k"&gt;int&lt;/span&gt; size)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 同步创建指定前景色、白色背景色的二维码图片。该方法是耗时操作，请在子线程中调用。&lt;/span&gt;
&lt;span class="pl-c"&gt; *&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; content         要生成的二维码图片内容&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; size            图片宽高，单位为px&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; foregroundColor 二维码图片的前景色&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-smi"&gt;Bitmap&lt;/span&gt; syncEncodeQRCode(&lt;span class="pl-smi"&gt;String&lt;/span&gt; content, &lt;span class="pl-k"&gt;int&lt;/span&gt; size, &lt;span class="pl-k"&gt;int&lt;/span&gt; foregroundColor)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 同步创建指定前景色、白色背景色、带logo的二维码图片。该方法是耗时操作，请在子线程中调用。&lt;/span&gt;
&lt;span class="pl-c"&gt; *&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; content         要生成的二维码图片内容&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; size            图片宽高，单位为px&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; foregroundColor 二维码图片的前景色&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; logo            二维码图片的logo&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-smi"&gt;Bitmap&lt;/span&gt; syncEncodeQRCode(&lt;span class="pl-smi"&gt;String&lt;/span&gt; content, &lt;span class="pl-k"&gt;int&lt;/span&gt; size, &lt;span class="pl-k"&gt;int&lt;/span&gt; foregroundColor, &lt;span class="pl-smi"&gt;Bitmap&lt;/span&gt; logo)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 同步创建指定前景色、指定背景色、带logo的二维码图片。该方法是耗时操作，请在子线程中调用。&lt;/span&gt;
&lt;span class="pl-c"&gt; *&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; content         要生成的二维码图片内容&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; size            图片宽高，单位为px&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; foregroundColor 二维码图片的前景色&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; backgroundColor 二维码图片的背景色&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; logo            二维码图片的logo&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-smi"&gt;Bitmap&lt;/span&gt; syncEncodeQRCode(&lt;span class="pl-smi"&gt;String&lt;/span&gt; content, &lt;span class="pl-k"&gt;int&lt;/span&gt; size, &lt;span class="pl-k"&gt;int&lt;/span&gt; foregroundColor, &lt;span class="pl-k"&gt;int&lt;/span&gt; backgroundColor, &lt;span class="pl-smi"&gt;Bitmap&lt;/span&gt; logo)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt; * 同步创建条形码图片&lt;/span&gt;
&lt;span class="pl-c"&gt; *&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; content  要生成条形码包含的内容&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; width    条形码的宽度，单位px&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; height   条形码的高度，单位px&lt;/span&gt;
&lt;span class="pl-c"&gt; * &lt;span class="pl-k"&gt;@param&lt;/span&gt; textSize 字体大小，单位px，如果等于0则不在底部绘制文字&lt;/span&gt;
&lt;span class="pl-c"&gt; &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-smi"&gt;Bitmap&lt;/span&gt; syncEncodeBarcode(&lt;span class="pl-smi"&gt;String&lt;/span&gt; content, &lt;span class="pl-k"&gt;int&lt;/span&gt; width, &lt;span class="pl-k"&gt;int&lt;/span&gt; height, &lt;span class="pl-k"&gt;int&lt;/span&gt; textSize)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-详细用法请查看zbardemofeet" class="anchor" aria-hidden="true" href="#详细用法请查看zbardemofeet"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;详细用法请查看&lt;a href="https://github.com/bingoogolapple/BGAQRCode-Android/tree/master/zbardemo"&gt;ZBarDemo&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="feet" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f43e.png"&gt;🐾&lt;/g-emoji&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;a id="user-content-详细用法请查看zxingdemofeet" class="anchor" aria-hidden="true" href="#详细用法请查看zxingdemofeet"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;详细用法请查看&lt;a href="https://github.com/bingoogolapple/BGAQRCode-Android/tree/master/zxingdemo"&gt;ZXingDemo&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="feet" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f43e.png"&gt;🐾&lt;/g-emoji&gt;&lt;/h4&gt;
&lt;h2&gt;&lt;a id="user-content-关于我" class="anchor" aria-hidden="true" href="#关于我"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;关于我&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;个人主页&lt;/th&gt;
&lt;th&gt;邮箱&lt;/th&gt;
&lt;th&gt;BGA系列开源库QQ群&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://www.bingoogolapple.cn" rel="nofollow"&gt;bingoogolapple.cn&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="mailto:bingoogolapple@gmail.com"&gt;&lt;/a&gt;&lt;a href="mailto:bingoogolapple@gmail.com"&gt;bingoogolapple@gmail.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/231ef81df9807491048af05fd8d21a83527d93d7/687474703a2f2f62676173686172652e62696e676f6f676f6c6170706c652e636e2f4247415f434f44455f434c55422e706e673f696d61676556696577322f322f772f323030"&gt;&lt;img src="https://camo.githubusercontent.com/231ef81df9807491048af05fd8d21a83527d93d7/687474703a2f2f62676173686172652e62696e676f6f676f6c6170706c652e636e2f4247415f434f44455f434c55422e706e673f696d61676556696577322f322f772f323030" alt="BGA_CODE_CLUB" data-canonical-src="http://bgashare.bingoogolapple.cn/BGA_CODE_CLUB.png?imageView2/2/w/200" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-打赏支持" class="anchor" aria-hidden="true" href="#打赏支持"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;打赏支持&lt;/h2&gt;
&lt;p&gt;如果您觉得 BGA 系列开源库帮你节省了大量的开发时间，请扫描下方的二维码随意打赏，要是能打赏个 10.24 &lt;g-emoji class="g-emoji" alias="monkey_face" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f435.png"&gt;🐵&lt;/g-emoji&gt;就太&lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;了。您的支持将鼓励我继续创作&lt;img class="emoji" title=":octocat:" alt=":octocat:" src="https://github.githubassets.com/images/icons/emoji/octocat.png" height="20" width="20" align="absmiddle"&gt;&lt;/p&gt;
&lt;p&gt;如果您目前正打算购买通往墙外的梯子，可以使用我的邀请码「YFQ9Q3B」购买 &lt;a href="https://github.com/getlantern/forum"&gt;Lantern&lt;/a&gt;，双方都赠送三个月的专业版使用时间&lt;g-emoji class="g-emoji" alias="beers" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f37b.png"&gt;🍻&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/04d89bdd5cab8acd6f93ad2fc9b4751952718b83/687474703a2f2f62676173686172652e62696e676f6f676f6c6170706c652e636e2f6267615f7061792e706e673f696d61676556696577322f322f772f343530"&gt;&lt;img src="https://camo.githubusercontent.com/04d89bdd5cab8acd6f93ad2fc9b4751952718b83/687474703a2f2f62676173686172652e62696e676f6f676f6c6170706c652e636e2f6267615f7061792e706e673f696d61676556696577322f322f772f343530" width="450" data-canonical-src="http://bgashare.bingoogolapple.cn/bga_pay.png?imageView2/2/w/450" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Copyright (C) 2012 The Android Open Source Project
Copyright 2014 bingoogolapple

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>bingoogolapple</author><guid isPermaLink="false">https://github.com/bingoogolapple/BGAQRCode-Android</guid><pubDate>Sun, 10 Nov 2019 00:25:00 GMT</pubDate></item></channel></rss>