<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: C, This week</title><link>https://github.com/trending/c?since=weekly</link><description>The top repositories on GitHub for c, measured weekly</description><pubDate>Mon, 25 Nov 2019 01:06:59 GMT</pubDate><lastBuildDate>Mon, 25 Nov 2019 01:06:59 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>zlgopen/awtk #1 in C, This week</title><link>https://github.com/zlgopen/awtk</link><description>&lt;p&gt;&lt;i&gt;AWTK = Toolkit AnyWhere(为嵌入式、手机和PC打造的通用GUI系统)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-awtk--toolkit-anywhere" class="anchor" aria-hidden="true" href="#awtk--toolkit-anywhere"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AWTK = Toolkit AnyWhere&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/images/zlg_adv.jpeg"&gt;&lt;img src="docs/images/zlg_adv.jpeg" alt="zlg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-一介绍" class="anchor" aria-hidden="true" href="#一介绍"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;一、介绍&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk"&gt;AWTK&lt;/a&gt; 全称 Toolkit AnyWhere，是 &lt;a href="http://www.zlg.cn/" rel="nofollow"&gt;ZLG&lt;/a&gt; 开发的开源 GUI 引擎，旨在为嵌入式系统、WEB、各种小程序、手机和 PC 打造的通用 GUI 引擎，为用户提供一个功能强大、高效可靠、简单易用、可轻松做出炫酷效果的 GUI 引擎。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;欢迎广大开发者一起参与开发：&lt;a href="docs/awtk_ecology.md"&gt;生态共建计划&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-awtk-寓意有两个方面" class="anchor" aria-hidden="true" href="#awtk-寓意有两个方面"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/zlgopen/awtk"&gt;AWTK&lt;/a&gt; 寓意有两个方面：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Toolkit AnyWhere。&lt;/li&gt;
&lt;li&gt;ZLG 物联网操作系统 AWorks 内置 GUI。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-awtk-源码仓库" class="anchor" aria-hidden="true" href="#awtk-源码仓库"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/zlgopen/awtk"&gt;AWTK&lt;/a&gt; 源码仓库：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;主源码仓库：&lt;a href="https://github.com/zlgopen/awtk"&gt;https://github.com/zlgopen/awtk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;镜像源码仓库：&lt;a href="https://gitee.com/zlgopen/awtk" rel="nofollow"&gt;https://gitee.com/zlgopen/awtk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;稳定版整合包：&lt;a href="https://pan.baidu.com/s/1_oRgj67M-I4kivk-YzwFWA" rel="nofollow"&gt;https://pan.baidu.com/s/1_oRgj67M-I4kivk-YzwFWA&lt;/a&gt;   提取码: 1cmi&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-运行效果截图" class="anchor" aria-hidden="true" href="#运行效果截图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;运行效果截图：&lt;/h4&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/images/cleanair_main.png"&gt;&lt;img src="docs/images/cleanair_main.png" alt="CleanAir-Demo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/images/meter_main.png"&gt;&lt;img src="docs/images/meter_main.png" alt="Meter-Demo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/images/chart_main.png"&gt;&lt;img src="docs/images/chart_main.png" alt="Chart-Demo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/images/musicplayer_main.png"&gt;&lt;img src="docs/images/musicplayer_main.png" alt="MusicPlayer-Demo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-二最终目标" class="anchor" aria-hidden="true" href="#二最终目标"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;二、最终目标：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;支持开发嵌入式应用程序。&lt;/li&gt;
&lt;li&gt;支持开发 Linux 应用程序。&lt;/li&gt;
&lt;li&gt;支持开发 MacOS 应用程序。&lt;/li&gt;
&lt;li&gt;支持开发 Windows 应用程序。&lt;/li&gt;
&lt;li&gt;支持开发 Web APP。&lt;/li&gt;
&lt;li&gt;支持开发 Android 应用程序。&lt;/li&gt;
&lt;li&gt;支持开发 iOS 应用程序。&lt;/li&gt;
&lt;li&gt;支持开发微信小程序。&lt;/li&gt;
&lt;li&gt;支持开发支付宝小程序。&lt;/li&gt;
&lt;li&gt;支持开发百度小程序。&lt;/li&gt;
&lt;li&gt;支持开发 2D 小游戏。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-三主要特色" class="anchor" aria-hidden="true" href="#三主要特色"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;三、主要特色&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-1-跨平台" class="anchor" aria-hidden="true" href="#1-跨平台"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. 跨平台&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk"&gt;AWTK&lt;/a&gt; 是跨平台的，这有两个方面的意思：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;AWTK 本身是跨平台的。目前支持的平台有 ZLG AWorks、Windows、Linux、MacOS、嵌入式 Linux、Android、Web 和嵌入式裸系统，可以轻松的移植到各种 RTOS 上。AWTK 以后也可以运行在各种小程序和 iOS 等平台上运行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AWTK 同时还提供了一套跨平台的基础工具库。其中包括链表、数组、字符串 (UTF8 和 widechar)，事件发射器、值、对象、文件系统、互斥锁和线程、表达式和字符串解析等等，让你用 AWTK 开发的应用程序可以真正跨平台运行。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-2-高效" class="anchor" aria-hidden="true" href="#2-高效"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. 高效&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk"&gt;AWTK&lt;/a&gt; 通过一系列的手段保证 AWTK 应用程序高效运行：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过脏矩算法只更新变化的部分。&lt;/li&gt;
&lt;li&gt;支持 3 FrameBuffer 让界面以最高帧率运行 （可选）。&lt;/li&gt;
&lt;li&gt;UI 描述文件和主题文件使用高效的二进制格式，解析在瞬间完成。&lt;/li&gt;
&lt;li&gt;支持各种 GPU 加速接口。如 OpenGL、DirectX、Vulkan 和 Metal 等。&lt;/li&gt;
&lt;li&gt;支持嵌入式平台的各种 2D 加速接口。目前 STM32 的 DMA2D 和 NXP 的 PXP 接口，厂家可以轻松扩展自己的加速接口。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-3-稳定" class="anchor" aria-hidden="true" href="#3-稳定"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. 稳定&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk"&gt;AWTK&lt;/a&gt; 通过下列方式极力让代码稳定可靠：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 cppcheck 和 facebook infer 进行静态检查。&lt;/li&gt;
&lt;li&gt;使用 valgrind 进行动态内存检查。&lt;/li&gt;
&lt;li&gt;近两万行的单元测试代码。&lt;/li&gt;
&lt;li&gt;ZLG 强大 GUI 团队的支持。&lt;/li&gt;
&lt;li&gt;经过多个实际项目验证。&lt;/li&gt;
&lt;li&gt;多平台 / 多编译器验证。&lt;/li&gt;
&lt;li&gt;优秀的架构设计。&lt;/li&gt;
&lt;li&gt;Code Review。&lt;/li&gt;
&lt;li&gt;手工测试。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-4-强大" class="anchor" aria-hidden="true" href="#4-强大"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4. 强大&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;丰富的控件 （持续增加中）。&lt;/li&gt;
&lt;li&gt;支持各种图片格式 (png/jpg/gif/svg)。&lt;/li&gt;
&lt;li&gt;支持各种字体格式 （点阵和矢量）。&lt;/li&gt;
&lt;li&gt;支持窗口动画&lt;/li&gt;
&lt;li&gt;支持控件动画&lt;/li&gt;
&lt;li&gt;支持高清屏。&lt;/li&gt;
&lt;li&gt;支持界面描述文件。&lt;/li&gt;
&lt;li&gt;支持主题描述文件。&lt;/li&gt;
&lt;li&gt;支持控件布局策略。&lt;/li&gt;
&lt;li&gt;支持对话框高亮策略。&lt;/li&gt;
&lt;li&gt;丰富的辅助工具。&lt;/li&gt;
&lt;li&gt;支持从低端的 Cortex M3 到各种高端 CPU。&lt;/li&gt;
&lt;li&gt;支持无文件系统和自定义的文件系统。&lt;/li&gt;
&lt;li&gt;支持裸系统和 RTOS。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-5-易用" class="anchor" aria-hidden="true" href="#5-易用"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5. 易用&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;大量的示例代码。&lt;/li&gt;
&lt;li&gt;完善的 API 文档和使用文档。&lt;/li&gt;
&lt;li&gt;ZLG 强大的技术支持团队。&lt;/li&gt;
&lt;li&gt;用 AWTK 本身开发的界面编辑器 （开发中）。&lt;/li&gt;
&lt;li&gt;声明式的界面描述语言。一行代码启用控件动画，启用窗口动画，显示图片 (png/jpg/svg/gif)。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-6-高度扩展性" class="anchor" aria-hidden="true" href="#6-高度扩展性"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;6. 高度扩展性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;可以扩展自己的控件。&lt;/li&gt;
&lt;li&gt;可以扩展自己的动画。&lt;/li&gt;
&lt;li&gt;可以实现自己的主循环。&lt;/li&gt;
&lt;li&gt;可以扩展自己的软键盘。&lt;/li&gt;
&lt;li&gt;可以扩展自己的图片加载器。&lt;/li&gt;
&lt;li&gt;可以扩展自己的字体加载器。&lt;/li&gt;
&lt;li&gt;可以扩展自己的输入法引擎。&lt;/li&gt;
&lt;li&gt;可以扩展自己的控件布局算法。&lt;/li&gt;
&lt;li&gt;可以扩展自己的对话框高亮策略。&lt;/li&gt;
&lt;li&gt;可以实现自己的 LCD 接口。&lt;/li&gt;
&lt;li&gt;可以扩展自己的矢量引擎 （如使用 skia/cairo)。&lt;/li&gt;
&lt;li&gt;所有扩展组件和内置组件具有相同的待遇。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-7-多种开发语言" class="anchor" aria-hidden="true" href="#7-多种开发语言"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;7. 多种开发语言&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk"&gt;AWTK&lt;/a&gt; 本身是用 C 语言开发的，可以通过 IDL 生成各种脚本语言的绑定。生成的绑定代码不是简单的把 C 语言的 API 映射到脚本语言，而是生成脚本语言原生代码风格的 API。目前支持以下语言 （以后根据需要增加）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C&lt;/li&gt;
&lt;li&gt;Lua&lt;/li&gt;
&lt;li&gt;Javascript on jerryscript&lt;/li&gt;
&lt;li&gt;Javascript on nodejs&lt;/li&gt;
&lt;li&gt;Javascript on quickjs&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-8-国际化" class="anchor" aria-hidden="true" href="#8-国际化"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;8. 国际化&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;支持 Unicode。&lt;/li&gt;
&lt;li&gt;支持输入法。&lt;/li&gt;
&lt;li&gt;支持字符串翻译 （实时生效）。&lt;/li&gt;
&lt;li&gt;支持图片翻译 （实时生效）。&lt;/li&gt;
&lt;li&gt;文字双向排版 （计划中）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-9-开放源码免费商用-lgpl" class="anchor" aria-hidden="true" href="#9-开放源码免费商用-lgpl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;9. 开放源码，免费商用 (LGPL)。&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-四模拟运行" class="anchor" aria-hidden="true" href="#四模拟运行"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;四、模拟运行：&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-mac" class="anchor" aria-hidden="true" href="#mac"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mac&lt;/h3&gt;
&lt;p&gt;如果没有安装 scons 和 sdl2，请在终端运行下面的命令 （假定已安装 brew)：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install scons sdl2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编译运行 （在终端下，进入 awtk 所在的目录，并运行下列命令）：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;scons
./bin/demoui
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-ubuntu-版本-16" class="anchor" aria-hidden="true" href="#ubuntu-版本-16"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ubuntu （版本 &amp;gt;=16)&lt;/h3&gt;
&lt;p&gt;如果没有安装 scons 和依赖的软件包，请在终端运行下面的命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install scons libsndio-dev libgtk-3-dev libglu1-mesa libglu1-mesa-dev libgl1-mesa-glx libgl1-mesa-dev git vim clang-format
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编译运行 （在终端下，进入 awtk 所在的目录，并运行下列命令）：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;scons
./bin/demoui
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;在 Ubuntu 14 上无法启动，请参考 &lt;a href="docs/faq.md"&gt;FAQ&lt;/a&gt; 修改。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h3&gt;
&lt;p&gt;（请先安装 python，scons 和 Visual Studio C++（版本 &amp;gt;=2017)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果没有安装 pywin32，请 pip 安装：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;pip install pywin32
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编译运行 （在命令行模式下，进入 awtk 所在的目录，并运行下列命令）：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;scons
bin\demoui
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;如果没有安装 PIL，请用 pip 安装。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;pip install Pillow
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-五在线演示" class="anchor" aria-hidden="true" href="#五在线演示"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;五、在线演示&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://zlgawtk.bceapp.com/awtk/demos/Chart-Demo/index.html" rel="nofollow"&gt;图表演示&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://zlgawtk.bceapp.com/awtk/demos/Meter-Demo/index.html" rel="nofollow"&gt;仪表演示&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://zlgawtk.bceapp.com/awtk/demos/SmartWatch-Demo/index.html" rel="nofollow"&gt;智能手表演示&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://zlgawtk.bceapp.com/awtk/demos/CleanAir-Demo/index.html" rel="nofollow"&gt;清风系统演示&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://zlgawtk.bceapp.com/awtk/demos/MusicPlayer-Demo/index.html" rel="nofollow"&gt;音乐播放器演示&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://zlgawtk.bceapp.com/awtk/demos/demoui/index.html" rel="nofollow"&gt;基本控件在线演示&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-六各个平台的移植" class="anchor" aria-hidden="true" href="#六各个平台的移植"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;六、各个平台的移植&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/awtk_ecology.md"&gt;详见 AWTK 生态共建计划&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-七各语言的绑定" class="anchor" aria-hidden="true" href="#七各语言的绑定"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;七、各语言的绑定&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-binding"&gt;AWTK 绑定代码生成器&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-lua"&gt;LUA 绑定&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-quickjs"&gt;JS 绑定之 QuickJS&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-jerryscript"&gt;JS 绑定之 JerryScript&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-八相关工程" class="anchor" aria-hidden="true" href="#八相关工程"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;八、相关工程&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-hello"&gt;模板工程&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-c-demos"&gt;C 示例代码&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-examples"&gt;精彩示例&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-mvvm"&gt;AWTK-MVVM&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/CUITzhaoqi/awtk-qr"&gt;扩展控件实例：二维码&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/longyuwlz/awtk_slider_circle"&gt;扩展控件实例：圆形滑块&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-九文档" class="anchor" aria-hidden="true" href="#九文档"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;九、文档&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/README.md"&gt;开发文档&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/changes.md"&gt;最新动态&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="TODO.md"&gt;任务完成情况&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-docs"&gt;入门指南与手册&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-十生态共建计划" class="anchor" aria-hidden="true" href="#十生态共建计划"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;十、生态共建计划&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/awtk_ecology.md"&gt;生态共建计划&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;深度合作伙伴&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://www.nxp.com" rel="nofollow"&gt;&lt;img src="docs/images/logo_nxp.svg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;　&lt;a href="http://www.anyka.com" rel="nofollow"&gt;&lt;img src="docs/images/logo_anyka.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;　&lt;a href="http://www.ingenic.com.cn" rel="nofollow"&gt;&lt;img src="docs/images/logo_ingenic.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;　&lt;a href="http://www.mindmotion.com.cn" rel="nofollow"&gt;&lt;img src="docs/images/logo_mindmotion.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>zlgopen</author><guid isPermaLink="false">https://github.com/zlgopen/awtk</guid><pubDate>Mon, 25 Nov 2019 00:01:00 GMT</pubDate></item><item><title>robertdavidgraham/masscan #2 in C, This week</title><link>https://github.com/robertdavidgraham/masscan</link><description>&lt;p&gt;&lt;i&gt;TCP port scanner, spews SYN packets asynchronously, scanning entire Internet in under 5 minutes.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/robertdavidgraham/masscan.svg" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8bc4e9187fc331ef3f2de95bc8e43f92db64e448/68747470733a2f2f7472617669732d63692e6f72672f726f62657274646176696467726168616d2f6d61737363616e2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/robertdavidgraham/masscan.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-masscan-mass-ip-port-scanner" class="anchor" aria-hidden="true" href="#masscan-mass-ip-port-scanner"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MASSCAN: Mass IP port scanner&lt;/h1&gt;
&lt;p&gt;This is an Internet-scale port scanner. It can scan the entire Internet
in under 6 minutes, transmitting 10 million packets per second,
from a single machine.&lt;/p&gt;
&lt;p&gt;It's input/output is similar to &lt;code&gt;nmap&lt;/code&gt;, the most famous port scanner.
When in doubt, try one of those features.&lt;/p&gt;
&lt;p&gt;Internally, it uses asynchronous tranmissions, similar to port scanners
like  &lt;code&gt;scanrand&lt;/code&gt;, &lt;code&gt;unicornscan&lt;/code&gt;, and &lt;code&gt;ZMap&lt;/code&gt;. It's more flexible, allowing
arbitrary port and address ranges.&lt;/p&gt;
&lt;p&gt;NOTE: masscan uses a its own &lt;strong&gt;custom TCP/IP stack&lt;/strong&gt;. Anything other than
simple port scans may cause conflict with the local TCP/IP stack. This means you
need to either the &lt;code&gt;--src-ip&lt;/code&gt; option to run from a different IP address, or
use &lt;code&gt;--src-port&lt;/code&gt; to configure which source ports masscan uses, then also
configure the internal firewall (like &lt;code&gt;pf&lt;/code&gt; or &lt;code&gt;iptables&lt;/code&gt;) to firewall those ports
from the rest of the operating system.&lt;/p&gt;
&lt;p&gt;This tool is free, but consider contributing money to its developement:
Bitcoin wallet address: 1MASSCANaHUiyTtR3bJ2sLGuMw5kDBaj4T&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h1&gt;
&lt;p&gt;On Debian/Ubuntu, it goes something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo apt-get install git gcc make libpcap-dev
$ git clone https://github.com/robertdavidgraham/masscan
$ cd masscan
$ make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This puts the program in the &lt;code&gt;masscan/bin&lt;/code&gt; subdirectory. You'll have to
manually copy it to something like &lt;code&gt;/usr/local/bin&lt;/code&gt; if you want to
install it elsewhere on the system.&lt;/p&gt;
&lt;p&gt;The source consists of a lot of small files, so building goes a lot faster
by using the multi-threaded build:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make -j
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;While Linux is the primary target platform, the code runs well on many other
systems. Here's some additional build info:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows w/ Visual Studio: use the VS10 project&lt;/li&gt;
&lt;li&gt;Windows w/ MingGW: just type &lt;code&gt;make&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Windows w/ cygwin: won't work&lt;/li&gt;
&lt;li&gt;Mac OS X /w XCode: use the XCode4 project&lt;/li&gt;
&lt;li&gt;Mac OS X /w cmdline: just type &lt;code&gt;make&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;FreeBSD: type &lt;code&gt;gmake&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;other: try just compiling all the files together&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-pf_ring" class="anchor" aria-hidden="true" href="#pf_ring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PF_RING&lt;/h2&gt;
&lt;p&gt;To get beyond 2 million packets/second, you need an Intel 10-gbps Ethernet
adapter and a special driver known as &lt;a href="http://www.ntop.org/products/packet-capture/pf_ring/pf_ring-zc-zero-copy/" rel="nofollow"&gt;"PF_RING ZC" from ntop&lt;/a&gt;. Masscan doesn't need to be rebuilt in order to use PF_RING. To use PF_RING,
you need to build the following components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;libpfring.so&lt;/code&gt; (installed in /usr/lib/libpfring.so)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pf_ring.ko&lt;/code&gt; (their kernel driver)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ixgbe.ko&lt;/code&gt; (their version of the Intel 10-gbps Ethernet driver)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You don't need to build their version of &lt;code&gt;libpcap.so&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When Masscan detects that an adapter is named something like &lt;code&gt;zc:enp1s0&lt;/code&gt; instead
of something like &lt;code&gt;enp1s0&lt;/code&gt;, it'll automatically switch to PF_RING ZC mode.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-regression-testing" class="anchor" aria-hidden="true" href="#regression-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Regression testing&lt;/h2&gt;
&lt;p&gt;The project contains a built-in self-test:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make regress
bin/masscan --regress
selftest: success!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This tests a lot of tricky bits of the code. You should do this after building.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-performance-testing" class="anchor" aria-hidden="true" href="#performance-testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance testing&lt;/h2&gt;
&lt;p&gt;To test performance, run something like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ bin/masscan 0.0.0.0/4 -p80 --rate 100000000 --router-mac 66-55-44-33-22-11
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The bogus &lt;code&gt;--router-mac&lt;/code&gt; keeps packets on the local network segments so that
they won't go out to the Internet.&lt;/p&gt;
&lt;p&gt;You can also test in "offline" mode, which is how fast the program runs
without the transmit overhead:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ bin/masscan 0.0.0.0/4 -p80 --rate 100000000 --offline
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This second benchmark shows roughly how fast the program would run if it were
using PF_RING, which has near zero overhead.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h1&gt;
&lt;p&gt;Usage is similar to &lt;code&gt;nmap&lt;/code&gt;. To scan a network segment for some ports:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan -p80,8000-8100 10.0.0.0/8
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scan the 10.x.x.x subnet, all 16 million addresses&lt;/li&gt;
&lt;li&gt;scans port 80 and the range 8000 to 8100, or 102 addresses total&lt;/li&gt;
&lt;li&gt;print output to &lt;code&gt;&amp;lt;stdout&amp;gt;&lt;/code&gt; that can be redirected to a file&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To see the complete list of options, use the &lt;code&gt;--echo&lt;/code&gt; feature. This
dumps the current configuration and exits. This output can be used as input back
into the program:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan -p80,8000-8100 10.0.0.0/8 --echo &amp;gt; xxx.conf
# masscan -c xxx.conf --rate 1000
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-banner-checking" class="anchor" aria-hidden="true" href="#banner-checking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Banner checking&lt;/h2&gt;
&lt;p&gt;Masscan can do more than just detect whether ports are open. It can also
complete the TCP connection and interaction with the application at that
port in order to grab simple "banner" information.&lt;/p&gt;
&lt;p&gt;The problem with this is that masscan contains its own TCP/IP stack
separate from the system you run it on. When the local system receives
a SYN-ACK from the probed target, it responds with a RST packet that kills
the connection before masscan can grab the banner.&lt;/p&gt;
&lt;p&gt;The easiest way to prevent this is to assign masscan a separate IP
address. This would look like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan 10.0.0.0/8 -p80 --banners --source-ip 192.168.1.200
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The address you choose has to be on the local subnet and not otherwise
be used by another system.&lt;/p&gt;
&lt;p&gt;In some cases, such as WiFi, this isn't possible. In those cases, you can
firewall the port that masscan uses. This prevents the local TCP/IP stack
from seeing the packet, but masscan still sees it since it bypasses the
local stack. For Linux, this would look like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# iptables -A INPUT -p tcp --dport 61000 -j DROP
# masscan 10.0.0.0/8 -p80 --banners --source-port 61000
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You probably want to pick ports that don't conflict with ports Linux might otherwise
choose for source-ports. You can see the range Linux uses, and reconfigure
that range, by looking in the file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/proc/sys/net/ipv4/ip_local_port_range
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On the latest version of Kali Linux (2018-August), that range is  32768  to  60999, so
you should choose ports either below 32768 or 61000 and above.&lt;/p&gt;
&lt;p&gt;Setting an &lt;code&gt;iptables&lt;/code&gt; rule only lasts until the next reboot. You need to lookup how to
save the configuration depending upon your distro, such as using &lt;code&gt;iptables-save&lt;/code&gt;
and/or &lt;code&gt;iptables-persistant&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On Mac OS X and BSD, there are similar steps. To find out the ranges to avoid,
use a command like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# sysctl net.inet.ip.portrange.first net.inet.ip.portrange.last
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On FreeBSD and older MacOS, use an &lt;code&gt;ipfw&lt;/code&gt; command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# sudo ipfw add 1 deny tcp from any to any 40000 in
# masscan 10.0.0.0/8 -p80 --banners --source-port 40000
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On newer MacOS and OpenBSD, use the &lt;code&gt;pf&lt;/code&gt; packet-filter utility.
Edit the file &lt;code&gt;/etc/pf.conf&lt;/code&gt; to add a line like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;block in proto tcp from any to any port 40000
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then to enable the firewall, run the command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# pfctrl -E    
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the firewall is already running, then either reboot or reload the rules
with the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# pfctl -f /etc/pf.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Windows doesn't respond with RST packets, so neither of these techniques
are necessary. However, masscan is still designed to work best using its
own IP address, so you should run that way when possible, even when its
not strictly necessary.&lt;/p&gt;
&lt;p&gt;The same thing is needed for other checks, such as the &lt;code&gt;--heartbleed&lt;/code&gt; check,
which is just a form of banner checking.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-scan-the-entire-internet" class="anchor" aria-hidden="true" href="#how-to-scan-the-entire-internet"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to scan the entire Internet&lt;/h2&gt;
&lt;p&gt;While useful for smaller, internal networks, the program is really designed
with the entire Internet in mind. It might look something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan 0.0.0.0/0 -p0-65535
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Scanning the entire Internet is bad. For one thing, parts of the Internet react
badly to being scanned. For another thing, some sites track scans and add you
to a ban list, which will get you firewalled from useful parts of the Internet.
Therefore, you want to exclude a lot of ranges. To blacklist or exclude ranges,
you want to use the following syntax:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan 0.0.0.0/0 -p0-65535 --excludefile exclude.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This just prints the results to the command-line. You probably want them
saved to a file instead. Therefore, you want something like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan 0.0.0.0/0 -p0-65535 -oX scan.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This saves the results in an XML file, allowing you to easily dump the
results in a database or something.&lt;/p&gt;
&lt;p&gt;But, this only goes at the default rate of 100 packets/second, which will
take forever to scan the Internet. You need to speed it up as so:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan 0.0.0.0/0 -p0-65535 --max-rate 100000
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This increases the rate to 100,000 packets/second, which will scan the
entire Internet (minus excludes) in about 10 hours per port (or 655,360 hours
if scanning all ports).&lt;/p&gt;
&lt;p&gt;The thing to notice about this command-line is that these are all &lt;code&gt;nmap&lt;/code&gt;
compatible options. In addition, "invisible" options compatible with &lt;code&gt;nmap&lt;/code&gt;
are also set for you: &lt;code&gt;-sS -Pn -n --randomize-hosts --send-eth&lt;/code&gt;. Likewise,
the format of the XML file is inspired by &lt;code&gt;nmap&lt;/code&gt;. There are, of course, a
lot of differences, because the &lt;em&gt;asynchronous&lt;/em&gt; nature of the program
leads to a fundamentally different approach to the problem.&lt;/p&gt;
&lt;p&gt;The above command-line is a bit cumbersome. Instead of putting everything
on the command-line, it can be stored in a file instead. The above settings
would look like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# My Scan
rate =  100000.00
output-format = xml
output-status = all
output-filename = scan.xml
ports = 0-65535
range = 0.0.0.0-255.255.255.255
excludefile = exclude.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To use this configuration file, use the &lt;code&gt;-c&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan -c myscan.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This also makes things easier when you repeat a scan.&lt;/p&gt;
&lt;p&gt;By default, masscan first loads the configuration file
&lt;code&gt;/etc/masscan/masscan.conf&lt;/code&gt;. Any later configuration parameters override what's
in this default configuration file. That's where I put my "excludefile"
parameter, so that I don't ever forget it. It just works automatically.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-output" class="anchor" aria-hidden="true" href="#getting-output"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting output&lt;/h2&gt;
&lt;p&gt;By default, masscan produces fairly large text files, but it's easy
to convert them into any other format. There are five supported output formats:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;xml:  Just use the parameter &lt;code&gt;-oX &amp;lt;filename&amp;gt;&lt;/code&gt;.
Or, use the parameters &lt;code&gt;--output-format xml&lt;/code&gt; and &lt;code&gt;--output-filename &amp;lt;filename&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;binary: This is the masscan builtin format. It produces much smaller files, so that
when I scan the Internet my disk doesn't fill up. They need to be parsed,
though. The command line option &lt;code&gt;--readscan&lt;/code&gt; will read binary scan files.
Using &lt;code&gt;--readscan&lt;/code&gt; with the &lt;code&gt;-oX&lt;/code&gt; option will produce a XML version of the
results file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;grepable: This is an implementation of the Nmap -oG
output that can be easily parsed by command-line tools. Just use the
parameter &lt;code&gt;-oG &amp;lt;filename&amp;gt;&lt;/code&gt;. Or, use the parameters &lt;code&gt;--output-format grepable&lt;/code&gt; and
&lt;code&gt;--output-filename &amp;lt;filename&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;json: This saves the results in JSON format. Just use the
parameter &lt;code&gt;-oJ &amp;lt;filename&amp;gt;&lt;/code&gt;. Or, use the parameters &lt;code&gt;--output-format json&lt;/code&gt; and
&lt;code&gt;--output-filename &amp;lt;filename&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;list: This is a simple list with one host and port pair
per line. Just use the parameter &lt;code&gt;-oL &amp;lt;filename&amp;gt;&lt;/code&gt;. Or, use the parameters
&lt;code&gt;--output-format list&lt;/code&gt; and &lt;code&gt;--output-filename &amp;lt;filename&amp;gt;&lt;/code&gt;. The format is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;port state&amp;gt; &amp;lt;protocol&amp;gt; &amp;lt;port number&amp;gt; &amp;lt;IP address&amp;gt; &amp;lt;POSIX timestamp&amp;gt;  
open tcp 80 XXX.XXX.XXX.XXX 1390380064
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-comparison-with-nmap" class="anchor" aria-hidden="true" href="#comparison-with-nmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Comparison with Nmap&lt;/h2&gt;
&lt;p&gt;Where reasonable, every effort has been taken to make the program familiar
to &lt;code&gt;nmap&lt;/code&gt; users, even though it's fundamentally different. Two important
differences are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;no default ports to scan, you must specify &lt;code&gt;-p &amp;lt;ports&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;target hosts are IP addresses or simple ranges, not DNS names, nor
the funky subnet ranges &lt;code&gt;nmap&lt;/code&gt; can use (like &lt;code&gt;10.0.0-255.0-255&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can think of &lt;code&gt;masscan&lt;/code&gt; as having the following settings permanently
enabled:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-sS&lt;/code&gt;: this does SYN scan only (currently, will change in the future)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-Pn&lt;/code&gt;: doesn't ping hosts first, which is fundamental to the async operation&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;: no DNS resolution happens&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--randomize-hosts&lt;/code&gt;: scan completely randomized&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--send-eth&lt;/code&gt;: sends using raw &lt;code&gt;libpcap&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want a list of additional &lt;code&gt;nmap&lt;/code&gt; compatible settings, use the following
command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# masscan --nmap
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-transmit-rate-important" class="anchor" aria-hidden="true" href="#transmit-rate-important"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transmit rate (IMPORTANT!!)&lt;/h2&gt;
&lt;p&gt;This program spews out packets very fast. On Windows, or from VMs,
it can do 300,000 packets/second. On Linux (no virtualization) it'll
do 1.6 million packets-per-second. That's fast enough to melt most networks.&lt;/p&gt;
&lt;p&gt;Note that it'll only melt your own network. It randomizes the target
IP addresses so that it shouldn't overwhelm any distant network.&lt;/p&gt;
&lt;p&gt;By default, the rate is set to 100 packets/second. To increase the rate to
a million use something like &lt;code&gt;--rate 1000000&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-design" class="anchor" aria-hidden="true" href="#design"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design&lt;/h1&gt;
&lt;p&gt;This section describes the major design issues of the program.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-code-layout" class="anchor" aria-hidden="true" href="#code-layout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Layout&lt;/h2&gt;
&lt;p&gt;The file &lt;code&gt;main.c&lt;/code&gt; contains the &lt;code&gt;main()&lt;/code&gt; function, as you'd expect. It also
contains the &lt;code&gt;transmit_thread()&lt;/code&gt; and &lt;code&gt;receive_thread()&lt;/code&gt; functions. These
functions have been deliberately flattened and heavily commented so that you
can read the design of the program simply by stepping line-by-line through
each of these.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-asynchronous" class="anchor" aria-hidden="true" href="#asynchronous"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Asynchronous&lt;/h2&gt;
&lt;p&gt;This is an &lt;em&gt;asynchronous&lt;/em&gt; design. In other words, it is to &lt;code&gt;nmap&lt;/code&gt; what
the &lt;code&gt;nginx&lt;/code&gt; web-server is to &lt;code&gt;Apache&lt;/code&gt;. It has separate transmit and receive
threads that are largely independent from each other. It's the same sort of
design found in &lt;code&gt;scanrand&lt;/code&gt;, &lt;code&gt;unicornscan&lt;/code&gt;, and &lt;code&gt;ZMap&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Because it's asynchronous, it runs as fast as the underlying packet transmit
allows.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-randomization" class="anchor" aria-hidden="true" href="#randomization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Randomization&lt;/h2&gt;
&lt;p&gt;A key difference between Masscan and other scanners is the way it randomizes
targets.&lt;/p&gt;
&lt;p&gt;The fundamental principle is to have a single index variable that starts at
zero and is incremented by one for every probe. In C code, this is expressed
as:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;for (i = 0; i &amp;lt; range; i++) {
    scan(i);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We have to translate the index into an IP address. Let's say that you want to
scan all "private" IP addresses. That would be the table of ranges like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;192.168.0.0/16
10.0.0.0/8
172.16.0.0/12
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example, the first 64k indexes are appended to 192.168.x.x to form
the target address. Then, the next 16-million are appended to 10.x.x.x.
The remaining indexes in the range are applied to 172.16.x.x.&lt;/p&gt;
&lt;p&gt;In this example, we only have three ranges. When scanning the entire Internet,
we have in practice more than 100 ranges. That's because you have to blacklist
or exclude a lot of sub-ranges. This chops up the desired range into hundreds
of smaller ranges.&lt;/p&gt;
&lt;p&gt;This leads to one of the slowest parts of the code. We transmit 10 million
packets per second, and have to convert an index variable to an IP address
for each and every probe. We solve this by doing a "binary search" in a small
amount of memory. At this packet rate, cache efficiencies start to dominate
over algorithm efficiencies. There are a lot of more efficient techniques in
theory, but they all require so much memory as to be slower in practice.&lt;/p&gt;
&lt;p&gt;We call the function that translates from an index into an IP address
the &lt;code&gt;pick()&lt;/code&gt; function. In use, it looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;for (i = 0; i &amp;lt; range; i++) {
    ip = pick(addresses, i);
    scan(ip);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Masscan supports not only IP address ranges, but also port ranges. This means
we need to pick from the index variable both an IP address and a port. This
is fairly straightforward:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;range = ip_count * port_count;
for (i = 0; i &amp;lt; range; i++) {
    ip   = pick(addresses, i / port_count);
    port = pick(ports,     i % port_count);
    scan(ip, port);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This leads to another expensive part of the code. The division/modulus
instructions are around 90 clock cycles, or 30 nanoseconds, on x86 CPUs. When
transmitting at a rate of 10 million packets/second, we have only
100 nanoseconds per packet. I see no way to optimize this any better. Luckily,
though, two such operations can be executed simultaneously, so doing two
of these as shown above is no more expensive than doing one.&lt;/p&gt;
&lt;p&gt;There are actually some easy optimizations for the above performance problems,
but they all rely upon &lt;code&gt;i++&lt;/code&gt;, the fact that the index variable increases one
by one through the scan. Actually, we need to randomize this variable. We
need to randomize the order of IP addresses that we scan or we'll blast the
heck out of target networks that aren't built for this level of speed. We
need to spread our traffic evenly over the target.&lt;/p&gt;
&lt;p&gt;The way we randomize is simply by encrypting the index variable. By definition,
encryption is random, and creates a 1-to-1 mapping between the original index
variable and the output. This means that while we linearly go through the
range, the output IP addresses are completely random. In code, this looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;range = ip_count * port_count;
for (i = 0; i &amp;lt; range; i++) {
    x = encrypt(i);
    ip   = pick(addresses, x / port_count);
    port = pick(ports,     x % port_count);
    scan(ip, port);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This also has a major cost. Since the range is an unpredictable size instead
of a nice even power of 2, we can't use cheap binary techniques like
AND (&amp;amp;) and XOR (^). Instead, we have to use expensive operations like
MODULUS (%). In my current benchmarks, it's taking 40 nanoseconds to
encrypt the variable.&lt;/p&gt;
&lt;p&gt;This architecture allows for lots of cool features. For example, it supports
"shards". You can setup 5 machines each doing a fifth of the scan, or
&lt;code&gt;range / shard_count&lt;/code&gt;. Shards can be multiple machines, or simply multiple
network adapters on the same machine, or even (if you want) multiple IP
source addresses on the same network adapter.&lt;/p&gt;
&lt;p&gt;Or, you can use a 'seed' or 'key' to the encryption function, so that you get
a different order each time you scan, like &lt;code&gt;x = encrypt(seed, i)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We can also pause the scan by exiting out of the program, and simply
remembering the current value of &lt;code&gt;i&lt;/code&gt;, and restart it later. I do that a lot
during development. I see something going wrong with my Internet scan, so
I hit  to stop the scan, then restart it after I've fixed the bug.&lt;/p&gt;
&lt;p&gt;Another feature is retransmits/retries. Packets sometimes get dropped on the
Internet, so you can send two packets back-to-back. However, something that
drops one packet may drop the immediately following packet. Therefore, you
want to send the copy about 1 second apart. This is simple. We already have
a 'rate' variable, which is the number of packets-per-second rate we are
transmitting at, so the retransmit function is simply to use &lt;code&gt;i + rate&lt;/code&gt;
as the index. One of these days I'm going to do a study of the Internet,
and differentiate "back-to-back", "1 second", "10 second", and "1 minute"
retransmits this way in order to see if there is any difference in what
gets dropped.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-c10-scalability" class="anchor" aria-hidden="true" href="#c10-scalability"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;C10 Scalability&lt;/h2&gt;
&lt;p&gt;The asynchronous technique is known as a solution to the "c10k problem".
Masscan is designed for the next level of scalability, the "C10M problem".&lt;/p&gt;
&lt;p&gt;The C10M solution is to bypass the kernel. There are three primary kernel
bypasses in Masscan:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;custom network driver&lt;/li&gt;
&lt;li&gt;user-mode TCP stack&lt;/li&gt;
&lt;li&gt;user-mode synchronization&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Masscan can use the PF_RING DNA driver. This driver DMAs packets directly
from user-mode memory to the network driver with zero kernel involvement.
That allows software, even with a slow CPU, to transmit packets at the maximum
rate the hardware allows. If you put 8 10-gbps network cards in a computer,
this means it could transmit at 100-million packets/second.&lt;/p&gt;
&lt;p&gt;Masscan has its own built-in TCP stack for grabbing banners from TCP
connections. This means it can easily support 10 million concurrent TCP
connections, assuming of course that the computer has enough memory.&lt;/p&gt;
&lt;p&gt;Masscan has no "mutex". Modern mutexes (aka. futexes) are mostly user-mode,
but they have two problems. The first problem is that they cause cache-lines
to bounce quickly back-and-forth between CPUs. The second is that when there
is contention, they'll do a system call into the kernel, which kills
performance. Mutexes on the fast path of a program severely limits scalability.
Instead, Masscan uses "rings" to synchronize things, such as when the
user-mode TCP stack in the receive thread needs to transmit a packet without
interfering with the transmit thread.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-portability" class="anchor" aria-hidden="true" href="#portability"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Portability&lt;/h2&gt;
&lt;p&gt;The code runs well on Linux, Windows, and Mac OS X. All the important bits are
in standard C (C90). It therefore compiles on Visual Studio with Microsoft's
compiler, the Clang/LLVM compiler on Mac OS X, and GCC on Linux.&lt;/p&gt;
&lt;p&gt;Windows and Macs aren't tuned for packet transmit, and get only about 300,000
packets-per-second, whereas Linux can do 1,500,000 packets/second. That's
probably faster than you want anyway.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-safe-code" class="anchor" aria-hidden="true" href="#safe-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Safe code&lt;/h2&gt;
&lt;p&gt;A bounty is offered for vulnerabilities, see the VULNINFO.md file for more
information.&lt;/p&gt;
&lt;p&gt;This project uses safe functions like &lt;code&gt;strcpy_s()&lt;/code&gt; instead of unsafe functions
like &lt;code&gt;strcpy()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This project has automated unit regression tests (&lt;code&gt;make regress&lt;/code&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compatibility" class="anchor" aria-hidden="true" href="#compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compatibility&lt;/h2&gt;
&lt;p&gt;A lot of effort has gone into making the input/output look like &lt;code&gt;nmap&lt;/code&gt;, which
everyone who does port scans is (or should be) familiar with.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-authors" class="anchor" aria-hidden="true" href="#authors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authors&lt;/h1&gt;
&lt;p&gt;This tool created by Robert Graham:
email: &lt;a href="mailto:robert_david_graham@yahoo.com"&gt;robert_david_graham@yahoo.com&lt;/a&gt;
twitter: @ErrataRob&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>robertdavidgraham</author><guid isPermaLink="false">https://github.com/robertdavidgraham/masscan</guid><pubDate>Mon, 25 Nov 2019 00:02:00 GMT</pubDate></item><item><title>happyfish100/fastdfs #3 in C, This week</title><link>https://github.com/happyfish100/fastdfs</link><description>&lt;p&gt;&lt;i&gt;FastDFS is an open source high performance distributed file system (DFS). It's major functions include: file storing, file syncing and file accessing, and design for high capacity and load balance. Wechat/Weixin public account (Chinese Language): fastdfs&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;Copyright (C) 2008 Happy Fish / YuQing&lt;/p&gt;
&lt;p&gt;FastDFS may be copied only under the terms of the GNU General
Public License V3, which may be found in the FastDFS source kit.
Please visit the FastDFS Home Page for more detail.
Chinese language: &lt;a href="http://www.fastken.com/" rel="nofollow"&gt;http://www.fastken.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;FastDFS is an open source high performance distributed file system. It's major
functions include: file storing, file syncing and file accessing (file uploading
and file downloading), and it can resolve the high capacity and load balancing
problem. FastDFS should meet the requirement of the website whose service based
on files such as photo sharing site and video sharing site.&lt;/p&gt;
&lt;p&gt;FastDFS has two roles: tracker and storage. The tracker takes charge of
scheduling and load balancing for file access. The storage store files and it's
function is file management including: file storing, file syncing, providing file
access interface. It also manage the meta data which are attributes representing
as key value pair of the file. For example: width=1024, the key is "width" and
the value is "1024".&lt;/p&gt;
&lt;p&gt;The tracker and storage contain one or more servers. The servers in the tracker
or storage cluster can be added to or removed from the cluster by any time without
affecting the online services. The servers in the tracker cluster are peer to peer.&lt;/p&gt;
&lt;p&gt;The storarge servers organizing by the file volume/group to obtain high capacity.
The storage system contains one or more volumes whose files are independent among
these volumes. The capacity of the whole storage system equals to the sum of all
volumes' capacity. A file volume contains one or more storage servers whose files
are same among these servers. The servers in a file volume backup each other,
and all these servers are load balancing. When adding a storage server to a
volume, files already existing in this volume are replicated to this new server
automatically, and when this replication done, system will switch this server
online to providing storage services.&lt;/p&gt;
&lt;p&gt;When the whole storage capacity is insufficiency, you can add one or more
volumes to expand the storage capacity. To do this, you need to add one or
more storage servers.&lt;/p&gt;
&lt;p&gt;The identification of a file is composed of two parts: the volume name and
the file name.&lt;/p&gt;
&lt;p&gt;Client test code use client library please refer to the directory: client/test.&lt;/p&gt;
&lt;p&gt;For more FastDFS related articles, please subscribe the Wechat/Weixin public account
(Chinese Language): fastdfs&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>happyfish100</author><guid isPermaLink="false">https://github.com/happyfish100/fastdfs</guid><pubDate>Mon, 25 Nov 2019 00:03:00 GMT</pubDate></item><item><title>acidanthera/OpenCorePkg #4 in C, This week</title><link>https://github.com/acidanthera/OpenCorePkg</link><description>&lt;p&gt;&lt;i&gt;OpenCore front end&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/acidanthera/OpenCorePkg/blob/master/Docs/Logos/OpenCore_with_text_Small.png"&gt;&lt;img src="https://github.com/acidanthera/OpenCorePkg/raw/master/Docs/Logos/OpenCore_with_text_Small.png" width="200" height="48" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--" class="anchor" aria-hidden="true" href="#-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://travis-ci.com/acidanthera/OpenCorePkg" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/db77e5e95b6fb6d136ed05696bd9da939b16ec34/68747470733a2f2f7472617669732d63692e636f6d2f61636964616e74686572612f4f70656e436f7265506b672e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/acidanthera/OpenCorePkg.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://scan.coverity.com/projects/18169" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/52e7e3f4c55e4023af135a707d39f07048b2e776/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f31383136392f62616467652e7376673f666c61743d31" alt="Scan Status" data-canonical-src="https://scan.coverity.com/projects/18169/badge.svg?flat=1" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;OpenCore bootloader front end.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-discussion" class="anchor" aria-hidden="true" href="#discussion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Discussion&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://applelife.ru/threads/razrabotka-opencore.2943955" rel="nofollow"&gt;AppleLife.ru&lt;/a&gt; in Russian&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackintosh-forum.de/forum/thread/42353-opencore-bootloader" rel="nofollow"&gt;Hackintosh-Forum.de&lt;/a&gt; in German&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.insanelymac.com/forum/topic/338527-opencore-development/" rel="nofollow"&gt;InsanelyMac.com&lt;/a&gt; in English&lt;/li&gt;
&lt;li&gt;&lt;a href="https://forums.macrumors.com/threads/opencore-on-the-mac-pro.2207814/" rel="nofollow"&gt;MacRumors.com&lt;/a&gt; in English, legacy Apple hardware&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.macos86.it/showthread.php?4570-OpenCore-aka-OC-Nuovo-BootLoader" rel="nofollow"&gt;macOS86.it&lt;/a&gt; in Italian&lt;/li&gt;
&lt;li&gt;&lt;a href="http://bbs.pcbeta.com/viewthread-1815623-1-1.html" rel="nofollow"&gt;PCbeta.com&lt;/a&gt; in Chinese&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The HermitCrabs Lab&lt;/li&gt;
&lt;li&gt;All projects providing third-party code (refer to file headers)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/al3xtjames"&gt;al3xtjames&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Andrey1970AppleLife"&gt;Andrey1970AppleLife&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Download-Fritz"&gt;Download-Fritz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Goldfish64"&gt;Goldfish64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PMHeart"&gt;PMHeart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/savvamitrofanov"&gt;savvamitrofanov&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vit9696"&gt;vit9696&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>acidanthera</author><guid isPermaLink="false">https://github.com/acidanthera/OpenCorePkg</guid><pubDate>Mon, 25 Nov 2019 00:04:00 GMT</pubDate></item><item><title>torvalds/linux #5 in C, This week</title><link>https://github.com/torvalds/linux</link><description>&lt;p&gt;&lt;i&gt;Linux kernel source tree&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body " data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;Linux kernel
============

There are several guides for kernel developers and users. These guides can
be rendered in a number of formats, like HTML and PDF. Please read
Documentation/admin-guide/README.rst first.

In order to build the documentation, use ``make htmldocs`` or
``make pdfdocs``.  The formatted documentation can also be read online at:

    &lt;a href="https://www.kernel.org/doc/html/latest/" rel="nofollow"&gt;https://www.kernel.org/doc/html/latest/&lt;/a&gt;

There are various text files in the Documentation/ subdirectory,
several of them using the Restructured Text markup notation.

Please read the Documentation/process/changes.rst file, as it contains the
requirements for building and running the kernel, and information about
the problems which may result by upgrading your kernel.
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>torvalds</author><guid isPermaLink="false">https://github.com/torvalds/linux</guid><pubDate>Mon, 25 Nov 2019 00:05:00 GMT</pubDate></item><item><title>jemalloc/jemalloc #6 in C, This week</title><link>https://github.com/jemalloc/jemalloc</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body " data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;jemalloc is a general purpose malloc(3) implementation that emphasizes
fragmentation avoidance and scalable concurrency support.  jemalloc first came
into use as the FreeBSD libc allocator in 2005, and since then it has found its
way into numerous applications that rely on its predictable behavior.  In 2010
jemalloc development efforts broadened to include developer support features
such as heap profiling and extensive monitoring/tuning hooks.  Modern jemalloc
releases continue to be integrated back into FreeBSD, and therefore versatility
remains critical.  Ongoing development efforts trend toward making jemalloc
among the best allocators for a broad range of demanding applications, and
eliminating/mitigating weaknesses that have practical repercussions for real
world applications.

The COPYING file contains copyright and licensing information.

The INSTALL file contains information on how to configure, build, and install
jemalloc.

The ChangeLog file contains a brief summary of changes for each release.

URL: &lt;a href="http://jemalloc.net/" rel="nofollow"&gt;http://jemalloc.net/&lt;/a&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>jemalloc</author><guid isPermaLink="false">https://github.com/jemalloc/jemalloc</guid><pubDate>Mon, 25 Nov 2019 00:06:00 GMT</pubDate></item><item><title>esp8266/Arduino #7 in C, This week</title><link>https://github.com/esp8266/Arduino</link><description>&lt;p&gt;&lt;i&gt;ESP8266 core for Arduino&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-arduino-core-for-esp8266-wifi-chip" class="anchor" aria-hidden="true" href="#arduino-core-for-esp8266-wifi-chip"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Arduino core for ESP8266 WiFi chip&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-quick-links" class="anchor" aria-hidden="true" href="#quick-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arduino-esp8266.readthedocs.io/en/2.6.1/" rel="nofollow"&gt;Latest release documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arduino-esp8266.readthedocs.io/en/latest/" rel="nofollow"&gt;Current "git version" documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arduino-esp8266.readthedocs.io/en/latest/installing.html#using-git-version" rel="nofollow"&gt;Install git version&lt;/a&gt; (&lt;a href="doc/installing.rst#using-git-version"&gt;sources&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-arduino-on-esp8266" class="anchor" aria-hidden="true" href="#arduino-on-esp8266"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Arduino on ESP8266&lt;/h1&gt;
&lt;p&gt;This project brings support for the ESP8266 chip to the Arduino environment. It lets you write sketches, using familiar Arduino functions and libraries, and run them directly on ESP8266, with no external microcontroller required.&lt;/p&gt;
&lt;p&gt;ESP8266 Arduino core comes with libraries to communicate over WiFi using TCP and UDP, set up HTTP, mDNS, SSDP, and DNS servers, do OTA updates, use a file system in flash memory, and work with SD cards, servos, SPI and I2C peripherals.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Installing options:
&lt;ul&gt;
&lt;li&gt;&lt;a href="#installing-with-boards-manager"&gt;Using Boards Manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-git-version"&gt;Using git version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-platformio"&gt;Using PlatformIO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#building-with-make"&gt;Building with make&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#issues-and-support"&gt;Issues and support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license-and-credits"&gt;License and credits&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-installing-with-boards-manager" class="anchor" aria-hidden="true" href="#installing-with-boards-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing with Boards Manager&lt;/h3&gt;
&lt;p&gt;Starting with 1.6.4, Arduino allows installation of third-party platform packages using Boards Manager. We have packages available for Windows, Mac OS, and Linux (32 and 64 bit).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install the current upstream Arduino IDE at the 1.8.7 level or later. The current version is on the &lt;a href="https://www.arduino.cc/en/main/software" rel="nofollow"&gt;Arduino website&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Start Arduino and open the Preferences window.&lt;/li&gt;
&lt;li&gt;Enter &lt;code&gt;https://arduino.esp8266.com/stable/package_esp8266com_index.json&lt;/code&gt; into the &lt;em&gt;Additional Board Manager URLs&lt;/em&gt; field. You can add multiple URLs, separating them with commas.&lt;/li&gt;
&lt;li&gt;Open Boards Manager from Tools &amp;gt; Board menu and install &lt;em&gt;esp8266&lt;/em&gt; platform (and don't forget to select your ESP8266 board from Tools &amp;gt; Board menu after installation).&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-latest-release-" class="anchor" aria-hidden="true" href="#latest-release-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Latest release &lt;a href="https://github.com/esp8266/Arduino/releases/latest/"&gt;&lt;img src="https://camo.githubusercontent.com/27457a237f37ff4856f7cf9daf0ee82d1347ddb5/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f657370383236362f41726475696e6f2e737667" alt="Latest release" data-canonical-src="https://img.shields.io/github/release/esp8266/Arduino.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Boards manager link: &lt;code&gt;https://arduino.esp8266.com/stable/package_esp8266com_index.json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Documentation: &lt;a href="https://arduino-esp8266.readthedocs.io/en/2.6.1/" rel="nofollow"&gt;https://arduino-esp8266.readthedocs.io/en/2.6.1/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-git-version" class="anchor" aria-hidden="true" href="#using-git-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using git version&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/esp8266/Arduino" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0832c7036e70ae03371e34f7e8f23f414f4fc37b/68747470733a2f2f7472617669732d63692e6f72672f657370383236362f41726475696e6f2e737667" alt="Linux build status" data-canonical-src="https://travis-ci.org/esp8266/Arduino.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also known as latest git or master branch.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install the current upstream Arduino IDE at the 1.8 level or later. The current version is on the &lt;a href="https://www.arduino.cc/en/main/software" rel="nofollow"&gt;Arduino website&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Follow the &lt;a href="https://arduino-esp8266.readthedocs.io/en/latest/installing.html#using-git-version" rel="nofollow"&gt;instructions in the documentation&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-using-platformio" class="anchor" aria-hidden="true" href="#using-platformio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using PlatformIO&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://platformio.org?utm_source=github&amp;amp;utm_medium=arduino-esp8266" rel="nofollow"&gt;PlatformIO&lt;/a&gt; is an open source ecosystem for IoT
development with a cross-platform build system, a library manager, and full support
for Espressif (ESP8266) development. It works on the following popular host operating systems: macOS, Windows,
Linux 32/64, and Linux ARM (like Raspberry Pi, BeagleBone, CubieBoard).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.platformio.org/en/latest/what-is-platformio.html?utm_source=github&amp;amp;utm_medium=arduino-esp8266" rel="nofollow"&gt;What is PlatformIO?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://platformio.org/platformio-ide?utm_source=github&amp;amp;utm_medium=arduino-esp8266" rel="nofollow"&gt;PlatformIO IDE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.platformio.org/en/latest/core.html?utm_source=github&amp;amp;utm_medium=arduino-esp8266" rel="nofollow"&gt;PlatformIO Core&lt;/a&gt; (command line tool)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.platformio.org/en/latest/platforms/espressif8266.html?utm_source=github&amp;amp;utm_medium=arduino-esp8266" rel="nofollow"&gt;Advanced usage&lt;/a&gt; -
custom settings, uploading to SPIFFS, Over-the-Air (OTA), staging version&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.platformio.org/en/latest/ide.html?utm_source=github&amp;amp;utm_medium=arduino-esp8266" rel="nofollow"&gt;Integration with Cloud and Standalone IDEs&lt;/a&gt; -
Cloud9, Codeanywhere, Eclipse Che (Codenvy), Atom, CLion, Eclipse, Emacs, NetBeans, Qt Creator, Sublime Text, VIM, Visual Studio, and VSCode&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.platformio.org/en/latest/platforms/espressif8266.html?utm_source=github&amp;amp;utm_medium=arduino-esp8266#examples" rel="nofollow"&gt;Project Examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-building-with-make" class="anchor" aria-hidden="true" href="#building-with-make"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building with make&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/plerup/makeEspArduino"&gt;makeEspArduino&lt;/a&gt; is a generic makefile for any ESP8266 Arduino project.
Using make instead of the Arduino IDE makes it easier to do automated and production builds.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h3&gt;
&lt;p&gt;Documentation for latest development version: &lt;a href="https://arduino-esp8266.readthedocs.io/en/latest/" rel="nofollow"&gt;https://arduino-esp8266.readthedocs.io/en/latest/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-issues-and-support" class="anchor" aria-hidden="true" href="#issues-and-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issues and support&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.esp8266.com/u/arduinoanswers" rel="nofollow"&gt;ESP8266 Community Forum&lt;/a&gt; is a well-established community for questions and answers about Arduino for ESP8266. If you need help, have a "How do I..." type question, have a problem with a 3rd party library not hosted in this repo, or just want to discuss how to approach a problem, please ask there.&lt;/p&gt;
&lt;p&gt;If you find the forum useful, please consider supporting it with a donation. &lt;br&gt;
&lt;a href="https://www.paypal.com/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=4M56YCWV6PX66" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/11b2f47d7b4af17ef3a803f57c37de3ac82ac039/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f70617970616c2d646f6e6174652d79656c6c6f772e737667" alt="Donate" data-canonical-src="https://img.shields.io/badge/paypal-donate-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you encounter an issue which you think is a bug in the ESP8266 Arduino Core or the associated libraries, or if you want to propose an enhancement, you are welcome to submit it here on Github: &lt;a href="https://github.com/esp8266/Arduino/issues"&gt;https://github.com/esp8266/Arduino/issues&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please provide as much context as possible, as well as the information requested in the issue template:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ESP8266 Arduino core version which you are using (you can check it in Boards Manager)&lt;/li&gt;
&lt;li&gt;your sketch code; please wrap it into a code block, see &lt;a href="https://help.github.com/articles/basic-writing-and-formatting-syntax/#quoting-code"&gt;Github markdown manual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;when encountering an issue that happens at run time, attach the serial output. Wrap it into a code block, just like the code.&lt;/li&gt;
&lt;li&gt;for issues that happen at compile time, enable verbose compiler output in the IDE preferences, and attach that output (also inside a code block)&lt;/li&gt;
&lt;li&gt;ESP8266 development board model&lt;/li&gt;
&lt;li&gt;IDE settings (board choice, flash size)&lt;/li&gt;
&lt;li&gt;etc&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h3&gt;
&lt;p&gt;For minor fixes of code and documentation, please go ahead and submit a pull request.  A gentle introduction to the process can be found &lt;a href="https://www.freecodecamp.org/news/a-simple-git-guide-and-cheat-sheet-for-open-source-contributors/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Check out the list of issues that are easy to fix — &lt;a href="https://github.com/esp8266/Arduino/issues?q=is%3Aopen+is%3Aissue+label%3A%22level%3A+easy%22"&gt;easy issues pending&lt;/a&gt;. Working on them is a great way to move the project forward.&lt;/p&gt;
&lt;p&gt;Larger changes (rewriting parts of existing code from scratch, adding new functions to the core, adding new libraries) should generally be discussed by opening an issue first.&lt;/p&gt;
&lt;p&gt;Feature branches with lots of small commits (especially titled "oops", "fix typo", "forgot to add file", etc.) should be squashed before opening a pull request. At the same time, please refrain from putting multiple unrelated changes into a single pull request.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-license-and-credits" class="anchor" aria-hidden="true" href="#license-and-credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License and credits&lt;/h3&gt;
&lt;p&gt;Arduino IDE is developed and maintained by the Arduino team. The IDE is licensed under GPL.&lt;/p&gt;
&lt;p&gt;ESP8266 core includes an xtensa gcc toolchain, which is also under GPL.&lt;/p&gt;
&lt;p&gt;Esptool written by Christian Klippel is licensed under GPLv2, currently maintained by Ivan Grokhotkov: &lt;a href="https://github.com/igrr/esptool-ck"&gt;https://github.com/igrr/esptool-ck&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Espressif SDK included in this build is under Espressif MIT License.&lt;/p&gt;
&lt;p&gt;ESP8266 core files are licensed under LGPL.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/pellepl/spiffs"&gt;SPI Flash File System (SPIFFS)&lt;/a&gt; written by Peter Andersson is used in this project. It is distributed under the MIT license.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rhempel/umm_malloc"&gt;umm_malloc&lt;/a&gt; memory management library written by Ralph Hempel is used in this project. It is distributed under the MIT license.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/plerup/espsoftwareserial"&gt;SoftwareSerial&lt;/a&gt; library and examples written by Peter Lerup. Distributed under LGPL 2.1.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://axtls.sourceforge.net/" rel="nofollow"&gt;axTLS&lt;/a&gt; library written by Cameron Rich, built from &lt;a href="https://github.com/igrr/axtls-8266"&gt;https://github.com/igrr/axtls-8266&lt;/a&gt;, is used in this project. It is distributed under &lt;a href="https://github.com/igrr/axtls-8266/blob/master/LICENSE"&gt;BSD license&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bearssl.org" rel="nofollow"&gt;BearSSL&lt;/a&gt; library written by Thomas Pornin, built from &lt;a href="https://github.com/earlephilhower/bearssl-esp8266"&gt;https://github.com/earlephilhower/bearssl-esp8266&lt;/a&gt;, is used in this project.  It is distributed under the &lt;a href="https://bearssl.org/#legal-details" rel="nofollow"&gt;MIT License&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ARMmbed/littlefs"&gt;LittleFS&lt;/a&gt; library written by ARM Limited and released under the &lt;a href="https://github.com/ARMmbed/littlefs/blob/master/LICENSE.md"&gt;BSD 3-clause license&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-other-useful-links" class="anchor" aria-hidden="true" href="#other-useful-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other useful links&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/earlephilhower/esp-quick-toolchain"&gt;Toolchain repo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/d-a-v/esp82xx-nonos-linklayer"&gt;Lwip link layer repo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/plerup/espsoftwareserial"&gt;SoftwareSerial repo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mytrain/arduino-esp8266-serial-plugin"&gt;Serial Monitor Arduino IDE plugin&lt;/a&gt; Original discussion &lt;a href="https://github.com/esp8266/Arduino/issues/1360"&gt;here&lt;/a&gt;, quick download &lt;a href="http://mytrain.fr/cms//images/mytrain/private/ESP8266SM.v3.zip" rel="nofollow"&gt;there&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>esp8266</author><guid isPermaLink="false">https://github.com/esp8266/Arduino</guid><pubDate>Mon, 25 Nov 2019 00:07:00 GMT</pubDate></item><item><title>openresty/lua-nginx-module #8 in C, This week</title><link>https://github.com/openresty/lua-nginx-module</link><description>&lt;p&gt;&lt;i&gt;Embed the Power of Lua into NGINX HTTP servers&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body markdown" data-path="README.markdown"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;
&lt;h1&gt;&lt;a id="user-content-name" class="anchor" aria-hidden="true" href="#name"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Name&lt;/h1&gt;
&lt;p&gt;ngx_http_lua_module - Embed the power of Lua into Nginx HTTP Servers.&lt;/p&gt;
&lt;p&gt;This module is a core component of &lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty&lt;/a&gt;. If you are using this module,
then you are essentially using OpenResty.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This module is not distributed with the Nginx source.&lt;/em&gt; See
&lt;a href="#installation"&gt;the installation instructions&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#name"&gt;Name&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#status"&gt;Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#version"&gt;Version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#synopsis"&gt;Synopsis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#description"&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#typical-uses"&gt;Typical Uses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nginx-compatibility"&gt;Nginx Compatibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#building-as-a-dynamic-module"&gt;Building as a dynamic module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#c-macro-configurations"&gt;C Macro Configurations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#community"&gt;Community&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#english-mailing-list"&gt;English Mailing List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chinese-mailing-list"&gt;Chinese Mailing List&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#code-repository"&gt;Code Repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bugs-and-patches"&gt;Bugs and Patches&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#system-environment-variable-support"&gt;System Environment Variable Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#http-10-support"&gt;HTTP 1.0 support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#statically-linking-pure-lua-modules"&gt;Statically Linking Pure Lua Modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#data-sharing-within-an-nginx-worker"&gt;Data Sharing within an Nginx Worker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#known-issues"&gt;Known Issues&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#tcp-socket-connect-operation-issues"&gt;TCP socket connect operation issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua-coroutine-yieldingresuming"&gt;Lua Coroutine Yielding/Resuming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua-variable-scope"&gt;Lua Variable Scope&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#locations-configured-by-subrequest-directives-of-other-modules"&gt;Locations Configured by Subrequest Directives of Other Modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cosockets-not-available-everywhere"&gt;Cosockets Not Available Everywhere&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#special-escaping-sequences"&gt;Special Escaping Sequences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mixing-with-ssi-not-supported"&gt;Mixing with SSI Not Supported&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#spdy-mode-not-fully-supported"&gt;SPDY Mode Not Fully Supported&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#missing-data-on-short-circuited-requests"&gt;Missing data on short circuited requests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#todo"&gt;TODO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#changes"&gt;Changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#test-suite"&gt;Test Suite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#copyright-and-license"&gt;Copyright and License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#see-also"&gt;See Also&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#directives"&gt;Directives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#obsolete-sections"&gt;Obsolete Sections&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#special-pcre-sequences"&gt;Special PCRE Sequences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lualuajit-bytecode-support"&gt;Lua/LuaJIT bytecode support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-status" class="anchor" aria-hidden="true" href="#status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status&lt;/h1&gt;
&lt;p&gt;Production ready.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-version" class="anchor" aria-hidden="true" href="#version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Version&lt;/h1&gt;
&lt;p&gt;This document describes ngx_lua
&lt;a href="https://github.com/openresty/lua-nginx-module/tags"&gt;v0.10.16&lt;/a&gt;, which is not
released yet.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-synopsis" class="anchor" aria-hidden="true" href="#synopsis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Synopsis&lt;/h1&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# set search paths for pure Lua external libraries (';;' is the default path):&lt;/span&gt;
 &lt;span class="pl-k"&gt;lua_package_path&lt;/span&gt; &lt;span class="pl-s"&gt;'/foo/bar/?.lua;/blah/?.lua;;'&lt;/span&gt;;

 &lt;span class="pl-c"&gt;# set search paths for Lua external libraries written in C (can also use ';;'):&lt;/span&gt;
 &lt;span class="pl-k"&gt;lua_package_cpath&lt;/span&gt; &lt;span class="pl-s"&gt;'/bar/baz/?.so;/blah/blah/?.so;;'&lt;/span&gt;;

 &lt;span class="pl-k"&gt;server&lt;/span&gt; {
     &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/lua_content &lt;/span&gt;{
         &lt;span class="pl-c"&gt;# MIME type determined by default_type:&lt;/span&gt;
         &lt;span class="pl-k"&gt;default_type&lt;/span&gt; &lt;span class="pl-s"&gt;'text/plain'&lt;/span&gt;;

         &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
             ngx.say('Hello,world!')
         }
     }

     &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/nginx_var &lt;/span&gt;{
         &lt;span class="pl-c"&gt;# MIME type determined by default_type:&lt;/span&gt;
         &lt;span class="pl-k"&gt;default_type&lt;/span&gt; &lt;span class="pl-s"&gt;'text/plain'&lt;/span&gt;;

         &lt;span class="pl-c"&gt;# try access /nginx_var?a=hello,world&lt;/span&gt;
         &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
             ngx.say(ngx.var.arg_a)
         }
     }

     &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /request_body &lt;/span&gt;{
         &lt;span class="pl-k"&gt;client_max_body_size&lt;/span&gt; &lt;span class="pl-c1"&gt;50k&lt;/span&gt;;
         &lt;span class="pl-k"&gt;client_body_buffer_size&lt;/span&gt; &lt;span class="pl-c1"&gt;50k&lt;/span&gt;;

         &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
             ngx.req.read_body()  -- &lt;span class="pl-k"&gt;explicitly&lt;/span&gt; read the req body
             &lt;span class="pl-k"&gt;local&lt;/span&gt; data = ngx.req.get_body_data()
             &lt;span class="pl-k"&gt;if&lt;/span&gt; data then
                 ngx.say("&lt;span class="pl-k"&gt;body&lt;/span&gt; data:&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.print(data)&lt;/span&gt;
&lt;span class="pl-s"&gt;                 return&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;             -- body may get buffered in a temp file:&lt;/span&gt;
&lt;span class="pl-s"&gt;             local file = ngx.req.get_body_file()&lt;/span&gt;
&lt;span class="pl-s"&gt;             if file then&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say("&lt;/span&gt;body is in file &lt;span class="pl-s"&gt;", file)&lt;/span&gt;
&lt;span class="pl-s"&gt;             else&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say("&lt;/span&gt;no body found&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;         }&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     # transparent non-blocking I/O in Lua via subrequests&lt;/span&gt;
&lt;span class="pl-s"&gt;     # (well, a better way is to use cosockets)&lt;/span&gt;
&lt;span class="pl-s"&gt;     location = /lua {&lt;/span&gt;
&lt;span class="pl-s"&gt;         # MIME type determined by default_type:&lt;/span&gt;
&lt;span class="pl-s"&gt;         default_type 'text/plain';&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         content_by_lua_block {&lt;/span&gt;
&lt;span class="pl-s"&gt;             local res = ngx.location.capture("&lt;/span&gt;/some_other_location&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;             if res then&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say("&lt;/span&gt;status: &lt;span class="pl-s"&gt;", res.status)&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say("&lt;/span&gt;body:&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.print(res.body)&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;         }&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     location = /foo {&lt;/span&gt;
&lt;span class="pl-s"&gt;         rewrite_by_lua_block {&lt;/span&gt;
&lt;span class="pl-s"&gt;             res = ngx.location.capture("&lt;/span&gt;/memc&lt;span class="pl-s"&gt;",&lt;/span&gt;
&lt;span class="pl-s"&gt;                 { args = { cmd = "&lt;/span&gt;incr&lt;span class="pl-s"&gt;", key = ngx.var.uri } }&lt;/span&gt;
&lt;span class="pl-s"&gt;             )&lt;/span&gt;
&lt;span class="pl-s"&gt;         }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         proxy_pass http://blah.blah.com;&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     location = /mixed {&lt;/span&gt;
&lt;span class="pl-s"&gt;         rewrite_by_lua_file /path/to/rewrite.lua;&lt;/span&gt;
&lt;span class="pl-s"&gt;         access_by_lua_file /path/to/access.lua;&lt;/span&gt;
&lt;span class="pl-s"&gt;         content_by_lua_file /path/to/content.lua;&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     # use nginx var in code path&lt;/span&gt;
&lt;span class="pl-s"&gt;     # CAUTION: contents in nginx var must be carefully filtered,&lt;/span&gt;
&lt;span class="pl-s"&gt;     # otherwise there'll be great security risk!&lt;/span&gt;
&lt;span class="pl-s"&gt;     location ~ ^/app/([-_a-zA-Z0-9/]+) {&lt;/span&gt;
&lt;span class="pl-s"&gt;         set &lt;span class="pl-smi"&gt;$path&lt;/span&gt; &lt;span class="pl-smi"&gt;$1&lt;/span&gt;;&lt;/span&gt;
&lt;span class="pl-s"&gt;         content_by_lua_file /path/to/lua/app/root/&lt;span class="pl-smi"&gt;$path&lt;/span&gt;.lua;&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     location / {&lt;/span&gt;
&lt;span class="pl-s"&gt;        client_max_body_size 100k;&lt;/span&gt;
&lt;span class="pl-s"&gt;        client_body_buffer_size 100k;&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        access_by_lua_block {&lt;/span&gt;
&lt;span class="pl-s"&gt;            -- check the client IP address is in our black list&lt;/span&gt;
&lt;span class="pl-s"&gt;            if ngx.var.remote_addr == "&lt;/span&gt;132.5.72.3&lt;span class="pl-s"&gt;" then&lt;/span&gt;
&lt;span class="pl-s"&gt;                ngx.exit(ngx.HTTP_FORBIDDEN)&lt;/span&gt;
&lt;span class="pl-s"&gt;            end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            -- check if the URI contains bad words&lt;/span&gt;
&lt;span class="pl-s"&gt;            if ngx.var.uri and&lt;/span&gt;
&lt;span class="pl-s"&gt;                   string.match(ngx.var.request_body, "&lt;/span&gt;evil&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;            then&lt;/span&gt;
&lt;span class="pl-s"&gt;                return ngx.redirect("&lt;/span&gt;/terms_of_use.html&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;            end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            -- tests passed&lt;/span&gt;
&lt;span class="pl-s"&gt;        }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        # proxy_pass/fastcgi_pass/etc settings&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-description" class="anchor" aria-hidden="true" href="#description"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Description&lt;/h1&gt;
&lt;p&gt;This module embeds &lt;a href="https://luajit.org/luajit.html" rel="nofollow"&gt;LuaJIT 2.0/2.1&lt;/a&gt; into Nginx.
It is a core component of &lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty&lt;/a&gt;. If you are using
this module, then you are essentially using OpenResty.&lt;/p&gt;
&lt;p&gt;Since version &lt;code&gt;v0.10.16&lt;/code&gt; of this module, the standard Lua
interpreter (also known as "PUC-Rio Lua") is not supported anymore. This
document interchangeably uses the terms "Lua" and "LuaJIT" to refer to the
LuaJIT interpreter.&lt;/p&gt;
&lt;p&gt;By leveraging Nginx's subrequests, this module allows the integration of the
powerful Lua threads (known as Lua "coroutines") into the Nginx event model.&lt;/p&gt;
&lt;p&gt;Unlike &lt;a href="https://httpd.apache.org/docs/trunk/mod/mod_lua.html" rel="nofollow"&gt;Apache's mod_lua&lt;/a&gt;
and &lt;a href="http://redmine.lighttpd.net/wiki/1/Docs:ModMagnet" rel="nofollow"&gt;Lighttpd's mod_magnet&lt;/a&gt;,
Lua code executed using this module can be &lt;em&gt;100% non-blocking&lt;/em&gt; on network
traffic as long as the &lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt; provided by
this module is used to handle requests to upstream services such as MySQL,
PostgreSQL, Memcached, Redis, or upstream HTTP web services.&lt;/p&gt;
&lt;p&gt;At least the following Lua libraries and Nginx modules can be used with this
module:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-memcached"&gt;lua-resty-memcached&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-mysql"&gt;lua-resty-mysql&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-redis"&gt;lua-resty-redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-dns"&gt;lua-resty-dns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-upload"&gt;lua-resty-upload&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-websocket"&gt;lua-resty-websocket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-lock"&gt;lua-resty-lock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cloudflare/lua-resty-logger-socket"&gt;lua-resty-logger-socket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-lrucache"&gt;lua-resty-lrucache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-string"&gt;lua-resty-string&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/memc-nginx-module"&gt;ngx_memc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FRiCKLE/ngx_postgres"&gt;ngx_postgres&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/redis2-nginx-module"&gt;ngx_redis2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wiki.nginx.org/HttpRedisModule" rel="nofollow"&gt;ngx_redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_proxy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html" rel="nofollow"&gt;ngx_fastcgi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Almost any Nginx modules can be used with this ngx_lua module by means of
&lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; or
&lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt; but it is
recommended to use those &lt;code&gt;lua-resty-*&lt;/code&gt; libraries instead of creating
subrequests to access the Nginx upstream modules because the former is usually
much more flexible and memory-efficient.&lt;/p&gt;
&lt;p&gt;The Lua interpreter (also known as "Lua State" or "LuaJIT VM instance") is
shared across all the requests in a single Nginx worker process to minimize
memory use. Request contexts are segregated using lightweight Lua coroutines.&lt;/p&gt;
&lt;p&gt;Loaded Lua modules persist in the Nginx worker process level resulting in a
small memory footprint in Lua even when under heavy loads.&lt;/p&gt;
&lt;p&gt;This module is plugged into Nginx's "http" subsystem so it can only speaks
downstream communication protocols in the HTTP family (HTTP 0.9/1.0/1.1/2.0,
WebSockets, etc...).  If you want to do generic TCP communications with the
downstream clients, then you should use the
&lt;a href="https://github.com/openresty/stream-lua-nginx-module#readme"&gt;ngx_stream_lua&lt;/a&gt;
module instead, which offers a compatible Lua API.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-typical-uses" class="anchor" aria-hidden="true" href="#typical-uses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Typical Uses&lt;/h1&gt;
&lt;p&gt;Just to name a few:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mashup'ing and processing outputs of various Nginx upstream outputs (proxy, drizzle, postgres, redis, memcached, and etc) in Lua,&lt;/li&gt;
&lt;li&gt;doing arbitrarily complex access control and security checks in Lua before requests actually reach the upstream backends,&lt;/li&gt;
&lt;li&gt;manipulating response headers in an arbitrary way (by Lua)&lt;/li&gt;
&lt;li&gt;fetching backend information from external storage backends (like redis, memcached, mysql, postgresql) and use that information to choose which upstream backend to access on-the-fly,&lt;/li&gt;
&lt;li&gt;coding up arbitrarily complex web applications in a content handler using synchronous but still non-blocking access to the database backends and other storage,&lt;/li&gt;
&lt;li&gt;doing very complex URL dispatch in Lua at rewrite phase,&lt;/li&gt;
&lt;li&gt;using Lua to implement advanced caching mechanism for Nginx's subrequests and arbitrary locations.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The possibilities are unlimited as the module allows bringing together various
elements within Nginx as well as exposing the power of the Lua language to the
user. The module provides the full flexibility of scripting while offering
performance levels comparable with native C language programs both in terms of
CPU time as well as memory footprint thanks to LuaJIT 2.x.&lt;/p&gt;
&lt;p&gt;Other scripting language implementations typically struggle to match this
performance level.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-nginx-compatibility" class="anchor" aria-hidden="true" href="#nginx-compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nginx Compatibility&lt;/h1&gt;
&lt;p&gt;The latest version of this module is compatible with the following versions of Nginx:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.17.x  (last tested: 1.17.4)&lt;/li&gt;
&lt;li&gt;1.15.x  (last tested: 1.15.8)&lt;/li&gt;
&lt;li&gt;1.14.x&lt;/li&gt;
&lt;li&gt;1.13.x  (last tested: 1.13.6)&lt;/li&gt;
&lt;li&gt;1.12.x&lt;/li&gt;
&lt;li&gt;1.11.x  (last tested: 1.11.2)&lt;/li&gt;
&lt;li&gt;1.10.x&lt;/li&gt;
&lt;li&gt;1.9.x (last tested: 1.9.15)&lt;/li&gt;
&lt;li&gt;1.8.x&lt;/li&gt;
&lt;li&gt;1.7.x (last tested: 1.7.10)&lt;/li&gt;
&lt;li&gt;1.6.x&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nginx cores older than 1.6.0 (exclusive) are &lt;em&gt;not&lt;/em&gt; supported.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;It is &lt;em&gt;highly&lt;/em&gt; recommended to use &lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty releases&lt;/a&gt;
which bundle Nginx, ngx_lua (this module), LuaJIT, as well as other powerful
companion Nginx modules and Lua libraries.&lt;/p&gt;
&lt;p&gt;It is discouraged to build this module with Nginx yourself since it is tricky
to set up exactly right.&lt;/p&gt;
&lt;p&gt;Note that Nginx, LuaJIT, and OpenSSL official releases have various limitations
and long standing bugs that can cause some of this module's features to be
disabled, not work properly, or run slower. Official OpenResty releases are
recommended because they bundle &lt;a href="https://github.com/openresty/luajit2"&gt;OpenResty's optimized LuaJIT 2.1 fork&lt;/a&gt; and
&lt;a href="https://github.com/openresty/openresty/tree/master/patches"&gt;Nginx/OpenSSL
patches&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Alternatively, ngx_lua can be manually compiled into Nginx:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;LuaJIT can be downloaded from the &lt;a href="https://github.com/openresty/luajit2/releases"&gt;latest release of OpenResty's LuaJIT fork&lt;/a&gt;. The official LuaJIT 2.x releases are also supported, although performance will be significantly lower for reasons elaborated above&lt;/li&gt;
&lt;li&gt;Download the latest version of the ngx_devel_kit (NDK) module &lt;a href="https://github.com/simplresty/ngx_devel_kit/tags"&gt;HERE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download the latest version of ngx_lua &lt;a href="https://github.com/openresty/lua-nginx-module/tags"&gt;HERE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download the latest supported version of Nginx &lt;a href="https://nginx.org/" rel="nofollow"&gt;HERE&lt;/a&gt; (See &lt;a href="#nginx-compatibility"&gt;Nginx Compatibility&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Build the source with this module:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; wget &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://nginx.org/download/nginx-1.13.6.tar.gz&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
 tar -xzvf nginx-1.13.6.tar.gz
 &lt;span class="pl-c1"&gt;cd&lt;/span&gt; nginx-1.13.6/

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; tell nginx's build system where to find LuaJIT 2.0:&lt;/span&gt;
 &lt;span class="pl-k"&gt;export&lt;/span&gt; LUAJIT_LIB=/path/to/luajit/lib
 &lt;span class="pl-k"&gt;export&lt;/span&gt; LUAJIT_INC=/path/to/luajit/include/luajit-2.0

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; tell nginx's build system where to find LuaJIT 2.1:&lt;/span&gt;
 &lt;span class="pl-k"&gt;export&lt;/span&gt; LUAJIT_LIB=/path/to/luajit/lib
 &lt;span class="pl-k"&gt;export&lt;/span&gt; LUAJIT_INC=/path/to/luajit/include/luajit-2.1

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Here we assume Nginx is to be installed under /opt/nginx/.&lt;/span&gt;
 ./configure --prefix=/opt/nginx \
         --with-ld-opt=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-Wl,-rpath,/path/to/luajit/lib&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
         --add-module=/path/to/ngx_devel_kit \
         --add-module=/path/to/lua-nginx-module

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Note that you may also want to add `./configure` options which are used in your&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; current nginx build.&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; You can get usually those options using command nginx -V&lt;/span&gt;

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; you can change the parallism number 2 below to fit the number of spare CPU cores in your&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; machine.&lt;/span&gt;
 make -j2
 make install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-as-a-dynamic-module" class="anchor" aria-hidden="true" href="#building-as-a-dynamic-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building as a dynamic module&lt;/h2&gt;
&lt;p&gt;Starting from NGINX 1.9.11, you can also compile this module as a dynamic module, by using the &lt;code&gt;--add-dynamic-module=PATH&lt;/code&gt; option instead of &lt;code&gt;--add-module=PATH&lt;/code&gt; on the
&lt;code&gt;./configure&lt;/code&gt; command line above. And then you can explicitly load the module in your &lt;code&gt;nginx.conf&lt;/code&gt; via the &lt;a href="https://nginx.org/en/docs/ngx_core_module.html#load_module" rel="nofollow"&gt;load_module&lt;/a&gt;
directive, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;load_module&lt;/span&gt; /path/to/modules/ndk_http_module.so;  &lt;span class="pl-c"&gt;# assuming NDK is built as a dynamic module too&lt;/span&gt;
 &lt;span class="pl-k"&gt;load_module&lt;/span&gt; /path/to/modules/ngx_http_lua_module.so;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-c-macro-configurations" class="anchor" aria-hidden="true" href="#c-macro-configurations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;C Macro Configurations&lt;/h2&gt;
&lt;p&gt;While building this module either via OpenResty or with the Nginx core, you can define the following C macros via the C compiler options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;NGX_LUA_USE_ASSERT&lt;/code&gt;
When defined, will enable assertions in the ngx_lua C code base. Recommended for debugging or testing builds. It can introduce some (small) runtime overhead when enabled. This macro was first introduced in the &lt;code&gt;v0.9.10&lt;/code&gt; release.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NGX_LUA_ABORT_AT_PANIC&lt;/code&gt;
When the LuaJIT VM panics, ngx_lua will instruct the current nginx worker process to quit gracefully by default. By specifying this C macro, ngx_lua will abort the current nginx worker process (which usually result in a core dump file) immediately. This option is useful for debugging VM panics. This option was first introduced in the &lt;code&gt;v0.9.8&lt;/code&gt; release.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To enable one or more of these macros, just pass extra C compiler options to the &lt;code&gt;./configure&lt;/code&gt; script of either Nginx or OpenResty. For instance,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --with-cc-opt="-DNGX_LUA_USE_ASSERT -DNGX_LUA_ABORT_AT_PANIC"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h1&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-english-mailing-list" class="anchor" aria-hidden="true" href="#english-mailing-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;English Mailing List&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://groups.google.com/group/openresty-en" rel="nofollow"&gt;openresty-en&lt;/a&gt; mailing list is for English speakers.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-chinese-mailing-list" class="anchor" aria-hidden="true" href="#chinese-mailing-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chinese Mailing List&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://groups.google.com/group/openresty" rel="nofollow"&gt;openresty&lt;/a&gt; mailing list is for Chinese speakers.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-code-repository" class="anchor" aria-hidden="true" href="#code-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Repository&lt;/h1&gt;
&lt;p&gt;The code repository of this project is hosted on GitHub at
&lt;a href="https://github.com/openresty/lua-nginx-module"&gt;openresty/lua-nginx-module&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-bugs-and-patches" class="anchor" aria-hidden="true" href="#bugs-and-patches"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bugs and Patches&lt;/h1&gt;
&lt;p&gt;Please submit bug reports, wishlists, or patches by&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;creating a ticket on the &lt;a href="https://github.com/openresty/lua-nginx-module/issues"&gt;GitHub Issue Tracker&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;or posting to the &lt;a href="#community"&gt;OpenResty community&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-luajit-bytecode-support" class="anchor" aria-hidden="true" href="#luajit-bytecode-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LuaJIT bytecode support&lt;/h1&gt;
&lt;p&gt;As from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, all &lt;code&gt;*_by_lua_file&lt;/code&gt; configure directives (such as &lt;a href="#content_by_lua_file"&gt;content_by_lua_file&lt;/a&gt;) support loading LuaJIT 2.0/2.1 raw bytecode files directly:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; /path/to/luajit/bin/luajit -b /path/to/input_file.lua /path/to/output_file.ljbc&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;-bg&lt;/code&gt; option can be used to include debug information in the LuaJIT bytecode file:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; /path/to/luajit/bin/luajit -bg /path/to/input_file.lua /path/to/output_file.ljbc&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please refer to the official LuaJIT documentation on the &lt;code&gt;-b&lt;/code&gt; option for more details:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://luajit.org/running.html#opt_b" rel="nofollow"&gt;https://luajit.org/running.html#opt_b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note that the bytecode files generated by LuaJIT 2.1 is &lt;em&gt;not&lt;/em&gt; compatible with
LuaJIT 2.0, and vice versa. The support for LuaJIT 2.1 bytecode was first added
in ngx_lua v0.9.3.&lt;/p&gt;
&lt;p&gt;Attempts to load standard Lua 5.1 bytecode files into ngx_lua instances linked
to LuaJIT 2.0/2.1 (or vice versa) will result in an Nginx error message such as
the one below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[error] 13909#0: *1 failed to load Lua inlined code: bad byte-code header in /path/to/test_file.luac
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Loading bytecode files via the Lua primitives like &lt;code&gt;require&lt;/code&gt; and
&lt;code&gt;dofile&lt;/code&gt; should always work as expected.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-system-environment-variable-support" class="anchor" aria-hidden="true" href="#system-environment-variable-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System Environment Variable Support&lt;/h1&gt;
&lt;p&gt;If you want to access the system environment variable, say, &lt;code&gt;foo&lt;/code&gt;, in Lua via the standard Lua API &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-os.getenv" rel="nofollow"&gt;os.getenv&lt;/a&gt;, then you should also list this environment variable name in your &lt;code&gt;nginx.conf&lt;/code&gt; file via the &lt;a href="https://nginx.org/en/docs/ngx_core_module.html#env" rel="nofollow"&gt;env directive&lt;/a&gt;. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;env&lt;/span&gt; foo;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-http-10-support" class="anchor" aria-hidden="true" href="#http-10-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTTP 1.0 support&lt;/h1&gt;
&lt;p&gt;The HTTP 1.0 protocol does not support chunked output and requires an explicit &lt;code&gt;Content-Length&lt;/code&gt; header when the response body is not empty in order to support the HTTP 1.0 keep-alive.
So when a HTTP 1.0 request is made and the &lt;a href="#lua_http10_buffering"&gt;lua_http10_buffering&lt;/a&gt; directive is turned &lt;code&gt;on&lt;/code&gt;, ngx_lua will buffer the
output of &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; and &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; calls and also postpone sending response headers until all the response body output is received.
At that time ngx_lua can calculate the total length of the body and construct a proper &lt;code&gt;Content-Length&lt;/code&gt; header to return to the HTTP 1.0 client.
If the &lt;code&gt;Content-Length&lt;/code&gt; response header is set in the running Lua code, however, this buffering will be disabled even if the &lt;a href="#lua_http10_buffering"&gt;lua_http10_buffering&lt;/a&gt; directive is turned &lt;code&gt;on&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For large streaming output responses, it is important to disable the &lt;a href="#lua_http10_buffering"&gt;lua_http10_buffering&lt;/a&gt; directive to minimise memory usage.&lt;/p&gt;
&lt;p&gt;Note that common HTTP benchmark tools such as &lt;code&gt;ab&lt;/code&gt; and &lt;code&gt;http_load&lt;/code&gt; issue HTTP 1.0 requests by default.
To force &lt;code&gt;curl&lt;/code&gt; to send HTTP 1.0 requests, use the &lt;code&gt;-0&lt;/code&gt; option.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-statically-linking-pure-lua-modules" class="anchor" aria-hidden="true" href="#statically-linking-pure-lua-modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Statically Linking Pure Lua Modules&lt;/h1&gt;
&lt;p&gt;With LuaJIT 2.x, it is possible to statically link the bytecode of pure Lua
modules into the Nginx executable.&lt;/p&gt;
&lt;p&gt;You can use the &lt;code&gt;luajit&lt;/code&gt; executable to compile &lt;code&gt;.lua&lt;/code&gt; Lua
module files to &lt;code&gt;.o&lt;/code&gt; object files containing the exported bytecode
data, and then link the &lt;code&gt;.o&lt;/code&gt; files directly in your Nginx build.&lt;/p&gt;
&lt;p&gt;Below is a trivial example to demonstrate this. Consider that we have the following &lt;code&gt;.lua&lt;/code&gt; file named &lt;code&gt;foo.lua&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; foo.lua&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; _M &lt;span class="pl-k"&gt;=&lt;/span&gt; {}

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;_M.go&lt;/span&gt;()
     &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello from foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;return&lt;/span&gt; _M&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then we compile this &lt;code&gt;.lua&lt;/code&gt; file to &lt;code&gt;foo.o&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; /path/to/luajit/bin/luajit -bg foo.lua foo.o&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What matters here is the name of the &lt;code&gt;.lua&lt;/code&gt; file, which determines how you use this module later on the Lua land. The file name &lt;code&gt;foo.o&lt;/code&gt; does not matter at all except the &lt;code&gt;.o&lt;/code&gt; file extension (which tells &lt;code&gt;luajit&lt;/code&gt; what output format is used). If you want to strip the Lua debug information from the resulting bytecode, you can just specify the &lt;code&gt;-b&lt;/code&gt; option above instead of &lt;code&gt;-bg&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then when building Nginx or OpenResty, pass the &lt;code&gt;--with-ld-opt="foo.o"&lt;/code&gt; option to the &lt;code&gt;./configure&lt;/code&gt; script:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; ./configure --with-ld-opt=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/foo.o&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, you can just do the following in any Lua code run by ngx_lua:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; foo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 foo.&lt;span class="pl-c1"&gt;go&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And this piece of code no longer depends on the external &lt;code&gt;foo.lua&lt;/code&gt; file any more because it has already been compiled into the &lt;code&gt;nginx&lt;/code&gt; executable.&lt;/p&gt;
&lt;p&gt;If you want to use dot in the Lua module name when calling &lt;code&gt;require&lt;/code&gt;, as in&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; foo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then you need to rename the &lt;code&gt;foo.lua&lt;/code&gt; file to &lt;code&gt;resty_foo.lua&lt;/code&gt; before compiling it down to a &lt;code&gt;.o&lt;/code&gt; file with the &lt;code&gt;luajit&lt;/code&gt; command-line utility.&lt;/p&gt;
&lt;p&gt;It is important to use exactly the same version of LuaJIT when compiling &lt;code&gt;.lua&lt;/code&gt; files to &lt;code&gt;.o&lt;/code&gt; files as building nginx + ngx_lua. This is because the LuaJIT bytecode format may be incompatible between different LuaJIT versions. When the bytecode format is incompatible, you will see a Lua runtime error saying that the Lua module is not found.&lt;/p&gt;
&lt;p&gt;When you have multiple &lt;code&gt;.lua&lt;/code&gt; files to compile and link, then just specify their &lt;code&gt;.o&lt;/code&gt; files at the same time in the value of the &lt;code&gt;--with-ld-opt&lt;/code&gt; option. For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; ./configure --with-ld-opt=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/foo.o /path/to/bar.o&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have too many &lt;code&gt;.o&lt;/code&gt; files, then it might not be feasible to name them all in a single command. In this case, you can build a static library (or archive) for your &lt;code&gt;.o&lt;/code&gt; files, as in&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; ar rcus libmyluafiles.a &lt;span class="pl-k"&gt;*&lt;/span&gt;.o&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then you can link the &lt;code&gt;myluafiles&lt;/code&gt; archive as a whole to your nginx executable:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; ./configure \
     --with-ld-opt=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-L/path/to/lib -Wl,--whole-archive -lmyluafiles -Wl,--no-whole-archive&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;where &lt;code&gt;/path/to/lib&lt;/code&gt; is the path of the directory containing the &lt;code&gt;libmyluafiles.a&lt;/code&gt; file. It should be noted that the linker option &lt;code&gt;--whole-archive&lt;/code&gt; is required here because otherwise our archive will be skipped because no symbols in our archive are mentioned in the main parts of the nginx executable.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-data-sharing-within-an-nginx-worker" class="anchor" aria-hidden="true" href="#data-sharing-within-an-nginx-worker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Sharing within an Nginx Worker&lt;/h1&gt;
&lt;p&gt;To globally share data among all the requests handled by the same Nginx worker
process, encapsulate the shared data into a Lua module, use the Lua
&lt;code&gt;require&lt;/code&gt; builtin to import the module, and then manipulate the
shared data in Lua. This works because required Lua modules are loaded only
once and all coroutines will share the same copy of the module (both its code
and data).&lt;/p&gt;
&lt;p&gt;Note that the use of global Lua variables is &lt;em&gt;strongly discouraged&lt;/em&gt;, as it may
lead to unexpected race conditions between concurrent requests.&lt;/p&gt;
&lt;p&gt;Here is a small example on sharing data within an Nginx worker via a Lua module:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; mydata.lua&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; _M &lt;span class="pl-k"&gt;=&lt;/span&gt; {}

 &lt;span class="pl-k"&gt;local&lt;/span&gt; data &lt;span class="pl-k"&gt;=&lt;/span&gt; {
     dog &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;,
     cat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;,
     pig &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;,
 }

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;_M.get_age&lt;/span&gt;(&lt;span class="pl-smi"&gt;name&lt;/span&gt;)
     &lt;span class="pl-k"&gt;return&lt;/span&gt; data[name]
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;return&lt;/span&gt; _M&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and then accessing it from &lt;code&gt;nginx.conf&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/lua &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; mydata = require &lt;span class="pl-s"&gt;"mydata"&lt;/span&gt;
         ngx.say(mydata.get_age("dog"))
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;mydata&lt;/code&gt; module in this example will only be loaded and run on the first request to the location &lt;code&gt;/lua&lt;/code&gt;,
and all subsequent requests to the same Nginx worker process will use the reloaded instance of the
module as well as the same copy of the data in it, until a &lt;code&gt;HUP&lt;/code&gt; signal is sent to the Nginx master process to force a reload.
This data sharing technique is essential for high performance Lua applications based on this module.&lt;/p&gt;
&lt;p&gt;Note that this data sharing is on a &lt;em&gt;per-worker&lt;/em&gt; basis and not on a &lt;em&gt;per-server&lt;/em&gt; basis. That is, when there are multiple Nginx worker processes under an Nginx master, data sharing cannot cross the process boundary between these workers.&lt;/p&gt;
&lt;p&gt;It is usually recommended to share read-only data this way. You can also share changeable data among all the concurrent requests of each Nginx worker process as
long as there is &lt;em&gt;no&lt;/em&gt; nonblocking I/O operations (including &lt;a href="#ngxsleep"&gt;ngx.sleep&lt;/a&gt;)
in the middle of your calculations. As long as you do not give the
control back to the Nginx event loop and ngx_lua's light thread
scheduler (even implicitly), there can never be any race conditions in
between. For this reason, always be very careful when you want to share changeable data on the
worker level. Buggy optimizations can easily lead to hard-to-debug
race conditions under load.&lt;/p&gt;
&lt;p&gt;If server-wide data sharing is required, then use one or more of the following approaches:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Use the &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; API provided by this module.&lt;/li&gt;
&lt;li&gt;Use only a single Nginx worker and a single server (this is however not recommended when there is a multi core CPU or multiple CPUs in a single machine).&lt;/li&gt;
&lt;li&gt;Use data storage mechanisms such as &lt;code&gt;memcached&lt;/code&gt;, &lt;code&gt;redis&lt;/code&gt;, &lt;code&gt;MySQL&lt;/code&gt; or &lt;code&gt;PostgreSQL&lt;/code&gt;. &lt;a href="https://openresty.org" rel="nofollow"&gt;The OpenResty official releases&lt;/a&gt; come with a set of companion Nginx modules and Lua libraries that provide interfaces with these data storage mechanisms.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-known-issues" class="anchor" aria-hidden="true" href="#known-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Known Issues&lt;/h1&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcp-socket-connect-operation-issues" class="anchor" aria-hidden="true" href="#tcp-socket-connect-operation-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TCP socket connect operation issues&lt;/h2&gt;
&lt;p&gt;The &lt;a href="#tcpsockconnect"&gt;tcpsock:connect&lt;/a&gt; method may indicate &lt;code&gt;success&lt;/code&gt; despite connection failures such as with &lt;code&gt;Connection Refused&lt;/code&gt; errors.&lt;/p&gt;
&lt;p&gt;However, later attempts to manipulate the cosocket object will fail and return the actual error status message generated by the failed connect operation.&lt;/p&gt;
&lt;p&gt;This issue is due to limitations in the Nginx event model and only appears to affect Mac OS X.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua-coroutine-yieldingresuming" class="anchor" aria-hidden="true" href="#lua-coroutine-yieldingresuming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lua Coroutine Yielding/Resuming&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Because Lua's &lt;code&gt;dofile&lt;/code&gt; and &lt;code&gt;require&lt;/code&gt; builtins are currently implemented as C functions in LuaJIT 2.0/2.1, if the Lua file being loaded by &lt;code&gt;dofile&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt; invokes &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture*&lt;/a&gt;, &lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;, &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;, or other API functions requiring yielding in the &lt;em&gt;top-level&lt;/em&gt; scope of the Lua file, then the Lua error "attempt to yield across C-call boundary" will be raised. To avoid this, put these calls requiring yielding into your own Lua functions in the Lua file instead of the top-level scope of the file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua-variable-scope" class="anchor" aria-hidden="true" href="#lua-variable-scope"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lua Variable Scope&lt;/h2&gt;
&lt;p&gt;Care must be taken when importing modules, and this form should be used:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; xxx &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;xxx&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;instead of the old deprecated form:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;xxx&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here is the reason: by design, the global environment has exactly the same lifetime as the Nginx request handler associated with it. Each request handler has its own set of Lua global variables and that is the idea of request isolation. The Lua module is actually loaded by the first Nginx request handler and is cached by the &lt;code&gt;require()&lt;/code&gt; built-in in the &lt;code&gt;package.loaded&lt;/code&gt; table for later reference, and the &lt;code&gt;module()&lt;/code&gt; builtin used by some Lua modules has the side effect of setting a global variable to the loaded module table. But this global variable will be cleared at the end of the request handler,  and every subsequent request handler all has its own (clean) global environment. So one will get Lua exception for accessing the &lt;code&gt;nil&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;The use of Lua global variables is a generally inadvisable in the ngx_lua context as:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;the misuse of Lua globals has detrimental side effects on concurrent requests when such variables should instead be local in scope,&lt;/li&gt;
&lt;li&gt;Lua global variables require Lua table look-ups in the global environment which is computationally expensive, and&lt;/li&gt;
&lt;li&gt;some Lua global variable references may include typing errors which make such difficult to debug.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It is therefore &lt;em&gt;highly&lt;/em&gt; recommended to always declare such within an appropriate local scope instead.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Avoid&lt;/span&gt;
 foo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;123&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Recommended&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; foo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;123&lt;/span&gt;

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Avoid&lt;/span&gt;
 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;foo&lt;/span&gt;() &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;123&lt;/span&gt; &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Recommended&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;foo&lt;/span&gt;() &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;123&lt;/span&gt; &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To find all instances of Lua global variables in your Lua code, run the &lt;a href="https://github.com/openresty/nginx-devel-utils/blob/master/lua-releng"&gt;lua-releng tool&lt;/a&gt; across all &lt;code&gt;.lua&lt;/code&gt; source files:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ lua-releng
Checking use of Lua global variables in file lib/foo/bar.lua ...
        1       [1489]  SETGLOBAL       7 -1    ; contains
        55      [1506]  GETGLOBAL       7 -3    ; setvar
        3       [1545]  GETGLOBAL       3 -4    ; varexpand
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The output says that the line 1489 of file &lt;code&gt;lib/foo/bar.lua&lt;/code&gt; writes to a global variable named &lt;code&gt;contains&lt;/code&gt;, the line 1506 reads from the global variable &lt;code&gt;setvar&lt;/code&gt;, and line 1545 reads the global &lt;code&gt;varexpand&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This tool will guarantee that local variables in the Lua module functions are all declared with the &lt;code&gt;local&lt;/code&gt; keyword, otherwise a runtime exception will be thrown. It prevents undesirable race conditions while accessing such variables. See &lt;a href="#data-sharing-within-an-nginx-worker"&gt;Data Sharing within an Nginx Worker&lt;/a&gt; for the reasons behind this.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-locations-configured-by-subrequest-directives-of-other-modules" class="anchor" aria-hidden="true" href="#locations-configured-by-subrequest-directives-of-other-modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Locations Configured by Subrequest Directives of Other Modules&lt;/h2&gt;
&lt;p&gt;The &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt; directives cannot capture locations that include the &lt;a href="http://nginx.org/en/docs/http/ngx_http_addition_module.html#add_before_body" rel="nofollow"&gt;add_before_body&lt;/a&gt;, &lt;a href="http://nginx.org/en/docs/http/ngx_http_addition_module.html#add_after_body" rel="nofollow"&gt;add_after_body&lt;/a&gt;, &lt;a href="https://nginx.org/en/docs/http/ngx_http_auth_request_module.html#auth_request" rel="nofollow"&gt;auth_request&lt;/a&gt;, &lt;a href="http://github.com/openresty/echo-nginx-module#echo_location"&gt;echo_location&lt;/a&gt;, &lt;a href="http://github.com/openresty/echo-nginx-module#echo_location_async"&gt;echo_location_async&lt;/a&gt;, &lt;a href="http://github.com/openresty/echo-nginx-module#echo_subrequest"&gt;echo_subrequest&lt;/a&gt;, or &lt;a href="http://github.com/openresty/echo-nginx-module#echo_subrequest_async"&gt;echo_subrequest_async&lt;/a&gt; directives.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;res&lt;/span&gt; = ngx.location.capture(&lt;span class="pl-s"&gt;"/bar"&lt;/span&gt;)
     }
 }
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/bar &lt;/span&gt;{
     &lt;span class="pl-k"&gt;echo_location&lt;/span&gt; /blah;
 }
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/blah &lt;/span&gt;{
     &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"Success!"&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; $ &lt;span class="pl-k"&gt;curl&lt;/span&gt; -i http://example.com/foo&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will not work as expected.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-cosockets-not-available-everywhere" class="anchor" aria-hidden="true" href="#cosockets-not-available-everywhere"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cosockets Not Available Everywhere&lt;/h2&gt;
&lt;p&gt;Due to internal limitations in the Nginx core, the cosocket API is disabled in the following contexts: &lt;a href="#set_by_lua"&gt;set_by_lua*&lt;/a&gt;, &lt;a href="#log_by_lua"&gt;log_by_lua*&lt;/a&gt;, &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua*&lt;/a&gt;, and &lt;a href="#body_filter_by_lua"&gt;body_filter_by_lua&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The cosockets are currently also disabled in the &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; and &lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua*&lt;/a&gt; directive contexts but we may add support for these contexts in the future because there is no limitation in the Nginx core (or the limitation might be worked around).&lt;/p&gt;
&lt;p&gt;There exists a workaround, however, when the original context does &lt;em&gt;not&lt;/em&gt; need to wait for the cosocket results. That is, creating a zero-delay timer via the &lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt; API and do the cosocket results in the timer handler, which runs asynchronously as to the original context creating the timer.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-special-escaping-sequences" class="anchor" aria-hidden="true" href="#special-escaping-sequences"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Special Escaping Sequences&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Following the &lt;code&gt;v0.9.17&lt;/code&gt; release, this pitfall can be avoided by using the &lt;code&gt;*_by_lua_block {}&lt;/code&gt; configuration directives.&lt;/p&gt;
&lt;p&gt;PCRE sequences such as &lt;code&gt;\d&lt;/code&gt;, &lt;code&gt;\s&lt;/code&gt;, or &lt;code&gt;\w&lt;/code&gt;, require special attention because in string literals, the backslash character, &lt;code&gt;\&lt;/code&gt;, is stripped out by both the Lua language parser and by the Nginx config file parser before processing if not within a &lt;code&gt;*_by_lua_block {}&lt;/code&gt; directive. So the following snippet will not work as expected:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# nginx.conf&lt;/span&gt;
 ? &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
 ?     &lt;span class="pl-k"&gt;content_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt; ?         local regex = "\d+"  -- THIS IS WRONG OUTSIDE OF A *_by_lua_block DIRECTIVE&lt;/span&gt;
&lt;span class="pl-s"&gt; ?         local m = ngx.re.match("hello, 1234", regex)&lt;/span&gt;
&lt;span class="pl-s"&gt; ?         if m then ngx.say(m[0]) else ngx.say("not matched!") end&lt;/span&gt;
&lt;span class="pl-s"&gt; ?     '&lt;/span&gt;;
 ? }
 &lt;span class="pl-c"&gt;# evaluates to "not matched!"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To avoid this, &lt;em&gt;double&lt;/em&gt; escape the backslash:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# nginx.conf&lt;/span&gt;
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local regex = "\\\\d+"&lt;/span&gt;
&lt;span class="pl-s"&gt;         local m = ngx.re.match("hello, 1234", regex)&lt;/span&gt;
&lt;span class="pl-s"&gt;         if m then ngx.say(m[0]) else ngx.say("not matched!") end&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;
 }
 &lt;span class="pl-c"&gt;# evaluates to "1234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here, &lt;code&gt;\\\\d+&lt;/code&gt; is stripped down to &lt;code&gt;\\d+&lt;/code&gt; by the Nginx config file parser and this is further stripped down to &lt;code&gt;\d+&lt;/code&gt; by the Lua language parser before running.&lt;/p&gt;
&lt;p&gt;Alternatively, the regex pattern can be presented as a long-bracketed Lua string literal by encasing it in "long brackets", &lt;code&gt;[[...]]&lt;/code&gt;, in which case backslashes have to only be escaped once for the Nginx config file parser.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# nginx.conf&lt;/span&gt;
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local regex = [[\\d+]]&lt;/span&gt;
&lt;span class="pl-s"&gt;         local m = ngx.re.match("hello, 1234", regex)&lt;/span&gt;
&lt;span class="pl-s"&gt;         if m then ngx.say(m[0]) else ngx.say("not matched!") end&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;
 }
 &lt;span class="pl-c"&gt;# evaluates to "1234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here, &lt;code&gt;[[\\d+]]&lt;/code&gt; is stripped down to &lt;code&gt;[[\d+]]&lt;/code&gt; by the Nginx config file parser and this is processed correctly.&lt;/p&gt;
&lt;p&gt;Note that a longer from of the long bracket, &lt;code&gt;[=[...]=]&lt;/code&gt;, may be required if the regex pattern contains &lt;code&gt;[...]&lt;/code&gt; sequences.
The &lt;code&gt;[=[...]=]&lt;/code&gt; form may be used as the default form if desired.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# nginx.conf&lt;/span&gt;
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local regex = [=[[0-9]+]=]&lt;/span&gt;
&lt;span class="pl-s"&gt;         local m = ngx.re.match("hello, 1234", regex)&lt;/span&gt;
&lt;span class="pl-s"&gt;         if m then ngx.say(m[0]) else ngx.say("not matched!") end&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;
 }
 &lt;span class="pl-c"&gt;# evaluates to "1234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An alternative approach to escaping PCRE sequences is to ensure that Lua code is placed in external script files and executed using the various &lt;code&gt;*_by_lua_file&lt;/code&gt; directives.
With this approach, the backslashes are only stripped by the Lua language parser and therefore only need to be escaped once each.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; test.lua&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; regex &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\\&lt;/span&gt;d+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; m &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, regex)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; m &lt;span class="pl-k"&gt;then&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(m[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]) &lt;span class="pl-k"&gt;else&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;not matched!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; evaluates to "1234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Within external script files, PCRE sequences presented as long-bracketed Lua string literals do not require modification.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; test.lua&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; regex &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;[[&lt;/span&gt;\d+&lt;span class="pl-pds"&gt;]]&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; m &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, regex)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; m &lt;span class="pl-k"&gt;then&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(m[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]) &lt;span class="pl-k"&gt;else&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;not matched!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; evaluates to "1234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As noted earlier, PCRE sequences presented within &lt;code&gt;*_by_lua_block {}&lt;/code&gt; directives (available following the &lt;code&gt;v0.9.17&lt;/code&gt; release) do not require modification.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# nginx.conf&lt;/span&gt;
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; regex = [[\d+]]
         &lt;span class="pl-k"&gt;local&lt;/span&gt; m = ngx.re.match(&lt;span class="pl-s"&gt;"hello, 1234"&lt;/span&gt;, regex)
         &lt;span class="pl-k"&gt;if&lt;/span&gt; m then ngx.say(m[0]) else ngx.say(&lt;span class="pl-s"&gt;"not matched!"&lt;/span&gt;) end
     }
 }
 &lt;span class="pl-c"&gt;# evaluates to "1234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-mixing-with-ssi-not-supported" class="anchor" aria-hidden="true" href="#mixing-with-ssi-not-supported"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mixing with SSI Not Supported&lt;/h2&gt;
&lt;p&gt;Mixing SSI with ngx_lua in the same Nginx request is not supported at all. Just use ngx_lua exclusively. Everything you can do with SSI can be done atop ngx_lua anyway and it can be more efficient when using ngx_lua.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-spdy-mode-not-fully-supported" class="anchor" aria-hidden="true" href="#spdy-mode-not-fully-supported"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SPDY Mode Not Fully Supported&lt;/h2&gt;
&lt;p&gt;Certain Lua APIs provided by ngx_lua do not work in Nginx's SPDY mode yet: &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt;, &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;, and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-missing-data-on-short-circuited-requests" class="anchor" aria-hidden="true" href="#missing-data-on-short-circuited-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Missing data on short circuited requests&lt;/h2&gt;
&lt;p&gt;Nginx may terminate a request early with (at least):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;400 (Bad Request)&lt;/li&gt;
&lt;li&gt;405 (Not Allowed)&lt;/li&gt;
&lt;li&gt;408 (Request Timeout)&lt;/li&gt;
&lt;li&gt;413 (Request Entity Too Large)&lt;/li&gt;
&lt;li&gt;414 (Request URI Too Large)&lt;/li&gt;
&lt;li&gt;494 (Request Headers Too Large)&lt;/li&gt;
&lt;li&gt;499 (Client Closed Request)&lt;/li&gt;
&lt;li&gt;500 (Internal Server Error)&lt;/li&gt;
&lt;li&gt;501 (Not Implemented)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This means that phases that normally run are skipped, such as the rewrite or
access phase. This also means that later phases that are run regardless, e.g.
&lt;a href="#log_by_lua"&gt;log_by_lua&lt;/a&gt;, will not have access to information that is normally set in those
phases.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TODO&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;cosocket: implement LuaSocket's unconnected UDP API.&lt;/li&gt;
&lt;li&gt;cosocket: add support in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;cosocket: implement the &lt;code&gt;bind()&lt;/code&gt; method for stream-typed cosockets.&lt;/li&gt;
&lt;li&gt;cosocket: review and merge aviramc's &lt;a href="https://github.com/openresty/lua-nginx-module/pull/290"&gt;patch&lt;/a&gt; for adding the &lt;code&gt;bsdrecv&lt;/code&gt; method.&lt;/li&gt;
&lt;li&gt;cosocket: add configure options for different strategies of handling the cosocket connection exceeding in the pools.&lt;/li&gt;
&lt;li&gt;review and apply vadim-pavlov's patch for &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt;'s &lt;code&gt;extra_headers&lt;/code&gt; option&lt;/li&gt;
&lt;li&gt;use &lt;code&gt;ngx_hash_t&lt;/code&gt; to optimize the built-in header look-up process for &lt;a href="#ngxreqset_header"&gt;ngx.req.set_header&lt;/a&gt;, &lt;a href="#ngxheaderheader"&gt;ngx.header.HEADER&lt;/a&gt;, and etc.&lt;/li&gt;
&lt;li&gt;add directives to run Lua codes when Nginx stops.&lt;/li&gt;
&lt;li&gt;add &lt;code&gt;ignore_resp_headers&lt;/code&gt;, &lt;code&gt;ignore_resp_body&lt;/code&gt;, and &lt;code&gt;ignore_resp&lt;/code&gt; options to &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt; methods, to allow micro performance tuning on the user side.&lt;/li&gt;
&lt;li&gt;add automatic Lua code time slicing support by yielding and resuming the Lua VM actively via Lua's debug hooks.&lt;/li&gt;
&lt;li&gt;add &lt;code&gt;stat&lt;/code&gt; mode similar to &lt;a href="https://httpd.apache.org/docs/trunk/mod/mod_lua.html" rel="nofollow"&gt;mod_lua&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;cosocket: add client SSL certificate support.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-changes" class="anchor" aria-hidden="true" href="#changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changes&lt;/h1&gt;
&lt;p&gt;The changes made in every release of this module are listed in the change logs of the OpenResty bundle:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openresty.org/#Changes" rel="nofollow"&gt;https://openresty.org/#Changes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-test-suite" class="anchor" aria-hidden="true" href="#test-suite"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Test Suite&lt;/h1&gt;
&lt;p&gt;The following dependencies are required to run the test suite:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Nginx version &amp;gt;= 1.4.2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Perl modules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Test::Nginx: &lt;a href="https://github.com/openresty/test-nginx"&gt;https://github.com/openresty/test-nginx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nginx modules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/simplresty/ngx_devel_kit"&gt;ngx_devel_kit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/set-misc-nginx-module"&gt;ngx_set_misc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mdounin.ru/files/ngx_http_auth_request_module-0.2.tar.gz" rel="nofollow"&gt;ngx_auth_request&lt;/a&gt; (this is not needed if you're using Nginx 1.5.4+.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/echo-nginx-module"&gt;ngx_echo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/memc-nginx-module"&gt;ngx_memc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/srcache-nginx-module"&gt;ngx_srcache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ngx_lua (i.e., this module)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-upstream-nginx-module"&gt;ngx_lua_upstream&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/headers-more-nginx-module"&gt;ngx_headers_more&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/drizzle-nginx-module"&gt;ngx_drizzle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/rds-json-nginx-module"&gt;ngx_rds_json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FRiCKLE/ngx_coolkit"&gt;ngx_coolkit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/redis2-nginx-module"&gt;ngx_redis2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The order in which these modules are added during configuration is important because the position of any filter module in the
filtering chain determines the final output, for example. The correct adding order is shown above.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;3rd-party Lua libraries:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.kyne.com.au/~mark/software/lua-cjson.php" rel="nofollow"&gt;lua-cjson&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Applications:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mysql: create database 'ngx_test', grant all privileges to user 'ngx_test', password is 'ngx_test'&lt;/li&gt;
&lt;li&gt;memcached: listening on the default port, 11211.&lt;/li&gt;
&lt;li&gt;redis: listening on the default port, 6379.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See also the &lt;a href="https://github.com/openresty/lua-nginx-module/blob/master/util/build.sh"&gt;developer build script&lt;/a&gt; for more details on setting up the testing environment.&lt;/p&gt;
&lt;p&gt;To run the whole test suite in the default testing mode:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /path/to/lua-nginx-module
export PATH=/path/to/your/nginx/sbin:$PATH
prove -I/path/to/test-nginx/lib -r t
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To run specific test files:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /path/to/lua-nginx-module
export PATH=/path/to/your/nginx/sbin:$PATH
prove -I/path/to/test-nginx/lib t/002-content.t t/003-errors.t
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To run a specific test block in a particular test file, add the line &lt;code&gt;--- ONLY&lt;/code&gt; to the test block you want to run, and then use the &lt;code&gt;prove&lt;/code&gt; utility to run that &lt;code&gt;.t&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;There are also various testing modes based on mockeagain, valgrind, and etc. Refer to the &lt;a href="https://search.cpan.org/perldoc?Test::Nginx" rel="nofollow"&gt;Test::Nginx documentation&lt;/a&gt; for more details for various advanced testing modes. See also the test reports for the Nginx test cluster running on Amazon EC2: &lt;a href="https://qa.openresty.org" rel="nofollow"&gt;https://qa.openresty.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-copyright-and-license" class="anchor" aria-hidden="true" href="#copyright-and-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright and License&lt;/h1&gt;
&lt;p&gt;This module is licensed under the BSD license.&lt;/p&gt;
&lt;p&gt;Copyright (C) 2009-2017, by Xiaozhe Wang (chaoslawful) &lt;a href="mailto:chaoslawful@gmail.com"&gt;chaoslawful@gmail.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Copyright (C) 2009-2019, by Yichun "agentzh" Zhang (章亦春) &lt;a href="mailto:agentzh@gmail.com"&gt;agentzh@gmail.com&lt;/a&gt;, OpenResty Inc.&lt;/p&gt;
&lt;p&gt;All rights reserved.&lt;/p&gt;
&lt;p&gt;Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-see-also" class="anchor" aria-hidden="true" href="#see-also"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;See Also&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/stream-lua-nginx-module#readme"&gt;ngx_stream_lua_module&lt;/a&gt; for an official port of this module for the Nginx "stream" subsystem (doing generic downstream TCP communications).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-memcached"&gt;lua-resty-memcached&lt;/a&gt; library based on ngx_lua cosocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-redis"&gt;lua-resty-redis&lt;/a&gt; library based on ngx_lua cosocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-mysql"&gt;lua-resty-mysql&lt;/a&gt; library based on ngx_lua cosocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-upload"&gt;lua-resty-upload&lt;/a&gt; library based on ngx_lua cosocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-dns"&gt;lua-resty-dns&lt;/a&gt; library based on ngx_lua cosocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-websocket"&gt;lua-resty-websocket&lt;/a&gt; library for both WebSocket server and client, based on ngx_lua cosocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-string"&gt;lua-resty-string&lt;/a&gt; library based on &lt;a href="https://luajit.org/ext_ffi.html" rel="nofollow"&gt;LuaJIT FFI&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-lock"&gt;lua-resty-lock&lt;/a&gt; library for a nonblocking simple lock API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cloudflare/lua-resty-cookie"&gt;lua-resty-cookie&lt;/a&gt; library for HTTP cookie manipulation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openresty.org/#RoutingMySQLQueriesBasedOnURIArgs" rel="nofollow"&gt;Routing requests to different MySQL queries based on URI arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openresty.org/#DynamicRoutingBasedOnRedis" rel="nofollow"&gt;Dynamic Routing Based on Redis and Lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openresty.org/#UsingLuaRocks" rel="nofollow"&gt;Using LuaRocks with ngx_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-nginx-module/wiki/Introduction"&gt;Introduction to ngx_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/simplresty/ngx_devel_kit"&gt;ngx_devel_kit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/echo-nginx-module"&gt;echo-nginx-module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/drizzle-nginx-module"&gt;drizzle-nginx-module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FRiCKLE/ngx_postgres"&gt;postgres-nginx-module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/memc-nginx-module"&gt;memc-nginx-module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openresty.org" rel="nofollow"&gt;The OpenResty bundle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/nginx-systemtap-toolkit"&gt;Nginx Systemtap Toolkit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-directives" class="anchor" aria-hidden="true" href="#directives"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Directives&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#lua_load_resty_core"&gt;lua_load_resty_core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_capture_error_log"&gt;lua_capture_error_log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_use_default_type"&gt;lua_use_default_type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_malloc_trim"&gt;lua_malloc_trim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_regex_cache_max_entries"&gt;lua_regex_cache_max_entries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_regex_match_limit"&gt;lua_regex_match_limit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_package_path"&gt;lua_package_path&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_package_cpath"&gt;lua_package_cpath&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#init_by_lua"&gt;init_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#init_by_lua_block"&gt;init_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#init_by_lua_file"&gt;init_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#init_worker_by_lua_block"&gt;init_worker_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#init_worker_by_lua_file"&gt;init_worker_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#set_by_lua_block"&gt;set_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#set_by_lua_file"&gt;set_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#content_by_lua_block"&gt;content_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#content_by_lua_file"&gt;content_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rewrite_by_lua_block"&gt;rewrite_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rewrite_by_lua_file"&gt;rewrite_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#access_by_lua_block"&gt;access_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#access_by_lua_file"&gt;access_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#header_filter_by_lua_block"&gt;header_filter_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#header_filter_by_lua_file"&gt;header_filter_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#body_filter_by_lua"&gt;body_filter_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#body_filter_by_lua_block"&gt;body_filter_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#body_filter_by_lua_file"&gt;body_filter_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#log_by_lua"&gt;log_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#log_by_lua_block"&gt;log_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#log_by_lua_file"&gt;log_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#balancer_by_lua_block"&gt;balancer_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#balancer_by_lua_file"&gt;balancer_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssl_certificate_by_lua_file"&gt;ssl_certificate_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssl_session_fetch_by_lua_block"&gt;ssl_session_fetch_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssl_session_fetch_by_lua_file"&gt;ssl_session_fetch_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssl_session_store_by_lua_file"&gt;ssl_session_store_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_shared_dict"&gt;lua_shared_dict&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_connect_timeout"&gt;lua_socket_connect_timeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_send_timeout"&gt;lua_socket_send_timeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_send_lowat"&gt;lua_socket_send_lowat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_buffer_size"&gt;lua_socket_buffer_size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_pool_size"&gt;lua_socket_pool_size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_keepalive_timeout"&gt;lua_socket_keepalive_timeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_log_errors"&gt;lua_socket_log_errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_ssl_ciphers"&gt;lua_ssl_ciphers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_ssl_crl"&gt;lua_ssl_crl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_ssl_protocols"&gt;lua_ssl_protocols&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_ssl_trusted_certificate"&gt;lua_ssl_trusted_certificate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_ssl_verify_depth"&gt;lua_ssl_verify_depth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_http10_buffering"&gt;lua_http10_buffering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rewrite_by_lua_no_postpone"&gt;rewrite_by_lua_no_postpone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#access_by_lua_no_postpone"&gt;access_by_lua_no_postpone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_transform_underscores_in_response_headers"&gt;lua_transform_underscores_in_response_headers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_check_client_abort"&gt;lua_check_client_abort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_max_pending_timers"&gt;lua_max_pending_timers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_max_running_timers"&gt;lua_max_running_timers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_sa_restart"&gt;lua_sa_restart&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The basic building blocks of scripting Nginx with Lua are directives. Directives are used to specify when the user Lua code is run and
how the result will be used. Below is a diagram showing the order in which directives are executed.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/2137369/15272097/77d1c09e-1a37-11e6-97ef-d9767035fc3e.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/2137369/15272097/77d1c09e-1a37-11e6-97ef-d9767035fc3e.png" alt="Lua Nginx Modules Directives" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_load_resty_core" class="anchor" aria-hidden="true" href="#lua_load_resty_core"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_load_resty_core&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_load_resty_core on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_load_resty_core on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive is deprecated since the &lt;code&gt;v0.10.16&lt;/code&gt; release of this
module. The &lt;code&gt;resty.core&lt;/code&gt; module from
&lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; is now mandatorily
loaded during the Lua VM initialization. Specifying this directive will have no
effect.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.15&lt;/code&gt; release and
used to optionally load the &lt;code&gt;resty.core&lt;/code&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_capture_error_log" class="anchor" aria-hidden="true" href="#lua_capture_error_log"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_capture_error_log&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_capture_error_log size&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;none&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Enables a buffer of the specified &lt;code&gt;size&lt;/code&gt; for capturing all the Nginx error log message data (not just those produced
by this module or the Nginx http subsystem, but everything) without touching files or disks.&lt;/p&gt;
&lt;p&gt;You can use units like &lt;code&gt;k&lt;/code&gt; and &lt;code&gt;m&lt;/code&gt; in the &lt;code&gt;size&lt;/code&gt; value, as in&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;lua_capture_error_log&lt;/span&gt; 100k;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As a rule of thumb, a 4KB buffer can usually hold about 20 typical error log messages. So do the maths!&lt;/p&gt;
&lt;p&gt;This buffer never grows. If it is full, new error log messages will replace the oldest ones in the buffer.&lt;/p&gt;
&lt;p&gt;The size of the buffer must be bigger than the maximum length of a single error log message (which is 4K in OpenResty and 2K in stock NGINX).&lt;/p&gt;
&lt;p&gt;You can read the messages in the buffer on the Lua land via the
&lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/errlog.md#get_logs"&gt;get_logs()&lt;/a&gt;
function of the
&lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/errlog.md#readme"&gt;ngx.errlog&lt;/a&gt;
module of the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/errlog.md#readme"&gt;lua-resty-core&lt;/a&gt;
library. This Lua API function will return the captured error log messages and
also remove these already read from the global capturing buffer, making room
for any new error log data. For this reason, the user should not configure this
buffer to be too big if the user read the buffered error log data fast enough.&lt;/p&gt;
&lt;p&gt;Note that the log level specified in the standard &lt;a href="https://nginx.org/r/error_log" rel="nofollow"&gt;error_log&lt;/a&gt; directive
&lt;em&gt;does&lt;/em&gt; have effect on this capturing facility. It only captures log
messages of a level no lower than the specified log level in the &lt;a href="https://nginx.org/r/error_log" rel="nofollow"&gt;error_log&lt;/a&gt; directive.
The user can still choose to set an even higher filtering log level on the fly via the Lua API function
&lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/errlog.md#set_filter_level"&gt;errlog.set_filter_level&lt;/a&gt;.
So it is more flexible than the static &lt;a href="https://nginx.org/r/error_log" rel="nofollow"&gt;error_log&lt;/a&gt; directive.&lt;/p&gt;
&lt;p&gt;It is worth noting that there is no way to capture the debugging logs
without building OpenResty or Nginx with the &lt;code&gt;./configure&lt;/code&gt;
option &lt;code&gt;--with-debug&lt;/code&gt;. And enabling debugging logs is
strongly discouraged in production builds due to high overhead.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.9&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_use_default_type" class="anchor" aria-hidden="true" href="#lua_use_default_type"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_use_default_type&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_use_default_type on | off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_use_default_type on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies whether to use the MIME type specified by the &lt;a href="https://nginx.org/en/docs/http/ngx_http_core_module.html#default_type" rel="nofollow"&gt;default_type&lt;/a&gt; directive for the default value of the &lt;code&gt;Content-Type&lt;/code&gt; response header. Deactivate this directive if a default &lt;code&gt;Content-Type&lt;/code&gt; response header for Lua request handlers is not desired.&lt;/p&gt;
&lt;p&gt;This directive is turned on by default.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_malloc_trim" class="anchor" aria-hidden="true" href="#lua_malloc_trim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_malloc_trim&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_malloc_trim &amp;lt;request-count&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_malloc_trim 1000&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Asks the underlying &lt;code&gt;libc&lt;/code&gt; runtime library to release its cached free memory back to the operating system every
&lt;code&gt;N&lt;/code&gt; requests processed by the Nginx core. By default, &lt;code&gt;N&lt;/code&gt; is 1000. You can configure the request count
by using your own numbers. Smaller numbers mean more frequent releases, which may introduce higher CPU time consumption and
smaller memory footprint while larger numbers usually lead to less CPU time overhead and relatively larger memory footprint.
Just tune the number for your own use cases.&lt;/p&gt;
&lt;p&gt;Configuring the argument to &lt;code&gt;0&lt;/code&gt; essentially turns off the periodical memory trimming altogether.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;lua_malloc_trim&lt;/span&gt; 0;  &lt;span class="pl-c"&gt;# turn off trimming completely&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The current implementation uses an Nginx log phase handler to do the request counting. So the appearance of the
&lt;a href="https://nginx.org/en/docs/http/ngx_http_core_module.html#log_subrequest" rel="nofollow"&gt;log_subrequest on&lt;/a&gt; directives in &lt;code&gt;nginx.conf&lt;/code&gt;
may make the counting faster when subrequests are involved. By default, only "main requests" count.&lt;/p&gt;
&lt;p&gt;Note that this directive does &lt;em&gt;not&lt;/em&gt; affect the memory allocated by LuaJIT's own allocator based on the &lt;code&gt;mmap&lt;/code&gt;
system call.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_code_cache" class="anchor" aria-hidden="true" href="#lua_code_cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_code_cache&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_code_cache on | off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_code_cache on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Enables or disables the Lua code cache for Lua code in &lt;code&gt;*_by_lua_file&lt;/code&gt; directives (like &lt;a href="#set_by_lua_file"&gt;set_by_lua_file&lt;/a&gt; and
&lt;a href="#content_by_lua_file"&gt;content_by_lua_file&lt;/a&gt;) and Lua modules.&lt;/p&gt;
&lt;p&gt;When turning off, every request served by ngx_lua will run in a separate Lua VM instance, starting from the &lt;code&gt;0.9.3&lt;/code&gt; release. So the Lua files referenced in &lt;a href="#set_by_lua_file"&gt;set_by_lua_file&lt;/a&gt;,
&lt;a href="#content_by_lua_file"&gt;content_by_lua_file&lt;/a&gt;, &lt;a href="#access_by_lua_file"&gt;access_by_lua_file&lt;/a&gt;,
and etc will not be cached
and all Lua modules used will be loaded from scratch. With this in place, developers can adopt an edit-and-refresh approach.&lt;/p&gt;
&lt;p&gt;Please note however, that Lua code written inlined within nginx.conf
such as those specified by &lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt;, &lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt;,
&lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt;, and &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; will not be updated when you edit the inlined Lua code in your &lt;code&gt;nginx.conf&lt;/code&gt; file because only the Nginx config file parser can correctly parse the &lt;code&gt;nginx.conf&lt;/code&gt;
file and the only way is to reload the config file
by sending a &lt;code&gt;HUP&lt;/code&gt; signal or just to restart Nginx.&lt;/p&gt;
&lt;p&gt;Even when the code cache is enabled, Lua files which are loaded by &lt;code&gt;dofile&lt;/code&gt; or &lt;code&gt;loadfile&lt;/code&gt;
in *_by_lua_file cannot be cached (unless you cache the results yourself). Usually you can either use the &lt;a href="#init_by_lua"&gt;init_by_lua&lt;/a&gt;
or &lt;a href="#init-by_lua_file"&gt;init_by_lua_file&lt;/a&gt; directives to load all such files or just make these Lua files true Lua modules
and load them via &lt;code&gt;require&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The ngx_lua module does not support the &lt;code&gt;stat&lt;/code&gt; mode available with the
Apache &lt;code&gt;mod_lua&lt;/code&gt; module (yet).&lt;/p&gt;
&lt;p&gt;Disabling the Lua code cache is strongly
discouraged for production use and should only be used during
development as it has a significant negative impact on overall performance. For example, the performance of a "hello world" Lua example can drop by an order of magnitude after disabling the Lua code cache.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_regex_cache_max_entries" class="anchor" aria-hidden="true" href="#lua_regex_cache_max_entries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_regex_cache_max_entries&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_regex_cache_max_entries &amp;lt;num&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_regex_cache_max_entries 1024&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies the maximum number of entries allowed in the worker process level compiled regex cache.&lt;/p&gt;
&lt;p&gt;The regular expressions used in &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt;, &lt;a href="#ngxregmatch"&gt;ngx.re.gmatch&lt;/a&gt;, &lt;a href="#ngxresub"&gt;ngx.re.sub&lt;/a&gt;, and &lt;a href="#ngxregsub"&gt;ngx.re.gsub&lt;/a&gt; will be cached within this cache if the regex option &lt;code&gt;o&lt;/code&gt; (i.e., compile-once flag) is specified.&lt;/p&gt;
&lt;p&gt;The default number of entries allowed is 1024 and when this limit is reached, new regular expressions will not be cached (as if the &lt;code&gt;o&lt;/code&gt; option was not specified) and there will be one, and only one, warning in the &lt;code&gt;error.log&lt;/code&gt; file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2011/08/27 23:18:26 [warn] 31997#0: *1 lua exceeding regex cache max entries (1024), ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you are using the &lt;code&gt;ngx.re.*&lt;/code&gt; implementation of &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; by loading the &lt;code&gt;resty.core.regex&lt;/code&gt; module (or just the &lt;code&gt;resty.core&lt;/code&gt; module), then an LRU cache is used for the regex cache being used here.&lt;/p&gt;
&lt;p&gt;Do not activate the &lt;code&gt;o&lt;/code&gt; option for regular expressions (and/or &lt;code&gt;replace&lt;/code&gt; string arguments for &lt;a href="#ngxresub"&gt;ngx.re.sub&lt;/a&gt; and &lt;a href="#ngxregsub"&gt;ngx.re.gsub&lt;/a&gt;) that are generated &lt;em&gt;on the fly&lt;/em&gt; and give rise to infinite variations to avoid hitting the specified limit.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_regex_match_limit" class="anchor" aria-hidden="true" href="#lua_regex_match_limit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_regex_match_limit&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_regex_match_limit &amp;lt;num&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_regex_match_limit 0&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies the "match limit" used by the PCRE library when executing the &lt;a href="#ngxrematch"&gt;ngx.re API&lt;/a&gt;. To quote the PCRE manpage, "the limit ... has the effect of limiting the amount of backtracking that can take place."&lt;/p&gt;
&lt;p&gt;When the limit is hit, the error string "pcre_exec() failed: -8" will be returned by the &lt;a href="#ngxrematch"&gt;ngx.re API&lt;/a&gt; functions on the Lua land.&lt;/p&gt;
&lt;p&gt;When setting the limit to 0, the default "match limit" when compiling the PCRE library is used. And this is the default value of this directive.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.8.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_package_path" class="anchor" aria-hidden="true" href="#lua_package_path"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_package_path&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_package_path &amp;lt;lua-style-path-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;The content of LUA_PATH environment variable or Lua's compiled-in defaults.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sets the Lua module search path used by scripts specified by &lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt;,
&lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt; and others. The path string is in standard Lua path form, and &lt;code&gt;;;&lt;/code&gt;
can be used to stand for the original search paths.&lt;/p&gt;
&lt;p&gt;As from the &lt;code&gt;v0.5.0rc29&lt;/code&gt; release, the special notation &lt;code&gt;$prefix&lt;/code&gt; or &lt;code&gt;${prefix}&lt;/code&gt; can be used in the search path string to indicate the path of the &lt;code&gt;server prefix&lt;/code&gt; usually determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_package_cpath" class="anchor" aria-hidden="true" href="#lua_package_cpath"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_package_cpath&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_package_cpath &amp;lt;lua-style-cpath-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;The content of LUA_CPATH environment variable or Lua's compiled-in defaults.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sets the Lua C-module search path used by scripts specified by &lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt;,
&lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt; and others. The cpath string is in standard Lua cpath form, and &lt;code&gt;;;&lt;/code&gt;
can be used to stand for the original cpath.&lt;/p&gt;
&lt;p&gt;As from the &lt;code&gt;v0.5.0rc29&lt;/code&gt; release, the special notation &lt;code&gt;$prefix&lt;/code&gt; or &lt;code&gt;${prefix}&lt;/code&gt; can be used in the search path string to indicate the path of the &lt;code&gt;server prefix&lt;/code&gt; usually determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-init_by_lua" class="anchor" aria-hidden="true" href="#init_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;init_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;init_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;loading-config&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#init_by_lua_block"&gt;init_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Runs the Lua code specified by the argument &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; on the global Lua VM level when the Nginx master process (if any) is loading the Nginx config file.&lt;/p&gt;
&lt;p&gt;When Nginx receives the &lt;code&gt;HUP&lt;/code&gt; signal and starts reloading the config file, the Lua VM will also be re-created and &lt;code&gt;init_by_lua&lt;/code&gt; will run again on the new Lua VM. In case that the &lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt; directive is turned off (default on), the &lt;code&gt;init_by_lua&lt;/code&gt; handler will run upon every request because in this special mode a standalone Lua VM is always created for each request.&lt;/p&gt;
&lt;p&gt;Usually you can pre-load Lua modules at server start-up by means of this hook and take advantage of modern operating systems' copy-on-write (COW) optimization. Here is an example for pre-loading Lua modules:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# this runs before forking out nginx worker processes:&lt;/span&gt;
 &lt;span class="pl-k"&gt;init_by_lua_block&lt;/span&gt; { require &lt;span class="pl-s"&gt;"cjson"&lt;/span&gt; }

 &lt;span class="pl-k"&gt;server&lt;/span&gt; {
     &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /api &lt;/span&gt;{
         &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
             -- &lt;span class="pl-k"&gt;the&lt;/span&gt; following require() will just  return
             -- &lt;span class="pl-k"&gt;the&lt;/span&gt; alrady loaded module from package.loaded:
             ngx.say(&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;"cjson"&lt;/span&gt;.encode{dog = 5, cat = 6})
         }
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also initialize the &lt;a href="#lua_shared_dict"&gt;lua_shared_dict&lt;/a&gt; shm storage at this phase. Here is an example for this:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;lua_shared_dict&lt;/span&gt; dogs &lt;span class="pl-c1"&gt;1m&lt;/span&gt;;

 &lt;span class="pl-k"&gt;init_by_lua_block&lt;/span&gt; {
     &lt;span class="pl-k"&gt;local&lt;/span&gt; dogs = ngx.shared.dogs;
     dogs:&lt;span class="pl-k"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;"Tom"&lt;/span&gt;, 56)
 }

 server {
     location = /api {
         content_by_lua_block {
             local dogs = ngx.shared.dogs;
             ngx.say(dogs:get("Tom"))
         }
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But note that, the &lt;a href="#lua_shared_dict"&gt;lua_shared_dict&lt;/a&gt;'s shm storage will not be cleared through a config reload (via the &lt;code&gt;HUP&lt;/code&gt; signal, for example). So if you do &lt;em&gt;not&lt;/em&gt; want to re-initialize the shm storage in your &lt;code&gt;init_by_lua&lt;/code&gt; code in this case, then you just need to set a custom flag in the shm storage and always check the flag in your &lt;code&gt;init_by_lua&lt;/code&gt; code.&lt;/p&gt;
&lt;p&gt;Because the Lua code in this context runs before Nginx forks its worker processes (if any), data or code loaded here will enjoy the &lt;a href="https://en.wikipedia.org/wiki/Copy-on-write" rel="nofollow"&gt;Copy-on-write (COW)&lt;/a&gt; feature provided by many operating systems among all the worker processes, thus saving a lot of memory.&lt;/p&gt;
&lt;p&gt;Do &lt;em&gt;not&lt;/em&gt; initialize your own Lua global variables in this context because use of Lua global variables have performance penalties and can lead to global namespace pollution (see the &lt;a href="#lua-variable-scope"&gt;Lua Variable Scope&lt;/a&gt; section for more details). The recommended way is to use proper &lt;a href="https://www.lua.org/manual/5.1/manual.html#5.3" rel="nofollow"&gt;Lua module&lt;/a&gt; files (but do not use the standard Lua function &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-module" rel="nofollow"&gt;module()&lt;/a&gt; to define Lua modules because it pollutes the global namespace as well) and call &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-require" rel="nofollow"&gt;require()&lt;/a&gt; to load your own module files in &lt;code&gt;init_by_lua&lt;/code&gt; or other contexts (&lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-require" rel="nofollow"&gt;require()&lt;/a&gt; does cache the loaded Lua modules in the global &lt;code&gt;package.loaded&lt;/code&gt; table in the Lua registry so your modules will only loaded once for the whole Lua VM instance).&lt;/p&gt;
&lt;p&gt;Only a small set of the &lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt; is supported in this context:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Logging APIs: &lt;a href="#ngxlog"&gt;ngx.log&lt;/a&gt; and &lt;a href="#print"&gt;print&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;Shared Dictionary API: &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More Nginx APIs for Lua may be supported in this context upon future user requests.&lt;/p&gt;
&lt;p&gt;Basically you can safely use Lua libraries that do blocking I/O in this very context because blocking the master process during server start-up is completely okay. Even the Nginx core does blocking I/O (at least on resolving upstream's host names) at the configure-loading phase.&lt;/p&gt;
&lt;p&gt;You should be very careful about potential security vulnerabilities in your Lua code registered in this context because the Nginx master process is often run under the &lt;code&gt;root&lt;/code&gt; account.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-init_by_lua_block" class="anchor" aria-hidden="true" href="#init_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;init_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;init_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;loading-config&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#init_by_lua"&gt;init_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;init_by_lua_block&lt;/span&gt; {
     print("&lt;span class="pl-k"&gt;I&lt;/span&gt; need no extra escaping here, for example: \r\nblah&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-init_by_lua_file" class="anchor" aria-hidden="true" href="#init_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;init_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;init_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;loading-config&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#init_by_lua"&gt;init_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code or &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-init_worker_by_lua" class="anchor" aria-hidden="true" href="#init_worker_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;init_worker_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;starting-worker&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#init_worker_by_lua_block"&gt;init_worker_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Runs the specified Lua code upon every Nginx worker process's startup when the master process is enabled. When the master process is disabled, this hook will just run after &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This hook is often used to create per-worker reoccurring timers (via the &lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt; Lua API), either for backend health-check or other timed routine work. Below is an example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;init_worker_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;     local delay = 3  -- in seconds&lt;/span&gt;
&lt;span class="pl-s"&gt;     local new_timer = ngx.timer.at&lt;/span&gt;
&lt;span class="pl-s"&gt;     local log = ngx.log&lt;/span&gt;
&lt;span class="pl-s"&gt;     local ERR = ngx.ERR&lt;/span&gt;
&lt;span class="pl-s"&gt;     local check&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     check = function(premature)&lt;/span&gt;
&lt;span class="pl-s"&gt;         if not premature then&lt;/span&gt;
&lt;span class="pl-s"&gt;             -- do the health check or other routine work&lt;/span&gt;
&lt;span class="pl-s"&gt;             local ok, err = new_timer(delay, check)&lt;/span&gt;
&lt;span class="pl-s"&gt;             if not ok then&lt;/span&gt;
&lt;span class="pl-s"&gt;                 log(ERR, "failed to create timer: ", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;                 return&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;     end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     local hdl, err = new_timer(delay, check)&lt;/span&gt;
&lt;span class="pl-s"&gt;     if not hdl then&lt;/span&gt;
&lt;span class="pl-s"&gt;         log(ERR, "failed to create timer: ", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;         return&lt;/span&gt;
&lt;span class="pl-s"&gt;     end&lt;/span&gt;
&lt;span class="pl-s"&gt; '&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;This hook no longer runs in the cache manager and cache loader processes since the &lt;code&gt;v0.10.12&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-init_worker_by_lua_block" class="anchor" aria-hidden="true" href="#init_worker_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;init_worker_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;starting-worker&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;init_worker_by_lua_block&lt;/span&gt; {
     print("&lt;span class="pl-k"&gt;I&lt;/span&gt; need no extra escaping here, for example: \r\nblah&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;This hook no longer runs in the cache manager and cache loader processes since the &lt;code&gt;v0.10.12&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-init_worker_by_lua_file" class="anchor" aria-hidden="true" href="#init_worker_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;init_worker_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua_file &amp;lt;lua-file-path&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;starting-worker&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to &lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua&lt;/a&gt;, but accepts the file path to a Lua source file or Lua bytecode file.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;This hook no longer runs in the cache manager and cache loader processes since the &lt;code&gt;v0.10.12&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-set_by_lua" class="anchor" aria-hidden="true" href="#set_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;set_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;set_by_lua $res &amp;lt;lua-script-str&amp;gt; [$arg1 $arg2 ...]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;server, server if, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;rewrite&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#set_by_lua_block"&gt;set_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Executes code specified in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; with optional input arguments &lt;code&gt;$arg1 $arg2 ...&lt;/code&gt;, and returns string output to &lt;code&gt;$res&lt;/code&gt;.
The code in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; can make &lt;a href="#nginx-api-for-lua"&gt;API calls&lt;/a&gt; and can retrieve input arguments from the &lt;code&gt;ngx.arg&lt;/code&gt; table (index starts from &lt;code&gt;1&lt;/code&gt; and increases sequentially).&lt;/p&gt;
&lt;p&gt;This directive is designed to execute short, fast running code blocks as the Nginx event loop is blocked during code execution. Time consuming code sequences should therefore be avoided.&lt;/p&gt;
&lt;p&gt;This directive is implemented by injecting custom commands into the standard &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt;'s command list. Because &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt; does not support nonblocking I/O in its commands, Lua APIs requiring yielding the current Lua "light thread" cannot work in this directive.&lt;/p&gt;
&lt;p&gt;At least the following API functions are currently disabled within the context of &lt;code&gt;set_by_lua&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Output API functions (e.g., &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; and &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Control API functions (e.g., &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Subrequest API functions (e.g., &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Cosocket API functions (e.g., &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt; and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Sleeping API function &lt;a href="#ngxsleep"&gt;ngx.sleep&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition, note that this directive can only write out a value to a single Nginx variable at
a time. However, a workaround is possible using the &lt;a href="#ngxvarvariable"&gt;ngx.var.VARIABLE&lt;/a&gt; interface.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$diff&lt;/span&gt; &lt;span class="pl-s"&gt;''&lt;/span&gt;; &lt;span class="pl-c"&gt;# we have to predefine the $diff variable here&lt;/span&gt;

     &lt;span class="pl-k"&gt;set_by_lua&lt;/span&gt; &lt;span class="pl-smi"&gt;$sum&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local a = 32&lt;/span&gt;
&lt;span class="pl-s"&gt;         local b = 56&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.var.diff = a - b;  -- write to &lt;span class="pl-smi"&gt;$diff&lt;/span&gt; directly&lt;/span&gt;
&lt;span class="pl-s"&gt;         return a + b;          -- return the &lt;span class="pl-smi"&gt;$sum&lt;/span&gt; value normally&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;

     &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"sum = &lt;span class="pl-smi"&gt;$sum&lt;/span&gt;, diff = &lt;span class="pl-smi"&gt;$diff&lt;/span&gt;"&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive can be freely mixed with all directives of the &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt;, &lt;a href="http://github.com/openresty/set-misc-nginx-module"&gt;set-misc-nginx-module&lt;/a&gt;, and &lt;a href="http://github.com/openresty/array-var-nginx-module"&gt;array-var-nginx-module&lt;/a&gt; modules. All of these directives will run in the same order as they appear in the config file.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$foo&lt;/span&gt; &lt;span class="pl-s"&gt;32&lt;/span&gt;;
 &lt;span class="pl-k"&gt;set_by_lua&lt;/span&gt; &lt;span class="pl-smi"&gt;$bar&lt;/span&gt; &lt;span class="pl-s"&gt;'return tonumber(ngx.var.foo) + 1'&lt;/span&gt;;
 &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$baz&lt;/span&gt; &lt;span class="pl-s"&gt;"bar: &lt;span class="pl-smi"&gt;$bar&lt;/span&gt;"&lt;/span&gt;;  &lt;span class="pl-c"&gt;# $baz == "bar: 33"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As from the &lt;code&gt;v0.5.0rc29&lt;/code&gt; release, Nginx variable interpolation is disabled in the &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; argument of this directive and therefore, the dollar sign character (&lt;code&gt;$&lt;/code&gt;) can be used directly.&lt;/p&gt;
&lt;p&gt;This directive requires the &lt;a href="https://github.com/simplresty/ngx_devel_kit"&gt;ngx_devel_kit&lt;/a&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-set_by_lua_block" class="anchor" aria-hidden="true" href="#set_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;set_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;set_by_lua_block $res { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;server, server if, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;rewrite&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt; directive except that&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;this directive inlines the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping), and&lt;/li&gt;
&lt;li&gt;this directive does not support extra arguments after the Lua script as in &lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;set_by_lua_block&lt;/span&gt; &lt;span class="pl-smi"&gt;$res&lt;/span&gt; { return &lt;span class="pl-s"&gt;32&lt;/span&gt; + math.cos(32) }
 &lt;span class="pl-c"&gt;# $res now has the value "32.834223360507" or alike.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No special escaping is required in the Lua code block.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-set_by_lua_file" class="anchor" aria-hidden="true" href="#set_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;set_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;set_by_lua_file $res &amp;lt;path-to-lua-script-file&amp;gt; [$arg1 $arg2 ...]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;server, server if, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;rewrite&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;Nginx variable interpolation is supported in the &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; argument string of this directive. But special care must be taken for injection attacks.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;When the Lua code cache is turned on (by default), the user code is loaded once at the first request and cached
and the Nginx config must be reloaded each time the Lua source file is modified.
The Lua code cache can be temporarily disabled during development by
switching &lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt; &lt;code&gt;off&lt;/code&gt; in &lt;code&gt;nginx.conf&lt;/code&gt; to avoid reloading Nginx.&lt;/p&gt;
&lt;p&gt;This directive requires the &lt;a href="https://github.com/simplresty/ngx_devel_kit"&gt;ngx_devel_kit&lt;/a&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-content_by_lua" class="anchor" aria-hidden="true" href="#content_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;content_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;content_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;content&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#content_by_lua_block"&gt;content_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Acts as a "content handler" and executes Lua code string specified in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; for every request.
The Lua code may make &lt;a href="#nginx-api-for-lua"&gt;API calls&lt;/a&gt; and is executed as a new spawned coroutine in an independent global environment (i.e. a sandbox).&lt;/p&gt;
&lt;p&gt;Do not use this directive and other content handler directives in the same location. For example, this directive and the &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass" rel="nofollow"&gt;proxy_pass&lt;/a&gt; directive should not be used in the same location.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-content_by_lua_block" class="anchor" aria-hidden="true" href="#content_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;content_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;content_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;content&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
     ngx.say("&lt;span class="pl-k"&gt;I&lt;/span&gt; need no extra escaping here, for example: \r\nblah&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-content_by_lua_file" class="anchor" aria-hidden="true" href="#content_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;content_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;content_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;content&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;Nginx variables can be used in the &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; string to provide flexibility. This however carries some risks and is not ordinarily recommended.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;When the Lua code cache is turned on (by default), the user code is loaded once at the first request and cached
and the Nginx config must be reloaded each time the Lua source file is modified.
The Lua code cache can be temporarily disabled during development by
switching &lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt; &lt;code&gt;off&lt;/code&gt; in &lt;code&gt;nginx.conf&lt;/code&gt; to avoid reloading Nginx.&lt;/p&gt;
&lt;p&gt;Nginx variables are supported in the file path for dynamic dispatch, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# CAUTION: contents in nginx var must be carefully filtered,&lt;/span&gt;
 &lt;span class="pl-c"&gt;# otherwise there'll be great security risk!&lt;/span&gt;
 &lt;span class="pl-k"&gt;location&lt;/span&gt; ~ &lt;span class="pl-sr"&gt;^/app/([-_a-zA-Z0-9/]+) &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$path&lt;/span&gt; &lt;span class="pl-smi"&gt;$1&lt;/span&gt;;
     &lt;span class="pl-k"&gt;content_by_lua_file&lt;/span&gt; /path/to/lua/app/root/&lt;span class="pl-smi"&gt;$path&lt;/span&gt;.lua;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But be very careful about malicious user inputs and always carefully validate or filter out the user-supplied path components.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-rewrite_by_lua" class="anchor" aria-hidden="true" href="#rewrite_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rewrite_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;rewrite tail&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#rewrite_by_lua_block"&gt;rewrite_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Acts as a rewrite phase handler and executes Lua code string specified in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; for every request.
The Lua code may make &lt;a href="#nginx-api-for-lua"&gt;API calls&lt;/a&gt; and is executed as a new spawned coroutine in an independent global environment (i.e. a sandbox).&lt;/p&gt;
&lt;p&gt;Note that this handler always runs &lt;em&gt;after&lt;/em&gt; the standard &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt;. So the following will work as expected:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$a&lt;/span&gt; &lt;span class="pl-s"&gt;12&lt;/span&gt;; &lt;span class="pl-c"&gt;# create and initialize $a&lt;/span&gt;
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$b&lt;/span&gt; &lt;span class="pl-s"&gt;""&lt;/span&gt;; &lt;span class="pl-c"&gt;# create and initialize $b&lt;/span&gt;
     &lt;span class="pl-k"&gt;rewrite_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'ngx.var.b = tonumber(ngx.var.a) + 1'&lt;/span&gt;;
     &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"res = &lt;span class="pl-smi"&gt;$b&lt;/span&gt;"&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;because &lt;code&gt;set $a 12&lt;/code&gt; and &lt;code&gt;set $b ""&lt;/code&gt; run &lt;em&gt;before&lt;/em&gt; &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;On the other hand, the following will not work as expected:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; ?  &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
 ?      &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$a&lt;/span&gt; &lt;span class="pl-s"&gt;12&lt;/span&gt;; &lt;span class="pl-c"&gt;# create and initialize $a&lt;/span&gt;
 ?      &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$b&lt;/span&gt; &lt;span class="pl-s"&gt;''&lt;/span&gt;; &lt;span class="pl-c"&gt;# create and initialize $b&lt;/span&gt;
 ?      &lt;span class="pl-k"&gt;rewrite_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'ngx.var.b = tonumber(ngx.var.a) + 1'&lt;/span&gt;;
 ?      &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;$b&lt;/span&gt; = &lt;span class="pl-s"&gt;'13'&lt;/span&gt;) {
 ?         &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/bar redirect;
 ?         &lt;span class="pl-c1"&gt;break&lt;/span&gt;;
 ?      }
 ?
 ?      &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"res = &lt;span class="pl-smi"&gt;$b&lt;/span&gt;"&lt;/span&gt;;
 ?  }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;because &lt;code&gt;if&lt;/code&gt; runs &lt;em&gt;before&lt;/em&gt; &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; even if it is placed after &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; in the config.&lt;/p&gt;
&lt;p&gt;The right way of doing this is as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$a&lt;/span&gt; &lt;span class="pl-s"&gt;12&lt;/span&gt;; &lt;span class="pl-c"&gt;# create and initialize $a&lt;/span&gt;
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$b&lt;/span&gt; &lt;span class="pl-s"&gt;''&lt;/span&gt;; &lt;span class="pl-c"&gt;# create and initialize $b&lt;/span&gt;
     &lt;span class="pl-k"&gt;rewrite_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.var.b = tonumber(ngx.var.a) + 1&lt;/span&gt;
&lt;span class="pl-s"&gt;         if tonumber(ngx.var.b) == 13 then&lt;/span&gt;
&lt;span class="pl-s"&gt;             return ngx.redirect("/bar");&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;

     &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"res = &lt;span class="pl-smi"&gt;$b&lt;/span&gt;"&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the &lt;a href="http://www.grid.net.ru/nginx/eval.en.html" rel="nofollow"&gt;ngx_eval&lt;/a&gt; module can be approximated by using &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt;. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;eval&lt;/span&gt; &lt;span class="pl-smi"&gt;$res&lt;/span&gt; {
         &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://foo.com/check-spam;
     }

     &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;$res&lt;/span&gt; = &lt;span class="pl-s"&gt;'spam'&lt;/span&gt;) {
         &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/terms-of-use.html redirect;
     }

     &lt;span class="pl-k"&gt;fastcgi_pass&lt;/span&gt; ...;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;can be implemented in ngx_lua as:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /check-spam &lt;/span&gt;{
     &lt;span class="pl-k"&gt;internal&lt;/span&gt;;
     &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://foo.com/check-spam;
 }

 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;rewrite_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local res = ngx.location.capture("/check-spam")&lt;/span&gt;
&lt;span class="pl-s"&gt;         if res.body == "spam" then&lt;/span&gt;
&lt;span class="pl-s"&gt;             return ngx.redirect("/terms-of-use.html")&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;

     &lt;span class="pl-k"&gt;fastcgi_pass&lt;/span&gt; ...;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Just as any other rewrite phase handlers, &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; also runs in subrequests.&lt;/p&gt;
&lt;p&gt;Note that when calling &lt;code&gt;ngx.exit(ngx.OK)&lt;/code&gt; within a &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; handler, the Nginx request processing control flow will still continue to the content handler. To terminate the current request from within a &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; handler, calling &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt; with status &amp;gt;= 200 (&lt;code&gt;ngx.HTTP_OK&lt;/code&gt;) and status &amp;lt; 300 (&lt;code&gt;ngx.HTTP_SPECIAL_RESPONSE&lt;/code&gt;) for successful quits and &lt;code&gt;ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)&lt;/code&gt; (or its friends) for failures.&lt;/p&gt;
&lt;p&gt;If the &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt;'s &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite" rel="nofollow"&gt;rewrite&lt;/a&gt; directive is used to change the URI and initiate location re-lookups (internal redirections), then any &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; or &lt;a href="#rewrite_by_lua_file"&gt;rewrite_by_lua_file&lt;/a&gt; code sequences within the current location will not be executed. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/bar;
     &lt;span class="pl-k"&gt;rewrite_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'ngx.exit(503)'&lt;/span&gt;;
 }
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/bar &lt;/span&gt;{
     ...
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here the Lua code &lt;code&gt;ngx.exit(503)&lt;/code&gt; will never run. This will be the case if &lt;code&gt;rewrite ^ /bar last&lt;/code&gt; is used as this will similarly initiate an internal redirection. If the &lt;code&gt;break&lt;/code&gt; modifier is used instead, there will be no internal redirection and the &lt;code&gt;rewrite_by_lua&lt;/code&gt; code will be executed.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;rewrite_by_lua&lt;/code&gt; code will always run at the end of the &lt;code&gt;rewrite&lt;/code&gt; request-processing phase unless &lt;a href="#rewrite_by_lua_no_postpone"&gt;rewrite_by_lua_no_postpone&lt;/a&gt; is turned on.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-rewrite_by_lua_block" class="anchor" aria-hidden="true" href="#rewrite_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rewrite_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;rewrite tail&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;rewrite_by_lua_block&lt;/span&gt; {
     do_something("hello, world!\nhiya\n")
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-rewrite_by_lua_file" class="anchor" aria-hidden="true" href="#rewrite_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rewrite_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;rewrite tail&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;Nginx variables can be used in the &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; string to provide flexibility. This however carries some risks and is not ordinarily recommended.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;When the Lua code cache is turned on (by default), the user code is loaded once at the first request and cached and the Nginx config must be reloaded each time the Lua source file is modified. The Lua code cache can be temporarily disabled during development by switching &lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt; &lt;code&gt;off&lt;/code&gt; in &lt;code&gt;nginx.conf&lt;/code&gt; to avoid reloading Nginx.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;rewrite_by_lua_file&lt;/code&gt; code will always run at the end of the &lt;code&gt;rewrite&lt;/code&gt; request-processing phase unless &lt;a href="#rewrite_by_lua_no_postpone"&gt;rewrite_by_lua_no_postpone&lt;/a&gt; is turned on.&lt;/p&gt;
&lt;p&gt;Nginx variables are supported in the file path for dynamic dispatch just as in &lt;a href="#content_by_lua_file"&gt;content_by_lua_file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-access_by_lua" class="anchor" aria-hidden="true" href="#access_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;access_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;access_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;access tail&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#access_by_lua_block"&gt;access_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Acts as an access phase handler and executes Lua code string specified in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; for every request.
The Lua code may make &lt;a href="#nginx-api-for-lua"&gt;API calls&lt;/a&gt; and is executed as a new spawned coroutine in an independent global environment (i.e. a sandbox).&lt;/p&gt;
&lt;p&gt;Note that this handler always runs &lt;em&gt;after&lt;/em&gt; the standard &lt;a href="http://nginx.org/en/docs/http/ngx_http_access_module.html" rel="nofollow"&gt;ngx_http_access_module&lt;/a&gt;. So the following will work as expected:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;deny&lt;/span&gt;    &lt;span class="pl-s"&gt;192.168.1.1&lt;/span&gt;;
     &lt;span class="pl-k"&gt;allow&lt;/span&gt;   &lt;span class="pl-s"&gt;192.168.1.0&lt;/span&gt;&lt;span class="pl-c1"&gt;/24&lt;/span&gt;;
     &lt;span class="pl-k"&gt;allow&lt;/span&gt;   &lt;span class="pl-s"&gt;10.1.1.0&lt;/span&gt;&lt;span class="pl-c1"&gt;/16&lt;/span&gt;;
     &lt;span class="pl-k"&gt;deny&lt;/span&gt;   &lt;span class="pl-c1"&gt; all&lt;/span&gt;;

     &lt;span class="pl-k"&gt;access_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local res = ngx.location.capture("/mysql", { ... })&lt;/span&gt;
&lt;span class="pl-s"&gt;         ...&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;

     &lt;span class="pl-c"&gt;# proxy_pass/fastcgi_pass/...&lt;/span&gt;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is, if a client IP address is in the blacklist, it will be denied before the MySQL query for more complex authentication is executed by &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that the &lt;a href="http://mdounin.ru/hg/ngx_http_auth_request_module/" rel="nofollow"&gt;ngx_auth_request&lt;/a&gt; module can be approximated by using &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;auth_request&lt;/span&gt; /auth;

     &lt;span class="pl-c"&gt;# proxy_pass/fastcgi_pass/postgres_pass/...&lt;/span&gt;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;can be implemented in ngx_lua as:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;access_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local res = ngx.location.capture("/auth")&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         if res.status == ngx.HTTP_OK then&lt;/span&gt;
&lt;span class="pl-s"&gt;             return&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         if res.status == ngx.HTTP_FORBIDDEN then&lt;/span&gt;
&lt;span class="pl-s"&gt;             ngx.exit(res.status)&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;

     &lt;span class="pl-c"&gt;# proxy_pass/fastcgi_pass/postgres_pass/...&lt;/span&gt;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As with other access phase handlers, &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt; will &lt;em&gt;not&lt;/em&gt; run in subrequests.&lt;/p&gt;
&lt;p&gt;Note that when calling &lt;code&gt;ngx.exit(ngx.OK)&lt;/code&gt; within a &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt; handler, the Nginx request processing control flow will still continue to the content handler. To terminate the current request from within a &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt; handler, calling &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt; with status &amp;gt;= 200 (&lt;code&gt;ngx.HTTP_OK&lt;/code&gt;) and status &amp;lt; 300 (&lt;code&gt;ngx.HTTP_SPECIAL_RESPONSE&lt;/code&gt;) for successful quits and &lt;code&gt;ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)&lt;/code&gt; (or its friends) for failures.&lt;/p&gt;
&lt;p&gt;Starting from the &lt;code&gt;v0.9.20&lt;/code&gt; release, you can use the &lt;a href="#access_by_lua_no_postpone"&gt;access_by_lua_no_postpone&lt;/a&gt;
directive to control when to run this handler inside the "access" request-processing phase
of Nginx.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-access_by_lua_block" class="anchor" aria-hidden="true" href="#access_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;access_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;access_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;access tail&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;access_by_lua_block&lt;/span&gt; {
     do_something("hello, world!\nhiya\n")
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-access_by_lua_file" class="anchor" aria-hidden="true" href="#access_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;access_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;access_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;access tail&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;Nginx variables can be used in the &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; string to provide flexibility. This however carries some risks and is not ordinarily recommended.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;When the Lua code cache is turned on (by default), the user code is loaded once at the first request and cached
and the Nginx config must be reloaded each time the Lua source file is modified.
The Lua code cache can be temporarily disabled during development by switching &lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt; &lt;code&gt;off&lt;/code&gt; in &lt;code&gt;nginx.conf&lt;/code&gt; to avoid repeatedly reloading Nginx.&lt;/p&gt;
&lt;p&gt;Nginx variables are supported in the file path for dynamic dispatch just as in &lt;a href="#content_by_lua_file"&gt;content_by_lua_file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-header_filter_by_lua" class="anchor" aria-hidden="true" href="#header_filter_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;header_filter_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;header_filter_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;output-header-filter&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#header_filter_by_lua_block"&gt;header_filter_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Uses Lua code specified in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; to define an output header filter.&lt;/p&gt;
&lt;p&gt;Note that the following API functions are currently disabled within this context:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Output API functions (e.g., &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; and &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Control API functions (e.g., &lt;a href="#ngxredirect"&gt;ngx.redirect&lt;/a&gt; and &lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Subrequest API functions (e.g., &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Cosocket API functions (e.g., &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt; and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here is an example of overriding a response header (or adding one if absent) in our Lua header filter:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://mybackend;
     &lt;span class="pl-k"&gt;header_filter_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'ngx.header.Foo = "blah"'&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.2.1rc20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-header_filter_by_lua_block" class="anchor" aria-hidden="true" href="#header_filter_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;header_filter_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;header_filter_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;output-header-filter&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;header_filter_by_lua_block&lt;/span&gt; {
     ngx.header["content-length"] = &lt;span class="pl-k"&gt;nil&lt;/span&gt;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-header_filter_by_lua_file" class="anchor" aria-hidden="true" href="#header_filter_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;header_filter_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;header_filter_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;output-header-filter&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.2.1rc20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-body_filter_by_lua" class="anchor" aria-hidden="true" href="#body_filter_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;body_filter_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;body_filter_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;output-body-filter&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#body_filter_by_lua_block"&gt;body_filter_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Uses Lua code specified in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; to define an output body filter.&lt;/p&gt;
&lt;p&gt;The input data chunk is passed via &lt;a href="#ngxarg"&gt;ngx.arg&lt;/a&gt;[1] (as a Lua string value) and the "eof" flag indicating the end of the response body data stream is passed via &lt;a href="#ngxarg"&gt;ngx.arg&lt;/a&gt;[2] (as a Lua boolean value).&lt;/p&gt;
&lt;p&gt;Behind the scene, the "eof" flag is just the &lt;code&gt;last_buf&lt;/code&gt; (for main requests) or &lt;code&gt;last_in_chain&lt;/code&gt; (for subrequests) flag of the Nginx chain link buffers. (Before the &lt;code&gt;v0.7.14&lt;/code&gt; release, the "eof" flag does not work at all in subrequests.)&lt;/p&gt;
&lt;p&gt;The output data stream can be aborted immediately by running the following Lua statement:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;ERROR&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will truncate the response body and usually result in incomplete and also invalid responses.&lt;/p&gt;
&lt;p&gt;The Lua code can pass its own modified version of the input data chunk to the downstream Nginx output body filters by overriding &lt;a href="#ngxarg"&gt;ngx.arg&lt;/a&gt;[1] with a Lua string or a Lua table of strings. For example, to transform all the lowercase letters in the response body, we can just write:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://mybackend;
     &lt;span class="pl-k"&gt;body_filter_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'ngx.arg[1] = string.upper(ngx.arg[1])'&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When setting &lt;code&gt;nil&lt;/code&gt; or an empty Lua string value to &lt;code&gt;ngx.arg[1]&lt;/code&gt;, no data chunk will be passed to the downstream Nginx output filters at all.&lt;/p&gt;
&lt;p&gt;Likewise, new "eof" flag can also be specified by setting a boolean value to &lt;a href="#ngxarg"&gt;ngx.arg&lt;/a&gt;[2]. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/t &lt;/span&gt;{
     &lt;span class="pl-k"&gt;echo&lt;/span&gt; hello world;
     &lt;span class="pl-k"&gt;echo&lt;/span&gt; hiya globe;

     &lt;span class="pl-k"&gt;body_filter_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local chunk = ngx.arg[1]&lt;/span&gt;
&lt;span class="pl-s"&gt;         if string.match(chunk, "hello") then&lt;/span&gt;
&lt;span class="pl-s"&gt;             ngx.arg[2] = true  -- new eof&lt;/span&gt;
&lt;span class="pl-s"&gt;             return&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         -- just throw away any remaining chunk data&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.arg[1] = nil&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then &lt;code&gt;GET /t&lt;/code&gt; will just return the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hello world
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That is, when the body filter sees a chunk containing the word "hello", then it will set the "eof" flag to true immediately, resulting in truncated but still valid responses.&lt;/p&gt;
&lt;p&gt;When the Lua code may change the length of the response body, then it is required to always clear out the &lt;code&gt;Content-Length&lt;/code&gt; response header (if any) in a header filter to enforce streaming output, as in&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-c"&gt;# fastcgi_pass/proxy_pass/...&lt;/span&gt;

     &lt;span class="pl-k"&gt;header_filter_by_lua_block&lt;/span&gt; { ngx.header.content_length = nil }
     &lt;span class="pl-k"&gt;body_filter_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'ngx.arg[1] = string.len(ngx.arg[1]) .. "\\n"'&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the following API functions are currently disabled within this context due to the limitations in Nginx output filter's current implementation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Output API functions (e.g., &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; and &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Control API functions (e.g., &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt; and &lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Subrequest API functions (e.g., &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Cosocket API functions (e.g., &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt; and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nginx output filters may be called multiple times for a single request because response body may be delivered in chunks. Thus, the Lua code specified by in this directive may also run multiple times in the lifetime of a single HTTP request.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-body_filter_by_lua_block" class="anchor" aria-hidden="true" href="#body_filter_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;body_filter_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;body_filter_by_lua_block { lua-script-str }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;output-body-filter&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#body_filter_by_lua"&gt;body_filter_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;body_filter_by_lua_block&lt;/span&gt; {
     &lt;span class="pl-k"&gt;local&lt;/span&gt; data, eof = ngx.arg[1], ngx.arg[2]
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-body_filter_by_lua_file" class="anchor" aria-hidden="true" href="#body_filter_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;body_filter_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;body_filter_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;output-body-filter&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#body_filter_by_lua"&gt;body_filter_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-log_by_lua" class="anchor" aria-hidden="true" href="#log_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;log_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;log_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;log&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#log_by_lua_block"&gt;log_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Runs the Lua source code inlined as the &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; at the &lt;code&gt;log&lt;/code&gt; request processing phase. This does not replace the current access logs, but runs before.&lt;/p&gt;
&lt;p&gt;Note that the following API functions are currently disabled within this context:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Output API functions (e.g., &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; and &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Control API functions (e.g., &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Subrequest API functions (e.g., &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Cosocket API functions (e.g., &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt; and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here is an example of gathering average data for &lt;a href="http://nginx.org/en/docs/http/ngx_http_upstream_module.html#var_upstream_response_time" rel="nofollow"&gt;$upstream_response_time&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;lua_shared_dict&lt;/span&gt; log_dict &lt;span class="pl-c1"&gt;5M&lt;/span&gt;;

 &lt;span class="pl-k"&gt;server&lt;/span&gt; {
     &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
         &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://mybackend;

         &lt;span class="pl-k"&gt;log_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;             local log_dict = ngx.shared.log_dict&lt;/span&gt;
&lt;span class="pl-s"&gt;             local upstream_time = tonumber(ngx.var.upstream_response_time)&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;             local sum = log_dict:get("upstream_time-sum") or 0&lt;/span&gt;
&lt;span class="pl-s"&gt;             sum = sum + upstream_time&lt;/span&gt;
&lt;span class="pl-s"&gt;             log_dict:set("upstream_time-sum", sum)&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;             local newval, err = log_dict:incr("upstream_time-nb", 1)&lt;/span&gt;
&lt;span class="pl-s"&gt;             if not newval and err == "not found" then&lt;/span&gt;
&lt;span class="pl-s"&gt;                 log_dict:add("upstream_time-nb", 0)&lt;/span&gt;
&lt;span class="pl-s"&gt;                 log_dict:incr("upstream_time-nb", 1)&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;         '&lt;/span&gt;;
     }

     &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /status &lt;/span&gt;{
         &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
             &lt;span class="pl-k"&gt;local&lt;/span&gt; log_dict = ngx.shared.log_dict
             &lt;span class="pl-k"&gt;local&lt;/span&gt; sum = log_dict:get(&lt;span class="pl-s"&gt;"upstream_time-sum"&lt;/span&gt;)
             &lt;span class="pl-k"&gt;local&lt;/span&gt; nb = log_dict:get(&lt;span class="pl-s"&gt;"upstream_time-nb"&lt;/span&gt;)

             &lt;span class="pl-k"&gt;if&lt;/span&gt; nb and sum then
                 ngx.say("&lt;span class="pl-k"&gt;average&lt;/span&gt; upstream response time: &lt;span class="pl-s"&gt;", sum / nb,&lt;/span&gt;
&lt;span class="pl-s"&gt;                         "&lt;/span&gt; (&lt;span class="pl-s"&gt;", nb, "&lt;/span&gt; reqs)&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;             else&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say("&lt;/span&gt;no data yet&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;         }&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc31&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-log_by_lua_block" class="anchor" aria-hidden="true" href="#log_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;log_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;log_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;log&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#log_by_lua"&gt;log_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;log_by_lua_block&lt;/span&gt; {
     print("&lt;span class="pl-k"&gt;I&lt;/span&gt; need no extra escaping here, for example: \r\nblah&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-log_by_lua_file" class="anchor" aria-hidden="true" href="#log_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;log_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;log_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;log&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#log_by_lua"&gt;log_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc31&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-balancer_by_lua_block" class="anchor" aria-hidden="true" href="#balancer_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;balancer_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;balancer_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;upstream&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;content&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive runs Lua code as an upstream balancer for any upstream entities defined
by the &lt;code&gt;upstream {}&lt;/code&gt; configuration block.&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;upstream&lt;/span&gt; &lt;span class="pl-en"&gt;foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;server&lt;/span&gt; &lt;span class="pl-s"&gt;127.0.0.1&lt;/span&gt;;
     &lt;span class="pl-k"&gt;balancer_by_lua_block&lt;/span&gt; {
         -- &lt;span class="pl-k"&gt;use&lt;/span&gt; Lua to do something interesting here
         -- as &lt;span class="pl-s"&gt;a&lt;/span&gt; dynamic balancer
     }
 }

 server {
     location / {
         proxy_pass http://foo;
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The resulting Lua load balancer can work with any existing Nginx upstream modules
like &lt;a href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_proxy&lt;/a&gt; and
&lt;a href="https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html" rel="nofollow"&gt;ngx_fastcgi&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also, the Lua load balancer can work with the standard upstream connection pool mechanism,
i.e., the standard &lt;a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive" rel="nofollow"&gt;keepalive&lt;/a&gt; directive.
Just ensure that the &lt;a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive" rel="nofollow"&gt;keepalive&lt;/a&gt; directive
is used &lt;em&gt;after&lt;/em&gt; this &lt;code&gt;balancer_by_lua_block&lt;/code&gt; directive in a single &lt;code&gt;upstream {}&lt;/code&gt; configuration block.&lt;/p&gt;
&lt;p&gt;The Lua load balancer can totally ignore the list of servers defined in the &lt;code&gt;upstream {}&lt;/code&gt; block
and select peer from a completely dynamic server list (even changing per request) via the
&lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/balancer.md"&gt;ngx.balancer&lt;/a&gt; module
from the &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;The Lua code handler registered by this directive might get called more than once in a single
downstream request when the Nginx upstream mechanism retries the request on conditions
specified by directives like the &lt;a href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream" rel="nofollow"&gt;proxy_next_upstream&lt;/a&gt;
directive.&lt;/p&gt;
&lt;p&gt;This Lua code execution context does not support yielding, so Lua APIs that may yield
(like cosockets and "light threads") are disabled in this context. One can usually work
around this limitation by doing such operations in an earlier phase handler (like
&lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt;) and passing along the result into this context
via the &lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt; table.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-balancer_by_lua_file" class="anchor" aria-hidden="true" href="#balancer_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;balancer_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;balancer_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;upstream&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;content&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#balancer_by_lua_block"&gt;balancer_by_lua_block&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_need_request_body" class="anchor" aria-hidden="true" href="#lua_need_request_body"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_need_request_body&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_need_request_body &amp;lt;on|off&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;depends on usage&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Determines whether to force the request body data to be read before running rewrite/access/access_by_lua* or not. The Nginx core does not read the client request body by default and if request body data is required, then this directive should be turned &lt;code&gt;on&lt;/code&gt; or the &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; function should be called within the Lua code.&lt;/p&gt;
&lt;p&gt;To read the request body data within the &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#var_request_body" rel="nofollow"&gt;$request_body&lt;/a&gt; variable,
&lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size" rel="nofollow"&gt;client_body_buffer_size&lt;/a&gt; must have the same value as &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size" rel="nofollow"&gt;client_max_body_size&lt;/a&gt;. Because when the content length exceeds &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size" rel="nofollow"&gt;client_body_buffer_size&lt;/a&gt; but less than &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size" rel="nofollow"&gt;client_max_body_size&lt;/a&gt;, Nginx will buffer the data into a temporary file on the disk, which will lead to empty value in the &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#var_request_body" rel="nofollow"&gt;$request_body&lt;/a&gt; variable.&lt;/p&gt;
&lt;p&gt;If the current location includes &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt; directives,
then the request body will be read just before the &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt; code is run (and also at the
&lt;code&gt;rewrite&lt;/code&gt; phase). Similarly, if only &lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt; is specified,
the request body will not be read until the content handler's Lua code is
about to run (i.e., the request body will be read during the content phase).&lt;/p&gt;
&lt;p&gt;It is recommended however, to use the &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; and &lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt; functions for finer control over the request body reading process instead.&lt;/p&gt;
&lt;p&gt;This also applies to &lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ssl_certificate_by_lua_block" class="anchor" aria-hidden="true" href="#ssl_certificate_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ssl_certificate_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ssl_certificate_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;server&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;right-before-SSL-handshake&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive runs user Lua code when Nginx is about to start the SSL handshake for the downstream
SSL (https) connections.&lt;/p&gt;
&lt;p&gt;It is particularly useful for setting the SSL certificate chain and the corresponding private key on a per-request
basis. It is also useful to load such handshake configurations nonblockingly from the remote (for example,
with the &lt;a href="#ngxsockettcp"&gt;cosocket&lt;/a&gt; API). And one can also do per-request OCSP stapling handling in pure
Lua here as well.&lt;/p&gt;
&lt;p&gt;Another typical use case is to do SSL handshake traffic control nonblockingly in this context,
with the help of the &lt;a href="https://github.com/openresty/lua-resty-limit-traffic"&gt;lua-resty-limit-traffic#readme&lt;/a&gt;
library, for example.&lt;/p&gt;
&lt;p&gt;One can also do interesting things with the SSL handshake requests from the client side, like
rejecting old SSL clients using the SSLv3 protocol or even below selectively.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl.md"&gt;ngx.ssl&lt;/a&gt;
and &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ocsp.md"&gt;ngx.ocsp&lt;/a&gt; Lua modules
provided by the &lt;a href="https://github.com/openresty/lua-resty-core/#readme"&gt;lua-resty-core&lt;/a&gt;
library are particularly useful in this context. You can use the Lua API offered by these two Lua modules
to manipulate the SSL certificate chain and private key for the current SSL connection
being initiated.&lt;/p&gt;
&lt;p&gt;This Lua handler does not run at all, however, when Nginx/OpenSSL successfully resumes
the SSL session via SSL session IDs or TLS session tickets for the current SSL connection. In
other words, this Lua handler only runs when Nginx has to initiate a full SSL handshake.&lt;/p&gt;
&lt;p&gt;Below is a trivial example using the
&lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl.md"&gt;ngx.ssl&lt;/a&gt; module
at the same time:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;server&lt;/span&gt; {
     &lt;span class="pl-k"&gt;listen&lt;/span&gt; &lt;span class="pl-s"&gt;443&lt;/span&gt; ssl;
     &lt;span class="pl-k"&gt;server_name&lt;/span&gt;   test.com;

     &lt;span class="pl-k"&gt;ssl_certificate_by_lua_block&lt;/span&gt; {
         print("&lt;span class="pl-k"&gt;About&lt;/span&gt; to initiate &lt;span class="pl-s"&gt;a&lt;/span&gt; new SSL handshake!&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     location / {&lt;/span&gt;
&lt;span class="pl-s"&gt;         root html;&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See more complicated examples in the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl.md"&gt;ngx.ssl&lt;/a&gt;
and &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ocsp.md"&gt;ngx.ocsp&lt;/a&gt;
Lua modules' official documentation.&lt;/p&gt;
&lt;p&gt;Uncaught Lua exceptions in the user Lua code immediately abort the current SSL session, so does the
&lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt; call with an error code like &lt;code&gt;ngx.ERROR&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This Lua code execution context &lt;em&gt;does&lt;/em&gt; support yielding, so Lua APIs that may yield
(like cosockets, sleeping, and "light threads")
are enabled in this context.&lt;/p&gt;
&lt;p&gt;Note, however, you still need to configure the &lt;a href="https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_certificate" rel="nofollow"&gt;ssl_certificate&lt;/a&gt; and
&lt;a href="https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_certificate_key" rel="nofollow"&gt;ssl_certificate_key&lt;/a&gt;
directives even though you will not use this static certificate and private key at all. This is
because the NGINX core requires their appearance otherwise you are seeing the following error
while starting NGINX:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nginx: [emerg] no ssl configured for the server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This directive requires OpenSSL 1.0.2e or greater.&lt;/p&gt;
&lt;p&gt;If you are using the &lt;a href="https://openresty.org/en/linux-packages.html" rel="nofollow"&gt;official pre-built
packages&lt;/a&gt; for
&lt;a href="https://openresty.org/" rel="nofollow"&gt;OpenResty&lt;/a&gt; 1.9.7.2 or later, then everything should
work out of the box.&lt;/p&gt;
&lt;p&gt;If you are not using one of the &lt;a href="https://openresty.org/en/linux-packages.html" rel="nofollow"&gt;OpenSSL
packages&lt;/a&gt; provided by
&lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty&lt;/a&gt;, you will need to apply patches to OpenSSL
in order to use this directive:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openresty.org/en/openssl-patches.html" rel="nofollow"&gt;https://openresty.org/en/openssl-patches.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Similarly, if you are not using the Nginx core shipped with
&lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty&lt;/a&gt; 1.9.7.2 or later, you will need to apply
patches to the standard Nginx core:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openresty.org/en/nginx-ssl-patches.html" rel="nofollow"&gt;https://openresty.org/en/nginx-ssl-patches.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ssl_certificate_by_lua_file" class="anchor" aria-hidden="true" href="#ssl_certificate_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ssl_certificate_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ssl_certificate_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;server&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;right-before-SSL-handshake&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua_block&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ssl_session_fetch_by_lua_block" class="anchor" aria-hidden="true" href="#ssl_session_fetch_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ssl_session_fetch_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ssl_session_fetch_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;right-before-SSL-handshake&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive runs Lua code to look up and load the SSL session (if any) according to the session ID
provided by the current SSL handshake request for the downstream.&lt;/p&gt;
&lt;p&gt;The Lua API for obtaining the current session ID and loading a cached SSL session data
is provided in the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl/session.md"&gt;ngx.ssl.session&lt;/a&gt;
Lua module shipped with the &lt;a href="https://github.com/openresty/lua-resty-core#readme"&gt;lua-resty-core&lt;/a&gt;
library.&lt;/p&gt;
&lt;p&gt;Lua APIs that may yield, like &lt;a href="#ngxsleep"&gt;ngx.sleep&lt;/a&gt; and &lt;a href="#ngxsockettcp"&gt;cosockets&lt;/a&gt;,
are enabled in this context.&lt;/p&gt;
&lt;p&gt;This hook, together with the &lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua*&lt;/a&gt; hook,
can be used to implement distributed caching mechanisms in pure Lua (based
on the &lt;a href="#ngxsockettcp"&gt;cosocket&lt;/a&gt; API, for example). If a cached SSL session is found
and loaded into the current SSL connection context,
SSL session resumption can then get immediately initiated and bypass the full SSL handshake process which is very expensive in terms of CPU time.&lt;/p&gt;
&lt;p&gt;Please note that TLS session tickets are very different and it is the clients' responsibility
to cache the SSL session state when session tickets are used. SSL session resumptions based on
TLS session tickets would happen automatically without going through this hook (nor the
&lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua*&lt;/a&gt; hook). This hook is mainly
for older or less capable SSL clients that can only do SSL sessions by session IDs.&lt;/p&gt;
&lt;p&gt;When &lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua*&lt;/a&gt; is specified at the same time,
this hook usually runs before &lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua*&lt;/a&gt;.
When the SSL session is found and successfully loaded for the current SSL connection,
SSL session resumption will happen and thus bypass the &lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua*&lt;/a&gt;
hook completely. In this case, Nginx also bypasses the &lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua*&lt;/a&gt;
hook, for obvious reasons.&lt;/p&gt;
&lt;p&gt;To easily test this hook locally with a modern web browser, you can temporarily put the following line
in your https server block to disable the TLS session ticket support:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssl_session_tickets off;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But do not forget to comment this line out before publishing your site to the world.&lt;/p&gt;
&lt;p&gt;If you are using the &lt;a href="https://openresty.org/en/linux-packages.html" rel="nofollow"&gt;official pre-built packages&lt;/a&gt; for &lt;a href="https://openresty.org/" rel="nofollow"&gt;OpenResty&lt;/a&gt;
1.11.2.1 or later, then everything should work out of the box.&lt;/p&gt;
&lt;p&gt;If you are not using one of the &lt;a href="https://openresty.org/en/linux-packages.html" rel="nofollow"&gt;OpenSSL
packages&lt;/a&gt; provided by
&lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty&lt;/a&gt;, you will need to apply patches to OpenSSL
in order to use this directive:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openresty.org/en/openssl-patches.html" rel="nofollow"&gt;https://openresty.org/en/openssl-patches.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Similarly, if you are not using the Nginx core shipped with
&lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty&lt;/a&gt; 1.11.2.1 or later, you will need to apply
patches to the standard Nginx core:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openresty.org/en/nginx-ssl-patches.html" rel="nofollow"&gt;https://openresty.org/en/nginx-ssl-patches.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;Note that this directive can only be used in the &lt;strong&gt;http context&lt;/strong&gt; starting
with the &lt;code&gt;v0.10.7&lt;/code&gt; release since SSL session resumption happens
before server name dispatch.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ssl_session_fetch_by_lua_file" class="anchor" aria-hidden="true" href="#ssl_session_fetch_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ssl_session_fetch_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ssl_session_fetch_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;right-before-SSL-handshake&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#ssl_session_fetch_by_lua_block"&gt;ssl_session_fetch_by_lua_block&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or rather, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;Note that: this directive is only allowed to used in &lt;strong&gt;http context&lt;/strong&gt; from the &lt;code&gt;v0.10.7&lt;/code&gt; release
(because SSL session resumption happens before server name dispatch).&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ssl_session_store_by_lua_block" class="anchor" aria-hidden="true" href="#ssl_session_store_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ssl_session_store_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ssl_session_store_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;right-after-SSL-handshake&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive runs Lua code to fetch and save the SSL session (if any) according to the session ID
provided by the current SSL handshake request for the downstream. The saved or cached SSL
session data can be used for future SSL connections to resume SSL sessions without going
through the full SSL handshake process (which is very expensive in terms of CPU time).&lt;/p&gt;
&lt;p&gt;Lua APIs that may yield, like &lt;a href="#ngxsleep"&gt;ngx.sleep&lt;/a&gt; and &lt;a href="#ngxsockettcp"&gt;cosockets&lt;/a&gt;,
are &lt;em&gt;disabled&lt;/em&gt; in this context. You can still, however, use the &lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt; API
to create 0-delay timers to save the SSL session data asynchronously to external services (like &lt;code&gt;redis&lt;/code&gt; or &lt;code&gt;memcached&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;The Lua API for obtaining the current session ID and the associated session state data
is provided in the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl/session.md#readme"&gt;ngx.ssl.session&lt;/a&gt;
Lua module shipped with the &lt;a href="https://github.com/openresty/lua-resty-core#readme"&gt;lua-resty-core&lt;/a&gt;
library.&lt;/p&gt;
&lt;p&gt;To easily test this hook locally with a modern web browser, you can temporarily put the following line
in your https server block to disable the TLS session ticket support:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssl_session_tickets off;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But do not forget to comment this line out before publishing your site to the world.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;Note that: this directive is only allowed to used in &lt;strong&gt;http context&lt;/strong&gt; from the &lt;code&gt;v0.10.7&lt;/code&gt; release
(because SSL session resumption happens before server name dispatch).&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ssl_session_store_by_lua_file" class="anchor" aria-hidden="true" href="#ssl_session_store_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ssl_session_store_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ssl_session_store_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;right-after-SSL-handshake&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua_block&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or rather, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;Note that: this directive is only allowed to used in &lt;strong&gt;http context&lt;/strong&gt; from the &lt;code&gt;v0.10.7&lt;/code&gt; release
(because SSL session resumption happens before server name dispatch).&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_shared_dict" class="anchor" aria-hidden="true" href="#lua_shared_dict"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_shared_dict&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_shared_dict &amp;lt;name&amp;gt; &amp;lt;size&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;no&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;depends on usage&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Declares a shared memory zone, &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;, to serve as storage for the shm based Lua dictionary &lt;code&gt;ngx.shared.&amp;lt;name&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Shared memory zones are always shared by all the Nginx worker processes in the current Nginx server instance.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;size&amp;gt;&lt;/code&gt; argument accepts size units such as &lt;code&gt;k&lt;/code&gt; and &lt;code&gt;m&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;http&lt;/span&gt; {
     &lt;span class="pl-k"&gt;lua_shared_dict&lt;/span&gt; dogs &lt;span class="pl-c1"&gt;10m&lt;/span&gt;;
     ...
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The hard-coded minimum size is 8KB while the practical minimum size depends
on actual user data set (some people start with 12KB).&lt;/p&gt;
&lt;p&gt;See &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_connect_timeout" class="anchor" aria-hidden="true" href="#lua_socket_connect_timeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_connect_timeout&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_connect_timeout &amp;lt;time&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_connect_timeout 60s&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive controls the default timeout value used in TCP/unix-domain socket object's &lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt; method and can be overridden by the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; or &lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt; methods.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; argument can be an integer, with an optional time unit, like &lt;code&gt;s&lt;/code&gt; (second), &lt;code&gt;ms&lt;/code&gt; (millisecond), &lt;code&gt;m&lt;/code&gt; (minute). The default time unit is &lt;code&gt;s&lt;/code&gt;, i.e., "second". The default setting is &lt;code&gt;60s&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_send_timeout" class="anchor" aria-hidden="true" href="#lua_socket_send_timeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_send_timeout&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_send_timeout &amp;lt;time&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_send_timeout 60s&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls the default timeout value used in TCP/unix-domain socket object's &lt;a href="#tcpsocksend"&gt;send&lt;/a&gt; method and can be overridden by the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; or &lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt; methods.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; argument can be an integer, with an optional time unit, like &lt;code&gt;s&lt;/code&gt; (second), &lt;code&gt;ms&lt;/code&gt; (millisecond), &lt;code&gt;m&lt;/code&gt; (minute). The default time unit is &lt;code&gt;s&lt;/code&gt;, i.e., "second". The default setting is &lt;code&gt;60s&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_send_lowat" class="anchor" aria-hidden="true" href="#lua_socket_send_lowat"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_send_lowat&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_send_lowat &amp;lt;size&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_send_lowat 0&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls the &lt;code&gt;lowat&lt;/code&gt; (low water) value for the cosocket send buffer.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_read_timeout" class="anchor" aria-hidden="true" href="#lua_socket_read_timeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_read_timeout&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_read_timeout &amp;lt;time&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_read_timeout 60s&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;depends on usage&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive controls the default timeout value used in TCP/unix-domain socket object's &lt;a href="#tcpsockreceive"&gt;receive&lt;/a&gt; method and iterator functions returned by the &lt;a href="#tcpsockreceiveuntil"&gt;receiveuntil&lt;/a&gt; method. This setting can be overridden by the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; or &lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt; methods.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; argument can be an integer, with an optional time unit, like &lt;code&gt;s&lt;/code&gt; (second), &lt;code&gt;ms&lt;/code&gt; (millisecond), &lt;code&gt;m&lt;/code&gt; (minute). The default time unit is &lt;code&gt;s&lt;/code&gt;, i.e., "second". The default setting is &lt;code&gt;60s&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_buffer_size" class="anchor" aria-hidden="true" href="#lua_socket_buffer_size"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_buffer_size&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_buffer_size &amp;lt;size&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_buffer_size 4k/8k&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies the buffer size used by cosocket reading operations.&lt;/p&gt;
&lt;p&gt;This buffer does not have to be that big to hold everything at the same time because cosocket supports 100% non-buffered reading and parsing. So even &lt;code&gt;1&lt;/code&gt; byte buffer size should still work everywhere but the performance could be terrible.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_pool_size" class="anchor" aria-hidden="true" href="#lua_socket_pool_size"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_pool_size&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_pool_size &amp;lt;size&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_pool_size 30&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies the size limit (in terms of connection count) for every cosocket connection pool associated with every remote server (i.e., identified by either the host-port pair or the unix domain socket file path).&lt;/p&gt;
&lt;p&gt;Default to 30 connections for every pool.&lt;/p&gt;
&lt;p&gt;When the connection pool exceeds the available size limit, the least recently used (idle) connection already in the pool will be closed to make room for the current connection.&lt;/p&gt;
&lt;p&gt;Note that the cosocket connection pool is per Nginx worker process rather than per Nginx server instance, so size limit specified here also applies to every single Nginx worker process.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_keepalive_timeout" class="anchor" aria-hidden="true" href="#lua_socket_keepalive_timeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_keepalive_timeout&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_keepalive_timeout &amp;lt;time&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_keepalive_timeout 60s&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive controls the default maximal idle time of the connections in the cosocket built-in connection pool. When this timeout reaches, idle connections will be closed and removed from the pool. This setting can be overridden by cosocket objects' &lt;a href="#tcpsocksetkeepalive"&gt;setkeepalive&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; argument can be an integer, with an optional time unit, like &lt;code&gt;s&lt;/code&gt; (second), &lt;code&gt;ms&lt;/code&gt; (millisecond), &lt;code&gt;m&lt;/code&gt; (minute). The default time unit is &lt;code&gt;s&lt;/code&gt;, i.e., "second". The default setting is &lt;code&gt;60s&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_log_errors" class="anchor" aria-hidden="true" href="#lua_socket_log_errors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_log_errors&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_log_errors on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_log_errors on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive can be used to toggle error logging when a failure occurs for the TCP or UDP cosockets. If you are already doing proper error handling and logging in your Lua code, then it is recommended to turn this directive off to prevent data flushing in your Nginx error log files (which is usually rather expensive).&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.13&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_ssl_ciphers" class="anchor" aria-hidden="true" href="#lua_ssl_ciphers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_ssl_ciphers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_ssl_ciphers &amp;lt;ciphers&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_ssl_ciphers DEFAULT&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies the enabled ciphers for requests to a SSL/TLS server in the &lt;a href="#tcpsocksslhandshake"&gt;tcpsock:sslhandshake&lt;/a&gt; method. The ciphers are specified in the format understood by the OpenSSL library.&lt;/p&gt;
&lt;p&gt;The full list can be viewed using the “openssl ciphers” command.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_ssl_crl" class="anchor" aria-hidden="true" href="#lua_ssl_crl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_ssl_crl&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_ssl_crl &amp;lt;file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;no&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies a file with revoked certificates (CRL) in the PEM format used to verify the certificate of the SSL/TLS server in the &lt;a href="#tcpsocksslhandshake"&gt;tcpsock:sslhandshake&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_ssl_protocols" class="anchor" aria-hidden="true" href="#lua_ssl_protocols"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_ssl_protocols&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_ssl_protocols [SSLv2] [SSLv3] [TLSv1] [TLSv1.1] [TLSv1.2] [TLSv1.3]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Enables the specified protocols for requests to a SSL/TLS server in the &lt;a href="#tcpsocksslhandshake"&gt;tcpsock:sslhandshake&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;The support for the &lt;code&gt;TLSv1.3&lt;/code&gt; parameter requires version &lt;code&gt;v0.10.12&lt;/code&gt; &lt;em&gt;and&lt;/em&gt; OpenSSL 1.1.1.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_ssl_trusted_certificate" class="anchor" aria-hidden="true" href="#lua_ssl_trusted_certificate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_ssl_trusted_certificate&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_ssl_trusted_certificate &amp;lt;file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;no&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies a file path with trusted CA certificates in the PEM format used to verify the certificate of the SSL/TLS server in the &lt;a href="#tcpsocksslhandshake"&gt;tcpsock:sslhandshake&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#lua_ssl_verify_depth"&gt;lua_ssl_verify_depth&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_ssl_verify_depth" class="anchor" aria-hidden="true" href="#lua_ssl_verify_depth"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_ssl_verify_depth&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_ssl_verify_depth &amp;lt;number&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_ssl_verify_depth 1&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sets the verification depth in the server certificates chain.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#lua_ssl_trusted_certificate"&gt;lua_ssl_trusted_certificate&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_http10_buffering" class="anchor" aria-hidden="true" href="#lua_http10_buffering"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_http10_buffering&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_http10_buffering on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_http10_buffering on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location-if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Enables or disables automatic response buffering for HTTP 1.0 (or older) requests. This buffering mechanism is mainly used for HTTP 1.0 keep-alive which relies on a proper &lt;code&gt;Content-Length&lt;/code&gt; response header.&lt;/p&gt;
&lt;p&gt;If the Lua code explicitly sets a &lt;code&gt;Content-Length&lt;/code&gt; response header before sending the headers (either explicitly via &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt; or implicitly via the first &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; or &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; call), then the HTTP 1.0 response buffering will be disabled even when this directive is turned on.&lt;/p&gt;
&lt;p&gt;To output very large response data in a streaming fashion (via the &lt;a href="#ngxflush"&gt;ngx.flush&lt;/a&gt; call, for example), this directive MUST be turned off to minimize memory usage.&lt;/p&gt;
&lt;p&gt;This directive is turned &lt;code&gt;on&lt;/code&gt; by default.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc19&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-rewrite_by_lua_no_postpone" class="anchor" aria-hidden="true" href="#rewrite_by_lua_no_postpone"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rewrite_by_lua_no_postpone&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua_no_postpone on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua_no_postpone off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls whether or not to disable postponing &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt; directives to run at the end of the &lt;code&gt;rewrite&lt;/code&gt; request-processing phase. By default, this directive is turned off and the Lua code is postponed to run at the end of the &lt;code&gt;rewrite&lt;/code&gt; phase.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc29&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-access_by_lua_no_postpone" class="anchor" aria-hidden="true" href="#access_by_lua_no_postpone"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;access_by_lua_no_postpone&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;access_by_lua_no_postpone on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;access_by_lua_no_postpone off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls whether or not to disable postponing &lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt; directives to run at the end of the &lt;code&gt;access&lt;/code&gt; request-processing phase. By default, this directive is turned off and the Lua code is postponed to run at the end of the &lt;code&gt;access&lt;/code&gt; phase.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_transform_underscores_in_response_headers" class="anchor" aria-hidden="true" href="#lua_transform_underscores_in_response_headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_transform_underscores_in_response_headers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_transform_underscores_in_response_headers on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_transform_underscores_in_response_headers on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location-if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls whether to transform underscores (&lt;code&gt;_&lt;/code&gt;) in the response header names specified in the &lt;a href="#ngxheaderheader"&gt;ngx.header.HEADER&lt;/a&gt; API to hypens (&lt;code&gt;-&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_check_client_abort" class="anchor" aria-hidden="true" href="#lua_check_client_abort"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_check_client_abort&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_check_client_abort on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_check_client_abort off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location-if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive controls whether to check for premature client connection abortion.&lt;/p&gt;
&lt;p&gt;When this directive is on, the ngx_lua module will monitor the premature connection close event on the downstream connections and when there is such an event, it will call the user Lua function callback (registered by &lt;a href="#ngxon_abort"&gt;ngx.on_abort&lt;/a&gt;) or just stop and clean up all the Lua "light threads" running in the current request's request handler when there is no user callback function registered.&lt;/p&gt;
&lt;p&gt;According to the current implementation, however, if the client closes the connection before the Lua code finishes reading the request body data via &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;, then ngx_lua will neither stop all the running "light threads" nor call the user callback (if &lt;a href="#ngxon_abort"&gt;ngx.on_abort&lt;/a&gt; has been called). Instead, the reading operation on &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt; will just return the error message "client aborted" as the second return value (the first return value is surely &lt;code&gt;nil&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;When TCP keepalive is disabled, it is relying on the client side to close the socket gracefully (by sending a &lt;code&gt;FIN&lt;/code&gt; packet or something like that). For (soft) real-time web applications, it is highly recommended to configure the &lt;a href="http://tldp.org/HOWTO/TCP-Keepalive-HOWTO/overview.html" rel="nofollow"&gt;TCP keepalive&lt;/a&gt; support in your system's TCP stack implementation in order to detect "half-open" TCP connections in time.&lt;/p&gt;
&lt;p&gt;For example, on Linux, you can configure the standard &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#listen" rel="nofollow"&gt;listen&lt;/a&gt; directive in your &lt;code&gt;nginx.conf&lt;/code&gt; file like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;listen&lt;/span&gt; &lt;span class="pl-s"&gt;80&lt;/span&gt; so_keepalive=2s:2s:8;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On FreeBSD, you can only tune the system-wide configuration for TCP keepalive, for example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# sysctl net.inet.tcp.keepintvl=2000
# sysctl net.inet.tcp.keepidle=2000
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.7.4&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxon_abort"&gt;ngx.on_abort&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_max_pending_timers" class="anchor" aria-hidden="true" href="#lua_max_pending_timers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_max_pending_timers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_max_pending_timers &amp;lt;count&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_max_pending_timers 1024&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls the maximum number of pending timers allowed.&lt;/p&gt;
&lt;p&gt;Pending timers are those timers that have not expired yet.&lt;/p&gt;
&lt;p&gt;When exceeding this limit, the &lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt; call will immediately return &lt;code&gt;nil&lt;/code&gt; and the error string "too many pending timers".&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.8.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_max_running_timers" class="anchor" aria-hidden="true" href="#lua_max_running_timers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_max_running_timers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_max_running_timers &amp;lt;count&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_max_running_timers 256&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls the maximum number of "running timers" allowed.&lt;/p&gt;
&lt;p&gt;Running timers are those timers whose user callback functions are still running.&lt;/p&gt;
&lt;p&gt;When exceeding this limit, Nginx will stop running the callbacks of newly expired timers and log an error message "N lua_max_running_timers are not enough" where "N" is the current value of this directive.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.8.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_sa_restart" class="anchor" aria-hidden="true" href="#lua_sa_restart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_sa_restart&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_sa_restart on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_sa_restart on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When enabled, this module will set the &lt;code&gt;SA_RESTART&lt;/code&gt; flag on Nginx workers signal dispositions.&lt;/p&gt;
&lt;p&gt;This allows Lua I/O primitives to not be interrupted by Nginx's handling of various signals.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.14&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-nginx-api-for-lua" class="anchor" aria-hidden="true" href="#nginx-api-for-lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nginx API for Lua&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxarg"&gt;ngx.arg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxvarvariable"&gt;ngx.var.VARIABLE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#core-constants"&gt;Core constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#http-method-constants"&gt;HTTP method constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#http-status-constants"&gt;HTTP status constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nginx-log-level-constants"&gt;Nginx log level constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#print"&gt;print&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxstatus"&gt;ngx.status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxheaderheader"&gt;ngx.header.HEADER&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxrespget_headers"&gt;ngx.resp.get_headers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqis_internal"&gt;ngx.req.is_internal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqstart_time"&gt;ngx.req.start_time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqhttp_version"&gt;ngx.req.http_version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqraw_header"&gt;ngx.req.raw_header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqget_method"&gt;ngx.req.get_method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqset_method"&gt;ngx.req.set_method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqset_uri"&gt;ngx.req.set_uri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqset_uri_args"&gt;ngx.req.set_uri_args&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqget_uri_args"&gt;ngx.req.get_uri_args&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqget_post_args"&gt;ngx.req.get_post_args&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqget_headers"&gt;ngx.req.get_headers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqset_header"&gt;ngx.req.set_header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqclear_header"&gt;ngx.req.clear_header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqget_body_data"&gt;ngx.req.get_body_data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqget_body_file"&gt;ngx.req.get_body_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqset_body_data"&gt;ngx.req.set_body_data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqset_body_file"&gt;ngx.req.set_body_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqappend_body"&gt;ngx.req.append_body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqfinish_body"&gt;ngx.req.finish_body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxredirect"&gt;ngx.redirect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxheaders_sent"&gt;ngx.headers_sent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxlog"&gt;ngx.log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxflush"&gt;ngx.flush&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxeof"&gt;ngx.eof&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsleep"&gt;ngx.sleep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxescape_uri"&gt;ngx.escape_uri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxunescape_uri"&gt;ngx.unescape_uri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxencode_args"&gt;ngx.encode_args&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxdecode_args"&gt;ngx.decode_args&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxencode_base64"&gt;ngx.encode_base64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxdecode_base64"&gt;ngx.decode_base64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxcrc32_short"&gt;ngx.crc32_short&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxcrc32_long"&gt;ngx.crc32_long&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxhmac_sha1"&gt;ngx.hmac_sha1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxmd5"&gt;ngx.md5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxmd5_bin"&gt;ngx.md5_bin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsha1_bin"&gt;ngx.sha1_bin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxquote_sql_str"&gt;ngx.quote_sql_str&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxtoday"&gt;ngx.today&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxtime"&gt;ngx.time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxnow"&gt;ngx.now&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxupdate_time"&gt;ngx.update_time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxlocaltime"&gt;ngx.localtime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxutctime"&gt;ngx.utctime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxcookie_time"&gt;ngx.cookie_time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxhttp_time"&gt;ngx.http_time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxparse_http_time"&gt;ngx.parse_http_time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxis_subrequest"&gt;ngx.is_subrequest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxrefind"&gt;ngx.re.find&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxregmatch"&gt;ngx.re.gmatch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxresub"&gt;ngx.re.sub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxregsub"&gt;ngx.re.gsub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictget"&gt;ngx.shared.DICT.get&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictget_stale"&gt;ngx.shared.DICT.get_stale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictset"&gt;ngx.shared.DICT.set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictsafe_set"&gt;ngx.shared.DICT.safe_set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictadd"&gt;ngx.shared.DICT.add&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictsafe_add"&gt;ngx.shared.DICT.safe_add&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictreplace"&gt;ngx.shared.DICT.replace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictdelete"&gt;ngx.shared.DICT.delete&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictincr"&gt;ngx.shared.DICT.incr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictlpush"&gt;ngx.shared.DICT.lpush&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictrpush"&gt;ngx.shared.DICT.rpush&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictlpop"&gt;ngx.shared.DICT.lpop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictrpop"&gt;ngx.shared.DICT.rpop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictllen"&gt;ngx.shared.DICT.llen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictttl"&gt;ngx.shared.DICT.ttl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictexpire"&gt;ngx.shared.DICT.expire&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictflush_all"&gt;ngx.shared.DICT.flush_all&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictflush_expired"&gt;ngx.shared.DICT.flush_expired&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictget_keys"&gt;ngx.shared.DICT.get_keys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictcapacity"&gt;ngx.shared.DICT.capacity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictfree_space"&gt;ngx.shared.DICT.free_space&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsocketudp"&gt;ngx.socket.udp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsocksetpeername"&gt;udpsock:setpeername&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsocksend"&gt;udpsock:send&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsockreceive"&gt;udpsock:receive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsockclose"&gt;udpsock:close&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsocksettimeout"&gt;udpsock:settimeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsocketstream"&gt;ngx.socket.stream&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockconnect"&gt;tcpsock:connect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksslhandshake"&gt;tcpsock:sslhandshake&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksend"&gt;tcpsock:send&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockreceive"&gt;tcpsock:receive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockreceiveany"&gt;tcpsock:receiveany&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockreceiveuntil"&gt;tcpsock:receiveuntil&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockclose"&gt;tcpsock:close&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksettimeout"&gt;tcpsock:settimeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksettimeouts"&gt;tcpsock:settimeouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksetoption"&gt;tcpsock:setoption&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksetkeepalive"&gt;tcpsock:setkeepalive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockgetreusedtimes"&gt;tcpsock:getreusedtimes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsocketconnect"&gt;ngx.socket.connect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxget_phase"&gt;ngx.get_phase&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxthreadspawn"&gt;ngx.thread.spawn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxthreadwait"&gt;ngx.thread.wait&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxthreadkill"&gt;ngx.thread.kill&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxon_abort"&gt;ngx.on_abort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxtimerevery"&gt;ngx.timer.every&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxtimerrunning_count"&gt;ngx.timer.running_count&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxtimerpending_count"&gt;ngx.timer.pending_count&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxconfigsubsystem"&gt;ngx.config.subsystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxconfigdebug"&gt;ngx.config.debug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxconfigprefix"&gt;ngx.config.prefix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxconfignginx_version"&gt;ngx.config.nginx_version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxconfignginx_configure"&gt;ngx.config.nginx_configure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxconfigngx_lua_version"&gt;ngx.config.ngx_lua_version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxworkerexiting"&gt;ngx.worker.exiting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxworkerpid"&gt;ngx.worker.pid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxworkercount"&gt;ngx.worker.count&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxworkerid"&gt;ngx.worker.id&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsemaphore"&gt;ngx.semaphore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxbalancer"&gt;ngx.balancer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxssl"&gt;ngx.ssl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxocsp"&gt;ngx.ocsp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ndkset_vardirective"&gt;ndk.set_var.DIRECTIVE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coroutinecreate"&gt;coroutine.create&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coroutineresume"&gt;coroutine.resume&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coroutineyield"&gt;coroutine.yield&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coroutinewrap"&gt;coroutine.wrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coroutinerunning"&gt;coroutine.running&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coroutinestatus"&gt;coroutine.status&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The various &lt;code&gt;*_by_lua&lt;/code&gt;, &lt;code&gt;*_by_lua_block&lt;/code&gt; and &lt;code&gt;*_by_lua_file&lt;/code&gt; configuration directives serve as gateways to the Lua API within the &lt;code&gt;nginx.conf&lt;/code&gt; file. The Nginx Lua API described below can only be called within the user Lua code run in the context of these configuration directives.&lt;/p&gt;
&lt;p&gt;The API is exposed to Lua in the form of two standard packages &lt;code&gt;ngx&lt;/code&gt; and &lt;code&gt;ndk&lt;/code&gt;. These packages are in the default global scope within ngx_lua and are always available within ngx_lua directives.&lt;/p&gt;
&lt;p&gt;The packages can be introduced into external Lua modules like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; say &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;say&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; _M &lt;span class="pl-k"&gt;=&lt;/span&gt; {}

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;_M.foo&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;)
     &lt;span class="pl-c1"&gt;say&lt;/span&gt;(a)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;return&lt;/span&gt; _M&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use of the &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-package.seeall" rel="nofollow"&gt;package.seeall&lt;/a&gt; flag is strongly discouraged due to its various bad side-effects.&lt;/p&gt;
&lt;p&gt;It is also possible to directly require the packages in external Lua modules:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; ngx &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ngx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; ndk &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ndk&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The ability to require these packages was introduced in the &lt;code&gt;v0.2.1rc19&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;Network I/O operations in user code should only be done through the Nginx Lua API calls as the Nginx event loop may be blocked and performance drop off dramatically otherwise. Disk operations with relatively small amount of data can be done using the standard Lua &lt;code&gt;io&lt;/code&gt; library but huge file reading and writing should be avoided wherever possible as they may block the Nginx process significantly. Delegating all network and disk I/O operations to Nginx's subrequests (via the &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; method and similar) is strongly recommended for maximum performance.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxarg" class="anchor" aria-hidden="true" href="#ngxarg"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.arg&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;val = ngx.arg[index]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, body_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When this is used in the context of the &lt;a href="#set_by_lua"&gt;set_by_lua*&lt;/a&gt; directives, this table is read-only and holds the input arguments to the config directives:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; value &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;arg&lt;/span&gt;[n]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here is an example&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$a&lt;/span&gt; &lt;span class="pl-s"&gt;32&lt;/span&gt;;
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$b&lt;/span&gt; &lt;span class="pl-s"&gt;56&lt;/span&gt;;

     &lt;span class="pl-k"&gt;set_by_lua&lt;/span&gt; &lt;span class="pl-smi"&gt;$sum&lt;/span&gt;
         '&lt;span class="pl-c1"&gt;return&lt;/span&gt; tonumber(ngx.arg[1]) + tonumber(ngx.arg[2])&lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         &lt;span class="pl-smi"&gt;$a&lt;/span&gt; &lt;span class="pl-smi"&gt;$b&lt;/span&gt;;&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     echo &lt;span class="pl-smi"&gt;$sum&lt;/span&gt;;&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;that writes out &lt;code&gt;88&lt;/code&gt;, the sum of &lt;code&gt;32&lt;/code&gt; and &lt;code&gt;56&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When this table is used in the context of &lt;a href="#body_filter_by_lua"&gt;body_filter_by_lua*&lt;/a&gt;, the first element holds the input data chunk to the output filter code and the second element holds the boolean flag for the "eof" flag indicating the end of the whole output data stream.&lt;/p&gt;
&lt;p&gt;The data chunk and "eof" flag passed to the downstream Nginx output filters can also be overridden by assigning values directly to the corresponding table elements. When setting &lt;code&gt;nil&lt;/code&gt; or an empty Lua string value to &lt;code&gt;ngx.arg[1]&lt;/code&gt;, no data chunk will be passed to the downstream Nginx output filters at all.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxvarvariable" class="anchor" aria-hidden="true" href="#ngxvarvariable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.var.VARIABLE&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.var.VAR_NAME&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Read and write Nginx variable values.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.var.some_nginx_variable_name
 ngx.var.&lt;span class="pl-k"&gt;some_nginx_variable_name&lt;/span&gt; = value&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that only already defined Nginx variables can be written to.
For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$my_var&lt;/span&gt; &lt;span class="pl-s"&gt;''&lt;/span&gt;; &lt;span class="pl-c"&gt;# this line is required to create $my_var at config time&lt;/span&gt;
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.var.&lt;span class="pl-k"&gt;my_var&lt;/span&gt; = &lt;span class="pl-s"&gt;123&lt;/span&gt;;
         ...
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is, Nginx variables cannot be created on-the-fly.&lt;/p&gt;
&lt;p&gt;Some special Nginx variables like &lt;code&gt;$args&lt;/code&gt; and &lt;code&gt;$limit_rate&lt;/code&gt; can be assigned a value,
many others are not, like &lt;code&gt;$query_string&lt;/code&gt;, &lt;code&gt;$arg_PARAMETER&lt;/code&gt;, and &lt;code&gt;$http_NAME&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Nginx regex group capturing variables &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, &lt;code&gt;$3&lt;/code&gt;, and etc, can be read by this
interface as well, by writing &lt;code&gt;ngx.var[1]&lt;/code&gt;, &lt;code&gt;ngx.var[2]&lt;/code&gt;, &lt;code&gt;ngx.var[3]&lt;/code&gt;, and etc.&lt;/p&gt;
&lt;p&gt;Setting &lt;code&gt;ngx.var.Foo&lt;/code&gt; to a &lt;code&gt;nil&lt;/code&gt; value will unset the &lt;code&gt;$Foo&lt;/code&gt; Nginx variable.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;var&lt;/span&gt;.&lt;span class="pl-smi"&gt;args&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;CAUTION&lt;/strong&gt; When reading from an Nginx variable, Nginx will allocate memory in the per-request memory pool which is freed only at request termination. So when you need to read from an Nginx variable repeatedly in your Lua code, cache the Nginx variable value to your own Lua variable, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; val &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;var&lt;/span&gt;.&lt;span class="pl-smi"&gt;some_var&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt;- use the val repeatedly later&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to prevent (temporary) memory leaking within the current request's lifetime. Another way of caching the result is to use the &lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt; table.&lt;/p&gt;
&lt;p&gt;Undefined Nginx variables are evaluated to &lt;code&gt;nil&lt;/code&gt; while uninitialized (but defined) Nginx variables are evaluated to an empty Lua string.&lt;/p&gt;
&lt;p&gt;This API requires a relatively expensive metamethod call and it is recommended to avoid using it on hot code paths.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-core-constants" class="anchor" aria-hidden="true" href="#core-constants"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core constants&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, *log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;   ngx.&lt;span class="pl-c1"&gt;OK&lt;/span&gt; (&lt;span class="pl-c1"&gt;0&lt;/span&gt;)
   ngx.&lt;span class="pl-c1"&gt;ERROR&lt;/span&gt; (&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;)
   ngx.&lt;span class="pl-c1"&gt;AGAIN&lt;/span&gt; (&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;)
   ngx.&lt;span class="pl-c1"&gt;DONE&lt;/span&gt; (&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;)
   ngx.&lt;span class="pl-c1"&gt;DECLINED&lt;/span&gt; (&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that only three of these constants are utilized by the &lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt; (i.e., &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt; accepts &lt;code&gt;ngx.OK&lt;/code&gt;, &lt;code&gt;ngx.ERROR&lt;/code&gt;, and &lt;code&gt;ngx.DECLINED&lt;/code&gt; as input).&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;   ngx.&lt;span class="pl-smi"&gt;null&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;ngx.null&lt;/code&gt; constant is a &lt;code&gt;NULL&lt;/code&gt; light userdata usually used to represent nil values in Lua tables etc and is similar to the &lt;a href="http://www.kyne.com.au/~mark/software/lua-cjson.php" rel="nofollow"&gt;lua-cjson&lt;/a&gt; library's &lt;code&gt;cjson.null&lt;/code&gt; constant. This constant was first introduced in the &lt;code&gt;v0.5.0rc5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;ngx.DECLINED&lt;/code&gt; constant was first introduced in the &lt;code&gt;v0.5.0rc19&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-http-method-constants" class="anchor" aria-hidden="true" href="#http-method-constants"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTTP method constants&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  ngx.HTTP_GET
  ngx.HTTP_HEAD
  ngx.HTTP_PUT
  ngx.HTTP_POST
  ngx.HTTP_DELETE
  ngx.HTTP_OPTIONS   (added in the v0.5.0rc24 release)
  ngx.HTTP_MKCOL     (added in the v0.8.2 release)
  ngx.HTTP_COPY      (added in the v0.8.2 release)
  ngx.HTTP_MOVE      (added in the v0.8.2 release)
  ngx.HTTP_PROPFIND  (added in the v0.8.2 release)
  ngx.HTTP_PROPPATCH (added in the v0.8.2 release)
  ngx.HTTP_LOCK      (added in the v0.8.2 release)
  ngx.HTTP_UNLOCK    (added in the v0.8.2 release)
  ngx.HTTP_PATCH     (added in the v0.8.2 release)
  ngx.HTTP_TRACE     (added in the v0.8.2 release)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These constants are usually used in &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt; method calls.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-http-status-constants" class="anchor" aria-hidden="true" href="#http-status-constants"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTTP status constants&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt;   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_CONTINUE (100) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_SWITCHING_PROTOCOLS (101) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_OK (200)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_CREATED (201)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_ACCEPTED (202) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_NO_CONTENT (204) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_PARTIAL_CONTENT (206) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_SPECIAL_RESPONSE (300)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_MOVED_PERMANENTLY (301)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_MOVED_TEMPORARILY (302)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_SEE_OTHER (303)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_NOT_MODIFIED (304)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_TEMPORARY_REDIRECT (307) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_PERMANENT_REDIRECT (308)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_BAD_REQUEST (400)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_UNAUTHORIZED (401)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_PAYMENT_REQUIRED (402) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_FORBIDDEN (403)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_NOT_FOUND (404)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_NOT_ALLOWED (405)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_NOT_ACCEPTABLE (406) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_REQUEST_TIMEOUT (408) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_CONFLICT (409) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_GONE (410)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_UPGRADE_REQUIRED (426) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_TOO_MANY_REQUESTS (429) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_CLOSE (444) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_ILLEGAL (451) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_INTERNAL_SERVER_ERROR (500)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_METHOD_NOT_IMPLEMENTED (501)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_BAD_GATEWAY (502) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_SERVICE_UNAVAILABLE (503)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_GATEWAY_TIMEOUT (504) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.3.1rc38 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_VERSION_NOT_SUPPORTED (505) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_INSUFFICIENT_STORAGE (507) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-nginx-log-level-constants" class="anchor" aria-hidden="true" href="#nginx-log-level-constants"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nginx log level constants&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;   ngx.&lt;span class="pl-smi"&gt;STDERR&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;EMERG&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;ALERT&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;CRIT&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;WARN&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;NOTICE&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;INFO&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;DEBUG&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These constants are usually used by the &lt;a href="#ngxlog"&gt;ngx.log&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-print" class="anchor" aria-hidden="true" href="#print"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;print&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;print(...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Writes argument values into the Nginx &lt;code&gt;error.log&lt;/code&gt; file with the &lt;code&gt;ngx.NOTICE&lt;/code&gt; log level.&lt;/p&gt;
&lt;p&gt;It is equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;NOTICE&lt;/span&gt;, &lt;span class="pl-c1"&gt;...&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lua &lt;code&gt;nil&lt;/code&gt; arguments are accepted and result in literal &lt;code&gt;"nil"&lt;/code&gt; strings while Lua booleans result in literal &lt;code&gt;"true"&lt;/code&gt; or &lt;code&gt;"false"&lt;/code&gt; strings. And the &lt;code&gt;ngx.null&lt;/code&gt; constant will yield the &lt;code&gt;"null"&lt;/code&gt; string output.&lt;/p&gt;
&lt;p&gt;There is a hard coded &lt;code&gt;2048&lt;/code&gt; byte limitation on error message lengths in the Nginx core. This limit includes trailing newlines and leading time stamps. If the message size exceeds this limit, Nginx will truncate the message text accordingly. This limit can be manually modified by editing the &lt;code&gt;NGX_MAX_ERROR_STR&lt;/code&gt; macro definition in the &lt;code&gt;src/core/ngx_log.h&lt;/code&gt; file in the Nginx source tree.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxctx" class="anchor" aria-hidden="true" href="#ngxctx"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.ctx&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This table can be used to store per-request Lua context data and has a life time identical to the current request (as with the Nginx variables).&lt;/p&gt;
&lt;p&gt;Consider the following example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;rewrite_by_lua_block&lt;/span&gt; {
         ngx.ctx.&lt;span class="pl-k"&gt;foo&lt;/span&gt; = 76
     }
     &lt;span class="pl-k"&gt;access_by_lua_block&lt;/span&gt; {
         ngx.ctx.&lt;span class="pl-k"&gt;foo&lt;/span&gt; = ngx.ctx.foo + 3
     }
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.say(ngx.ctx.foo)
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then &lt;code&gt;GET /test&lt;/code&gt; will yield the output&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; 79&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is, the &lt;code&gt;ngx.ctx.foo&lt;/code&gt; entry persists across the rewrite, access, and content phases of a request.&lt;/p&gt;
&lt;p&gt;Every request, including subrequests, has its own copy of the table. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/sub &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.say("&lt;span class="pl-k"&gt;sub&lt;/span&gt; pre: &lt;span class="pl-s"&gt;", ngx.ctx.blah)&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.ctx.blah = 32&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.say("&lt;/span&gt;sub post: &lt;span class="pl-s"&gt;", ngx.ctx.blah)&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt; location /main {&lt;/span&gt;
&lt;span class="pl-s"&gt;     content_by_lua_block {&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.ctx.blah = 73&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.say("&lt;/span&gt;main pre: &lt;span class="pl-s"&gt;", ngx.ctx.blah)&lt;/span&gt;
&lt;span class="pl-s"&gt;         local res = ngx.location.capture("&lt;/span&gt;/sub&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.print(res.body)&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.say("&lt;/span&gt;main post: &lt;span class="pl-s"&gt;", ngx.ctx.blah)&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then &lt;code&gt;GET /main&lt;/code&gt; will give the output&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; main pre: 73
 sub pre: nil
 sub post: 32
 main post: 73&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here, modification of the &lt;code&gt;ngx.ctx.blah&lt;/code&gt; entry in the subrequest does not affect the one in the parent request. This is because they have two separate versions of &lt;code&gt;ngx.ctx.blah&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Internal redirection will destroy the original request &lt;code&gt;ngx.ctx&lt;/code&gt; data (if any) and the new request will have an empty &lt;code&gt;ngx.ctx&lt;/code&gt; table. For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/new &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.say(ngx.ctx.foo)
     }
 }

 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/orig &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.ctx.&lt;span class="pl-k"&gt;foo&lt;/span&gt; = &lt;span class="pl-s"&gt;"hello"&lt;/span&gt;
         ngx.exec("/new")
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then &lt;code&gt;GET /orig&lt;/code&gt; will give&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; nil&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;rather than the original &lt;code&gt;"hello"&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;Arbitrary data values, including Lua closures and nested tables, can be inserted into this "magic" table. It also allows the registration of custom meta methods.&lt;/p&gt;
&lt;p&gt;Overriding &lt;code&gt;ngx.ctx&lt;/code&gt; with a new Lua table is also supported, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { foo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;32&lt;/span&gt;, bar &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;54&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When being used in the context of &lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua*&lt;/a&gt;, this table just has the same lifetime of the current Lua handler.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;ngx.ctx&lt;/code&gt; lookup requires relatively expensive metamethod calls and it is much slower than explicitly passing per-request data along by your own function arguments. So do not abuse this API for saving your own function arguments because it usually has quite some performance impact.&lt;/p&gt;
&lt;p&gt;Because of the metamethod magic, never "local" the &lt;code&gt;ngx.ctx&lt;/code&gt; table outside your Lua function scope on the Lua module level due to &lt;a href="#data-sharing-within-an-nginx-worker"&gt;worker-level data sharing&lt;/a&gt;. For example, the following is bad:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; mymodule.lua&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; _M &lt;span class="pl-k"&gt;=&lt;/span&gt; {}

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; the following line is bad since ngx.ctx is a per-request&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; data while this &amp;lt;code&amp;gt;ctx&amp;lt;/code&amp;gt; variable is on the Lua module level&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; and thus is per-nginx-worker.&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; ctx &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;ctx&lt;/span&gt;

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;_M.main&lt;/span&gt;()
     ctx.&lt;span class="pl-smi"&gt;foo&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;return&lt;/span&gt; _M&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use the following instead:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; mymodule.lua&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; _M &lt;span class="pl-k"&gt;=&lt;/span&gt; {}

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;_M.main&lt;/span&gt;(&lt;span class="pl-smi"&gt;ctx&lt;/span&gt;)
     ctx.&lt;span class="pl-smi"&gt;foo&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;return&lt;/span&gt; _M&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is, let the caller pass the &lt;code&gt;ctx&lt;/code&gt; table explicitly via a function argument.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxlocationcapture" class="anchor" aria-hidden="true" href="#ngxlocationcapture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.location.capture&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;res = ngx.location.capture(uri, options?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Issues a synchronous but still non-blocking &lt;em&gt;Nginx Subrequest&lt;/em&gt; using &lt;code&gt;uri&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Nginx's subrequests provide a powerful way to make non-blocking internal requests to other locations configured with disk file directory or &lt;em&gt;any&lt;/em&gt; other Nginx C modules like &lt;code&gt;ngx_proxy&lt;/code&gt;, &lt;code&gt;ngx_fastcgi&lt;/code&gt;, &lt;code&gt;ngx_memc&lt;/code&gt;,
&lt;code&gt;ngx_postgres&lt;/code&gt;, &lt;code&gt;ngx_drizzle&lt;/code&gt;, and even ngx_lua itself and etc etc etc.&lt;/p&gt;
&lt;p&gt;Also note that subrequests just mimic the HTTP interface but there is &lt;em&gt;no&lt;/em&gt; extra HTTP/TCP traffic &lt;em&gt;nor&lt;/em&gt; IPC involved. Everything works internally, efficiently, on the C level.&lt;/p&gt;
&lt;p&gt;Subrequests are completely different from HTTP 301/302 redirection (via &lt;a href="#ngxredirect"&gt;ngx.redirect&lt;/a&gt;) and internal redirection (via &lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;You should always read the request body (by either calling &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; or configuring &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; on) before initiating a subrequest.&lt;/p&gt;
&lt;p&gt;This API function (as well as &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;) always buffers the whole response body of the subrequest in memory. Thus, you should use &lt;a href="#ngxsockettcp"&gt;cosockets&lt;/a&gt;
and streaming processing instead if you have to handle large subrequest responses.&lt;/p&gt;
&lt;p&gt;Here is a basic example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; res &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(uri)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Returns a Lua table with 4 slots: &lt;code&gt;res.status&lt;/code&gt;, &lt;code&gt;res.header&lt;/code&gt;, &lt;code&gt;res.body&lt;/code&gt;, and &lt;code&gt;res.truncated&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;res.status&lt;/code&gt; holds the response status code for the subrequest response.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;res.header&lt;/code&gt; holds all the response headers of the
subrequest and it is a normal Lua table. For multi-value response headers,
the value is a Lua (array) table that holds all the values in the order that
they appear. For instance, if the subrequest response headers contain the following
lines:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; Set-Cookie: a=3
 Set-Cookie: foo=bar
 Set-Cookie: baz=blah&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then &lt;code&gt;res.header["Set-Cookie"]&lt;/code&gt; will be evaluated to the table value
&lt;code&gt;{"a=3", "foo=bar", "baz=blah"}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;res.body&lt;/code&gt; holds the subrequest's response body data, which might be truncated. You always need to check the &lt;code&gt;res.truncated&lt;/code&gt; boolean flag to see if &lt;code&gt;res.body&lt;/code&gt; contains truncated data. The data truncation here can only be caused by those unrecoverable errors in your subrequests like the cases that the remote end aborts the connection prematurely in the middle of the response body data stream or a read timeout happens when your subrequest is receiving the response body data from the remote.&lt;/p&gt;
&lt;p&gt;URI query strings can be concatenated to URI itself, for instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; res &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo/bar?a=3&amp;amp;b=4&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Named locations like &lt;code&gt;@foo&lt;/code&gt; are not allowed due to a limitation in
the Nginx core. Use normal locations combined with the &lt;code&gt;internal&lt;/code&gt; directive to
prepare internal-only locations.&lt;/p&gt;
&lt;p&gt;An optional option table can be fed as the second
argument, which supports the options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;method&lt;/code&gt;
specify the subrequest's request method, which only accepts constants like &lt;code&gt;ngx.HTTP_POST&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;body&lt;/code&gt;
specify the subrequest's request body (string value only).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;args&lt;/code&gt;
specify the subrequest's URI query arguments (both string value and Lua tables are accepted)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctx&lt;/code&gt;
specify a Lua table to be the &lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt; table for the subrequest. It can be the current request's &lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt; table, which effectively makes the parent and its subrequest to share exactly the same context table. This option was first introduced in the &lt;code&gt;v0.3.1rc25&lt;/code&gt; release.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vars&lt;/code&gt;
take a Lua table which holds the values to set the specified Nginx variables in the subrequest as this option's value. This option was first introduced in the &lt;code&gt;v0.3.1rc31&lt;/code&gt; release.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;copy_all_vars&lt;/code&gt;
specify whether to copy over all the Nginx variable values of the current request to the subrequest in question. modifications of the Nginx variables in the subrequest will not affect the current (parent) request. This option was first introduced in the &lt;code&gt;v0.3.1rc31&lt;/code&gt; release.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;share_all_vars&lt;/code&gt;
specify whether to share all the Nginx variables of the subrequest with the current (parent) request. modifications of the Nginx variables in the subrequest will affect the current (parent) request. Enabling this option may lead to hard-to-debug issues due to bad side-effects and is considered bad and harmful. Only enable this option when you completely know what you are doing.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;always_forward_body&lt;/code&gt;
when set to true, the current (parent) request's request body will always be forwarded to the subrequest being created if the &lt;code&gt;body&lt;/code&gt; option is not specified. The request body read by either &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body()&lt;/a&gt; or &lt;a href="#lua_need_request_body"&gt;lua_need_request_body on&lt;/a&gt; will be directly forwarded to the subrequest without copying the whole request body data when creating the subrequest (no matter the request body data is buffered in memory buffers or temporary files). By default, this option is &lt;code&gt;false&lt;/code&gt; and when the &lt;code&gt;body&lt;/code&gt; option is not specified, the request body of the current (parent) request is only forwarded when the subrequest takes the &lt;code&gt;PUT&lt;/code&gt; or &lt;code&gt;POST&lt;/code&gt; request method.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Issuing a POST subrequest, for example, can be done as follows&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; res &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(
     &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo/bar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
     { method &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;HTTP_POST&lt;/span&gt;, body &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hello, world&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
 )&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See HTTP method constants methods other than POST.
The &lt;code&gt;method&lt;/code&gt; option is &lt;code&gt;ngx.HTTP_GET&lt;/code&gt; by default.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;args&lt;/code&gt; option can specify extra URI arguments, for instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo?a=1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
     { args &lt;span class="pl-k"&gt;=&lt;/span&gt; { b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, c &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; } }
 )&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;is equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo?a=1&amp;amp;b=3&amp;amp;c=%3a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;that is, this method will escape argument keys and values according to URI rules and
concatenate them together into a complete query string. The format for the Lua table passed as the &lt;code&gt;args&lt;/code&gt; argument is identical to the format used in the &lt;a href="#ngxencode_args"&gt;ngx.encode_args&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;args&lt;/code&gt; option can also take plain query strings:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo?a=1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
     { args &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b=3&amp;amp;c=%3a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
 )&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is functionally identical to the previous examples.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;share_all_vars&lt;/code&gt; option controls whether to share Nginx variables among the current request and its subrequests.
If this option is set to &lt;code&gt;true&lt;/code&gt;, then the current request and associated subrequests will share the same Nginx variable scope. Hence, changes to Nginx variables made by a subrequest will affect the current request.&lt;/p&gt;
&lt;p&gt;Care should be taken in using this option as variable scope sharing can have unexpected side effects. The &lt;code&gt;args&lt;/code&gt;, &lt;code&gt;vars&lt;/code&gt;, or &lt;code&gt;copy_all_vars&lt;/code&gt; options are generally preferable instead.&lt;/p&gt;
&lt;p&gt;This option is set to &lt;code&gt;false&lt;/code&gt; by default&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/other &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$dog&lt;/span&gt; &lt;span class="pl-s"&gt;"&lt;span class="pl-smi"&gt;$dog&lt;/span&gt; world"&lt;/span&gt;;
     &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"&lt;span class="pl-smi"&gt;$uri&lt;/span&gt; dog: &lt;span class="pl-smi"&gt;$dog&lt;/span&gt;"&lt;/span&gt;;
 }

 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/lua &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$dog&lt;/span&gt; &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;;
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;res&lt;/span&gt; = ngx.location.capture(&lt;span class="pl-s"&gt;"/other"&lt;/span&gt;,
             { &lt;span class="pl-k"&gt;share_all_vars&lt;/span&gt; =&lt;span class="pl-c1"&gt; true&lt;/span&gt; });

         ngx.print(res.body)
         ngx.say(ngx.var.uri, ": ", ngx.var.dog)
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Accessing location &lt;code&gt;/lua&lt;/code&gt; gives&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/other dog: hello world
/lua: hello world
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;copy_all_vars&lt;/code&gt; option provides a copy of the parent request's Nginx variables to subrequests when such subrequests are issued. Changes made to these variables by such subrequests will not affect the parent request or any other subrequests sharing the parent request's variables.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/other &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$dog&lt;/span&gt; &lt;span class="pl-s"&gt;"&lt;span class="pl-smi"&gt;$dog&lt;/span&gt; world"&lt;/span&gt;;
     &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"&lt;span class="pl-smi"&gt;$uri&lt;/span&gt; dog: &lt;span class="pl-smi"&gt;$dog&lt;/span&gt;"&lt;/span&gt;;
 }

 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/lua &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$dog&lt;/span&gt; &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;;
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;res&lt;/span&gt; = ngx.location.capture(&lt;span class="pl-s"&gt;"/other"&lt;/span&gt;,
             { &lt;span class="pl-k"&gt;copy_all_vars&lt;/span&gt; =&lt;span class="pl-c1"&gt; true&lt;/span&gt; });

         ngx.print(res.body)
         ngx.say(ngx.var.uri, ": ", ngx.var.dog)
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Request &lt;code&gt;GET /lua&lt;/code&gt; will give the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/other dog: hello world
/lua: hello
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that if both &lt;code&gt;share_all_vars&lt;/code&gt; and &lt;code&gt;copy_all_vars&lt;/code&gt; are set to true, then &lt;code&gt;share_all_vars&lt;/code&gt; takes precedence.&lt;/p&gt;
&lt;p&gt;In addition to the two settings above, it is possible to specify
values for variables in the subrequest using the &lt;code&gt;vars&lt;/code&gt; option. These
variables are set after the sharing or copying of variables has been
evaluated, and provides a more efficient method of passing specific
values to a subrequest over encoding them as URL arguments and
unescaping them in the Nginx config file.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/other &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.say("&lt;span class="pl-k"&gt;dog&lt;/span&gt; = &lt;span class="pl-s"&gt;", ngx.var.dog)&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.say("&lt;/span&gt;cat = &lt;span class="pl-s"&gt;", ngx.var.cat)&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt; location /lua {&lt;/span&gt;
&lt;span class="pl-s"&gt;     set &lt;span class="pl-smi"&gt;$dog&lt;/span&gt; '';&lt;/span&gt;
&lt;span class="pl-s"&gt;     set &lt;span class="pl-smi"&gt;$cat&lt;/span&gt; '';&lt;/span&gt;
&lt;span class="pl-s"&gt;     content_by_lua_block {&lt;/span&gt;
&lt;span class="pl-s"&gt;         res = ngx.location.capture("&lt;/span&gt;/other&lt;span class="pl-s"&gt;",&lt;/span&gt;
&lt;span class="pl-s"&gt;             { vars = { dog = "&lt;/span&gt;hello&lt;span class="pl-s"&gt;", cat = 32 }});&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.print(res.body)&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Accessing &lt;code&gt;/lua&lt;/code&gt; will yield the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dog = hello
cat = 32
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;ctx&lt;/code&gt; option can be used to specify a custom Lua table to serve as the &lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt; table for the subrequest.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/sub &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.ctx.&lt;span class="pl-k"&gt;foo&lt;/span&gt; = &lt;span class="pl-s"&gt;"bar"&lt;/span&gt;;
     }
 }
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/lua &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; ctx = {}
         &lt;span class="pl-k"&gt;res&lt;/span&gt; = ngx.location.capture(&lt;span class="pl-s"&gt;"/sub"&lt;/span&gt;, { ctx = ctx })

         ngx.say(ctx.foo);
         ngx.say(ngx.ctx.foo);
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then request &lt;code&gt;GET /lua&lt;/code&gt; gives&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bar
nil
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is also possible to use this &lt;code&gt;ctx&lt;/code&gt; option to share the same &lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt; table between the current (parent) request and the subrequest:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/sub &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.ctx.&lt;span class="pl-k"&gt;foo&lt;/span&gt; = &lt;span class="pl-s"&gt;"bar"&lt;/span&gt;;
     }
 }
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/lua &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;res&lt;/span&gt; = ngx.location.capture(&lt;span class="pl-s"&gt;"/sub"&lt;/span&gt;, { ctx = ngx.ctx })
         ngx.say(ngx.ctx.foo);
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Request &lt;code&gt;GET /lua&lt;/code&gt; yields the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that subrequests issued by &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; inherit all the
request headers of the current request by default and that this may have unexpected side effects on the
subrequest responses. For example, when using the standard &lt;code&gt;ngx_proxy&lt;/code&gt; module to serve
subrequests, an "Accept-Encoding: gzip" header in the main request may result
in gzipped responses that cannot be handled properly in Lua code. Original request headers should be ignored by setting
&lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_request_headers" rel="nofollow"&gt;proxy_pass_request_headers&lt;/a&gt; to &lt;code&gt;off&lt;/code&gt; in subrequest locations.&lt;/p&gt;
&lt;p&gt;When the &lt;code&gt;body&lt;/code&gt; option is not specified and the &lt;code&gt;always_forward_body&lt;/code&gt; option is false (the default value), the &lt;code&gt;POST&lt;/code&gt; and &lt;code&gt;PUT&lt;/code&gt; subrequests will inherit the request bodies of the parent request (if any).&lt;/p&gt;
&lt;p&gt;There is a hard-coded upper limit on the number of concurrent subrequests possible for every main request. In older versions of Nginx, the limit was &lt;code&gt;50&lt;/code&gt; concurrent subrequests and in more recent versions, Nginx &lt;code&gt;1.1.x&lt;/code&gt; onwards, this was increased to &lt;code&gt;200&lt;/code&gt; concurrent subrequests. When this limit is exceeded, the following error message is added to the &lt;code&gt;error.log&lt;/code&gt; file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[error] 13983#0: *1 subrequests cycle while processing "/uri"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The limit can be manually modified if required by editing the definition of the &lt;code&gt;NGX_HTTP_MAX_SUBREQUESTS&lt;/code&gt; macro in the &lt;code&gt;nginx/src/http/ngx_http_request.h&lt;/code&gt; file in the Nginx source tree.&lt;/p&gt;
&lt;p&gt;Please also refer to restrictions on capturing locations configured by &lt;a href="#locations-configured-by-subrequest-directives-of-other-modules"&gt;subrequest directives of other modules&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxlocationcapture_multi" class="anchor" aria-hidden="true" href="#ngxlocationcapture_multi"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.location.capture_multi&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;res1, res2, ... = ngx.location.capture_multi({ {uri, options?}, {uri, options?}, ... })&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Just like &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt;, but supports multiple subrequests running in parallel.&lt;/p&gt;
&lt;p&gt;This function issues several parallel subrequests specified by the input table and returns their results in the same order. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; res1, res2, res3 &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture_multi&lt;/span&gt;{
     { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, { args &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a=3&amp;amp;b=4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; } },
     { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; },
     { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, { method &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;HTTP_POST&lt;/span&gt;, body &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; } },
 }

 &lt;span class="pl-k"&gt;if&lt;/span&gt; res1.&lt;span class="pl-smi"&gt;status&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;HTTP_OK&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c1"&gt;...&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;if&lt;/span&gt; res2.&lt;span class="pl-smi"&gt;body&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BLAH&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c1"&gt;...&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This function will not return until all the subrequests terminate.
The total latency is the longest latency of the individual subrequests rather than the sum.&lt;/p&gt;
&lt;p&gt;Lua tables can be used for both requests and responses when the number of subrequests to be issued is not known in advance:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; construct the requests table&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; reqs &lt;span class="pl-k"&gt;=&lt;/span&gt; {}
 &lt;span class="pl-c1"&gt;table.insert&lt;/span&gt;(reqs, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/mysql&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; })
 &lt;span class="pl-c1"&gt;table.insert&lt;/span&gt;(reqs, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/postgres&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; })
 &lt;span class="pl-c1"&gt;table.insert&lt;/span&gt;(reqs, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/redis&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; })
 &lt;span class="pl-c1"&gt;table.insert&lt;/span&gt;(reqs, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/memcached&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; })

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; issue all the requests at once and wait until they all return&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; resps &lt;span class="pl-k"&gt;=&lt;/span&gt; { ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture_multi&lt;/span&gt;(reqs) }

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; loop over the responses table&lt;/span&gt;
 &lt;span class="pl-k"&gt;for&lt;/span&gt; i, resp &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;ipairs&lt;/span&gt;(resps) &lt;span class="pl-k"&gt;do&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; process the response table "resp"&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; function is just a special form
of this function. Logically speaking, the &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; can be implemented like this&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-smi"&gt;capture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;
     &lt;span class="pl-k"&gt;function&lt;/span&gt; (&lt;span class="pl-smi"&gt;uri&lt;/span&gt;, &lt;span class="pl-smi"&gt;args&lt;/span&gt;)
         &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture_multi&lt;/span&gt;({ {uri, args} })
     &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please also refer to restrictions on capturing locations configured by &lt;a href="#locations-configured-by-subrequest-directives-of-other-modules"&gt;subrequest directives of other modules&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxstatus" class="anchor" aria-hidden="true" href="#ngxstatus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.status&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Read and write the current request's response status. This should be called
before sending out the response headers.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;status&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;HTTP_CREATED&lt;/span&gt;
 status &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;status&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Setting &lt;code&gt;ngx.status&lt;/code&gt; after the response header is sent out has no effect but leaving an error message in your Nginx's error log file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;attempt to set ngx.status after sending out response headers
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxheaderheader" class="anchor" aria-hidden="true" href="#ngxheaderheader"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.header.HEADER&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.header.HEADER = VALUE&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;value = ngx.header.HEADER&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Set, add to, or clear the current request's &lt;code&gt;HEADER&lt;/code&gt; response header that is to be sent.&lt;/p&gt;
&lt;p&gt;Underscores (&lt;code&gt;_&lt;/code&gt;) in the header names will be replaced by hyphens (&lt;code&gt;-&lt;/code&gt;) by default. This transformation can be turned off via the &lt;a href="#lua_transform_underscores_in_response_headers"&gt;lua_transform_underscores_in_response_headers&lt;/a&gt; directive.&lt;/p&gt;
&lt;p&gt;The header names are matched case-insensitively.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; equivalent to ngx.header["Content-Type"] = 'text/plain'&lt;/span&gt;
 ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;.&lt;span class="pl-smi"&gt;content_type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;text/plain&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;

 ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;X-My-Header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;blah blah&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Multi-value headers can be set this way:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Set-Cookie&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a=32; path=/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b=4; path=/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will yield&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; Set-Cookie: a=32&lt;span class="pl-k"&gt;;&lt;/span&gt; path=/
 Set-Cookie: b=4&lt;span class="pl-k"&gt;;&lt;/span&gt; path=/&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;in the response headers.&lt;/p&gt;
&lt;p&gt;Only Lua tables are accepted (Only the last element in the table will take effect for standard headers such as &lt;code&gt;Content-Type&lt;/code&gt; that only accept a single value).&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;.&lt;span class="pl-smi"&gt;content_type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;is equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;.&lt;span class="pl-smi"&gt;content_type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Setting a slot to &lt;code&gt;nil&lt;/code&gt; effectively removes it from the response headers:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;X-My-Header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The same applies to assigning an empty table:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;X-My-Header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; {};&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Setting &lt;code&gt;ngx.header.HEADER&lt;/code&gt; after sending out response headers (either explicitly with &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt; or implicitly with &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; and similar) will log an error message.&lt;/p&gt;
&lt;p&gt;Reading &lt;code&gt;ngx.header.HEADER&lt;/code&gt; will return the value of the response header named &lt;code&gt;HEADER&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Underscores (&lt;code&gt;_&lt;/code&gt;) in the header names will also be replaced by dashes (&lt;code&gt;-&lt;/code&gt;) and the header names will be matched case-insensitively. If the response header is not present at all, &lt;code&gt;nil&lt;/code&gt; will be returned.&lt;/p&gt;
&lt;p&gt;This is particularly useful in the context of &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua*&lt;/a&gt;, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$footer&lt;/span&gt; &lt;span class="pl-s"&gt;''&lt;/span&gt;;

     &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://some-backend;

     &lt;span class="pl-k"&gt;header_filter_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;if&lt;/span&gt; ngx.header[&lt;span class="pl-s"&gt;"X-My-Header"&lt;/span&gt;] == &lt;span class="pl-s"&gt;"blah"&lt;/span&gt; then
             ngx.var.&lt;span class="pl-k"&gt;footer&lt;/span&gt; = &lt;span class="pl-s"&gt;"some value"&lt;/span&gt;
         &lt;span class="pl-k"&gt;end&lt;/span&gt;
     }

     &lt;span class="pl-k"&gt;echo_after_body&lt;/span&gt; &lt;span class="pl-smi"&gt;$footer&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For multi-value headers, all of the values of header will be collected in order and returned as a Lua table. For example, response headers&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Foo: bar
Foo: baz
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;will result in&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to be returned when reading &lt;code&gt;ngx.header.Foo&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that &lt;code&gt;ngx.header&lt;/code&gt; is not a normal Lua table and as such, it is not possible to iterate through it using the Lua &lt;code&gt;ipairs&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;Note: &lt;code&gt;HEADER&lt;/code&gt; and &lt;code&gt;VALUE&lt;/code&gt; will be truncated if they
contain the &lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\n&lt;/code&gt; characters. The truncated values
will contain all characters up to (and excluding) the first occurrence of
&lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\n&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For reading &lt;em&gt;request&lt;/em&gt; headers, use the &lt;a href="#ngxreqget_headers"&gt;ngx.req.get_headers&lt;/a&gt; function instead.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxrespget_headers" class="anchor" aria-hidden="true" href="#ngxrespget_headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.resp.get_headers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;headers, err = ngx.resp.get_headers(max_headers?, raw?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, balancer_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a Lua table holding all the current response headers for the current request.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; h, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;resp&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_headers&lt;/span&gt;()

 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;truncated&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one can choose to ignore or reject the current response here&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;for&lt;/span&gt; k, v &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;pairs&lt;/span&gt;(h) &lt;span class="pl-k"&gt;do&lt;/span&gt;
     &lt;span class="pl-c1"&gt;...&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This function has the same signature as &lt;a href="#ngxreqget_headers"&gt;ngx.req.get_headers&lt;/a&gt; except getting response headers instead of request headers.&lt;/p&gt;
&lt;p&gt;Note that a maximum of 100 response headers are parsed by default (including those with the same name) and that additional response headers are silently discarded to guard against potential denial of service attacks. Since &lt;code&gt;v0.10.13&lt;/code&gt;, when the limit is exceeded, it will return a second value which is the string &lt;code&gt;"truncated"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.9.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqis_internal" class="anchor" aria-hidden="true" href="#ngxreqis_internal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.is_internal&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;is_internal = ngx.req.is_internal()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a boolean indicating whether the current request is an "internal request", i.e.,
a request initiated from inside the current Nginx server instead of from the client side.&lt;/p&gt;
&lt;p&gt;Subrequests are all internal requests and so are requests after internal redirects.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.9.20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqstart_time" class="anchor" aria-hidden="true" href="#ngxreqstart_time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.start_time&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;secs = ngx.req.start_time()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a floating-point number representing the timestamp (including milliseconds as the decimal part) when the current request was created.&lt;/p&gt;
&lt;p&gt;The following example emulates the &lt;code&gt;$request_time&lt;/code&gt; variable value (provided by &lt;a href="http://nginx.org/en/docs/http/ngx_http_log_module.html" rel="nofollow"&gt;ngx_http_log_module&lt;/a&gt;) in pure Lua:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; request_time &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;now&lt;/span&gt;() &lt;span class="pl-k"&gt;-&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;start_time&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.7.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxnow"&gt;ngx.now&lt;/a&gt; and &lt;a href="#ngxupdate_time"&gt;ngx.update_time&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqhttp_version" class="anchor" aria-hidden="true" href="#ngxreqhttp_version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.http_version&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;num = ngx.req.http_version()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the HTTP version number for the current request as a Lua number.&lt;/p&gt;
&lt;p&gt;Current possible values are 2.0, 1.0, 1.1, and 0.9. Returns &lt;code&gt;nil&lt;/code&gt; for unrecognized values.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.7.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqraw_header" class="anchor" aria-hidden="true" href="#ngxreqraw_header"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.raw_header&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.req.raw_header(no_request_line?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the original raw HTTP protocol header received by the Nginx server.&lt;/p&gt;
&lt;p&gt;By default, the request line and trailing &lt;code&gt;CR LF&lt;/code&gt; terminator will also be included. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;print&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;raw_header&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;gives something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;GET /t HTTP/1.1
Host: localhost
Connection: close
Foo: bar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can specify the optional
&lt;code&gt;no_request_line&lt;/code&gt; argument as a &lt;code&gt;true&lt;/code&gt; value to exclude the request line from the result. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;print&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;raw_header&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;outputs something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Host: localhost
Connection: close
Foo: bar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.7.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;This method does not work in HTTP/2 requests yet.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqget_method" class="anchor" aria-hidden="true" href="#ngxreqget_method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.get_method&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;method_name = ngx.req.get_method()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, balancer_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Retrieves the current request's request method name. Strings like &lt;code&gt;"GET"&lt;/code&gt; and &lt;code&gt;"POST"&lt;/code&gt; are returned instead of numerical &lt;a href="#http-method-constants"&gt;method constants&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If the current request is an Nginx subrequest, then the subrequest's method name will be returned.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.5.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqset_method"&gt;ngx.req.set_method&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqset_method" class="anchor" aria-hidden="true" href="#ngxreqset_method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.set_method&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.set_method(method_id)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Overrides the current request's request method with the &lt;code&gt;method_id&lt;/code&gt; argument. Currently only numerical &lt;a href="#http-method-constants"&gt;method constants&lt;/a&gt; are supported, like &lt;code&gt;ngx.HTTP_POST&lt;/code&gt; and &lt;code&gt;ngx.HTTP_GET&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If the current request is an Nginx subrequest, then the subrequest's method will be overridden.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.5.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqget_method"&gt;ngx.req.get_method&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqset_uri" class="anchor" aria-hidden="true" href="#ngxreqset_uri"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.set_uri&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.set_uri(uri, jump?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Rewrite the current request's (parsed) URI by the &lt;code&gt;uri&lt;/code&gt; argument. The &lt;code&gt;uri&lt;/code&gt; argument must be a Lua string and cannot be of zero length, or a Lua exception will be thrown.&lt;/p&gt;
&lt;p&gt;The optional boolean &lt;code&gt;jump&lt;/code&gt; argument can trigger location rematch (or location jump) as &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt;'s &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite" rel="nofollow"&gt;rewrite&lt;/a&gt; directive, that is, when &lt;code&gt;jump&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; (default to &lt;code&gt;false&lt;/code&gt;), this function will never return and it will tell Nginx to try re-searching locations with the new URI value at the later &lt;code&gt;post-rewrite&lt;/code&gt; phase and jumping to the new location.&lt;/p&gt;
&lt;p&gt;Location jump will not be triggered otherwise, and only the current request's URI will be modified, which is also the default behavior. This function will return but with no returned values when the &lt;code&gt;jump&lt;/code&gt; argument is &lt;code&gt;false&lt;/code&gt; or absent altogether.&lt;/p&gt;
&lt;p&gt;For example, the following Nginx config snippet&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/foo&lt;span class="pl-c1"&gt; last&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;can be coded in Lua like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_uri&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Similarly, Nginx config&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/foo break;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;can be coded in Lua as&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_uri&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or equivalently,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_uri&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;jump&lt;/code&gt; argument can only be set to &lt;code&gt;true&lt;/code&gt; in &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt;. Use of jump in other contexts is prohibited and will throw out a Lua exception.&lt;/p&gt;
&lt;p&gt;A more sophisticated example involving regex substitutions is as follows&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;rewrite_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; uri = ngx.re.sub(ngx.var.uri, &lt;span class="pl-s"&gt;"^/test/(.*)"&lt;/span&gt;, &lt;span class="pl-s"&gt;"/&lt;span class="pl-smi"&gt;$1&lt;/span&gt;"&lt;/span&gt;, &lt;span class="pl-s"&gt;"o"&lt;/span&gt;)
         ngx.req.set_uri(uri)
     }
     &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://my_backend;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which is functionally equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^/test/(.*) &lt;/span&gt;/&lt;span class="pl-smi"&gt;$1&lt;/span&gt; break;
     &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://my_backend;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that it is not possible to use this interface to rewrite URI arguments and that &lt;a href="#ngxreqset_uri_args"&gt;ngx.req.set_uri_args&lt;/a&gt; should be used for this instead. For instance, Nginx config&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/foo?a=3?&lt;span class="pl-c1"&gt; last&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;can be coded as&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; ngx.req.set_uri_args("a=3")
 ngx.req.set_uri("/foo", true)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; ngx.req.set_uri_args({&lt;span class="pl-k"&gt;a&lt;/span&gt; = 3})
 ngx.req.set_uri("/foo", true)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This interface was first introduced in the &lt;code&gt;v0.3.1rc14&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqset_uri_args" class="anchor" aria-hidden="true" href="#ngxreqset_uri_args"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.set_uri_args&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.set_uri_args(args)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Rewrite the current request's URI query arguments by the &lt;code&gt;args&lt;/code&gt; argument. The &lt;code&gt;args&lt;/code&gt; argument can be either a Lua string, as in&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_uri_args&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a=3&amp;amp;b=hello%20world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or a Lua table holding the query arguments' key-value pairs, as in&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_uri_args&lt;/span&gt;({ a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;where in the latter case, this method will escape argument keys and values according to the URI escaping rule.&lt;/p&gt;
&lt;p&gt;Multi-value arguments are also supported:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_uri_args&lt;/span&gt;({ a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, b &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;} })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which will result in a query string like &lt;code&gt;a=3&amp;amp;b=5&amp;amp;b=6&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This interface was first introduced in the &lt;code&gt;v0.3.1rc13&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqset_uri"&gt;ngx.req.set_uri&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqget_uri_args" class="anchor" aria-hidden="true" href="#ngxreqget_uri_args"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.get_uri_args&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;args, err = ngx.req.get_uri_args(max_args?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, balancer_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a Lua table holding all the current request URL query arguments.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err = ngx.req.get_uri_args()

         &lt;span class="pl-k"&gt;if&lt;/span&gt; err == &lt;span class="pl-s"&gt;"truncated"&lt;/span&gt; then
             -- &lt;span class="pl-k"&gt;one&lt;/span&gt; can choose to ignore or reject the current request here
         &lt;span class="pl-k"&gt;end&lt;/span&gt;

         &lt;span class="pl-k"&gt;for&lt;/span&gt; key, val in pairs(args) do
             &lt;span class="pl-k"&gt;if&lt;/span&gt; type(val) == &lt;span class="pl-s"&gt;"table"&lt;/span&gt; then
                 ngx.say(key, ": ", table.concat(val, ", "))
             &lt;span class="pl-k"&gt;else&lt;/span&gt;
                 ngx.say(key, ": ", val)
             &lt;span class="pl-k"&gt;end&lt;/span&gt;
         &lt;span class="pl-k"&gt;end&lt;/span&gt;
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then &lt;code&gt;GET /test?foo=bar&amp;amp;bar=baz&amp;amp;bar=blah&lt;/code&gt; will yield the response body&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; foo: bar
 bar: baz, blah&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Multiple occurrences of an argument key will result in a table value holding all the values for that key in order.&lt;/p&gt;
&lt;p&gt;Keys and values are unescaped according to URI escaping rules. In the settings above, &lt;code&gt;GET /test?a%20b=1%61+2&lt;/code&gt; will yield:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; a b: 1a 2&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Arguments without the &lt;code&gt;=&amp;lt;value&amp;gt;&lt;/code&gt; parts are treated as boolean arguments. &lt;code&gt;GET /test?foo&amp;amp;bar&lt;/code&gt; will yield:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; foo: &lt;span class="pl-c1"&gt;true&lt;/span&gt;
 bar: &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is, they will take Lua boolean values &lt;code&gt;true&lt;/code&gt;. However, they are different from arguments taking empty string values. &lt;code&gt;GET /test?foo=&amp;amp;bar=&lt;/code&gt; will give something like&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; foo:
 bar:&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Empty key arguments are discarded. &lt;code&gt;GET /test?=hello&amp;amp;=world&lt;/code&gt; will yield an empty output for instance.&lt;/p&gt;
&lt;p&gt;Updating query arguments via the Nginx variable &lt;code&gt;$args&lt;/code&gt; (or &lt;code&gt;ngx.var.args&lt;/code&gt; in Lua) at runtime is also supported:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;var&lt;/span&gt;.&lt;span class="pl-smi"&gt;args&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a=3&amp;amp;b=42&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_uri_args&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here the &lt;code&gt;args&lt;/code&gt; table will always look like&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; {a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;42&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;regardless of the actual request query string.&lt;/p&gt;
&lt;p&gt;Note that a maximum of 100 request arguments are parsed by default (including those with the same name) and that additional request arguments are silently discarded to guard against potential denial of service attacks. Since &lt;code&gt;v0.10.13&lt;/code&gt;, when the limit is exceeded, it will return a second value which is the string &lt;code&gt;"truncated"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However, the optional &lt;code&gt;max_args&lt;/code&gt; function argument can be used to override this limit:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_uri_args&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;truncated&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one can choose to ignore or reject the current request here&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This argument can be set to zero to remove the limit and to process all request arguments received:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_uri_args&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Removing the &lt;code&gt;max_args&lt;/code&gt; cap is strongly discouraged.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqget_post_args" class="anchor" aria-hidden="true" href="#ngxreqget_post_args"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.get_post_args&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;args, err = ngx.req.get_post_args(max_args?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a Lua table holding all the current request POST query arguments (of the MIME type &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;). Call &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; to read the request body first or turn on the &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; directive to avoid errors.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.req.read_body()
         &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err = ngx.req.get_post_args()

         &lt;span class="pl-k"&gt;if&lt;/span&gt; err == &lt;span class="pl-s"&gt;"truncated"&lt;/span&gt; then
             -- &lt;span class="pl-k"&gt;one&lt;/span&gt; can choose to ignore or reject the current request here
         &lt;span class="pl-k"&gt;end&lt;/span&gt;

         &lt;span class="pl-k"&gt;if&lt;/span&gt; not args then
             ngx.say("&lt;span class="pl-k"&gt;failed&lt;/span&gt; to get post args: &lt;span class="pl-s"&gt;", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;             return&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;         for key, val in pairs(args) do&lt;/span&gt;
&lt;span class="pl-s"&gt;             if type(val) == "&lt;/span&gt;table&lt;span class="pl-s"&gt;" then&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say(key, "&lt;/span&gt;: &lt;span class="pl-s"&gt;", table.concat(val, "&lt;/span&gt;, &lt;span class="pl-s"&gt;"))&lt;/span&gt;
&lt;span class="pl-s"&gt;             else&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say(key, "&lt;/span&gt;: &lt;span class="pl-s"&gt;", val)&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Post request with the body 'foo=bar&amp;amp;bar=baz&amp;amp;bar=blah'&lt;/span&gt;
 $ curl --data &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo=bar&amp;amp;bar=baz&amp;amp;bar=blah&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; localhost/test&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will yield the response body like&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; foo: bar
 bar: baz, blah&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Multiple occurrences of an argument key will result in a table value holding all of the values for that key in order.&lt;/p&gt;
&lt;p&gt;Keys and values will be unescaped according to URI escaping rules.&lt;/p&gt;
&lt;p&gt;With the settings above,&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; POST request with body 'a%20b=1%61+2'&lt;/span&gt;
 $ curl -d &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a%20b=1%61+2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; localhost/test&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will yield:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; a b: 1a 2&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Arguments without the &lt;code&gt;=&amp;lt;value&amp;gt;&lt;/code&gt; parts are treated as boolean arguments. &lt;code&gt;POST /test&lt;/code&gt; with the request body &lt;code&gt;foo&amp;amp;bar&lt;/code&gt; will yield:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; foo: &lt;span class="pl-c1"&gt;true&lt;/span&gt;
 bar: &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is, they will take Lua boolean values &lt;code&gt;true&lt;/code&gt;. However, they are different from arguments taking empty string values. &lt;code&gt;POST /test&lt;/code&gt; with request body &lt;code&gt;foo=&amp;amp;bar=&lt;/code&gt; will return something like&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; foo:
 bar:&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Empty key arguments are discarded. &lt;code&gt;POST /test&lt;/code&gt; with body &lt;code&gt;=hello&amp;amp;=world&lt;/code&gt; will yield empty outputs for instance.&lt;/p&gt;
&lt;p&gt;Note that a maximum of 100 request arguments are parsed by default (including those with the same name) and that additional request arguments are silently discarded to guard against potential denial of service attacks. Since &lt;code&gt;v0.10.13&lt;/code&gt;, when the limit is exceeded, it will return a second value which is the string &lt;code&gt;"truncated"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However, the optional &lt;code&gt;max_args&lt;/code&gt; function argument can be used to override this limit:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_post_args&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;truncated&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one can choose to ignore or reject the current request here&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This argument can be set to zero to remove the limit and to process all request arguments received:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_post_args&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Removing the &lt;code&gt;max_args&lt;/code&gt; cap is strongly discouraged.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqget_headers" class="anchor" aria-hidden="true" href="#ngxreqget_headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.get_headers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;headers, err = ngx.req.get_headers(max_headers?, raw?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a Lua table holding all the current request headers.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; h, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_headers&lt;/span&gt;()

 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;truncated&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one can choose to ignore or reject the current request here&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;for&lt;/span&gt; k, v &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;pairs&lt;/span&gt;(h) &lt;span class="pl-k"&gt;do&lt;/span&gt;
     &lt;span class="pl-c1"&gt;...&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To read an individual header:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Host: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_headers&lt;/span&gt;()[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Host&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the &lt;a href="#ngxvarvariable"&gt;ngx.var.HEADER&lt;/a&gt; API call, which uses core &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#var_http_" rel="nofollow"&gt;$http_HEADER&lt;/a&gt; variables, may be more preferable for reading individual request headers.&lt;/p&gt;
&lt;p&gt;For multiple instances of request headers such as:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; Foo: foo
 Foo: bar
 Foo: baz&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;the value of &lt;code&gt;ngx.req.get_headers()["Foo"]&lt;/code&gt; will be a Lua (array) table such as:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that a maximum of 100 request headers are parsed by default (including those with the same name) and that additional request headers are silently discarded to guard against potential denial of service attacks. Since &lt;code&gt;v0.10.13&lt;/code&gt;, when the limit is exceeded, it will return a second value which is the string &lt;code&gt;"truncated"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However, the optional &lt;code&gt;max_headers&lt;/code&gt; function argument can be used to override this limit:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; headers, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_headers&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)

 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;truncated&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one can choose to ignore or reject the current request here&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This argument can be set to zero to remove the limit and to process all request headers received:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; headers, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_headers&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Removing the &lt;code&gt;max_headers&lt;/code&gt; cap is strongly discouraged.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;0.6.9&lt;/code&gt; release, all the header names in the Lua table returned are converted to the pure lower-case form by default, unless the &lt;code&gt;raw&lt;/code&gt; argument is set to &lt;code&gt;true&lt;/code&gt; (default to &lt;code&gt;false&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Also, by default, an &lt;code&gt;__index&lt;/code&gt; metamethod is added to the resulting Lua table and will normalize the keys to a pure lowercase form with all underscores converted to dashes in case of a lookup miss. For example, if a request header &lt;code&gt;My-Foo-Header&lt;/code&gt; is present, then the following invocations will all pick up the value of this header correctly:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(headers.&lt;span class="pl-smi"&gt;my_foo_header&lt;/span&gt;)
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(headers[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My-Foo-Header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(headers[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;my-foo-header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;__index&lt;/code&gt; metamethod will not be added when the &lt;code&gt;raw&lt;/code&gt; argument is set to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqset_header" class="anchor" aria-hidden="true" href="#ngxreqset_header"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.set_header&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.set_header(header_name, header_value)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Set the current request's request header named &lt;code&gt;header_name&lt;/code&gt; to value &lt;code&gt;header_value&lt;/code&gt;, overriding any existing ones.&lt;/p&gt;
&lt;p&gt;By default, all the subrequests subsequently initiated by &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt; will inherit the new header.&lt;/p&gt;
&lt;p&gt;Here is an example of setting the &lt;code&gt;Content-Type&lt;/code&gt; header:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_header&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Content-Type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text/css&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;header_value&lt;/code&gt; can take an array list of values,
for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_header&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;abc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will produce two new request headers:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; Foo: a
 Foo: abc&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and old &lt;code&gt;Foo&lt;/code&gt; headers will be overridden if there is any.&lt;/p&gt;
&lt;p&gt;When the &lt;code&gt;header_value&lt;/code&gt; argument is &lt;code&gt;nil&lt;/code&gt;, the request header will be removed. So&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_header&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;X-Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;is equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;clear_header&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;X-Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqclear_header" class="anchor" aria-hidden="true" href="#ngxreqclear_header"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.clear_header&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.clear_header(header_name)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Clears the current request's request header named &lt;code&gt;header_name&lt;/code&gt;. None of the current request's existing subrequests will be affected but subsequently initiated subrequests will inherit the change by default.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqread_body" class="anchor" aria-hidden="true" href="#ngxreqread_body"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.read_body&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.read_body()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Reads the client request body synchronously without blocking the Nginx event loop.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;read_body&lt;/span&gt;()
 &lt;span class="pl-k"&gt;local&lt;/span&gt; args &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_post_args&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the request body is already read previously by turning on &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; or by using other modules, then this function does not run and returns immediately.&lt;/p&gt;
&lt;p&gt;If the request body has already been explicitly discarded, either by the &lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt; function or other modules, this function does not run and returns immediately.&lt;/p&gt;
&lt;p&gt;In case of errors, such as connection errors while reading the data, this method will throw out a Lua exception &lt;em&gt;or&lt;/em&gt; terminate the current request with a 500 status code immediately.&lt;/p&gt;
&lt;p&gt;The request body data read using this function can be retrieved later via &lt;a href="#ngxreqget_body_data"&gt;ngx.req.get_body_data&lt;/a&gt; or, alternatively, the temporary file name for the body data cached to disk using &lt;a href="#ngxreqget_body_file"&gt;ngx.req.get_body_file&lt;/a&gt;. This depends on&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;whether the current request body is already larger than the &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size" rel="nofollow"&gt;client_body_buffer_size&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;and whether &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_in_file_only" rel="nofollow"&gt;client_body_in_file_only&lt;/a&gt; has been switched on.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In cases where current request may have a request body and the request body data is not required, The &lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt; function must be used to explicitly discard the request body to avoid breaking things under HTTP 1.1 keepalive or HTTP 1.1 pipelining.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqdiscard_body" class="anchor" aria-hidden="true" href="#ngxreqdiscard_body"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.discard_body&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.discard_body()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Explicitly discard the request body, i.e., read the data on the connection and throw it away immediately (without using the request body by any means).&lt;/p&gt;
&lt;p&gt;This function is an asynchronous call and returns immediately.&lt;/p&gt;
&lt;p&gt;If the request body has already been read, this function does nothing and returns immediately.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqget_body_data" class="anchor" aria-hidden="true" href="#ngxreqget_body_data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.get_body_data&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;data = ngx.req.get_body_data()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Retrieves in-memory request body data. It returns a Lua string rather than a Lua table holding all the parsed query arguments. Use the &lt;a href="#ngxreqget_post_args"&gt;ngx.req.get_post_args&lt;/a&gt; function instead if a Lua table is required.&lt;/p&gt;
&lt;p&gt;This function returns &lt;code&gt;nil&lt;/code&gt; if&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;the request body has not been read,&lt;/li&gt;
&lt;li&gt;the request body has been read into disk temporary files,&lt;/li&gt;
&lt;li&gt;or the request body has zero size.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If the request body has not been read yet, call &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; first (or turn on &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; to force this module to read the request body. This is not recommended however).&lt;/p&gt;
&lt;p&gt;If the request body has been read into disk files, try calling the &lt;a href="#ngxreqget_body_file"&gt;ngx.req.get_body_file&lt;/a&gt; function instead.&lt;/p&gt;
&lt;p&gt;To force in-memory request bodies, try setting &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size" rel="nofollow"&gt;client_body_buffer_size&lt;/a&gt; to the same size value in &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size" rel="nofollow"&gt;client_max_body_size&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that calling this function instead of using &lt;code&gt;ngx.var.request_body&lt;/code&gt; or &lt;code&gt;ngx.var.echo_request_body&lt;/code&gt; is more efficient because it can save one dynamic memory allocation and one data copy.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqget_body_file"&gt;ngx.req.get_body_file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqget_body_file" class="anchor" aria-hidden="true" href="#ngxreqget_body_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.get_body_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;file_name = ngx.req.get_body_file()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Retrieves the file name for the in-file request body data. Returns &lt;code&gt;nil&lt;/code&gt; if the request body has not been read or has been read into memory.&lt;/p&gt;
&lt;p&gt;The returned file is read only and is usually cleaned up by Nginx's memory pool. It should not be manually modified, renamed, or removed in Lua code.&lt;/p&gt;
&lt;p&gt;If the request body has not been read yet, call &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; first (or turn on &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; to force this module to read the request body. This is not recommended however).&lt;/p&gt;
&lt;p&gt;If the request body has been read into memory, try calling the &lt;a href="#ngxreqget_body_data"&gt;ngx.req.get_body_data&lt;/a&gt; function instead.&lt;/p&gt;
&lt;p&gt;To force in-file request bodies, try turning on &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_in_file_only" rel="nofollow"&gt;client_body_in_file_only&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqget_body_data"&gt;ngx.req.get_body_data&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqset_body_data" class="anchor" aria-hidden="true" href="#ngxreqset_body_data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.set_body_data&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.set_body_data(data)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Set the current request's request body using the in-memory data specified by the &lt;code&gt;data&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;If the request body has not been read yet, call &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; first (or turn on &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; to force this module to read the request body. This is not recommended however). Additionally, the request body must not have been previously discarded by &lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Whether the previous request body has been read into memory or buffered into a disk file, it will be freed or the disk file will be cleaned up immediately, respectively.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc18&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqset_body_file"&gt;ngx.req.set_body_file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqset_body_file" class="anchor" aria-hidden="true" href="#ngxreqset_body_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.set_body_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.set_body_file(file_name, auto_clean?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Set the current request's request body using the in-file data specified by the &lt;code&gt;file_name&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;If the request body has not been read yet, call &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; first (or turn on &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; to force this module to read the request body. This is not recommended however). Additionally, the request body must not have been previously discarded by &lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If the optional &lt;code&gt;auto_clean&lt;/code&gt; argument is given a &lt;code&gt;true&lt;/code&gt; value, then this file will be removed at request completion or the next time this function or &lt;a href="#ngxreqset_body_data"&gt;ngx.req.set_body_data&lt;/a&gt; are called in the same request. The &lt;code&gt;auto_clean&lt;/code&gt; is default to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Please ensure that the file specified by the &lt;code&gt;file_name&lt;/code&gt; argument exists and is readable by an Nginx worker process by setting its permission properly to avoid Lua exception errors.&lt;/p&gt;
&lt;p&gt;Whether the previous request body has been read into memory or buffered into a disk file, it will be freed or the disk file will be cleaned up immediately, respectively.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc18&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqset_body_data"&gt;ngx.req.set_body_data&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqinit_body" class="anchor" aria-hidden="true" href="#ngxreqinit_body"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.init_body&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.init_body(buffer_size?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Creates a new blank request body for the current request and inializes the buffer for later request body data writing via the &lt;a href="#ngxreqappend_body"&gt;ngx.req.append_body&lt;/a&gt; and &lt;a href="#ngxreqfinish_body"&gt;ngx.req.finish_body&lt;/a&gt; APIs.&lt;/p&gt;
&lt;p&gt;If the &lt;code&gt;buffer_size&lt;/code&gt; argument is specified, then its value will be used for the size of the memory buffer for body writing with &lt;a href="#ngxreqappend_body"&gt;ngx.req.append_body&lt;/a&gt;. If the argument is omitted, then the value specified by the standard &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size" rel="nofollow"&gt;client_body_buffer_size&lt;/a&gt; directive will be used instead.&lt;/p&gt;
&lt;p&gt;When the data can no longer be hold in the memory buffer for the request body, then the data will be flushed onto a temporary file just like the standard request body reader in the Nginx core.&lt;/p&gt;
&lt;p&gt;It is important to always call the &lt;a href="#ngxreqfinish_body"&gt;ngx.req.finish_body&lt;/a&gt; after all the data has been appended onto the current request body. Also, when this function is used together with &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;, it is required to call &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt; &lt;em&gt;before&lt;/em&gt; this function, or you will get the "request body already exists" error message.&lt;/p&gt;
&lt;p&gt;The usage of this function is often like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;init_body&lt;/span&gt;(&lt;span class="pl-c1"&gt;128&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;1024&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; buffer is 128KB&lt;/span&gt;
 &lt;span class="pl-k"&gt;for&lt;/span&gt; chunk &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;next_data_chunk&lt;/span&gt;() &lt;span class="pl-k"&gt;do&lt;/span&gt;
     ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;append_body&lt;/span&gt;(chunk) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; each chunk can be 4KB&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;finish_body&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This function can be used with &lt;a href="#ngxreqappend_body"&gt;ngx.req.append_body&lt;/a&gt;, &lt;a href="#ngxreqfinish_body"&gt;ngx.req.finish_body&lt;/a&gt;, and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt; to implement efficient input filters in pure Lua (in the context of &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt; or &lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt;), which can be used with other Nginx content handler or upstream modules like &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_http_proxy_module&lt;/a&gt; and &lt;a href="http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html" rel="nofollow"&gt;ngx_http_fastcgi_module&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.5.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqappend_body" class="anchor" aria-hidden="true" href="#ngxreqappend_body"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.append_body&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.append_body(data_chunk)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Append new data chunk specified by the &lt;code&gt;data_chunk&lt;/code&gt; argument onto the existing request body created by the &lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt; call.&lt;/p&gt;
&lt;p&gt;When the data can no longer be hold in the memory buffer for the request body, then the data will be flushed onto a temporary file just like the standard request body reader in the Nginx core.&lt;/p&gt;
&lt;p&gt;It is important to always call the &lt;a href="#ngxreqfinish_body"&gt;ngx.req.finish_body&lt;/a&gt; after all the data has been appended onto the current request body.&lt;/p&gt;
&lt;p&gt;This function can be used with &lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt;, &lt;a href="#ngxreqfinish_body"&gt;ngx.req.finish_body&lt;/a&gt;, and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt; to implement efficient input filters in pure Lua (in the context of &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt; or &lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt;), which can be used with other Nginx content handler or upstream modules like &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_http_proxy_module&lt;/a&gt; and &lt;a href="http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html" rel="nofollow"&gt;ngx_http_fastcgi_module&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.5.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqfinish_body" class="anchor" aria-hidden="true" href="#ngxreqfinish_body"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.finish_body&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.finish_body()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Completes the construction process of the new request body created by the &lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt; and &lt;a href="#ngxreqappend_body"&gt;ngx.req.append_body&lt;/a&gt; calls.&lt;/p&gt;
&lt;p&gt;This function can be used with &lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt;, &lt;a href="#ngxreqappend_body"&gt;ngx.req.append_body&lt;/a&gt;, and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt; to implement efficient input filters in pure Lua (in the context of &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt; or &lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt;), which can be used with other Nginx content handler or upstream modules like &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_http_proxy_module&lt;/a&gt; and &lt;a href="http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html" rel="nofollow"&gt;ngx_http_fastcgi_module&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.5.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqsocket" class="anchor" aria-hidden="true" href="#ngxreqsocket"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.socket&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock, err = ngx.req.socket()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock, err = ngx.req.socket(raw)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a read-only cosocket object that wraps the downstream connection. Only &lt;a href="#tcpsockreceive"&gt;receive&lt;/a&gt; and &lt;a href="#tcpsockreceiveuntil"&gt;receiveuntil&lt;/a&gt; methods are supported on this object.&lt;/p&gt;
&lt;p&gt;In case of error, &lt;code&gt;nil&lt;/code&gt; will be returned as well as a string describing the error.&lt;/p&gt;
&lt;p&gt;The socket object returned by this method is usually used to read the current request's body in a streaming fashion. Do not turn on the &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; directive, and do not mix this call with &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; and &lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If any request body data has been pre-read into the Nginx core request header buffer, the resulting cosocket object will take care of this to avoid potential data loss resulting from such pre-reading.
Chunked request bodies are not yet supported in this API.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;v0.9.0&lt;/code&gt; release, this function accepts an optional boolean &lt;code&gt;raw&lt;/code&gt; argument. When this argument is &lt;code&gt;true&lt;/code&gt;, this function returns a full-duplex cosocket object wrapping around the raw downstream connection socket, upon which you can call the &lt;a href="#tcpsockreceive"&gt;receive&lt;/a&gt;, &lt;a href="#tcpsockreceiveuntil"&gt;receiveuntil&lt;/a&gt;, and &lt;a href="#tcpsocksend"&gt;send&lt;/a&gt; methods.&lt;/p&gt;
&lt;p&gt;When the &lt;code&gt;raw&lt;/code&gt; argument is &lt;code&gt;true&lt;/code&gt;, it is required that no pending data from any previous &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt;, &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt;, or &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt; calls exists. So if you have these downstream output calls previously, you should call &lt;a href="#ngxflush"&gt;ngx.flush(true)&lt;/a&gt; before calling &lt;code&gt;ngx.req.socket(true)&lt;/code&gt; to ensure that there is no pending output data. If the request body has not been read yet, then this "raw socket" can also be used to read the request body.&lt;/p&gt;
&lt;p&gt;You can use the "raw request socket" returned by &lt;code&gt;ngx.req.socket(true)&lt;/code&gt; to implement fancy protocols like &lt;a href="https://en.wikipedia.org/wiki/WebSocket" rel="nofollow"&gt;WebSocket&lt;/a&gt;, or just emit your own raw HTTP response header or body data. You can refer to the &lt;a href="https://github.com/openresty/lua-resty-websocket"&gt;lua-resty-websocket library&lt;/a&gt; for a real world example.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxexec" class="anchor" aria-hidden="true" href="#ngxexec"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.exec&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.exec(uri, args?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Does an internal redirect to &lt;code&gt;uri&lt;/code&gt; with &lt;code&gt;args&lt;/code&gt; and is similar to the &lt;a href="http://github.com/openresty/echo-nginx-module#echo_exec"&gt;echo_exec&lt;/a&gt; directive of the &lt;a href="http://github.com/openresty/echo-nginx-module"&gt;echo-nginx-module&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;exec&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/some-location&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
 ngx.&lt;span class="pl-c1"&gt;exec&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/some-location&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a=3&amp;amp;b=5&amp;amp;c=6&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
 ngx.&lt;span class="pl-c1"&gt;exec&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/some-location?a=3&amp;amp;b=5&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c=6&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The optional second &lt;code&gt;args&lt;/code&gt; can be used to specify extra URI query arguments, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;exec&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a=3&amp;amp;b=hello%20world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, a Lua table can be passed for the &lt;code&gt;args&lt;/code&gt; argument for ngx_lua to carry out URI escaping and string concatenation.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;exec&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, { a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The result is exactly the same as the previous example.&lt;/p&gt;
&lt;p&gt;The format for the Lua table passed as the &lt;code&gt;args&lt;/code&gt; argument is identical to the format used in the &lt;a href="#ngxencode_args"&gt;ngx.encode_args&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;Named locations are also supported but the second &lt;code&gt;args&lt;/code&gt; argument will be ignored if present and the querystring for the new target is inherited from the referring location (if any).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GET /foo/file.php?a=hello&lt;/code&gt; will return "hello" and not "goodbye" in the example below&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.exec("@bar", "a=goodbye");
     }
 }

 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;@bar &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; args = ngx.req.get_uri_args()
         &lt;span class="pl-k"&gt;for&lt;/span&gt; key, val in pairs(args) do
             &lt;span class="pl-k"&gt;if&lt;/span&gt; key == &lt;span class="pl-s"&gt;"a"&lt;/span&gt; then
                 ngx.say(val)
             &lt;span class="pl-k"&gt;end&lt;/span&gt;
         &lt;span class="pl-k"&gt;end&lt;/span&gt;
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the &lt;code&gt;ngx.exec&lt;/code&gt; method is different from &lt;a href="#ngxredirect"&gt;ngx.redirect&lt;/a&gt; in that
it is purely an internal redirect and that no new external HTTP traffic is involved.&lt;/p&gt;
&lt;p&gt;Also note that this method call terminates the processing of the current request and that it &lt;em&gt;must&lt;/em&gt; be called before &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt; or explicit response body
outputs by either &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; or &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is recommended that a coding style that combines this method call with the &lt;code&gt;return&lt;/code&gt; statement, i.e., &lt;code&gt;return ngx.exec(...)&lt;/code&gt; be adopted when this method call is used in contexts other than &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua*&lt;/a&gt; to reinforce the fact that the request processing is being terminated.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxredirect" class="anchor" aria-hidden="true" href="#ngxredirect"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.redirect&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.redirect(uri, status?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Issue an &lt;code&gt;HTTP 301&lt;/code&gt; or &lt;code&gt;302&lt;/code&gt; redirection to &lt;code&gt;uri&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Notice: the &lt;code&gt;uri&lt;/code&gt; should not contains &lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\n&lt;/code&gt;, otherwise, the characters after &lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\n&lt;/code&gt; will be truncated, including the &lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\n&lt;/code&gt; bytes themself.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;uri&lt;/code&gt; argument will be truncated if it contains the
&lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\n&lt;/code&gt; characters. The truncated value will contain
all characters up to (and excluding) the first occurrence of &lt;code&gt;\r&lt;/code&gt; or
&lt;code&gt;\n&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;status&lt;/code&gt; parameter specifies the HTTP status code to be used. The following status codes are supported right now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;301&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;302&lt;/code&gt; (default)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;303&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;307&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;308&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is &lt;code&gt;302&lt;/code&gt; (&lt;code&gt;ngx.HTTP_MOVED_TEMPORARILY&lt;/code&gt;) by default.&lt;/p&gt;
&lt;p&gt;Here is an example assuming the current server name is &lt;code&gt;localhost&lt;/code&gt; and that it is listening on port 1984:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which is equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ngx.&lt;span class="pl-smi"&gt;HTTP_MOVED_TEMPORARILY&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Redirecting arbitrary external URLs is also supported, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://www.google.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can also use the numerical code directly as the second &lt;code&gt;status&lt;/code&gt; argument:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;301&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This method is similar to the &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite" rel="nofollow"&gt;rewrite&lt;/a&gt; directive with the &lt;code&gt;redirect&lt;/code&gt; modifier in the standard
&lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt;, for example, this &lt;code&gt;nginx.conf&lt;/code&gt; snippet&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/foo? redirect;  &lt;span class="pl-c"&gt;# nginx config&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;is equivalent to the following Lua code&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Lua code&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;while&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/foo? permanent;  &lt;span class="pl-c"&gt;# nginx config&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;is equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, ngx.&lt;span class="pl-smi"&gt;HTTP_MOVED_PERMANENTLY&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Lua code&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;URI arguments can be specified as well, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo?a=3&amp;amp;b=4&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that this method call terminates the processing of the current request and that it &lt;em&gt;must&lt;/em&gt; be called before &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt; or explicit response body
outputs by either &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; or &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is recommended that a coding style that combines this method call with the &lt;code&gt;return&lt;/code&gt; statement, i.e., &lt;code&gt;return ngx.redirect(...)&lt;/code&gt; be adopted when this method call is used in contexts other than &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua*&lt;/a&gt; to reinforce the fact that the request processing is being terminated.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsend_headers" class="anchor" aria-hidden="true" href="#ngxsend_headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.send_headers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.send_headers()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Explicitly send out the response headers.&lt;/p&gt;
&lt;p&gt;Since &lt;code&gt;v0.8.3&lt;/code&gt; this function returns &lt;code&gt;1&lt;/code&gt; on success, or returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;Note that there is normally no need to manually send out response headers as ngx_lua will automatically send headers out
before content is output with &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; or &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; or when &lt;a href="#content_by_lua"&gt;content_by_lua*&lt;/a&gt; exits normally.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxheaders_sent" class="anchor" aria-hidden="true" href="#ngxheaders_sent"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.headers_sent&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;value = ngx.headers_sent&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the response headers have been sent (by ngx_lua), and &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;This API was first introduced in ngx_lua v0.3.1rc6.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxprint" class="anchor" aria-hidden="true" href="#ngxprint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.print&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.print(...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Emits arguments concatenated to the HTTP client (as response body). If response headers have not been sent, this function will send headers out first and then output body data.&lt;/p&gt;
&lt;p&gt;Since &lt;code&gt;v0.8.3&lt;/code&gt; this function returns &lt;code&gt;1&lt;/code&gt; on success, or returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;Lua &lt;code&gt;nil&lt;/code&gt; values will output &lt;code&gt;"nil"&lt;/code&gt; strings and Lua boolean values will output &lt;code&gt;"true"&lt;/code&gt; and &lt;code&gt;"false"&lt;/code&gt; literal strings respectively.&lt;/p&gt;
&lt;p&gt;Nested arrays of strings are permitted and the elements in the arrays will be sent one by one:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; table &lt;span class="pl-k"&gt;=&lt;/span&gt; {
     &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
     {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;world: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; or &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
         {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;nil&lt;/span&gt;}}
 }
 ngx.&lt;span class="pl-c1"&gt;print&lt;/span&gt;(table)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will yield the output&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; hello, world: &lt;span class="pl-c1"&gt;true&lt;/span&gt; or false: nil&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Non-array table arguments will cause a Lua exception to be thrown.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;ngx.null&lt;/code&gt; constant will yield the &lt;code&gt;"null"&lt;/code&gt; string output.&lt;/p&gt;
&lt;p&gt;This is an asynchronous call and will return immediately without waiting for all the data to be written into the system send buffer. To run in synchronous mode, call &lt;code&gt;ngx.flush(true)&lt;/code&gt; after calling &lt;code&gt;ngx.print&lt;/code&gt;. This can be particularly useful for streaming output. See &lt;a href="#ngxflush"&gt;ngx.flush&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;Please note that both &lt;code&gt;ngx.print&lt;/code&gt; and &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; will always invoke the whole Nginx output body filter chain, which is an expensive operation. So be careful when calling either of these two in a tight loop; buffer the data yourself in Lua and save the calls.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsay" class="anchor" aria-hidden="true" href="#ngxsay"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.say&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.say(...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Just as &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; but also emit a trailing newline.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxlog" class="anchor" aria-hidden="true" href="#ngxlog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.log&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.log(log_level, ...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Log arguments concatenated to error.log with the given logging level.&lt;/p&gt;
&lt;p&gt;Lua &lt;code&gt;nil&lt;/code&gt; arguments are accepted and result in literal &lt;code&gt;"nil"&lt;/code&gt; string while Lua booleans result in literal &lt;code&gt;"true"&lt;/code&gt; or &lt;code&gt;"false"&lt;/code&gt; string outputs. And the &lt;code&gt;ngx.null&lt;/code&gt; constant will yield the &lt;code&gt;"null"&lt;/code&gt; string output.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;log_level&lt;/code&gt; argument can take constants like &lt;code&gt;ngx.ERR&lt;/code&gt; and &lt;code&gt;ngx.WARN&lt;/code&gt;. Check out &lt;a href="#nginx-log-level-constants"&gt;Nginx log level constants&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;There is a hard coded &lt;code&gt;2048&lt;/code&gt; byte limitation on error message lengths in the Nginx core. This limit includes trailing newlines and leading time stamps. If the message size exceeds this limit, Nginx will truncate the message text accordingly. This limit can be manually modified by editing the &lt;code&gt;NGX_MAX_ERROR_STR&lt;/code&gt; macro definition in the &lt;code&gt;src/core/ngx_log.h&lt;/code&gt; file in the Nginx source tree.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxflush" class="anchor" aria-hidden="true" href="#ngxflush"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.flush&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.flush(wait?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Flushes response output to the client.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ngx.flush&lt;/code&gt; accepts an optional boolean &lt;code&gt;wait&lt;/code&gt; argument (Default: &lt;code&gt;false&lt;/code&gt;) first introduced in the &lt;code&gt;v0.3.1rc34&lt;/code&gt; release. When called with the default argument, it issues an asynchronous call (Returns immediately without waiting for output data to be written into the system send buffer). Calling the function with the &lt;code&gt;wait&lt;/code&gt; argument set to &lt;code&gt;true&lt;/code&gt; switches to synchronous mode.&lt;/p&gt;
&lt;p&gt;In synchronous mode, the function will not return until all output data has been written into the system send buffer or until the &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#send_timeout" rel="nofollow"&gt;send_timeout&lt;/a&gt; setting has expired. Note that using the Lua coroutine mechanism means that this function does not block the Nginx event loop even in the synchronous mode.&lt;/p&gt;
&lt;p&gt;When &lt;code&gt;ngx.flush(true)&lt;/code&gt; is called immediately after &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; or &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt;, it causes the latter functions to run in synchronous mode. This can be particularly useful for streaming output.&lt;/p&gt;
&lt;p&gt;Note that &lt;code&gt;ngx.flush&lt;/code&gt; is not functional when in the HTTP 1.0 output buffering mode. See &lt;a href="#http-10-support"&gt;HTTP 1.0 support&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Since &lt;code&gt;v0.8.3&lt;/code&gt; this function returns &lt;code&gt;1&lt;/code&gt; on success, or returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxexit" class="anchor" aria-hidden="true" href="#ngxexit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.exit&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.exit(status)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When &lt;code&gt;status &amp;gt;= 200&lt;/code&gt; (i.e., &lt;code&gt;ngx.HTTP_OK&lt;/code&gt; and above), it will interrupt the execution of the current request and return status code to Nginx.&lt;/p&gt;
&lt;p&gt;When &lt;code&gt;status == 0&lt;/code&gt; (i.e., &lt;code&gt;ngx.OK&lt;/code&gt;), it will only quit the current phase handler (or the content handler if the &lt;a href="#content_by_lua"&gt;content_by_lua*&lt;/a&gt; directive is used) and continue to run later phases (if any) for the current request.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;status&lt;/code&gt; argument can be &lt;code&gt;ngx.OK&lt;/code&gt;, &lt;code&gt;ngx.ERROR&lt;/code&gt;, &lt;code&gt;ngx.HTTP_NOT_FOUND&lt;/code&gt;,
&lt;code&gt;ngx.HTTP_MOVED_TEMPORARILY&lt;/code&gt;, or other &lt;a href="#http-status-constants"&gt;HTTP status constants&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To return an error page with custom contents, use code snippets like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;status&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;HTTP_GONE&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;This is our own content&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; to cause quit the whole request rather than the current phase handler&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;HTTP_OK&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The effect in action:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; $ curl -i http://localhost/test
 HTTP/1.1 410 Gone
 Server: nginx/1.0.6
 Date: Thu, 15 Sep 2011 00:51:48 GMT
 Content-Type: text/plain
 Transfer-Encoding: chunked
 Connection: keep-alive

 This is our own content&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Number literals can be used directly as the argument, for instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(&lt;span class="pl-c1"&gt;501&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that while this method accepts all &lt;a href="#http-status-constants"&gt;HTTP status constants&lt;/a&gt; as input, it only accepts &lt;code&gt;ngx.OK&lt;/code&gt; and &lt;code&gt;ngx.ERROR&lt;/code&gt; of the &lt;a href="#core-constants"&gt;core constants&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also note that this method call terminates the processing of the current request and that it is recommended that a coding style that combines this method call with the &lt;code&gt;return&lt;/code&gt; statement, i.e., &lt;code&gt;return ngx.exit(...)&lt;/code&gt; be used to reinforce the fact that the request processing is being terminated.&lt;/p&gt;
&lt;p&gt;When being used in the contexts of &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua*&lt;/a&gt;, &lt;a href="#balancer_by_lua_block"&gt;balancer_by_lua*&lt;/a&gt;, and
&lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua*&lt;/a&gt;, &lt;code&gt;ngx.exit()&lt;/code&gt; is
an asynchronous operation and will return immediately. This behavior may change in future and it is recommended that users always use &lt;code&gt;return&lt;/code&gt; in combination as suggested above.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxeof" class="anchor" aria-hidden="true" href="#ngxeof"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.eof&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.eof()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Explicitly specify the end of the response output stream. In the case of HTTP 1.1 chunked encoded output, it will just trigger the Nginx core to send out the "last chunk".&lt;/p&gt;
&lt;p&gt;When you disable the HTTP 1.1 keep-alive feature for your downstream connections, you can rely on well written HTTP clients to close the connection actively for you when you call this method. This trick can be used do back-ground jobs without letting the HTTP clients to wait on the connection, as in the following example:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /async &lt;/span&gt;{
     &lt;span class="pl-k"&gt;keepalive_timeout&lt;/span&gt; &lt;span class="pl-s"&gt;0&lt;/span&gt;;
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.say("&lt;span class="pl-k"&gt;got&lt;/span&gt; the task!&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.eof()  -- well written HTTP clients will close the connection at this point&lt;/span&gt;
&lt;span class="pl-s"&gt;         -- access MySQL, PostgreSQL, Redis, Memcached, and etc here...&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But if you create subrequests to access other locations configured by Nginx upstream modules, then you should configure those upstream modules to ignore client connection abortions if they are not by default. For example, by default the standard &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_http_proxy_module&lt;/a&gt; will terminate both the subrequest and the main request as soon as the client closes the connection, so it is important to turn on the &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ignore_client_abort" rel="nofollow"&gt;proxy_ignore_client_abort&lt;/a&gt; directive in your location block configured by &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_http_proxy_module&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;proxy_ignore_client_abort&lt;/span&gt;&lt;span class="pl-c1"&gt; on&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A better way to do background jobs is to use the &lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt; API.&lt;/p&gt;
&lt;p&gt;Since &lt;code&gt;v0.8.3&lt;/code&gt; this function returns &lt;code&gt;1&lt;/code&gt; on success, or returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsleep" class="anchor" aria-hidden="true" href="#ngxsleep"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.sleep&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.sleep(seconds)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sleeps for the specified seconds without blocking. One can specify time resolution up to 0.001 seconds (i.e., one milliseconds).&lt;/p&gt;
&lt;p&gt;Behind the scene, this method makes use of the Nginx timers.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;0.7.20&lt;/code&gt; release, The &lt;code&gt;0&lt;/code&gt; time argument can also be specified.&lt;/p&gt;
&lt;p&gt;This method was introduced in the &lt;code&gt;0.5.0rc30&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxescape_uri" class="anchor" aria-hidden="true" href="#ngxescape_uri"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.escape_uri&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newstr = ngx.escape_uri(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Escape &lt;code&gt;str&lt;/code&gt; as a URI component.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxunescape_uri" class="anchor" aria-hidden="true" href="#ngxunescape_uri"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.unescape_uri&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newstr = ngx.unescape_uri(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Unescape &lt;code&gt;str&lt;/code&gt; as an escaped URI component.&lt;/p&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(ngx.&lt;span class="pl-c1"&gt;unescape_uri&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b%20r56+7&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;gives the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;b r56 7
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxencode_args" class="anchor" aria-hidden="true" href="#ngxencode_args"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.encode_args&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.encode_args(table)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Encode the Lua table to a query args string according to the URI encoded rules.&lt;/p&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;encode_args&lt;/span&gt;({foo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b r&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;yields&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;foo=3&amp;amp;b%20r=hello%20world
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The table keys must be Lua strings.&lt;/p&gt;
&lt;p&gt;Multi-value query args are also supported. Just use a Lua table for the argument's value, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;encode_args&lt;/span&gt;({baz &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-c1"&gt;32&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;gives&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;baz=32&amp;amp;baz=hello
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the value table is empty and the effect is equivalent to the &lt;code&gt;nil&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;Boolean argument values are also supported, for instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;encode_args&lt;/span&gt;({a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;, b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;yields&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a&amp;amp;b=1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the argument value is &lt;code&gt;false&lt;/code&gt;, then the effect is equivalent to the &lt;code&gt;nil&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.3.1rc27&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxdecode_args" class="anchor" aria-hidden="true" href="#ngxdecode_args"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.decode_args&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;table, err = ngx.decode_args(str, max_args?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Decodes a URI encoded query-string into a Lua table. This is the inverse function of &lt;a href="#ngxencode_args"&gt;ngx.encode_args&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;max_args&lt;/code&gt; argument can be used to specify the maximum number of arguments parsed from the &lt;code&gt;str&lt;/code&gt; argument. By default, a maximum of 100 request arguments are parsed (including those with the same name) and that additional URI arguments are silently discarded to guard against potential denial of service attacks. Since &lt;code&gt;v0.10.13&lt;/code&gt;, when the limit is exceeded, it will return a second value which is the string &lt;code&gt;"truncated"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This argument can be set to zero to remove the limit and to process all request arguments received:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; args &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;decode_args&lt;/span&gt;(str, &lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Removing the &lt;code&gt;max_args&lt;/code&gt; cap is strongly discouraged.&lt;/p&gt;
&lt;p&gt;This method was introduced in the &lt;code&gt;v0.5.0rc29&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxencode_base64" class="anchor" aria-hidden="true" href="#ngxencode_base64"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.encode_base64&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newstr = ngx.encode_base64(str, no_padding?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Encodes &lt;code&gt;str&lt;/code&gt; to a base64 digest.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;0.9.16&lt;/code&gt; release, an optional boolean-typed &lt;code&gt;no_padding&lt;/code&gt; argument can be specified to control whether the base64 padding should be appended to the resulting digest (default to &lt;code&gt;false&lt;/code&gt;, i.e., with padding enabled).&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxdecode_base64" class="anchor" aria-hidden="true" href="#ngxdecode_base64"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.decode_base64&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newstr = ngx.decode_base64(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Decodes the &lt;code&gt;str&lt;/code&gt; argument as a base64 digest to the raw form. Returns &lt;code&gt;nil&lt;/code&gt; if &lt;code&gt;str&lt;/code&gt; is not well formed.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxcrc32_short" class="anchor" aria-hidden="true" href="#ngxcrc32_short"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.crc32_short&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;intval = ngx.crc32_short(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Calculates the CRC-32 (Cyclic Redundancy Code) digest for the &lt;code&gt;str&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;This method performs better on relatively short &lt;code&gt;str&lt;/code&gt; inputs (i.e., less than 30 ~ 60 bytes), as compared to &lt;a href="#ngxcrc32_long"&gt;ngx.crc32_long&lt;/a&gt;. The result is exactly the same as &lt;a href="#ngxcrc32_long"&gt;ngx.crc32_long&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Behind the scene, it is just a thin wrapper around the &lt;code&gt;ngx_crc32_short&lt;/code&gt; function defined in the Nginx core.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.3.1rc8&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxcrc32_long" class="anchor" aria-hidden="true" href="#ngxcrc32_long"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.crc32_long&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;intval = ngx.crc32_long(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Calculates the CRC-32 (Cyclic Redundancy Code) digest for the &lt;code&gt;str&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;This method performs better on relatively long &lt;code&gt;str&lt;/code&gt; inputs (i.e., longer than 30 ~ 60 bytes), as compared to &lt;a href="#ngxcrc32_short"&gt;ngx.crc32_short&lt;/a&gt;.  The result is exactly the same as &lt;a href="#ngxcrc32_short"&gt;ngx.crc32_short&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Behind the scene, it is just a thin wrapper around the &lt;code&gt;ngx_crc32_long&lt;/code&gt; function defined in the Nginx core.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.3.1rc8&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxhmac_sha1" class="anchor" aria-hidden="true" href="#ngxhmac_sha1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.hmac_sha1&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;digest = ngx.hmac_sha1(secret_key, str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Computes the &lt;a href="https://en.wikipedia.org/wiki/HMAC" rel="nofollow"&gt;HMAC-SHA1&lt;/a&gt; digest of the argument &lt;code&gt;str&lt;/code&gt; and turns the result using the secret key &lt;code&gt;&amp;lt;secret_key&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The raw binary form of the &lt;code&gt;HMAC-SHA1&lt;/code&gt; digest will be generated, use &lt;a href="#ngxencode_base64"&gt;ngx.encode_base64&lt;/a&gt;, for example, to encode the result to a textual representation if desired.&lt;/p&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; key &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;thisisverysecretstuff&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; src &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;some string we want to sign&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; digest &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;hmac_sha1&lt;/span&gt;(key, src)
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(ngx.&lt;span class="pl-c1"&gt;encode_base64&lt;/span&gt;(digest))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;yields the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;R/pvxzHC4NLtj7S+kXFg/NePTmk=
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This API requires the OpenSSL library enabled in the Nginx build (usually by passing the &lt;code&gt;--with-http_ssl_module&lt;/code&gt; option to the &lt;code&gt;./configure&lt;/code&gt; script).&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc29&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxmd5" class="anchor" aria-hidden="true" href="#ngxmd5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.md5&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;digest = ngx.md5(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the hexadecimal representation of the MD5 digest of the &lt;code&gt;str&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /md5 &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; { ngx.say(ngx.md5(&lt;span class="pl-s"&gt;"hello"&lt;/span&gt;)) }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;yields the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;5d41402abc4b2a76b9719d911017c592
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See &lt;a href="#ngxmd5_bin"&gt;ngx.md5_bin&lt;/a&gt; if the raw binary MD5 digest is required.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxmd5_bin" class="anchor" aria-hidden="true" href="#ngxmd5_bin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.md5_bin&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;digest = ngx.md5_bin(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the binary form of the MD5 digest of the &lt;code&gt;str&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;See &lt;a href="#ngxmd5"&gt;ngx.md5&lt;/a&gt; if the hexadecimal form of the MD5 digest is required.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsha1_bin" class="anchor" aria-hidden="true" href="#ngxsha1_bin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.sha1_bin&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;digest = ngx.sha1_bin(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the binary form of the SHA-1 digest of the &lt;code&gt;str&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;This function requires SHA-1 support in the Nginx build. (This usually just means OpenSSL should be installed while building Nginx).&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.5.0rc6&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxquote_sql_str" class="anchor" aria-hidden="true" href="#ngxquote_sql_str"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.quote_sql_str&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;quoted_value = ngx.quote_sql_str(raw_value)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a quoted SQL string literal according to the MySQL quoting rules.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxtoday" class="anchor" aria-hidden="true" href="#ngxtoday"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.today&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.today()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns current date (in the format &lt;code&gt;yyyy-mm-dd&lt;/code&gt;) from the Nginx cached time (no syscall involved unlike Lua's date library).&lt;/p&gt;
&lt;p&gt;This is the local time.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxtime" class="anchor" aria-hidden="true" href="#ngxtime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.time&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;secs = ngx.time()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the elapsed seconds from the epoch for the current time stamp from the Nginx cached time (no syscall involved unlike Lua's date library).&lt;/p&gt;
&lt;p&gt;Updates of the Nginx time cache can be forced by calling &lt;a href="#ngxupdate_time"&gt;ngx.update_time&lt;/a&gt; first.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxnow" class="anchor" aria-hidden="true" href="#ngxnow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.now&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;secs = ngx.now()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a floating-point number for the elapsed time in seconds (including milliseconds as the decimal part) from the epoch for the current time stamp from the Nginx cached time (no syscall involved unlike Lua's date library).&lt;/p&gt;
&lt;p&gt;You can forcibly update the Nginx time cache by calling &lt;a href="#ngxupdate_time"&gt;ngx.update_time&lt;/a&gt; first.&lt;/p&gt;
&lt;p&gt;This API was first introduced in &lt;code&gt;v0.3.1rc32&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxupdate_time" class="anchor" aria-hidden="true" href="#ngxupdate_time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.update_time&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.update_time()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Forcibly updates the Nginx current time cache. This call involves a syscall and thus has some overhead, so do not abuse it.&lt;/p&gt;
&lt;p&gt;This API was first introduced in &lt;code&gt;v0.3.1rc32&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxlocaltime" class="anchor" aria-hidden="true" href="#ngxlocaltime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.localtime&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.localtime()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the current time stamp (in the format &lt;code&gt;yyyy-mm-dd hh:mm:ss&lt;/code&gt;) of the Nginx cached time (no syscall involved unlike Lua's &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-os.date" rel="nofollow"&gt;os.date&lt;/a&gt; function).&lt;/p&gt;
&lt;p&gt;This is the local time.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxutctime" class="anchor" aria-hidden="true" href="#ngxutctime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.utctime&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.utctime()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the current time stamp (in the format &lt;code&gt;yyyy-mm-dd hh:mm:ss&lt;/code&gt;) of the Nginx cached time (no syscall involved unlike Lua's &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-os.date" rel="nofollow"&gt;os.date&lt;/a&gt; function).&lt;/p&gt;
&lt;p&gt;This is the UTC time.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxcookie_time" class="anchor" aria-hidden="true" href="#ngxcookie_time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.cookie_time&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.cookie_time(sec)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a formatted string can be used as the cookie expiration time. The parameter &lt;code&gt;sec&lt;/code&gt; is the time stamp in seconds (like those returned from &lt;a href="#ngxtime"&gt;ngx.time&lt;/a&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; ngx.say(ngx.cookie_time(1290079655))
     -- &lt;span class="pl-k"&gt;yields&lt;/span&gt; &lt;span class="pl-s"&gt;"Thu, 18-Nov-10 11:27:35 GMT"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxhttp_time" class="anchor" aria-hidden="true" href="#ngxhttp_time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.http_time&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.http_time(sec)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a formated string can be used as the http header time (for example, being used in &lt;code&gt;Last-Modified&lt;/code&gt; header). The parameter &lt;code&gt;sec&lt;/code&gt; is the time stamp in seconds (like those returned from &lt;a href="#ngxtime"&gt;ngx.time&lt;/a&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; ngx.say(ngx.http_time(1290079655))
     -- &lt;span class="pl-k"&gt;yields&lt;/span&gt; &lt;span class="pl-s"&gt;"Thu, 18 Nov 2010 11:27:35 GMT"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxparse_http_time" class="anchor" aria-hidden="true" href="#ngxparse_http_time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.parse_http_time&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;sec = ngx.parse_http_time(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Parse the http time string (as returned by &lt;a href="#ngxhttp_time"&gt;ngx.http_time&lt;/a&gt;) into seconds. Returns the seconds or &lt;code&gt;nil&lt;/code&gt; if the input string is in bad forms.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; time = ngx.parse_http_time(&lt;span class="pl-s"&gt;"Thu, 18 Nov 2010 11:27:35 GMT"&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; time == nil then
     ...
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxis_subrequest" class="anchor" aria-hidden="true" href="#ngxis_subrequest"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.is_subrequest&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;value = ngx.is_subrequest&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the current request is an Nginx subrequest, or &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxrematch" class="anchor" aria-hidden="true" href="#ngxrematch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.re.match&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;captures, err = ngx.re.match(subject, regex, options?, ctx?, res_table?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Matches the &lt;code&gt;subject&lt;/code&gt; string using the Perl compatible regular expression &lt;code&gt;regex&lt;/code&gt; with the optional &lt;code&gt;options&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Only the first occurrence of the match is returned, or &lt;code&gt;nil&lt;/code&gt; if no match is found. In case of errors, like seeing a bad regular expression or exceeding the PCRE stack limit, &lt;code&gt;nil&lt;/code&gt; and a string describing the error will be returned.&lt;/p&gt;
&lt;p&gt;When a match is found, a Lua table &lt;code&gt;captures&lt;/code&gt; is returned, where &lt;code&gt;captures[0]&lt;/code&gt; holds the whole substring being matched, and &lt;code&gt;captures[1]&lt;/code&gt; holds the first parenthesized sub-pattern's capturing, &lt;code&gt;captures[2]&lt;/code&gt; the second, and so on.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[0-9]+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; m &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] == "1234"&lt;/span&gt;

 &lt;span class="pl-k"&gt;else&lt;/span&gt;
     &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
         ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
         &lt;span class="pl-k"&gt;return&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;

     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;match not found&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([0-9])[0-9]+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] == "1234"&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[1] == "1"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Named captures are also supported since the &lt;code&gt;v0.7.14&lt;/code&gt; release
and are returned in the same Lua table as key-value pairs as the numbered captures.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([0-9])(?&amp;lt;remaining&amp;gt;[0-9]+)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] == "1234"&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[1] == "1"&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[2] == "234"&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m["remaining"] == "234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unmatched subpatterns will have &lt;code&gt;false&lt;/code&gt; values in their &lt;code&gt;captures&lt;/code&gt; table fields.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(world)|(hello)|(?&amp;lt;named&amp;gt;howdy)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] == "hello"&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[1] == false&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[2] == "hello"&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[3] == false&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m["named"] == false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Specify &lt;code&gt;options&lt;/code&gt; to control how the match operation will be performed. The following option characters are supported:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a             anchored mode (only match from the beginning)

d             enable the DFA mode (or the longest token match semantics).
              this requires PCRE 6.0+ or else a Lua exception will be thrown.
              first introduced in ngx_lua v0.3.1rc30.

D             enable duplicate named pattern support. This allows named
              subpattern names to be repeated, returning the captures in
              an array-like Lua table. for example,
                local m = ngx.re.match("hello, world",
                                       "(?&amp;lt;named&amp;gt;\w+), (?&amp;lt;named&amp;gt;\w+)",
                                       "D")
                -- m["named"] == {"hello", "world"}
              this option was first introduced in the v0.7.14 release.
              this option requires at least PCRE 8.12.

i             case insensitive mode (similar to Perl's /i modifier)

j             enable PCRE JIT compilation, this requires PCRE 8.21+ which
              must be built with the --enable-jit option. for optimum performance,
              this option should always be used together with the 'o' option.
              first introduced in ngx_lua v0.3.1rc30.

J             enable the PCRE Javascript compatible mode. this option was
              first introduced in the v0.7.14 release. this option requires
              at least PCRE 8.12.

m             multi-line mode (similar to Perl's /m modifier)

o             compile-once mode (similar to Perl's /o modifier),
              to enable the worker-process-level compiled-regex cache

s             single-line mode (similar to Perl's /s modifier)

u             UTF-8 mode. this requires PCRE to be built with
              the --enable-utf8 option or else a Lua exception will be thrown.

U             similar to "u" but disables PCRE's UTF-8 validity check on
              the subject string. first introduced in ngx_lua v0.8.1.

x             extended mode (similar to Perl's /x modifier)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These options can be combined:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err = ngx.re.match(&lt;span class="pl-s"&gt;"hello, world"&lt;/span&gt;, &lt;span class="pl-s"&gt;"HEL LO"&lt;/span&gt;, &lt;span class="pl-s"&gt;"ix"&lt;/span&gt;)
 -- m[0] == "hello"&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err = ngx.re.match(&lt;span class="pl-s"&gt;"hello, 美好生活"&lt;/span&gt;, &lt;span class="pl-s"&gt;"HELLO, (.{2})"&lt;/span&gt;, &lt;span class="pl-s"&gt;"iu"&lt;/span&gt;)
 -- m[0] == "hello, 美好"
 -- m[1] == "美好"&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;o&lt;/code&gt; option is useful for performance tuning, because the regex pattern in question will only be compiled once, cached in the worker-process level, and shared among all requests in the current Nginx worker process. The upper limit of the regex cache can be tuned via the &lt;a href="#lua_regex_cache_max_entries"&gt;lua_regex_cache_max_entries&lt;/a&gt; directive.&lt;/p&gt;
&lt;p&gt;The optional fourth argument, &lt;code&gt;ctx&lt;/code&gt;, can be a Lua table holding an optional &lt;code&gt;pos&lt;/code&gt; field. When the &lt;code&gt;pos&lt;/code&gt; field in the &lt;code&gt;ctx&lt;/code&gt; table argument is specified, &lt;code&gt;ngx.re.match&lt;/code&gt; will start matching from that offset (starting from 1). Regardless of the presence of the &lt;code&gt;pos&lt;/code&gt; field in the &lt;code&gt;ctx&lt;/code&gt; table, &lt;code&gt;ngx.re.match&lt;/code&gt; will always set this &lt;code&gt;pos&lt;/code&gt; field to the position &lt;em&gt;after&lt;/em&gt; the substring matched by the whole pattern in case of a successful match. When match fails, the &lt;code&gt;ctx&lt;/code&gt; table will be left intact.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; ctx &lt;span class="pl-k"&gt;=&lt;/span&gt; {}
 &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1234, hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[0-9]+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ctx)
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] = "1234"&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; ctx.pos == 5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; ctx &lt;span class="pl-k"&gt;=&lt;/span&gt; { pos &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; }
 &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1234, hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[0-9]+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ctx)
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] = "234"&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; ctx.pos == 5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;ctx&lt;/code&gt; table argument combined with the &lt;code&gt;a&lt;/code&gt; regex modifier can be used to construct a lexer atop &lt;code&gt;ngx.re.match&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that, the &lt;code&gt;options&lt;/code&gt; argument is not optional when the &lt;code&gt;ctx&lt;/code&gt; argument is specified and that the empty Lua string (&lt;code&gt;""&lt;/code&gt;) must be used as placeholder for &lt;code&gt;options&lt;/code&gt; if no meaningful regex options are required.&lt;/p&gt;
&lt;p&gt;This method requires the PCRE library enabled in Nginx (&lt;a href="#special-escaping-sequences"&gt;Known Issue With Special Escaping Sequences&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;To confirm that PCRE JIT is enabled, activate the Nginx debug log by adding the &lt;code&gt;--with-debug&lt;/code&gt; option to Nginx or OpenResty's &lt;code&gt;./configure&lt;/code&gt; script. Then, enable the "debug" error log level in &lt;code&gt;error_log&lt;/code&gt; directive. The following message will be generated if PCRE JIT is enabled:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pcre JIT compiling result: 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Starting from the &lt;code&gt;0.9.4&lt;/code&gt; release, this function also accepts a 5th argument, &lt;code&gt;res_table&lt;/code&gt;, for letting the caller supply the Lua table used to hold all the capturing results. Starting from &lt;code&gt;0.9.6&lt;/code&gt;, it is the caller's responsibility to ensure this table is empty. This is very useful for recycling Lua tables and saving GC and table allocation overhead.&lt;/p&gt;
&lt;p&gt;This feature was introduced in the &lt;code&gt;v0.2.1rc11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxrefind" class="anchor" aria-hidden="true" href="#ngxrefind"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.re.find&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;from, to, err = ngx.re.find(subject, regex, options?, ctx?, nth?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt; but only returns the beginning index (&lt;code&gt;from&lt;/code&gt;) and end index (&lt;code&gt;to&lt;/code&gt;) of the matched substring. The returned indexes are 1-based and can be fed directly into the &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-string.sub" rel="nofollow"&gt;string.sub&lt;/a&gt; API function to obtain the matched substring.&lt;/p&gt;
&lt;p&gt;In case of errors (like bad regexes or any PCRE runtime errors), this API function returns two &lt;code&gt;nil&lt;/code&gt; values followed by a string describing the error.&lt;/p&gt;
&lt;p&gt;If no match is found, this function just returns a &lt;code&gt;nil&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;Below is an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; s &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; from, to, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;find&lt;/span&gt;(s, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([0-9]+)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; from &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;from: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, from)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;to: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, to)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;matched: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;string.sub&lt;/span&gt;(s, from, to))
 &lt;span class="pl-k"&gt;else&lt;/span&gt;
     &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
         ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
         &lt;span class="pl-k"&gt;return&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;not matched!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This example produces the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from: 8
to: 11
matched: 1234
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Because this API function does not create new Lua strings nor new Lua tables, it is much faster than &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt;. It should be used wherever possible.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;0.9.3&lt;/code&gt; release, an optional 5th argument, &lt;code&gt;nth&lt;/code&gt;, is supported to specify which (submatch) capture's indexes to return. When &lt;code&gt;nth&lt;/code&gt; is 0 (which is the default), the indexes for the whole matched substring is returned; when &lt;code&gt;nth&lt;/code&gt; is 1, then the 1st submatch capture's indexes are returned; when &lt;code&gt;nth&lt;/code&gt; is 2, then the 2nd submatch capture is returned, and so on. When the specified submatch does not have a match, then two &lt;code&gt;nil&lt;/code&gt; values will be returned. Below is an example for this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; str &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; from, to &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;find&lt;/span&gt;(str, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([0-9])([0-9]+)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;nil&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; from &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;matched 2nd submatch: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;string.sub&lt;/span&gt;(str, from, to))  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; yields "234"&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This API function was first introduced in the &lt;code&gt;v0.9.2&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxregmatch" class="anchor" aria-hidden="true" href="#ngxregmatch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.re.gmatch&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;iterator, err = ngx.re.gmatch(subject, regex, options?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt;, but returns a Lua iterator instead, so as to let the user programmer iterate all the matches over the &lt;code&gt;&amp;lt;subject&amp;gt;&lt;/code&gt; string argument with the PCRE &lt;code&gt;regex&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In case of errors, like seeing an ill-formed regular expression, &lt;code&gt;nil&lt;/code&gt; and a string describing the error will be returned.&lt;/p&gt;
&lt;p&gt;Here is a small example to demonstrate its basic usage:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; iterator, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;gmatch&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, world!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([a-z]+)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;i&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; iterator &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; m
 m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;iterator&lt;/span&gt;()    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] == m[1] == "hello"&lt;/span&gt;
 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;iterator&lt;/span&gt;()    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] == m[1] == "world"&lt;/span&gt;
 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;iterator&lt;/span&gt;()    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m == nil&lt;/span&gt;
 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;More often we just put it into a Lua loop:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; it, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;gmatch&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, world!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([a-z]+)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;i&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; it &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
     &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;it&lt;/span&gt;()
     &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
         ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
         &lt;span class="pl-k"&gt;return&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;

     &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; m &lt;span class="pl-k"&gt;then&lt;/span&gt;
         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; no match found (any more)&lt;/span&gt;
         &lt;span class="pl-k"&gt;break&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;

     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; found a match&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(m[&lt;span class="pl-c1"&gt;0&lt;/span&gt;])
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(m[&lt;span class="pl-c1"&gt;1&lt;/span&gt;])
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The optional &lt;code&gt;options&lt;/code&gt; argument takes exactly the same semantics as the &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;The current implementation requires that the iterator returned should only be used in a single request. That is, one should &lt;em&gt;not&lt;/em&gt; assign it to a variable belonging to persistent namespace like a Lua package.&lt;/p&gt;
&lt;p&gt;This method requires the PCRE library enabled in Nginx (&lt;a href="#special-escaping-sequences"&gt;Known Issue With Special Escaping Sequences&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.2.1rc12&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxresub" class="anchor" aria-hidden="true" href="#ngxresub"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.re.sub&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newstr, n, err = ngx.re.sub(subject, regex, replace, options?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Substitutes the first match of the Perl compatible regular expression &lt;code&gt;regex&lt;/code&gt; on the &lt;code&gt;subject&lt;/code&gt; argument string with the string or function argument &lt;code&gt;replace&lt;/code&gt;. The optional &lt;code&gt;options&lt;/code&gt; argument has exactly the same meaning as in &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This method returns the resulting new string as well as the number of successful substitutions. In case of failures, like syntax errors in the regular expressions or the &lt;code&gt;&amp;lt;replace&amp;gt;&lt;/code&gt; string argument, it will return &lt;code&gt;nil&lt;/code&gt; and a string describing the error.&lt;/p&gt;
&lt;p&gt;When the &lt;code&gt;replace&lt;/code&gt; is a string, then it is treated as a special template for string replacement. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; newstr, n, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;sub&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([0-9])[0-9]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[$0][$1]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; newstr &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; newstr == "hello, [12][1]34"&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; n == 1&lt;/span&gt;
 &lt;span class="pl-k"&gt;else&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;where &lt;code&gt;$0&lt;/code&gt; referring to the whole substring matched by the pattern and &lt;code&gt;$1&lt;/code&gt; referring to the first parenthesized capturing substring.&lt;/p&gt;
&lt;p&gt;Curly braces can also be used to disambiguate variable names from the background string literals:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; newstr, n, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;sub&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[0-9]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;${0}00&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; newstr == "hello, 100234"&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; n == 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Literal dollar sign characters (&lt;code&gt;$&lt;/code&gt;) in the &lt;code&gt;replace&lt;/code&gt; string argument can be escaped by another dollar sign, for instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; newstr, n, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;sub&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[0-9]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$$&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; newstr == "hello, $234"&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; n == 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Do not use backlashes to escape dollar signs; it will not work as expected.&lt;/p&gt;
&lt;p&gt;When the &lt;code&gt;replace&lt;/code&gt; argument is of type "function", then it will be invoked with the "match table" as the argument to generate the replace string literal for substitution. The "match table" fed into the &lt;code&gt;replace&lt;/code&gt; function is exactly the same as the return value of &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt;. Here is an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; func &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; (&lt;span class="pl-smi"&gt;m&lt;/span&gt;)
     &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;..&lt;/span&gt; m[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;..&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;][&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;..&lt;/span&gt; m[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;..&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; newstr, n, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;sub&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;( [0-9] ) [0-9]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, func, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; newstr == "hello, [12][1]34"&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; n == 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The dollar sign characters in the return value of the &lt;code&gt;replace&lt;/code&gt; function argument are not special at all.&lt;/p&gt;
&lt;p&gt;This method requires the PCRE library enabled in Nginx (&lt;a href="#special-escaping-sequences"&gt;Known Issue With Special Escaping Sequences&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.2.1rc13&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxregsub" class="anchor" aria-hidden="true" href="#ngxregsub"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.re.gsub&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newstr, n, err = ngx.re.gsub(subject, regex, replace, options?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Just like &lt;a href="#ngxresub"&gt;ngx.re.sub&lt;/a&gt;, but does global substitution.&lt;/p&gt;
&lt;p&gt;Here is some examples:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; newstr, n, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;gsub&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([a-z])[a-z]+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[$0,$1]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;i&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; newstr &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; newstr == "[hello,h], [world,w]"&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; n == 2&lt;/span&gt;
 &lt;span class="pl-k"&gt;else&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; func &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; (&lt;span class="pl-smi"&gt;m&lt;/span&gt;)
     &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;..&lt;/span&gt; m[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;..&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;..&lt;/span&gt; m[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;..&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; newstr, n, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;gsub&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([a-z])[a-z]+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, func, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;i&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; newstr == "[hello,h], [world,w]"&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; n == 2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This method requires the PCRE library enabled in Nginx (&lt;a href="#special-escaping-sequences"&gt;Known Issue With Special Escaping Sequences&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.2.1rc15&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddict" class="anchor" aria-hidden="true" href="#ngxshareddict"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;dict = ngx.shared.DICT&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;dict = ngx.shared[name_var]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Fetching the shm-based Lua dictionary object for the shared memory zone named &lt;code&gt;DICT&lt;/code&gt; defined by the &lt;a href="#lua_shared_dict"&gt;lua_shared_dict&lt;/a&gt; directive.&lt;/p&gt;
&lt;p&gt;Shared memory zones are always shared by all the Nginx worker processes in the current Nginx server instance.&lt;/p&gt;
&lt;p&gt;The resulting object &lt;code&gt;dict&lt;/code&gt; has the following methods:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#ngxshareddictget"&gt;get&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictget_stale"&gt;get_stale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictset"&gt;set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictsafe_set"&gt;safe_set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictadd"&gt;add&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictsafe_add"&gt;safe_add&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictreplace"&gt;replace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictdelete"&gt;delete&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictincr"&gt;incr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictlpush"&gt;lpush&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictrpush"&gt;rpush&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictlpop"&gt;lpop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictrpop"&gt;rpop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictllen"&gt;llen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictttl"&gt;ttl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictexpire"&gt;expire&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictflush_all"&gt;flush_all&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictflush_expired"&gt;flush_expired&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictget_keys"&gt;get_keys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictcapacity"&gt;capacity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictfree_space"&gt;free_space&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All these methods are &lt;em&gt;atomic&lt;/em&gt; operations, that is, safe from concurrent accesses from multiple Nginx worker processes for the same &lt;code&gt;lua_shared_dict&lt;/code&gt; zone.&lt;/p&gt;
&lt;p&gt;Here is an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;http&lt;/span&gt; {
     &lt;span class="pl-k"&gt;lua_shared_dict&lt;/span&gt; dogs &lt;span class="pl-c1"&gt;10m&lt;/span&gt;;
     &lt;span class="pl-k"&gt;server&lt;/span&gt; {
         &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/set &lt;/span&gt;{
             &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
                 &lt;span class="pl-k"&gt;local&lt;/span&gt; dogs = ngx.shared.dogs
                 dogs:&lt;span class="pl-k"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;"Jim"&lt;/span&gt;, 8)
                 ngx.say(&lt;span class="pl-s"&gt;"STORED"&lt;/span&gt;)
             }
         }
         location /get {
             content_by_lua_block {
                 local dogs = ngx.shared.dogs
                 ngx.say(dogs:get(&lt;span class="pl-s"&gt;"Jim"&lt;/span&gt;))
             }
         }
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let us test it:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; $ curl localhost/set
 STORED

 $ curl localhost/get
 8

 $ curl localhost/get
 8&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The number &lt;code&gt;8&lt;/code&gt; will be consistently output when accessing &lt;code&gt;/get&lt;/code&gt; regardless of how many Nginx workers there are because the &lt;code&gt;dogs&lt;/code&gt; dictionary resides in the shared memory and visible to &lt;em&gt;all&lt;/em&gt; of the worker processes.&lt;/p&gt;
&lt;p&gt;The shared dictionary will retain its contents through a server config reload (either by sending the &lt;code&gt;HUP&lt;/code&gt; signal to the Nginx process or by using the &lt;code&gt;-s reload&lt;/code&gt; command-line option).&lt;/p&gt;
&lt;p&gt;The contents in the dictionary storage will be lost, however, when the Nginx server quits.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictget" class="anchor" aria-hidden="true" href="#ngxshareddictget"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.get&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;value, flags = ngx.shared.DICT:get(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Retrieving the value in the dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; for the key &lt;code&gt;key&lt;/code&gt;. If the key does not exist or has expired, then &lt;code&gt;nil&lt;/code&gt; will be returned.&lt;/p&gt;
&lt;p&gt;In case of errors, &lt;code&gt;nil&lt;/code&gt; and a string describing the error will be returned.&lt;/p&gt;
&lt;p&gt;The value returned will have the original data type when they were inserted into the dictionary, for example, Lua booleans, numbers, or strings.&lt;/p&gt;
&lt;p&gt;The first argument to this method must be the dictionary object itself, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; value, flags &lt;span class="pl-k"&gt;=&lt;/span&gt; cats.&lt;span class="pl-c1"&gt;get&lt;/span&gt;(cats, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or use Lua's syntactic sugar for method calls:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; value, flags &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These two forms are fundamentally equivalent.&lt;/p&gt;
&lt;p&gt;If the user flags is &lt;code&gt;0&lt;/code&gt; (the default), then no flags value will be returned.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictget_stale" class="anchor" aria-hidden="true" href="#ngxshareddictget_stale"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.get_stale&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;value, flags, stale = ngx.shared.DICT:get_stale(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#ngxshareddictget"&gt;get&lt;/a&gt; method but returns the value even if the key has already expired.&lt;/p&gt;
&lt;p&gt;Returns a 3rd value, &lt;code&gt;stale&lt;/code&gt;, indicating whether the key has expired or not.&lt;/p&gt;
&lt;p&gt;Note that the value of an expired key is not guaranteed to be available so one should never rely on the availability of expired items.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;0.8.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictset" class="anchor" aria-hidden="true" href="#ngxshareddictset"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.set&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;success, err, forcible = ngx.shared.DICT:set(key, value, exptime?, flags?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Unconditionally sets a key-value pair into the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;. Returns three values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;success&lt;/code&gt;: boolean value to indicate whether the key-value pair is stored or not.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;err&lt;/code&gt;: textual error message, can be &lt;code&gt;"no memory"&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;forcible&lt;/code&gt;: a boolean value to indicate whether other valid items have been removed forcibly when out of storage in the shared memory zone.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;value&lt;/code&gt; argument inserted can be Lua booleans, numbers, strings, or &lt;code&gt;nil&lt;/code&gt;. Their value type will also be stored into the dictionary and the same data type can be retrieved later via the &lt;a href="#ngxshareddictget"&gt;get&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;exptime&lt;/code&gt; argument specifies expiration time (in seconds) for the inserted key-value pair. The time resolution is &lt;code&gt;0.001&lt;/code&gt; seconds. If the &lt;code&gt;exptime&lt;/code&gt; takes the value &lt;code&gt;0&lt;/code&gt; (which is the default), then the item will never expire.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;flags&lt;/code&gt; argument specifies a user flags value associated with the entry to be stored. It can also be retrieved later with the value. The user flags is stored as an unsigned 32-bit integer internally. Defaults to &lt;code&gt;0&lt;/code&gt;. The user flags argument was first introduced in the &lt;code&gt;v0.5.0rc2&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;When it fails to allocate memory for the current key-value item, then &lt;code&gt;set&lt;/code&gt; will try removing existing items in the storage according to the Least-Recently Used (LRU) algorithm. Note that, LRU takes priority over expiration time here. If up to tens of existing items have been removed and the storage left is still insufficient (either due to the total capacity limit specified by &lt;a href="#lua_shared_dict"&gt;lua_shared_dict&lt;/a&gt; or memory segmentation), then the &lt;code&gt;err&lt;/code&gt; return value will be &lt;code&gt;no memory&lt;/code&gt; and &lt;code&gt;success&lt;/code&gt; will be &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If this method succeeds in storing the current item by forcibly removing other not-yet-expired items in the dictionary via LRU, the &lt;code&gt;forcible&lt;/code&gt; return value will be &lt;code&gt;true&lt;/code&gt;. If it stores the item without forcibly removing other valid items, then the return value &lt;code&gt;forcible&lt;/code&gt; will be &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The first argument to this method must be the dictionary object itself, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; succ, err, forcible &lt;span class="pl-k"&gt;=&lt;/span&gt; cats.&lt;span class="pl-c1"&gt;set&lt;/span&gt;(cats, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;it is a nice cat!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or use Lua's syntactic sugar for method calls:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; succ, err, forcible &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;it is a nice cat!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These two forms are fundamentally equivalent.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;Please note that while internally the key-value pair is set atomically, the atomicity does not go across the method call boundary.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictsafe_set" class="anchor" aria-hidden="true" href="#ngxshareddictsafe_set"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.safe_set&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.shared.DICT:safe_set(key, value, exptime?, flags?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#ngxshareddictset"&gt;set&lt;/a&gt; method, but never overrides the (least recently used) unexpired items in the store when running out of storage in the shared memory zone. In this case, it will immediately return &lt;code&gt;nil&lt;/code&gt; and the string "no memory".&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.7.18&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictadd" class="anchor" aria-hidden="true" href="#ngxshareddictadd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.add&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;success, err, forcible = ngx.shared.DICT:add(key, value, exptime?, flags?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Just like the &lt;a href="#ngxshareddictset"&gt;set&lt;/a&gt; method, but only stores the key-value pair into the dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; if the key does &lt;em&gt;not&lt;/em&gt; exist.&lt;/p&gt;
&lt;p&gt;If the &lt;code&gt;key&lt;/code&gt; argument already exists in the dictionary (and not expired for sure), the &lt;code&gt;success&lt;/code&gt; return value will be &lt;code&gt;false&lt;/code&gt; and the &lt;code&gt;err&lt;/code&gt; return value will be &lt;code&gt;"exists"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictsafe_add" class="anchor" aria-hidden="true" href="#ngxshareddictsafe_add"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.safe_add&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.shared.DICT:safe_add(key, value, exptime?, flags?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#ngxshareddictadd"&gt;add&lt;/a&gt; method, but never overrides the (least recently used) unexpired items in the store when running out of storage in the shared memory zone. In this case, it will immediately return &lt;code&gt;nil&lt;/code&gt; and the string "no memory".&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.7.18&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictreplace" class="anchor" aria-hidden="true" href="#ngxshareddictreplace"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.replace&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;success, err, forcible = ngx.shared.DICT:replace(key, value, exptime?, flags?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Just like the &lt;a href="#ngxshareddictset"&gt;set&lt;/a&gt; method, but only stores the key-value pair into the dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; if the key &lt;em&gt;does&lt;/em&gt; exist.&lt;/p&gt;
&lt;p&gt;If the &lt;code&gt;key&lt;/code&gt; argument does &lt;em&gt;not&lt;/em&gt; exist in the dictionary (or expired already), the &lt;code&gt;success&lt;/code&gt; return value will be &lt;code&gt;false&lt;/code&gt; and the &lt;code&gt;err&lt;/code&gt; return value will be &lt;code&gt;"not found"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictdelete" class="anchor" aria-hidden="true" href="#ngxshareddictdelete"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.delete&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.shared.DICT:delete(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Unconditionally removes the key-value pair from the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is equivalent to &lt;code&gt;ngx.shared.DICT:set(key, nil)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictincr" class="anchor" aria-hidden="true" href="#ngxshareddictincr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.incr&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newval, err, forcible? = ngx.shared.DICT:incr(key, value, init?, init_ttl?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;optional requirement:&lt;/strong&gt; &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Increments the (numerical) value for &lt;code&gt;key&lt;/code&gt; in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; by the step value &lt;code&gt;value&lt;/code&gt;. Returns the new resulting number if the operation is successfully completed or &lt;code&gt;nil&lt;/code&gt; and an error message otherwise.&lt;/p&gt;
&lt;p&gt;When the key does not exist or has already expired in the shared dictionary,&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;if the &lt;code&gt;init&lt;/code&gt; argument is not specified or takes the value &lt;code&gt;nil&lt;/code&gt;, this method will return &lt;code&gt;nil&lt;/code&gt; and the error string &lt;code&gt;"not found"&lt;/code&gt;, or&lt;/li&gt;
&lt;li&gt;if the &lt;code&gt;init&lt;/code&gt; argument takes a number value, this method will create a new &lt;code&gt;key&lt;/code&gt; with the value &lt;code&gt;init + value&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Like the &lt;a href="#ngxshareddictadd"&gt;add&lt;/a&gt; method, it also overrides the (least recently used) unexpired items in the store when running out of storage in the shared memory zone.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;init_ttl&lt;/code&gt; argument specifies expiration time (in seconds) of the value when it is initialized via the &lt;code&gt;init&lt;/code&gt; argument. The time resolution is &lt;code&gt;0.001&lt;/code&gt; seconds. If &lt;code&gt;init_ttl&lt;/code&gt; takes the value &lt;code&gt;0&lt;/code&gt; (which is the default), then the item will never expire. This argument cannot be provided without providing the &lt;code&gt;init&lt;/code&gt; argument as well, and has no effect if the value already exists (e.g., if it was previously inserted via &lt;a href="#ngxshareddictset"&gt;set&lt;/a&gt; or the likes).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Usage of the &lt;code&gt;init_ttl&lt;/code&gt; argument requires the &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt; modules from the &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library. Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.core&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; newval, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;incr&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;black_cats&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.1&lt;/span&gt;)

 &lt;span class="pl-c1"&gt;print&lt;/span&gt;(newval) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; 1&lt;/span&gt;

 ngx.&lt;span class="pl-c1"&gt;sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)

 &lt;span class="pl-k"&gt;local&lt;/span&gt; val, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;black_cats&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c1"&gt;print&lt;/span&gt;(val) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;forcible&lt;/code&gt; return value will always be &lt;code&gt;nil&lt;/code&gt; when the &lt;code&gt;init&lt;/code&gt; argument is not specified.&lt;/p&gt;
&lt;p&gt;If this method succeeds in storing the current item by forcibly removing other not-yet-expired items in the dictionary via LRU, the &lt;code&gt;forcible&lt;/code&gt; return value will be &lt;code&gt;true&lt;/code&gt;. If it stores the item without forcibly removing other valid items, then the return value &lt;code&gt;forcible&lt;/code&gt; will be &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If the original value is not a valid Lua number in the dictionary, it will return &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;"not a number"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;value&lt;/code&gt; argument and &lt;code&gt;init&lt;/code&gt; argument can be any valid Lua numbers, like negative numbers or floating-point numbers.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;init&lt;/code&gt; parameter was first added in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;init_ttl&lt;/code&gt; parameter was introduced in the &lt;code&gt;v0.10.12rc2&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictlpush" class="anchor" aria-hidden="true" href="#ngxshareddictlpush"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.lpush&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;length, err = ngx.shared.DICT:lpush(key, value)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Inserts the specified (numerical or string) &lt;code&gt;value&lt;/code&gt; at the head of the list named &lt;code&gt;key&lt;/code&gt; in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;. Returns the number of elements in the list after the push operation.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;key&lt;/code&gt; does not exist, it is created as an empty list before performing the push operation. When the &lt;code&gt;key&lt;/code&gt; already takes a value that is not a list, it will return &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;"value not a list"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It never overrides the (least recently used) unexpired items in the store when running out of storage in the shared memory zone. In this case, it will immediately return &lt;code&gt;nil&lt;/code&gt; and the string "no memory".&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictrpush" class="anchor" aria-hidden="true" href="#ngxshareddictrpush"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.rpush&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;length, err = ngx.shared.DICT:rpush(key, value)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#ngxshareddictlpush"&gt;lpush&lt;/a&gt; method, but inserts the specified (numerical or string) &lt;code&gt;value&lt;/code&gt; at the tail of the list named &lt;code&gt;key&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictlpop" class="anchor" aria-hidden="true" href="#ngxshareddictlpop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.lpop&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;val, err = ngx.shared.DICT:lpop(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Removes and returns the first element of the list named &lt;code&gt;key&lt;/code&gt; in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;key&lt;/code&gt; does not exist, it will return &lt;code&gt;nil&lt;/code&gt;. When the &lt;code&gt;key&lt;/code&gt; already takes a value that is not a list, it will return &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;"value not a list"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictrpop" class="anchor" aria-hidden="true" href="#ngxshareddictrpop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.rpop&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;val, err = ngx.shared.DICT:rpop(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Removes and returns the last element of the list named &lt;code&gt;key&lt;/code&gt; in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;key&lt;/code&gt; does not exist, it will return &lt;code&gt;nil&lt;/code&gt;. When the &lt;code&gt;key&lt;/code&gt; already takes a value that is not a list, it will return &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;"value not a list"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictllen" class="anchor" aria-hidden="true" href="#ngxshareddictllen"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.llen&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;len, err = ngx.shared.DICT:llen(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the number of elements in the list named &lt;code&gt;key&lt;/code&gt; in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If key does not exist, it is interpreted as an empty list and 0 is returned. When the &lt;code&gt;key&lt;/code&gt; already takes a value that is not a list, it will return &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;"value not a list"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictttl" class="anchor" aria-hidden="true" href="#ngxshareddictttl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.ttl&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ttl, err = ngx.shared.DICT:ttl(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;requires:&lt;/strong&gt; &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Retrieves the remaining TTL (time-to-live in seconds) of a key-value pair in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;. Returns the TTL as a number if the operation is successfully completed or &lt;code&gt;nil&lt;/code&gt; and an error message otherwise.&lt;/p&gt;
&lt;p&gt;If the key does not exist (or has already expired), this method will return &lt;code&gt;nil&lt;/code&gt; and the error string &lt;code&gt;"not found"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The TTL is originally determined by the &lt;code&gt;exptime&lt;/code&gt; argument of the &lt;a href="#ngxshareddictset"&gt;set&lt;/a&gt;, &lt;a href="#ngxshareddictadd"&gt;add&lt;/a&gt;, &lt;a href="#ngxshareddictreplace"&gt;replace&lt;/a&gt; (and the likes) methods. It has a time resolution of &lt;code&gt;0.001&lt;/code&gt; seconds. A value of &lt;code&gt;0&lt;/code&gt; means that the item will never expire.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.core&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; succ, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a nice cat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;)

 ngx.&lt;span class="pl-c1"&gt;sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)

 &lt;span class="pl-k"&gt;local&lt;/span&gt; ttl, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;ttl&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(ttl) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; 0.3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This method requires the &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt; modules from the &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictexpire" class="anchor" aria-hidden="true" href="#ngxshareddictexpire"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.expire&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;success, err = ngx.shared.DICT:expire(key, exptime)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;requires:&lt;/strong&gt; &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Updates the &lt;code&gt;exptime&lt;/code&gt; (in second) of a key-value pair in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;. Returns a boolean indicating success if the operation completes or &lt;code&gt;nil&lt;/code&gt; and an error message otherwise.&lt;/p&gt;
&lt;p&gt;If the key does not exist, this method will return &lt;code&gt;nil&lt;/code&gt; and the error string &lt;code&gt;"not found"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;exptime&lt;/code&gt; argument has a resolution of &lt;code&gt;0.001&lt;/code&gt; seconds. If &lt;code&gt;exptime&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;, then the item will never expire.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.core&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; succ, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a nice cat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.1&lt;/span&gt;)

 succ, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;expire&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;)

 ngx.&lt;span class="pl-c1"&gt;sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)

 &lt;span class="pl-k"&gt;local&lt;/span&gt; val, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(val) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; "a nice cat"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This method requires the &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt; modules from the &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictflush_all" class="anchor" aria-hidden="true" href="#ngxshareddictflush_all"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.flush_all&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.shared.DICT:flush_all()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Flushes out all the items in the dictionary. This method does not actuall free up all the memory blocks in the dictionary but just marks all the existing items as expired.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddictflush_expired"&gt;ngx.shared.DICT.flush_expired&lt;/a&gt; and &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictflush_expired" class="anchor" aria-hidden="true" href="#ngxshareddictflush_expired"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.flush_expired&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;flushed = ngx.shared.DICT:flush_expired(max_count?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Flushes out the expired items in the dictionary, up to the maximal number specified by the optional &lt;code&gt;max_count&lt;/code&gt; argument. When the &lt;code&gt;max_count&lt;/code&gt; argument is given &lt;code&gt;0&lt;/code&gt; or not given at all, then it means unlimited. Returns the number of items that have actually been flushed.&lt;/p&gt;
&lt;p&gt;Unlike the &lt;a href="#ngxshareddictflush_all"&gt;flush_all&lt;/a&gt; method, this method actually frees up the memory used by the expired items.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.6.3&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddictflush_all"&gt;ngx.shared.DICT.flush_all&lt;/a&gt; and &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictget_keys" class="anchor" aria-hidden="true" href="#ngxshareddictget_keys"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.get_keys&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;keys = ngx.shared.DICT:get_keys(max_count?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Fetch a list of the keys from the dictionary, up to &lt;code&gt;&amp;lt;max_count&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;By default, only the first 1024 keys (if any) are returned. When the &lt;code&gt;&amp;lt;max_count&amp;gt;&lt;/code&gt; argument is given the value &lt;code&gt;0&lt;/code&gt;, then all the keys will be returned even there is more than 1024 keys in the dictionary.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CAUTION&lt;/strong&gt; Avoid calling this method on dictionaries with a very large number of keys as it may lock the dictionary for significant amount of time and block Nginx worker processes trying to access the dictionary.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.7.3&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictcapacity" class="anchor" aria-hidden="true" href="#ngxshareddictcapacity"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.capacity&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;capacity_bytes = ngx.shared.DICT:capacity()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;requires:&lt;/strong&gt; &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Retrieves the capacity in bytes for the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; declared with
the &lt;a href="#lua_shared_dict"&gt;lua_shared_dict&lt;/a&gt; directive.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.core.shdict&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; capacity_bytes &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;capacity&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This method requires the &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt; modules from the &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;This feature requires at least Nginx core version &lt;code&gt;0.7.3&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictfree_space" class="anchor" aria-hidden="true" href="#ngxshareddictfree_space"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.free_space&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;free_page_bytes = ngx.shared.DICT:free_space()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;requires:&lt;/strong&gt; &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Retrieves the free page size in bytes for the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The memory for ngx.shared.DICT is allocated via the Nginx slab allocator which has each slot for
data size ranges like ~8, 9~16, 17~32, ..., 1025~2048, 2048~ bytes. And pages are assigned to a slot if there
is no room in already assigned pages for the slot.&lt;/p&gt;
&lt;p&gt;So even if the return value of the &lt;code&gt;free_space&lt;/code&gt; method is zero, there may be room in already assigned pages, so
you may successfully set a new key value pair to the shared dict without getting &lt;code&gt;true&lt;/code&gt; for &lt;code&gt;forcible&lt;/code&gt; or
non nil &lt;code&gt;err&lt;/code&gt; from the &lt;code&gt;ngx.shared.DICT.set&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On the other hand, if already assigned pages for a slot are full and a new key value pair is added to the
slot and there is no free page, you may get &lt;code&gt;true&lt;/code&gt; for &lt;code&gt;forcible&lt;/code&gt; or non nil &lt;code&gt;err&lt;/code&gt; from the
&lt;code&gt;ngx.shared.DICT.set&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.core.shdict&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; free_page_bytes &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;free_space&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This method requires the &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt; modules from the &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;This feature requires at least Nginx core version &lt;code&gt;1.11.7&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsocketudp" class="anchor" aria-hidden="true" href="#ngxsocketudp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.socket.udp&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;udpsock = ngx.socket.udp()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Creates and returns a UDP or datagram-oriented unix domain socket object (also known as one type of the "cosocket" objects). The following methods are supported on this object:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#udpsocksetpeername"&gt;setpeername&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsocksend"&gt;send&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsockreceive"&gt;receive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsockclose"&gt;close&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsocksettimeout"&gt;settimeout&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is intended to be compatible with the UDP API of the &lt;a href="http://w3.impa.br/~diego/software/luasocket/udp.html" rel="nofollow"&gt;LuaSocket&lt;/a&gt; library but is 100% nonblocking out of the box.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-udpsocksetpeername" class="anchor" aria-hidden="true" href="#udpsocksetpeername"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;udpsock:setpeername&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = udpsock:setpeername(host, port)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = udpsock:setpeername("unix:/path/to/unix-domain.socket")&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Attempts to connect a UDP socket object to a remote server or to a datagram unix domain socket file. Because the datagram protocol is actually connection-less, this method does not really establish a "connection", but only just set the name of the remote peer for subsequent read/write operations.&lt;/p&gt;
&lt;p&gt;Both IP addresses and domain names can be specified as the &lt;code&gt;host&lt;/code&gt; argument. In case of domain names, this method will use Nginx core's dynamic resolver to parse the domain name without blocking and it is required to configure the &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#resolver" rel="nofollow"&gt;resolver&lt;/a&gt; directive in the &lt;code&gt;nginx.conf&lt;/code&gt; file like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;resolver&lt;/span&gt; &lt;span class="pl-s"&gt;8.8.8.8&lt;/span&gt;;  &lt;span class="pl-c"&gt;# use Google's public DNS nameserver&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the nameserver returns multiple IP addresses for the host name, this method will pick up one randomly.&lt;/p&gt;
&lt;p&gt;In case of error, the method returns &lt;code&gt;nil&lt;/code&gt; followed by a string describing the error. In case of success, the method returns &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here is an example for connecting to a UDP (memcached) server:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;resolver&lt;/span&gt; &lt;span class="pl-s"&gt;8.8.8.8&lt;/span&gt;;

     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; sock = ngx.socket.udp()
         &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err = sock:setpeername(&lt;span class="pl-s"&gt;"my.memcached.server.domain"&lt;/span&gt;, 11211)
         &lt;span class="pl-k"&gt;if&lt;/span&gt; not ok then
             ngx.say("&lt;span class="pl-k"&gt;failed&lt;/span&gt; to connect to memcached: &lt;span class="pl-s"&gt;", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;             return&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.say("&lt;/span&gt;successfully connected to memcached!&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;         sock:close()&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since the &lt;code&gt;v0.7.18&lt;/code&gt; release, connecting to a datagram unix domain socket file is also possible on Linux:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; sock &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;socket&lt;/span&gt;.&lt;span class="pl-c1"&gt;udp&lt;/span&gt;()
 &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;setpeername&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;unix:/tmp/some-datagram-service.sock&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to connect to the datagram unix domain socket: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;assuming the datagram service is listening on the unix domain socket file &lt;code&gt;/tmp/some-datagram-service.sock&lt;/code&gt; and the client socket will use the "autobind" feature on Linux.&lt;/p&gt;
&lt;p&gt;Calling this method on an already connected socket object will cause the original connection to be closed first.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-udpsocksend" class="anchor" aria-hidden="true" href="#udpsocksend"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;udpsock:send&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = udpsock:send(data)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sends data on the current UDP or datagram unix domain socket object.&lt;/p&gt;
&lt;p&gt;In case of success, it returns &lt;code&gt;1&lt;/code&gt;. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error.&lt;/p&gt;
&lt;p&gt;The input argument &lt;code&gt;data&lt;/code&gt; can either be a Lua string or a (nested) Lua table holding string fragments. In case of table arguments, this method will copy all the string elements piece by piece to the underlying Nginx socket send buffers, which is usually optimal than doing string concatenation operations on the Lua land.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-udpsockreceive" class="anchor" aria-hidden="true" href="#udpsockreceive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;udpsock:receive&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;data, err = udpsock:receive(size?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Receives data from the UDP or datagram unix domain socket object with an optional receive buffer size argument, &lt;code&gt;size&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This method is a synchronous operation and is 100% nonblocking.&lt;/p&gt;
&lt;p&gt;In case of success, it returns the data received; in case of error, it returns &lt;code&gt;nil&lt;/code&gt; with a string describing the error.&lt;/p&gt;
&lt;p&gt;If the &lt;code&gt;size&lt;/code&gt; argument is specified, then this method will use this size as the receive buffer size. But when this size is greater than &lt;code&gt;8192&lt;/code&gt;, then &lt;code&gt;8192&lt;/code&gt; will be used instead.&lt;/p&gt;
&lt;p&gt;If no argument is specified, then the maximal buffer size, &lt;code&gt;8192&lt;/code&gt; is assumed.&lt;/p&gt;
&lt;p&gt;Timeout for the reading operation is controlled by the &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt; config directive and the &lt;a href="#udpsocksettimeout"&gt;settimeout&lt;/a&gt; method. And the latter takes priority. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; sock:&lt;span class="pl-c1"&gt;settimeout&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one second timeout&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; data, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;receive&lt;/span&gt;()
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; data &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to read a packet: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;successfully read a packet: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, data)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is important here to call the &lt;a href="#udpsocksettimeout"&gt;settimeout&lt;/a&gt; method &lt;em&gt;before&lt;/em&gt; calling this method.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-udpsockclose" class="anchor" aria-hidden="true" href="#udpsockclose"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;udpsock:close&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = udpsock:close()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Closes the current UDP or datagram unix domain socket. It returns the &lt;code&gt;1&lt;/code&gt; in case of success and returns &lt;code&gt;nil&lt;/code&gt; with a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;Socket objects that have not invoked this method (and associated connections) will be closed when the socket object is released by the Lua GC (Garbage Collector) or the current client HTTP request finishes processing.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-udpsocksettimeout" class="anchor" aria-hidden="true" href="#udpsocksettimeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;udpsock:settimeout&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;udpsock:settimeout(time)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Set the timeout value in milliseconds for subsequent socket operations (like &lt;a href="#udpsockreceive"&gt;receive&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Settings done by this method takes priority over those config directives, like &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsocketstream" class="anchor" aria-hidden="true" href="#ngxsocketstream"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.socket.stream&lt;/h2&gt;
&lt;p&gt;Just an alias to &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt;. If the stream-typed cosocket may also connect to a unix domain
socket, then this API name is preferred.&lt;/p&gt;
&lt;p&gt;This API function was first added to the &lt;code&gt;v0.10.1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsockettcp" class="anchor" aria-hidden="true" href="#ngxsockettcp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.socket.tcp&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock = ngx.socket.tcp()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Creates and returns a TCP or stream-oriented unix domain socket object (also known as one type of the "cosocket" objects). The following methods are supported on this object:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksslhandshake"&gt;sslhandshake&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksend"&gt;send&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockreceive"&gt;receive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockclose"&gt;close&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksetoption"&gt;setoption&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockreceiveany"&gt;receiveany&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockreceiveuntil"&gt;receiveuntil&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksetkeepalive"&gt;setkeepalive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockgetreusedtimes"&gt;getreusedtimes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is intended to be compatible with the TCP API of the &lt;a href="http://w3.impa.br/~diego/software/luasocket/tcp.html" rel="nofollow"&gt;LuaSocket&lt;/a&gt; library but is 100% nonblocking out of the box. Also, we introduce some new APIs to provide more functionalities.&lt;/p&gt;
&lt;p&gt;The cosocket object created by this API function has exactly the same lifetime as the Lua handler creating it. So never pass the cosocket object to any other Lua handler (including ngx.timer callback functions) and never share the cosocket object between different Nginx requests.&lt;/p&gt;
&lt;p&gt;For every cosocket object's underlying connection, if you do not
explicitly close it (via &lt;a href="#tcpsockclose"&gt;close&lt;/a&gt;) or put it back to the connection
pool (via &lt;a href="#tcpsocksetkeepalive"&gt;setkeepalive&lt;/a&gt;), then it is automatically closed when one of
the following two events happens:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the current request handler completes, or&lt;/li&gt;
&lt;li&gt;the Lua cosocket object value gets collected by the Lua GC.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fatal errors in cosocket operations always automatically close the current
connection (note that, read timeout error is the only error that is
not fatal), and if you call &lt;a href="#tcpsockclose"&gt;close&lt;/a&gt; on a closed connection, you will get
the "closed" error.&lt;/p&gt;
&lt;p&gt;Starting from the &lt;code&gt;0.9.9&lt;/code&gt; release, the cosocket object here is full-duplex, that is, a reader "light thread" and a writer "light thread" can operate on a single cosocket object simultaneously (both "light threads" must belong to the same Lua handler though, see reasons above). But you cannot have two "light threads" both reading (or writing or connecting) the same cosocket, otherwise you might get an error like "socket busy reading" when calling the methods of the cosocket object.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxsocketudp"&gt;ngx.socket.udp&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsockconnect" class="anchor" aria-hidden="true" href="#tcpsockconnect"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:connect&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = tcpsock:connect(host, port, options_table?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = tcpsock:connect("unix:/path/to/unix-domain.socket", options_table?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Attempts to connect a TCP socket object to a remote server or to a stream unix domain socket file without blocking.&lt;/p&gt;
&lt;p&gt;Before actually resolving the host name and connecting to the remote backend, this method will always look up the connection pool for matched idle connections created by previous calls of this method (or the &lt;a href="#ngxsocketconnect"&gt;ngx.socket.connect&lt;/a&gt; function).&lt;/p&gt;
&lt;p&gt;Both IP addresses and domain names can be specified as the &lt;code&gt;host&lt;/code&gt; argument. In case of domain names, this method will use Nginx core's dynamic resolver to parse the domain name without blocking and it is required to configure the &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#resolver" rel="nofollow"&gt;resolver&lt;/a&gt; directive in the &lt;code&gt;nginx.conf&lt;/code&gt; file like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;resolver&lt;/span&gt; &lt;span class="pl-s"&gt;8.8.8.8&lt;/span&gt;;  &lt;span class="pl-c"&gt;# use Google's public DNS nameserver&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the nameserver returns multiple IP addresses for the host name, this method will pick up one randomly.&lt;/p&gt;
&lt;p&gt;In case of error, the method returns &lt;code&gt;nil&lt;/code&gt; followed by a string describing the error. In case of success, the method returns &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here is an example for connecting to a TCP server:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;resolver&lt;/span&gt; &lt;span class="pl-s"&gt;8.8.8.8&lt;/span&gt;;

     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; sock = ngx.socket.tcp()
         &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err = sock:connect(&lt;span class="pl-s"&gt;"www.google.com"&lt;/span&gt;, 80)
         &lt;span class="pl-k"&gt;if&lt;/span&gt; not ok then
             ngx.say("&lt;span class="pl-k"&gt;failed&lt;/span&gt; to connect to google: &lt;span class="pl-s"&gt;", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;             return&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.say("&lt;/span&gt;successfully connected to google!&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;         sock:close()&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Connecting to a Unix Domain Socket file is also possible:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; sock &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;socket&lt;/span&gt;.&lt;span class="pl-c1"&gt;tcp&lt;/span&gt;()
 &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;unix:/tmp/memcached.sock&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to connect to the memcached unix domain socket: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;assuming memcached (or something else) is listening on the unix domain socket file &lt;code&gt;/tmp/memcached.sock&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Timeout for the connecting operation is controlled by the &lt;a href="#lua_socket_connect_timeout"&gt;lua_socket_connect_timeout&lt;/a&gt; config directive and the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method. And the latter takes priority. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; sock &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;socket&lt;/span&gt;.&lt;span class="pl-c1"&gt;tcp&lt;/span&gt;()
 sock:&lt;span class="pl-c1"&gt;settimeout&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one second timeout&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;(host, port)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is important here to call the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method &lt;em&gt;before&lt;/em&gt; calling this method.&lt;/p&gt;
&lt;p&gt;Calling this method on an already connected socket object will cause the original connection to be closed first.&lt;/p&gt;
&lt;p&gt;An optional Lua table can be specified as the last argument to this method to specify various connect options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pool&lt;/code&gt;
specify a custom name for the connection pool being used. If omitted, then the connection pool name will be generated from the string template &lt;code&gt;"&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;"&lt;/code&gt; or &lt;code&gt;"&amp;lt;unix-socket-path&amp;gt;"&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pool_size&lt;/code&gt;
specify the size of the connection pool. If omitted and no
&lt;code&gt;backlog&lt;/code&gt; option was provided, no pool will be created. If omitted
but &lt;code&gt;backlog&lt;/code&gt; was provided, the pool will be created with a default
size equal to the value of the &lt;a href="#lua_socket_pool_size"&gt;lua_socket_pool_size&lt;/a&gt;
directive.
The connection pool holds up to &lt;code&gt;pool_size&lt;/code&gt; alive connections
ready to be reused by subsequent calls to &lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;, but
note that there is no upper limit to the total number of opened connections
outside of the pool. If you need to restrict the total number of opened
connections, specify the &lt;code&gt;backlog&lt;/code&gt; option.
When the connection pool would exceed its size limit, the least recently used
(kept-alive) connection already in the pool will be closed to make room for
the current connection.
Note that the cosocket connection pool is per Nginx worker process rather
than per Nginx server instance, so the size limit specified here also applies
to every single Nginx worker process. Also note that the size of the connection
pool cannot be changed once it has been created.
This option was first introduced in the &lt;code&gt;v0.10.14&lt;/code&gt; release.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;backlog&lt;/code&gt;
if specified, this module will limit the total number of opened connections
for this pool. No more connections than &lt;code&gt;pool_size&lt;/code&gt; can be opened
for this pool at any time. If the connection pool is full, subsequent
connect operations will be queued into a queue equal to this option's
value (the "backlog" queue).
If the number of queued connect operations is equal to &lt;code&gt;backlog&lt;/code&gt;,
subsequent connect operations will fail and return &lt;code&gt;nil&lt;/code&gt; plus the
error string &lt;code&gt;"too many waiting connect operations"&lt;/code&gt;.
The queued connect operations will be resumed once the number of connections
in the pool is less than &lt;code&gt;pool_size&lt;/code&gt;.
The queued connect operation will abort once they have been queued for more
than &lt;code&gt;connect_timeout&lt;/code&gt;, controlled by
&lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt;, and will return &lt;code&gt;nil&lt;/code&gt; plus
the error string &lt;code&gt;"timeout"&lt;/code&gt;.
This option was first introduced in the &lt;code&gt;v0.10.14&lt;/code&gt; release.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The support for the options table argument was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsocksslhandshake" class="anchor" aria-hidden="true" href="#tcpsocksslhandshake"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:sslhandshake&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;session, err = tcpsock:sslhandshake(reused_session?, server_name?, ssl_verify?, send_status_req?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Does SSL/TLS handshake on the currently established connection.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;reused_session&lt;/code&gt; argument can take a former SSL
session userdata returned by a previous &lt;code&gt;sslhandshake&lt;/code&gt;
call for exactly the same target. For short-lived connections, reusing SSL
sessions can usually speed up the handshake by one order by magnitude but it
is not so useful if the connection pool is enabled. This argument defaults to
&lt;code&gt;nil&lt;/code&gt;. If this argument takes the boolean &lt;code&gt;false&lt;/code&gt; value, no SSL session
userdata would return by this call and only a Lua boolean will be returned as
the first return value; otherwise the current SSL session will
always be returned as the first argument in case of successes.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;server_name&lt;/code&gt; argument is used to specify the server
name for the new TLS extension Server Name Indication (SNI). Use of SNI can
make different servers share the same IP address on the server side. Also,
when SSL verification is enabled, this &lt;code&gt;server_name&lt;/code&gt; argument is
also used to validate the server name specified in the server certificate sent from
the remote.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;ssl_verify&lt;/code&gt; argument takes a Lua boolean value to
control whether to perform SSL verification. When set to &lt;code&gt;true&lt;/code&gt;, the server
certificate will be verified according to the CA certificates specified by
the &lt;a href="#lua_ssl_trusted_certificate"&gt;lua_ssl_trusted_certificate&lt;/a&gt; directive.
You may also need to adjust the &lt;a href="#lua_ssl_verify_depth"&gt;lua_ssl_verify_depth&lt;/a&gt;
directive to control how deep we should follow along the certificate chain.
Also, when the &lt;code&gt;ssl_verify&lt;/code&gt; argument is true and the
&lt;code&gt;server_name&lt;/code&gt; argument is also specified, the latter will be used
to validate the server name in the server certificate.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;send_status_req&lt;/code&gt; argument takes a boolean that controls whether to send
the OCSP status request in the SSL handshake request (which is for requesting OCSP stapling).&lt;/p&gt;
&lt;p&gt;For connections that have already done SSL/TLS handshake, this method returns
immediately.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.9.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsocksend" class="anchor" aria-hidden="true" href="#tcpsocksend"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:send&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;bytes, err = tcpsock:send(data)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sends data without blocking on the current TCP or Unix Domain Socket connection.&lt;/p&gt;
&lt;p&gt;This method is a synchronous operation that will not return until &lt;em&gt;all&lt;/em&gt; the data has been flushed into the system socket send buffer or an error occurs.&lt;/p&gt;
&lt;p&gt;In case of success, it returns the total number of bytes that have been sent. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error.&lt;/p&gt;
&lt;p&gt;The input argument &lt;code&gt;data&lt;/code&gt; can either be a Lua string or a (nested) Lua table holding string fragments. In case of table arguments, this method will copy all the string elements piece by piece to the underlying Nginx socket send buffers, which is usually optimal than doing string concatenation operations on the Lua land.&lt;/p&gt;
&lt;p&gt;Timeout for the sending operation is controlled by the &lt;a href="#lua_socket_send_timeout"&gt;lua_socket_send_timeout&lt;/a&gt; config directive and the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method. And the latter takes priority. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; sock:&lt;span class="pl-c1"&gt;settimeout&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one second timeout&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; bytes, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;send&lt;/span&gt;(request)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is important here to call the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method &lt;em&gt;before&lt;/em&gt; calling this method.&lt;/p&gt;
&lt;p&gt;In case of any connection errors, this method always automatically closes the current connection.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsockreceive" class="anchor" aria-hidden="true" href="#tcpsockreceive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:receive&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;data, err, partial = tcpsock:receive(size)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;data, err, partial = tcpsock:receive(pattern?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Receives data from the connected socket according to the reading pattern or size.&lt;/p&gt;
&lt;p&gt;This method is a synchronous operation just like the &lt;a href="#tcpsocksend"&gt;send&lt;/a&gt; method and is 100% nonblocking.&lt;/p&gt;
&lt;p&gt;In case of success, it returns the data received; in case of error, it returns &lt;code&gt;nil&lt;/code&gt; with a string describing the error and the partial data received so far.&lt;/p&gt;
&lt;p&gt;If a number-like argument is specified (including strings that look like numbers), then it is interpreted as a size. This method will not return until it reads exactly this size of data or an error occurs.&lt;/p&gt;
&lt;p&gt;If a non-number-like string argument is specified, then it is interpreted as a "pattern". The following patterns are supported:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;'*a'&lt;/code&gt;: reads from the socket until the connection is closed. No end-of-line translation is performed;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;'*l'&lt;/code&gt;: reads a line of text from the socket. The line is terminated by a &lt;code&gt;Line Feed&lt;/code&gt; (LF) character (ASCII 10), optionally preceded by a &lt;code&gt;Carriage Return&lt;/code&gt; (CR) character (ASCII 13). The CR and LF characters are not included in the returned line. In fact, all CR characters are ignored by the pattern.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If no argument is specified, then it is assumed to be the pattern &lt;code&gt;'*l'&lt;/code&gt;, that is, the line reading pattern.&lt;/p&gt;
&lt;p&gt;Timeout for the reading operation is controlled by the &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt; config directive and the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method. And the latter takes priority. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; sock:&lt;span class="pl-c1"&gt;settimeout&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one second timeout&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; line, err, partial &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;receive&lt;/span&gt;()
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; line &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to read a line: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;successfully read a line: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, line)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is important here to call the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method &lt;em&gt;before&lt;/em&gt; calling this method.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;v0.8.8&lt;/code&gt; release, this method no longer automatically closes the current connection when the read timeout error happens. For other connection errors, this method always automatically closes the connection.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsockreceiveany" class="anchor" aria-hidden="true" href="#tcpsockreceiveany"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:receiveany&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;data, err = tcpsock:receiveany(max)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns any data received by the connected socket, at most &lt;code&gt;max&lt;/code&gt; bytes.&lt;/p&gt;
&lt;p&gt;This method is a synchronous operation just like the &lt;a href="#tcpsocksend"&gt;send&lt;/a&gt; method and is 100% nonblocking.&lt;/p&gt;
&lt;p&gt;In case of success, it returns the data received; in case of error, it returns &lt;code&gt;nil&lt;/code&gt; with a string describing the error.&lt;/p&gt;
&lt;p&gt;If the received data is more than this size, this method will return with exactly this size of data.
The remaining data in the underlying receive buffer could be returned in the next reading operation.&lt;/p&gt;
&lt;p&gt;Timeout for the reading operation is controlled by the &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt; config directive and the &lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt; method. And the latter takes priority. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; sock:&lt;span class="pl-c1"&gt;settimeouts&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one second timeout for connect/read/write&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; data, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;receiveany&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;1024&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; read any data, at most 10K&lt;/span&gt;
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; data &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to read any data: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;successfully read: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, data)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This method doesn't automatically close the current connection when the read timeout error occurs. For other connection errors, this method always automatically closes the connection.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.14&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsockreceiveuntil" class="anchor" aria-hidden="true" href="#tcpsockreceiveuntil"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:receiveuntil&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;iterator = tcpsock:receiveuntil(pattern, options?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This method returns an iterator Lua function that can be called to read the data stream until it sees the specified pattern or an error occurs.&lt;/p&gt;
&lt;p&gt;Here is an example for using this method to read a data stream with the boundary sequence &lt;code&gt;--abcedhb&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; reader &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;receiveuntil&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\r\n&lt;/span&gt;--abcedhb&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;local&lt;/span&gt; data, err, partial &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;reader&lt;/span&gt;()
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; data &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to read the data stream: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;read the data stream: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, data)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When called without any argument, the iterator function returns the received data right &lt;em&gt;before&lt;/em&gt; the specified pattern string in the incoming data stream. So for the example above, if the incoming data stream is &lt;code&gt;'hello, world! -agentzh\r\n--abcedhb blah blah'&lt;/code&gt;, then the string &lt;code&gt;'hello, world! -agentzh'&lt;/code&gt; will be returned.&lt;/p&gt;
&lt;p&gt;In case of error, the iterator function will return &lt;code&gt;nil&lt;/code&gt; along with a string describing the error and the partial data bytes that have been read so far.&lt;/p&gt;
&lt;p&gt;The iterator function can be called multiple times and can be mixed safely with other cosocket method calls or other iterator function calls.&lt;/p&gt;
&lt;p&gt;The iterator function behaves differently (i.e., like a real iterator) when it is called with a &lt;code&gt;size&lt;/code&gt; argument. That is, it will read that &lt;code&gt;size&lt;/code&gt; of data on each invocation and will return &lt;code&gt;nil&lt;/code&gt; at the last invocation (either sees the boundary pattern or meets an error). For the last successful invocation of the iterator function, the &lt;code&gt;err&lt;/code&gt; return value will be &lt;code&gt;nil&lt;/code&gt; too. The iterator function will be reset after the last successful invocation that returns &lt;code&gt;nil&lt;/code&gt; data and &lt;code&gt;nil&lt;/code&gt; error. Consider the following example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; reader &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;receiveuntil&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\r\n&lt;/span&gt;--abcedhb&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

 &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
     &lt;span class="pl-k"&gt;local&lt;/span&gt; data, err, partial &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;reader&lt;/span&gt;(&lt;span class="pl-c1"&gt;4&lt;/span&gt;)
     &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; data &lt;span class="pl-k"&gt;then&lt;/span&gt;
         &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
             ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to read the data stream: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
             &lt;span class="pl-k"&gt;break&lt;/span&gt;
         &lt;span class="pl-k"&gt;end&lt;/span&gt;

         ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;read done&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
         &lt;span class="pl-k"&gt;break&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;read chunk: [&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, data, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then for the incoming data stream &lt;code&gt;'hello, world! -agentzh\r\n--abcedhb blah blah'&lt;/code&gt;, we shall get the following output from the sample code above:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;read chunk: [hell]
read chunk: [o, w]
read chunk: [orld]
read chunk: [! -a]
read chunk: [gent]
read chunk: [zh]
read done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that, the actual data returned &lt;em&gt;might&lt;/em&gt; be a little longer than the size limit specified by the &lt;code&gt;size&lt;/code&gt; argument when the boundary pattern has ambiguity for streaming parsing. Near the boundary of the data stream, the data string actually returned could also be shorter than the size limit.&lt;/p&gt;
&lt;p&gt;Timeout for the iterator function's reading operation is controlled by the &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt; config directive and the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method. And the latter takes priority. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; readline &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;receiveuntil&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\r\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

 sock:&lt;span class="pl-c1"&gt;settimeout&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one second timeout&lt;/span&gt;
 line, err, partial &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;readline&lt;/span&gt;()
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; line &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to read a line: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;successfully read a line: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, line)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is important here to call the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method &lt;em&gt;before&lt;/em&gt; calling the iterator function (note that the &lt;code&gt;receiveuntil&lt;/code&gt; call is irrelevant here).&lt;/p&gt;
&lt;p&gt;As from the &lt;code&gt;v0.5.1&lt;/code&gt; release, this method also takes an optional &lt;code&gt;options&lt;/code&gt; table argument to control the behavior. The following options are supported:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;inclusive&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;inclusive&lt;/code&gt; takes a boolean value to control whether to include the pattern string in the returned data string. Default to &lt;code&gt;false&lt;/code&gt;. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; reader &lt;span class="pl-k"&gt;=&lt;/span&gt; tcpsock:&lt;span class="pl-c1"&gt;receiveuntil&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;_END_&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, { inclusive &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; })
 &lt;span class="pl-k"&gt;local&lt;/span&gt; data &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;reader&lt;/span&gt;()
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(data)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then for the input data stream &lt;code&gt;"hello world _END_ blah blah blah"&lt;/code&gt;, then the example above will output &lt;code&gt;hello world _END_&lt;/code&gt;, including the pattern string &lt;code&gt;_END_&lt;/code&gt; itself.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;v0.8.8&lt;/code&gt; release, this method no longer automatically closes the current connection when the read timeout error happens. For other connection errors, this method always automatically closes the connection.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsockclose" class="anchor" aria-hidden="true" href="#tcpsockclose"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:close&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = tcpsock:close()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Closes the current TCP or stream unix domain socket. It returns the &lt;code&gt;1&lt;/code&gt; in case of success and returns &lt;code&gt;nil&lt;/code&gt; with a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;Note that there is no need to call this method on socket objects that have invoked the &lt;a href="#tcpsocksetkeepalive"&gt;setkeepalive&lt;/a&gt; method because the socket object is already closed (and the current connection is saved into the built-in connection pool).&lt;/p&gt;
&lt;p&gt;Socket objects that have not invoked this method (and associated connections) will be closed when the socket object is released by the Lua GC (Garbage Collector) or the current client HTTP request finishes processing.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsocksettimeout" class="anchor" aria-hidden="true" href="#tcpsocksettimeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:settimeout&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock:settimeout(time)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Set the timeout value in milliseconds for subsequent socket operations (&lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;, &lt;a href="#tcpsockreceive"&gt;receive&lt;/a&gt;, and iterators returned from &lt;a href="#tcpsockreceiveuntil"&gt;receiveuntil&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Settings done by this method take priority over those specified via config directives (i.e. &lt;a href="#lua_socket_connect_timeout"&gt;lua_socket_connect_timeout&lt;/a&gt;, &lt;a href="#lua_socket_send_timeout"&gt;lua_socket_send_timeout&lt;/a&gt;, and &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Note that this method does &lt;em&gt;not&lt;/em&gt; affect the &lt;a href="#lua_socket_keepalive_timeout"&gt;lua_socket_keepalive_timeout&lt;/a&gt; setting; the &lt;code&gt;timeout&lt;/code&gt; argument to the &lt;a href="#tcpsocksetkeepalive"&gt;setkeepalive&lt;/a&gt; method should be used for this purpose instead.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsocksettimeouts" class="anchor" aria-hidden="true" href="#tcpsocksettimeouts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:settimeouts&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock:settimeouts(connect_timeout, send_timeout, read_timeout)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Respectively sets the connect, send, and read timeout thresholds (in milliseconds) for subsequent socket
operations (&lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;, &lt;a href="#tcpsocksend"&gt;send&lt;/a&gt;, &lt;a href="#tcpsockreceive"&gt;receive&lt;/a&gt;, and iterators returned from &lt;a href="#tcpsockreceiveuntil"&gt;receiveuntil&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Settings done by this method take priority over those specified via config directives (i.e. &lt;a href="#lua_socket_connect_timeout"&gt;lua_socket_connect_timeout&lt;/a&gt;, &lt;a href="#lua_socket_send_timeout"&gt;lua_socket_send_timeout&lt;/a&gt;, and &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;It is recommended to use &lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt; instead of &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that this method does &lt;em&gt;not&lt;/em&gt; affect the &lt;a href="#lua_socket_keepalive_timeout"&gt;lua_socket_keepalive_timeout&lt;/a&gt; setting; the &lt;code&gt;timeout&lt;/code&gt; argument to the &lt;a href="#tcpsocksetkeepalive"&gt;setkeepalive&lt;/a&gt; method should be used for this purpose instead.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsocksetoption" class="anchor" aria-hidden="true" href="#tcpsocksetoption"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:setoption&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock:setoption(option, value?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This function is added for &lt;a href="http://w3.impa.br/~diego/software/luasocket/tcp.html" rel="nofollow"&gt;LuaSocket&lt;/a&gt; API compatibility and does nothing for now. Its functionality will be implemented in future.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsocksetkeepalive" class="anchor" aria-hidden="true" href="#tcpsocksetkeepalive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:setkeepalive&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = tcpsock:setkeepalive(timeout?, size?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Puts the current socket's connection immediately into the cosocket built-in connection pool and keep it alive until other &lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt; method calls request it or the associated maximal idle timeout is expired.&lt;/p&gt;
&lt;p&gt;The first optional argument, &lt;code&gt;timeout&lt;/code&gt;, can be used to specify the maximal idle timeout (in milliseconds) for the current connection. If omitted, the default setting in the &lt;a href="#lua_socket_keepalive_timeout"&gt;lua_socket_keepalive_timeout&lt;/a&gt; config directive will be used. If the &lt;code&gt;0&lt;/code&gt; value is given, then the timeout interval is unlimited.&lt;/p&gt;
&lt;p&gt;The second optional argument &lt;code&gt;size&lt;/code&gt; is considered deprecated since
the &lt;code&gt;v0.10.14&lt;/code&gt; release of this module, in favor of the
&lt;code&gt;pool_size&lt;/code&gt; option of the &lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt; method.
Since the &lt;code&gt;v0.10.14&lt;/code&gt; release, this option will only take effect if
the call to &lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt; did not already create a connection
pool.
When this option takes effect (no connection pool was previously created by
&lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;), it will specify the size of the connection pool,
and create it.
If omitted (and no pool was previously created), the default size is the value
of the &lt;a href="#lua_socket_pool_size"&gt;lua_socket_pool_size&lt;/a&gt; directive.
The connection pool holds up to &lt;code&gt;size&lt;/code&gt; alive connections ready to be
reused by subsequent calls to &lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;, but note that there
is no upper limit to the total number of opened connections outside of the
pool.
When the connection pool would exceed its size limit, the least recently used
(kept-alive) connection already in the pool will be closed to make room for
the current connection.
Note that the cosocket connection pool is per Nginx worker process rather
than per Nginx server instance, so the size limit specified here also applies
to every single Nginx worker process. Also note that the size of the connection
pool cannot be changed once it has been created.
If you need to restrict the total number of opened connections, specify both
the &lt;code&gt;pool_size&lt;/code&gt; and &lt;code&gt;backlog&lt;/code&gt; option in the call to
&lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In case of success, this method returns &lt;code&gt;1&lt;/code&gt;; otherwise, it returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error.&lt;/p&gt;
&lt;p&gt;When the system receive buffer for the current connection has unread data, then this method will return the "connection in dubious state" error message (as the second return value) because the previous session has unread data left behind for the next session and the connection is not safe to be reused.&lt;/p&gt;
&lt;p&gt;This method also makes the current cosocket object enter the "closed" state, so there is no need to manually call the &lt;a href="#tcpsockclose"&gt;close&lt;/a&gt; method on it afterwards.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsockgetreusedtimes" class="anchor" aria-hidden="true" href="#tcpsockgetreusedtimes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:getreusedtimes&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;count, err = tcpsock:getreusedtimes()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This method returns the (successfully) reused times for the current connection. In case of error, it returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error.&lt;/p&gt;
&lt;p&gt;If the current connection does not come from the built-in connection pool, then this method always returns &lt;code&gt;0&lt;/code&gt;, that is, the connection has never been reused (yet). If the connection comes from the connection pool, then the return value is always non-zero. So this method can also be used to determine if the current connection comes from the pool.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsocketconnect" class="anchor" aria-hidden="true" href="#ngxsocketconnect"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.socket.connect&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock, err = ngx.socket.connect(host, port)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock, err = ngx.socket.connect("unix:/path/to/unix-domain.socket")&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This function is a shortcut for combining &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp()&lt;/a&gt; and the &lt;a href="#tcpsockconnect"&gt;connect()&lt;/a&gt; method call in a single operation. It is actually implemented like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; sock &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;socket&lt;/span&gt;.&lt;span class="pl-c1"&gt;tcp&lt;/span&gt;()
 &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;(&lt;span class="pl-c1"&gt;...&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;, err
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-k"&gt;return&lt;/span&gt; sock&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is no way to use the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method to specify connecting timeout for this method and the &lt;a href="#lua_socket_connect_timeout"&gt;lua_socket_connect_timeout&lt;/a&gt; directive must be set at configure time instead.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxget_phase" class="anchor" aria-hidden="true" href="#ngxget_phase"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.get_phase&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.get_phase()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Retrieves the current running phase name. Possible return values are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;init&lt;/code&gt;
for the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;init_worker&lt;/code&gt;
for the context of &lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssl_cert&lt;/code&gt;
for the context of &lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssl_session_fetch&lt;/code&gt;
for the context of &lt;a href="#ssl_session_fetch_by_lua_block"&gt;ssl_session_fetch_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssl_session_store&lt;/code&gt;
for the context of &lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set&lt;/code&gt;
for the context of &lt;a href="#set_by_lua"&gt;set_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rewrite&lt;/code&gt;
for the context of &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;balancer&lt;/code&gt;
for the context of &lt;a href="#balancer_by_lua_block"&gt;balancer_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;access&lt;/code&gt;
for the context of &lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;content&lt;/code&gt;
for the context of &lt;a href="#content_by_lua"&gt;content_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;header_filter&lt;/code&gt;
for the context of &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;body_filter&lt;/code&gt;
for the context of &lt;a href="#body_filter_by_lua"&gt;body_filter_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;log&lt;/code&gt;
for the context of &lt;a href="#log_by_lua"&gt;log_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;timer&lt;/code&gt;
for the context of user callback functions for &lt;a href="#ngxtimerat"&gt;ngx.timer.*&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.5.10&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxthreadspawn" class="anchor" aria-hidden="true" href="#ngxthreadspawn"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.thread.spawn&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;co = ngx.thread.spawn(func, arg1, arg2, ...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Spawns a new user "light thread" with the Lua function &lt;code&gt;func&lt;/code&gt; as well as those optional arguments &lt;code&gt;arg1&lt;/code&gt;, &lt;code&gt;arg2&lt;/code&gt;, and etc. Returns a Lua thread (or Lua coroutine) object represents this "light thread".&lt;/p&gt;
&lt;p&gt;"Light threads" are just a special kind of Lua coroutines that are scheduled by the ngx_lua module.&lt;/p&gt;
&lt;p&gt;Before &lt;code&gt;ngx.thread.spawn&lt;/code&gt; returns, the &lt;code&gt;func&lt;/code&gt; will be called with those optional arguments until it returns, aborts with an error, or gets yielded due to I/O operations via the &lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt; (like &lt;a href="#tcpsockreceive"&gt;tcpsock:receive&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;After &lt;code&gt;ngx.thread.spawn&lt;/code&gt; returns, the newly-created "light thread" will keep running asynchronously usually at various I/O events.&lt;/p&gt;
&lt;p&gt;All the Lua code chunks running by &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt;, &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt;, and &lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt; are in a boilerplate "light thread" created automatically by ngx_lua. Such boilerplate "light thread" are also called "entry threads".&lt;/p&gt;
&lt;p&gt;By default, the corresponding Nginx handler (e.g., &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; handler) will not terminate until&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;both the "entry thread" and all the user "light threads" terminates,&lt;/li&gt;
&lt;li&gt;a "light thread" (either the "entry thread" or a user "light thread" aborts by calling &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;, &lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;, &lt;a href="#ngxredirect"&gt;ngx.redirect&lt;/a&gt;, or &lt;a href="#ngxreqset_uri"&gt;ngx.req.set_uri(uri, true)&lt;/a&gt;, or&lt;/li&gt;
&lt;li&gt;the "entry thread" terminates with a Lua error.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When the user "light thread" terminates with a Lua error, however, it will not abort other running "light threads" like the "entry thread" does.&lt;/p&gt;
&lt;p&gt;Due to the limitation in the Nginx subrequest model, it is not allowed to abort a running Nginx subrequest in general. So it is also prohibited to abort a running "light thread" that is pending on one ore more Nginx subrequests. You must call &lt;a href="#ngxthreadwait"&gt;ngx.thread.wait&lt;/a&gt; to wait for those "light thread" to terminate before quitting the "world". A notable exception here is that you can abort pending subrequests by calling &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt; with and only with the status code &lt;code&gt;ngx.ERROR&lt;/code&gt; (-1), &lt;code&gt;408&lt;/code&gt;, &lt;code&gt;444&lt;/code&gt;, or &lt;code&gt;499&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The "light threads" are not scheduled in a pre-emptive way. In other words, no time-slicing is performed automatically. A "light thread" will keep running exclusively on the CPU until&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;a (nonblocking) I/O operation cannot be completed in a single run,&lt;/li&gt;
&lt;li&gt;it calls &lt;a href="#coroutineyield"&gt;coroutine.yield&lt;/a&gt; to actively give up execution, or&lt;/li&gt;
&lt;li&gt;it is aborted by a Lua error or an invocation of &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;, &lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;, &lt;a href="#ngxredirect"&gt;ngx.redirect&lt;/a&gt;, or &lt;a href="#ngxreqset_uri"&gt;ngx.req.set_uri(uri, true)&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For the first two cases, the "light thread" will usually be resumed later by the ngx_lua scheduler unless a "stop-the-world" event happens.&lt;/p&gt;
&lt;p&gt;User "light threads" can create "light threads" themselves. And normal user coroutines created by &lt;a href="#coroutinecreate"&gt;coroutine.create&lt;/a&gt; can also create "light threads". The coroutine (be it a normal Lua coroutine or a "light thread") that directly spawns the "light thread" is called the "parent coroutine" for the "light thread" newly spawned.&lt;/p&gt;
&lt;p&gt;The "parent coroutine" can call &lt;a href="#ngxthreadwait"&gt;ngx.thread.wait&lt;/a&gt; to wait on the termination of its child "light thread".&lt;/p&gt;
&lt;p&gt;You can call coroutine.status() and coroutine.yield() on the "light thread" coroutines.&lt;/p&gt;
&lt;p&gt;The status of the "light thread" coroutine can be "zombie" if&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;the current "light thread" already terminates (either successfully or with an error),&lt;/li&gt;
&lt;li&gt;its parent coroutine is still alive, and&lt;/li&gt;
&lt;li&gt;its parent coroutine is not waiting on it with &lt;a href="#ngxthreadwait"&gt;ngx.thread.wait&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following example demonstrates the use of coroutine.yield() in the "light thread" coroutines
to do manual time-slicing:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; yield &lt;span class="pl-k"&gt;=&lt;/span&gt; coroutine.&lt;span class="pl-smi"&gt;yield&lt;/span&gt;

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;()
     &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;coroutine.running&lt;/span&gt;()
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f 1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-c1"&gt;yield&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f 2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-c1"&gt;yield&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f 3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;coroutine.running&lt;/span&gt;()
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c1"&gt;yield&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;)

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(f)

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c1"&gt;yield&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;)

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c1"&gt;yield&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;)

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then it will generate the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;0
1
f 1
2
f 2
3
f 3
4
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;"Light threads" are mostly useful for making concurrent upstream requests in a single Nginx request handler, much like a generalized version of &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt; that can work with all the &lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt;. The following example demonstrates parallel requests to MySQL, Memcached, and upstream HTTP services in a single Lua handler, and outputting the results in the order that they actually return (similar to Facebook's BigPipe model):&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; query mysql, memcached, and a remote http service at the same time,&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; output the results in the order that they&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; actually return the results.&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; mysql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.mysql&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; memcached &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.memcached&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;query_mysql&lt;/span&gt;()
     &lt;span class="pl-k"&gt;local&lt;/span&gt; db &lt;span class="pl-k"&gt;=&lt;/span&gt; mysql:&lt;span class="pl-c1"&gt;new&lt;/span&gt;()
     db:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;{
                 host &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;127.0.0.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                 port &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3306&lt;/span&gt;,
                 database &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                 user &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;monty&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                 password &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mypass&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
               }
     &lt;span class="pl-k"&gt;local&lt;/span&gt; res, err, errno, sqlstate &lt;span class="pl-k"&gt;=&lt;/span&gt;
             db:&lt;span class="pl-c1"&gt;query&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;select * from cats order by id asc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     db:&lt;span class="pl-c1"&gt;set_keepalive&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;100&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mysql done: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, cjson.&lt;span class="pl-c1"&gt;encode&lt;/span&gt;(res))
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;query_memcached&lt;/span&gt;()
     &lt;span class="pl-k"&gt;local&lt;/span&gt; memc &lt;span class="pl-k"&gt;=&lt;/span&gt; memcached:&lt;span class="pl-c1"&gt;new&lt;/span&gt;()
     memc:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;127.0.0.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;11211&lt;/span&gt;)
     &lt;span class="pl-k"&gt;local&lt;/span&gt; res, err &lt;span class="pl-k"&gt;=&lt;/span&gt; memc:&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;some_key&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;memcached done: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;query_http&lt;/span&gt;()
     &lt;span class="pl-k"&gt;local&lt;/span&gt; res &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/my-http-proxy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http done: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res.&lt;span class="pl-smi"&gt;body&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(query_mysql)      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; create thread 1&lt;/span&gt;
 ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(query_memcached)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; create thread 2&lt;/span&gt;
 ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(query_http)       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; create thread 3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This API was first enabled in the &lt;code&gt;v0.7.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxthreadwait" class="anchor" aria-hidden="true" href="#ngxthreadwait"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.thread.wait&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, res1, res2, ... = ngx.thread.wait(thread1, thread2, ...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Waits on one or more child "light threads" and returns the results of the first "light thread" that terminates (either successfully or with an error).&lt;/p&gt;
&lt;p&gt;The arguments &lt;code&gt;thread1&lt;/code&gt;, &lt;code&gt;thread2&lt;/code&gt;, and etc are the Lua thread objects returned by earlier calls of &lt;a href="#ngxthreadspawn"&gt;ngx.thread.spawn&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The return values have exactly the same meaning as &lt;a href="#coroutineresume"&gt;coroutine.resume&lt;/a&gt;, that is, the first value returned is a boolean value indicating whether the "light thread" terminates successfully or not, and subsequent values returned are the return values of the user Lua function that was used to spawn the "light thread" (in case of success) or the error object (in case of failure).&lt;/p&gt;
&lt;p&gt;Only the direct "parent coroutine" can wait on its child "light thread", otherwise a Lua exception will be raised.&lt;/p&gt;
&lt;p&gt;The following example demonstrates the use of &lt;code&gt;ngx.thread.wait&lt;/code&gt; and &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; to emulate &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; capture &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-smi"&gt;capture&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; spawn &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-smi"&gt;spawn&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; wait &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-smi"&gt;wait&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; say &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;say&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;fetch&lt;/span&gt;(&lt;span class="pl-smi"&gt;uri&lt;/span&gt;)
     &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;capture&lt;/span&gt;(uri)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; threads &lt;span class="pl-k"&gt;=&lt;/span&gt; {
     &lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(fetch, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
     &lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(fetch, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
     &lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(fetch, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 }

 &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-k"&gt;#&lt;/span&gt;threads &lt;span class="pl-k"&gt;do&lt;/span&gt;
     &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, res &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;wait&lt;/span&gt;(threads[i])
     &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
         &lt;span class="pl-c1"&gt;say&lt;/span&gt;(i, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: failed to run: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res)
     &lt;span class="pl-k"&gt;else&lt;/span&gt;
         &lt;span class="pl-c1"&gt;say&lt;/span&gt;(i, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: status: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res.&lt;span class="pl-smi"&gt;status&lt;/span&gt;)
         &lt;span class="pl-c1"&gt;say&lt;/span&gt;(i, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: body: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res.&lt;span class="pl-smi"&gt;body&lt;/span&gt;)
     &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here it essentially implements the "wait all" model.&lt;/p&gt;
&lt;p&gt;And below is an example demonstrating the "wait any" model:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;()
     ngx.&lt;span class="pl-c1"&gt;sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f: hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f done&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;g&lt;/span&gt;()
     ngx.&lt;span class="pl-c1"&gt;sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.1&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;g: hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;g done&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; tf, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(f)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; tf &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to spawn thread f: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f thread created: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;coroutine.status&lt;/span&gt;(tf))

 &lt;span class="pl-k"&gt;local&lt;/span&gt; tg, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(g)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; tg &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to spawn thread g: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;g thread created: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;coroutine.status&lt;/span&gt;(tg))

 ok, res &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;wait&lt;/span&gt;(tf, tg)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to wait: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;res: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res)

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; stop the "world", aborting other running threads&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;OK&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And it will generate the following output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;f thread created: running
g thread created: running
g: hello
res: g done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This API was first enabled in the &lt;code&gt;v0.7.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxthreadkill" class="anchor" aria-hidden="true" href="#ngxthreadkill"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.thread.kill&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.thread.kill(thread)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Kills a running "light thread" created by &lt;a href="#ngxthreadspawn"&gt;ngx.thread.spawn&lt;/a&gt;. Returns a true value when successful or &lt;code&gt;nil&lt;/code&gt; and a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;According to the current implementation, only the parent coroutine (or "light thread") can kill a thread. Also, a running "light thread" with pending Nginx subrequests (initiated by &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; for example) cannot be killed due to a limitation in the Nginx core.&lt;/p&gt;
&lt;p&gt;This API was first enabled in the &lt;code&gt;v0.9.9&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxon_abort" class="anchor" aria-hidden="true" href="#ngxon_abort"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.on_abort&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.on_abort(callback)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Registers a user Lua function as the callback which gets called automatically when the client closes the (downstream) connection prematurely.&lt;/p&gt;
&lt;p&gt;Returns &lt;code&gt;1&lt;/code&gt; if the callback is registered successfully or returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;All the &lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt; can be used in the callback function because the function is run in a special "light thread", just as those "light threads" created by &lt;a href="#ngxthreadspawn"&gt;ngx.thread.spawn&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The callback function can decide what to do with the client abortion event all by itself. For example, it can simply ignore the event by doing nothing and the current Lua request handler will continue executing without interruptions. And the callback function can also decide to terminate everything by calling &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;my_cleanup&lt;/span&gt;()
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; custom cleanup work goes here, like cancelling a pending DB transaction&lt;/span&gt;

     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; now abort all the "light threads" running in the current request handler&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(&lt;span class="pl-c1"&gt;499&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;on_abort&lt;/span&gt;(my_cleanup)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to register the on_abort callback: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     ngx.&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(&lt;span class="pl-c1"&gt;500&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When &lt;a href="#lua_check_client_abort"&gt;lua_check_client_abort&lt;/a&gt; is set to &lt;code&gt;off&lt;/code&gt; (which is the default), then this function call will always return the error message "lua_check_client_abort is off".&lt;/p&gt;
&lt;p&gt;According to the current implementation, this function can only be called once in a single request handler; subsequent calls will return the error message "duplicate call".&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.7.4&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#lua_check_client_abort"&gt;lua_check_client_abort&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxtimerat" class="anchor" aria-hidden="true" href="#ngxtimerat"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.timer.at&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;hdl, err = ngx.timer.at(delay, callback, user_arg1, user_arg2, ...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Creates an Nginx timer with a user callback function as well as optional user arguments.&lt;/p&gt;
&lt;p&gt;The first argument, &lt;code&gt;delay&lt;/code&gt;, specifies the delay for the timer,
in seconds. One can specify fractional seconds like &lt;code&gt;0.001&lt;/code&gt; to mean 1
millisecond here. &lt;code&gt;0&lt;/code&gt; delay can also be specified, in which case the
timer will immediately expire when the current handler yields
execution.&lt;/p&gt;
&lt;p&gt;The second argument, &lt;code&gt;callback&lt;/code&gt;, can
be any Lua function, which will be invoked later in a background
"light thread" after the delay specified. The user callback will be
called automatically by the Nginx core with the arguments &lt;code&gt;premature&lt;/code&gt;,
&lt;code&gt;user_arg1&lt;/code&gt;, &lt;code&gt;user_arg2&lt;/code&gt;, and etc, where the &lt;code&gt;premature&lt;/code&gt;
argument takes a boolean value indicating whether it is a premature timer
expiration or not, and &lt;code&gt;user_arg1&lt;/code&gt;, &lt;code&gt;user_arg2&lt;/code&gt;, and etc, are
those (extra) user arguments specified when calling &lt;code&gt;ngx.timer.at&lt;/code&gt;
as the remaining arguments.&lt;/p&gt;
&lt;p&gt;Premature timer expiration happens when the Nginx worker process is
trying to shut down, as in an Nginx configuration reload triggered by
the &lt;code&gt;HUP&lt;/code&gt; signal or in an Nginx server shutdown. When the Nginx worker
is trying to shut down, one can no longer call &lt;code&gt;ngx.timer.at&lt;/code&gt; to
create new timers with nonzero delays and in that case &lt;code&gt;ngx.timer.at&lt;/code&gt; will return a "conditional false" value and
a string describing the error, that is, "process exiting".&lt;/p&gt;
&lt;p&gt;Starting from the &lt;code&gt;v0.9.3&lt;/code&gt; release, it is allowed to create zero-delay timers even when the Nginx worker process starts shutting down.&lt;/p&gt;
&lt;p&gt;When a timer expires, the user Lua code in the timer callback is
running in a "light thread" detached completely from the original
request creating the timer. So objects with the same lifetime as the
request creating them, like &lt;a href="#ngxsockettcp"&gt;cosockets&lt;/a&gt;, cannot be shared between the
original request and the timer user callback function.&lt;/p&gt;
&lt;p&gt;Here is a simple example:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     ...
     &lt;span class="pl-k"&gt;log_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; function push_data(premature, uri, args, status)
             -- &lt;span class="pl-k"&gt;push&lt;/span&gt; the data uri, args, and status to the remote
             -- &lt;span class="pl-k"&gt;via&lt;/span&gt; ngx.socket.tcp or ngx.socket.udp
             -- (&lt;span class="pl-k"&gt;one&lt;/span&gt; may want to buffer the data in Lua &lt;span class="pl-s"&gt;a&lt;/span&gt; bit to
             -- &lt;span class="pl-k"&gt;save&lt;/span&gt; I/O operations)
         &lt;span class="pl-k"&gt;end&lt;/span&gt;
         &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err = ngx.timer.at(0, push_data,
                                      ngx.var.uri, ngx.var.args, ngx.header.status)
         &lt;span class="pl-k"&gt;if&lt;/span&gt; not ok then
             ngx.log(ngx.ERR, "&lt;span class="pl-k"&gt;failed&lt;/span&gt; to create timer: &lt;span class="pl-s"&gt;", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;             return&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;One can also create infinite re-occurring timers, for instance, a timer getting triggered every &lt;code&gt;5&lt;/code&gt; seconds, by calling &lt;code&gt;ngx.timer.at&lt;/code&gt; recursively in the timer callback function. Here is such an example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; delay &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; handler
 handler &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; (&lt;span class="pl-smi"&gt;premature&lt;/span&gt;)
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; do some routine job in Lua just like a cron job&lt;/span&gt;
     &lt;span class="pl-k"&gt;if&lt;/span&gt; premature &lt;span class="pl-k"&gt;then&lt;/span&gt;
         &lt;span class="pl-k"&gt;return&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;
     &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;timer&lt;/span&gt;.&lt;span class="pl-c1"&gt;at&lt;/span&gt;(delay, handler)
     &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
         ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to create the timer: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
         &lt;span class="pl-k"&gt;return&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;timer&lt;/span&gt;.&lt;span class="pl-c1"&gt;at&lt;/span&gt;(delay, handler)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to create the timer: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is recommended, however, to use the &lt;a href="#ngxtimerevery"&gt;ngx.timer.every&lt;/a&gt; API function
instead for creating recurring timers since it is more robust.&lt;/p&gt;
&lt;p&gt;Because timer callbacks run in the background and their running time
will not add to any client request's response time, they can easily
accumulate in the server and exhaust system resources due to either
Lua programming mistakes or just too much client traffic. To prevent
extreme consequences like crashing the Nginx server, there are
built-in limitations on both the number of "pending timers" and the
number of "running timers" in an Nginx worker process. The "pending
timers" here mean timers that have not yet been expired and "running
timers" are those whose user callbacks are currently running.&lt;/p&gt;
&lt;p&gt;The maximal number of pending timers allowed in an Nginx
worker is controlled by the &lt;a href="#lua_max_pending_timers"&gt;lua_max_pending_timers&lt;/a&gt;
directive. The maximal number of running timers is controlled by the
&lt;a href="#lua_max_running_timers"&gt;lua_max_running_timers&lt;/a&gt; directive.&lt;/p&gt;
&lt;p&gt;According to the current implementation, each "running timer" will
take one (fake) connection record from the global connection record
list configured by the standard &lt;a href="http://nginx.org/en/docs/ngx_core_module.html#worker_connections" rel="nofollow"&gt;worker_connections&lt;/a&gt; directive in
&lt;code&gt;nginx.conf&lt;/code&gt;. So ensure that the
&lt;a href="http://nginx.org/en/docs/ngx_core_module.html#worker_connections" rel="nofollow"&gt;worker_connections&lt;/a&gt; directive is set to
a large enough value that takes into account both the real connections
and fake connections required by timer callbacks (as limited by the
&lt;a href="#lua_max_running_timers"&gt;lua_max_running_timers&lt;/a&gt; directive).&lt;/p&gt;
&lt;p&gt;A lot of the Lua APIs for Nginx are enabled in the context of the timer
callbacks, like stream/datagram cosockets (&lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt; and &lt;a href="#ngxsocketudp"&gt;ngx.socket.udp&lt;/a&gt;), shared
memory dictionaries (&lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;), user coroutines (&lt;a href="#coroutinecreate"&gt;coroutine.*&lt;/a&gt;),
user "light threads" (&lt;a href="#ngxthreadspawn"&gt;ngx.thread.*&lt;/a&gt;), &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;, &lt;a href="#ngxnow"&gt;ngx.now&lt;/a&gt;/&lt;a href="#ngxtime"&gt;ngx.time&lt;/a&gt;,
&lt;a href="#ngxmd5"&gt;ngx.md5&lt;/a&gt;/&lt;a href="#ngxsha1_bin"&gt;ngx.sha1_bin&lt;/a&gt;, are all allowed. But the subrequest API (like
&lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt;), the &lt;a href="#ngxreqstart_time"&gt;ngx.req.*&lt;/a&gt; API, the downstream output API
(like &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt;, &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt;, and &lt;a href="#ngxflush"&gt;ngx.flush&lt;/a&gt;) are explicitly disabled in
this context.&lt;/p&gt;
&lt;p&gt;You can pass most of the standard Lua values (nils, booleans, numbers, strings, tables, closures, file handles, and etc) into the timer callback, either explicitly as user arguments or implicitly as upvalues for the callback closure. There are several exceptions, however: you &lt;em&gt;cannot&lt;/em&gt; pass any thread objects returned by &lt;a href="#coroutinecreate"&gt;coroutine.create&lt;/a&gt; and &lt;a href="#ngxthreadspawn"&gt;ngx.thread.spawn&lt;/a&gt; or any cosocket objects returned by &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt;, &lt;a href="#ngxsocketudp"&gt;ngx.socket.udp&lt;/a&gt;, and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt; because these objects' lifetime is bound to the request context creating them while the timer callback is detached from the creating request's context (by design) and runs in its own (fake) request context. If you try to share the thread or cosocket objects across the boundary of the creating request, then you will get the "no co ctx found" error (for threads) or "bad request" (for cosockets). It is fine, however, to create all these objects inside your timer callback.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.8.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxtimerevery" class="anchor" aria-hidden="true" href="#ngxtimerevery"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.timer.every&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;hdl, err = ngx.timer.every(delay, callback, user_arg1, user_arg2, ...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt; API function, but&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;delay&lt;/code&gt; &lt;em&gt;cannot&lt;/em&gt; be zero,&lt;/li&gt;
&lt;li&gt;timer will be created every &lt;code&gt;delay&lt;/code&gt; seconds until the current Nginx worker process starts exiting.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When success, returns a "conditional true" value (but not a &lt;code&gt;true&lt;/code&gt;). Otherwise, returns a "conditional false" value and a string describing the error.&lt;/p&gt;
&lt;p&gt;This API also respect the &lt;a href="#lua_max_pending_timers"&gt;lua_max_pending_timers&lt;/a&gt; and &lt;a href="#lua_max_running_timers"&gt;lua_max_running_timers&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.10.9&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxtimerrunning_count" class="anchor" aria-hidden="true" href="#ngxtimerrunning_count"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.timer.running_count&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;count = ngx.timer.running_count()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the number of timers currently running.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxtimerpending_count" class="anchor" aria-hidden="true" href="#ngxtimerpending_count"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.timer.pending_count&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;count = ngx.timer.pending_count()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the number of pending timers.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxconfigsubsystem" class="anchor" aria-hidden="true" href="#ngxconfigsubsystem"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.config.subsystem&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;subsystem = ngx.config.subsystem&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This string field indicates the current Nginx subsystem the current Lua environment is based on. For this module, this field always takes the string value &lt;code&gt;"http"&lt;/code&gt;. For
&lt;a href="https://github.com/openresty/stream-lua-nginx-module#readme"&gt;ngx_stream_lua_module&lt;/a&gt;, however, this field takes the value &lt;code&gt;"stream"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This field was first introduced in the &lt;code&gt;0.10.1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxconfigdebug" class="anchor" aria-hidden="true" href="#ngxconfigdebug"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.config.debug&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;debug = ngx.config.debug&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This boolean field indicates whether the current Nginx is a debug build, i.e., being built by the &lt;code&gt;./configure&lt;/code&gt; option &lt;code&gt;--with-debug&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This field was first introduced in the &lt;code&gt;0.8.7&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxconfigprefix" class="anchor" aria-hidden="true" href="#ngxconfigprefix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.config.prefix&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;prefix = ngx.config.prefix()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the Nginx server "prefix" path, as determined by the &lt;code&gt;-p&lt;/code&gt; command-line option when running the Nginx executable, or the path specified by the &lt;code&gt;--prefix&lt;/code&gt; command-line option when building Nginx with the &lt;code&gt;./configure&lt;/code&gt; script.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxconfignginx_version" class="anchor" aria-hidden="true" href="#ngxconfignginx_version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.config.nginx_version&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ver = ngx.config.nginx_version&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This field take an integral value indicating the version number of the current Nginx core being used. For example, the version number &lt;code&gt;1.4.3&lt;/code&gt; results in the Lua number 1004003.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.3&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxconfignginx_configure" class="anchor" aria-hidden="true" href="#ngxconfignginx_configure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.config.nginx_configure&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.config.nginx_configure()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This function returns a string for the Nginx &lt;code&gt;./configure&lt;/code&gt; command's arguments string.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxconfigngx_lua_version" class="anchor" aria-hidden="true" href="#ngxconfigngx_lua_version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.config.ngx_lua_version&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ver = ngx.config.ngx_lua_version&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This field take an integral value indicating the version number of the current &lt;code&gt;ngx_lua&lt;/code&gt; module being used. For example, the version number &lt;code&gt;0.9.3&lt;/code&gt; results in the Lua number 9003.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.3&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxworkerexiting" class="anchor" aria-hidden="true" href="#ngxworkerexiting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.worker.exiting&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;exiting = ngx.worker.exiting()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This function returns a boolean value indicating whether the current Nginx worker process already starts exiting. Nginx worker process exiting happens on Nginx server quit or configuration reload (aka HUP reload).&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.3&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxworkerpid" class="anchor" aria-hidden="true" href="#ngxworkerpid"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.worker.pid&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;pid = ngx.worker.pid()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This function returns a Lua number for the process ID (PID) of the current Nginx worker process. This API is more efficient than &lt;code&gt;ngx.var.pid&lt;/code&gt; and can be used in contexts where the &lt;a href="#ngxvarvariable"&gt;ngx.var.VARIABLE&lt;/a&gt; API cannot be used (like &lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxworkercount" class="anchor" aria-hidden="true" href="#ngxworkercount"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.worker.count&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;count = ngx.worker.count()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the total number of the Nginx worker processes (i.e., the value configured
by the &lt;a href="https://nginx.org/en/docs/ngx_core_module.html#worker_processes" rel="nofollow"&gt;worker_processes&lt;/a&gt;
directive in &lt;code&gt;nginx.conf&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxworkerid" class="anchor" aria-hidden="true" href="#ngxworkerid"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.worker.id&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;count = ngx.worker.id()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the ordinal number of the current Nginx worker processes (starting from number 0).&lt;/p&gt;
&lt;p&gt;So if the total number of workers is &lt;code&gt;N&lt;/code&gt;, then this method may return a number between 0
and &lt;code&gt;N - 1&lt;/code&gt; (inclusive).&lt;/p&gt;
&lt;p&gt;This function returns meaningful values only for Nginx 1.9.1+. With earlier versions of Nginx, it
always returns &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxworkercount"&gt;ngx.worker.count&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsemaphore" class="anchor" aria-hidden="true" href="#ngxsemaphore"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.semaphore&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;local semaphore = require "ngx.semaphore"&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is a Lua module that implements a classic-style semaphore API for efficient synchronizations among
different "light threads". Sharing the same semaphore among different "light threads" created in different (request)
contexts are also supported as long as the "light threads" reside in the same Nginx worker process
and the &lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt; directive is turned on (which is the default).&lt;/p&gt;
&lt;p&gt;This Lua module does not ship with this ngx_lua module itself rather it is shipped with
the
&lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;Please refer to the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/semaphore.md"&gt;documentation&lt;/a&gt;
for this &lt;code&gt;ngx.semaphore&lt;/code&gt; Lua module in &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt;
for more details.&lt;/p&gt;
&lt;p&gt;This feature requires at least ngx_lua &lt;code&gt;v0.10.0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxbalancer" class="anchor" aria-hidden="true" href="#ngxbalancer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.balancer&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;local balancer = require "ngx.balancer"&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is a Lua module that provides a Lua API to allow defining completely dynamic load balancers
in pure Lua.&lt;/p&gt;
&lt;p&gt;This Lua module does not ship with this ngx_lua module itself rather it is shipped with
the
&lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;Please refer to the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/balancer.md"&gt;documentation&lt;/a&gt;
for this &lt;code&gt;ngx.balancer&lt;/code&gt; Lua module in &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt;
for more details.&lt;/p&gt;
&lt;p&gt;This feature requires at least ngx_lua &lt;code&gt;v0.10.0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxssl" class="anchor" aria-hidden="true" href="#ngxssl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.ssl&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;local ssl = require "ngx.ssl"&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This Lua module provides API functions to control the SSL handshake process in contexts like
&lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua*&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This Lua module does not ship with this ngx_lua module itself rather it is shipped with
the
&lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;Please refer to the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl.md"&gt;documentation&lt;/a&gt;
for this &lt;code&gt;ngx.ssl&lt;/code&gt; Lua module for more details.&lt;/p&gt;
&lt;p&gt;This feature requires at least ngx_lua &lt;code&gt;v0.10.0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxocsp" class="anchor" aria-hidden="true" href="#ngxocsp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.ocsp&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;local ocsp = require "ngx.ocsp"&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This Lua module provides API to perform OCSP queries, OCSP response validations, and
OCSP stapling planting.&lt;/p&gt;
&lt;p&gt;Usually, this module is used together with the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl.md"&gt;ngx.ssl&lt;/a&gt;
module in the
context of &lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua*&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This Lua module does not ship with this ngx_lua module itself rather it is shipped with
the
&lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;Please refer to the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ocsp.md"&gt;documentation&lt;/a&gt;
for this &lt;code&gt;ngx.ocsp&lt;/code&gt; Lua module for more details.&lt;/p&gt;
&lt;p&gt;This feature requires at least ngx_lua &lt;code&gt;v0.10.0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ndkset_vardirective" class="anchor" aria-hidden="true" href="#ndkset_vardirective"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ndk.set_var.DIRECTIVE&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;res = ndk.set_var.DIRECTIVE_NAME&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This mechanism allows calling other Nginx C modules' directives that are implemented by &lt;a href="https://github.com/simplresty/ngx_devel_kit"&gt;Nginx Devel Kit&lt;/a&gt; (NDK)'s set_var submodule's &lt;code&gt;ndk_set_var_value&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For example, the following &lt;a href="http://github.com/openresty/set-misc-nginx-module"&gt;set-misc-nginx-module&lt;/a&gt; directives can be invoked this way:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_quote_sql_str"&gt;set_quote_sql_str&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_quote_pgsql_str"&gt;set_quote_pgsql_str&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_quote_json_str"&gt;set_quote_json_str&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_unescape_uri"&gt;set_unescape_uri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_escape_uri"&gt;set_escape_uri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_encode_base32"&gt;set_encode_base32&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_decode_base32"&gt;set_decode_base32&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_encode_base64"&gt;set_encode_base64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_decode_base64"&gt;set_decode_base64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_encode_base64"&gt;set_encode_hex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_decode_base64"&gt;set_decode_hex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_encode_base64"&gt;set_sha1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_decode_base64"&gt;set_md5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; res &lt;span class="pl-k"&gt;=&lt;/span&gt; ndk.&lt;span class="pl-smi"&gt;set_var&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_escape_uri&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a/b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; now res == 'a%2fb'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Similarly, the following directives provided by &lt;a href="http://github.com/openresty/encrypted-session-nginx-module"&gt;encrypted-session-nginx-module&lt;/a&gt; can be invoked from within Lua too:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/encrypted-session-nginx-module#set_encrypt_session"&gt;set_encrypt_session&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/encrypted-session-nginx-module#set_decrypt_session"&gt;set_decrypt_session&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This feature requires the &lt;a href="https://github.com/simplresty/ngx_devel_kit"&gt;ngx_devel_kit&lt;/a&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coroutinecreate" class="anchor" aria-hidden="true" href="#coroutinecreate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coroutine.create&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;co = coroutine.create(f)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Creates a user Lua coroutines with a Lua function, and returns a coroutine object.&lt;/p&gt;
&lt;p&gt;Similar to the standard Lua &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.create" rel="nofollow"&gt;coroutine.create&lt;/a&gt; API, but works in the context of the Lua coroutines created by ngx_lua.&lt;/p&gt;
&lt;p&gt;This API was first usable in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; since the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.6.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coroutineresume" class="anchor" aria-hidden="true" href="#coroutineresume"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coroutine.resume&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, ... = coroutine.resume(co, ...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Resumes the executation of a user Lua coroutine object previously yielded or just created.&lt;/p&gt;
&lt;p&gt;Similar to the standard Lua &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.resume" rel="nofollow"&gt;coroutine.resume&lt;/a&gt; API, but works in the context of the Lua coroutines created by ngx_lua.&lt;/p&gt;
&lt;p&gt;This API was first usable in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; since the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.6.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coroutineyield" class="anchor" aria-hidden="true" href="#coroutineyield"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coroutine.yield&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;... = coroutine.yield(...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Yields the execution of the current user Lua coroutine.&lt;/p&gt;
&lt;p&gt;Similar to the standard Lua &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.yield" rel="nofollow"&gt;coroutine.yield&lt;/a&gt; API, but works in the context of the Lua coroutines created by ngx_lua.&lt;/p&gt;
&lt;p&gt;This API was first usable in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; since the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.6.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coroutinewrap" class="anchor" aria-hidden="true" href="#coroutinewrap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coroutine.wrap&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;co = coroutine.wrap(f)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the standard Lua &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.wrap" rel="nofollow"&gt;coroutine.wrap&lt;/a&gt; API, but works in the context of the Lua coroutines created by ngx_lua.&lt;/p&gt;
&lt;p&gt;This API was first usable in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; since the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.6.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coroutinerunning" class="anchor" aria-hidden="true" href="#coroutinerunning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coroutine.running&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;co = coroutine.running()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Identical to the standard Lua &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.running" rel="nofollow"&gt;coroutine.running&lt;/a&gt; API.&lt;/p&gt;
&lt;p&gt;This API was first usable in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; since the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first enabled in the &lt;code&gt;v0.6.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coroutinestatus" class="anchor" aria-hidden="true" href="#coroutinestatus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coroutine.status&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;status = coroutine.status(co)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Identical to the standard Lua &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.status" rel="nofollow"&gt;coroutine.status&lt;/a&gt; API.&lt;/p&gt;
&lt;p&gt;This API was first usable in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; since the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first enabled in the &lt;code&gt;v0.6.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-obsolete-sections" class="anchor" aria-hidden="true" href="#obsolete-sections"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Obsolete Sections&lt;/h1&gt;
&lt;p&gt;This section is just holding obsolete documentation sections that have been either renamed or removed so that existing links over the web are still valid.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-special-pcre-sequences" class="anchor" aria-hidden="true" href="#special-pcre-sequences"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Special PCRE Sequences&lt;/h2&gt;
&lt;p&gt;This section has been renamed to &lt;a href="#special-escaping-sequences"&gt;Special Escaping Sequences&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lualuajit-bytecode-support" class="anchor" aria-hidden="true" href="#lualuajit-bytecode-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lua/LuaJIT bytecode support&lt;/h2&gt;
&lt;p&gt;This section has been renamed to
&lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode support&lt;/a&gt;. As of version
&lt;code&gt;v0.10.16&lt;/code&gt; of this module, the standard Lua interpreter (also known
as "PUC-Rio Lua") is not supported anymore.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>openresty</author><guid isPermaLink="false">https://github.com/openresty/lua-nginx-module</guid><pubDate>Mon, 25 Nov 2019 00:08:00 GMT</pubDate></item><item><title>pjreddie/darknet #9 in C, This week</title><link>https://github.com/pjreddie/darknet</link><description>&lt;p&gt;&lt;i&gt;Convolutional Neural Networks&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e69d4118b20a42de4e23b9549f9a6ec6dbbb0814/687474703a2f2f706a7265646469652e636f6d2f6d656469612f66696c65732f6461726b6e65742d626c61636b2d736d616c6c2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e69d4118b20a42de4e23b9549f9a6ec6dbbb0814/687474703a2f2f706a7265646469652e636f6d2f6d656469612f66696c65732f6461726b6e65742d626c61636b2d736d616c6c2e706e67" alt="Darknet Logo" data-canonical-src="http://pjreddie.com/media/files/darknet-black-small.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-darknet" class="anchor" aria-hidden="true" href="#darknet"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Darknet&lt;/h1&gt;
&lt;p&gt;Darknet is an open source neural network framework written in C and CUDA. It is fast, easy to install, and supports CPU and GPU computation.&lt;/p&gt;
&lt;p&gt;For more information see the &lt;a href="http://pjreddie.com/darknet" rel="nofollow"&gt;Darknet project website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For questions or issues please use the &lt;a href="https://groups.google.com/forum/#!forum/darknet" rel="nofollow"&gt;Google Group&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>pjreddie</author><guid isPermaLink="false">https://github.com/pjreddie/darknet</guid><pubDate>Mon, 25 Nov 2019 00:09:00 GMT</pubDate></item><item><title>MarlinFirmware/Marlin #10 in C, This week</title><link>https://github.com/MarlinFirmware/Marlin</link><description>&lt;p&gt;&lt;i&gt;Optimized firmware for RepRap 3D printers based on the Arduino platform.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-marlin-3d-printer-firmware" class="anchor" aria-hidden="true" href="#marlin-3d-printer-firmware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Marlin 3D Printer Firmware&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="../../raw/1.1.x/buildroot/share/pixmaps/logo/marlin-250.png"&gt;&lt;img align="right" src="../../raw/1.1.x/buildroot/share/pixmaps/logo/marlin-250.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Marlin is the world's most popular open source firmware for Replicating Rapid Prototyper (RepRap) machines, commonly referred to as "3D printers." Marlin Firmware is highly efficient, running even on modest 16MHz embedded AVR processors. While Marlin 1.1 only supports ATmega AVR (Arduino, etc.) and AT90USB (Teensy++ 2.0), &lt;a href="https://github.com/MarlinFirmware/Marlin/tree/bugfix-2.0.x"&gt;Marlin 2.0&lt;/a&gt; also adds support for several ARM processors, including the SAM3X8E (Arduino Due), NXP LPC1768/LPC1769 ARM Cortex-M3 (Re-Arm, MKS SBASE, Smoothieboard), and ARM Cortex-M4 (Teensy 3.5/3.6, STM32F1/4/7).&lt;/p&gt;
&lt;p&gt;A monumental amount of talent and effort goes into Marlin production, and thanks are due to many volunteers around the world. We work closely with the community, contributors, vendors, host and library developers, etc. to improve the quality, configurability, and compatibility of Marlin Firmware with a &lt;a href="http://marlinfw.org/docs/configuration/configuration.html#motherboard" rel="nofollow"&gt;huge variety&lt;/a&gt; of boards. For the final 1.1 release we focused on code quality, performance, stability, and overall user experience. Several new features were added, many of which require no extra hardware.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Visit &lt;a href="http://marlinfw.org/" rel="nofollow"&gt;marlinfw.org&lt;/a&gt; for complete documentation on &lt;a href="http://marlinfw.org/docs/configuration/configuration.html" rel="nofollow"&gt;configuration&lt;/a&gt;, &lt;a href="http://marlinfw.org/docs/basics/install.html" rel="nofollow"&gt;installation&lt;/a&gt;, &lt;a href="http://marlinfw.org/meta/features/" rel="nofollow"&gt;features&lt;/a&gt;, and the many &lt;a href="http://marlinfw.org/meta/gcode/" rel="nofollow"&gt;G-codes&lt;/a&gt; that Marlin supports. We will continue to expand the site to include in-depth articles, tutorials, and how-to videos on all of Marlin's features.&lt;/li&gt;
&lt;li&gt;See the &lt;a href="https://github.com/MarlinFirmware/Marlin/releases"&gt;Releases&lt;/a&gt; page for Release Notes on all current and previous versions of Marlin.&lt;/li&gt;
&lt;li&gt;Check out the &lt;a href="http://reprap.org/wiki/Marlin" rel="nofollow"&gt;RepRap.org Marlin Page&lt;/a&gt; for an overview of Marlin and its role in the RepRap project.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-marlin-11x" class="anchor" aria-hidden="true" href="#marlin-11x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Marlin 1.1.x&lt;/h2&gt;
&lt;p&gt;The 1.1.x branch is home to all tagged releases of Marlin 1.1.&lt;/p&gt;
&lt;p&gt;Marlin 1.1.9 is the final release of the AVR-only flat version of Marlin Firmware, so there will be no further 1.1.x releases. However &lt;a href="https://github.com/MarlinFirmware/Marlin/tree/bugfix-1.1.x"&gt;&lt;code&gt;bugfix-1.1.x&lt;/code&gt;&lt;/a&gt; will continue to receive patches for critical bugs, so be sure to test it (or &lt;a href="https://github.com/MarlinFirmware/Marlin/tree/bugfix-2.0.x"&gt;&lt;code&gt;bugfix-2.0.x&lt;/code&gt;&lt;/a&gt;) before reporting any bugs you find in 1.1.9.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-marlin-20x" class="anchor" aria-hidden="true" href="#marlin-20x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Marlin 2.0.x&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/MarlinFirmware/Marlin/tree/bugfix-2.0.x"&gt;Marlin 2.0&lt;/a&gt; is the future, featuring a much-improved hierarchical file structure and full &lt;a href="https://github.com/MarlinFirmware/Marlin/tree/bugfix-2.0.x"&gt;32-bit support&lt;/a&gt; via a Hardware Access Layer (HAL). Marlin 2.0 continues to work with &lt;a href="https://www.arduino.cc/en/Main/Software" rel="nofollow"&gt;Arduino IDE&lt;/a&gt; for the platforms it supports, and the excellent &lt;a href="https://platformio.org/platformio-ide" rel="nofollow"&gt;PlatformIO IDE&lt;/a&gt; is recommended for the next generation of ARM-based boards. If you're looking for the very best that Marlin has to offer and aren't bothered by a few rough edges, give version 2.0 a try!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-to-marlin" class="anchor" aria-hidden="true" href="#contributing-to-marlin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing to Marlin&lt;/h2&gt;
&lt;p&gt;Click on the &lt;a href="https://github.com/MarlinFirmware/Marlin/issues"&gt;Issue Queue&lt;/a&gt; and &lt;a href="https://github.com/MarlinFirmware/Marlin/pulls"&gt;Pull Requests&lt;/a&gt; links above at any time to see what we're currently working on.&lt;/p&gt;
&lt;p&gt;To submit patches and new features for Marlin 2.0 check out the &lt;a href="https://github.com/MarlinFirmware/Marlin/tree/bugfix-2.0.x"&gt;bugfix-2.0.x&lt;/a&gt; branch, add your commits, and submit a Pull Request back to the &lt;code&gt;bugfix-2.0.x&lt;/code&gt; branch. Once 2.0.x has been certified for a critical mass of common 32-bit boards, it will become the next major release and will be the basis for all future major and minor releases.&lt;/p&gt;
&lt;p&gt;Note that our "bugfix" branches always contain the latest patches and new code. These patches may not be widely tested. As always, when using "nightly" builds of Marlin, proceed with full caution.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-marlin-resources" class="anchor" aria-hidden="true" href="#marlin-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Marlin Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://marlinfw.org/" rel="nofollow"&gt;Marlin Home Page&lt;/a&gt; - The Marlin Documentation Project. &lt;a href="https://github.com/MarlinFirmware/MarlinDocumentation"&gt;Help us&lt;/a&gt; expand this site!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/MarlinFirmware" rel="nofollow"&gt;@MarlinFirmware&lt;/a&gt; on Twitter - Follow for news, release alerts, and tips &amp;amp; tricks. (Maintained by &lt;a href="https://github.com/thinkyhead"&gt;@thinkyhead&lt;/a&gt;.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-marlin-user-support" class="anchor" aria-hidden="true" href="#marlin-user-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Marlin User Support&lt;/h2&gt;
&lt;p&gt;Looking for help? Our GitHub Issue Queue is only for development-related issues, feature requests, and bug reports. But there are several places where you can get help from experienced users:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://forums.reprap.org/list.php?415" rel="nofollow"&gt;RepRap.org Marlin Forum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/groups/1049718498464482/" rel="nofollow"&gt;"Marlin Firmware" Facebook Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discuss.toms3d.org/" rel="nofollow"&gt;Tom's 3D Forums&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discord.gg/n5NJ59y" rel="nofollow"&gt;Marlin on Discord&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;Marlin Admins:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Erik van der Zalm [&lt;a href="https://github.com/ErikZalm"&gt;@ErikZalm&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Scott Lahteine [&lt;a href="https://github.com/thinkyhead"&gt;@thinkyhead&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Roxanne Neufeld [&lt;a href="https://github.com/Roxy-3D"&gt;@Roxy-3D&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Bob Kuhn [&lt;a href="https://github.com/Bob-the-Kuhn"&gt;@Bob-the-Kuhn&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Notable contributors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Alberto Cotronei [&lt;a href="https://github.com/MagoKimbra"&gt;@MagoKimbra&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Andreas Hardtung [&lt;a href="https://github.com/AnHardt"&gt;@AnHardt&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Bernhard Kubicek [&lt;a href="https://github.com/bkubicek"&gt;@bkubicek&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Bob Cousins [&lt;a href="https://github.com/bobc"&gt;@bobc&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Chris Palmer [&lt;a href="https://github.com/nophead"&gt;@nophead&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Chris Pepper [&lt;a href="https://github.com/p3p"&gt;@p3p&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;David Braam [&lt;a href="https://github.com/daid"&gt;@daid&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Éduardo Tagle [&lt;a href="https://github.com/ejtagle"&gt;@ejtagle&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Edward Patel [&lt;a href="https://github.com/epatel"&gt;@epatel&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Ernesto Martinez [&lt;a href="https://github.com/emartinez167"&gt;@emartinez167&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;F. Malpartida [&lt;a href="https://github.com/fmalpartida"&gt;@fmalpartida&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Giuliano Zaro [&lt;a href="https://github.com/GMagician"&gt;@GMagician&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Jochen Groppe [&lt;a href="https://github.com/CONSULitAS"&gt;@CONSULitAS&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;João Brazio [&lt;a href="https://github.com/jbrazio"&gt;@jbrazio&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Kai [&lt;a href="https://github.com/Kaibob2"&gt;@Kaibob2&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Luc Van Daele[&lt;a href="https://github.com/LVD-AC"&gt;@LVD-AC&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Nico Tonnhofer [&lt;a href="https://github.com/Wurstnase"&gt;@Wurstnase&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Petr Zahradnik [&lt;a href="https://github.com/clexpert"&gt;@clexpert&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;Thomas Moore [&lt;a href="https://github.com/tcm0116"&gt;@tcm0116&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;[&lt;a href="https://github.com/alexxy"&gt;@alexxy&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;[&lt;a href="https://github.com/android444"&gt;@android444&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;[&lt;a href="https://github.com/benlye"&gt;@benlye&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;[&lt;a href="https://github.com/bgort"&gt;@bgort&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;[&lt;a href="https://github.com/Grogyan"&gt;@Grogyan&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;[&lt;a href="https://github.com/marcio-ao"&gt;@marcio-ao&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;[&lt;a href="https://github.com/maverikou"&gt;@maverikou&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;[&lt;a href="https://github.com/oysteinkrog"&gt;@oysteinkrog&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;[&lt;a href="https://github.com/p3p"&gt;@p3p&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;[&lt;a href="https://github.com/paclema"&gt;@paclema&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;[&lt;a href="https://github.com/paulusjacobus"&gt;@paulusjacobus&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;[&lt;a href="https://github.com/psavva"&gt;@psavva&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;[&lt;a href="https://github.com/Tannoo"&gt;@Tannoo&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;[&lt;a href="https://github.com/teemuatlut"&gt;@teemuatlut&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;...and you!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Marlin is published under the &lt;a href="https://github.com/COPYING.md"&gt;GPL license&lt;/a&gt; because we believe in open development. The GPL comes with both rights and obligations. Whether you use Marlin firmware as the driver for your open or closed-source product, you must keep Marlin open, and you must provide your compatible Marlin source code to end users upon request. The most straightforward way to comply with the Marlin license is to make a fork of Marlin on Github, perform your modifications, and direct users to your modified fork.&lt;/p&gt;
&lt;p&gt;While we can't prevent the use of this code in products (3D printers, CNC, etc.) that are closed source or crippled by a patent, we would prefer that you choose another firmware or, better yet, make your own.&lt;/p&gt;
&lt;hr&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://travis-ci.org/MarlinFirmware/Marlin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1c62fcaa5d5b2a499fe2d9ce32943c459438624c/68747470733a2f2f7472617669732d63692e6f72672f4d61726c696e4669726d776172652f4d61726c696e2e737667" alt="Travis Build Status" data-canonical-src="https://travis-ci.org/MarlinFirmware/Marlin.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flattr.com/submit/auto?user_id=thinkyhead&amp;amp;url=https://github.com/MarlinFirmware/Marlin&amp;amp;title=Marlin&amp;amp;language=&amp;amp;tags=github&amp;amp;category=software" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/739a757846f69c1cc10163619eec008e871b591b/687474703a2f2f6170692e666c617474722e636f6d2f627574746f6e2f666c617474722d62616467652d6c617267652e706e67" alt="Flattr Scott Lahteine" data-canonical-src="http://api.flattr.com/button/flattr-badge-large.png" style="max-width:100%;"&gt;&lt;/a&gt; - Flattr Scott Lahteine&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flattr.com/submit/auto?user_id=ErikZalm&amp;amp;url=https://github.com/MarlinFirmware/Marlin&amp;amp;title=Marlin&amp;amp;language=&amp;amp;tags=github&amp;amp;category=software" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/739a757846f69c1cc10163619eec008e871b591b/687474703a2f2f6170692e666c617474722e636f6d2f627574746f6e2f666c617474722d62616467652d6c617267652e706e67" alt="Flattr Erik van der Zalm" data-canonical-src="http://api.flattr.com/button/flattr-badge-large.png" style="max-width:100%;"&gt;&lt;/a&gt; - Flattr Erik van der Zalm&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>MarlinFirmware</author><guid isPermaLink="false">https://github.com/MarlinFirmware/Marlin</guid><pubDate>Mon, 25 Nov 2019 00:10:00 GMT</pubDate></item><item><title>espressif/arduino-esp32 #11 in C, This week</title><link>https://github.com/espressif/arduino-esp32</link><description>&lt;p&gt;&lt;i&gt;Arduino core for the ESP32&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-arduino-core-for-the-esp32" class="anchor" aria-hidden="true" href="#arduino-core-for-the-esp32"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Arduino core for the ESP32&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/espressif/arduino-esp32" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/99b7b50e418e6ed0e37794fd520fd722396aa5e2/68747470733a2f2f7472617669732d63692e6f72672f6573707265737369662f61726475696e6f2d65737033322e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/espressif/arduino-esp32.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/espressif/arduino-esp32/workflows/ESP32%20Arduino%20CI/badge.svg"&gt;&lt;img src="https://github.com/espressif/arduino-esp32/workflows/ESP32%20Arduino%20CI/badge.svg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-need-help-or-have-a-question-join-the-chat-at-" class="anchor" aria-hidden="true" href="#need-help-or-have-a-question-join-the-chat-at-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Need help or have a question? Join the chat at &lt;a href="https://gitter.im/espressif/arduino-esp32?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5ff24f59c743e4e0b3c245e4dc2dbbeedf1ad306/68747470733a2f2f6261646765732e6769747465722e696d2f6573707265737369662f61726475696e6f2d65737033322e737667" alt="https://gitter.im/espressif/arduino-esp32" data-canonical-src="https://badges.gitter.im/espressif/arduino-esp32.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#development-status"&gt;Development Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation-instructions"&gt;Installation Instructions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#decoding-exceptions"&gt;Decoding Exceptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#issuebug-report-template"&gt;Issue/Bug report template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#esp32dev-board-pinmap"&gt;ESP32Dev Board PINMAP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-development-status" class="anchor" aria-hidden="true" href="#development-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development Status&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/espressif/arduino-esp32/releases/latest/"&gt;Latest stable release &lt;img src="https://camo.githubusercontent.com/8a1875aace3889f9ab48c65082f67d0a2592f85d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6573707265737369662f61726475696e6f2d65737033322e7376673f7374796c653d706c6173746963" alt="Release Version" data-canonical-src="https://img.shields.io/github/release/espressif/arduino-esp32.svg?style=plastic" style="max-width:100%;"&gt; &lt;img src="https://camo.githubusercontent.com/598cc61956fd795f6afeaa5f83b90b03e7b0dcaf/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652f6573707265737369662f61726475696e6f2d65737033322e7376673f7374796c653d706c6173746963" alt="Release Date" data-canonical-src="https://img.shields.io/github/release-date/espressif/arduino-esp32.svg?style=plastic" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1de0131ec4c1e3b3dd7b3103a06235070c1292e2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6573707265737369662f61726475696e6f2d65737033322f6c61746573742f746f74616c2e7376673f7374796c653d706c6173746963"&gt;&lt;img src="https://camo.githubusercontent.com/1de0131ec4c1e3b3dd7b3103a06235070c1292e2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6573707265737369662f61726475696e6f2d65737033322f6c61746573742f746f74616c2e7376673f7374796c653d706c6173746963" alt="Downloads" data-canonical-src="https://img.shields.io/github/downloads/espressif/arduino-esp32/latest/total.svg?style=plastic" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/espressif/arduino-esp32/releases/latest/"&gt;Latest development release &lt;img src="https://camo.githubusercontent.com/d887e6d3d611a266139041835312348149b19b1b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6573707265737369662f61726475696e6f2d65737033322f616c6c2e7376673f7374796c653d706c6173746963" alt="Development Version" data-canonical-src="https://img.shields.io/github/release/espressif/arduino-esp32/all.svg?style=plastic" style="max-width:100%;"&gt; &lt;img src="https://camo.githubusercontent.com/210eed8ebec694f2cbb39013624c5b256c194c02/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652d7072652f6573707265737369662f61726475696e6f2d65737033322e7376673f7374796c653d706c6173746963" alt="Development Date" data-canonical-src="https://img.shields.io/github/release-date-pre/espressif/arduino-esp32.svg?style=plastic" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/65b7c8229e217d09829f318cbcc9b8765e5596ba/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732d7072652f6573707265737369662f61726475696e6f2d65737033322f6c61746573742f746f74616c2e7376673f7374796c653d706c6173746963"&gt;&lt;img src="https://camo.githubusercontent.com/65b7c8229e217d09829f318cbcc9b8765e5596ba/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732d7072652f6573707265737369662f61726475696e6f2d65737033322f6c61746573742f746f74616c2e7376673f7374796c653d706c6173746963" alt="Downloads" data-canonical-src="https://img.shields.io/github/downloads-pre/espressif/arduino-esp32/latest/total.svg?style=plastic" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installation-instructions" class="anchor" aria-hidden="true" href="#installation-instructions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation Instructions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Using Arduino IDE Boards Manager (preferred)
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/arduino-ide/boards_manager.md"&gt;Instructions for Boards Manager&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Using Arduino IDE with the development repository
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/arduino-ide/windows.md"&gt;Instructions for Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/arduino-ide/mac.md"&gt;Instructions for Mac&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/arduino-ide/debian_ubuntu.md"&gt;Instructions for Debian/Ubuntu Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/arduino-ide/fedora.md"&gt;Instructions for Fedora&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/arduino-ide/opensuse.md"&gt;Instructions for openSUSE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/platformio.md"&gt;Using PlatformIO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/make.md"&gt;Building with make&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/esp-idf_component.md"&gt;Using as ESP-IDF component&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/OTAWebUpdate/OTAWebUpdate.md"&gt;Using OTAWebUpdater&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-decoding-exceptions" class="anchor" aria-hidden="true" href="#decoding-exceptions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Decoding exceptions&lt;/h3&gt;
&lt;p&gt;You can use &lt;a href="https://github.com/me-no-dev/EspExceptionDecoder"&gt;EspExceptionDecoder&lt;/a&gt; to get meaningful call trace.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-issuebug-report-template" class="anchor" aria-hidden="true" href="#issuebug-report-template"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issue/Bug report template&lt;/h3&gt;
&lt;p&gt;Before reporting an issue, make sure you've searched for similar one that was already created. Also make sure to go through all the issues labelled as &lt;a href="https://github.com/espressif/arduino-esp32/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue%20label%3A%22for%20reference%22%20"&gt;for reference&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Finally, if you are sure no one else had the issue, follow the &lt;a href="docs/ISSUE_TEMPLATE.md"&gt;ISSUE_TEMPLATE&lt;/a&gt; while reporting any issue.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-esp32dev-board-pinmap" class="anchor" aria-hidden="true" href="#esp32dev-board-pinmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ESP32Dev Board PINMAP&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/esp32_pinmap.png"&gt;&lt;img src="docs/esp32_pinmap.png" alt="Pin Functions" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-tip" class="anchor" aria-hidden="true" href="#tip"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tip&lt;/h3&gt;
&lt;p&gt;Sometimes to program ESP32 via serial you must keep GPIO0 LOW during the programming process&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>espressif</author><guid isPermaLink="false">https://github.com/espressif/arduino-esp32</guid><pubDate>Mon, 25 Nov 2019 00:11:00 GMT</pubDate></item><item><title>ShadowsocksR-Live/shadowsocksr-native #12 in C, This week</title><link>https://github.com/ShadowsocksR-Live/shadowsocksr-native</link><description>&lt;p&gt;&lt;i&gt;从容翻越党国敏感日 ShadowsocksR (SSR) native implementation for all platforms, GFW terminator&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://avatars0.githubusercontent.com/u/30504070?s=200&amp;amp;v=4"&gt;&lt;img src="https://avatars0.githubusercontent.com/u/30504070?s=200&amp;amp;v=4" alt="shadowsocksr-native" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-shadowsocksr-native" class="anchor" aria-hidden="true" href="#shadowsocksr-native"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ShadowsocksR-native&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitter.im/ShadowsocksR-Live/Lobby" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/61dd9184ff6b7a8a36266b8b2d00b8b3de299ce7/68747470733a2f2f63646e30332e6769747465722e696d2f5f732f393137376230322f696d616765732f66617669636f6e2d726561642e69636f" alt="Join the chat at https://gitter.im/ShadowsocksR-Live/" data-canonical-src="https://cdn03.gitter.im/_s/9177b02/images/favicon-read.ico" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ShadowsocksR-Live/shadowsocksr-native/wiki"&gt;新特性: GFW 终结者 SSRoT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://palitechsociety.blogspot.com/2019/08/shadowsocksr-over-tls-ssrot-server.html" rel="nofollow"&gt;New feature: GFW terminator SSRoT English tutorial&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-index" class="anchor" aria-hidden="true" href="#index"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Index&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#intro"&gt;Intro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#protocols--obfuscators"&gt;Protocols &amp;amp; obfuscators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build"&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sample-configure-file"&gt;Sample configure file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cmake"&gt;cmake&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deploy-server"&gt;Deploy server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-intro" class="anchor" aria-hidden="true" href="#intro"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Intro&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;ShadowsocksR-native&lt;/strong&gt; is a lightweight secured SOCKS5 proxy for embedded devices and low-end boxes.
It's derived from &lt;a href="http://shadowsocks.org" rel="nofollow"&gt;Shadowsocks-libev&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is a port of &lt;a href="https://github.com/ShadowsocksR-Live/shadowsocksr"&gt;ShadowsocksR&lt;/a&gt;
created by &lt;a href="https://github.com/breakwa11"&gt;@breakwa11&lt;/a&gt;,
which is maintained by &lt;a href="https://github.com/ssrlive"&gt;@ssrlive&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Current version: 0.4 | &lt;a href="debian/changelog"&gt;Changelog&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;ShadowsocksR-native is written in pure C and only depends on
&lt;a href="https://github.com/libuv/libuv"&gt;libuv&lt;/a&gt; ,
&lt;a href="https://github.com/ARMmbed/mbedtls"&gt;mbedTLS&lt;/a&gt; ,
&lt;a href="https://github.com/jedisct1/libsodium"&gt;libsodium&lt;/a&gt; and
&lt;a href="https://github.com/json-c/json-c"&gt;json-c&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In normal usage, the memory footprint is about 600KB and the CPU utilization is
no more than 5% on a low-end router (Buffalo WHR-G300N V2 with a 400MHz MIPS CPU,
32MB memory and 4MB flash).&lt;/p&gt;
&lt;p&gt;For a full list of feature comparison between different versions of shadowsocks,
refer to the &lt;a href="https://github.com/shadowsocksr-live/shadowsocksr-native/wiki/"&gt;Wiki page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-encrypto-method" class="anchor" aria-hidden="true" href="#encrypto-method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Encrypto method&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;table&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rc4&lt;/td&gt;
&lt;td&gt;rc4-md5-6&lt;/td&gt;
&lt;td&gt;rc4-md5&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;aes-128-cfb&lt;/td&gt;
&lt;td&gt;aes-192-cfb&lt;/td&gt;
&lt;td&gt;aes-256-cfb&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;aes-128-ctr&lt;/td&gt;
&lt;td&gt;aes-192-ctr&lt;/td&gt;
&lt;td&gt;aes-256-ctr&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;camellia-128-cfb&lt;/td&gt;
&lt;td&gt;camellia-192-cfb&lt;/td&gt;
&lt;td&gt;camellia-256-cfb&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bf-cfb&lt;/td&gt;
&lt;td&gt;cast5-cfb&lt;/td&gt;
&lt;td&gt;des-cfb&lt;/td&gt;
&lt;td&gt;idea-cfb&lt;/td&gt;
&lt;td&gt;rc2-cfb&lt;/td&gt;
&lt;td&gt;seed-cfb&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;salsa20&lt;/td&gt;
&lt;td&gt;chacha20&lt;/td&gt;
&lt;td&gt;chacha20-ietf&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-protocols--obfuscators" class="anchor" aria-hidden="true" href="#protocols--obfuscators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Protocols &amp;amp; obfuscators&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Protocols&lt;/th&gt;
&lt;th&gt;obfuscators&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;origin&lt;/td&gt;
&lt;td&gt;plain&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;auth_sha1_v4&lt;/td&gt;
&lt;td&gt;http_simple&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;auth_aes128_sha1&lt;/td&gt;
&lt;td&gt;http_post&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;auth_aes128_md5&lt;/td&gt;
&lt;td&gt;http_mix&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;auth_chain_a&lt;/td&gt;
&lt;td&gt;tls1.2_ticket_auth&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;auth_chain_b&lt;/td&gt;
&lt;td&gt;tls1.2_ticket_fastauth&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;auth_chain_c/d/e/f&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;progress of data flow&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;+-----------------------------------------------------------------------------+
|                +--------------------------------------------------------+   |
|                |               +------------------------------------+   |   |
|                |               |            +-------------------+   |   |   |
|  obfuscator    |   encryptor   |  protocol  |     user data     |   |   |   |
|   |            |       |       |      |     +-------------------+   |   |   |
|   |            |       |       +------+-----------------------------+   |   |
|   |            +-------+--------------+---------------------------------+   |
+---+--------------------+--------------+-------------------------------------+
    |                    |              |                                            
    +-- server_encode    +-- encrypt    +-- server_pre_encrypt       &amp;lt;&amp;lt;&amp;lt;=== user data
    |                    |              |                                            
    +-- server_decode    +-- decrypt    +-- server_post_decrypt      ===&amp;gt;&amp;gt;&amp;gt; user data
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-build" class="anchor" aria-hidden="true" href="#build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-distribution-specific-guide" class="anchor" aria-hidden="true" href="#distribution-specific-guide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Distribution-specific guide&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#debian--ubuntu"&gt;Debian &amp;amp; Ubuntu&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#debian--ubuntu"&gt;Install from repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#fedora--rhel"&gt;Fedora &amp;amp; RHEL&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#centos"&gt;Install from repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#centos"&gt;CentOS&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#centos"&gt;Install from repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#macos"&gt;macOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#windows"&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-debian--ubuntu" class="anchor" aria-hidden="true" href="#debian--ubuntu"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debian &amp;amp; Ubuntu&lt;/h3&gt;
&lt;p&gt;For Unix-like systems, especially Debian-based systems,
e.g. Ubuntu, Debian or Linux Mint, you can build the binary like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Debian / Ubuntu&lt;/span&gt;
sudo su                       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; using root account&lt;/span&gt;
apt-get install --no-install-recommends build-essential autoconf libtool asciidoc xmlto -y
apt-get install git gcc g++ cmake automake -y
apt-get -f install -y
apt-get update -y
apt-get upgrade -y

&lt;span class="pl-c1"&gt;cd&lt;/span&gt; /                          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; switch to root directory&lt;/span&gt;
git clone https://github.com/ShadowsocksR-Live/shadowsocksr-native.git
mv shadowsocksr-native ssr-n  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; rename shadowsocksr-native to ssr-n&lt;/span&gt;
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; ssr-n                      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; enter ssr-n directory. &lt;/span&gt;
git submodule update --init
git submodule foreach -q &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;git checkout $(git config -f $toplevel/.gitmodules submodule.$name.branch || echo master)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; build ShadowsocksR-native&lt;/span&gt;
cmake CMakeLists.txt &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; make
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; make install&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; /bin/cp -rfa src/ssr-* /usr/bin&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The target binaries are &lt;code&gt;ssr-n/src/ssr-server&lt;/code&gt;, &lt;code&gt;ssr-n/src/ssr-client&lt;/code&gt; and &lt;code&gt;ssr-n/src/ssr-local&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-centos" class="anchor" aria-hidden="true" href="#centos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CentOS&lt;/h3&gt;
&lt;p&gt;CentOS 7 only. we don't support CentOS 6.x, it's too old.&lt;/p&gt;
&lt;p&gt;Before build &lt;code&gt;ssr-Native&lt;/code&gt;, we must install &lt;code&gt;cmake&lt;/code&gt; 3.x first. following &lt;a href="#cmake"&gt;this&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; CentOS / Fedora / RHEL&lt;/span&gt;
sudo su
yum install wget git gcc gcc-c++ autoconf automake libtool make asciidoc xmlto -y
curl https://cmake.org/files/v3.14/cmake-3.14.0-Linux-x86_64.sh -o a.sh
sh a.sh --prefix=/usr/ --exclude-subdir &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -rf a.sh
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; /
git clone https://github.com/ShadowsocksR-Live/shadowsocksr-native.git
mv shadowsocksr-native ssr-n
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; ssr-n
git submodule update --init
git submodule foreach -q &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;git checkout $(git config -f $toplevel/.gitmodules submodule.$name.branch || echo master)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

cmake &lt;span class="pl-c1"&gt;.&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; make
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; make install&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; /bin/cp -rfa src/ssr-* /usr/bin&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The target binaries are &lt;code&gt;ssr-n/src/ssr-server&lt;/code&gt;, &lt;code&gt;ssr-n/src/ssr-client&lt;/code&gt; and &lt;code&gt;ssr-n/src/ssr-local&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-macos" class="anchor" aria-hidden="true" href="#macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macOS&lt;/h3&gt;
&lt;p&gt;For macOS, we must download/install/run &lt;a href="https://developer.apple.com/xcode/" rel="nofollow"&gt;Xcode&lt;/a&gt; first.&lt;/p&gt;
&lt;p&gt;Then use &lt;a href="http://brew.sh" rel="nofollow"&gt;Homebrew&lt;/a&gt; to install or build.&lt;/p&gt;
&lt;p&gt;Install Homebrew and tools:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;ruby -e &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
brew install git cmake automake libtool
brew upgrade git cmake automake libtool&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now get source code and build it.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/ShadowsocksR-Live/shadowsocksr-native.git
mv shadowsocksr-native ssr-n
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; ssr-n
git submodule update --init
git submodule foreach -q &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;git checkout $(git config -f $toplevel/.gitmodules submodule.$name.branch || echo master)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

cmake &lt;span class="pl-c1"&gt;.&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; make&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The target binaries are &lt;code&gt;ssr-n/src/ssr-server&lt;/code&gt;, &lt;code&gt;ssr-n/src/ssr-client&lt;/code&gt; and &lt;code&gt;ssr-n/src/ssr-local&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h3&gt;
&lt;p&gt;For Windows, chekout the project using the following commands then open win32/ssr-native.sln with Visual Studio 2010. Enjoy it!&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/ShadowsocksR-Live/shadowsocksr-native.git 
git submodule update --init
git submodule foreach -q &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;git checkout $(git config -f $toplevel/.gitmodules submodule.$name.branch || echo master)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;For a detailed and complete list of all supported arguments, you may refer to the
man pages of the applications, respectively.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    ssr-[client|local|server]

       [-c &amp;lt;config_file&amp;gt;]         The path to config file

       [-d]                       Run in background as a daemon.

       [-h]                       Show this help message.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-sample-configure-file" class="anchor" aria-hidden="true" href="#sample-configure-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sample configure file&lt;/h2&gt;
&lt;p&gt;config.json&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;password&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;password&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;method&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;aes-128-ctr&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;protocol&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;auth_aes128_md5&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;protocol_param&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;obfs&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tls1.2_ticket_auth&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;obfs_param&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,

    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;udp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;timeout&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;300&lt;/span&gt;,

    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;server_settings&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;listen_address&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.0.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;listen_port&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;12475&lt;/span&gt;
    },

    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;client_settings&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;12.34.56.78&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;server_port&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;12475&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;listen_address&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.0.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;listen_port&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;1080&lt;/span&gt;
    },

    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;over_tls_settings&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;enable&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;server_domain&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;goodsitesample.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;path&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/udg151df/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;root_cert_file&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-cmake" class="anchor" aria-hidden="true" href="#cmake"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;cmake&lt;/h2&gt;
&lt;p&gt;In the CentOS 7, the cmake version is too old to work with ShadowsocksR-Native.
So we must install it by ourselves.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;sudo su
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; /
curl https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.sh -o a.sh
sh a.sh  --prefix=/usr/ --exclude-subdir
rm -rf a.sh
cmake --version&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And the &lt;code&gt;cmake --version&lt;/code&gt; command will output message likes:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cmake version 3.14.5
CMake suite maintained and supported by Kitware (kitware.com/cmake).
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-deploy-server" class="anchor" aria-hidden="true" href="#deploy-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deploy server&lt;/h2&gt;
&lt;p&gt;Supporting &lt;code&gt;CentOS 7&lt;/code&gt; / &lt;code&gt;Debian&lt;/code&gt; / &lt;code&gt;Ubuntu&lt;/code&gt; with the following commands&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo su
wget --no-check-certificate https://raw.githubusercontent.com/ShadowsocksR-Live/shadowsocksr-native/master/install/ssrn-install.sh
chmod +x ssrn-install.sh
./ssrn-install.sh 2&amp;gt;&amp;amp;1 | tee ssr-n.log
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After installation, we can view the status with&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;systemctl status ssr-native.service
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And we can view or edit the configuration with &lt;code&gt;cat&lt;/code&gt; or &lt;code&gt;vi&lt;/code&gt; in &lt;code&gt;root&lt;/code&gt; privilege&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat /etc/ssr-native/config.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After we changed the server configuration, we must restart the service to make the changes take effect.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;systemctl restart ssr-native.service
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To stop the server, please run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;systemctl stop ssr-native.service
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To uninstall the server, use the following command&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./ssrn-install.sh uninstall
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ShadowsocksR-Live</author><guid isPermaLink="false">https://github.com/ShadowsocksR-Live/shadowsocksr-native</guid><pubDate>Mon, 25 Nov 2019 00:12:00 GMT</pubDate></item><item><title>microsoft/mimalloc #13 in C, This week</title><link>https://github.com/microsoft/mimalloc</link><description>&lt;p&gt;&lt;i&gt;mimalloc is a compact general purpose allocator with excellent performance.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/mimalloc-logo.png"&gt;&lt;img align="left" width="100" height="100" src="doc/mimalloc-logo.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dev.azure.com/Daan0324/mimalloc/_build?definitionId=1&amp;amp;_a=summary" rel="nofollow"&gt;&lt;img align="right" src="https://camo.githubusercontent.com/d8fe01ab0e099c3609dc5fe5f113c77c76c2afef/68747470733a2f2f6465762e617a7572652e636f6d2f4461616e303332342f6d696d616c6c6f632f5f617069732f6275696c642f7374617475732f6d6963726f736f66742e6d696d616c6c6f633f6272616e63684e616d653d646576" data-canonical-src="https://dev.azure.com/Daan0324/mimalloc/_apis/build/status/microsoft.mimalloc?branchName=dev" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-mimalloc" class="anchor" aria-hidden="true" href="#mimalloc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;mimalloc&lt;/h1&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;mimalloc (pronounced "me-malloc")
is a general purpose allocator with excellent &lt;a href="#performance"&gt;performance&lt;/a&gt; characteristics.
Initially developed by Daan Leijen for the run-time systems of the
&lt;a href="https://github.com/koka-lang/koka"&gt;Koka&lt;/a&gt; and &lt;a href="https://github.com/leanprover/lean"&gt;Lean&lt;/a&gt; languages.&lt;/p&gt;
&lt;p&gt;It is a drop-in replacement for &lt;code&gt;malloc&lt;/code&gt; and can be used in other programs
without code changes, for example, on dynamically linked ELF-based systems (Linux, BSD, etc.) you can use it as:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; LD_PRELOAD=/usr/bin/libmimalloc.so  myprogram
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notable aspects of the design include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;small and consistent&lt;/strong&gt;: the library is about 6k LOC using simple and
consistent data structures. This makes it very suitable
to integrate and adapt in other projects. For runtime systems it
provides hooks for a monotonic &lt;em&gt;heartbeat&lt;/em&gt; and deferred freeing (for
bounded worst-case times with reference counting).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;free list sharding&lt;/strong&gt;: the big idea: instead of one big free list (per size class) we have
many smaller lists per memory "page" which both reduces fragmentation
and increases locality --
things that are allocated close in time get allocated close in memory.
(A memory "page" in &lt;em&gt;mimalloc&lt;/em&gt; contains blocks of one size class and is
usually 64KiB on a 64-bit system).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;eager page reset&lt;/strong&gt;: when a "page" becomes empty (with increased chance
due to free list sharding) the memory is marked to the OS as unused ("reset" or "purged")
reducing (real) memory pressure and fragmentation, especially in long running
programs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;secure&lt;/strong&gt;: &lt;em&gt;mimalloc&lt;/em&gt; can be built in secure mode, adding guard pages,
randomized allocation, encrypted free lists, etc. to protect against various
heap vulnerabilities. The performance penalty is usually around 10% on average
over our benchmarks.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;first-class heaps&lt;/strong&gt;: efficiently create and use multiple heaps to allocate across different regions.
A heap can be destroyed at once instead of deallocating each object separately.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;bounded&lt;/strong&gt;: it does not suffer from &lt;em&gt;blowup&lt;/em&gt; [1], has bounded worst-case allocation
times (&lt;em&gt;wcat&lt;/em&gt;), bounded space overhead (~0.2% meta-data, with at most 12.5% waste in allocation sizes),
and has no internal points of contention using only atomic operations.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;fast&lt;/strong&gt;: In our benchmarks (see &lt;a href="#performance"&gt;below&lt;/a&gt;),
&lt;em&gt;mimalloc&lt;/em&gt; always outperforms all other leading allocators (&lt;em&gt;jemalloc&lt;/em&gt;, &lt;em&gt;tcmalloc&lt;/em&gt;, &lt;em&gt;Hoard&lt;/em&gt;, etc),
and usually uses less memory (up to 25% more in the worst case). A nice property
is that it does consistently well over a wide range of benchmarks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;a href="https://microsoft.github.io/mimalloc" rel="nofollow"&gt;documentation&lt;/a&gt; gives a full overview of the API.
You can read more on the design of &lt;em&gt;mimalloc&lt;/em&gt; in the &lt;a href="https://www.microsoft.com/en-us/research/publication/mimalloc-free-list-sharding-in-action" rel="nofollow"&gt;technical report&lt;/a&gt; which also has detailed benchmark results.&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-releases" class="anchor" aria-hidden="true" href="#releases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Releases&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2019-11-22, &lt;code&gt;v1.2.0&lt;/code&gt;: stable release 1.2: bug fixes, improved secure mode (free list corruption checks, double free mitigation). Improved dynamic overriding on Windows.&lt;/li&gt;
&lt;li&gt;2019-10-07, &lt;code&gt;v1.1.0&lt;/code&gt;: stable release 1.1.&lt;/li&gt;
&lt;li&gt;2019-09-01, &lt;code&gt;v1.0.8&lt;/code&gt;: pre-release 8: more robust windows dynamic overriding, initial huge page support.&lt;/li&gt;
&lt;li&gt;2019-08-10, &lt;code&gt;v1.0.6&lt;/code&gt;: pre-release 6: various performance improvements.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h2&gt;
&lt;p&gt;Open &lt;code&gt;ide/vs2019/mimalloc.sln&lt;/code&gt; in Visual Studio 2019 and build (or &lt;code&gt;ide/vs2017/mimalloc.sln&lt;/code&gt;).
The &lt;code&gt;mimalloc&lt;/code&gt; project builds a static library (in &lt;code&gt;out/msvc-x64&lt;/code&gt;), while the
&lt;code&gt;mimalloc-override&lt;/code&gt; project builds a DLL for overriding malloc
in the entire program.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-macos-linux-bsd-etc" class="anchor" aria-hidden="true" href="#macos-linux-bsd-etc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macOS, Linux, BSD, etc.&lt;/h2&gt;
&lt;p&gt;We use &lt;a href="https://cmake.org" rel="nofollow"&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt;&lt;sup&gt;1&lt;/sup&gt; as the build system:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; mkdir -p out/release
&amp;gt; cd out/release
&amp;gt; cmake ../..
&amp;gt; make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This builds the library as a shared (dynamic)
library (&lt;code&gt;.so&lt;/code&gt; or &lt;code&gt;.dylib&lt;/code&gt;), a static library (&lt;code&gt;.a&lt;/code&gt;), and
as a single object file (&lt;code&gt;.o&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; sudo make install&lt;/code&gt; (install the library and header files in &lt;code&gt;/usr/local/lib&lt;/code&gt;  and &lt;code&gt;/usr/local/include&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;You can build the debug version which does many internal checks and
maintains detailed statistics as:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; mkdir -p out/debug
&amp;gt; cd out/debug
&amp;gt; cmake -DCMAKE_BUILD_TYPE=Debug ../..
&amp;gt; make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will name the shared library as &lt;code&gt;libmimalloc-debug.so&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Finally, you can build a &lt;em&gt;secure&lt;/em&gt; version that uses guard pages, encrypted
free lists, etc., as:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; mkdir -p out/secure
&amp;gt; cd out/secure
&amp;gt; cmake -DMI_SECURE=ON ../..
&amp;gt; make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will name the shared library as &lt;code&gt;libmimalloc-secure.so&lt;/code&gt;.
Use &lt;code&gt;ccmake&lt;/code&gt;&lt;sup&gt;2&lt;/sup&gt; instead of &lt;code&gt;cmake&lt;/code&gt;
to see and customize all the available build options.&lt;/p&gt;
&lt;p&gt;Notes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install CMake: &lt;code&gt;sudo apt-get install cmake&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Install CCMake: &lt;code&gt;sudo apt-get install cmake-curses-gui&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;&lt;a id="user-content-using-the-library" class="anchor" aria-hidden="true" href="#using-the-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using the library&lt;/h1&gt;
&lt;p&gt;The preferred usage is including &lt;code&gt;&amp;lt;mimalloc.h&amp;gt;&lt;/code&gt;, linking with
the shared- or static library, and using the &lt;code&gt;mi_malloc&lt;/code&gt; API exclusively for allocation. For example,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; gcc -o myprogram -lmimalloc myfile.c
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;mimalloc uses only safe OS calls (&lt;code&gt;mmap&lt;/code&gt; and &lt;code&gt;VirtualAlloc&lt;/code&gt;) and can co-exist
with other allocators linked to the same program.
If you use &lt;code&gt;cmake&lt;/code&gt;, you can simply use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;find_package(mimalloc 1.0 REQUIRED)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;in your &lt;code&gt;CMakeLists.txt&lt;/code&gt; to find a locally installed mimalloc. Then use either:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;target_link_libraries(myapp PUBLIC mimalloc)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to link with the shared (dynamic) library, or:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;target_link_libraries(myapp PUBLIC mimalloc-static)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to link with the static library. See &lt;code&gt;test\CMakeLists.txt&lt;/code&gt; for an example.&lt;/p&gt;
&lt;p&gt;For best performance in C++ programs, it is also recommended to override the
global &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;delete&lt;/code&gt; operators. For convience, mimalloc provides
&lt;a href="https://github.com/microsoft/mimalloc/blob/master/include/mimalloc-new-delete.h"&gt;mimalloc-new-delete.h&lt;/a&gt; which does this for you -- just include it in a single(!) source file in your project.&lt;/p&gt;
&lt;p&gt;You can pass environment variables to print verbose messages (&lt;code&gt;MIMALLOC_VERBOSE=1&lt;/code&gt;)
and statistics (&lt;code&gt;MIMALLOC_SHOW_STATS=1&lt;/code&gt;) (in the debug version):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; env MIMALLOC_SHOW_STATS=1 ./cfrac 175451865205073170563711388363

175451865205073170563711388363 = 374456281610909315237213 * 468551

heap stats:     peak      total      freed       unit
normal   2:    16.4 kb    17.5 mb    17.5 mb      16 b   ok
normal   3:    16.3 kb    15.2 mb    15.2 mb      24 b   ok
normal   4:      64 b      4.6 kb     4.6 kb      32 b   ok
normal   5:      80 b    118.4 kb   118.4 kb      40 b   ok
normal   6:      48 b       48 b       48 b       48 b   ok
normal  17:     960 b      960 b      960 b      320 b   ok

heap stats:     peak      total      freed       unit
    normal:    33.9 kb    32.8 mb    32.8 mb       1 b   ok
      huge:       0 b        0 b        0 b        1 b   ok
     total:    33.9 kb    32.8 mb    32.8 mb       1 b   ok
malloc requested:         32.8 mb

 committed:    58.2 kb    58.2 kb    58.2 kb       1 b   ok
  reserved:     2.0 mb     2.0 mb     2.0 mb       1 b   ok
     reset:       0 b        0 b        0 b        1 b   ok
  segments:       1          1          1
-abandoned:       0
     pages:       6          6          6
-abandoned:       0
     mmaps:       3
 mmap fast:       0
 mmap slow:       1
   threads:       0
   elapsed:     2.022s
   process: user: 1.781s, system: 0.016s, faults: 756, reclaims: 0, rss: 2.7 mb
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The above model of using the &lt;code&gt;mi_&lt;/code&gt; prefixed API is not always possible
though in existing programs that already use the standard malloc interface,
and another option is to override the standard malloc interface
completely and redirect all calls to the &lt;em&gt;mimalloc&lt;/em&gt; library instead.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-environment-options" class="anchor" aria-hidden="true" href="#environment-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Environment Options&lt;/h2&gt;
&lt;p&gt;You can set further options either programmatically (using &lt;a href="https://microsoft.github.io/mimalloc/group__options.html" rel="nofollow"&gt;&lt;code&gt;mi_option_set&lt;/code&gt;&lt;/a&gt;),
or via environment variables.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;MIMALLOC_SHOW_STATS=1&lt;/code&gt;: show statistics when the program terminates.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MIMALLOC_VERBOSE=1&lt;/code&gt;: show verbose messages.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MIMALLOC_SHOW_ERRORS=1&lt;/code&gt;: show error and warning messages.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MIMALLOC_LARGE_OS_PAGES=1&lt;/code&gt;: use large OS pages when available; for some workloads this can significantly
improve performance. Use &lt;code&gt;MIMALLOC_VERBOSE&lt;/code&gt; to check if the large OS pages are enabled -- usually one needs
to explicitly allow large OS pages (as on &lt;a href="https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/enable-the-lock-pages-in-memory-option-windows?view=sql-server-2017" rel="nofollow"&gt;Windows&lt;/a&gt; and &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/5/html/tuning_and_optimizing_red_hat_enterprise_linux_for_oracle_9i_and_10g_databases/sect-oracle_9i_and_10g_tuning_guide-large_memory_optimization_big_pages_and_huge_pages-configuring_huge_pages_in_red_hat_enterprise_linux_4_or_5" rel="nofollow"&gt;Linux&lt;/a&gt;). However, sometimes
the OS is very slow to reserve contiguous physical memory for large OS pages so use with care on systems that
can have fragmented memory.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MIMALLOC_EAGER_REGION_COMMIT=1&lt;/code&gt;: on Windows, commit large (256MiB) regions eagerly. On Windows, these regions
show in the working set even though usually just a small part is committed to physical memory. This is why it
turned off by default on Windows as it looks not good in the task manager. However, in reality it is always better
to turn it on as it improves performance and has no other drawbacks.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MIMALLOC_RESERVE_HUGE_OS_PAGES=N&lt;/code&gt;: where N is the number of 1GiB huge OS pages. This reserves the huge pages at
startup and can give quite a performance improvement on long running workloads. Usually it is better to not use
&lt;code&gt;MIMALLOC_LARGE_OS_PAGES&lt;/code&gt; in combination with this setting. Just like large OS pages, use with care as reserving
contiguous physical memory can take a long time when memory is fragmented. Still experimental.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-overriding-malloc" class="anchor" aria-hidden="true" href="#overriding-malloc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overriding Malloc&lt;/h1&gt;
&lt;p&gt;Overriding the standard &lt;code&gt;malloc&lt;/code&gt; can be done either &lt;em&gt;dynamically&lt;/em&gt; or &lt;em&gt;statically&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dynamic-override" class="anchor" aria-hidden="true" href="#dynamic-override"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dynamic override&lt;/h2&gt;
&lt;p&gt;This is the recommended way to override the standard malloc interface.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-linux-bsd" class="anchor" aria-hidden="true" href="#linux-bsd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux, BSD&lt;/h3&gt;
&lt;p&gt;On these ELF-based systems we preload the mimalloc shared
library so all calls to the standard &lt;code&gt;malloc&lt;/code&gt; interface are
resolved to the &lt;em&gt;mimalloc&lt;/em&gt; library.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; env LD_PRELOAD=/usr/lib/libmimalloc.so myprogram
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can set extra environment variables to check that mimalloc is running,
like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; env MIMALLOC_VERBOSE=1 LD_PRELOAD=/usr/lib/libmimalloc.so myprogram
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or run with the debug version to get detailed statistics:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; env MIMALLOC_SHOW_STATS=1 LD_PRELOAD=/usr/lib/libmimalloc-debug.so myprogram
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-macos" class="anchor" aria-hidden="true" href="#macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MacOS&lt;/h3&gt;
&lt;p&gt;On macOS we can also preload the mimalloc shared
library so all calls to the standard &lt;code&gt;malloc&lt;/code&gt; interface are
resolved to the &lt;em&gt;mimalloc&lt;/em&gt; library.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; env DYLD_FORCE_FLAT_NAMESPACE=1 DYLD_INSERT_LIBRARIES=/usr/lib/libmimalloc.dylib myprogram
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that certain security restrictions may apply when doing this from
the &lt;a href="https://stackoverflow.com/questions/43941322/dyld-insert-libraries-ignored-when-calling-application-through-bash" rel="nofollow"&gt;shell&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note: unfortunately, at this time, dynamic overriding on macOS seems broken but it is actively worked on to fix this
(see issue &lt;a href="https://github.com/microsoft/mimalloc/issues/50"&gt;&lt;code&gt;#50&lt;/code&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-windows-1" class="anchor" aria-hidden="true" href="#windows-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h3&gt;
&lt;p&gt;On Windows you need to link your program explicitly with the mimalloc
DLL and use the C-runtime library as a DLL (using the &lt;code&gt;/MD&lt;/code&gt; or &lt;code&gt;/MDd&lt;/code&gt; switch).
Moreover, you need to ensure the &lt;code&gt;mimalloc-redirect.dll&lt;/code&gt; (or &lt;code&gt;mimalloc-redirect32.dll&lt;/code&gt;) is available
in the same folder as the main &lt;code&gt;mimalloc-override.dll&lt;/code&gt; at runtime (as it is a dependency).
The redirection DLL ensures that all calls to the C runtime malloc API get redirected to
mimalloc (in &lt;code&gt;mimalloc-override.dll&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;To ensure the mimalloc DLL is loaded at run-time it is easiest to insert some
call to the mimalloc API in the &lt;code&gt;main&lt;/code&gt; function, like &lt;code&gt;mi_version()&lt;/code&gt;
(or use the &lt;code&gt;/INCLUDE:mi_version&lt;/code&gt; switch on the linker). See the &lt;code&gt;mimalloc-override-test&lt;/code&gt; project
for an example on how to use this. For best performance on Windows with C++, it
is highly recommended to also override the &lt;code&gt;new&lt;/code&gt;/&lt;code&gt;delete&lt;/code&gt; operations (as described
in the introduction).&lt;/p&gt;
&lt;p&gt;The environment variable &lt;code&gt;MIMALLOC_DISABLE_REDIRECT=1&lt;/code&gt; can be used to disable dynamic
overriding at run-time. Use &lt;code&gt;MIMALLOC_VERBOSE=1&lt;/code&gt; to check if mimalloc was successfully redirected.&lt;/p&gt;
&lt;p&gt;(Note: in principle, it is possible to patch existing executables
that are linked with the dynamic C runtime (&lt;code&gt;ucrtbase.dll&lt;/code&gt;) by just putting the &lt;code&gt;mimalloc-override.dll&lt;/code&gt; into the import table (and putting &lt;code&gt;mimalloc-redirect.dll&lt;/code&gt; in the same folder)
Such patching can be done for example with &lt;a href="https://ntcore.com/?page_id=388" rel="nofollow"&gt;CFF Explorer&lt;/a&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-static-override" class="anchor" aria-hidden="true" href="#static-override"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Static override&lt;/h2&gt;
&lt;p&gt;On Unix-like systems, you can also statically link with &lt;em&gt;mimalloc&lt;/em&gt; to override the standard
malloc interface. The recommended way is to link the final program with the
&lt;em&gt;mimalloc&lt;/em&gt; single object file (&lt;code&gt;mimalloc-override.o&lt;/code&gt;). We use
an object file instead of a library file as linkers give preference to
that over archives to resolve symbols. To ensure that the standard
malloc interface resolves to the &lt;em&gt;mimalloc&lt;/em&gt; library, link it as the first
object file. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; gcc -o myprogram mimalloc-override.o  myfile1.c ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Another way to override statically that works on all platforms, is to
link statically to mimalloc (as shown in the introduction) and include a
header file in each source file that re-defines &lt;code&gt;malloc&lt;/code&gt; etc. to &lt;code&gt;mi_malloc&lt;/code&gt;.
This is provided by &lt;a href="https://github.com/microsoft/mimalloc/blob/master/include/mimalloc-override.h"&gt;&lt;code&gt;mimalloc-override.h&lt;/code&gt;&lt;/a&gt;. This only works reliably though if all sources are
under your control or otherwise mixing of pointers from different heaps may occur!&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance&lt;/h1&gt;
&lt;p&gt;We tested &lt;em&gt;mimalloc&lt;/em&gt; against many other top allocators over a wide
range of benchmarks, ranging from various real world programs to
synthetic benchmarks that see how the allocator behaves under more
extreme circumstances.&lt;/p&gt;
&lt;p&gt;In our benchmarks, &lt;em&gt;mimalloc&lt;/em&gt; always outperforms all other leading
allocators (&lt;em&gt;jemalloc&lt;/em&gt;, &lt;em&gt;tcmalloc&lt;/em&gt;, &lt;em&gt;Hoard&lt;/em&gt;, etc), and usually uses less
memory (up to 25% more in the worst case). A nice property is that it
does &lt;em&gt;consistently&lt;/em&gt; well over the wide range of benchmarks.&lt;/p&gt;
&lt;p&gt;Allocators are interesting as there exists no algorithm that is generally
optimal -- for a given allocator one can usually construct a workload
where it does not do so well. The goal is thus to find an allocation
strategy that performs well over a wide range of benchmarks without
suffering from underperformance in less common situations (which is what
the second half of our benchmark set tests for).&lt;/p&gt;
&lt;p&gt;We show here only the results on an AMD EPYC system (Apr 2019) -- for
specific details and further benchmarks we refer to the &lt;a href="https://www.microsoft.com/en-us/research/publication/mimalloc-free-list-sharding-in-action" rel="nofollow"&gt;technical report&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The benchmark suite is scripted and available separately
as &lt;a href="https://github.com/daanx/mimalloc-bench"&gt;mimalloc-bench&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-benchmark-results" class="anchor" aria-hidden="true" href="#benchmark-results"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Benchmark Results&lt;/h2&gt;
&lt;p&gt;Testing on a big Amazon EC2 instance (&lt;a href="https://aws.amazon.com/ec2/instance-types/" rel="nofollow"&gt;r5a.4xlarge&lt;/a&gt;)
consisting of a 16-core AMD EPYC 7000 at 2.5GHz
with 128GB ECC memory, running	Ubuntu 18.04.1 with LibC 2.27 and GCC 7.3.0.
The measured allocators are &lt;em&gt;mimalloc&lt;/em&gt; (mi),
Google's &lt;a href="https://github.com/gperftools/gperftools"&gt;&lt;em&gt;tcmalloc&lt;/em&gt;&lt;/a&gt; (tc) used in Chrome,
&lt;a href="https://github.com/jemalloc/jemalloc"&gt;&lt;em&gt;jemalloc&lt;/em&gt;&lt;/a&gt; (je) by Jason Evans used in Firefox and FreeBSD,
&lt;a href="https://github.com/microsoft/snmalloc"&gt;&lt;em&gt;snmalloc&lt;/em&gt;&lt;/a&gt; (sn) by Liétar et al. [8], &lt;a href="https://github.com/rampantpixels/rpmalloc"&gt;&lt;em&gt;rpmalloc&lt;/em&gt;&lt;/a&gt; (rp) by Mattias Jansson at Rampant Pixels,
&lt;a href="https://github.com/emeryberger/Hoard"&gt;&lt;em&gt;Hoard&lt;/em&gt;&lt;/a&gt; by Emery Berger [1],
the system allocator (glibc) (based on &lt;em&gt;PtMalloc2&lt;/em&gt;), and the Intel thread
building blocks &lt;a href="https://github.com/intel/tbb"&gt;allocator&lt;/a&gt; (tbb).&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/bench-r5a-1.svg"&gt;&lt;img src="doc/bench-r5a-1.svg" alt="bench-r5a-1" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="doc/bench-r5a-2.svg"&gt;&lt;img src="doc/bench-r5a-2.svg" alt="bench-r5a-2" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Memory usage:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/bench-r5a-rss-1.svg"&gt;&lt;img src="doc/bench-r5a-rss-1.svg" alt="bench-r5a-rss-1" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="doc/bench-r5a-rss-2.svg"&gt;&lt;img src="doc/bench-r5a-rss-2.svg" alt="bench-r5a-rss-1" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(note: the &lt;em&gt;xmalloc-testN&lt;/em&gt; memory usage should be disregarded as it
allocates more the faster the program runs).&lt;/p&gt;
&lt;p&gt;In the first five benchmarks we can see &lt;em&gt;mimalloc&lt;/em&gt; outperforms the other
allocators moderately, but we also see that all these modern allocators
perform well -- the times of large performance differences in regular
workloads are over :-).
In &lt;em&gt;cfrac&lt;/em&gt; and &lt;em&gt;espresso&lt;/em&gt;, &lt;em&gt;mimalloc&lt;/em&gt; is a tad faster than &lt;em&gt;tcmalloc&lt;/em&gt; and
&lt;em&gt;jemalloc&lt;/em&gt;, but a solid 10% faster than all other allocators on
&lt;em&gt;espresso&lt;/em&gt;. The &lt;em&gt;tbb&lt;/em&gt; allocator does not do so well here and lags more than
20% behind &lt;em&gt;mimalloc&lt;/em&gt;. The &lt;em&gt;cfrac&lt;/em&gt; and &lt;em&gt;espresso&lt;/em&gt; programs do not use much
memory (~1.5MB) so it does not matter too much, but still &lt;em&gt;mimalloc&lt;/em&gt; uses
about half the resident memory of &lt;em&gt;tcmalloc&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;leanN&lt;/em&gt; program is most interesting as a large realistic and
concurrent workload of the &lt;a href="https://github.com/leanprover/lean"&gt;Lean&lt;/a&gt; theorem prover
compiling its own standard library, and there is a 8% speedup over &lt;em&gt;tcmalloc&lt;/em&gt;. This is
quite significant: if Lean spends 20% of its time in the
allocator that means that &lt;em&gt;mimalloc&lt;/em&gt; is 1.3× faster than &lt;em&gt;tcmalloc&lt;/em&gt;
here. (This is surprising as that is not measured in a pure
allocation benchmark like &lt;em&gt;alloc-test&lt;/em&gt;. We conjecture that we see this
outsized improvement here because &lt;em&gt;mimalloc&lt;/em&gt; has better locality in
the allocation which improves performance for the &lt;em&gt;other&lt;/em&gt; computations
in a program as well).&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;redis&lt;/em&gt; benchmark shows more differences between the allocators where
&lt;em&gt;mimalloc&lt;/em&gt; is 14% faster than &lt;em&gt;jemalloc&lt;/em&gt;. On this benchmark &lt;em&gt;tbb&lt;/em&gt; (and &lt;em&gt;Hoard&lt;/em&gt;) do
not do well and are over 40% slower.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;larson&lt;/em&gt; server workload allocates and frees objects between
many threads. Larson and Krishnan [2] observe this
behavior (which they call &lt;em&gt;bleeding&lt;/em&gt;) in actual server applications, and the
benchmark simulates this.
Here, &lt;em&gt;mimalloc&lt;/em&gt; is more than 2.5× faster than &lt;em&gt;tcmalloc&lt;/em&gt; and &lt;em&gt;jemalloc&lt;/em&gt;
due to the object migration between different threads. This is a difficult
benchmark for other allocators too where &lt;em&gt;mimalloc&lt;/em&gt; is still 48% faster than the next
fastest (&lt;em&gt;snmalloc&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;The second benchmark set tests specific aspects of the allocators and
shows even more extreme differences between them.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;alloc-test&lt;/em&gt;, by
&lt;a href="http://ithare.com/testing-memory-allocators-ptmalloc2-tcmalloc-hoard-jemalloc-while-trying-to-simulate-real-world-loads/" rel="nofollow"&gt;OLogN Technologies AG&lt;/a&gt;, is a very allocation intensive benchmark doing millions of
allocations in various size classes. The test is scaled such that when an
allocator performs almost identically on &lt;em&gt;alloc-test1&lt;/em&gt; as &lt;em&gt;alloc-testN&lt;/em&gt; it
means that it scales linearly. Here, &lt;em&gt;tcmalloc&lt;/em&gt;, &lt;em&gt;snmalloc&lt;/em&gt;, and
&lt;em&gt;Hoard&lt;/em&gt; seem to scale less well and do more than 10% worse on the
multi-core version. Even the best allocators (&lt;em&gt;tcmalloc&lt;/em&gt; and &lt;em&gt;jemalloc&lt;/em&gt;) are
more than 10% slower as &lt;em&gt;mimalloc&lt;/em&gt; here.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;sh6bench&lt;/em&gt; and &lt;em&gt;sh8bench&lt;/em&gt; benchmarks are
developed by &lt;a href="http://www.microquill.com/" rel="nofollow"&gt;MicroQuill&lt;/a&gt; as part of SmartHeap.
In &lt;em&gt;sh6bench&lt;/em&gt; &lt;em&gt;mimalloc&lt;/em&gt; does much
better than the others (more than 2× faster than &lt;em&gt;jemalloc&lt;/em&gt;).
We cannot explain this well but believe it is
caused in part by the "reverse" free-ing pattern in &lt;em&gt;sh6bench&lt;/em&gt;.
Again in &lt;em&gt;sh8bench&lt;/em&gt; the &lt;em&gt;mimalloc&lt;/em&gt; allocator handles object migration
between threads much better and is over 36% faster than the next best
allocator, &lt;em&gt;snmalloc&lt;/em&gt;. Whereas &lt;em&gt;tcmalloc&lt;/em&gt; did well on &lt;em&gt;sh6bench&lt;/em&gt;, the
addition of object migration caused it to be almost 3 times slower
than before.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;xmalloc-testN&lt;/em&gt; benchmark by Lever and Boreham [5] and Christian Eder,
simulates an asymmetric workload where
some threads only allocate, and others only free. The &lt;em&gt;snmalloc&lt;/em&gt;
allocator was especially developed to handle this case well as it
often occurs in concurrent message passing systems (like the [Pony] language
for which &lt;em&gt;snmalloc&lt;/em&gt; was initially developed). Here we see that
the &lt;em&gt;mimalloc&lt;/em&gt; technique of having non-contended sharded thread free
lists pays off as it even outperforms &lt;em&gt;snmalloc&lt;/em&gt; here.
Only &lt;em&gt;jemalloc&lt;/em&gt; also handles this reasonably well, while the
others underperform by a large margin.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;cache-scratch&lt;/em&gt; benchmark by Emery Berger [1], and introduced with the Hoard
allocator to test for &lt;em&gt;passive-false&lt;/em&gt; sharing of cache lines. With a single thread they all
perform the same, but when running with multiple threads the potential allocator
induced false sharing of the cache lines causes large run-time
differences, where &lt;em&gt;mimalloc&lt;/em&gt; is more than 18× faster than &lt;em&gt;jemalloc&lt;/em&gt; and
&lt;em&gt;tcmalloc&lt;/em&gt;! Crundal [6] describes in detail why the false cache line
sharing occurs in the &lt;em&gt;tcmalloc&lt;/em&gt; design, and also discusses how this
can be avoided with some small implementation changes.
Only &lt;em&gt;snmalloc&lt;/em&gt; and &lt;em&gt;tbb&lt;/em&gt; also avoid the
cache line sharing like &lt;em&gt;mimalloc&lt;/em&gt;. Kukanov and Voss [7] describe in detail
how the design of &lt;em&gt;tbb&lt;/em&gt; avoids the false cache line sharing.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-references" class="anchor" aria-hidden="true" href="#references"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;References&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[1] Emery D. Berger, Kathryn S. McKinley, Robert D. Blumofe, and Paul R. Wilson.
&lt;em&gt;Hoard: A Scalable Memory Allocator for Multithreaded Applications&lt;/em&gt;
the Ninth International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS-IX). Cambridge, MA, November 2000.
&lt;a href="http://www.cs.utexas.edu/users/mckinley/papers/asplos-2000.pdf" rel="nofollow"&gt;pdf&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[2] P. Larson and M. Krishnan. &lt;em&gt;Memory allocation for long-running server applications&lt;/em&gt;. In ISMM, Vancouver, B.C., Canada, 1998.
&lt;a href="http://citeseer.ist.psu.edu/viewdoc/download;jsessionid=5F0BFB4F57832AEB6C11BF8257271088?doi=10.1.1.45.1947&amp;amp;rep=rep1&amp;amp;type=pdf" rel="nofollow"&gt;pdf&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[3] D. Grunwald, B. Zorn, and R. Henderson.
&lt;em&gt;Improving the cache locality of memory allocation&lt;/em&gt;. In R. Cartwright, editor,
Proceedings of the Conference on Programming Language Design and Implementation, pages 177–186, New York, NY, USA, June 1993.
&lt;a href="http://citeseer.ist.psu.edu/viewdoc/download?doi=10.1.1.43.6621&amp;amp;rep=rep1&amp;amp;type=pdf" rel="nofollow"&gt;pdf&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[4] J. Barnes and P. Hut. &lt;em&gt;A hierarchical O(n*log(n)) force-calculation algorithm&lt;/em&gt;. Nature, 324:446-449, 1986.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[5] C. Lever, and D. Boreham. &lt;em&gt;Malloc() Performance in a Multithreaded Linux Environment.&lt;/em&gt;
In USENIX Annual Technical Conference, Freenix Session. San Diego, CA. Jun. 2000.
Available at &lt;a href="https://github.com/kuszmaul/SuperMalloc/tree/master/tests"&gt;https://github.com/kuszmaul/SuperMalloc/tree/master/tests&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[6] Timothy Crundal. &lt;em&gt;Reducing Active-False Sharing in TCMalloc.&lt;/em&gt;
2016. &lt;a href="http://courses.cecs.anu.edu.au/courses/CSPROJECTS/16S1/Reports/Timothy_Crundal_Report.pdf" rel="nofollow"&gt;http://courses.cecs.anu.edu.au/courses/CSPROJECTS/16S1/Reports/Timothy_Crundal_Report.pdf&lt;/a&gt;. CS16S1 project at the Australian National University.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[7] Alexey Kukanov, and Michael J Voss.
&lt;em&gt;The Foundations for Scalable Multi-Core Software in Intel Threading Building Blocks.&lt;/em&gt;
Intel Technology Journal 11 (4). 2007&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[8] Paul Liétar, Theodore Butler, Sylvan Clebsch, Sophia Drossopoulou, Juliana Franco, Matthew J Parkinson,
Alex Shamis, Christoph M Wintersteiger, and David Chisnall.
&lt;em&gt;Snmalloc: A Message Passing Allocator.&lt;/em&gt;
In Proceedings of the 2019 ACM SIGPLAN International Symposium on Memory Management, 122–135. ACM. 2019.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;This project welcomes contributions and suggestions.  Most contributions require you to agree to a
Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us
the rights to use your contribution. For details, visit &lt;a href="https://cla.microsoft.com" rel="nofollow"&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide
a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions
provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>microsoft</author><guid isPermaLink="false">https://github.com/microsoft/mimalloc</guid><pubDate>Mon, 25 Nov 2019 00:13:00 GMT</pubDate></item><item><title>espressif/esp-idf #14 in C, This week</title><link>https://github.com/espressif/esp-idf</link><description>&lt;p&gt;&lt;i&gt;Espressif IoT Development Framework. Official development framework for ESP32.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-espressif-iot-development-framework" class="anchor" aria-hidden="true" href="#espressif-iot-development-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Espressif IoT Development Framework&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./README_CN.md"&gt;中文版&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/?badge=latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1af20a2147d12aca36403d0181d88e229da2640f/68747470733a2f2f72656164746865646f63732e636f6d2f70726f6a656374732f6573707265737369662d6573702d6964662f62616467652f3f76657273696f6e3d6c6174657374" alt="Documentation Status" data-canonical-src="https://readthedocs.com/projects/espressif-esp-idf/badge/?version=latest" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ESP-IDF is the official development framework for the &lt;a href="https://espressif.com/en/products/hardware/esp32/overview" rel="nofollow"&gt;ESP32&lt;/a&gt; chip.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-developing-with-esp-idf" class="anchor" aria-hidden="true" href="#developing-with-esp-idf"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developing With ESP-IDF&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-setting-up-esp-idf" class="anchor" aria-hidden="true" href="#setting-up-esp-idf"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting Up ESP-IDF&lt;/h2&gt;
&lt;p&gt;See setup guides for detailed instructions to set up the ESP-IDF:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.espressif.com/projects/esp-idf/en/stable/get-started/" rel="nofollow"&gt;Getting Started Guide for the stable ESP-IDF version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/get-started/" rel="nofollow"&gt;Getting Started Guide for the latest (master branch) ESP-IDF version&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-non-github-forks" class="anchor" aria-hidden="true" href="#non-github-forks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Non-GitHub forks&lt;/h3&gt;
&lt;p&gt;ESP-IDF uses relative locations as its submodules URLs (&lt;a href=".gitmodules"&gt;.gitmodules&lt;/a&gt;). So they link to GitHub.
If ESP-IDF is forked to a Git repository which is not on GitHub, you will need to run the script
&lt;a href="tools/set-submodules-to-github.sh"&gt;tools/set-submodules-to-github.sh&lt;/a&gt; after git clone.
The script sets absolute URLs for all submodules, allowing &lt;code&gt;git submodule update --init --recursive&lt;/code&gt; to complete.
If cloning ESP-IDF from GitHub, this step is not needed.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-finding-a-project" class="anchor" aria-hidden="true" href="#finding-a-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Finding a Project&lt;/h2&gt;
&lt;p&gt;As well as the &lt;a href="https://github.com/espressif/esp-idf-template"&gt;esp-idf-template&lt;/a&gt; project mentioned in Getting Started, ESP-IDF comes with some example projects in the &lt;a href="examples"&gt;examples&lt;/a&gt; directory.&lt;/p&gt;
&lt;p&gt;Once you've found the project you want to work with, change to its directory and you can configure and build it.&lt;/p&gt;
&lt;p&gt;To start your own project based on an example, copy the example project directory outside of the ESP-IDF directory.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-quick-reference" class="anchor" aria-hidden="true" href="#quick-reference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Reference&lt;/h1&gt;
&lt;p&gt;See the Getting Started guide links above for a detailed setup guide. This is a quick reference for common commands when working with ESP-IDF projects:&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-setup-build-environment" class="anchor" aria-hidden="true" href="#setup-build-environment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup Build Environment&lt;/h2&gt;
&lt;p&gt;(See Getting Started guide for a full list of required steps with details.)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install host build dependencies mentioned in Getting Started guide.&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;tools/&lt;/code&gt; directory to the PATH&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;python -m pip install -r requirements.txt&lt;/code&gt; to install Python dependencies&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-configuring-the-project" class="anchor" aria-hidden="true" href="#configuring-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring the Project&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;idf.py menuconfig&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Opens a text-based configuration menu for the project.&lt;/li&gt;
&lt;li&gt;Use up &amp;amp; down arrow keys to navigate the menu.&lt;/li&gt;
&lt;li&gt;Use Enter key to go into a submenu, Escape key to go out or to exit.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;?&lt;/code&gt; to see a help screen. Enter key exits the help screen.&lt;/li&gt;
&lt;li&gt;Use Space key, or &lt;code&gt;Y&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt; keys to enable (Yes) and disable (No) configuration items with checkboxes "&lt;code&gt;[*]&lt;/code&gt;"&lt;/li&gt;
&lt;li&gt;Pressing &lt;code&gt;?&lt;/code&gt; while highlighting a configuration item displays help about that item.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;/&lt;/code&gt; to search the configuration items.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once done configuring, press Escape multiple times to exit and say "Yes" to save the new configuration when prompted.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling-the-project" class="anchor" aria-hidden="true" href="#compiling-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling the Project&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;idf.py build&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;... will compile app, bootloader and generate a partition table based on the config.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-flashing-the-project" class="anchor" aria-hidden="true" href="#flashing-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flashing the Project&lt;/h2&gt;
&lt;p&gt;When the build finishes, it will print a command line to use esptool.py to flash the chip. However you can also do this automatically by running:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;idf.py -p PORT flash&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Replace PORT with the name of your serial port (like &lt;code&gt;COM3&lt;/code&gt; on Windows, &lt;code&gt;/dev/ttyUSB0&lt;/code&gt; on Linux, or &lt;code&gt;/dev/cu.usbserial-X&lt;/code&gt; on MacOS. If the &lt;code&gt;-p&lt;/code&gt; option is left out, &lt;code&gt;idf.py flash&lt;/code&gt; will try to flash the first available serial port.&lt;/p&gt;
&lt;p&gt;This will flash the entire project (app, bootloader and partition table) to a new chip. The settings for serial port flashing can be configured with &lt;code&gt;idf.py menuconfig&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You don't need to run &lt;code&gt;idf.py build&lt;/code&gt; before running &lt;code&gt;idf.py flash&lt;/code&gt;, &lt;code&gt;idf.py flash&lt;/code&gt; will automatically rebuild anything which needs it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-viewing-serial-output" class="anchor" aria-hidden="true" href="#viewing-serial-output"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Viewing Serial Output&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;idf.py monitor&lt;/code&gt; target uses the &lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/get-started/idf-monitor.html" rel="nofollow"&gt;idf_monitor tool&lt;/a&gt; to display serial output from the ESP32. idf_monitor also has a range of features to decode crash output and interact with the device. &lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/get-started/idf-monitor.html" rel="nofollow"&gt;Check the documentation page for details&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Exit the monitor by typing Ctrl-].&lt;/p&gt;
&lt;p&gt;To build, flash and monitor output in one pass, you can run:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;idf.py flash monitor&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling--flashing-only-the-app" class="anchor" aria-hidden="true" href="#compiling--flashing-only-the-app"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling &amp;amp; Flashing Only the App&lt;/h2&gt;
&lt;p&gt;After the initial flash, you may just want to build and flash just your app, not the bootloader and partition table:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;idf.py app&lt;/code&gt; - build just the app.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;idf.py app-flash&lt;/code&gt; - flash just the app.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;idf.py app-flash&lt;/code&gt; will automatically rebuild the app if any source files have changed.&lt;/p&gt;
&lt;p&gt;(In normal development there's no downside to reflashing the bootloader and partition table each time, if they haven't changed.)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-erasing-flash" class="anchor" aria-hidden="true" href="#erasing-flash"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Erasing Flash&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;idf.py flash&lt;/code&gt; target does not erase the entire flash contents. However it is sometimes useful to set the device back to a totally erased state, particularly when making partition table changes or OTA app updates. To erase the entire flash, run &lt;code&gt;idf.py erase_flash&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This can be combined with other targets, ie &lt;code&gt;idf.py -p PORT erase_flash flash&lt;/code&gt; will erase everything and then re-flash the new app, bootloader and partition table.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Documentation for the latest version: &lt;a href="https://docs.espressif.com/projects/esp-idf/" rel="nofollow"&gt;https://docs.espressif.com/projects/esp-idf/&lt;/a&gt;. This documentation is built from the &lt;a href="docs"&gt;docs directory&lt;/a&gt; of this repository.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href="https://esp32.com/" rel="nofollow"&gt;esp32.com forum&lt;/a&gt; is a place to ask questions and find community resources.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/espressif/esp-idf/issues"&gt;Check the Issues section on github&lt;/a&gt; if you find a bug or have a feature request. Please check existing Issues before opening a new one.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you're interested in contributing to ESP-IDF, please check the &lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/contribute/index.html" rel="nofollow"&gt;Contributions Guide&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>espressif</author><guid isPermaLink="false">https://github.com/espressif/esp-idf</guid><pubDate>Mon, 25 Nov 2019 00:14:00 GMT</pubDate></item><item><title>zephyrproject-rtos/zephyr #15 in C, This week</title><link>https://github.com/zephyrproject-rtos/zephyr</link><description>&lt;p&gt;&lt;i&gt;Primary Git Repository for the Zephyr Project. Zephyr is a new generation, scalable, optimized, secure RTOS for multiple hardware architectures.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body rst" data-path="README.rst"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;a href="https://www.zephyrproject.org" rel="nofollow"&gt;
  &lt;p align="center"&gt;
    &lt;img src="doc/images/Zephyr-Project.png" style="max-width:100%;"&gt;
  &lt;/p&gt;
&lt;/a&gt;

&lt;a href="https://bestpractices.coreinfrastructure.org/projects/74" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9b972176ff3cc1b05418042ea4ba7ea5ada4c002/68747470733a2f2f626573747072616374696365732e636f7265696e6672617374727563747572652e6f72672f70726f6a656374732f37342f6261646765" data-canonical-src="https://bestpractices.coreinfrastructure.org/projects/74/badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e6dac3ced16d1df7fda34ae359303e08c6167b7f/68747470733a2f2f6170692e736869707061626c652e636f6d2f70726f6a656374732f3538666662326238626161356533303730303265316437392f62616467653f6272616e63683d6d6173746572"&gt;&lt;img src="https://camo.githubusercontent.com/e6dac3ced16d1df7fda34ae359303e08c6167b7f/68747470733a2f2f6170692e736869707061626c652e636f6d2f70726f6a656374732f3538666662326238626161356533303730303265316437392f62616467653f6272616e63683d6d6173746572" data-canonical-src="https://api.shippable.com/projects/58ffb2b8baa5e307002e1d79/badge?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The Zephyr Project is a scalable real-time operating system (RTOS) supporting
multiple hardware architectures, optimized for resource constrained devices,
and built with security in mind.&lt;/p&gt;
&lt;p&gt;The Zephyr OS is based on a small-footprint kernel designed for use on
resource-constrained systems: from simple embedded environmental sensors and
LED wearables to sophisticated smart watches and IoT wireless gateways.&lt;/p&gt;
&lt;p&gt;The Zephyr kernel supports multiple architectures, including ARM Cortex-M,
Intel x86, ARC, Nios II, Tensilica Xtensa, and RISC-V, and a large number of
&lt;a href="http://docs.zephyrproject.org/latest/boards/index.html" rel="nofollow"&gt;supported boards&lt;/a&gt;.&lt;/p&gt;
&lt;a name="user-content-getting-started"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;Welcome to Zephyr! See the &lt;a href="http://docs.zephyrproject.org/latest/introduction/index.html" rel="nofollow"&gt;Introduction to Zephyr&lt;/a&gt; for a high-level overview,
and the documentation's &lt;a href="http://docs.zephyrproject.org/latest/getting_started/index.html" rel="nofollow"&gt;Getting Started Guide&lt;/a&gt; to start developing.&lt;/p&gt;
&lt;a name="user-content-community-support"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-community-support" class="anchor" aria-hidden="true" href="#community-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community Support&lt;/h2&gt;
&lt;p&gt;Community support is provided via mailing lists and Slack; see the Resources
below for details.&lt;/p&gt;
&lt;a name="user-content-resources"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;p&gt;Here's a quick summary of resources to help you find your way around:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Help&lt;/strong&gt;: &lt;a href="https://docs.zephyrproject.org/latest/guides/getting-help.html" rel="nofollow"&gt;Asking for Help Tips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: &lt;a href="http://docs.zephyrproject.org" rel="nofollow"&gt;http://docs.zephyrproject.org&lt;/a&gt; (&lt;a href="http://docs.zephyrproject.org/latest/getting_started/index.html" rel="nofollow"&gt;Getting Started Guide&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Source Code&lt;/strong&gt;: &lt;a href="https://github.com/zephyrproject-rtos/zephyr"&gt;https://github.com/zephyrproject-rtos/zephyr&lt;/a&gt; is the main
repository; &lt;a href="https://elixir.bootlin.com/zephyr/latest/source" rel="nofollow"&gt;https://elixir.bootlin.com/zephyr/latest/source&lt;/a&gt; contains a
searchable index&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Releases&lt;/strong&gt;: &lt;a href="https://zephyrproject.org/developers/#downloads" rel="nofollow"&gt;https://zephyrproject.org/developers/#downloads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Samples and example code&lt;/strong&gt;: see &lt;a href="http://docs.zephyrproject.org/latest/samples/index.html" rel="nofollow"&gt;Sample and Demo Code Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mailing Lists&lt;/strong&gt;: &lt;a href="mailto:users@lists.zephyrproject.org"&gt;users@lists.zephyrproject.org&lt;/a&gt; and
&lt;a href="mailto:devel@lists.zephyrproject.org"&gt;devel@lists.zephyrproject.org&lt;/a&gt; are the main user and developer mailing lists,
respectively. You can join the developer's list and search its archives at
&lt;a href="https://lists.zephyrproject.org/g/devel" rel="nofollow"&gt;Zephyr Development mailing list&lt;/a&gt;. The other &lt;a href="https://lists.zephyrproject.org/g/main/subgroups" rel="nofollow"&gt;Zephyr mailing list
subgroups&lt;/a&gt; have their own archives and sign-up pages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Nightly CI Build Status&lt;/strong&gt;: &lt;a href="https://lists.zephyrproject.org/g/builds" rel="nofollow"&gt;https://lists.zephyrproject.org/g/builds&lt;/a&gt;
The &lt;a href="mailto:builds@lists.zephyrproject.org"&gt;builds@lists.zephyrproject.org&lt;/a&gt; mailing list archives the CI
(shippable) nightly build results.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Chat&lt;/strong&gt;: Zephyr's Slack workspace is &lt;a href="https://zephyrproject.slack.com" rel="nofollow"&gt;https://zephyrproject.slack.com&lt;/a&gt;.  Use
this &lt;a href="https://tinyurl.com/y5glwylp" rel="nofollow"&gt;Slack Invite&lt;/a&gt; to register.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Contributing&lt;/strong&gt;: see the &lt;a href="http://docs.zephyrproject.org/latest/contribute/index.html" rel="nofollow"&gt;Contribution Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Wiki&lt;/strong&gt;: &lt;a href="https://github.com/zephyrproject-rtos/zephyr/wiki"&gt;Zephyr GitHub wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Issues&lt;/strong&gt;: &lt;a href="https://github.com/zephyrproject-rtos/zephyr/issues"&gt;https://github.com/zephyrproject-rtos/zephyr/issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security Issues&lt;/strong&gt;: Email &lt;a href="mailto:vulnerabilities@zephyrproject.org"&gt;vulnerabilities@zephyrproject.org&lt;/a&gt; to report
security issues; also see our &lt;a href="http://docs.zephyrproject.org/latest/security/index.html" rel="nofollow"&gt;Security&lt;/a&gt; documentation. Security issues are
tracked separately at &lt;a href="https://zephyrprojectsec.atlassian.net" rel="nofollow"&gt;https://zephyrprojectsec.atlassian.net&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zephyr Project Website&lt;/strong&gt;: &lt;a href="https://zephyrproject.org" rel="nofollow"&gt;https://zephyrproject.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/article&gt;&lt;/div&gt;</description><author>zephyrproject-rtos</author><guid isPermaLink="false">https://github.com/zephyrproject-rtos/zephyr</guid><pubDate>Mon, 25 Nov 2019 00:15:00 GMT</pubDate></item><item><title>greenplum-db/gpdb #16 in C, This week</title><link>https://github.com/greenplum-db/gpdb</link><description>&lt;p&gt;&lt;i&gt;Greenplum Database&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;strong&gt;Concourse Pipeline&lt;/strong&gt; &lt;a href="https://prod.ci.gpdb.pivotal.io/teams/main/pipelines/gpdb_master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b1c442f10dabca8b5c9739cebd375f5f00ce596f/68747470733a2f2f70726f642e63692e677064622e7069766f74616c2e696f2f6170692f76312f7465616d732f6d61696e2f706970656c696e65732f677064625f6d61737465722f6261646765" alt="Concourse Build Status" data-canonical-src="https://prod.ci.gpdb.pivotal.io/api/v1/teams/main/pipelines/gpdb_master/badge" style="max-width:100%;"&gt;&lt;/a&gt; |
&lt;strong&gt;Travis Build&lt;/strong&gt; &lt;a href="https://travis-ci.org/greenplum-db/gpdb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6d99483e7e7c7505691e14024fe8a73f563b1a35/68747470733a2f2f7472617669732d63692e6f72672f677265656e706c756d2d64622f677064622e7376673f6272616e63683d6d6173746572" alt="Travis Build Status" data-canonical-src="https://travis-ci.org/greenplum-db/gpdb.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="logo-greenplum.png"&gt;&lt;img src="logo-greenplum.png" alt="Greenplum" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Greenplum Database (GPDB) is an advanced, fully featured, open
source data warehouse, based on PostgreSQL. It provides powerful and rapid analytics on
petabyte scale data volumes. Uniquely geared toward big data
analytics, Greenplum Database is powered by the world’s most advanced
cost-based query optimizer delivering high analytical query
performance on large data volumes.&lt;/p&gt;
&lt;p&gt;The Greenplum project is released under the &lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;Apache 2
license&lt;/a&gt;. We want to thank
all our past and present community contributors and are really interested in
all new potential contributions. For the Greenplum Database community
no contribution is too small, we encourage all types of contributions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;A Greenplum cluster consists of a &lt;strong&gt;master&lt;/strong&gt; server, and multiple
&lt;strong&gt;segment&lt;/strong&gt; servers. All user data resides in the segments, the master
contains only metadata. The master server, and all the segments, share
the same schema.&lt;/p&gt;
&lt;p&gt;Users always connect to the master server, which divides up the query
into fragments that are executed in the segments, and collects the results.&lt;/p&gt;
&lt;p&gt;More information can be found on the &lt;a href="https://greenplum.org/" rel="nofollow"&gt;project website&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-greenplum-database-with-gporca" class="anchor" aria-hidden="true" href="#building-greenplum-database-with-gporca"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Greenplum Database with GPORCA&lt;/h2&gt;
&lt;p&gt;GPORCA is a cost-based optimizer which is used by Greenplum Database in
conjunction with the PostgreSQL planner.  It is also known as just ORCA,
and Pivotal Optimizer. The code for GPORCA resides in a
separate repository, below are steps outlining how to build Greenplum with
GPORCA enabled.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installing-dependencies-for-macos-developers" class="anchor" aria-hidden="true" href="#installing-dependencies-for-macos-developers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing dependencies (for macOS developers)&lt;/h3&gt;
&lt;p&gt;Follow &lt;a href="README.macOS.md"&gt;these macOS steps&lt;/a&gt; for getting your system ready for GPDB&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installing-dependencies-for-linux-developers" class="anchor" aria-hidden="true" href="#installing-dependencies-for-linux-developers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing dependencies (for Linux developers)&lt;/h3&gt;
&lt;p&gt;Follow &lt;a href="README.linux.md"&gt;appropriate linux steps&lt;/a&gt; for getting your system ready for GPDB&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-buildorca"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-build-the-optimizer" class="anchor" aria-hidden="true" href="#build-the-optimizer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build the optimizer&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-automatically-with-conan-dependency-manager" class="anchor" aria-hidden="true" href="#automatically-with-conan-dependency-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Automatically with Conan dependency manager&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; depends
./configure
make
make install_local
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; ..&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-manually" class="anchor" aria-hidden="true" href="#manually"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually&lt;/h4&gt;
&lt;p&gt;Follow the directions in the &lt;a href="https://github.com/greenplum-db/gporca"&gt;GPORCA README&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Get the latest GPORCA &lt;code&gt;git pull --ff-only&lt;/code&gt; if you see an error message like below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;checking Checking ORCA version... configure: error: Your ORCA version is expected to be 2.33.XXX
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-build-the-database" class="anchor" aria-hidden="true" href="#build-the-database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build the database&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;# Configure build environment to install at /usr/local/gpdb
./configure --with-perl --with-python --with-libxml --with-gssapi --prefix=/usr/local/gpdb

# Compile and install
make -j8
make -j8 install

# Bring in greenplum environment into your running shell
source /usr/local/gpdb/greenplum_path.sh

# Start demo cluster
make create-demo-cluster
# (gpdemo-env.sh contains __PGPORT__ and __MASTER_DATA_DIRECTORY__ values)
source gpAux/gpdemo/gpdemo-env.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The directory and the TCP ports for the demo cluster can be changed on the fly.
Instead of &lt;code&gt;make cluster&lt;/code&gt;, consider:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;DATADIRS=/tmp/gpdb-cluster PORT_BASE=5555 make cluster
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The TCP port for the regression test can be changed on the fly:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PGPORT=5555 make installcheck-world
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once build and started, run &lt;code&gt;psql&lt;/code&gt; and check the GPOPT (e.g. GPORCA) version:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;select gp_opt_version();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To turn GPORCA off and use Postgres planner for query optimization:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set optimizer=off;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want to clean all generated files&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make distclean
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-running-tests" class="anchor" aria-hidden="true" href="#running-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running tests&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The default regression tests&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;make installcheck-world
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The top-level target &lt;strong&gt;installcheck-world&lt;/strong&gt; will run all regression
tests in GPDB against the running cluster. For testing individual
parts, the respective targets can be run separately.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The PostgreSQL &lt;strong&gt;check&lt;/strong&gt; target does not work. Setting up a
Greenplum cluster is more complicated than a single-node PostgreSQL
installation, and no-one's done the work to have &lt;strong&gt;make check&lt;/strong&gt;
create a cluster. Create a cluster manually or use gpAux/gpdemo/
(example below) and run the toplevel &lt;strong&gt;make installcheck-world&lt;/strong&gt;
against that. Patches are welcome!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The PostgreSQL &lt;strong&gt;installcheck&lt;/strong&gt; target does not work either, because
some tests are known to fail with Greenplum. The
&lt;strong&gt;installcheck-good&lt;/strong&gt; schedule in &lt;strong&gt;src/test/regress&lt;/strong&gt; excludes those
tests.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When adding a new test, please add it to one of the GPDB-specific tests,
in greenplum_schedule, rather than the PostgreSQL tests inherited from the
upstream. We try to keep the upstream tests identical to the upstream
versions, to make merging with newer PostgreSQL releases easier.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-alternative-configurations" class="anchor" aria-hidden="true" href="#alternative-configurations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alternative Configurations&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-building-gpdb-without-gporca" class="anchor" aria-hidden="true" href="#building-gpdb-without-gporca"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building GPDB without GPORCA&lt;/h3&gt;
&lt;p&gt;Currently, GPDB is built with GPORCA by default so latest GPORCA libraries and headers need
to be available in the environment. &lt;a href="#buildOrca"&gt;Build and Install&lt;/a&gt; the latest GPORCA.&lt;/p&gt;
&lt;p&gt;If you want to build GPDB without GPORCA, configure requires &lt;code&gt;--disable-orca&lt;/code&gt; flag to be set.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Clean environment
make distclean

# Configure build environment to install at /usr/local/gpdb
./configure --disable-orca --with-perl --with-python --with-libxml --prefix=/usr/local/gpdb
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-building-gpdb-with-pxf" class="anchor" aria-hidden="true" href="#building-gpdb-with-pxf"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building GPDB with PXF&lt;/h3&gt;
&lt;p&gt;PXF is an extension framework for GPDB to enable fast access to external hadoop datasets.
Refer to &lt;a href="gpcontrib/pxf/README.md"&gt;PXF extension&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;Currently, GPDB is built with PXF by default (--enable-pxf is on).
In order to build GPDB without pxf, simply invoke &lt;code&gt;./configure&lt;/code&gt; with additional option &lt;code&gt;--disable-pxf&lt;/code&gt;.
PXF requires curl, so &lt;code&gt;--enable-pxf&lt;/code&gt; is not compatible with the &lt;code&gt;--without-libcurl&lt;/code&gt; option.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-gpdb-with-gpperfmon-enabled" class="anchor" aria-hidden="true" href="#building-gpdb-with-gpperfmon-enabled"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building GPDB with gpperfmon enabled&lt;/h3&gt;
&lt;p&gt;gpperfmon tracks a variety of queries, statistics, system properties, and metrics.
To build with it enabled, change your &lt;code&gt;configure&lt;/code&gt; to have an additional option
&lt;code&gt;--enable-gpperfmon&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;See &lt;a href="gpAux/gpperfmon/README.md"&gt;more information about gpperfmon here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;gpperfmon is dependent on several libraries like apr, apu, and libsigar&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-gpdb-with-python3-enabled" class="anchor" aria-hidden="true" href="#building-gpdb-with-python3-enabled"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building GPDB with Python3 enabled&lt;/h3&gt;
&lt;p&gt;GPDB supports Python3 with plpython3u UDF&lt;/p&gt;
&lt;p&gt;See &lt;a href="src/pl/plpython/README.md"&gt;how to enable Python3&lt;/a&gt; for details.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-gpdb-client-tools-on-windows" class="anchor" aria-hidden="true" href="#building-gpdb-client-tools-on-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building GPDB client tools on Windows&lt;/h3&gt;
&lt;p&gt;See &lt;a href="README.windows.md"&gt;Building GPDB client tools on Windows&lt;/a&gt; for details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-development-with-docker" class="anchor" aria-hidden="true" href="#development-with-docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development with Docker&lt;/h2&gt;
&lt;p&gt;See &lt;a href="README.docker.md"&gt;README.docker.md&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We provide a docker image with all dependencies required to compile and test
GPDB &lt;a href="src/tools/docker/README.md"&gt;(See Usage)&lt;/a&gt;. You can view the dependency dockerfile at &lt;code&gt;./src/tools/docker/centos6-admin/Dockerfile&lt;/code&gt;.
The image is hosted on docker hub at &lt;code&gt;pivotaldata/gpdb-dev:centos6-gpadmin&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A quickstart guide to Docker can be found on the &lt;a href="http://engineering.pivotal.io/post/docker-gpdb/" rel="nofollow"&gt;Pivotal Engineering Journal&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-development-with-vagrant" class="anchor" aria-hidden="true" href="#development-with-vagrant"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development with Vagrant&lt;/h2&gt;
&lt;p&gt;There is a Vagrant-based &lt;a href="src/tools/vagrant/README.md"&gt;quickstart guide for developers&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-code-layout" class="anchor" aria-hidden="true" href="#code-layout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code layout&lt;/h2&gt;
&lt;p&gt;The directory layout of the repository follows the same general layout
as upstream PostgreSQL. There are changes compared to PostgreSQL
throughout the codebase, but a few larger additions worth noting:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;gpMgmt/&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Contains Greenplum-specific command-line tools for managing the
cluster. Scripts like gpinit, gpstart, gpstop live here. They are
mostly written in Python.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;gpAux/&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Contains Greenplum-specific release management scripts, and vendored
dependencies. Some additional directories are submodules and will be
made available over time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;gpcontrib/&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Much like the PostgreSQL contrib/ directory, this directory contains
extensions such as gpfdist, PXF and gpmapreduce which are Greenplum-specific.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;doc/&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In PostgreSQL, the user manual lives here. In Greenplum, the user
manual is maintained separately and only the reference pages used
to build man pages are here.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;gpdb-doc/&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Contains the Greenplum documentation in DITA XML format. Refer to
&lt;code&gt;gpdb-doc/README.md&lt;/code&gt; for information on how to build, and work with
the documentation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ci/&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Contains configuration files for the GPDB continuous integration system.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;src/backend/cdb/&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Contains larger Greenplum-specific backend modules. For example,
communication between segments, turning plans into parallelizable
plans, mirroring, distributed transaction and snapshot management,
etc. &lt;strong&gt;cdb&lt;/strong&gt; stands for &lt;strong&gt;Cluster Database&lt;/strong&gt; - it was a workname used in
the early days. That name is no longer used, but the &lt;strong&gt;cdb&lt;/strong&gt; prefix
remains.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;src/backend/gpopt/&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Contains the so-called &lt;strong&gt;translator&lt;/strong&gt; library, for using the GPORCA
optimizer with Greenplum. The translator library is written in C++
code, and contains glue code for translating plans and queries
between the DXL format used by GPORCA, and the PostgreSQL internal
representation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;src/backend/fts/&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;FTS is a process that runs in the master node, and periodically
polls the segments to maintain the status of each segment.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Greenplum is maintained by a core team of developers with commit rights to the
&lt;a href="https://github.com/greenplum-db/gpdb"&gt;main gpdb repository&lt;/a&gt; on GitHub. At the
same time, we are very eager to receive contributions from anybody in the wider
Greenplum community. This section covers all you need to know if you want to see
your code or documentation changes be added to Greenplum and appear in the
future releases.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h3&gt;
&lt;p&gt;Greenplum is developed on GitHub, and anybody wishing to contribute to it will
have to &lt;a href="https://github.com/signup/free"&gt;have a GitHub account&lt;/a&gt; and be familiar
with &lt;a href="https://wiki.postgresql.org/wiki/Working_with_Git" rel="nofollow"&gt;Git tools and workflow&lt;/a&gt;.
It is also recommend that you follow the &lt;a href="https://greenplum.org/community/" rel="nofollow"&gt;developer's mailing list&lt;/a&gt;
since some of the contributions may generate more detailed discussions there.&lt;/p&gt;
&lt;p&gt;Once you have your GitHub account, &lt;a href="https://github.com/greenplum-db/gpdb/fork"&gt;fork&lt;/a&gt;
this repository so that you can have your private copy to start hacking on and to
use as source of pull requests.&lt;/p&gt;
&lt;p&gt;Anybody contributing to Greenplum has to be covered by either the Corporate or
the Individual Contributor License Agreement. If you have not previously done
so, please fill out and submit the &lt;a href="https://cla.pivotal.io/sign/greenplum" rel="nofollow"&gt;Contributor License Agreement&lt;/a&gt;.
Note that we do allow for really trivial changes to be contributed without a
CLA if they fall under the rubric of &lt;a href="https://cla.pivotal.io/about#obvious-fixes" rel="nofollow"&gt;obvious fixes&lt;/a&gt;.
However, since our GitHub workflow checks for CLA by default you may find it
easier to submit one instead of claiming an "obvious fix" exception.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-licensing-of-greenplum-contributions" class="anchor" aria-hidden="true" href="#licensing-of-greenplum-contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licensing of Greenplum contributions&lt;/h3&gt;
&lt;p&gt;If the contribution you're submitting is original work, you can assume that Pivotal
will release it as part of an overall Greenplum release available to the downstream
consumers under the Apache License, Version 2.0. However, in addition to that, Pivotal
may also decide to release it under a different license (such as &lt;a href="https://www.postgresql.org/about/licence/" rel="nofollow"&gt;PostgreSQL License&lt;/a&gt; to the upstream consumers that require it. A typical example here would be Pivotal
upstreaming your contribution back to PostgreSQL community (which can be done either
verbatim or your contribution being upstreamed as part of the larger changeset).&lt;/p&gt;
&lt;p&gt;If the contribution you're submitting is NOT original work you have to indicate the name
of the license and also make sure that it is similar in terms to the Apache License 2.0.
Apache Software Foundation maintains a list of these licenses under &lt;a href="https://www.apache.org/legal/resolved.html#category-a" rel="nofollow"&gt;Category A&lt;/a&gt;. In addition to that, you may be required to make proper attribution in the
&lt;a href="https://github.com/greenplum-db/gpdb/blob/master/NOTICE"&gt;NOTICE file&lt;/a&gt; similar to &lt;a href="https://github.com/greenplum-db/gpdb/blob/master/NOTICE#L278"&gt;these examples&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Finally, keep in mind that it is NEVER a good idea to remove licensing headers from
the work that is not your original one. Even if you are using parts of the file that
originally had a licensing header at the top you should err on the side of preserving it.
As always, if you are not quite sure about the licensing implications of your contributions,
feel free to reach out to us on the developer mailing list.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-coding-guidelines" class="anchor" aria-hidden="true" href="#coding-guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Coding guidelines&lt;/h3&gt;
&lt;p&gt;Your chances of getting feedback and seeing your code merged into the project
greatly depend on how granular your changes are. If you happen to have a bigger
change in mind, we highly recommend engaging on the developer's mailing list
first and sharing your proposal with us before you spend a lot of time writing
code. Even when your proposal gets validated by the community, we still recommend
doing the actual work as a series of small, self-contained commits. This makes
the reviewer's job much easier and increases the timeliness of feedback.&lt;/p&gt;
&lt;p&gt;When it comes to C and C++ parts of Greenplum, we try to follow
&lt;a href="https://www.postgresql.org/docs/devel/source.html" rel="nofollow"&gt;PostgreSQL Coding Conventions&lt;/a&gt;.
In addition to that we require that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All Python code passes &lt;a href="https://www.pylint.org/" rel="nofollow"&gt;Pylint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;All Go code is formatted according to &lt;a href="https://golang.org/cmd/gofmt/" rel="nofollow"&gt;gofmt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We recommend using &lt;code&gt;git diff --color&lt;/code&gt; when reviewing your changes so that you
don't have any spurious whitespace issues in the code that you submit.&lt;/p&gt;
&lt;p&gt;All new functionality that is contributed to Greenplum should be covered by regression
tests that are contributed alongside it. If you are uncertain on how to test or document
your work, please raise the question on the gpdb-dev mailing list and the developer
community will do its best to help you.&lt;/p&gt;
&lt;p&gt;At the very minimum you should always be running
&lt;code&gt;make installcheck-world&lt;/code&gt;
to make sure that you're not breaking anything.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-changes-applicable-to-upstream-postgresql" class="anchor" aria-hidden="true" href="#changes-applicable-to-upstream-postgresql"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changes applicable to upstream PostgreSQL&lt;/h3&gt;
&lt;p&gt;If the change you're working on touches functionality that is common between PostgreSQL
and Greenplum, you may be asked to forward-port it to PostgreSQL. This is not only so
that we keep reducing the delta between the two projects, but also so that any change
that is relevant to PostgreSQL can benefit from a much broader review of the upstream
PostgreSQL community. In general, it is a good idea to keep both code bases handy so
you can be sure whether your changes may need to be forward-ported.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-submission-timing" class="anchor" aria-hidden="true" href="#submission-timing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Submission timing&lt;/h3&gt;
&lt;p&gt;To improve the odds of the right discussion of your patch or idea happening, pay attention
to what the community work cycle is. For example, if you send in a brand new idea in the
beta phase of a release, we may defer review or target its inclusion for a later version.
Feel free to ask on the mailing list to learn more about the Greenplum release policy and timing.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-patch-submission" class="anchor" aria-hidden="true" href="#patch-submission"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Patch submission&lt;/h3&gt;
&lt;p&gt;Once you are ready to share your work with the Greenplum core team and the rest of
the Greenplum community, you should push all the commits to a branch in your own
repository forked from the official Greenplum and
&lt;a href="https://help.github.com/articles/about-pull-requests/"&gt;send us a pull request&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We welcome submissions which are work in-progress in order to get feedback early
in the development process.  When opening the pull request, select "Draft" in
the dropdown menu when creating the PR to clearly mark the intent of the pull
request. Prefixing the title with "WIP:" is also good practice.&lt;/p&gt;
&lt;p&gt;All new features should be submitted against the main master branch. Bugfixes
should too be submitted against master unless they only exist in a supported
back-branch. If the bug exists in both master and back-branches, explain this
in the PR description.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-validation-checks-and-ci" class="anchor" aria-hidden="true" href="#validation-checks-and-ci"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Validation checks and CI&lt;/h3&gt;
&lt;p&gt;Once you submit your pull request, you will immediately see a number of validation
checks performed by our automated CI pipelines. There also will be a CLA check
telling you whether your CLA was recognized. If any of these checks fails, you
will need to update your pull request to take care of the issue. Pull requests
with failed validation checks are very unlikely to receive any further peer
review from the community members.&lt;/p&gt;
&lt;p&gt;Keep in mind that the most common reason for a failed CLA check is a mismatch
between an email on file and an email recorded in the commits submitted as
part of the pull request.&lt;/p&gt;
&lt;p&gt;If you cannot figure out why a certain validation check failed, feel free to
ask on the developer's mailing list, but make sure to include a direct link
to a pull request in your email.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-patch-review" class="anchor" aria-hidden="true" href="#patch-review"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Patch review&lt;/h3&gt;
&lt;p&gt;A submitted pull request with passing validation checks is assumed to be available
for peer review. Peer review is the process that ensures that contributions to Greenplum
are of high quality and align well with the road map and community expectations. Every
member of the Greenplum community is encouraged to review pull requests and provide
feedback. Since you don't have to be a core team member to be able to do that, we
recommend following a stream of pull reviews to anybody who's interested in becoming
a long-term contributor to Greenplum. As &lt;a href="https://en.wikipedia.org/wiki/Linus's_Law" rel="nofollow"&gt;Linus would say&lt;/a&gt;
"given enough eyeballs, all bugs are shallow".&lt;/p&gt;
&lt;p&gt;One outcome of the peer review could be a consensus that you need to modify your
pull request in certain ways. GitHub allows you to push additional commits into
a branch from which a pull request was sent. Those additional commits will be then
visible to all of the reviewers.&lt;/p&gt;
&lt;p&gt;A peer review converges when it receives at least one +1 and no -1s votes from
the participants. At that point you should expect one of the core team
members to pull your changes into the project.&lt;/p&gt;
&lt;p&gt;Greenplum prides itself on being a collaborative, consensus-driven environment.
We do not believe in vetoes and any -1 vote casted as part of the peer review
has to have a detailed technical explanation of what's wrong with the change.
Should a strong disagreement arise it may be advisable to take the matter onto
the mailing list since it allows for a more natural flow of the conversation.&lt;/p&gt;
&lt;p&gt;At any time during the patch review, you may experience delays based on the
availability of reviewers and core team members. Please be patient. That being
said, don't get discouraged either. If you're not getting expected feedback for
a few days add a comment asking for updates on the pull request itself or send
an email to the mailing list.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-direct-commits-to-the-repository" class="anchor" aria-hidden="true" href="#direct-commits-to-the-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Direct commits to the repository&lt;/h3&gt;
&lt;p&gt;On occasion you will see core team members committing directly to the repository
without going through the pull request workflow. This is reserved for small changes
only and the rule of thumb we use is this: if the change touches any functionality
that may result in a test failure, then it has to go through a pull request workflow.
If, on the other hand, the change is in the non-functional part of the code base
(such as fixing a typo inside of a comment block) core team members can decide to
just commit to the repository directly.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;For Greenplum Database documentation, please check the
&lt;a href="http://docs.greenplum.org/" rel="nofollow"&gt;online documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For further information beyond the scope of this README, please see
&lt;a href="https://github.com/greenplum-db/gpdb/wiki"&gt;our wiki&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>greenplum-db</author><guid isPermaLink="false">https://github.com/greenplum-db/gpdb</guid><pubDate>Mon, 25 Nov 2019 00:16:00 GMT</pubDate></item><item><title>FFmpeg/FFmpeg #17 in C, This week</title><link>https://github.com/FFmpeg/FFmpeg</link><description>&lt;p&gt;&lt;i&gt;Mirror of git://source.ffmpeg.org/ffmpeg.git&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-ffmpeg-readme" class="anchor" aria-hidden="true" href="#ffmpeg-readme"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FFmpeg README&lt;/h1&gt;
&lt;p&gt;FFmpeg is a collection of libraries and tools to process multimedia content
such as audio, video, subtitles and related metadata.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-libraries" class="anchor" aria-hidden="true" href="#libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Libraries&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;libavcodec&lt;/code&gt; provides implementation of a wider range of codecs.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;libavformat&lt;/code&gt; implements streaming protocols, container formats and basic I/O access.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;libavutil&lt;/code&gt; includes hashers, decompressors and miscellaneous utility functions.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;libavfilter&lt;/code&gt; provides a mean to alter decoded Audio and Video through chain of filters.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;libavdevice&lt;/code&gt; provides an abstraction to access capture and playback devices.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;libswresample&lt;/code&gt; implements audio mixing and resampling routines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;libswscale&lt;/code&gt; implements color conversion and scaling routines.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-tools" class="anchor" aria-hidden="true" href="#tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tools&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ffmpeg.org/ffmpeg.html" rel="nofollow"&gt;ffmpeg&lt;/a&gt; is a command line toolbox to
manipulate, convert and stream multimedia content.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ffmpeg.org/ffplay.html" rel="nofollow"&gt;ffplay&lt;/a&gt; is a minimalistic multimedia player.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ffmpeg.org/ffprobe.html" rel="nofollow"&gt;ffprobe&lt;/a&gt; is a simple analysis tool to inspect
multimedia content.&lt;/li&gt;
&lt;li&gt;Additional small tools such as &lt;code&gt;aviocat&lt;/code&gt;, &lt;code&gt;ismindex&lt;/code&gt; and &lt;code&gt;qt-faststart&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;The offline documentation is available in the &lt;strong&gt;doc/&lt;/strong&gt; directory.&lt;/p&gt;
&lt;p&gt;The online documentation is available in the main &lt;a href="https://ffmpeg.org" rel="nofollow"&gt;website&lt;/a&gt;
and in the &lt;a href="https://trac.ffmpeg.org" rel="nofollow"&gt;wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h3&gt;
&lt;p&gt;Coding examples are available in the &lt;strong&gt;doc/examples&lt;/strong&gt; directory.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;FFmpeg codebase is mainly LGPL-licensed with optional components licensed under
GPL. Please refer to the LICENSE file for detailed information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Patches should be submitted to the ffmpeg-devel mailing list using
&lt;code&gt;git format-patch&lt;/code&gt; or &lt;code&gt;git send-email&lt;/code&gt;. Github pull requests should be
avoided because they are not part of our review process and will be ignored.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>FFmpeg</author><guid isPermaLink="false">https://github.com/FFmpeg/FFmpeg</guid><pubDate>Mon, 25 Nov 2019 00:17:00 GMT</pubDate></item><item><title>mit-pdos/xv6-public #18 in C, This week</title><link>https://github.com/mit-pdos/xv6-public</link><description>&lt;p&gt;&lt;i&gt;xv6 OS&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body " data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;xv6 is a re-implementation of Dennis Ritchie's and Ken Thompson's Unix
Version 6 (v6).  xv6 loosely follows the structure and style of v6,
but is implemented for a modern x86-based multiprocessor using ANSI C.

ACKNOWLEDGMENTS

xv6 is inspired by John Lions's Commentary on UNIX 6th Edition (Peer
to Peer Communications; ISBN: 1-57398-013-7; 1st edition (June 14,
2000)). See also &lt;a href="https://pdos.csail.mit.edu/6.828/" rel="nofollow"&gt;https://pdos.csail.mit.edu/6.828/&lt;/a&gt;, which
provides pointers to on-line resources for v6.

xv6 borrows code from the following sources:
    JOS (asm.h, elf.h, mmu.h, bootasm.S, ide.c, console.c, and others)
    Plan 9 (entryother.S, mp.h, mp.c, lapic.c)
    FreeBSD (ioapic.c)
    NetBSD (console.c)

The following people have made contributions: Russ Cox (context switching,
locking), Cliff Frey (MP), Xiao Yu (MP), Nickolai Zeldovich, and Austin
Clements.

We are also grateful for the bug reports and patches contributed by Silas
Boyd-Wickizer, Anton Burtsev, Cody Cutler, Mike CAT, Tej Chajed, eyalz800,
Nelson Elhage, Saar Ettinger, Alice Ferrazzi, Nathaniel Filardo, Peter
Froehlich, Yakir Goaron,Shivam Handa, Bryan Henry, Jim Huang, Alexander
Kapshuk, Anders Kaseorg, kehao95, Wolfgang Keller, Eddie Kohler, Austin
Liew, Imbar Marinescu, Yandong Mao, Matan Shabtay, Hitoshi Mitake, Carmi
Merimovich, Mark Morrissey, mtasm, Joel Nider, Greg Price, Ayan Shafqat,
Eldar Sehayek, Yongming Shen, Cam Tenny, tyfkda, Rafael Ubal, Warren
Toomey, Stephen Tu, Pablo Ventura, Xi Wang, Keiichi Watanabe, Nicolas
Wolovick, wxdao, Grant Wu, Jindong Zhang, Icenowy Zheng, and Zou Chang Wei.

The code in the files that constitute xv6 is
Copyright 2006-2018 Frans Kaashoek, Robert Morris, and Russ Cox.

ERROR REPORTS

We switched our focus to xv6 on RISC-V; see the mit-pdos/xv6-riscv.git
repository on github.com.

BUILDING AND RUNNING XV6

To build xv6 on an x86 ELF machine (like Linux or FreeBSD), run
"make". On non-x86 or non-ELF machines (like OS X, even on x86), you
will need to install a cross-compiler gcc suite capable of producing
x86 ELF binaries (see &lt;a href="https://pdos.csail.mit.edu/6.828/" rel="nofollow"&gt;https://pdos.csail.mit.edu/6.828/&lt;/a&gt;).
Then run "make TOOLPREFIX=i386-jos-elf-". Now install the QEMU PC
simulator and run "make qemu".&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>mit-pdos</author><guid isPermaLink="false">https://github.com/mit-pdos/xv6-public</guid><pubDate>Mon, 25 Nov 2019 00:18:00 GMT</pubDate></item><item><title>Spritetm/hadbadge2019_fpgasoc #19 in C, This week</title><link>https://github.com/Spritetm/hadbadge2019_fpgasoc</link><description>&lt;p&gt;&lt;i&gt;FPGA SoC code and application example for Hackaday Supercon 2019 badge&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-hackaday-supercon-2019-badge-gateware--os--sdk" class="anchor" aria-hidden="true" href="#hackaday-supercon-2019-badge-gateware--os--sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hackaday Supercon 2019 Badge: Gateware &amp;amp; 'OS' &amp;amp; SDK&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-note" class="anchor" aria-hidden="true" href="#note"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Note&lt;/h2&gt;
&lt;p&gt;If you see anything wrong or missing, either here in the documentation or in the gateware
or software, do not hesitate to file an issue, or even better, change it and file a push
request.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-intro" class="anchor" aria-hidden="true" href="#intro"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Intro&lt;/h2&gt;
&lt;p&gt;This project contains the FPGA configurations for the badge, in the form of a SoC
containing the processors and all peripherals. It also contains the software
responsible for bootup and app selection and loading (boot and IPL) as well
as the SDK you can use to create new apps.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;p&gt;If you are hacking on the badge hardware, gateware or software. You can find
fellow hackers in multiple places. Ask questions and share your projects in
those channels.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hackaday.io/messages/room/280647" rel="nofollow"&gt;Hackaday.io Supercon 2019 Chat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://1bitsquared.com/pages/chat" rel="nofollow"&gt;1BitSquared Discord #supercon-fpga-badge channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackaday.io/project/167255-2019-hackaday-superconference-badge" rel="nofollow"&gt;Hackaday.io Hackaday Supercon 2019 Badge page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;If you know of any other FPGA badge related communities and resources please
add them here&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-how-to-use" class="anchor" aria-hidden="true" href="#how-to-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to use&lt;/h1&gt;
&lt;p&gt;In order to use this repository, aside from the badge itself, you'll need a toolchain
compiled for your OS:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./doc/toolchain-lin.md"&gt;Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./doc/toolchain-mac.md"&gt;MacOSX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./doc/toolchain-win.md"&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./doc/toolchain-docker.md"&gt;Docker image&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You will also need a Micro-USB cable to connect to the badge, as well as 2 AA's (or another
way to supply it with power, e.g. using the JTAG connector) to power it. Note that while
the badge has a JTAG connector, using this should not be necessary in normal use, even if
you want to change the FPGA load. An 3.3V USB-to-serial cable or board may be useful, the
JTAG connector (J1, on the back of the badge) carries serial debug signals that allows you
to use e.g. gdb in case of a crash.&lt;/p&gt;
&lt;p&gt;After you have a toolchain, you'll need to set up this SDK. Clone this repository and grab
the submodules, if you haven't already:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone --recursive https://github.com/Spritetm/hadbadge2019_fpgasoc
cd hadbadge2019_fpgasoc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;From here, you can start hacking:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can just use the hardware and start your new design &lt;a href="doc/fpga_dev.md"&gt;from scratch&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;You can &lt;a href="doc/soc-dev.md"&gt;modify the existing SoC&lt;/a&gt; to incorporate your own peripherals.&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/ipl_dev.md"&gt;Modifying the IPL&lt;/a&gt; is useful if you want to change the look of the menu
or add extra features there.&lt;/li&gt;
&lt;li&gt;Finally, if you are happy with the existing hardware, you can &lt;a href="doc/app_dev.md"&gt;write an app&lt;/a&gt;
to make use of it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-repo-directory-structure" class="anchor" aria-hidden="true" href="#repo-directory-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Repo directory structure&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;blink contains a trivial blinker project, useful to make sure your setup
works.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./apps-sdk/"&gt;apps-sdk&lt;/a&gt; contains the SDK you can use to build apps that can be loaded by the IPL.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./app-helloworld/"&gt;app-helloworld&lt;/a&gt; contains a bare-bones test application that the IPL is able to load and execute.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./app-basic/"&gt;app-basic&lt;/a&gt; contains a Basic interpreter that can be used to run .bas files.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./app-audiodemo/"&gt;app-audiodemo&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./app-invaders/"&gt;app-invaders&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./app-flappy/"&gt;app-flappy&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./app-midi/"&gt;app-midi&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Other app-* directories contain example projects.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./soc/"&gt;soc&lt;/a&gt; contains the actual SoC that is the main FPGA load.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;a href="./soc/"&gt;soc&lt;/a&gt; folder at this point is a bit of a mess: it contains most of the 'base' Verilog code,
as well as code for simulation of parts using Icarus, or the entirety using Verilator. Apart
from this, the contents of the directories are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./soc/jtagload/"&gt;jtagload&lt;/a&gt; is a nearly-trivial program to convert a binary executable file into a svf file
that can then be sent to the FPGA using OpenOCD. At the moment, the boot ROM only invokes a
mode compatible with this when it doesn't find a proper IPL in flash.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./soc/boot/"&gt;boot&lt;/a&gt; contains the bootloader, to be embedded in bram in the FPGA image. At the moment,
it tests the SPI memory (takes a few seconds), then initializes the flash and loads the
IPL from there. If it doesn't see a valid IPL, it waits for an app to be uploaded over
JTAG.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./soc/ipl/"&gt;ipl&lt;/a&gt; contains the Initial Program Loader, aka IPL. The IPL mostly contains driver code,
to be called through a syscall jump table at the beginning of the binary. It also has logic
to load an initial program, and to use USB to set up the internal flash as a mass storage device
so an attached PC can access it directly. It also contains a flash translation layer as well
as a fatfs driver, so you can also access the files dropped by the PC programmatically.
Finally, it contains the menu you see when the badge starts up, that allows you to select an app
to run.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./soc/hdmi/"&gt;hdmi&lt;/a&gt; contains all Verilog for the hdmi output.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/cliffordwolf/picorv32/tree/e0baf2e0bd49fdddef2e3440c1f6364478655154"&gt;picorv32&lt;/a&gt; is a submodule containing the PicoRV32 RiscV core.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./soc/qpi_cache/"&gt;qpi_cache&lt;/a&gt; is the cache for and interface to the external SPI PSRAM.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./soc/video/"&gt;video&lt;/a&gt; contains the renderer and sequencing logic for the framebuffer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./soc/pic/"&gt;pic&lt;/a&gt; contains a PIC16F84 core which is intended to drive the attached LEDs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./soc/usb/"&gt;usb&lt;/a&gt; contains an USB device core.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="./soc/audio/"&gt;audio&lt;/a&gt; contains the audio subsystem.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Spritetm</author><guid isPermaLink="false">https://github.com/Spritetm/hadbadge2019_fpgasoc</guid><pubDate>Mon, 25 Nov 2019 00:19:00 GMT</pubDate></item><item><title>Azure/azure-iot-sdk-c #20 in C, This week</title><link>https://github.com/Azure/azure-iot-sdk-c</link><description>&lt;p&gt;&lt;i&gt;A C99 SDK for connecting devices to Microsoft Azure IoT services&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-azure-iot-c-sdks-and-libraries" class="anchor" aria-hidden="true" href="#azure-iot-c-sdks-and-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Azure IoT C SDKs and Libraries&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://azure-iot-sdks.visualstudio.com/azure-iot-sdks/_build/latest?definitionId=85" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a5bb2ba48a1c36e9711488af5a8f4bfc036c45c8/68747470733a2f2f617a7572652d696f742d73646b732e76697375616c73747564696f2e636f6d2f617a7572652d696f742d73646b732f5f617069732f6275696c642f7374617475732f632f696e746567726174652d696e746f2d7265706f2d43" alt="Build Status" data-canonical-src="https://azure-iot-sdks.visualstudio.com/azure-iot-sdks/_apis/build/status/c/integrate-into-repo-C" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This repository contains the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Azure IoT Hub Device C SDK&lt;/strong&gt; to connect devices running C code to Azure IoT Hub.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Azure IoT Hub Device Provisioning Service Client SDK&lt;/strong&gt; for enrolling devices with &lt;a href="https://docs.microsoft.com/azure/iot-dps/" rel="nofollow"&gt;Azure IoT Device Provisioning Services&lt;/a&gt; and managing enrollments lists.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Azure IoT Hub Service C SDK&lt;/strong&gt; to interface with an Azure IoT Hub service instance from a server-side C application.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Serializer Library for C&lt;/strong&gt; to help serialize and deserialize data on your device.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-packages-and-libraries" class="anchor" aria-hidden="true" href="#packages-and-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Packages and Libraries&lt;/h2&gt;
&lt;p&gt;The simplest way to get started with the Azure IoT SDKs is to use the following packages and libraries:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux: &lt;a href="./iothub_client/readme.md#aptgetpackage"&gt;Device SDK on apt-get&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;mbed:                                      &lt;a href="./iothub_client/readme.md#mbed"&gt;Device SDK library on MBED&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Arduino:                                   &lt;a href="./iothub_client/readme.md#arduino"&gt;Device SDK library in the Arduino IDE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Windows:                                   &lt;a href="./doc/setting_up_vcpkg.md#setup-c-sdk-vcpkg-for-windows-development-environment"&gt;Device SDK on Vcpkg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;iOS:                                       &lt;a href="https://cocoapods.org/pods/AzureIoTHubClient" rel="nofollow"&gt;Device SDK on CocoaPod&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-samples" class="anchor" aria-hidden="true" href="#samples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Samples&lt;/h2&gt;
&lt;p&gt;Here are a set of simple samples that will help you get started:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./iothub_client/samples/"&gt;Device SDK Samples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./iothub_service_client/samples/"&gt;Service SDK Samples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./serializer/samples/"&gt;Serializer Library Samples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-compile-the-sdk" class="anchor" aria-hidden="true" href="#compile-the-sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compile the SDK&lt;/h2&gt;
&lt;p&gt;When no package or library is available for your platform or if you want to modify the SDK code, or port the SDK to a new platform, then you can leverage the build environment provided in the repository.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./iothub_client/readme.md#compile"&gt;Device SDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./iothub_service_client/readme.md#compile"&gt;Service SDK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-sdk-api-reference-documentation" class="anchor" aria-hidden="true" href="#sdk-api-reference-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SDK API Reference Documentation&lt;/h2&gt;
&lt;p&gt;The API reference documentation for the C SDKs can be found &lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-c-sdk-ref/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-other-azure-iot-sdks" class="anchor" aria-hidden="true" href="#other-azure-iot-sdks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Azure IoT SDKs&lt;/h2&gt;
&lt;p&gt;To find Azure IoT SDKs in other languages, please refer to the &lt;a href="https://github.com/azure/azure-iot-sdks"&gt;azure-iot-sdks&lt;/a&gt; repository.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-developing-azure-iot-applications" class="anchor" aria-hidden="true" href="#developing-azure-iot-applications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developing Azure IoT Applications&lt;/h2&gt;
&lt;p&gt;To learn more about building Azure IoT Applications, you can visit the &lt;a href="http://azure.com/iotdev" rel="nofollow"&gt;Azure IoT Dev Center&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-key-features-and-roadmap" class="anchor" aria-hidden="true" href="#key-features-and-roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Key Features and Roadmap&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-device-client-sdk" class="anchor" aria-hidden="true" href="#device-client-sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Device Client SDK&lt;/h3&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt; feature available  &lt;g-emoji class="g-emoji" alias="heavy_multiplication_x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2716.png"&gt;✖️&lt;/g-emoji&gt; feature planned but not supported  &lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt; no support planned&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Features&lt;/th&gt;
&lt;th&gt;mqtt&lt;/th&gt;
&lt;th&gt;mqtt-ws&lt;/th&gt;
&lt;th&gt;amqp&lt;/th&gt;
&lt;th&gt;amqp-ws&lt;/th&gt;
&lt;th&gt;https&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-security-deployment" rel="nofollow"&gt;Authentication&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;Connect your device to IoT Hub securely with supported authentication, including private key, SASToken, X-509 Self Signed and Certificate Authority (CA) Signed.  *IoT Hub only supports X-509 CA Signed over AMQP and MQTT at the moment.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messages-d2c" rel="nofollow"&gt;Send device-to-cloud message&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;Send device-to-cloud messages (max 256KB) to IoT Hub with the option to add custom properties.  IoT Hub only supports batch send over AMQP and HTTPS only at the moment.  This SDK supports batch send over HTTP.  * Batch send over AMQP and AMQP-WS, and add system properties on D2C messages are in progress.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messages-c2d" rel="nofollow"&gt;Receive cloud-to-device messages&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Receive cloud-to-device messages and read associated custom and system properties from IoT Hub, with the option to complete/reject/abandon C2D messages.  *IoT Hub supports the option to complete/reject/abandon C2D messages over HTTPS and AMQP only at the moment.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-device-twins" rel="nofollow"&gt;Device Twins&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;IoT Hub persists a device twin for each device that you connect to IoT Hub.  The device can perform operations like get twin tags, subscribe to desired properties.  *Send reported properties version and desired properties version are in progress.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-direct-methods" rel="nofollow"&gt;Direct Methods&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;IoT Hub gives you the ability to invoke direct methods on devices from the cloud.  The SDK supports handler for method specific and generic operation.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload" rel="nofollow"&gt;Upload file to Blob&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;A device can initiate a file upload and notifies IoT Hub when the upload is complete.   File upload requires HTTPS connection, but can be initiated from client using any protocol for other operations.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/rest/api/iothub/common-error-codes" rel="nofollow"&gt;Connection Status and Error reporting&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_multiplication_x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2716.png"&gt;✖️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Error reporting for IoT Hub supported error code.  *This SDK supports error reporting on authentication and Device Not Found.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Retry policies&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_multiplication_x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2716.png"&gt;✖️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Retry policy for unsuccessful device-to-cloud messages have two options: no try, exponential backoff with jitter (default).   *Custom retry policy is in progress.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Devices multiplexing over single connection&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Connection Pooling - Specifying number of connections&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_multiplication_x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2716.png"&gt;✖️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_multiplication_x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2716.png"&gt;✖️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_multiplication_x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2716.png"&gt;✖️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;This SDK also contains options you can set and platform specific features.  You can find detail list in this &lt;a href="./doc/Iothub_sdk_options.md"&gt;document&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-service-client-sdk" class="anchor" aria-hidden="true" href="#service-client-sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Service Client SDK&lt;/h3&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt; feature available  &lt;g-emoji class="g-emoji" alias="heavy_multiplication_x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2716.png"&gt;✖️&lt;/g-emoji&gt; feature planned but not supported  &lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt; no support planned&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Features&lt;/th&gt;
&lt;th&gt;C&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry" rel="nofollow"&gt;Identity registry (CRUD)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;Use your backend app to perform CRUD operation for individual device or in bulk.  This SDK supports CRUD operation on individual device with create device from ID/Key pair only.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messages-c2d" rel="nofollow"&gt;Cloud-to-device messaging&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Use your backend app to send cloud-to-device messages in AMQP and AMQP-WS, and set up cloud-to-device message receivers.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-direct-methods" rel="nofollow"&gt;Direct Methods operations&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Use your backend app to invoke direct method on device.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-device-twins" rel="nofollow"&gt;Device Twins operations&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;*&lt;/td&gt;
&lt;td&gt;Use your backend app to perform device twin operations.  *Twin reported property update callback and replace twin are in progress.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language" rel="nofollow"&gt;Query&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_multiplication_x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2716.png"&gt;✖️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Use your backend app to perform query for information.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-jobs" rel="nofollow"&gt;Jobs&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_multiplication_x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2716.png"&gt;✖️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Use your backend app to perform job operation.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload" rel="nofollow"&gt;File Upload&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_multiplication_x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2716.png"&gt;✖️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Set up your backend app to send file upload notification receiver.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-provisioning-client-sdk" class="anchor" aria-hidden="true" href="#provisioning-client-sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Provisioning client SDK&lt;/h3&gt;
&lt;p&gt;This repository contains &lt;a href="./provisioning_client"&gt;provisioning client SDK&lt;/a&gt; for the &lt;a href="https://docs.microsoft.com/azure/iot-dps/" rel="nofollow"&gt;Device Provisioning Service&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt; feature available  &lt;g-emoji class="g-emoji" alias="heavy_multiplication_x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2716.png"&gt;✖️&lt;/g-emoji&gt; feature planned but not supported  &lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt; no support planned&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Features&lt;/th&gt;
&lt;th&gt;mqtt&lt;/th&gt;
&lt;th&gt;mqtt-ws&lt;/th&gt;
&lt;th&gt;amqp&lt;/th&gt;
&lt;th&gt;amqp-ws&lt;/th&gt;
&lt;th&gt;https&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;TPM Individual Enrollment&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_minus_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png"&gt;➖&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;This SDK supports connecting your device to the Device Provisioning Service via &lt;a href="https://docs.microsoft.com/azure/iot-dps/concepts-service#enrollment" rel="nofollow"&gt;individual enrollment&lt;/a&gt; using &lt;a href="https://docs.microsoft.com/azure/iot-dps/concepts-security#trusted-platform-module-tpm" rel="nofollow"&gt;Trusted Platform Module&lt;/a&gt;.  This &lt;a href="https://docs.microsoft.com/azure/iot-dps/quick-create-simulated-device" rel="nofollow"&gt;quickstart&lt;/a&gt; reviews how to create a simulated device for individual enrollment with TPM. TPM over MQTT is currently not supported by the Device Provisioning Service.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X.509 Individual Enrollment&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;This SDK supports connecting your device to the Device Provisioning Service via &lt;a href="https://docs.microsoft.com/azure/iot-dps/concepts-service#enrollment" rel="nofollow"&gt;individual enrollment&lt;/a&gt; using &lt;a href="https://docs.microsoft.com/azure/iot-dps/concepts-security#leaf-certificate" rel="nofollow"&gt;X.509 leaf certificate&lt;/a&gt;.  This &lt;a href="https://docs.microsoft.com/azure/iot-dps/quick-create-simulated-device-x509" rel="nofollow"&gt;quickstart&lt;/a&gt; reviews how to create a simulated device for individual enrollment with X.509.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X.509 Enrollment Group&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;This SDK supports connecting your device to the Device Provisioning Service via &lt;a href="https://docs.microsoft.com/azure/iot-dps/concepts-service#enrollment" rel="nofollow"&gt;enrollment group&lt;/a&gt; using &lt;a href="https://docs.microsoft.com/azure/iot-dps/concepts-security#root-certificate" rel="nofollow"&gt;X.509 root certificate&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-provisioniong-service-sdk" class="anchor" aria-hidden="true" href="#provisioniong-service-sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Provisioniong Service SDK&lt;/h3&gt;
&lt;p&gt;This repository contains &lt;a href="./provisioning/service/"&gt;provisioning service client SDK&lt;/a&gt; for the Device Provisioning Service to &lt;a href="https://docs.microsoft.com/en-us/azure/iot-dps/how-to-manage-enrollments-sdks" rel="nofollow"&gt;programmatically enroll devices&lt;/a&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Feature&lt;/th&gt;
&lt;th&gt;Support&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;CRUD Operation with TPM Individual Enrollment&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Programmatically manage device enrollment using TPM with the service SDK.  Please visit the &lt;a href="./provisioning_service_client/"&gt;samples folder&lt;/a&gt; to learn more about this feature.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bulk CRUD Operation with TPM Individual Enrollment&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Programmatically bulk manage device enrollment using TPM with the service SDK.  Please visit the &lt;a href="./provisioning_service_client/"&gt;samples folder&lt;/a&gt; to learn more about this feature.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CRUD Operation with X.509 Individual Enrollment&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Programmatically manage device enrollment using X.509 individual enrollment with the service SDK.  Please visit the &lt;a href="./provisioning/service/samples/"&gt;samples folder&lt;/a&gt; to learn more about this feature.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CRUD Operation with X.509 Group Enrollment&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Programmatically manage device enrollment using X.509 group enrollment with the service SDK.  Please visit the &lt;a href="./provisioning_service_client/"&gt;samples folder&lt;/a&gt; to learn more about this feature.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Query enrollments&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png"&gt;✔️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Programmatically query registration states with the service SDK.  Please visit the &lt;a href="./provisioning_service_client/"&gt;samples folder&lt;/a&gt; to learn more about this feature.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-os-platforms-and-hardware-compatibility" class="anchor" aria-hidden="true" href="#os-platforms-and-hardware-compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OS Platforms and Hardware Compatibility&lt;/h2&gt;
&lt;p&gt;The IoT Hub device SDK for C can be used with a broad range of OS platforms and devices.&lt;/p&gt;
&lt;p&gt;The minimum requirements are for the device platform to support the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Being capable of establishing an IP connection&lt;/strong&gt;: only IP-capable devices can communicate directly with Azure IoT Hub.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Support TLS&lt;/strong&gt;: required to establish a secure communication channel with Azure IoT Hub.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Support SHA-256&lt;/strong&gt; (optional): necessary to generate the secure token for authenticating the device with the service. Different authentication methods are available and not all require SHA-256.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Have a Real Time Clock or implement code to connect to an NTP server&lt;/strong&gt;: necessary for both establishing the TLS connection and generating the secure token for authentication.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Having at least 64KB of RAM&lt;/strong&gt;: the memory footprint of the SDK depends on the SDK and protocol used as well as the platform targeted. The smallest footprint is achieved targeting microcontrollers.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Having at least 4KB of RAM set for incoming SSL max content length buffer&lt;/strong&gt;: For some TLS libraries, this may be a configurable option and default may have been set as &lt;strong&gt;4KB&lt;/strong&gt; for low memory footprint devices. During TLS handshake, IoT Hub service will send Server Hello which includes IoT Hub server side certificates as part of Server Hello payload.
During &lt;strong&gt;renewal&lt;/strong&gt; of these IoT Hub server side certificates, check will be made on IoT Hub service side to prevent &lt;strong&gt;Server Hello&lt;/strong&gt; exceeding 4KB limit so that existing devices which are set for 4KB limit continue to work as before after certificate renewals.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Platform support details can be found in &lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-hub-device-sdk-platform-support" rel="nofollow"&gt;this document&lt;/a&gt;.
You can find an exhaustive list of the OS platforms the various SDKs have been tested against in the &lt;a href="https://catalog.azureiotsuite.com/" rel="nofollow"&gt;Azure Certified for IoT device catalog&lt;/a&gt;. Note that you might still be able to use the SDKs on OS and hardware platforms that are not listed on this page: all the SDKs are open sourced and designed to be portable. If you have suggestions, feedback or issues to report, refer to the Contribution and Support sections below.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-porting-the-azure-iot-device-client-sdk-for-c-to-new-devices" class="anchor" aria-hidden="true" href="#porting-the-azure-iot-device-client-sdk-for-c-to-new-devices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Porting the Azure IoT Device Client SDK for C to New Devices&lt;/h2&gt;
&lt;p&gt;The C SDKs and Libraries:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Are written in ANSI C (C99) and avoids compiler extensions to maximize code portability and broad platform compatibility.&lt;/li&gt;
&lt;li&gt;Expose a platform abstraction layer to isolate OS dependencies (threading and mutual exclusion mechanisms, communications protocol e.g. HTTP). Refer to our &lt;a href="https://github.com/Azure/azure-c-shared-utility/blob/master/devdoc/porting_guide.md"&gt;porting guide&lt;/a&gt; for more information about our abstraction layer.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the repository you will find instructions and build tools to compile and run the device client SDK for C on Linux, Windows and microcontroller platforms (refer to the links above for more information on compiling the device client for C).&lt;/p&gt;
&lt;p&gt;If you are considering porting the device client SDK for C to a new platform, check out the &lt;a href="https://github.com/Azure/azure-c-shared-utility/blob/master/devdoc/porting_guide.md"&gt;porting guide&lt;/a&gt; document.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contribution-feedback-and-issues" class="anchor" aria-hidden="true" href="#contribution-feedback-and-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution, Feedback and Issues&lt;/h2&gt;
&lt;p&gt;If you encounter any bugs, have suggestions for new features or if you would like to become an active contributor to this project please follow the instructions provided in the &lt;a href=".github/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Have a feature request for SDKs? Please post it on &lt;a href="https://feedback.azure.com/forums/321918-azure-iot" rel="nofollow"&gt;User Voice&lt;/a&gt; to help us prioritize.&lt;/li&gt;
&lt;li&gt;Have a technical question? Ask on &lt;a href="https://stackoverflow.com/questions/tagged/azure-iot-hub" rel="nofollow"&gt;Stack Overflow&lt;/a&gt; with tag "azure-iot-hub".&lt;/li&gt;
&lt;li&gt;Need Support? Every customer with an active Azure subscription has access to &lt;a href="https://docs.microsoft.com/en-us/azure/azure-supportability/how-to-create-azure-support-request" rel="nofollow"&gt;support&lt;/a&gt; with guaranteed response time.  Consider submitting a ticket and get assistance from Microsoft support team&lt;/li&gt;
&lt;li&gt;Found a bug? Please help us fix it by thoroughly documenting it and filing an issue on GitHub (&lt;a href="https://github.com/Azure/azure-iot-sdk-c"&gt;C&lt;/a&gt;, &lt;a href="https://github.com/Azure/azure-iot-sdk-java"&gt;Java&lt;/a&gt;, &lt;a href="https://github.com/Azure/azure-iot-sdk-csharp"&gt;.NET&lt;/a&gt;, &lt;a href="https://github.com/Azure/azure-iot-sdk-node"&gt;Node.js&lt;/a&gt;, &lt;a href="https://github.com/Azure/azure-iot-sdk-python"&gt;Python&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-read-more" class="anchor" aria-hidden="true" href="#read-more"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Read more&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/" rel="nofollow"&gt;Azure IoT Hub documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/devbox_setup.md"&gt;Prepare your development environment to use the Azure IoT device SDK for C&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aka.ms/howtocreateazureiothub" rel="nofollow"&gt;Setup IoT Hub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://azure.microsoft.com/documentation/articles/iot-hub-device-sdk-c-intro/" rel="nofollow"&gt;Azure IoT device SDK for C tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Azure/azure-c-shared-utility/blob/master/devdoc/porting_guide.md"&gt;How to port the C libraries to other OS platforms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/SDK_cross_compile_example.md"&gt;Cross compilation example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/azure/iot-hub/iot-c-sdk-ref/" rel="nofollow"&gt;C SDKs API reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-sdk-folder-structure" class="anchor" aria-hidden="true" href="#sdk-folder-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SDK Folder Structure&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-c-utility-uamqp-umqtt-parson" class="anchor" aria-hidden="true" href="#c-utility-uamqp-umqtt-parson"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/c-utility, /uamqp, /umqtt, /parson&lt;/h3&gt;
&lt;p&gt;These are git submodules that contain code, such as adapters and protocol implementations, shared with other projects. Note that some of them contain nested submodules.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-blob" class="anchor" aria-hidden="true" href="#blob"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/blob&lt;/h3&gt;
&lt;p&gt;This folder contains client components that enable access to Azure blob storage.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-dps_client" class="anchor" aria-hidden="true" href="#dps_client"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/dps_client&lt;/h3&gt;
&lt;p&gt;This folder contains client library for device provisioning service.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-certs" class="anchor" aria-hidden="true" href="#certs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/certs&lt;/h3&gt;
&lt;p&gt;Contains certificates needed to communicate with Azure IoT Hub.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-doc" class="anchor" aria-hidden="true" href="#doc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/doc&lt;/h3&gt;
&lt;p&gt;This folder contains application development guides and device setup instructions.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-build_all" class="anchor" aria-hidden="true" href="#build_all"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/build_all&lt;/h3&gt;
&lt;p&gt;This folder contains platform-specific build scripts for the client libraries and dependent components.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-iothub_client" class="anchor" aria-hidden="true" href="#iothub_client"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/iothub_client&lt;/h3&gt;
&lt;p&gt;Contains Azure IoT Hub client components that provide the raw messaging capabilities of the library. Refer to the API documentation and samples for information on how to use it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;build: has one subfolder for each platform (e.g. Windows, Linux, Mbed). Contains makefiles, batch files, and solutions that are used to generate the library binaries.&lt;/li&gt;
&lt;li&gt;devdoc: contains requirements, designs notes, manuals.&lt;/li&gt;
&lt;li&gt;inc: public include files.&lt;/li&gt;
&lt;li&gt;src: client libraries source files.&lt;/li&gt;
&lt;li&gt;samples: contains simple samples.&lt;/li&gt;
&lt;li&gt;tests: unit and end-to-end tests for source code.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-serializer" class="anchor" aria-hidden="true" href="#serializer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/serializer&lt;/h3&gt;
&lt;p&gt;Contains libraries that provide modeling and JSON serialization capabilities on top of the raw messaging library. These libraries facilitate uploading structured data and command and control for use with Azure IoT services. Refer to the API documentation and samples for information on how to use it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;build: has one subfolder for each platform (e.g. Windows, Linux, Mbed). Contains makefiles, batch files, and solutions that are used to generate the library binaries.&lt;/li&gt;
&lt;li&gt;devdoc: contains requirements, designs notes, manuals.&lt;/li&gt;
&lt;li&gt;inc: public include files.&lt;/li&gt;
&lt;li&gt;src: client libraries source files.&lt;/li&gt;
&lt;li&gt;samples: contains simple samples.&lt;/li&gt;
&lt;li&gt;tests: unit tests and end-to-end tests for source code.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-iothub_service_client" class="anchor" aria-hidden="true" href="#iothub_service_client"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/iothub_service_client&lt;/h3&gt;
&lt;p&gt;Contains libraries that enable interactions with the IoT Hub service to perform operations such as sending messages to devices and managing the device identity registry.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-testtools" class="anchor" aria-hidden="true" href="#testtools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/testtools&lt;/h3&gt;
&lt;p&gt;Contains tools that are currently used in testing the client libraries: Mocking Framework (micromock), Generic Test Runner (CTest), Unit Test Project Template, etc.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-tools" class="anchor" aria-hidden="true" href="#tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;/tools&lt;/h3&gt;
&lt;p&gt;Miscellaneous tools: compilembed, mbed_build, traceabilitytool (checks spec requirements vs code implementation).&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-long-term-support" class="anchor" aria-hidden="true" href="#long-term-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Long Term Support&lt;/h1&gt;
&lt;p&gt;The project offers a Long Term Support (LTS) version to allow users that do not need the latest features to be shielded from unwanted changes.&lt;/p&gt;
&lt;p&gt;A new LTS version will be created every 6 months. The lifetime of an LTS branch is currently planned for one year. LTS branches receive all bug fixes that fall in one of these categories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;security bugfixes&lt;/li&gt;
&lt;li&gt;critical bugfixes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;No new features will be picked up in an LTS branch.&lt;/p&gt;
&lt;p&gt;LTS branches are named lts_&lt;em&gt;mm&lt;/em&gt;_&lt;em&gt;yyyy&lt;/em&gt;, where &lt;em&gt;mm&lt;/em&gt; and &lt;em&gt;yyyy&lt;/em&gt; are the month and year when the branch was created. An example of such a branch is &lt;em&gt;lts_07_2017&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-schedule1" class="anchor" aria-hidden="true" href="#schedule1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Schedule&lt;sup&gt;1&lt;/sup&gt;&lt;/h2&gt;
&lt;p&gt;Below is a table showing the mapping of the LTS branches to the packages released&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Package&lt;/th&gt;
&lt;th align="center"&gt;Github Branch&lt;/th&gt;
&lt;th align="center"&gt;LTS Status&lt;/th&gt;
&lt;th align="center"&gt;LTS Start Date&lt;/th&gt;
&lt;th align="center"&gt;Maintenance End Date&lt;/th&gt;
&lt;th align="center"&gt;Removed Date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Vcpkg: 2019-07-01.1&lt;br&gt; Xenial: 0.2.0.0-21xenial&lt;br&gt; Trusty: 0.2.0-21trusty&lt;br&gt; Bionic: 0.2.0.0-14bionic&lt;br&gt;&lt;/td&gt;
&lt;td align="center"&gt;lts_07_2019&lt;/td&gt;
&lt;td align="center"&gt;Active&lt;/td&gt;
&lt;td align="center"&gt;2019-07-01&lt;/td&gt;
&lt;td align="center"&gt;2020-07-01&lt;/td&gt;
&lt;td align="center"&gt;2020-07-01&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Vcpkg: 1.2.14-1&lt;br&gt; Xenial: 0.2.0.0-16xenial&lt;br&gt; Trusty: 0.2.0-16trusty&lt;br&gt; Bionic: 0.2.0.0-9bionic&lt;br&gt;&lt;/td&gt;
&lt;td align="center"&gt;lts_01_2019&lt;/td&gt;
&lt;td align="center"&gt;Active&lt;/td&gt;
&lt;td align="center"&gt;2019-01-31&lt;/td&gt;
&lt;td align="center"&gt;2020-01-31&lt;/td&gt;
&lt;td align="center"&gt;2020-01-31&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;Nuget: 1.2.10&lt;br&gt; Xenial: 0.2.0.0-12xenial&lt;br&gt; Trusty: 0.2.0-12trusty&lt;br&gt; Bionic: 0.2.0.0-5bionic&lt;br&gt;&lt;/td&gt;
&lt;td align="center"&gt;lts_10_2018&lt;/td&gt;
&lt;td align="center"&gt;Active&lt;/td&gt;
&lt;td align="center"&gt;2018-10-03&lt;/td&gt;
&lt;td align="center"&gt;2019-10-03&lt;/td&gt;
&lt;td align="center"&gt;2019-10-03&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;sup&gt;1&lt;/sup&gt; All scheduled dates are subject to change by the Azure IoT SDK team.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-planned-release-schedule" class="anchor" aria-hidden="true" href="#planned-release-schedule"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Planned Release Schedule&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./lts_branches.png"&gt;&lt;img src="./lts_branches.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/" rel="nofollow"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/" rel="nofollow"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;
&lt;p&gt;Microsoft collects performance and usage information which may be used to provide and improve Microsoft products and services and enhance your experience.  To learn more, review the &lt;a href="https://go.microsoft.com/fwlink/?LinkId=521839&amp;amp;clcid=0x409" rel="nofollow"&gt;privacy statement&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Azure</author><guid isPermaLink="false">https://github.com/Azure/azure-iot-sdk-c</guid><pubDate>Mon, 25 Nov 2019 00:20:00 GMT</pubDate></item><item><title>pwn20wndstuff/Undecimus #21 in C, This week</title><link>https://github.com/pwn20wndstuff/Undecimus</link><description>&lt;p&gt;&lt;i&gt;unc0ver jailbreak for iOS 11.0 - 12.4&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-unc0ver" class="anchor" aria-hidden="true" href="#unc0ver"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;unc0ver&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-the-most-advanced-jailbreak-tool" class="anchor" aria-hidden="true" href="#the-most-advanced-jailbreak-tool"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The most advanced jailbreak tool&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/pwn20wndstuff/Undecimus/raw/master/Undecimus/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60%403x.png"&gt;&lt;img src="https://github.com/pwn20wndstuff/Undecimus/raw/master/Undecimus/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60%403x.png" alt="unc0ver logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;unc0ver jailbreak for iOS 11.0 - 12.2&lt;br&gt;
by &lt;a href="https://twitter.com/Pwn20wnd" rel="nofollow"&gt;@pwn20wnd&lt;/a&gt; &amp;amp; &lt;a href="https://twitter.com/sbingner" rel="nofollow"&gt;@sbingner&lt;/a&gt;&lt;br&gt;
UI by &lt;a href="https://twitter.com/iOS_App_Dev" rel="nofollow"&gt;@iOS_App_Dev&lt;/a&gt; &amp;amp; &lt;a href="https://twitter.com/HiMyNameIsUbik" rel="nofollow"&gt;@HiMyNameIsUbik&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-most-outstanding-changes-over-the-other-jailbreaks" class="anchor" aria-hidden="true" href="#the-most-outstanding-changes-over-the-other-jailbreaks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The most outstanding changes over the other jailbreaks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;One app to jailbreak all firmwares&lt;/li&gt;
&lt;li&gt;Full-fledged Cydia and Substrate support for ARM64 devices&lt;/li&gt;
&lt;li&gt;Full-fledged Telesphoreo port for ARM64 (Elucubratus)&lt;/li&gt;
&lt;li&gt;No private data shared for diagnostics purposes&lt;/li&gt;
&lt;li&gt;SSH-Only (Dropbear) support&lt;/li&gt;
&lt;li&gt;Options for the user&lt;/li&gt;
&lt;li&gt;Utilities for the user&lt;/li&gt;
&lt;li&gt;No inefficient local jailbreak server (jailbreakd daemon)&lt;/li&gt;
&lt;li&gt;Native Cydia support with support for the iPhone X screen size&lt;/li&gt;
&lt;li&gt;Ability to rejailbreak from the jailbroken state&lt;/li&gt;
&lt;li&gt;Stable kernelspace patches to avoid random crashes caused by kernel data aborts&lt;/li&gt;
&lt;li&gt;Stable userspace patches to avoid random freezes and crashes caused by watchdog timer timeouts&lt;/li&gt;
&lt;li&gt;Local APT repo system integrated in the jailbreak to verify the integrity of the core packages and repair them if they are corrupted&lt;/li&gt;
&lt;li&gt;Extended and improved assertion to prevent unexpected results such as bootloops caused by filesystem corruption&lt;/li&gt;
&lt;li&gt;Better system security, battery life and performance&lt;/li&gt;
&lt;li&gt;Significantly faster Cydia&lt;/li&gt;
&lt;li&gt;Modifications to Cydia were approved by the creator of Cydia (Saurik)&lt;/li&gt;
&lt;li&gt;Fully working debugserver&lt;/li&gt;
&lt;li&gt;No DRM&lt;/li&gt;
&lt;li&gt;No installation restrictions&lt;/li&gt;
&lt;li&gt;Open source&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-switching-from-the-other-jailbreaks" class="anchor" aria-hidden="true" href="#switching-from-the-other-jailbreaks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Switching from the other jailbreaks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Dedicated migration support will be used to switch without losing data&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-support" class="anchor" aria-hidden="true" href="#getting-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting support&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Use the built-in diagnostics tool&lt;/li&gt;
&lt;li&gt;Tweet &lt;a href="https://twitter.com/Pwn20wnd" rel="nofollow"&gt;@pwn20wnd&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-best-practices" class="anchor" aria-hidden="true" href="#best-practices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Best practices&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Turn on the AirPlane Mode before starting the jailbreak&lt;/li&gt;
&lt;li&gt;Turn off Siri before starting the jailbreak&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-source-code" class="anchor" aria-hidden="true" href="#source-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source code&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;This project is completely open source and it will be kept like it in the future&lt;/li&gt;
&lt;li&gt;Any kind of contribution is welcome&lt;/li&gt;
&lt;li&gt;The source code can be found on &lt;a href="https://github.com/pwn20wndstuff"&gt;pwn20wndstuff&lt;/a&gt;'s GitHub account&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-video-tutorial" class="anchor" aria-hidden="true" href="#video-tutorial"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Video tutorial&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://youtu.be/TqHYjLHO0zs" rel="nofollow"&gt;&lt;/a&gt;&lt;a href="https://youtu.be/TqHYjLHO0zs" rel="nofollow"&gt;https://youtu.be/TqHYjLHO0zs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-screenshots" class="anchor" aria-hidden="true" href="#screenshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/pwn20wndstuff/Undecimus/raw/master/Resources/Screenshot-1.PNG"&gt;&lt;img src="https://github.com/pwn20wndstuff/Undecimus/raw/master/Resources/Screenshot-1.PNG" width="281.25" height="609" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/pwn20wndstuff/Undecimus/raw/master/Resources/Screenshot-2.PNG"&gt;&lt;img src="https://github.com/pwn20wndstuff/Undecimus/raw/master/Resources/Screenshot-2.PNG" width="281.25" height="609" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/pwn20wndstuff/Undecimus/raw/master/Resources/Screenshot-3.PNG"&gt;&lt;img src="https://github.com/pwn20wndstuff/Undecimus/raw/master/Resources/Screenshot-3.PNG" width="281.25" height="609" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-changelog" class="anchor" aria-hidden="true" href="#changelog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changelog&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Releases are available at &lt;a href="https://github.com/pwn20wndstuff/Undecimus/releases"&gt;https://github.com/pwn20wndstuff/Undecimus/releases&lt;/a&gt; (Note: rc1-v1.1.4 releases are no longer available)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-special-thanks" class="anchor" aria-hidden="true" href="#special-thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Special Thanks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/i41nbeer" rel="nofollow"&gt;@i41nbeer&lt;/a&gt; for mach_portal, triple_fetch, async_wake, empty_list, multi_path and deja_xnu&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/bazad" rel="nofollow"&gt;@bazad&lt;/a&gt; for voucher_swap and PAC bypass&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/Morpheus______" rel="nofollow"&gt;@Morpheus______&lt;/a&gt; for the QiLin Toolkit (No longer used)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/xerub" rel="nofollow"&gt;@xerub&lt;/a&gt; for the original patchfinder64&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/iBSparkes" rel="nofollow"&gt;@iBSparkes&lt;/a&gt; for the machswap and machswap2&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/stek29" rel="nofollow"&gt;@stek29&lt;/a&gt; for the patchfinder64 additions, unlocknvram, host_get_special_port(4) patch and shenanigans bypass&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/theninjaprawn" rel="nofollow"&gt;@theninjaprawn&lt;/a&gt; for the patchfinder64 additions&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/saurik" rel="nofollow"&gt;@saurik&lt;/a&gt; for Cydia and Substrate&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/FCE365" rel="nofollow"&gt;@FCE365&lt;/a&gt; for the empty_list reliability improvements&lt;/li&gt;
&lt;li&gt;&lt;a href="https://reddit.com/u/Samg_is_a_Ninja" rel="nofollow"&gt;Samg_is_a_ninja&lt;/a&gt; for original UI development&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/DennisBednarz" rel="nofollow"&gt;@DennisBednarz&lt;/a&gt; for original UI design&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/Cryptiiiic" rel="nofollow"&gt;@Cryptiiiic&lt;/a&gt; for testing&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/xanDesign_" rel="nofollow"&gt;@xanDesign_&lt;/a&gt; for testing&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/AppleDry05" rel="nofollow"&gt;@AppleDry05&lt;/a&gt; for testing&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/AyyItzRob" rel="nofollow"&gt;@AyyItzRob&lt;/a&gt; for testing&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/MidnightChip" rel="nofollow"&gt;@MidnightChip&lt;/a&gt; for testing&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/Swag_iOS" rel="nofollow"&gt;@Swag_iOS&lt;/a&gt; for testing&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/jailbreakbuster" rel="nofollow"&gt;@jailbreakbuster&lt;/a&gt; for testing&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/Jakeashacks" rel="nofollow"&gt;@Jakeashacks&lt;/a&gt; for testing&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>pwn20wndstuff</author><guid isPermaLink="false">https://github.com/pwn20wndstuff/Undecimus</guid><pubDate>Mon, 25 Nov 2019 00:21:00 GMT</pubDate></item><item><title>guanzhi/GmSSL #22 in C, This week</title><link>https://github.com/guanzhi/GmSSL</link><description>&lt;p&gt;&lt;i&gt;支持国密SM2/SM3/SM4/SM9/ZUC/SSL的OpenSSL分支&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-about-gmssl" class="anchor" aria-hidden="true" href="#about-gmssl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About GmSSL&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/guanzhi/GmSSL" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ebfcb02880ef5a4d54d364f6c6861fa87bb703ad/68747470733a2f2f7472617669732d63692e6f72672f6775616e7a68692f476d53534c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/guanzhi/GmSSL.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/zhaoxiaomeng/gmssl/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fb8bca4cbb33b0017c0706231c86575ab875cb8d/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f38667277787577616a343639356772712f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/8frwxuwaj4695grq/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GmSSL is an open source cryptographic toolkit that provide first level support of Chinese national cryptographic algorithms and protocols which are specified in the GM/T serial standards. As a branch of the OpenSSL project, GmSSL provides API level compatibility with OpenSSL and maintains all the functionalities. Existing projects such as Apache web server can be easily ported to GmSSL with minor modification and a simple rebuild. Since the first release in late 2014, GmSSL has been selected as one of the six recommended cryptographic projects by Open Source China and the winner of the 2015 Chinese Linux Software Award.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Support &lt;a href="http://gmssl.org/docs/standards.html" rel="nofollow"&gt;Chinese GM/T cryptographic standards&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Support &lt;a href="http://www.sca.gov.cn/sca/zxfw/cpxx.shtml" rel="nofollow"&gt;hardware cryptographic modules from Chinese vendors&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;With commercial friendly open source &lt;a href="http://gmssl.org/docs/licenses.html" rel="nofollow"&gt;license&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Maintained by the &lt;a href="http://infosec.pku.edu.cn" rel="nofollow"&gt;crypto research group of Peking University&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-supported-algorithms" class="anchor" aria-hidden="true" href="#supported-algorithms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Algorithms&lt;/h2&gt;
&lt;p&gt;GmSSL will support all the following GM/T cryptographic algorithms:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SM3 (GM/T 0004-2012): cryptographic hash function with 256-bit digest length.&lt;/li&gt;
&lt;li&gt;SM4 (GM/T 0002-2012): block cipher with 128-bit key length and 128-bit block size, also named SMS4.&lt;/li&gt;
&lt;li&gt;SM2 (GM/T 0003-2012): elliptic curve cryptographic schemes including digital signature scheme, public key encryption, (authenticated) key exchange protocol and one recommended 256-bit prime field curve &lt;code&gt;sm2p256v1&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;SM9 (GM/T 0044-2016): pairing-based cryptographic schemes including identity-based digital signature, encryption, (authenticated) key exchange protocol and one 256-bit recommended BN curve.&lt;/li&gt;
&lt;li&gt;ZUC (GM/T 0001-2012): stream cipher, with 128-EEA3 encryption algorithm and 128-EIA3 integrity algorithm.&lt;/li&gt;
&lt;li&gt;SM1 and SSF33: block ciphers with 128-bit key length and 128-bit block size without public specification, only provided with chip.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GmSSL supports many useful cryptographic algorithms and schemes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Public-key schemes: Paillier, ECIES (Elliptic Curve Integrated Encryption Scheme)&lt;/li&gt;
&lt;li&gt;Pairing-based cryptography: BF-IBE, BB1-IBE&lt;/li&gt;
&lt;li&gt;Block ciphers and modes: Serpent, Speck&lt;/li&gt;
&lt;li&gt;Block cipher modes: FPE (Format-Preserver Encryption)&lt;/li&gt;
&lt;li&gt;OTP (One-Time Password) based on SM3/SM4 (GM/T 0021-2012)&lt;/li&gt;
&lt;li&gt;Encoding: Base58&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;OpenSSL algorithms such as ECDSA, RSA, AES, SHA-1 are all still available in GmSSL.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-gmt-protocols" class="anchor" aria-hidden="true" href="#gmt-protocols"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GM/T Protocols&lt;/h2&gt;
&lt;p&gt;The GM/T standards cover 2 protocols:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SSL VPN Protocol  (GM/T 0024-2014)&lt;/li&gt;
&lt;li&gt;IPSec VPN Protocol (GM/T 0022-2014)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The GM/T 0024-2014 SSL VPN protocol is different from IETF TLS in the follows aspects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Current version of TLS is 1.3 (0x0304) while GM/T SSL version is 1.1 (0x0102).&lt;/li&gt;
&lt;li&gt;The handshake protocol of GM/T SSL is different from TLS handshake.&lt;/li&gt;
&lt;li&gt;There is an optional different record protocol in GM/T SSL designed for VPN applications.&lt;/li&gt;
&lt;li&gt;GM/T SSL has 12 ciphersuites, some of these ciphers do not provide forward secrecy.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GM/T 0024-2014 Ciphersuites:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 1. {0xe0,0x01} GMTLS_SM2DHE_SM2SIGN_WITH_SM1_SM3
 2. {0xe0,0x03} GMTLS_SM2ENC_WITH_SM1_SM3
 3. {0xe0,0x05} GMTLS_SM9DHE_SM9SIGN_WITH_SM1_SM3
 4. {0xe0,0x07} GMTLS_SM9ENC_WITH_SM1_SM3
 5. {0xe0,0x09} GMTLS_RSA_WITH_SM1_SM3
 6. {0xe0,0x0a} GMTLS_RSA_WITH_SM1_SHA1
 7. {0xe0,0x11} GMTLS_SM2DHE_SM2SIGN_WITH_SMS4_SM3
 8. {0xe0,0x13} GMTLS_SM2ENC_WITH_SMS4_SM3
 9. {0xe0,0x15} GMTLS_SM9DHE_SM9SIGN_WITH_SMS4_SM3
10. {0xe0,0x17} GMTLS_SM9ENC_WITH_SMS4_SM3
11. {0xe0,0x19} GMTLS_RSA_WITH_SMS4_SM3
12. {0xe0,0x1a} GMTLS_RSA_WITH_SMS4_SM3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;GmSSL supports the standard TLS 1.2 protocol with SM2/SM3/SM4 ciphersuites and the GM/T SSL VPN protocol and ciphersuites. Currently the following ciphersuites are supported:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ECDHE-SM2-WITH-SMS4-SM3
ECDHE-SM2-WITH-SMS4-SHA256
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-apis" class="anchor" aria-hidden="true" href="#apis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;APIs&lt;/h2&gt;
&lt;p&gt;Except for the native C interface and the &lt;code&gt;gmssl&lt;/code&gt; command line, GmSSL also provide the following interfaces:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Java: crypto, X.509 and SSL API through JNI (Java Native Interface).&lt;/li&gt;
&lt;li&gt;Go: crypto, X.509 and SSL API through CGO.&lt;/li&gt;
&lt;li&gt;SKF C API: GM/T 0016-2012 Smart token cryptography application interface specification.&lt;/li&gt;
&lt;li&gt;SDF C API: GM/T 0018-2012 Interface specifications of cryptography device application.&lt;/li&gt;
&lt;li&gt;SAF C API: GM/T 0019-2012 Universal cryptography service interface specification.&lt;/li&gt;
&lt;li&gt;SOF C/Java API: GM/T 0020-2012 Certificate application integrated service interface specification.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-supported-cryptographic-hardwares" class="anchor" aria-hidden="true" href="#supported-cryptographic-hardwares"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Cryptographic Hardwares&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;USB-Key through the SKF ENGINE and the SKF API.&lt;/li&gt;
&lt;li&gt;PCI-E card through the SDF ENGINE and the SDF API.&lt;/li&gt;
&lt;li&gt;GM Instruction sets (SM3/SM4) through the GMI ENGINE.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;
&lt;p&gt;This short guide describes the build, install and typical usage of the &lt;code&gt;gmssl&lt;/code&gt; command line tool. Visit &lt;a href="http://gmssl.org" rel="nofollow"&gt;http://gmssl.org&lt;/a&gt; for more documents.&lt;/p&gt;
&lt;p&gt;Download (&lt;a href="https://github.com/guanzhi/GmSSL/archive/master.zip"&gt;GmSSL-master.zip&lt;/a&gt;), uncompress it and go to the source code folder. On Linux and OS X, run the following commands:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ./config
$ make
$ sudo make install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After installation you can run &lt;code&gt;gmssl version -a&lt;/code&gt; to print detailed information.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;gmssl&lt;/code&gt; command line tool supports SM2 key generation through &lt;code&gt;ecparam&lt;/code&gt; or &lt;code&gt;genpkey&lt;/code&gt; option, supports SM2 signing and encryption through &lt;code&gt;pkeyutl&lt;/code&gt; option, supports SM3 through &lt;code&gt;sm3&lt;/code&gt; or &lt;code&gt;dgst&lt;/code&gt; option, and supports SM4 through &lt;code&gt;sms4&lt;/code&gt; or &lt;code&gt;enc&lt;/code&gt; option.&lt;/p&gt;
&lt;p&gt;The following are some examples.&lt;/p&gt;
&lt;p&gt;SM3 digest generation:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ echo -n "abc" | gmssl sm3
(stdin)= 66c7f0f462eeedd9d1f2d46bdc10e4e24167c4875cf2f7a2297da02b8f4ba8e0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;SM4 encryption and decryption:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ gmssl sms4 -in README.md -out README.sms4
$ gmssl sms4 -d -in README.sms4&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ZUC/ZUC256 encryption and decryption:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ gmssl zuc -in README.md -out README.zuc
$ gmssl zuc -d -in README.zuc
$ gmssl zuc256 -in README.md -out README.zuc256
$ gmssl zuc256 -d -in README.zuc256&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SM2 private key generation:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ gmssl sm2 -genkey -out skey.pem&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Derive the public key from the generated SM2 private key:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ gmssl sm2 -pubout -in skey.pem -out vkey.pem&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SM2 signature generation and verification:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ gmssl sm2utl -sign -in README.md -inkey skey.pem -out README.md.sig
$ gmssl sm2utl -verify -in README.md -pubin -inkey vkey.pem -sigfile README.md.sig&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Generate SM2 encryption key pair and do SM2 public key encyption/decryption. It should be noted &lt;code&gt;pkeyutl -encrypt&lt;/code&gt; should only be used to encrypt short messages such as session key and passphrase.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ gmssl sm2 -genkey -out dkey.pem
$ gmssl sm2 -pubout -in dkey.pem -out ekey.pem
$ &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Top Secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; gmssl sm2utl -encrypt -pubin -inkey ekey.pem -out ciphertext.sm2
$ gmssl sm2utl -decrypt -inkey dkey.pem -in ciphertext.sm2&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Identity-based encryption with SM9&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Message&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; gmssl pkeyutl -encrypt -pubin -inkey params.pem -pkeyopt id:Alice -out ciphertext.der
$ gmssl pkeyutl -decrypt -inkey sm9key.pem -in ciphertext.der&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Self-signed SM2 certificate generation:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ gmssl req -new -x509 -key skey.pem -out cert.pem&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;TLS/DTLS with SM2 ciphersuites:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ gmssl s_server [-tls1_2&lt;span class="pl-k"&gt;|&lt;/span&gt;-dtls1_2] -port 443 -cipher SM2 -key sm2key.pem -cert sm2cert.pem &lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt;
$ gmssl s_client [-tls1_2&lt;span class="pl-k"&gt;|&lt;/span&gt;-dtls1_2] -connect localhost:443 -cipher SM2 -CAfile cacert.pem&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>guanzhi</author><guid isPermaLink="false">https://github.com/guanzhi/GmSSL</guid><pubDate>Mon, 25 Nov 2019 00:22:00 GMT</pubDate></item><item><title>SoftEtherVPN/SoftEtherVPN #23 in C, This week</title><link>https://github.com/SoftEtherVPN/SoftEtherVPN</link><description>&lt;p&gt;&lt;i&gt;Cross-platform multi-protocol VPN software. Pull requests are welcome. The stable version is available at https://github.com/SoftEtherVPN/SoftEtherVPN_Stable.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-softether-vpn" class="anchor" aria-hidden="true" href="#softether-vpn"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SoftEther VPN&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://ci.appveyor.com/project/softethervpn/softethervpn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ac813da1fcd0dd579f33dcb337a98b79d7aaf18f/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f736f6674657468657276706e2f736f6674657468657276706e3f6272616e63683d6d6173746572267376673d74727565" alt="AppVeyor build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/softethervpn/softethervpn?branch=master&amp;amp;svg=true" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.org/SoftEtherVPN/SoftEtherVPN" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/41183c493ce5745dd2f6849de8866d2b1ae2a17b/68747470733a2f2f7472617669732d63692e6f72672f536f6674457468657256504e2f536f6674457468657256504e2e7376673f6272616e63683d6d6173746572" alt="Travis CI build status" data-canonical-src="https://travis-ci.org/SoftEtherVPN/SoftEtherVPN.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://gitlab.com/SoftEther/SoftEtherVPN/pipelines" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0b8a1ffe504541a685e216e476f333f648f6e555/68747470733a2f2f6769746c61622e636f6d2f536f667445746865722f536f6674457468657256504e2f6261646765732f6d61737465722f6275696c642e737667" alt="gitlab-ci build status" data-canonical-src="https://gitlab.com/SoftEther/SoftEtherVPN/badges/master/build.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://scan.coverity.com/projects/softethervpn-softethervpn" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0068f49d5fea77d5d6b2cae0fa0e715fc892fe1a/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f31363330342f62616467652e737667" alt="Coverity Scan Build Status" data-canonical-src="https://scan.coverity.com/projects/16304/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#softether-vpn"&gt;SoftEther VPN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#board-members-of-this-repository"&gt;BOARD MEMBERS OF THIS REPOSITORY&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#softether-vpn-advantages"&gt;SOFTETHER VPN ADVANTAGES&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#for-ubuntu"&gt;For Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#from-binary-installers"&gt;From binary installers:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-from-source-code"&gt;Build from Source code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#about-html5-based-modern-admin-console-and-json-rpc-api-suite"&gt;About HTML5-based Modern Admin Console and JSON-RPC API Suite&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#built-in-softether-vpn-server-html5-ajax-based-web-administration-console"&gt;Built-in SoftEther VPN Server HTML5 Ajax-based Web Administration Console&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#built-in-softether-server-vpn-json-rpc-api-suite"&gt;Built-in SoftEther Server VPN JSON-RPC API Suite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#to-circumvent-your-governments-firewall-restriction"&gt;TO CIRCUMVENT YOUR GOVERNMENT'S FIREWALL RESTRICTION&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#source-code-contribution"&gt;SOURCE CODE CONTRIBUTION&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dear-security-experts"&gt;DEAR SECURITY EXPERTS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SoftEther VPN (Developer Edition Master Repository)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An Open-Source Cross-platform Multi-protocol VPN Program
&lt;a href="http://www.softether.org/" rel="nofollow"&gt;http://www.softether.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This repository has experimental codes. Pull requests are welcome.&lt;/p&gt;
&lt;p&gt;Stable Edition is available on
&lt;a href="https://github.com/SoftEtherVPN/SoftEtherVPN_Stable"&gt;https://github.com/SoftEtherVPN/SoftEtherVPN_Stable&lt;/a&gt;
which the non-developer user can stable use.&lt;/p&gt;
&lt;p&gt;Source code packages (.zip and .tar.gz) and binary files of Stable Edition are also available:&lt;br&gt;
&lt;a href="http://www.softether-download.com/" rel="nofollow"&gt;http://www.softether-download.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright (c) all contributors on SoftEther VPN project in GitHub.
Copyright (c) Daiyuu Nobori, SoftEther Project at University of Tsukuba, and SoftEther Corporation.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The development of SoftEther VPN was supported by the MITOH Project,
a research and development project by Japanese Government,
subsidized by Ministry of Economy, Trade and Industry of Japan,
administrated by Information Promotion Agency.
&lt;a href="https://www.ipa.go.jp/english/humandev/" rel="nofollow"&gt;https://www.ipa.go.jp/english/humandev/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="resources/icons8.png"&gt;&lt;img src="resources/icons8.png" alt="https://icons8.com" title="Icons8" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://icons8.com" rel="nofollow"&gt;Icons8&lt;/a&gt; kindly supported the project by gifting a license which allows to edit and redistribute their icons.&lt;/p&gt;
&lt;p&gt;Please note that you are not allowed to redistribute those icons outside of this repository.&lt;/p&gt;
&lt;p&gt;The developers of SoftEther VPN love Icons8's work and kindly ask the users to support them as much as possible.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SoftEther VPN ("SoftEther" means "Software Ethernet") is one of the
world's most powerful and easy-to-use multi-protocol VPN software.&lt;/p&gt;
&lt;p&gt;SoftEther VPN runs on Windows, Linux, Mac, FreeBSD and Solaris.&lt;/p&gt;
&lt;p&gt;SoftEther VPN supports most of widely-used VPN protocols
including SSL-VPN, OpenVPN, IPsec, L2TP, MS-SSTP, L2TPv3 and EtherIP
by the single SoftEther VPN Server program.&lt;/p&gt;
&lt;p&gt;More details on &lt;a href="http://www.softether.org/" rel="nofollow"&gt;http://www.softether.org/&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-board-members-of-this-repository" class="anchor" aria-hidden="true" href="#board-members-of-this-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;BOARD MEMBERS OF THIS REPOSITORY&lt;/h1&gt;
&lt;p&gt;Daiyuu Nobori (Since Jan 2, 2014)
&lt;a href="https://github.com/dnobori"&gt;https://github.com/dnobori&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Moataz Elmasry (Since Nov 6, 2017)
&lt;a href="https://github.com/moatazelmasry2"&gt;https://github.com/moatazelmasry2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Zulyandri Zardi (Since Nov 6, 2017)
&lt;a href="https://github.com/zulzardi"&gt;https://github.com/zulzardi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Alex Maslakov (Since Nov 6, 2017)
&lt;a href="https://github.com/GildedHonour"&gt;https://github.com/GildedHonour&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Davide Beatrici (Since Jul 21, 2018)
&lt;a href="https://github.com/davidebeatrici"&gt;https://github.com/davidebeatrici&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ilya Shipitsin (Since Jul 21, 2018)
&lt;a href="https://github.com/chipitsine"&gt;https://github.com/chipitsine&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-softether-vpn-advantages" class="anchor" aria-hidden="true" href="#softether-vpn-advantages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SOFTETHER VPN ADVANTAGES&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Supporting all popular VPN protocols by the single VPN server:
SSL-VPN (HTTPS)
OpenVPN
IPsec
L2TP
MS-SSTP
L2TPv3
EtherIP&lt;/li&gt;
&lt;li&gt;Free and open-source software.&lt;/li&gt;
&lt;li&gt;Easy to establish both remote-access and site-to-site VPN.&lt;/li&gt;
&lt;li&gt;SSL-VPN Tunneling on HTTPS to pass through NATs and firewalls.&lt;/li&gt;
&lt;li&gt;Revolutionary VPN over ICMP and VPN over DNS features.&lt;/li&gt;
&lt;li&gt;Resistance to highly-restricted firewall.&lt;/li&gt;
&lt;li&gt;Ethernet-bridging (L2) and IP-routing (L3) over VPN.&lt;/li&gt;
&lt;li&gt;Embedded dynamic-DNS and NAT-traversal so that no static nor
fixed IP address is required.&lt;/li&gt;
&lt;li&gt;AES 256-bit and RSA 4096-bit encryptions.&lt;/li&gt;
&lt;li&gt;Sufficient security features such as logging and firewall inner
VPN tunnel.&lt;/li&gt;
&lt;li&gt;User authentication with RADIUS and NT domain controllers.&lt;/li&gt;
&lt;li&gt;User authentication with X.509 client certificate.&lt;/li&gt;
&lt;li&gt;Packet logging.&lt;/li&gt;
&lt;li&gt;1Gbps-class high-speed throughput performance with low memory and
CPU usage.&lt;/li&gt;
&lt;li&gt;Windows, Linux, Mac, Android, iPhone, iPad and Windows Phone are
supported.&lt;/li&gt;
&lt;li&gt;The OpenVPN clone function supports legacy OpenVPN clients.&lt;/li&gt;
&lt;li&gt;IPv4 / IPv6 dual-stack.&lt;/li&gt;
&lt;li&gt;The VPN server runs on Windows, Linux, FreeBSD, Solaris and Mac OS X.&lt;/li&gt;
&lt;li&gt;Configure All settings on GUI.&lt;/li&gt;
&lt;li&gt;Multi-languages (English, Japanese and Simplified-Chinese).&lt;/li&gt;
&lt;li&gt;No memory leaks. High quality stable codes, intended for long-term runs.
We always verify that there are no memory or resource leaks before
releasing the build.&lt;/li&gt;
&lt;li&gt;More details at &lt;a href="http://www.softether.org/" rel="nofollow"&gt;http://www.softether.org/&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-for-ubuntu" class="anchor" aria-hidden="true" href="#for-ubuntu"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;For Ubuntu&lt;/h2&gt;
&lt;p&gt;Launchpad PPA maintained by &lt;a href="https://github.com/paskal"&gt;Dmitry Verkhoturov&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://code.launchpad.net/~paskal-07/+archive/ubuntu/softethervpn" rel="nofollow"&gt;Daily builds&lt;/a&gt; (latest released tag)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://code.launchpad.net/~paskal-07/+archive/ubuntu/softethervpn-nightly" rel="nofollow"&gt;Nightly builds&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-from-binary-installers" class="anchor" aria-hidden="true" href="#from-binary-installers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;From binary installers:&lt;/h2&gt;
&lt;p&gt;Those can be found under &lt;a href="http://www.softether-download.com/" rel="nofollow"&gt;http://www.softether-download.com/&lt;/a&gt;
There you can also find SoftEtherVPN source code in zip and tar formats.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-build-from-source-code" class="anchor" aria-hidden="true" href="#build-from-source-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build from Source code&lt;/h2&gt;
&lt;p&gt;see &lt;a href="src/BUILD_UNIX.md"&gt;BUILD_UNIX&lt;/a&gt; or &lt;a href="src/BUILD_WINDOWS.md"&gt;BUILD_WINDOWS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There are two flavours of SoftEtherVPN source code:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Unstable. Found under &lt;a href="https://github.com/SoftEtherVPN/SoftEtherVPN"&gt;https://github.com/SoftEtherVPN/SoftEtherVPN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Stable. Found under &lt;a href="https://github.com/SoftEtherVPN/SoftEtherVPN_Stable"&gt;https://github.com/SoftEtherVPN/SoftEtherVPN_Stable&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;&lt;a id="user-content-about-html5-based-modern-admin-console-and-json-rpc-api-suite" class="anchor" aria-hidden="true" href="#about-html5-based-modern-admin-console-and-json-rpc-api-suite"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About HTML5-based Modern Admin Console and JSON-RPC API Suite&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-built-in-softether-vpn-server-html5-ajax-based-web-administration-console" class="anchor" aria-hidden="true" href="#built-in-softether-vpn-server-html5-ajax-based-web-administration-console"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Built-in SoftEther VPN Server HTML5 Ajax-based Web Administration Console&lt;/h2&gt;
&lt;p&gt;We are developing the HTML5 Ajax-based Web Administration Console (currently very limited, under construction) in the embedded HTTPS server on the SoftEther VPN Server.&lt;/p&gt;
&lt;p&gt;Access to the following URL from your favorite web browser.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://&amp;lt;vpn_server_hostname&amp;gt;:&amp;lt;port&amp;gt;/admin/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For example if your VPN Server is running as the port 5555 on the host at 192.168.0.1, you can access to the web console by:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://192.168.0.1:5555/admin/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note: Your HTML5 development contribution is very appreciated. The current HTML5 pages are written by Daiyuu Nobori (the core developer of SoftEther VPN). He is obviously lack of HTML5 development ability. Please kindly consider to contribute for SoftEther VPN's development on GitHub. Your code will help every people running SoftEther VPN Server.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-built-in-softether-server-vpn-json-rpc-api-suite" class="anchor" aria-hidden="true" href="#built-in-softether-server-vpn-json-rpc-api-suite"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Built-in SoftEther Server VPN JSON-RPC API Suite&lt;/h2&gt;
&lt;p&gt;The API Suite allows you to easily develop your original SoftEther VPN Server management application to control the VPN Server (e.g. creating users, adding Virtual Hubs, disconnecting a specified VPN sessions).&lt;/p&gt;
&lt;p&gt;You can access to the &lt;a href="https://github.com/SoftEtherVPN/SoftEtherVPN/tree/master/developer_tools/vpnserver-jsonrpc-clients/"&gt;latest SoftEther VPN Server JSON-RPC Document on GitHub.&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Almost all control APIs, which the VPN Server provides, are available as JSON-RPC API.
You can write your own VPN Server management application in your favorite languages (JavaScript, TypeScript, Java, Python, Ruby, C#, ... etc.)&lt;/li&gt;
&lt;li&gt;If you are planning to develop your own VPN cloud service, the JSON-RPC API is the best choice to realize the automated operations for the VPN Server.&lt;/li&gt;
&lt;li&gt;No need to use any specific API client library since all APIs are provided on the JSON-RPC 2.0 Specification. You can use your favorite JSON and HTTPS client library to call any of all APIs in your pure runtime environment.&lt;/li&gt;
&lt;li&gt;Also, the SoftEther VPN Project provides high-quality JSON-RPC client stub libraries which define all of the API client stub codes. These libraries are written in C#, JavaScript and TypeScript. The Node.js Client Library for VPN Server RPC (vpnrpc) package is also available.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-to-circumvent-your-governments-firewall-restriction" class="anchor" aria-hidden="true" href="#to-circumvent-your-governments-firewall-restriction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TO CIRCUMVENT YOUR GOVERNMENT'S FIREWALL RESTRICTION&lt;/h1&gt;
&lt;p&gt;Because SoftEther VPN is overly strong tool to build a VPN tunnel,
some censorship governments want to block your access to the source code
of SoftEther VPN, by abusing their censorship firewalls.&lt;/p&gt;
&lt;p&gt;To circumvent your censor's unjust restriction,
SoftEther VPN Project distributes the up-to-date source-code
on all the following open-source repositories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GitHub
&lt;a href="https://github.com/SoftEtherVPN/SoftEtherVPN/"&gt;https://github.com/SoftEtherVPN/SoftEtherVPN/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/SoftEtherVPN/SoftEtherVPN.git
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;GitLab (mirrored from GitHub)
&lt;a href="https://gitlab.com/SoftEther/SoftEtherVPN/" rel="nofollow"&gt;https://gitlab.com/SoftEther/SoftEtherVPN/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;$ git clone https://gitlab.com/SoftEther/SoftEtherVPN.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We hope that you can reach one of the above URLs at least!&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-source-code-contribution" class="anchor" aria-hidden="true" href="#source-code-contribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SOURCE CODE CONTRIBUTION&lt;/h1&gt;
&lt;p&gt;Your contribution to SoftEther VPN Project is much appreciated.
Please send patches to us through GitHub.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-dear-security-experts" class="anchor" aria-hidden="true" href="#dear-security-experts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DEAR SECURITY EXPERTS&lt;/h1&gt;
&lt;p&gt;If you find a bug or a security vulnerability please kindly inform us
about the problem immediately so that we can fix the security problem
to protect a lot of users around the world as soon as possible.&lt;/p&gt;
&lt;p&gt;Our e-mail address for security reports is:
&lt;strong&gt;softether-vpn-security at softether.org&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Please note that the above e-mail address is not a technical support
inquiry address. If you need technical assistance, please visit
&lt;a href="http://www.softether.org/" rel="nofollow"&gt;http://www.softether.org/&lt;/a&gt; and ask your question on the users forum.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>SoftEtherVPN</author><guid isPermaLink="false">https://github.com/SoftEtherVPN/SoftEtherVPN</guid><pubDate>Mon, 25 Nov 2019 00:23:00 GMT</pubDate></item><item><title>edenhill/librdkafka #24 in C, This week</title><link>https://github.com/edenhill/librdkafka</link><description>&lt;p&gt;&lt;i&gt;The Apache Kafka C/C++ library&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-librdkafka---the-apache-kafka-cc-client-library" class="anchor" aria-hidden="true" href="#librdkafka---the-apache-kafka-cc-client-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;librdkafka - the Apache Kafka C/C++ client library&lt;/h1&gt;
&lt;p&gt;Copyright (c) 2012-2019, &lt;a href="http://www.edenhill.se/" rel="nofollow"&gt;Magnus Edenhill&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/edenhill/librdkafka"&gt;https://github.com/edenhill/librdkafka&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;librdkafka&lt;/strong&gt; is a C library implementation of the
&lt;a href="https://kafka.apache.org/" rel="nofollow"&gt;Apache Kafka&lt;/a&gt; protocol, providing Producer, Consumer
and Admin clients. It was designed with message delivery reliability
and high performance in mind, current figures exceed 1 million msgs/second for
the producer and 3 million msgs/second for the consumer.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;librdkafka&lt;/strong&gt; is licensed under the 2-clause BSD license.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;High-level producer&lt;/li&gt;
&lt;li&gt;High-level balanced KafkaConsumer (requires broker &amp;gt;= 0.9)&lt;/li&gt;
&lt;li&gt;Simple (legacy) consumer&lt;/li&gt;
&lt;li&gt;Admin client&lt;/li&gt;
&lt;li&gt;Compression: snappy, gzip, lz4, zstd&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edenhill/librdkafka/wiki/Using-SSL-with-librdkafka"&gt;SSL&lt;/a&gt; support&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edenhill/librdkafka/wiki/Using-SASL-with-librdkafka"&gt;SASL&lt;/a&gt; (GSSAPI/Kerberos/SSPI, PLAIN, SCRAM, OAUTHBEARER) support&lt;/li&gt;
&lt;li&gt;Full list of &lt;a href="INTRODUCTION.md#supported-kips"&gt;supported KIPs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Broker version support: &amp;gt;=0.8 (see &lt;a href="INTRODUCTION.md#broker-version-compatibility"&gt;Broker version compatibility&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Guaranteed API stability for C &amp;amp; C++ APIs (ABI safety guaranteed for C)&lt;/li&gt;
&lt;li&gt;&lt;a href="STATISTICS.md"&gt;Statistics&lt;/a&gt; metrics&lt;/li&gt;
&lt;li&gt;Debian package: librdkafka1 and librdkafka-dev in Debian and Ubuntu&lt;/li&gt;
&lt;li&gt;RPM package: librdkafka and librdkafka-devel&lt;/li&gt;
&lt;li&gt;Gentoo package: dev-libs/librdkafka&lt;/li&gt;
&lt;li&gt;Portable: runs on Linux, OSX, Win32, Solaris, FreeBSD, AIX, ...&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Public API in &lt;a href="src/rdkafka.h"&gt;C header&lt;/a&gt; and &lt;a href="src-cpp/rdkafkacpp.h"&gt;C++ header&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Introduction and manual in &lt;a href="https://github.com/edenhill/librdkafka/blob/master/INTRODUCTION.md"&gt;INTRODUCTION.md&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Configuration properties in
&lt;a href="https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md"&gt;CONFIGURATION.md&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Statistics metrics in &lt;a href="https://github.com/edenhill/librdkafka/blob/master/STATISTICS.md"&gt;STATISTICS.md&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edenhill/librdkafka/wiki"&gt;Frequently asked questions&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: The &lt;code&gt;master&lt;/code&gt; branch is actively developed, use latest &lt;a href="https://github.com/edenhill/librdkafka/releases"&gt;release&lt;/a&gt; for production use.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-installing-prebuilt-packages" class="anchor" aria-hidden="true" href="#installing-prebuilt-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing prebuilt packages&lt;/h2&gt;
&lt;p&gt;On Mac OSX, install librdkafka with homebrew:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew install librdkafka&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On Debian and Ubuntu, install librdkafka from the Confluent APT repositories,
see instructions &lt;a href="https://docs.confluent.io/current/installation/installing_cp/deb-ubuntu.html#get-the-software" rel="nofollow"&gt;here&lt;/a&gt; and then install librdkafka:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ apt install librdkafka-dev&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On RedHat, CentOS, Fedora, install librdkafka from the Confluent YUM repositories,
instructions &lt;a href="https://docs.confluent.io/current/installation/installing_cp/rhel-centos.html#get-the-software" rel="nofollow"&gt;here&lt;/a&gt; and then install librdkafka:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ yum install librdkafka-devel&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On Windows, reference &lt;a href="https://www.nuget.org/packages/librdkafka.redist/" rel="nofollow"&gt;librdkafka.redist&lt;/a&gt; NuGet package in your Visual Studio project.&lt;/p&gt;
&lt;p&gt;For other platforms, follow the source building instructions below.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-build-from-source" class="anchor" aria-hidden="true" href="#build-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build from source&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;The GNU toolchain
GNU make
pthreads
zlib-dev (optional, for gzip compression support)
libssl-dev (optional, for SSL and SASL SCRAM support)
libsasl2-dev (optional, for SASL GSSAPI support)
libzstd-dev (optional, for ZStd compression support)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Static linking of ZStd (requires zstd &amp;gt;= 1.2.1) in the producer
enables encoding the original size in the compression frame header,
which will speed up the consumer.
Use &lt;code&gt;STATIC_LIB_zstd=/path/to/libzstd.a ./configure --enable-static&lt;/code&gt;
to enable static ZStd linking.
MacOSX example:
&lt;code&gt;STATIC_LIB_zstd=$(brew ls -v zstd | grep libzstd.a$) ./configure --enable-static&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;  ./configure
  # Or, to automatically install dependencies using the system's package manager:
  # ./configure --install-deps
  # Or, build dependencies from source:
  # ./configure --install-deps --source-deps-only

  make
  sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: See &lt;a href="README.win32"&gt;README.win32&lt;/a&gt; for instructions how to build
on Windows with Microsoft Visual Studio.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: See &lt;a href="packaging/cmake/README.md"&gt;CMake instructions&lt;/a&gt; for experimental
CMake build (unsupported).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage-in-code" class="anchor" aria-hidden="true" href="#usage-in-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage in code&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Refer to the &lt;a href="examples/"&gt;examples directory&lt;/a&gt; for code using:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Producers: basic producers, idempotent producers&lt;/li&gt;
&lt;li&gt;Consumers: basic consumers, reading batches of messages&lt;/li&gt;
&lt;li&gt;Performance tester&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;Refer to the &lt;a href="https://github.com/confluentinc/examples/tree/master/clients/cloud/c"&gt;examples GitHub repo&lt;/a&gt; for code connecting to a cloud streaming data service based on Apache Kafka&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Link your program with &lt;code&gt;-lrdkafka&lt;/code&gt; (C) or &lt;code&gt;-lrdkafka++&lt;/code&gt; (C++).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-commercial-support" class="anchor" aria-hidden="true" href="#commercial-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commercial support&lt;/h2&gt;
&lt;p&gt;Commercial support is available from &lt;a href="https://www.confluent.io/" rel="nofollow"&gt;Confluent Inc&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community-support" class="anchor" aria-hidden="true" href="#community-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community support&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Only the &lt;a href="https://github.com/edenhill/librdkafka/releases"&gt;last official release&lt;/a&gt; is supported for community members.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;File bug reports, feature requests and questions using
&lt;a href="https://github.com/edenhill/librdkafka/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Questions and discussions are also welcome on the &lt;a href="https://launchpass.com/confluentcommunity" rel="nofollow"&gt;Confluent Community slack&lt;/a&gt; #clients channel, or irc.freenode.org #apache-kafka channel.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-language-bindings" class="anchor" aria-hidden="true" href="#language-bindings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Language bindings&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;C#/.NET: &lt;a href="https://github.com/confluentinc/confluent-kafka-dotnet"&gt;confluent-kafka-dotnet&lt;/a&gt; (based on &lt;a href="https://github.com/ah-/rdkafka-dotnet"&gt;rdkafka-dotnet&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;C++: &lt;a href="https://github.com/mfontanini/cppkafka"&gt;cppkafka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Common Lisp: &lt;a href="https://github.com/SahilKang/cl-rdkafka"&gt;cl-rdkafka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;D (C-like): &lt;a href="https://github.com/DlangApache/librdkafka/"&gt;librdkafka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;D (C++-like): &lt;a href="https://github.com/tamediadigital/librdkafka-d"&gt;librdkafkad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Erlang: &lt;a href="https://github.com/silviucpp/erlkaf"&gt;erlkaf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Go: &lt;a href="https://github.com/confluentinc/confluent-kafka-go"&gt;confluent-kafka-go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Haskell (kafka, conduit, avro, schema registry): &lt;a href="https://github.com/haskell-works/hw-kafka"&gt;hw-kafka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Lua: &lt;a href="https://github.com/mistsv/luardkafka"&gt;luardkafka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Node.js: &lt;a href="https://github.com/Blizzard/node-rdkafka"&gt;node-rdkafka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OCaml: &lt;a href="https://github.com/didier-wenzek/ocaml-kafka"&gt;ocaml-kafka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Perl: &lt;a href="https://github.com/bookingcom/perl-Net-Kafka"&gt;Net::Kafka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;PHP: &lt;a href="https://github.com/EVODelavega/phpkafka"&gt;phpkafka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;PHP: &lt;a href="https://github.com/arnaud-lb/php-rdkafka"&gt;php-rdkafka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Python: &lt;a href="https://github.com/confluentinc/confluent-kafka-python"&gt;confluent-kafka-python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Python: &lt;a href="https://github.com/Parsely/pykafka"&gt;PyKafka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ruby: &lt;a href="https://github.com/reiseburo/hermann"&gt;Hermann&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ruby: &lt;a href="https://github.com/appsignal/rdkafka-ruby"&gt;rdkafka-ruby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Rust: &lt;a href="https://github.com/fede1024/rust-rdkafka"&gt;rust-rdkafka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tcl: &lt;a href="https://github.com/flightaware/kafkatcl"&gt;KafkaTcl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Swift: &lt;a href="https://github.com/PerfectlySoft/Perfect-Kafka"&gt;Perfect-Kafka&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-users-of-librdkafka" class="anchor" aria-hidden="true" href="#users-of-librdkafka"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Users of librdkafka&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edenhill/kafkacat"&gt;kafkacat&lt;/a&gt; - Apache Kafka swiss army knife&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wikimedia/varnishkafka"&gt;Wikimedia's varnishkafka&lt;/a&gt; - Varnish cache web log producer&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wikimedia/analytics-kafkatee"&gt;Wikimedia's kafkatee&lt;/a&gt; - Kafka multi consumer with filtering and fanout&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.rsyslog.com" rel="nofollow"&gt;rsyslog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.syslog-ng.com" rel="nofollow"&gt;syslog-ng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://collectd.org" rel="nofollow"&gt;collectd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Qihoo360/logkafka"&gt;logkafka&lt;/a&gt; - Collect logs and send to Kafka&lt;/li&gt;
&lt;li&gt;&lt;a href="https://redborder.com" rel="nofollow"&gt;redBorder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.headweb.com/" rel="nofollow"&gt;Headweb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Produban/log2kafka"&gt;Produban's log2kafka&lt;/a&gt; - Web log producer&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yazgoo/fuse_kafka"&gt;fuse_kafka&lt;/a&gt; - FUSE file system layer&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Rafflecopter/node-kafkacat"&gt;node-kafkacat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ovh.com" rel="nofollow"&gt;OVH&lt;/a&gt; - &lt;a href="https://www.slideshare.net/hugfrance/hugfr-6-oct2014ovhantiddos" rel="nofollow"&gt;AntiDDOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.otto.de" rel="nofollow"&gt;otto.de&lt;/a&gt;'s &lt;a href="https://github.com/otto-de/trackrdrd"&gt;trackdrd&lt;/a&gt; - Varnish log reader&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microwish"&gt;Microwish&lt;/a&gt; has a range of Kafka utilites for log aggregation, HDFS integration, etc.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/weiboad/aidp"&gt;aidp&lt;/a&gt; - kafka consumer embedded Lua scripting language in data process framework&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yandex/ClickHouse"&gt;Yandex ClickHouse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nxlog.co/" rel="nofollow"&gt;NXLog&lt;/a&gt; - Enterprise logging system, Kafka input/output plugin.&lt;/li&gt;
&lt;li&gt;large unnamed financial institutions&lt;/li&gt;
&lt;li&gt;and many more..&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Let &lt;a href="mailto:rdkafka@edenhill.se"&gt;me&lt;/a&gt; know if you are using librdkafka&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>edenhill</author><guid isPermaLink="false">https://github.com/edenhill/librdkafka</guid><pubDate>Mon, 25 Nov 2019 00:24:00 GMT</pubDate></item><item><title>obsproject/obs-studio #25 in C, This week</title><link>https://github.com/obsproject/obs-studio</link><description>&lt;p&gt;&lt;i&gt;OBS Studio - Free and open source software for live streaming and screen recording&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body rst" data-path="README.rst"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-obs-studio-httpsobsprojectcom" class="anchor" aria-hidden="true" href="#obs-studio-httpsobsprojectcom"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OBS Studio &amp;lt;&lt;a href="https://obsproject.com" rel="nofollow"&gt;https://obsproject.com&lt;/a&gt;&amp;gt;&lt;/h1&gt;
&lt;a href="https://travis-ci.org/obsproject/obs-studio" rel="nofollow"&gt;&lt;img alt="OBS Studio Build Status - Travis CI" src="https://camo.githubusercontent.com/1ebda506cba69b37228f9ae4f66713ec69e4be53/68747470733a2f2f7472617669732d63692e6f72672f6f627370726f6a6563742f6f62732d73747564696f2e7376673f6272616e63683d6d6173746572" data-canonical-src="https://travis-ci.org/obsproject/obs-studio.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/jp9000/obs-studio/branch/master" rel="nofollow"&gt;&lt;img alt="OBS Studio Build Status - AppVeyor CI" src="https://camo.githubusercontent.com/754f151b942d11d939533994d30bb2514c36401e/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f6f627370726f6a6563742f6f62732d73747564696f3f6272616e63683d6d6173746572267376673d74727565" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/obsproject/obs-studio?branch=master&amp;amp;svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dev.azure.com/obsjim/obsjim/_build/latest?definitionId=1&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img alt="OBS Studio Build Status - Azure Pipelines" src="https://camo.githubusercontent.com/574b7bb0cd45ba4f951dbb9f4f3543edb8a7ac59/68747470733a2f2f6465762e617a7572652e636f6d2f6f62736a696d2f6f62736a696d2f5f617069732f6275696c642f7374617475732f6f627370726f6a6563742e6f62732d73747564696f3f6272616e63684e616d653d6d6173746572" data-canonical-src="https://dev.azure.com/obsjim/obsjim/_apis/build/status/obsproject.obs-studio?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://obsproject.com/discord" rel="nofollow"&gt;&lt;img alt="OBS Studio Discord Server" src="https://camo.githubusercontent.com/6b2a4eeb169aa4b4fda8bb7553301cad7f917305/68747470733a2f2f646973636f72646170702e636f6d2f6170692f6775696c64732f3334383937333030363538313932333834302f7769646765742e706e673f7374796c653d736869656c64" data-canonical-src="https://discordapp.com/api/guilds/348973006581923840/widget.png?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://crowdin.com/project/obs-studio" rel="nofollow"&gt;&lt;img alt="OBS Studio Translation Project Progress" src="https://camo.githubusercontent.com/fb154095e0461d689f02ded0ac6ab5ddeab3c68c/68747470733a2f2f64333232637174353834626f346f2e636c6f756466726f6e742e6e65742f6f62732d73747564696f2f6c6f63616c697a65642e737667" data-canonical-src="https://d322cqt584bo4o.cloudfront.net/obs-studio/localized.svg" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a name="user-content-what-is-obs-studio"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-obs-studio" class="anchor" aria-hidden="true" href="#what-is-obs-studio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is OBS Studio?&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;OBS Studio is software designed for capturing, compositing, encoding,
recording, and streaming video content, efficiently.&lt;/p&gt;
&lt;p&gt;It's distributed under the GNU General Public License v2 (or any later
version) - see the accompanying COPYING file for more details.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a name="user-content-quick-links"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-quick-links" class="anchor" aria-hidden="true" href="#quick-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Links&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Website: &lt;a href="https://obsproject.com" rel="nofollow"&gt;https://obsproject.com&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Help/Documentation/Guides: &lt;a href="https://github.com/obsproject/obs-studio/wiki"&gt;https://github.com/obsproject/obs-studio/wiki&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Forums: &lt;a href="https://obsproject.com/forum/" rel="nofollow"&gt;https://obsproject.com/forum/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Build Instructions: &lt;a href="https://github.com/obsproject/obs-studio/wiki/Install-Instructions"&gt;https://github.com/obsproject/obs-studio/wiki/Install-Instructions&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Developer/API Documentation: &lt;a href="https://obsproject.com/docs" rel="nofollow"&gt;https://obsproject.com/docs&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Donating/backing/sponsoring: &lt;a href="https://obsproject.com/contribute" rel="nofollow"&gt;https://obsproject.com/contribute&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Bug Tracker: &lt;a href="https://obsproject.com/mantis/" rel="nofollow"&gt;https://obsproject.com/mantis/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(Note: The bug tracker is linked to forum accounts.  To use the bug
tracker, log in to a forum account)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;a name="user-content-contributing"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;If you would like to help fund or sponsor the project, you can do so
via &lt;a href="https://www.patreon.com/obsproject" rel="nofollow"&gt;Patreon&lt;/a&gt;, &lt;a href="https://opencollective.com/obsproject" rel="nofollow"&gt;OpenCollective&lt;/a&gt;, or &lt;a href="https://www.paypal.me/obsproject" rel="nofollow"&gt;PayPal&lt;/a&gt;.  See our &lt;a href="https://obsproject.com/contribute" rel="nofollow"&gt;contribute page&lt;/a&gt; for more information.&lt;/li&gt;
&lt;li&gt;If you wish to contribute code to the project, please make sure to
read the coding and commit guidelines:
&lt;a href="https://github.com/obsproject/obs-studio/blob/master/CONTRIBUTING.rst"&gt;https://github.com/obsproject/obs-studio/blob/master/CONTRIBUTING.rst&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Developer/API documentation can be found here:
&lt;a href="https://obsproject.com/docs" rel="nofollow"&gt;https://obsproject.com/docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If you wish to contribute translations, do not submit pull requests.
Instead, please use Crowdin.  For more information read this thread:
&lt;a href="https://obsproject.com/forum/threads/how-to-contribute-translations-for-obs.16327/" rel="nofollow"&gt;https://obsproject.com/forum/threads/how-to-contribute-translations-for-obs.16327/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Other ways to contribute are by helping people out with support on
our forums or in our community chat.  Please limit support to topics
you fully understand -- bad advice is worse than no advice.  When it
comes to something that you don't fully know or understand, please
defer to the official help or official channels.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;/article&gt;&lt;/div&gt;</description><author>obsproject</author><guid isPermaLink="false">https://github.com/obsproject/obs-studio</guid><pubDate>Mon, 25 Nov 2019 00:25:00 GMT</pubDate></item></channel></rss>